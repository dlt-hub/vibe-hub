resources:
- name: monitors
  endpoint:
    path: /monitors
    method: GET
    data_selector: data
- name: msp_customers
  endpoint:
    path: /short/msp/customers
    method: GET
    data_selector: data
- name: business_units
  endpoint:
    path: /short/bu/business_units
    method: GET
    data_selector: data
- name: monitors
  endpoint:
    path: /monitors
    method: GET
    data_selector: data
- name: device_key
  endpoint:
    path: /device_key
    method: GET
    data_selector: data
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: message
- name: APM Applications
  endpoint:
    path: /apm/applications
    method: GET
- name: APM Instances
  endpoint:
    path: /apm/instances
    method: GET
- name: APM Metrics
  endpoint:
    path: /apm/metrics
    method: GET
- name: APM Traces
  endpoint:
    path: /apm/traces
    method: GET
- name: APM Reports
  endpoint:
    path: /apm/reports
    method: GET
- name: APM JVM / IIS metrics
  endpoint:
    path: /apm/jvm-iis-metrics
    method: GET
- name: APM Agent Configurations
  endpoint:
    path: /apm/agent-configurations
    method: GET
- name: RUM Applications
  endpoint:
    path: /rum/applications
    method: GET
- name: RUM Application Metrics
  endpoint:
    path: /rum/application-metrics
    method: GET
- name: RUM Application - Top 10 report
  endpoint:
    path: /rum/top-10-report
    method: GET
- name: RUM Application - Top N report
  endpoint:
    path: /rum/top-n-report
    method: GET
- name: RUM Application Graph Data
  endpoint:
    path: /rum/application-graph-data
    method: GET
- name: RUM Application - individual transaction details
  endpoint:
    path: /rum/individual-transaction-details
    method: GET
- name: RUM JS Errors
  endpoint:
    path: /rum/js-errors
    method: GET
- name: RUM Resources
  endpoint:
    path: /rum/resources
    method: GET
- name: On-Premise Poller
  endpoint:
    path: /on-premise-poller
    method: GET
- name: On-Premise Poller Group
  endpoint:
    path: /on-premise-poller-group
    method: GET
- name: connect
  endpoint:
    path: /connect
    method: GET
    data_selector: records
- name: EKS_NAMESPACE
  endpoint:
    path: /eks/namespace
    method: GET
    data_selector: namespace
    params: {}
- name: EKS_NODE
  endpoint:
    path: /eks/node
    method: GET
    data_selector: node
    params: {}
- name: AMQ
  endpoint:
    path: /amq
    method: GET
    data_selector: amq
    params: {}
- name: AMQ_TOPIC
  endpoint:
    path: /amq/topic
    method: GET
    data_selector: topic
    params: {}
- name: AMQ_QUEUE
  endpoint:
    path: /amq/queue
    method: GET
    data_selector: queue
    params: {}
- name: AMQ_NC
  endpoint:
    path: /amq/nc
    method: GET
    data_selector: nc
    params: {}
- name: LIGHTSAIL_DATABASE
  endpoint:
    path: /lightsail/database
    method: GET
    data_selector: database
    params: {}
- name: LIGHTSAIL_LB
  endpoint:
    path: /lightsail/lb
    method: GET
    data_selector: lb
    params: {}
- name: STORAGEGATEWAY
  endpoint:
    path: /storage/gateway
    method: GET
    data_selector: gateway
    params: {}
- name: glue_job_metrics
  endpoint:
    path: /metrics/glue-job
    method: GET
    data_selector: records
- name: Anomaly Severity Constants
  endpoint:
    path: /anomaly/severity/constants
    method: GET
    data_selector: records
- name: AWS WorkSpace Actions
  endpoint:
    path: /aws/workspace/actions
    method: GET
    data_selector: records
- name: AWS EC2 Instance Actions
  endpoint:
    path: /aws/ec2/instance/actions
    method: GET
    data_selector: records
- name: AWS RDS Instance Actions
  endpoint:
    path: /aws/rds/instance/actions
    method: GET
    data_selector: records
- name: ThirdParty Integrations
  endpoint:
    path: /thirdparty/integrations
    method: GET
    data_selector: records
- name: Source Mode
  endpoint:
    path: /source/mode
    method: GET
    data_selector: records
- name: Bulk Action Types
  endpoint:
    path: /bulk/action/types
    method: GET
    data_selector: records
- name: Bulk Action Operation Types
  endpoint:
    path: /bulk/action/operation/types
    method: GET
    data_selector: records
- name: Bulk Action Task Status
  endpoint:
    path: /bulk/action/task/status
    method: GET
    data_selector: records
- name: Alert Log Mode Constants
  endpoint:
    path: /alert/log/mode/constants
    method: GET
    data_selector: records
- name: Amazon FSx Actions
  endpoint:
    path: /amazon/fsx/actions
    method: GET
    data_selector: records
- name: vpc_protocol
  endpoint:
    path: /vpc/protocol
    method: GET
    data_selector: records
    params: {}
- name: vpc_endpoint
  endpoint:
    path: /vpc/endpoint
    method: GET
    data_selector: records
    params: {}
- name: vpc_endpoint_services
  endpoint:
    path: /vpc/endpoint/services
    method: GET
    data_selector: records
    params: {}
- name: trusted_advisor_category
  endpoint:
    path: /trusted/advisor/category
    method: GET
    data_selector: records
    params: {}
- name: trusted_advisor_checks
  endpoint:
    path: /trusted/advisor/checks
    method: GET
    data_selector: records
    params: {}
- name: msk_topic
  endpoint:
    path: /msk/topic
    method: GET
    data_selector: records
    params: {}
- name: msk_broker
  endpoint:
    path: /msk/broker
    method: GET
    data_selector: records
    params: {}
- name: msk_cluster
  endpoint:
    path: /msk/cluster
    method: GET
    data_selector: records
    params: {}
- name: msk_connect
  endpoint:
    path: /msk/connect
    method: GET
    data_selector: records
    params: {}
- name: msk_replicator
  endpoint:
    path: /msk/replicator
    method: GET
    data_selector: records
    params: {}
- name: tgw_flow_logs
  endpoint:
    path: /tgw/flow/logs
    method: GET
    data_selector: records
    params: {}
- name: tgwatt_flow_logs
  endpoint:
    path: /tgwatt/flow/logs
    method: GET
    data_selector: records
    params: {}
- name: pollergroup
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: message
    params: {}
- name: RDS Instance
  endpoint:
    path: /api/rds-instance
    method: POST
    data_selector: data
    params:
      type: RDSINSTANCE
- name: vCenter Monitor
  endpoint:
    path: /api/vcenter-monitor
    method: POST
    data_selector: data
- name: Veeam Enterprise Manager Monitor
  endpoint:
    path: /api/veeam-monitor
    method: POST
    data_selector: data
- name: port_monitor
  endpoint:
    path: /monitor/port
    method: POST
    data_selector: monitor
    params:
      display_name: mandatory
      type: PORT
      host_name: mandatory
      port: 53
      check_frequency: mandatory
      timeout: mandatory
      location_profile_id: mandatory
      notification_profile_id: mandatory
      threshold_profile_id: mandatory
      user_group_ids: mandatory
      on_call_schedule_id: mandatory
- name: pop_server_monitor
  endpoint:
    path: /monitor/pop
    method: POST
    data_selector: monitor
    params:
      display_name: mandatory
      type: PORT-POP
      host_name: mandatory
      port: 110
      check_frequency: mandatory
      timeout: mandatory
      location_profile_id: mandatory
      notification_profile_id: mandatory
      threshold_profile_id: mandatory
      user_group_ids: mandatory
      on_call_schedule_id: mandatory
- name: ssl_certificate_monitor
  endpoint:
    path: /monitor/ssl_certificate
    method: POST
    data_selector: monitor
    params:
      type: SSL_CERT
      profile_name: mandatory
      ssl_fingerprint_modified:
        value: true
- name: mail_delivery_monitor
  endpoint:
    path: /monitor/mail_delivery
    method: POST
    data_selector: monitor
    params:
      type: SMTP
      profile_name: mandatory
      down_location_threshold: mandatory
- name: ftp_transfer_monitor
  endpoint:
    path: /monitor/ftp_transfer
    method: POST
    data_selector: monitor
    params:
      type: FTP
      profile_name: mandatory
      down_location_threshold: mandatory
- name: rest_api_transaction_monitor
  endpoint:
    path: /monitor/rest_api_transaction
    method: POST
    data_selector: monitor
    params:
      type: RESTAPISEQ
      profile_name: mandatory
      down_location_threshold: mandatory
- name: web_transaction_monitor
  endpoint:
    path: /monitor/web_transaction
    method: POST
    data_selector: monitor
    params:
      type: REALBROWSER
      profile_name: mandatory
      down_location_threshold: mandatory
- name: domain_expiry_monitor
  endpoint:
    path: /monitor/domain_expiry
    method: POST
    data_selector: monitor
    params:
      display_name: mandatory
      type: DOMAINEXPIRY
      host_name: mandatory
      port: 43
      timeout: mandatory
      expire_days: mandatory
      location_profile_id: mandatory
      notification_profile_id: mandatory
      user_group_ids: mandatory
      on_call_schedule_id: mandatory
- name: web_transaction_steps_monitor
  endpoint:
    path: /monitor/web_transaction_steps
    method: POST
    data_selector: monitor
    params:
      display_name: mandatory
      step_url: mandatory
      type: URL-SEQ
      timeout: mandatory
      http_method: mandatory
- name: application_load_balancer
  endpoint:
    path: /monitor/application-load-balancer
    method: POST
- name: network_load_balancer
  endpoint:
    path: /monitor/network-load-balancer
    method: POST
- name: gateway_load_balancer
  endpoint:
    path: /monitor/gateway-load-balancer
    method: POST
- name: lambda_function
  endpoint:
    path: /monitor/lambda-function
    method: POST
- name: memcached_cluster
  endpoint:
    path: /monitor/memcached-cluster
    method: POST
- name: memcached_node
  endpoint:
    path: /monitor/memcached-node
    method: POST
- name: redis_node
  endpoint:
    path: /monitor/redis-node
    method: POST
- name: Veeam Azure Appliance
  endpoint:
    path: /api/veeam/azure/appliance
    method: POST
    data_selector: data
    params:
      credential_profile_id: string
      check_frequency: string
      location_profile_id: string
      notification_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      third_party_services: array
      tag_ids: array
- name: S3 Bucket Monitor
  endpoint:
    path: /monitor/s3/bucket
    method: POST
    data_selector: monitor
    params: {}
- name: S3 Object Monitor
  endpoint:
    path: /monitor/s3/object
    method: POST
    data_selector: monitor
    params: {}
- name: S3 Folder Monitor
  endpoint:
    path: /monitor/s3/folder
    method: POST
    data_selector: monitor
    params: {}
- name: SQS Queue Monitor
  endpoint:
    path: /monitor/sqs/queue
    method: POST
    data_selector: monitor
    params: {}
- name: CloudFront Distribution Monitor
  endpoint:
    path: /monitor/cloudfront/distribution
    method: POST
    data_selector: monitor
    params: {}
- name: Kinesis Data Stream Monitor
  endpoint:
    path: /monitor/kinesis/data
    method: POST
    data_selector: monitor
    params: {}
- name: Kinesis Firehose Delivery Stream Monitor
  endpoint:
    path: /monitor/kinesis/firehose
    method: POST
    data_selector: monitor
    params: {}
- name: api_gateway_resource
  endpoint:
    path: /monitor/api-gateway
    method: POST
    data_selector: monitoring_data
- name: ecs_cluster
  endpoint:
    path: /monitor/ecs-cluster
    method: POST
    data_selector: monitoring_data
- name: redshift_cluster
  endpoint:
    path: /monitor/redshift-cluster
    method: POST
    data_selector: monitoring_data
- name: elastic_file_system
  endpoint:
    path: /monitor/elastic-file-system
    method: POST
    data_selector: monitoring_data
- name: simple_email_service
  endpoint:
    path: /monitor/simple-email-service
    method: POST
    data_selector: monitoring_data
- name: Step Function State Machine Monitor
  endpoint:
    path: /monitoring/step-function
    method: POST
    data_selector: stateMachine
    params: {}
- name: Web Application Firewall Monitor
  endpoint:
    path: /monitoring/waf
    method: POST
    data_selector: webAcl
    params: {}
- name: CloudSearch Domain Monitor
  endpoint:
    path: /monitoring/cloudsearch
    method: POST
    data_selector: cloudSearchDomain
    params: {}
- name: Key Management Service Monitor
  endpoint:
    path: /monitoring/kms
    method: POST
    data_selector: kmsKey
    params: {}
- name: Route 53 Health Check Monitor
  endpoint:
    path: /monitoring/route53/healthcheck
    method: POST
    data_selector: healthCheck
    params: {}
- name: Route 53 Resolver Monitor
  endpoint:
    path: /monitoring/route53/resolver
    method: POST
    data_selector: resolver
    params: {}
- name: Route 53 Hosted Zone Monitor
  endpoint:
    path: /monitoring/route53/hostedzone
    method: POST
    data_selector: hostedZone
    params: {}
- name: route_53_hosted_zone_record_set
  endpoint:
    path: /monitor/route53
    method: POST
    data_selector: record_set
    params: {}
- name: elasticsearch
  endpoint:
    path: /monitor/elasticsearch
    method: POST
    data_selector: elasticsearch_domain
    params: {}
- name: nat_gateway
  endpoint:
    path: /monitor/natgateway
    method: POST
    data_selector: nat_gateway
    params: {}
- name: elastic_map_reduce
  endpoint:
    path: /monitor/emr
    method: POST
    data_selector: emr_cluster
    params: {}
- name: workspace
  endpoint:
    path: /monitor/workspace
    method: POST
    data_selector: workspace
    params: {}
- name: ec2_auto_scaling_group
  endpoint:
    path: /monitor/ec2autoscaling
    method: POST
    data_selector: auto_scaling_group
    params: {}
- name: neptune_cluster
  endpoint:
    path: /monitor/neptune
    method: POST
    data_selector: neptune_cluster
    params: {}
- name: neptune_instance_monitor
  endpoint:
    path: /neptune_instance_monitor
    method: POST
    data_selector: monitor
    params: {}
- name: certificate_manager_monitor
  endpoint:
    path: /certificate_manager_monitor
    method: POST
    data_selector: monitor
    params: {}
- name: lightsail_instance_monitor
  endpoint:
    path: /lightsail_instance_monitor
    method: POST
    data_selector: monitor
    params: {}
- name: eks_cluster_monitor
  endpoint:
    path: /eks_cluster_monitor
    method: POST
    data_selector: monitor
    params: {}
- name: eks_namespace_monitor
  endpoint:
    path: /eks_namespace_monitor
    method: POST
    data_selector: monitor
    params: {}
- name: eks_node_monitor
  endpoint:
    path: /eks_node_monitor
    method: POST
    data_selector: monitor
    params: {}
- name: amazon_mq_broker_monitor
  endpoint:
    path: /amazon_mq_broker_monitor
    method: POST
    data_selector: monitor
    params: {}
- name: kinesis_analytics_application
  endpoint:
    path: /monitor/kinesis/analytics/application
    method: POST
    data_selector: monitor
    params:
      display_name: string
      type: KINESIS-ANALYTICS
      domain_name: string
      region: string
      check_frequency: string
      aws_account_id: string
      aws_child_type: string
      aws_arn: string
      enable_uptime_monitoring: boolean
      threshold_profile_id: string
      notification_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      action_ids: json array
      third_party_services: array
      tag_ids: array
- name: kinesis_video_stream
  endpoint:
    path: /monitor/kinesis/video/stream
    method: POST
    data_selector: monitor
    params:
      display_name: string
      type: KINESIS-VIDEO
      domain_name: string
      region: string
      check_frequency: string
      aws_account_id: string
      aws_child_type: string
      aws_arn: string
      enable_uptime_monitoring: boolean
      threshold_profile_id: string
      notification_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      action_ids: json array
      third_party_services: array
      tag_ids: array
- name: elastic_beanstalk_environment
  endpoint:
    path: /monitor/elastic/beanstalk/environment
    method: POST
    data_selector: monitor
    params:
      display_name: string
      type: EBSENVIRONMENT
      elastic_beanstalk_environment_name: string
      region: string
      check_frequency: string
      aws_account_id: string
      aws_child_type: string
      aws_arn: string
      enable_uptime_monitoring: boolean
      threshold_profile_id: string
      notification_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      action_ids: json array
      third_party_services: array
      tag_ids: array
- name: direct_connect
  endpoint:
    path: /monitor/direct/connect
    method: POST
    data_selector: monitor
    params:
      display_name: string
      type: DIRECTCONNECT
      resource_name: string
      region: string
      check_frequency: string
      aws_account_id: string
      aws_child_type: string
      aws_arn: string
      enable_uptime_monitoring: boolean
      threshold_profile_id: string
      notification_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      action_ids: json array
      third_party_services: array
      tag_ids: array
- name: vpc_vpn
  endpoint:
    path: /monitor/vpc/vpn
    method: POST
    data_selector: monitor
    params:
      display_name: string
      type: VPC-VPN
      resource_name: string
      region: string
      check_frequency: string
      aws_account_id: string
      aws_child_type: string
      aws_arn: string
      enable_uptime_monitoring: boolean
      threshold_profile_id: string
      notification_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      action_ids: json array
      third_party_services: array
      tag_ids: array
- name: api_gateway_stage
  endpoint:
    path: /monitor/api/gateway/stage
    method: POST
    data_selector: monitor
    params:
      display_name: string
      type: APIGATEWAY-STAGE
      resource_name: string
      gateway_id: string
      api_type: string
      region: string
      check_frequency: string
      aws_account_id: string
      aws_child_type: string
      aws_arn: string
      enable_uptime_monitoring: boolean
      threshold_profile_id: string
      notification_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      action_ids: json array
      third_party_services: array
      tag_ids: array
- name: api_gateway_route
  endpoint:
    path: /monitor/api/gateway/route
    method: POST
    data_selector: monitor
    params:
      display_name: string
      type: APIGATEWAY-ROUTE
      resource_name: string
      gateway_id: string
      stage_name: string
      region: string
      check_frequency: string
      aws_account_id: string
      aws_child_type: string
      aws_arn: string
      enable_uptime_monitoring: boolean
      threshold_profile_id: string
      notification_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      action_ids: json array
      third_party_services: array
      tag_ids: array
- name: storage_gateway_volume
  endpoint:
    path: /monitor/storage_gateway_volume
    method: POST
    data_selector: data
    params:
      aws_account_id: mandatory
      notification_profile_id: mandatory
      threshold_profile_id: mandatory
      user_group_ids: mandatory
      on_call_schedule_id: mandatory
- name: transit_gateway
  endpoint:
    path: /monitor/transit_gateway
    method: POST
    data_selector: data
    params:
      aws_account_id: mandatory
      notification_profile_id: mandatory
      threshold_profile_id: mandatory
      user_group_ids: mandatory
      on_call_schedule_id: mandatory
- name: transit_gateway_attachment
  endpoint:
    path: /monitor/transit_gateway_attachment
    method: POST
    data_selector: data
    params:
      aws_account_id: mandatory
      notification_profile_id: mandatory
      threshold_profile_id: mandatory
      user_group_ids: mandatory
      on_call_schedule_id: mandatory
- name: direct_connect_virtual_interface
  endpoint:
    path: /monitor/direct_connect_virtual_interface
    method: POST
    data_selector: data
    params:
      aws_account_id: mandatory
      notification_profile_id: mandatory
      threshold_profile_id: mandatory
      user_group_ids: mandatory
      on_call_schedule_id: mandatory
- name: dms_replication_task
  endpoint:
    path: /monitor/dms_replication_task
    method: POST
    data_selector: data
    params:
      aws_account_id: mandatory
      notification_profile_id: mandatory
      threshold_profile_id: mandatory
      user_group_ids: mandatory
      on_call_schedule_id: mandatory
- name: dms_replication_instance
  endpoint:
    path: /monitor/dms_replication_instance
    method: POST
    data_selector: data
    params:
      aws_account_id: mandatory
      notification_profile_id: mandatory
      threshold_profile_id: mandatory
      user_group_ids: mandatory
      on_call_schedule_id: mandatory
- name: amazon_fsx
  endpoint:
    path: /monitor/amazon_fsx
    method: POST
    data_selector: data
    params:
      aws_account_id: mandatory
      notification_profile_id: mandatory
      threshold_profile_id: mandatory
      user_group_ids: mandatory
      on_call_schedule_id: mandatory
- name: FSx Storage Virtual Machine
  endpoint:
    path: /monitor/fsx-storage-virtual-machine
    method: POST
    data_selector: monitoring_data
    params:
      display_name: FSx Storage Virtual Machine Name
      type: FSX-SVM
      resource_name: FSx Storage Virtual Machine Identifier
      region: System discovered region of the FSx Storage Virtual Machine
      aws_account_id: AWS Monitor ID
      aws_child_type: '65'
      aws_arn: Amazon Resource Name for the FSx Storage Virtual Machine
      threshold_profile_id: Threshold profile ID
      notification_profile_id: Notification profile ID
      user_group_ids: User group IDs
      on_call_schedule_id: On-Call Schedule ID
      monitor_groups: Monitor group IDs
      action_ids: Action IDs
      third_party_services: Third party services
      tag_ids: Tag IDs
- name: systems_manager_monitor
  endpoint:
    path: /monitor/systems_manager
    method: POST
    data_selector: monitor
    params: {}
- name: aws_health_monitor
  endpoint:
    path: /monitor/aws_health
    method: POST
    data_selector: monitor
    params: {}
- name: appsync_monitor
  endpoint:
    path: /monitor/appsync
    method: POST
    data_selector: monitor
    params: {}
- name: ebs_volume_monitor
  endpoint:
    path: /monitor/ebs_volume
    method: POST
    data_selector: monitor
    params: {}
- name: aws_batch_monitor
  endpoint:
    path: /monitor/aws_batch
    method: POST
    data_selector: monitor
    params: {}
- name: aws_batch_queue_monitor
  endpoint:
    path: /monitor/aws_batch_queue
    method: POST
    data_selector: monitor
    params: {}
- name: ebs_snapshot_monitor
  endpoint:
    path: /monitor/ebs_snapshot
    method: POST
    data_selector: monitor
    params: {}
- name: aws_secret_manager_monitor
  endpoint:
    path: /monitor/aws_secret_manager
    method: POST
    data_selector: monitor
    params: {}
- name: aws_secret_manager_regional_monitor
  endpoint:
    path: /monitor/aws_secret_manager_regional
    method: POST
    data_selector: monitor
    params: {}
- name: AWS Elastic IP Monitor
  endpoint:
    path: /monitor/elastic_ip
    method: POST
    data_selector: records
    params:
      display_name: ''
      resource_name: ''
      aws_child_type: ''
      region: ''
      aws_arn: ''
      aws_account_id: ''
      threshold_profile_id: ''
      notification_profile_id: ''
      user_group_ids: []
      monitor_groups: []
      action_ids: []
      third_party_services: []
      tag_ids: []
- name: PROCSTAT Monitor
  endpoint:
    path: /monitor/procstat
    method: POST
    data_selector: records
    params:
      display_name: ''
      type: PROCSTAT
      resource_name: ''
      aws_child_type: ''
      region: ''
      aws_arn: ''
      aws_account_id: ''
      threshold_profile_id: ''
      notification_profile_id: ''
      user_group_ids: []
      monitor_groups: []
      action_ids: []
      third_party_services: []
      tag_ids: []
- name: Amazon MQ Topic Monitor
  endpoint:
    path: /monitor/amazon-mq-topic
    method: POST
    data_selector: attributes
    params:
      display_name: string
      type: AMQTOPIC
      resource_name: string
      region: string
      check_frequency: string
      aws_account_id: string
      aws_child_type: '50'
      enable_uptime_monitoring: boolean
      notification_profile_id: string
      threshold_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      dependency_resource_ids: array
      action_ids: JSON array
      third_party_services: array
      tag_ids: array
- name: Amazon MQ Queue Monitor
  endpoint:
    path: /monitor/amazon-mq-queue
    method: POST
    data_selector: attributes
    params:
      display_name: string
      type: AMQQUEUE
      resource_name: string
      region: string
      check_frequency: string
      aws_account_id: string
      aws_child_type: '51'
      enable_uptime_monitoring: boolean
      notification_profile_id: string
      threshold_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      dependency_resource_ids: array
      action_ids: JSON array
      third_party_services: array
      tag_ids: array
- name: Amazon MQ Network Connector Monitor
  endpoint:
    path: /monitor/amazon-mq-network-connector
    method: POST
    data_selector: attributes
    params:
      display_name: string
      type: AMQNC
      resource_name: string
      region: string
      check_frequency: string
      aws_account_id: string
      aws_child_type: '54'
      enable_uptime_monitoring: boolean
      notification_profile_id: string
      threshold_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      dependency_resource_ids: array
      action_ids: JSON array
      third_party_services: array
      tag_ids: array
- name: Lightsail Database Monitor
  endpoint:
    path: /monitor/lightsail-database
    method: POST
    data_selector: attributes
    params:
      display_name: string
      type: LIGHTSAIL-DATABASE
      resource_name: string
      region: string
      check_frequency: string
      aws_account_id: string
      aws_child_type: '53'
      enable_uptime_monitoring: boolean
      notification_profile_id: string
      threshold_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      dependency_resource_ids: array
      action_ids: JSON array
      third_party_services: array
      tag_ids: array
- name: Lightsail Load Balancer Monitor
  endpoint:
    path: /monitor/lightsail-load-balancer
    method: POST
    data_selector: attributes
    params:
      display_name: string
      type: LIGHTSAIL-LB
      resource_name: string
      region: string
      check_frequency: string
      aws_account_id: string
      aws_child_type: '59'
      enable_uptime_monitoring: boolean
      notification_profile_id: string
      threshold_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      dependency_resource_ids: array
      action_ids: JSON array
      third_party_services: array
      tag_ids: array
- name: Storage Gateway Monitor
  endpoint:
    path: /monitor/storage-gateway
    method: POST
    data_selector: attributes
    params:
      display_name: string
      type: STORAGEGATEWAY
      resource_name: string
      region: string
      check_frequency: string
      aws_account_id: string
      aws_child_type: '56'
      enable_uptime_monitoring: boolean
      notification_profile_id: string
      threshold_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      dependency_resource_ids: array
      action_ids: JSON array
      third_party_services: array
      tag_ids: array
- name: Storage Gateway File Share Monitor
  endpoint:
    path: /monitor/storage-gateway-file-share
    method: POST
    data_selector: attributes
    params:
      display_name: string
      type: SGFILE
      resource_name: string
      region: string
      check_frequency: string
      aws_account_id: string
      aws_child_type: '57'
      enable_uptime_monitoring: boolean
      notification_profile_id: string
      threshold_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
      monitor_groups: array
      dependency_resource_ids: array
      action_ids: JSON array
      third_party_services: array
      tag_ids: array
- name: msk_broker_monitor
  endpoint:
    path: /monitor/msk_broker
    method: POST
    data_selector: monitor
    params:
      display_name: Mandatory
      resource_name: Mandatory
      check_frequency: Mandatory
      region: Mandatory
      aws_child_type: Mandatory
      aws_account_id: Mandatory
      threshold_profile_id: Mandatory
      user_group_ids: Mandatory
      notification_profile_id: Mandatory
- name: glue_job_monitor
  endpoint:
    path: /monitor/glue_job
    method: POST
    data_selector: monitor
    params:
      display_name: Mandatory
      job_name: Mandatory
      check_frequency: Mandatory
      region: Mandatory
      aws_child_type: Mandatory
      job_type: Mandatory
      aws_account_id: Mandatory
      threshold_profile_id: Mandatory
      user_group_ids: Mandatory
      notification_profile_id: Mandatory
- name: glue_crawler_monitor
  endpoint:
    path: /monitor/glue_crawler
    method: POST
    data_selector: monitor
    params:
      display_name: Mandatory
      crawler_name: Mandatory
      check_frequency: Mandatory
      region: Mandatory
      aws_child_type: Mandatory
      aws_account_id: Mandatory
      threshold_profile_id: Mandatory
      user_group_ids: Mandatory
      notification_profile_id: Mandatory
- name: drs_region_monitor
  endpoint:
    path: /monitor/drs_region
    method: POST
    data_selector: monitor
    params:
      display_name: Mandatory
      resource_name: Mandatory
      check_frequency: Mandatory
      region: Mandatory
      aws_child_type: Mandatory
      aws_account_id: Mandatory
      threshold_profile_id: Mandatory
      user_group_ids: Mandatory
      notification_profile_id: Mandatory
- name: drs_source_server_monitor
  endpoint:
    path: /monitor/drs_source_server
    method: POST
    data_selector: monitor
    params:
      display_name: Mandatory
      resource_name: Mandatory
      check_frequency: Mandatory
      region: Mandatory
      aws_child_type: Mandatory
      aws_account_id: Mandatory
      threshold_profile_id: Mandatory
      user_group_ids: Mandatory
      notification_profile_id: Mandatory
- name: drs_recovery_instance_monitor
  endpoint:
    path: /monitor/drs_recovery_instance
    method: POST
    data_selector: monitor
    params:
      display_name: Mandatory
      resource_name: Mandatory
      check_frequency: Mandatory
      region: Mandatory
      aws_child_type: Mandatory
      aws_account_id: Mandatory
      threshold_profile_id: Mandatory
      user_group_ids: Mandatory
      notification_profile_id: Mandatory
- name: rabbitmq_broker_monitor
  endpoint:
    path: /monitor/rabbitmq_broker
    method: POST
    data_selector: monitor
    params:
      display_name: Mandatory
      type: Mandatory
      resource_name: Mandatory
      region: Mandatory
      check_frequency: Mandatory
      aws_account_id: Mandatory
      aws_child_type: Mandatory
      threshold_profile_id: Mandatory
      user_group_ids: Mandatory
      notification_profile_id: Mandatory
- name: rabbitmq_queue_monitor
  endpoint:
    path: /monitor/rabbitmq_queue
    method: POST
    data_selector: monitor
    params:
      display_name: Mandatory
      type: Mandatory
      resource_name: Mandatory
      region: Mandatory
      check_frequency: Mandatory
      aws_account_id: Mandatory
      aws_child_type: Mandatory
      threshold_profile_id: Mandatory
      user_group_ids: Mandatory
      notification_profile_id: Mandatory
- name: vpc_endpoint_monitor
  endpoint:
    path: /vpc/endpoint
    method: POST
    data_selector: monitor
    params:
      display_name: string
      resource_name: string
      check_frequency: string
      region: string
      aws_child_type: string
      aws_account_id: string
      threshold_profile_id: string
      user_group_ids: array
      aws_arn: string
      monitor_groups: array
      tag_ids: array
      action_ids: json array
      notification_profile_id: string
      third_party_services: array
- name: vpc_endpoint_services_monitor
  endpoint:
    path: /vpc/endpoint/services
    method: POST
    data_selector: monitor
    params:
      display_name: string
      resource_name: string
      check_frequency: string
      region: string
      aws_child_type: string
      aws_account_id: string
      threshold_profile_id: string
      user_group_ids: array
      aws_arn: string
      monitor_groups: array
      tag_ids: array
      action_ids: json array
      notification_profile_id: string
      third_party_services: array
- name: aws_trusted_advisor_category_monitor
  endpoint:
    path: /aws/trusted/advisor/category
    method: POST
    data_selector: monitor
    params:
      display_name: string
      resource_name: string
      check_frequency: string
      region: string
      aws_child_type: string
      aws_account_id: string
      threshold_profile_id: string
      user_group_ids: array
      aws_arn: string
      monitor_groups: array
      tag_ids: array
      action_ids: json array
      notification_profile_id: string
      third_party_services: array
- name: aws_trusted_advisor_checks_monitor
  endpoint:
    path: /aws/trusted/advisor/checks
    method: POST
    data_selector: monitor
    params:
      display_name: string
      resource_name: string
      check_frequency: string
      region: string
      aws_child_type: string
      aws_account_id: string
      threshold_profile_id: string
      aws_arn: string
      monitor_groups: array
      tag_ids: array
      action_ids: json array
      user_group_ids: array
      notification_profile_id: string
      third_party_services: array
- name: aws_msk_serverless
  endpoint:
    path: /aws/msk/serverless
    method: POST
    data_selector: monitor
    params:
      display_name: string
      resource_name: string
      check_frequency: string
      region: string
      aws_child_type: string
      aws_account_id: string
      threshold_profile_id: string
      aws_arn: string
      monitor_groups: array
      tag_ids: array
      action_ids: json array
      user_group_ids: array
      notification_profile_id: string
      third_party_services: array
- name: aws_msk_connect
  endpoint:
    path: /aws/msk/connect
    method: POST
    data_selector: monitor
    params:
      display_name: string
      resource_name: string
      check_frequency: string
      region: string
      aws_child_type: string
      aws_account_id: string
      threshold_profile_id: string
      aws_arn: string
      monitor_groups: array
      tag_ids: array
      action_ids: json array
      user_group_ids: array
      notification_profile_id: string
      third_party_services: array
- name: aws_msk_cluster
  endpoint:
    path: /aws/msk/cluster
    method: POST
    data_selector: monitor
    params:
      display_name: string
      resource_name: string
      check_frequency: string
      region: string
      aws_child_type: string
      aws_account_id: string
      threshold_profile_id: string
      aws_arn: string
      monitor_groups: array
      tag_ids: array
      action_ids: json array
      user_group_ids: array
      notification_profile_id: string
      third_party_services: array
- name: aws_msk_replicator
  endpoint:
    path: /aws/msk/replicator
    method: POST
    data_selector: monitor
    params:
      display_name: string
      resource_name: string
      check_frequency: string
      region: string
      aws_child_type: string
      aws_account_id: string
      threshold_profile_id: string
      aws_arn: string
      monitor_groups: array
      tag_ids: array
      action_ids: json array
      user_group_ids: array
      notification_profile_id: string
      third_party_services: array
- name: aws_msk_topic
  endpoint:
    path: /aws/msk/topic
    method: POST
    data_selector: monitor
    params:
      display_name: string
      resource_name: string
      check_frequency: string
      region: string
      aws_child_type: string
      aws_account_id: string
      threshold_profile_id: string
      aws_arn: string
      monitor_groups: array
      tag_ids: array
      action_ids: json array
      user_group_ids: array
      notification_profile_id: string
      third_party_services: array
- name: rabbitmq_node
  endpoint:
    path: /monitor/rabbitmq_node
    method: POST
    data_selector: node_monitor_data
    params:
      display_name: ''
      type: RABBIT_MQ
      resource_name: ''
      region: ''
      check_frequency: ''
      aws_account_id: ''
      aws_child_type: '130'
      enable_uptime_monitoring: false
      notification_profile_id: ''
      threshold_profile_id: ''
      user_group_ids: []
      on_call_schedule_id: ''
      monitor_groups: []
      dependency_resource_ids: []
      action_ids: []
      third_party_services: []
      tag_ids: []
- name: cognito_user_pool
  endpoint:
    path: /monitor/cognito_user_pool
    method: POST
    data_selector: user_pool_monitor_data
    params:
      display_name: ''
      resource_name: ''
      check_frequency: ''
      region: ''
      aws_child_type: ''
      aws_account_id: ''
      aws_arn: ''
      monitor_groups: []
      threshold_profile_id: ''
      tag_ids: []
      action_ids: []
      user_group_ids: []
      notification_profile_id: ''
      third_party_services: []
- name: cognito_user
  endpoint:
    path: /monitor/cognito_user
    method: POST
    data_selector: user_monitor_data
    params:
      display_name: ''
      resource_name: ''
      check_frequency: ''
      region: ''
      aws_child_type: ''
      aws_account_id: ''
      aws_arn: ''
      monitor_groups: []
      threshold_profile_id: ''
      tag_ids: []
      action_ids: []
      user_group_ids: []
      notification_profile_id: ''
      third_party_services: []
- name: cognito_identity_provider
  endpoint:
    path: /monitor/cognito_identity_provider
    method: POST
    data_selector: identity_provider_monitor_data
    params:
      display_name: ''
      resource_name: ''
      check_frequency: ''
      region: ''
      aws_child_type: ''
      aws_account_id: ''
      aws_arn: ''
      monitor_groups: []
      threshold_profile_id: ''
      tag_ids: []
      action_ids: []
      user_group_ids: []
      notification_profile_id: ''
      third_party_services: []
- name: cognito_app_client
  endpoint:
    path: /monitor/cognito_app_client
    method: POST
    data_selector: app_client_monitor_data
    params:
      display_name: ''
      resource_name: ''
      check_frequency: ''
      region: ''
      aws_child_type: ''
      aws_account_id: ''
      aws_arn: ''
      monitor_groups: []
      threshold_profile_id: ''
      tag_ids: []
      action_ids: []
      user_group_ids: []
      notification_profile_id: ''
      third_party_services: []
- name: cognito_identity_pool
  endpoint:
    path: /monitor/cognito_identity_pool
    method: POST
    data_selector: identity_pool_monitor_data
    params:
      display_name: ''
      resource_name: ''
      check_frequency: ''
      region: ''
      aws_child_type: ''
      aws_account_id: ''
      aws_arn: ''
      monitor_groups: []
      threshold_profile_id: ''
      tag_ids: []
      action_ids: []
      user_group_ids: []
      notification_profile_id: ''
      third_party_services: []
- name: cloudwatch_logs
  endpoint:
    path: /monitor/cloudwatch_logs
    method: POST
    data_selector: cloudwatch_logs_monitor_data
    params:
      display_name: ''
      resource_name: ''
      check_frequency: ''
      aws_child_type: ''
      region: ''
      aws_account_id: ''
      monitor_groups: []
      dependency_resource_ids: []
      threshold_profile_id: ''
      notification_profile_id: ''
      user_group_ids: []
      tag_ids: []
      type: CLOUDWATCH-LOGS-META
      enable_uptime_monitoring: false
- name: cloudwatch_logs_region
  endpoint:
    path: /monitor/cloudwatch_logs_region
    method: POST
    data_selector: cloudwatch_logs_region_monitor_data
    params:
      display_name: ''
      resource_name: ''
      check_frequency: ''
      aws_child_type: ''
      region: ''
      aws_account_id: ''
      monitor_groups: []
      dependency_resource_ids: []
      threshold_profile_id: ''
      notification_profile_id: ''
      user_group_ids: []
      tag_ids: []
      type: CLOUDWATCH-LOGS-REGION
      enable_uptime_monitoring: false
- name: cloudwatch_log_group
  endpoint:
    path: /monitor/cloudwatch_log_group
    method: POST
    data_selector: cloudwatch_log_group_monitor_data
    params:
      display_name: ''
      resource_name: ''
      check_frequency: ''
      region: ''
      aws_child_type: ''
      aws_account_id: ''
      aws_arn: ''
      monitor_groups: []
      threshold_profile_id: ''
      tag_ids: []
      action_ids: []
      user_group_ids: []
      notification_profile_id: ''
      third_party_services: []
- name: active_directory_monitor
  endpoint:
    path: /active_directory_monitor
    method: POST
- name: website_defacement_monitor
  endpoint:
    path: /website_defacement_monitor
    method: POST
- name: ntp_server_monitor
  endpoint:
    path: /ntp_server_monitor
    method: POST
- name: real_time_blacklist_check
  endpoint:
    path: /real_time_blacklist_check
    method: POST
- name: brand_reputation_monitor
  endpoint:
    path: /brand_reputation_monitor
    method: POST
- name: smart_disk_monitor
  endpoint:
    path: /smart_disk_monitor
    method: POST
- name: monitors
  endpoint:
    path: /monitors
    method: POST
    data_selector: data
    params: {}
- name: retrieve_monitor
  endpoint:
    path: /monitors/{monitor_id}
    method: GET
    data_selector: data
    params: {}
- name: retrieve_monitor_by_name
  endpoint:
    path: /monitors/name/{display_name}
    method: GET
    data_selector: data
    params: {}
- name: update_monitor
  endpoint:
    path: /monitors/{monitor_id}
    method: PUT
    data_selector: data
    params: {}
- name: add_poller_to_group
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: ELB Target Group Monitor
  endpoint:
    path: /monitor/elbtg
    method: POST
    data_selector: attributes
    params:
      display_name: string
      resource_name: string
      check_frequency: string
      region: string
      aws_child_type: string
      aws_account_id: string
      elb_id: string
      elb_type: string
      threshold_profile_id: string
      user_group_ids: array
      notification_profile_id: string
- name: Network Device Monitor
  endpoint:
    path: /monitor/networkdevice
    method: POST
    data_selector: attributes
    params:
      display_name: string
      type: NETWORKDEVICE
      device_name: string
      ipaddress: string
      category: string
      device_type: string
      device_mapname: string
      location_profile_id: string
      threshold_profile_id: string
      notification_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
- name: Microsoft SharePoint Server
  endpoint:
    path: /monitor/sharepoint
    method: POST
    data_selector: attributes
    params:
      type: SHAREPOINT
      profile_name: string
      threshold_profile_id: string
      notification_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
- name: BIZTALKSERVER
  endpoint:
    path: /monitor/biztalkserver
    method: POST
    data_selector: attributes
    params:
      display_name: string
      host_name: string
      type: BIZTALKSERVER
      ipaddress: string
      btversion: string
      threshold_profile_id: string
      notification_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
- name: OFFICE 365
  endpoint:
    path: /monitor/office365
    method: POST
    data_selector: attributes
    params:
      display_name: string
      type: OFFICE365
      user_name: string
      password: string
      location_profile_id: string
      threshold_profile_id: string
      notification_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
- name: Microsoft Failover Cluster
  endpoint:
    path: /monitor/failovercluster
    method: POST
    data_selector: attributes
    params:
      display_name: string
      type: WINDOWSCLUSTER
      threshold_profile_id: string
      notification_profile_id: string
      user_group_ids: array
      on_call_schedule_id: string
- name: poller_group
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: null
    params: {}
- name: monitor
  endpoint:
    path: /monitors
    method: GET
    data_selector: data
    params: {}
- name: delete_monitor
  endpoint:
    path: /monitors/{monitor_id}
    method: DELETE
    data_selector: null
    params: {}
- name: delete_monitor_by_name
  endpoint:
    path: /monitors/name/{display_name}
    method: DELETE
    data_selector: null
    params: {}
- name: delete_multiple_monitors
  endpoint:
    path: /monitors
    method: DELETE
    data_selector: null
    params:
      monitor_ids: '{monitor_ids}'
- name: mute_alerts
  endpoint:
    path: /mute_alerts
    method: PUT
    data_selector: data
    params: {}
- name: retrieve_muted_alerts
  endpoint:
    path: /mute_alerts
    method: GET
    data_selector: data
    params: {}
- name: unmute_alerts
  endpoint:
    path: /unmute_alerts
    method: DELETE
    data_selector: data
    params: {}
- name: unmute_specific_alerts
  endpoint:
    path: /unmute_specific_alerts
    method: PUT
    data_selector: data
    params: {}
- name: retrieve_monitor_groups
  endpoint:
    path: /monitors/{monitor_id}/monitor_groups
    method: GET
    data_selector: data
    params: {}
- name: update_monitor_groups
  endpoint:
    path: /monitors/{monitor_id}/monitor_groups
    method: PUT
    data_selector: data
    params: {}
- name: add_on_premise_poller
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: client_certificate
  endpoint:
    path: /monitors/client_certificate/{monitor_id}
    method: PUT
    data_selector: success
    params: {}
- name: disable_client_certificate
  endpoint:
    path: /monitors/client_certificate/{monitor_id}
    method: DELETE
    data_selector: success
    params: {}
- name: activate_monitor
  endpoint:
    path: /monitors/activate/{monitor_id}
    method: PUT
    data_selector: success
    params: {}
- name: suspend_monitor
  endpoint:
    path: /monitors/suspend/{monitor_id}
    method: PUT
    data_selector: success
    params: {}
- name: poll_monitor
  endpoint:
    path: /monitor/poll_now/{monitor_id}
    method: GET
    data_selector: data
    params: {}
- name: status_poll_now
  endpoint:
    path: /monitor/status_poll_now/{monitor_id}
    method: GET
    data_selector: data
    params: {}
- name: update_poller
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: success
    params: {}
- name: enable_uptime_check
  endpoint:
    path: /monitors/uptime_check/enable/{monitor_id}
    method: PUT
    data_selector: success
    params: {}
- name: disable_uptime_check
  endpoint:
    path: /monitors/uptime_check/disable/{monitor_id}
    method: PUT
    data_selector: success
    params: {}
- name: generate_external_id
  endpoint:
    path: /aws/external_id
    method: GET
    data_selector: data
    params: {}
- name: monitors
  endpoint:
    path: /monitors
    method: GET
    data_selector: records
    params: {}
- name: ec2_management_action
  endpoint:
    path: /aws/management_actions/ec2/{monitor_id}
    method: PUT
    data_selector: data
    params:
      action: int
- name: rds_management_action
  endpoint:
    path: /aws/management_actions/rds/{monitor_id}
    method: PUT
    data_selector: data
    params:
      action: int
- name: kinesis_analytics_management_action
  endpoint:
    path: /aws/management_actions/analytics/{monitor_id}
    method: PUT
    data_selector: data
    params:
      action: int
- name: lightsail_instance_management_action
  endpoint:
    path: /aws/management_actions/lightsail_instance/{monitor_id}
    method: PUT
    data_selector: data
    params:
      action: int
- name: lightsail_database_management_action
  endpoint:
    path: /aws/management_actions/lightsail_database/{monitor_id}
    method: PUT
    data_selector: data
    params:
      action: int
- name: monitor_type_constants
  endpoint:
    path: /api/monitor_type_constants
    method: GET
    data_selector: data
- name: customers
  endpoint:
    path: /short/msp/customers
    method: GET
    data_selector: data
- name: business_units
  endpoint:
    path: /short/bu/business_units
    method: GET
    data_selector: data
- name: monitors
  endpoint:
    path: /monitors
    method: GET
    data_selector: data
- name: device_key
  endpoint:
    path: /device_key
    method: GET
    data_selector: data
- name: VPC
  endpoint:
    path: /vpc/traffic
    method: GET
    data_selector: traffic_data
    params: {}
- name: VPC_SUBNET
  endpoint:
    path: /vpc/subnet/traffic
    method: GET
    data_selector: subnet_traffic_data
    params: {}
- name: VPC_NI
  endpoint:
    path: /vpc/network_interface/traffic
    method: GET
    data_selector: network_interface_traffic_data
    params: {}
- name: VPC_PROTOCOL
  endpoint:
    path: /vpc/protocol/traffic
    method: GET
    data_selector: protocol_traffic_data
    params: {}
- name: VPC-ENDPOINT
  endpoint:
    path: /vpc/endpoint/traffic
    method: GET
    data_selector: endpoint_traffic_data
    params: {}
- name: VPC-ENDPOINT-SERVICES
  endpoint:
    path: /vpc/endpoint/services
    method: GET
    data_selector: endpoint_services_data
    params: {}
- name: TRUSTED-ADVISOR-CATEGORY
  endpoint:
    path: /trusted_advisor/category
    method: GET
    data_selector: advisor_category_data
    params: {}
- name: TRUSTED-ADVISOR-CHECKS
  endpoint:
    path: /trusted_advisor/checks
    method: GET
    data_selector: advisor_checks_data
    params: {}
- name: MSK Topic
  endpoint:
    path: /msk/topic
    method: GET
    data_selector: msk_topic_data
    params: {}
- name: MSK Broker
  endpoint:
    path: /msk/broker
    method: GET
    data_selector: msk_broker_data
    params: {}
- name: kafka_rem_readreq_persec
  endpoint:
    path: /metrics/kafka_rem_readreq_persec
    method: GET
    data_selector: result
- name: kafka_rem_write_err_persec
  endpoint:
    path: /metrics/kafka_rem_write_err_persec
    method: GET
    data_selector: result
- name: kafka_repli_bytesin_persec
  endpoint:
    path: /metrics/kafka_repli_bytesin_persec
    method: GET
    data_selector: result
- name: kafka_repli_bytesout_persec
  endpoint:
    path: /metrics/kafka_repli_bytesout_persec
    method: GET
    data_selector: result
- name: kafka_req_exempt_from_throttime
  endpoint:
    path: /metrics/kafka_req_exempt_from_throttime
    method: GET
    data_selector: result
- name: kafka_req_handler_avgidle_percent
  endpoint:
    path: /metrics/kafka_req_handler_avgidle_percent
    method: GET
    data_selector: result
- name: kafka_req_throt_queue_size
  endpoint:
    path: /metrics/kafka_req_throt_queue_size
    method: GET
    data_selector: result
- name: kafka_req_throttime
  endpoint:
    path: /metrics/kafka_req_throttime
    method: GET
    data_selector: result
- name: kafka_tcp_connections
  endpoint:
    path: /metrics/kafka_tcp_connections
    method: GET
    data_selector: result
- name: kafka_tot_tier_byteslag
  endpoint:
    path: /metrics/kafka_tot_tier_byteslag
    method: GET
    data_selector: result
- name: kafka_traf_bytes
  endpoint:
    path: /metrics/kafka_traf_bytes
    method: GET
    data_selector: result
- name: kafka_vol_queue_length
  endpoint:
    path: /metrics/kafka_vol_queue_length
    method: GET
    data_selector: result
- name: kafka_vol_read_bytes
  endpoint:
    path: /metrics/kafka_vol_read_bytes
    method: GET
    data_selector: result
- name: kafka_vol_read_ops
  endpoint:
    path: /metrics/kafka_vol_read_ops
    method: GET
    data_selector: result
- name: kafka_vol_tot_readtime
  endpoint:
    path: /metrics/kafka_vol_tot_readtime
    method: GET
    data_selector: result
- name: kafka_vol_tot_writetime
  endpoint:
    path: /metrics/kafka_vol_tot_writetime
    method: GET
    data_selector: result
- name: kafka_vol_write_bytes
  endpoint:
    path: /metrics/kafka_vol_write_bytes
    method: GET
    data_selector: result
- name: kafka_vol_write_ops
  endpoint:
    path: /metrics/kafka_vol_write_ops
    method: GET
    data_selector: result
- name: kafka_datalogs_disk_used
  endpoint:
    path: /metrics/kafka_datalogs_disk_used
    method: GET
    data_selector: result
- name: active_controller_count
  endpoint:
    path: /metrics/active_controller_count
    method: GET
    data_selector: result
- name: zookeeper_request_latency_msmean
  endpoint:
    path: /metrics/zookeeper_request_latency_msmean
    method: GET
    data_selector: result
- name: client_connection_count
  endpoint:
    path: /metrics/client_connection_count
    method: GET
    data_selector: result
- name: global_partition_count
  endpoint:
    path: /metrics/global_partition_count
    method: GET
    data_selector: result
- name: global_topic_count
  endpoint:
    path: /metrics/global_topic_count
    method: GET
    data_selector: result
- name: offline_partitions_count
  endpoint:
    path: /metrics/offline_partitions_count
    method: GET
    data_selector: result
- name: cpu_utilization
  endpoint:
    path: /metrics/cpu_utilization
    method: GET
- name: cluster_replica_lag_max
  endpoint:
    path: /metrics/cluster_replica_lag_max
    method: GET
- name: cluster_replica_lag_min
  endpoint:
    path: /metrics/cluster_replica_lag_min
    method: GET
- name: freeable_memory
  endpoint:
    path: /metrics/freeable_memory
    method: GET
- name: free_local_storage
  endpoint:
    path: /metrics/free_local_storage
    method: GET
- name: gremlin_errors
  endpoint:
    path: /metrics/gremlin_errors
    method: GET
- name: gremlin_requests
  endpoint:
    path: /metrics/gremlin_requests
    method: GET
- name: gremlin_websocket_available
  endpoint:
    path: /metrics/gremlin_websocket_available
    method: GET
- name: gremlin_websocket_client_errors
  endpoint:
    path: /metrics/gremlin_websocket_client_errors
    method: GET
- name: gremlin_websocket_server_errors
  endpoint:
    path: /metrics/gremlin_websocket_server_errors
    method: GET
- name: gremlin_websocket_success
  endpoint:
    path: /metrics/gremlin_websocket_success
    method: GET
- name: gremlin_requests_per_sec
  endpoint:
    path: /metrics/gremlin_requests_per_sec
    method: GET
- name: loader_errors
  endpoint:
    path: /metrics/loader_errors
    method: GET
- name: loader_requests
  endpoint:
    path: /metrics/loader_requests
    method: GET
- name: network_throughput
  endpoint:
    path: /metrics/network_throughput
    method: GET
- name: network_receive_throughput
  endpoint:
    path: /metrics/network_receive_throughput
    method: GET
- name: network_transmit_throughput
  endpoint:
    path: /metrics/network_transmit_throughput
    method: GET
- name: sparql_errors
  endpoint:
    path: /metrics/sparql_errors
    method: GET
- name: sparql_requests
  endpoint:
    path: /metrics/sparql_requests
    method: GET
- name: sparql_requests_per_sec
  endpoint:
    path: /metrics/sparql_requests_per_sec
    method: GET
- name: status_errors
  endpoint:
    path: /metrics/status_errors
    method: GET
- name: status_requests
  endpoint:
    path: /metrics/status_requests
    method: GET
- name: CDCCHANGESDISKSOURCE
  endpoint:
    path: /cdc/changes/disk/source
    method: GET
    data_selector: data
    params: {}
- name: CDCCHANGESDISKTARGET
  endpoint:
    path: /cdc/changes/disk/target
    method: GET
    data_selector: data
    params: {}
- name: CDCCHANGESDISKTOTAL
  endpoint:
    path: /cdc/changes/disk/total
    method: GET
    data_selector: data
    params: {}
- name: CDCTBANDWIDTHSOURCE
  endpoint:
    path: /cdc/bandwidth/source
    method: GET
    data_selector: data
    params: {}
- name: CDCTBANDWIDTHTARGET
  endpoint:
    path: /cdc/bandwidth/target
    method: GET
    data_selector: data
    params: {}
- name: CDCTBANDWIDTHTOTAL
  endpoint:
    path: /cdc/bandwidth/total
    method: GET
    data_selector: data
    params: {}
- name: CDCTROWSSOURCE
  endpoint:
    path: /cdc/rows/source
    method: GET
    data_selector: data
    params: {}
- name: CDCTROWSTARGET
  endpoint:
    path: /cdc/rows/target
    method: GET
    data_selector: data
    params: {}
- name: CDCTROWSTOTAL
  endpoint:
    path: /cdc/rows/total
    method: GET
    data_selector: data
    params: {}
- name: CDCLATENCYSOURCE
  endpoint:
    path: /cdc/latency/source
    method: GET
    data_selector: data
    params: {}
- name: CDCLATENCYTARGET
  endpoint:
    path: /cdc/latency/target
    method: GET
    data_selector: data
    params: {}
- name: CDCLATENCYTOTAL
  endpoint:
    path: /cdc/latency/total
    method: GET
    data_selector: data
    params: {}
- name: MEMORYUSAGE
  endpoint:
    path: /memory/usage
    method: GET
    data_selector: data
    params: {}
- name: CPUUTILIZATION
  endpoint:
    path: /cpu/utilization
    method: GET
    data_selector: data
    params: {}
- name: glue_job_metrics
  endpoint:
    path: /glue/job/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: website_monitor
  endpoint:
    path: /monitor/website
    method: POST
    data_selector: monitor
    params: {}
- name: websocket_monitor
  endpoint:
    path: /monitor/websocket
    method: POST
    data_selector: monitor
    params: {}
- name: vpc_protocol
  endpoint:
    path: /vpc/protocol
    method: GET
    data_selector: records
- name: vpc_endpoint
  endpoint:
    path: /vpc/endpoint
    method: GET
    data_selector: records
- name: vpc_endpoint_services
  endpoint:
    path: /vpc/endpoint_services
    method: GET
    data_selector: records
- name: trusted_advisor_category
  endpoint:
    path: /trusted_advisor/category
    method: GET
    data_selector: records
- name: trusted_advisor_checks
  endpoint:
    path: /trusted_advisor/checks
    method: GET
    data_selector: records
- name: msk_topic
  endpoint:
    path: /msk/topic
    method: GET
    data_selector: records
- name: msk_broker
  endpoint:
    path: /msk/broker
    method: GET
    data_selector: records
- name: msk_cluster
  endpoint:
    path: /msk/cluster
    method: GET
    data_selector: records
- name: msk_connect
  endpoint:
    path: /msk/connect
    method: GET
    data_selector: records
- name: msk_replicator
  endpoint:
    path: /msk/replicator
    method: GET
    data_selector: records
- name: tgw_flow_logs
  endpoint:
    path: /tgw/flow_logs
    method: GET
    data_selector: records
- name: tgwatt_flow_logs
  endpoint:
    path: /tgwatt/flow_logs
    method: GET
    data_selector: records
- name: POP Server
  endpoint:
    path: /pop/server
    method: GET
    data_selector: records
    params: {}
- name: SMTP Server
  endpoint:
    path: /smtp/server
    method: GET
    data_selector: records
    params: {}
- name: PING
  endpoint:
    path: /ping/server
    method: GET
    data_selector: records
    params: {}
- name: FTP Server
  endpoint:
    path: /ftp/server
    method: GET
    data_selector: records
    params: {}
- name: EKSNAMESPACE
  endpoint:
    path: /eks/namespace
    method: GET
    data_selector: cpu_utilized, memory_utilized, network_tx, network_rx
    params: {}
- name: EKSNODE
  endpoint:
    path: /eks/node
    method: GET
    data_selector: cpu_utilized_per_node, cpu_reserved_per_node, memory_utilized_per_node,
      memory_reserved_per_node
    params: {}
- name: AMQ
  endpoint:
    path: /amq
    method: GET
    data_selector: cpu_utilization, heap_usage, store_percent_usage, total_consumer_count,
      total_message_count, total_producer_count
    params: {}
- name: AMQTOPIC
  endpoint:
    path: /amq/topic
    method: GET
    data_selector: consumer_count, producer_count, memory_usage, enqueue_count, dequeue_count,
      inflight_count
    params: {}
- name: AMQQUEUE
  endpoint:
    path: /amq/queue
    method: GET
    data_selector: consumer_count, producer_count, memory_usage, enqueue_count, dequeue_count,
      inflight_count, queue_size
    params: {}
- name: AMQNC
  endpoint:
    path: /amq/nc
    method: GET
    data_selector: enqueue_count, dequeue_count, receive_count
    params: {}
- name: LIGHTSAIL-DATABASE
  endpoint:
    path: /lightsail/database
    method: GET
    data_selector: cpu_utilization, db_connections, network_receive_throughput, network_transmit_throughput
    params: {}
- name: LIGHTSAIL-LB
  endpoint:
    path: /lightsail/lb
    method: GET
    data_selector: request_count, rejected_connection_count
    params: {}
- name: STORAGEGATEWAY
  endpoint:
    path: /storage/gateway
    method: GET
    data_selector: user_cpu_percent, mem_used_bytes, io_wait_percent, cloud_bytes_uploaded,
      cloud_bytes_downl
    params: {}
- name: SGFILE
  endpoint:
    path: /sg/file
    method: GET
    data_selector: cache_hit_percent, cache_percent_dirty, cache_percent_used, cloud_bytes_uploaded,
      cloud_bytes_downl
    params: {}
- name: SGVOLUME
  endpoint:
    path: /sg/volume
    method: GET
    data_selector: cpu_usage, memory_usage, cloud_traffic, client_traffic
    params: {}
- name: TRANSITGATEWAY
  endpoint:
    path: /transit/gateway
    method: GET
    data_selector: tg_bytes_in, tg_bytes_out
    params: {}
- name: DIRECTCONNECTVI
  endpoint:
    path: /directconnect/vi
    method: GET
    data_selector: vi_bps_egress, vi_bps_ingress, vi_pps_egress, vi_pps_ingress
    params: {}
- name: DMSTASK
  endpoint:
    path: /dms/task
    method: GET
    data_selector: task_cpu_utilization, task_memory_usage, flt_bw_total, flt_row_total,
      cdc_changes_memory_total, cdc_changes_disc_total
    params: {}
- name: DMSINSTANCE
  endpoint:
    path: /dms/instance
    method: GET
    data_selector: cpu_utilization, free_storage_mb, disk_read_operations, disk_write_operations,
      bytes_read_from_disk, bytes_write_to_disk
    params: {}
- name: FSX
  endpoint:
    path: /fsx
    method: GET
    data_selector: total_throughput, total_iops, free_storage_capacity
    params: {}
- name: FSX-SVM
  endpoint:
    path: /fsx/svm
    method: GET
    data_selector: fsx_svm_total_volumes, fsx_svm_available_volumes, fsx_svm_failed_volumes
    params: {}
- name: FSX-VOLUME
  endpoint:
    path: /fsx/volume
    method: GET
    data_selector: fsx_vol_data_read_bytes, fsx_vol_data_write_bytes, fsx_vol_storage_used,
      fsx_vol_storage_capacity_utilized, fsx_vol_files_used
    params: {}
- name: LAMBDA-EDGE
  endpoint:
    path: /lambda/edge
    method: GET
    data_selector: invocations_lambda, errors_lambda, throttles_lambda
    params: {}
- name: INSPECTOR
  endpoint:
    path: /inspector
    method: GET
    data_selector: high_findings, medium_findings, low_findings, info_findings, findings_perrun
    params: {}
- name: VMWAREESX
  endpoint:
    path: /vmware/esx
    method: GET
    data_selector: cpu_usage, disk_usage, memory_usage, network_usage
    params: {}
- name: VMWAREVM
  endpoint:
    path: /vmware/vm
    method: GET
    data_selector: memory_usage, disk_usage, cpu_usage, network_usage
    params: {}
- name: NETWORKDEVICE
  endpoint:
    path: /network/device
    method: GET
    data_selector: response_time, packet_loss
    params: {}
- name: SOAP
  endpoint:
    path: /soap
    method: GET
    data_selector: response_time
    params: {}
- name: SQLSERVER
  endpoint:
    path: /sqlserver
    method: GET
    data_selector: batch_request, target_server_memory
    params: {}
- name: IISSERVER
  endpoint:
    path: /iis/server
    method: GET
    data_selector: network_traffic
    params: {}
- name: SFTP
  endpoint:
    path: /sftp
    method: GET
    data_selector: bytes_in_average, bytes_out_average, bytes_in_sum, bytes_out_sum
    params: {}
- name: APIGATEWAY-ROUTE
  endpoint:
    path: /api/gateway/route
    method: GET
    data_selector: http_latency, http_integration_latency, http_count, data_processed,
      connect_count, message_count
    params: {}
- name: EC2_CWAGENT
  endpoint:
    path: /ec2/cwagent
    method: GET
    data_selector: memory_committed_bytes_in_use, mem_used_percent
    params: {}
- name: APPSTREAM
  endpoint:
    path: /appstream
    method: GET
    data_selector: actual_capacity, available_capacity, capacity_utilization
    params: {}
- name: SSM
  endpoint:
    path: /ssm
    method: GET
    data_selector: command_delivery_timed_out, commands_failed, commands_succeeded
    params: {}
- name: AWSHEALTH
  endpoint:
    path: /awshealth
    method: GET
    data_selector: events_open, events_upcoming, events_closed
    params: {}
- name: APPSYNC
  endpoint:
    path: /appsync
    method: GET
    data_selector: latency, connect_success, active_connections, disconnect_success
    params: {}
- name: EBSVOLUME_AVAIL
  endpoint:
    path: /ebs/volume/avail
    method: GET
    data_selector: volume_count, volume_count_used, volume_count_created, volume_count_created_used,
      tot_volume_size, tot_volume_size_used, snap_count, snap_count_created, tot_snap_size
    params: {}
- name: AWSBATCH
  endpoint:
    path: /awsbatch
    method: GET
    data_selector: total_succeeded, total_failed, total_submitted, total_pending,
      total_runnable, total_starting, total_running
    params: {}
- name: AWSBATCH-QUEUE
  endpoint:
    path: /awsbatch/queue
    method: GET
    data_selector: succeeded, failed, submitted, pending, runnable, running, starting
    params: {}
- name: EBS_SNAPSHOT
  endpoint:
    path: /ebs/snapshot
    method: GET
    data_selector: snap_count, snap_count_created, tot_snap_size, snap_size, snap_age
    params: {}
- name: SECRET-MANAGER
  endpoint:
    path: /secret/manager
    method: GET
    data_selector: secret_changed, secret_rotated
    params: {}
- name: SECRET-MANAGER-REGIONAL
  endpoint:
    path: /secret/manager/regional
    method: GET
    data_selector: resource_count, rotate_secret_call_count
    params: {}
- name: ELASTIC-IP-ADDRESS
  endpoint:
    path: /elastic/ip/address
    method: GET
    data_selector: total_ips, total_associated_ips, total_disassociated_ips, total_vpc_ips
    params: {}
- name: PROCSTAT
  endpoint:
    path: /procstat
    method: GET
    data_selector: cpu_usage
    params: {}
- name: VPC_META
  endpoint:
    path: /vpc/meta
    method: GET
    data_selector: number_of_region_up, number_of_region_trouble, number_of_region_critical,
      number_of_az_up, number_of_az_trouble, number_of_az_critical, number_of_vpc_up,
      number_of_vpc_trouble, number_of_vpc_critical, number_of_subnet_up, number_of_subnet_trouble,
      number_of_subnet_critical, number_of_ni_up, number_of_ni_trouble, number_of_ni_critical,
      number_of_protocol_up, number_of_protocol_trouble, number_of_protocol_critical,
      number_of_rt_up
    params: {}
- name: VPC_REGIONAL
  endpoint:
    path: /vpc/regional
    method: GET
    data_selector: tot_rx_volume, min_rx_volume, max_rx_volume, tot_rx_packet, min_rx_packet,
      max_rx_packet, tot_tx_volume, min_tx_volume, max_tx_volume, tot_tx_packet, min_tx_packet,
      max_tx_packet, avg_rx_packet_size, avg_tx_packet_size, tot_volume, tot_packet,
      in_traffic, out_traffic, tot_traffic, accepted_requests, rejected_requests,
      skipped_records, nodata_records, tot_free_ip, tot_ni, tot_subnet, tot_vpc
    params: {}
- name: VPC_AZ
  endpoint:
    path: /vpc/az
    method: GET
    data_selector: tot_rx_volume, min_rx_volume, max_rx_volume, tot_rx_packet, min_rx_packet,
      max_rx_packet, tot_tx_volume, min_tx_volume, max_tx_volume, tot_tx_packet, min_tx_packet,
      max_tx_packet
    params: {}
- name: file_upload_monitor
  endpoint:
    path: /api/v1/file_uploads
    method: POST
    data_selector: data
    params: {}
- name: grpc_monitor
  endpoint:
    path: /api/v1/grpc
    method: POST
    data_selector: data
    params: {}
- name: dns_monitor
  endpoint:
    path: /api/v1/dns
    method: POST
    data_selector: data
    params: {}
- name: udp_monitor
  endpoint:
    path: /api/v1/udp
    method: POST
    data_selector: data
    params: {}
- name: ftp_transfer
  endpoint:
    path: /api/v1/ftp_transfer
    method: POST
- name: ssl_certificate
  endpoint:
    path: /api/v1/ssl_certificate
    method: POST
- name: domain_expiry
  endpoint:
    path: /api/v1/domain_expiry
    method: POST
- name: web_transaction
  endpoint:
    path: /api/v1/web_transaction
    method: POST
- name: EC2 Instance
  endpoint:
    path: /monitor/ec2
    method: POST
    data_selector: records
- name: RDS Instance
  endpoint:
    path: /monitor/rds
    method: POST
    data_selector: records
- name: SNS Topic
  endpoint:
    path: /monitor/sns
    method: POST
    data_selector: records
- name: DynamoDB Table
  endpoint:
    path: /monitor/dynamodb
    method: POST
    data_selector: records
- name: Classic Load Balancer
  endpoint:
    path: /monitor/classic-load-balancer
    method: POST
    data_selector: records
- name: Application Load Balancer
  endpoint:
    path: /monitor/application-load-balancer
    method: POST
    data_selector: records
- name: Network Load Balancer
  endpoint:
    path: /monitor/network-load-balancer
    method: POST
    data_selector: records
- name: S3FolderMonitor
  endpoint:
    path: /s3/folder/monitor
    method: POST
    data_selector: records
    params: {}
- name: SQSQueueMonitor
  endpoint:
    path: /sqs/queue/monitor
    method: POST
    data_selector: records
    params: {}
- name: CloudFrontDistributionMonitor
  endpoint:
    path: /cloudfront/distribution/monitor
    method: POST
    data_selector: records
    params: {}
- name: KinesisDataStreamMonitor
  endpoint:
    path: /kinesis/data/stream/monitor
    method: POST
    data_selector: records
    params: {}
- name: KinesisFirehoseDeliveryStreamMonitor
  endpoint:
    path: /kinesis/firehose/delivery/stream/monitor
    method: POST
    data_selector: records
    params: {}
- name: KinesisAnalyticsApplicationMonitor
  endpoint:
    path: /kinesis/analytics/application/monitor
    method: POST
    data_selector: records
    params: {}
- name: KinesisVideoStreamMonitor
  endpoint:
    path: /kinesis/video/stream/monitor
    method: POST
    data_selector: records
    params: {}
- name: kinesis_video_stream
  endpoint:
    path: /kinesis_video_streams
    method: POST
    data_selector: records
    params: {}
- name: elastic_beanstalk_environment
  endpoint:
    path: /elastic_beanstalk_environment
    method: POST
    data_selector: records
    params: {}
- name: direct_connect
  endpoint:
    path: /direct_connect
    method: POST
    data_selector: records
    params: {}
- name: vpc_vpn
  endpoint:
    path: /vpc_vpn
    method: POST
    data_selector: records
    params: {}
- name: api_gateway_stage
  endpoint:
    path: /api_gateway_stage
    method: POST
    data_selector: records
    params: {}
- name: api_gateway_route
  endpoint:
    path: /api_gateway_route
    method: POST
    data_selector: records
    params: {}
- name: api_gateway_resource
  endpoint:
    path: /api_gateway_resource
    method: POST
    data_selector: records
    params: {}
- name: ecs_cluster
  endpoint:
    path: /ecs_cluster
    method: POST
    data_selector: records
    params: {}
- name: ECS Cluster
  endpoint:
    path: /ecs/cluster
    method: POST
    data_selector: data
    params: {}
- name: ECS Cluster Service
  endpoint:
    path: /ecs/cluster/service
    method: POST
    data_selector: data
    params: {}
- name: Redshift Cluster
  endpoint:
    path: /redshift/cluster
    method: POST
    data_selector: data
    params: {}
- name: Redshift Node
  endpoint:
    path: /redshift/node
    method: POST
    data_selector: data
    params: {}
- name: Elastic File System
  endpoint:
    path: /efs
    method: POST
    data_selector: data
    params: {}
- name: Simple Email Service
  endpoint:
    path: /ses
    method: POST
    data_selector: data
    params: {}
- name: Step Function State Machine
  endpoint:
    path: /stepfunction
    method: POST
    data_selector: data
    params: {}
- name: Web Application Firewall
  endpoint:
    path: /waf
    method: POST
    data_selector: data
    params: {}
- name: Web ACL
  endpoint:
    path: /webacl
    method: POST
    data_selector: data
    params: {}
- name: CloudSearch Domain
  endpoint:
    path: /cloudsearchdomain
    method: POST
    data_selector: data
    params: {}
- name: Key Management Service
  endpoint:
    path: /kms
    method: POST
    data_selector: data
    params: {}
- name: Route 53 Health Check
  endpoint:
    path: /route53healthcheck
    method: POST
    data_selector: data
    params: {}
- name: Route 53 Resolver
  endpoint:
    path: /route53resolver
    method: POST
    data_selector: data
    params: {}
- name: Route 53 Hosted Zone
  endpoint:
    path: /route53hostedzone
    method: POST
    data_selector: data
    params: {}
- name: Route 53 Hosted Zone Record Set
  endpoint:
    path: /route53hostedzonerecordset
    method: POST
    data_selector: data
    params: {}
- name: Elasticsearch Domain
  endpoint:
    path: /elasticsearchdomain
    method: POST
    data_selector: data
    params: {}
- name: NAT Gateway Monitor
  endpoint:
    path: /monitor/nat-gateway
    method: POST
    data_selector: monitoring_data
- name: Elastic MapReduce Monitor
  endpoint:
    path: /monitor/emr
    method: POST
    data_selector: monitoring_data
- name: WorkSpace Monitor
  endpoint:
    path: /monitor/workspace
    method: POST
    data_selector: monitoring_data
- name: EC2 Auto Scaling Group Monitor
  endpoint:
    path: /monitor/ec2-auto-scaling
    method: POST
    data_selector: monitoring_data
- name: Neptune Cluster Monitor
  endpoint:
    path: /monitor/neptune-cluster
    method: POST
    data_selector: monitoring_data
- name: Neptune Instance Monitor
  endpoint:
    path: /monitor/neptune-instance
    method: POST
    data_selector: monitoring_data
- name: Certificate Manager Monitor
  endpoint:
    path: /monitor/certificate-manager
    method: POST
    data_selector: monitoring_data
- name: network_load_balancer
  endpoint:
    path: /path/to/network_load_balancer
    method: POST
    data_selector: data
    params:
      display_name: mandatory_name
      type: NETWORK-LOADBALANCER
      region: mandatory_region
      check_frequency: mandatory_check_frequency
      aws_account_id: mandatory_aws_account_id
      aws_child_type: mandatory_aws_child_type
      elb_name: mandatory_elb_name
      elb_type: mandatory_elb_type
      enable_uptime_monitoring: true
      threshold_profile_id: mandatory_threshold_profile_id
      notification_profile_id: mandatory_notification_profile_id
      user_group_ids: []
      on_call_schedule_id: mandatory_on_call_schedule_id
      monitor_groups: []
      action_ids: []
      third_party_services: []
      tag_ids: []
- name: gateway_load_balancer
  endpoint:
    path: /path/to/gateway_load_balancer
    method: POST
    data_selector: data
    params:
      display_name: mandatory_name
      type: GATEWAY-LOADBALANCER
      region: mandatory_region
      check_frequency: mandatory_check_frequency
      aws_account_id: mandatory_aws_account_id
      aws_child_type: mandatory_aws_child_type
      elb_name: mandatory_elb_name
      elb_type: mandatory_elb_type
      enable_uptime_monitoring: true
      threshold_profile_id: mandatory_threshold_profile_id
      notification_profile_id: mandatory_notification_profile_id
      user_group_ids: []
      on_call_schedule_id: mandatory_on_call_schedule_id
      monitor_groups: []
      action_ids: []
      third_party_services: []
      tag_ids: []
- name: lambda_function_monitor
  endpoint:
    path: /path/to/lambda_function_monitor
    method: POST
    data_selector: data
    params:
      display_name: mandatory_name
      type: LAMBDAFUNCTION
      function_name: mandatory_function_name
      region: mandatory_region
      check_frequency: mandatory_check_frequency
      aws_account_id: mandatory_aws_account_id
      aws_child_type: mandatory_aws_child_type
      aws_arn: mandatory_aws_arn
      owner: mandatory_owner
      enable_uptime_monitoring: true
      threshold_profile_id: mandatory_threshold_profile_id
      notification_profile_id: mandatory_notification_profile_id
      user_group_ids: []
      on_call_schedule_id: mandatory_on_call_schedule_id
      monitor_groups: []
      action_ids: []
      third_party_services: []
      tag_ids: []
- name: ec_memcached_cluster
  endpoint:
    path: /path/to/ec_memcached_cluster
    method: POST
    data_selector: data
    params:
      display_name: mandatory_name
      type: EC-MEMCACHED
      region: mandatory_region
      check_frequency: mandatory_check_frequency
      aws_account_id: mandatory_aws_account_id
      enable_uptime_monitoring: true
      threshold_profile_id: mandatory_threshold_profile_id
      notification_profile_id: mandatory_notification_profile_id
      user_group_ids: []
      on_call_schedule_id: mandatory_on_call_schedule_id
      aws_arn: mandatory_aws_arn
      monitor_groups: []
      action_ids: []
      third_party_services: []
      tag_ids: []
- name: ec_memcached_node
  endpoint:
    path: /path/to/ec_memcached_node
    method: POST
    data_selector: data
    params:
      display_name: mandatory_name
      type: EC-MEM-NODE
      region: mandatory_region
      check_frequency: mandatory_check_frequency
      aws_account_id: mandatory_aws_account_id
      enable_uptime_monitoring: true
      threshold_profile_id: mandatory_threshold_profile_id
      notification_profile_id: mandatory_notification_profile_id
      user_group_ids: []
      on_call_schedule_id: mandatory_on_call_schedule_id
      aws_arn: mandatory_aws_arn
      monitor_groups: []
      action_ids: []
      third_party_services: []
      tag_ids: []
- name: ec_redis_node
  endpoint:
    path: /path/to/ec_redis_node
    method: POST
    data_selector: data
    params:
      display_name: mandatory_name
      type: EC-REDIS
      region: mandatory_region
      check_frequency: mandatory_check_frequency
      aws_account_id: mandatory_aws_account_id
      enable_uptime_monitoring: true
      threshold_profile_id: mandatory_threshold_profile_id
      notification_profile_id: mandatory_notification_profile_id
      user_group_ids: []
      on_call_schedule_id: mandatory_on_call_schedule_id
      aws_arn: mandatory_aws_arn
      monitor_groups: []
      action_ids: []
      third_party_services: []
      tag_ids: []
- name: s3_bucket_monitor
  endpoint:
    path: /path/to/s3_bucket_monitor
    method: POST
    data_selector: data
    params:
      display_name: mandatory_name
      bucket_name: mandatory_bucket_name
      type: S3BUCKET
      region: mandatory_region
      check_frequency: mandatory_check_frequency
      aws_child_type: mandatory_aws_child_type
      aws_account_id: mandatory_aws_account_id
      enable_uptime_monitoring: true
      threshold_profile_id: mandatory_threshold_profile_id
      notification_profile_id: mandatory_notification_profile_id
      user_group_ids: []
      on_call_schedule_id: mandatory_on_call_schedule_id
      aws_arn: mandatory_aws_arn
      monitor_groups: []
      s3_objects: []
      action_ids: []
      third_party_services: []
      tag_ids: []
- name: amazon_mq_broker
  endpoint:
    path: /monitor/amazon-mq-broker
    method: POST
- name: amazon_mq_topic
  endpoint:
    path: /monitor/amazon-mq-topic
    method: POST
- name: amazon_mq_queue
  endpoint:
    path: /monitor/amazon-mq-queue
    method: POST
- name: Lambda Edge Function Monitor
  endpoint:
    path: /lambda/edge/function
    method: POST
- name: Inspector Monitor
  endpoint:
    path: /inspector
    method: POST
- name: SFTP Monitor
  endpoint:
    path: /sftp
    method: POST
- name: EC2_CWAGENT Monitor
  endpoint:
    path: /ec2/cwagent
    method: POST
- name: APPSTREAM 2.0 Monitor
  endpoint:
    path: /appstream/2.0
    method: POST
- name: Systems Manager Monitor
  endpoint:
    path: /systems/manager
    method: POST
- name: AWS Health Monitor
  endpoint:
    path: /aws/health
    method: POST
- name: AWS AppSync Monitor
  endpoint:
    path: /appsync
    method: POST
- name: amazon_mq_queue
  endpoint:
    path: /amazon_mq_queue
    method: POST
    data_selector: data
    params: {}
- name: amazon_mq_network_connector
  endpoint:
    path: /amazon_mq_network_connector
    method: POST
    data_selector: data
    params: {}
- name: lightsail_database
  endpoint:
    path: /lightsail_database
    method: POST
    data_selector: data
    params: {}
- name: lightsail_load_balancer
  endpoint:
    path: /lightsail_load_balancer
    method: POST
    data_selector: data
    params: {}
- name: storage_gateway
  endpoint:
    path: /storage_gateway
    method: POST
    data_selector: data
    params: {}
- name: storage_gateway_file_share
  endpoint:
    path: /storage_gateway_file_share
    method: POST
    data_selector: data
    params: {}
- name: storage_gateway_volume
  endpoint:
    path: /storage_gateway_volume
    method: POST
    data_selector: data
    params: {}
- name: transit_gateway
  endpoint:
    path: /transit_gateway
    method: POST
    data_selector: data
    params: {}
- name: transit_gateway
  endpoint:
    path: /api/transit-gateway
    method: POST
    data_selector: data
    params: {}
- name: transit_gateway_attachment
  endpoint:
    path: /api/transit-gateway-attachment
    method: POST
    data_selector: data
    params: {}
- name: direct_connect_virtual_interface
  endpoint:
    path: /api/direct-connect-virtual-interface
    method: POST
    data_selector: data
    params: {}
- name: dms_replication_task
  endpoint:
    path: /api/dms-replication-task
    method: POST
    data_selector: data
    params: {}
- name: dms_replication_instance
  endpoint:
    path: /api/dms-replication-instance
    method: POST
    data_selector: data
    params: {}
- name: amazon_fsx
  endpoint:
    path: /api/amazon-fsx
    method: POST
    data_selector: data
    params: {}
- name: fsx_storage_virtual_machine
  endpoint:
    path: /api/fsx-storage-virtual-machine
    method: POST
    data_selector: data
    params: {}
- name: amazon_fsx_volume
  endpoint:
    path: /api/amazon-fsx-volume
    method: POST
    data_selector: data
    params: {}
- name: AppSync Monitor
  endpoint:
    path: /appsync/monitor
    method: POST
    data_selector: monitor
    params: {}
- name: EBS Volume Monitor
  endpoint:
    path: /ebs/volume
    method: POST
    data_selector: monitor
    params: {}
- name: AWS Batch Monitor
  endpoint:
    path: /batch/monitor
    method: POST
    data_selector: monitor
    params: {}
- name: AWS Batch Queue Monitor
  endpoint:
    path: /batch/queue/monitor
    method: POST
    data_selector: monitor
    params: {}
- name: EBS Snapshot Monitor
  endpoint:
    path: /ebs/snapshot
    method: POST
    data_selector: monitor
    params: {}
- name: AWS Secret Manager Monitor
  endpoint:
    path: /secret-manager/monitor
    method: POST
    data_selector: monitor
    params: {}
- name: AWS Secret Manager Regional Monitor
  endpoint:
    path: /secret-manager/regional/monitor
    method: POST
    data_selector: monitor
    params: {}
- name: AWS Elastic IP Monitor
  endpoint:
    path: /elastic-ip/monitor
    method: POST
    data_selector: monitor
    params: {}
- name: PROCSTAT Monitor
  endpoint:
    path: /procstat/monitor
    method: POST
    data_selector: monitor
    params: {}
- name: Virtual Private Cloud Monitor
  endpoint:
    path: /vpc/monitor
    method: POST
    data_selector: monitor
    params: {}
- name: vpc_monitor
  endpoint:
    path: /vpc/monitor
    method: POST
- name: vpc_region_monitor
  endpoint:
    path: /vpc/region/monitor
    method: POST
- name: vpc_availability_zone_monitor
  endpoint:
    path: /vpc/availability_zone/monitor
    method: POST
- name: vpc_subnet_monitor
  endpoint:
    path: /vpc/subnet/monitor
    method: POST
- name: vpc_network_interface_monitor
  endpoint:
    path: /vpc/network_interface/monitor
    method: POST
- name: vpc_protocol_monitor
  endpoint:
    path: /vpc/protocol/monitor
    method: POST
- name: vpc_route_table_monitor
  endpoint:
    path: /vpc/route_table/monitor
    method: POST
- name: vpc_endpoint_monitor
  endpoint:
    path: /vpc/endpoint/monitor
    method: POST
- name: vpc_endpoint_services_monitor
  endpoint:
    path: /vpc/endpoint_services/monitor
    method: POST
- name: aws_trusted_advisor_category_monitor
  endpoint:
    path: /aws/trusted_advisor/category/monitor
    method: POST
- name: trusted_advisor_category
  endpoint:
    path: /trusted_advisor/category
    method: POST
    data_selector: categories
- name: trusted_advisor_checks
  endpoint:
    path: /trusted_advisor/checks
    method: POST
    data_selector: checks
- name: msk_serverless
  endpoint:
    path: /msk/serverless
    method: POST
    data_selector: serverless
- name: msk_connect
  endpoint:
    path: /msk/connect
    method: POST
    data_selector: connect
- name: msk_cluster
  endpoint:
    path: /msk/cluster
    method: POST
    data_selector: cluster
- name: msk_replicator
  endpoint:
    path: /msk/replicator
    method: POST
    data_selector: replicator
- name: msk_topic
  endpoint:
    path: /msk/topic
    method: POST
    data_selector: topic
- name: msk_broker
  endpoint:
    path: /msk/broker
    method: POST
    data_selector: broker
- name: glue_job
  endpoint:
    path: /glue/job
    method: POST
    data_selector: job
- name: glue_crawler
  endpoint:
    path: /glue/crawler
    method: POST
    data_selector: crawler
- name: Glue Crawler Monitor
  endpoint:
    path: /glue/crawler
    method: POST
    data_selector: data
    params:
      display_name: string
      crawler_name: string
      check_frequency: string
      region: string
      aws_child_type: string
      aws_account_id: string
      threshold_profile_id: string
      user_group_ids: array
      notification_profile_id: string
- name: ntp_monitor
  endpoint:
    path: /services/ntp/monitor
    method: GET
    data_selector: records
    params: {}
- name: Cognito User
  endpoint:
    path: /cognito/user
    method: POST
    data_selector: user_data
- name: Cognito Identity Provider
  endpoint:
    path: /cognito/idp
    method: POST
    data_selector: idp_data
- name: Cognito App Client
  endpoint:
    path: /cognito/appclient
    method: POST
    data_selector: appclient_data
- name: Cognito Identity Pool
  endpoint:
    path: /cognito/identitypool
    method: POST
    data_selector: identitypool_data
- name: Cloudwatch Logs Monitor
  endpoint:
    path: /cloudwatch/logs
    method: POST
    data_selector: logs_data
- name: monitors
  endpoint:
    path: /monitors
    method: POST
    data_selector: data
- name: monitor
  endpoint:
    path: /monitors/{monitor_id}
    method: GET
    data_selector: data
    params: {}
- name: monitor_by_name
  endpoint:
    path: /monitors/name/{display_name}
    method: GET
    data_selector: data
    params: {}
- name: update_monitor
  endpoint:
    path: /monitors/{monitor_id}
    method: PUT
    data_selector: data
    params: {}
- name: monitor
  endpoint:
    path: /monitors
    method: GET
    data_selector: data
    params: {}
- name: delete_monitor
  endpoint:
    path: /monitors/{monitor_id}
    method: DELETE
    data_selector: null
    params: {}
- name: delete_monitor_by_name
  endpoint:
    path: /monitors/name/{display_name}
    method: DELETE
    data_selector: null
    params: {}
- name: delete_multiple_monitors
  endpoint:
    path: /monitors
    method: DELETE
    data_selector: null
    params:
      monitor_ids: comma-separated list of monitor IDs
- name: mute_alerts
  endpoint:
    path: /mute_alerts
    method: GET
    data_selector: data
    params: {}
- name: unmute_alerts
  endpoint:
    path: /unmute_alerts
    method: DELETE
    data_selector: data
    params: {}
- name: aws_management_actions_ec2
  endpoint:
    path: /aws/management_actions/ec2/{monitor_id}
    method: PUT
    data_selector: data
    params:
      action: int
- name: aws_management_actions_rds
  endpoint:
    path: /aws/management_actions/rds/{monitor_id}
    method: PUT
    data_selector: data
    params:
      action: int
- name: client_certificate
  endpoint:
    path: /monitors/client_certificate/{monitor_id}
    method: PUT
- name: disable_client_certificate
  endpoint:
    path: /monitors/client_certificate/{monitor_id}
    method: DELETE
- name: activate_monitor
  endpoint:
    path: /monitors/activate/{monitor_id}
    method: PUT
- name: suspend_monitor
  endpoint:
    path: /monitors/suspend/{monitor_id}
    method: PUT
- name: poll_monitor
  endpoint:
    path: /monitor/poll_now/{monitor_id}
    method: GET
- name: polling_status
  endpoint:
    path: /monitor/status_poll_now/{monitor_id}
    method: GET
- name: enable_uptime_steroid
  endpoint:
    path: /monitors/uptime_check/enable/{monitor_id}
    method: PUT
- name: disable_uptime_steroid
  endpoint:
    path: /monitors/uptime_check/disable/{monitor_id}
    method: PUT
- name: generate_aws_external_id
  endpoint:
    path: /aws/external_id
    method: GET
- name: current_status
  endpoint:
    path: /current_status
    method: GET
    data_selector: monitors
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: success
- name: rds_instance
  endpoint:
    path: /aws/management_actions/rds/name/{instance_id}
    method: PUT
    data_selector: data
    params:
      action: int
- name: kinesis_analytics
  endpoint:
    path: /aws/management_actions/analytics/{monitor_id}
    method: PUT
    data_selector: data
    params:
      action: int
- name: lightsail_instance
  endpoint:
    path: /aws/management_actions/lightsail_instance/{monitor_id}
    method: PUT
    data_selector: data
    params:
      action: int
- name: lightsail_database
  endpoint:
    path: /aws/management_actions/lightsail_database/{monitor_id}
    method: PUT
    data_selector: data
    params:
      action: int
- name: esx_server_details
  endpoint:
    path: /esx_server_details/{esx_server_id}
    method: GET
    data_selector: null
    params: {}
- name: monitor_status
  endpoint:
    path: /msp/monitors/status
    method: GET
    data_selector: data
- name: availability_monitor
  endpoint:
    path: /api/availability/monitor/{monitor_id}
    method: GET
    data_selector: data
- name: poller_group_update
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: ''
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: msp_location_profiles
  endpoint:
    path: /msp/location_profiles
    method: GET
    data_selector: data
    params: {}
- name: msp_threshold_profiles
  endpoint:
    path: /msp/threshold_profiles
    method: GET
    data_selector: data
    params: {}
- name: msp_notification_profiles
  endpoint:
    path: /msp/notification_profiles
    method: GET
    data_selector: data
    params: {}
- name: msp_email_templates
  endpoint:
    path: /msp/email_templates
    method: GET
    data_selector: data
    params: {}
- name: global_parameters
  endpoint:
    path: /global_parameters
    method: POST
    data_selector: data
    params: {}
- name: msp_integrations
  endpoint:
    path: /msp/third_party_services
    method: GET
    data_selector: data
    params: {}
- name: msp_audit_logs
  endpoint:
    path: /msp/audit_logs
    method: GET
    data_selector: records
- name: assign_technician
  endpoint:
    path: /msp/alarms/technician
    method: PUT
    data_selector: data
    params:
      id: '{{user_id}}'
- name: business_unit_subscriptions
  endpoint:
    path: /bu/business_units/subscriptions
    method: GET
    data_selector: data
- name: summary_report_by_monitor
  endpoint:
    path: /reports/summary/{monitor_id}
    method: GET
    data_selector: data
    params:
      period: '{report_period_constants}'
- name: poller_group_updates
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: ''
    params: {}
- name: availability_summary
  endpoint:
    path: /reports/availability_summary/{monitor_id}
    method: GET
    data_selector: data
    params:
      period: '8'
- name: poller_group_updates
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: step_summary
  endpoint:
    path: /reports/step_summary/{monitor_id}
    method: GET
    data_selector: data
    params: {}
- name: poller_group
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: code
    params: {}
- name: poller_group_update_settings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: monitor_id
    params:
      monitor_id: string
      period: int
      monitor_type: string
      limit: int
- name: poller_group
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: ''
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: code
    params: {}
- name: Add an On-Premise Poller to an existing On-Premise Poller Group
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: response
    params: {}
- name: Get Outage Details
  endpoint:
    path: /reports/outage
    method: GET
    data_selector: data.outage_details
    params:
      period: '2'
- name: alarms
  endpoint:
    path: /reports/alarms
    method: GET
    data_selector: data.outage_details
    params:
      period: 2
- name: poller_group_updates
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: message
- name: poller_group
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
- name: mark_downtime
  endpoint:
    path: /reports/mark_downtime/{monitor_id}/{outage_id}
    method: PUT
- name: create_outage
  endpoint:
    path: /reports/outage/{monitor_id}
    method: PUT
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: code
    params:
      oauthscope: Site24x7.Admin.Update
- name: poller_group_updates
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: code
    params: {}
- name: monitor_groups
  endpoint:
    path: /monitor_groups
    method: POST
    data_selector: data
    params: {}
- name: retrieve_monitor_group
  endpoint:
    path: /monitor_groups/{group_id}
    method: GET
    data_selector: data
    params: {}
- name: update_monitor_group
  endpoint:
    path: /monitor_groups/{group_id}
    method: PUT
    data_selector: data
    params: {}
- name: add_on_premise_poller
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: poller_group_update_settings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: monitor_groups_add_monitors
  endpoint:
    path: /monitor_groups/add_monitors/name
    method: PUT
    data_selector: data
    params: {}
- name: subgroups_retrieve
  endpoint:
    path: /subgroups/{group_id}
    method: GET
    data_selector: data
    params: {}
- name: subgroup_update
  endpoint:
    path: /subgroups/{group_id}
    method: PUT
    data_selector: data
    params: {}
- name: poller_group_update_settings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: code
    params:
      pollergroup_id: '1000000003014'
      action_type: ADDPOLLER
      primary_poller_list:
      - '1000000004003'
      - '1000000004002'
      standby_poller_list:
      - '1000000004001'
      - '1000000004005'
- name: monitor_group_view
  endpoint:
    path: /monitor_group_view/{group_id}
    method: GET
    data_selector: data
- name: user_retrieve
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /users/{user_id}
    method: PUT
    data_selector: data
    params: {}
- name: user_groups
  endpoint:
    path: /user_groups
    method: POST
    data_selector: data
    params: {}
- name: user_group
  endpoint:
    path: /user_groups/{user_group_id}
    method: PUT
    data_selector: data
    params: {}
- name: poller_group
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: attribute_alert_group
  endpoint:
    path: /attribute_groups
    method: POST
    data_selector: data
    params: {}
- name: update_attribute_alert_group
  endpoint:
    path: /attribute_groups/{group_id}
    method: PUT
    data_selector: data
    params: {}
- name: location_profiles
  endpoint:
    path: /location_profiles
    method: POST
    data_selector: data
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: on_call_schedules
  endpoint:
    path: /on_call_schedules
    method: POST
    data_selector: data
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: retrieve_on_call_schedule
  endpoint:
    path: /on_call_schedules/{on_call_schedule_id}
    method: GET
    data_selector: data
    params: {}
- name: threshold_parameters
  endpoint:
    path: /threshold_parameters
    method: GET
    data_selector: parameters
    params: {}
- name: rds_instance
  endpoint:
    path: /rds/instance
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: sns_topic
  endpoint:
    path: /sns/topic
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: Gateway Load Balancer
  endpoint:
    path: GATEWAY-LOADBALANCER
    method: GET
- name: kinesis_analytics_application_monitor
  endpoint:
    path: /kinesis-analytics
    method: POST
    data_selector: data
    params: {}
- name: threshold_parameters
  endpoint:
    path: /threshold_parameters
    method: GET
    data_selector: parameters
    params: {}
- name: S3 Folder Monitor
  endpoint:
    path: /s3foldermonitor
    method: GET
    data_selector: attributes
    params:
      type: S3FOLDER
      profile_name: The profile name
- name: SQS Queue Monitor
  endpoint:
    path: /sqsqueuemonitor
    method: GET
    data_selector: attributes
    params:
      type: SQS
      profile_name: Name of the profile
- name: CloudFront Distribution Monitor
  endpoint:
    path: /cloudfrontdistributionmonitor
    method: GET
    data_selector: attributes
    params:
      type: CLOUDFRONT
      profile_name: Name of the profile
- name: Kinesis Data Stream Monitor
  endpoint:
    path: /kinesisdatastreammonitor
    method: GET
    data_selector: attributes
    params:
      type: KINESIS-DATA
      profile_name: Name of the profile
- name: Kinesis Firehose Delivery Stream Monitor
  endpoint:
    path: /kinesisfirehosedeliverystreammonitor
    method: GET
    data_selector: attributes
    params:
      type: KINESIS-FIREHOSE
      profile_name: Name of the profile
- name: gRPC
  endpoint:
    path: /gRPC
    method: POST
    data_selector: records
    params:
      type: GRPC
- name: DNS Server
  endpoint:
    path: /DNS
    method: POST
    data_selector: records
    params:
      type: DNS
- name: UDP
  endpoint:
    path: /UDP
    method: POST
    data_selector: records
    params:
      type: UDP
- name: Port (Custom Protocol)
  endpoint:
    path: /Port
    method: POST
    data_selector: records
    params:
      type: PORT
- name: POP Server
  endpoint:
    path: /POP
    method: POST
    data_selector: records
    params:
      type: PORT-POP
- name: SMTP Server
  endpoint:
    path: /SMTP
    method: POST
    data_selector: records
    params:
      type: PORT-SMTP
- name: PING
  endpoint:
    path: /PING
    method: POST
    data_selector: records
    params:
      type: PING
- name: FTP Server
  endpoint:
    path: /FTP
    method: POST
    data_selector: records
    params:
      type: PORT-FTP
- name: SSL Certificate
  endpoint:
    path: /SSL
    method: POST
    data_selector: records
    params:
      type: SSL_CERT
- name: Mail Delivery
  endpoint:
    path: /MailDelivery
    method: POST
    data_selector: records
    params:
      type: SMTP
- name: FTP Transfer
  endpoint:
    path: /FTPTransfer
    method: POST
    data_selector: records
    params:
      type: FTP
- name: Web Transaction
  endpoint:
    path: /WebTransaction
    method: POST
    data_selector: records
    params:
      type: URL-SEQ
- name: REST API Transaction
  endpoint:
    path: /RESTAPITransaction
    method: POST
    data_selector: records
    params:
      type: RESTAPISEQ
- name: Web Transaction (Browser)
  endpoint:
    path: /WebTransactionBrowser
    method: POST
    data_selector: records
    params:
      type: REALBROWSER
- name: Server Monitor
  endpoint:
    path: /ServerMonitor
    method: POST
    data_selector: records
    params:
      type: SERVER
- name: redshift_cluster
  endpoint:
    path: /redshift/cluster
    method: GET
    data_selector: records
    params: {}
- name: API Gateway Stage Monitor
  endpoint:
    path: /APIGateway/StageMonitor
    method: GET
    data_selector: attributes
- name: API Gateway Route Monitor
  endpoint:
    path: /APIGateway/RouteMonitor
    method: GET
    data_selector: attributes
- name: API Gateway Resource Monitor
  endpoint:
    path: /APIGateway/ResourceMonitor
    method: GET
    data_selector: attributes
- name: ECS Cluster Monitor
  endpoint:
    path: /ECS/ClusterMonitor
    method: GET
    data_selector: attributes
- name: ECS Cluster Service Monitor
  endpoint:
    path: /ECS/ClusterServiceMonitor
    method: GET
    data_selector: attributes
- name: threshold_parameters
  endpoint:
    path: /services/data/vXX.X/sobjects/ThresholdParameters
    method: GET
    data_selector: records
    params: {}
- name: nat_gateway_monitor
  endpoint:
    path: /monitor/nat_gateway
    method: GET
    data_selector: attributes
    params: {}
- name: ec2_auto_scaling
  endpoint:
    path: /monitor/ec2_auto_scaling
    method: GET
    data_selector: status_checks
    params: {}
- name: tgw_flow_logs
  endpoint:
    path: /tgw_flow_logs
    method: GET
    data_selector: attributes
    params: {}
- name: neptune_instance_monitor
  endpoint:
    path: /neptune/monitor
    method: GET
    data_selector: alerts
    params: {}
- name: certificate_manager_monitor
  endpoint:
    path: /certificate/manager/monitor
    method: GET
    data_selector: alerts
    params: {}
- name: lightsail_instance_monitor
  endpoint:
    path: /lightsail/monitor
    method: GET
    data_selector: alerts
    params: {}
- name: eks_cluster_monitor
  endpoint:
    path: /eks/monitor
    method: GET
    data_selector: alerts
    params: {}
- name: threshold_parameters
  endpoint:
    path: /ec2/cwagent/threshold
    method: GET
    data_selector: thresholds
    params: {}
- name: threshold_parameters
  endpoint:
    path: /monitor/appsync
    method: GET
    data_selector: parameters
    params: {}
- name: VPC_Monitor
  endpoint:
    path: /vpc_monitor
    method: GET
    data_selector: vpc_data
- name: VPC_Region_Monitor
  endpoint:
    path: /vpc_region_monitor
    method: GET
    data_selector: region_data
- name: VPC_Availability_Zone_Monitor
  endpoint:
    path: /vpc_availability_zone_monitor
    method: GET
    data_selector: zone_data
- name: VPC Monitor
  endpoint:
    path: /vpc/monitor
    method: GET
    data_selector: thresholds
- name: VPC Subnet Monitor
  endpoint:
    path: /vpc/subnet/monitor
    method: GET
    data_selector: thresholds
- name: VPC Network Interface Monitor
  endpoint:
    path: /vpc/network_interface/monitor
    method: GET
    data_selector: thresholds
- name: fsx_storage_virtual_machine_monitor
  endpoint:
    path: /services/data/vXX.X/sobjects/FSxStorageVirtualMachineMonitor
    method: GET
    data_selector: records
    params: {}
- name: amazon_fsx_volume_monitor
  endpoint:
    path: /services/data/vXX.X/sobjects/AmazonFSxVolumeMonitor
    method: GET
    data_selector: records
    params: {}
- name: lambda_edge_function_monitor
  endpoint:
    path: /services/data/vXX.X/sobjects/LambdaEdgeFunctionMonitor
    method: GET
    data_selector: records
    params: {}
- name: inspector_monitor
  endpoint:
    path: /services/data/vXX.X/sobjects/InspectorMonitor
    method: GET
    data_selector: records
    params: {}
- name: sftp_monitor
  endpoint:
    path: /services/data/vXX.X/sobjects/SFTPMonitor
    method: GET
    data_selector: records
    params: {}
- name: msk_broker
  endpoint:
    path: /msk/broker
    method: GET
    data_selector: records
    params: {}
- name: msk_cluster
  endpoint:
    path: /msk/cluster
    method: GET
    data_selector: records
    params: {}
- name: msk_connect
  endpoint:
    path: /msk/connect
    method: GET
    data_selector: records
    params: {}
- name: threshold_parameters
  endpoint:
    path: /threshold/parameters
    method: GET
    data_selector: parameters
    params: {}
- name: vpc_protocol_monitor
  endpoint:
    path: /vpc/protocol_monitor
    method: POST
    data_selector: attributes
    params:
      type: VPC_PROTOCOL
      profile_name: mandatory_profile_name
- name: vpc_endpoint_monitor
  endpoint:
    path: /vpc/endpoint_monitor
    method: POST
    data_selector: attributes
    params:
      type: PRIVATE_LINK_ENDPOINT
      profile_name: mandatory_profile_name
- name: vpc_endpoint_service_monitor
  endpoint:
    path: /vpc/endpoint_service_monitor
    method: POST
    data_selector: attributes
    params:
      type: PRIVATE_LINK_SERVICE
      profile_name: mandatory_profile_name
- name: aws_trusted_advisor_category
  endpoint:
    path: /aws/trusted_advisor/category
    method: POST
    data_selector: attributes
    params:
      type: TRUSTED-ADVISOR-CATEGORY
      profile_name: mandatory_profile_name
- name: aws_trusted_advisor_checks
  endpoint:
    path: /aws/trusted_advisor/checks
    method: POST
    data_selector: attributes
    params:
      type: TRUSTED-ADVISOR-CHECKS
      profile_name: mandatory_profile_name
- name: aws_msk_topic
  endpoint:
    path: /aws/msk/topic
    method: POST
    data_selector: attributes
    params:
      type: MSK_TOPIC
      profile_name: mandatory_profile_name
- name: threshold_parameters
  endpoint:
    path: /threshold_parameters
    method: GET
    data_selector: thresholds
    params: {}
- name: cloudwatch_log_group_monitor
  endpoint:
    path: /services/data/vXX.X/sobjects/CloudwatchLogGroupMonitor
    method: GET
    data_selector: records
- name: elb_target_group_monitor
  endpoint:
    path: /services/data/vXX.X/sobjects/ElbTargetGroupMonitor
    method: GET
    data_selector: records
- name: network_devices
  endpoint:
    path: /services/data/vXX.X/sobjects/NetworkDevices
    method: GET
    data_selector: records
- name: soap_web_service
  endpoint:
    path: /services/data/vXX.X/sobjects/SoapWebService
    method: GET
    data_selector: records
- name: RabbitMQ Broker
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: RabbitMQ Queue
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: RabbitMQ Node
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Cognito User Pool Monitor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Cognito User Monitor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Cognito Identity Provider Monitor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Cognito Cognito App Client Monitor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Cognito Cognito Identity Pool Monitor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Cloudwatch Logs Monitor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Cloudwatch Logs Region Monitor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: threshold_parameters
  endpoint:
    path: /api/threshold_parameters
    method: GET
    data_selector: records
- name: ad_server
  endpoint:
    path: /adserver/thresholds
    method: GET
    data_selector: thresholds
- name: threshold_profiles
  endpoint:
    path: /threshold_profiles
    method: POST
    data_selector: data
- name: threshold_profile
  endpoint:
    path: /threshold_profiles/{profile_id}
    method: GET
    data_selector: data
    params: {}
- name: threshold_profiles
  endpoint:
    path: /threshold_profiles/{profile_id}
    method: GET
    data_selector: data
    params: {}
- name: update_threshold_profiles
  endpoint:
    path: /threshold_profiles/{profile_id}
    method: PUT
    data_selector: data
    params: {}
- name: notification_profiles
  endpoint:
    path: /notification_profiles
    method: PUT
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
- name: poller_group_update_settings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: threshold_profiles
  endpoint:
    path: /threshold_profiles/{profile_id}
    method: PUT
    data_selector: data
    params: {}
- name: notification_profiles
  endpoint:
    path: /notification_profiles
    method: POST
    data_selector: data
    params: {}
- name: retrieve_notification_profile
  endpoint:
    path: /notification_profiles/{profile_id}
    method: GET
    data_selector: data
    params: {}
- name: delete_threshold_profile
  endpoint:
    path: /threshold_profiles/{profile_id}
    method: DELETE
    data_selector: data
    params: {}
- name: resource_profile
  endpoint:
    path: /resource_profile
    method: POST
    data_selector: data.checks
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: update_resource_profile
  endpoint:
    path: /resource_profile/{profile_id}
    method: PUT
    data_selector: data
    params: {}
- name: oauth2_providers
  endpoint:
    path: /oauth2_providers
    method: GET
    data_selector: data
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: message
    params: {}
- name: poller_group_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: null
    params:
      pollergroup_id: '1000000003014'
      action_type: ADDPOLLER
      primary_poller_list:
      - '1000000004003'
      - '1000000004002'
      standby_poller_list:
      - '1000000004001'
      - '1000000004005'
- name: jwt
  endpoint:
    path: /jwt
    method: GET
    data_selector: data
    params: {}
- name: email_templates
  endpoint:
    path: /email_templates
    method: POST
    data_selector: data
- name: update_email_template
  endpoint:
    path: /email_templates/{template_id}
    method: PUT
    data_selector: data
- name: retrieve_email_template
  endpoint:
    path: /email_templates/{template_id}
    method: GET
    data_selector: data
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: global_parameters
  endpoint:
    path: /global_parameters
    method: POST
    data_selector: data
    params: {}
- name: audit_logs
  endpoint:
    path: /audit_logs
    method: GET
    data_selector: data
    params: {}
- name: Create Automation
  endpoint:
    path: /it_automation
    method: POST
    data_selector: data
- name: Retrieve Automation
  endpoint:
    path: /it_automation/{action_id}
    method: GET
    data_selector: data
- name: Update Automation
  endpoint:
    path: /it_automation/{action_id}
    method: PUT
    data_selector: data
- name: execute_automation
  endpoint:
    path: /it_automation/execute
    method: PUT
    data_selector: data
- name: retrieve_action
  endpoint:
    path: /it_automation/log_report
    method: GET
    data_selector: data
- name: update_webhook
  endpoint:
    path: /integration/webhooks/{service_id}
    method: PUT
    data_selector: data
- name: retrieve_webhook
  endpoint:
    path: /integration/webhooks/{service_id}
    method: GET
    data_selector: data
- name: add_on_premise_poller
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
- name: pager_duty
  endpoint:
    path: /integration/pager_duty/{service_id}
    method: GET
    data_selector: data
    params: {}
- name: slack
  endpoint:
    path: /integration/slack/{service_id}
    method: GET
    data_selector: data
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: integration_service_now
  endpoint:
    path: /integration/service_now/{service_id}
    method: GET
    data_selector: data
    params: {}
- name: integration_connectwise
  endpoint:
    path: /integration/connectwise/{service_id}
    method: GET
    data_selector: data
    params: {}
- name: poller_group
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: code
    params: {}
- name: hipchat
  endpoint:
    path: /integration/hipchat/{service_id}
    method: GET
    data_selector: data
    params: {}
- name: opsgenie
  endpoint:
    path: /integration/opsgenie/{service_id}
    method: GET
    data_selector: data
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: stride_integration
  endpoint:
    path: /integration/stride/{service_id}
    method: GET
    data_selector: data
    params: {}
- name: event_bridge_integration
  endpoint:
    path: /integration/event_bridge/{service_id}
    method: GET
    data_selector: data
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: event_bridge
  endpoint:
    path: /integration/event_bridge/{service_id}
    method: PUT
    data_selector: data
    params: {}
- name: telegram
  endpoint:
    path: /integration/telegram/{service_id}
    method: GET
    data_selector: data
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: integration_fresh_service
  endpoint:
    path: /integration/fresh_service/{service_id}
    method: GET
    data_selector: data
    params: {}
- name: integration_zen_desk
  endpoint:
    path: /integration/zen_desk/{service_id}
    method: GET
    data_selector: data
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: integration_fresh_desk
  endpoint:
    path: /integration/fresh_desk/{service_id}
    method: GET
    data_selector: data
    params: {}
- name: integration_bigpanda
  endpoint:
    path: /integration/bigpanda/{service_id}
    method: GET
    data_selector: data
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: response
    params: {}
- name: monitors_bulk_action
  endpoint:
    path: /monitors/bulk_action
    method: PUT
    data_selector: response
    params: {}
- name: delete_configuration_rule
  endpoint:
    path: /rules/{rule_id}
    method: DELETE
    data_selector: response
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: message
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: POST
    data_selector: message
    params: {}
- name: retrieve_tag
  endpoint:
    path: /tags/{tag_id}
    method: GET
    data_selector: data
    params: {}
- name: update_tag
  endpoint:
    path: /tags/{tag_id}
    method: PUT
    data_selector: message
    params: {}
- name: maintenance
  endpoint:
    path: /maintenance
    method: POST
    data_selector: data
    params: {}
- name: retrieve_maintenance
  endpoint:
    path: /maintenance/{maintenance_id}
    method: GET
    data_selector: data
    params: {}
- name: update_maintenance
  endpoint:
    path: /maintenance/{maintenance_id}
    method: PUT
    data_selector: data
    params: {}
- name: add_on_premise_poller
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: start_maintenance_name
  endpoint:
    path: /start_maintenance/name
    method: POST
    data_selector: data
    params: {}
- name: end_maintenance
  endpoint:
    path: /end_maintenance
    method: PUT
    data_selector: data
    params: {}
- name: end_maintenance_name
  endpoint:
    path: /end_maintenance/name
    method: PUT
    data_selector: data
    params: {}
- name: business_hours
  endpoint:
    path: /business_hours/{business_hours_id}
    method: GET
    data_selector: data
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
- name: scheduled_reports
  endpoint:
    path: /scheduled_reports
    method: POST
- name: scheduled_reports
  endpoint:
    path: /scheduled_reports/{report_id}
    method: PUT
    data_selector: data
    params: {}
- name: poller_group
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: Server Command
  endpoint:
    path: /server_command
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      action_timeout: int
      command: string
      resource_type: int
      destination_monitors: JSON Array
      destination_monitor_groups: JSON Array
      destination_tags: JSON Array
      subgroup_monitors: boolean
      send_mail: boolean
- name: Windows Service
  endpoint:
    path: /windows_service
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      action_timeout: int
      send_mail: boolean
      resource_type: int
      destination_monitors: JSON Array
      destination_monitor_groups: JSON Array
      destination_tags: JSON Array
      subgroup_monitors: boolean
      service_action_type: int
      service_name: string
- name: Server Reboot
  endpoint:
    path: /server_reboot
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      action_timeout: int
      send_mail: boolean
      resource_type: int
      destination_monitors: JSON Array
      destination_monitor_groups: JSON Array
      destination_tags: JSON Array
      subgroup_monitors: boolean
      args: string
- name: Hyper-V
  endpoint:
    path: /hyperv
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      action_timeout: int
      send_mail: boolean
      hyperv_action_type: int
      hyperv_monitor: long
      hypervms: JSON Array
- name: IIS
  endpoint:
    path: /iis
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      action_timeout: int
      send_mail: boolean
      iis_monitor: long
      iis_action_type: int
      iis_child: JSON Array
- name: Mark as Maintenance
  endpoint:
    path: /mark_as_maintenance
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      send_mail: boolean
      destination_monitors: JSON Array
      args: string
- name: Start/Stop/Stop-Hibernate/Reboot EC2
  endpoint:
    path: /ec2_action
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: Start/Stop/Reboot/Reboot With Failover RDS
  endpoint:
    path: /rds_action
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: Trigger Lambda Function
  endpoint:
    path: /lambda_function
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: Publish to SNS Topic
  endpoint:
    path: /sns_topic
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_message: string
      action_subject: string
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: EC Memcached Node Reboot
  endpoint:
    path: /memcached_node_reboot
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: EC Memcached Cluster Reboot
  endpoint:
    path: /memcached_cluster_reboot
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: EC Redis Node Reboot
  endpoint:
    path: /redis_node_reboot
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: Send Message to SQS Queue
  endpoint:
    path: /sqs_queue
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_message: string
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: Start/Stop Kinesis Analytics
  endpoint:
    path: /kinesis_analytics
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: Elastic Beanstalk Actions
  endpoint:
    path: /elastic_beanstalk
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: Invoke API Gateway Resource URL
  endpoint:
    path: /api_gateway
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      action_method: String
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      send_in_json_format: boolean
      custom_headers: JSON array
      destination_monitor: JSON Array
- name: Reboot Redshift Cluster
  endpoint:
    path: /redshift_cluster
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: SES Send Email
  endpoint:
    path: /ses_email
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      aws_ses_monitors: JSON Array
      ses_from_email: string
      email_destinations: JSON Array
      action_subject: string
      action_message: string
      conf_set: string
- name: Push Record to Kinesis Data Stream
  endpoint:
    path: /kinesis_data_stream
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      request_body: string
      destination_monitor: JSON Array
      partition_key: string
      explicit_hash_key: string
- name: Execute Step Function
  endpoint:
    path: /step_function
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      action_message: string
      destination_monitor: JSON Array
- name: Add Step to EMR Cluster
  endpoint:
    path: /emr_cluster
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      aws_emr_monitors: long
      step_ids: JSON Array
- name: Start/Stop/Reboot/Rebuild Workspace
  endpoint:
    path: /workspace_action
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: Reboot Neptune Instance
  endpoint:
    path: /neptune_instance
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: Start/Stop/Reboot Lightsail Instance
  endpoint:
    path: /lightsail_instance
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: Reboot Amazon MQ Broker
  endpoint:
    path: /mq_broker
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: Start/Stop/Reboot Lightsail Database
  endpoint:
    path: /lightsail_database
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: Start/Stop/Resume/Reload DMS Task
  endpoint:
    path: /dms_task
    method: POST
    data_selector: action
    params:
      action_name: string
      action_type: int
      aws_action_type: int
      action_timeout: int
      send_mail: boolean
      destination_monitor: JSON Array
- name: milestone
  endpoint:
    path: /milestone
    method: GET
    data_selector: milestone_list
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: ''
    params: {}
- name: sla_settings
  endpoint:
    path: /sla_settings
    method: POST
    data_selector: ''
    params: {}
- name: get_sla_report
  endpoint:
    path: /sla_settings/{sla_id}
    method: GET
    data_selector: data
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: response
    params: {}
- name: sla_settings
  endpoint:
    path: /sla_settings/{sla_id}
    method: PUT
    data_selector: response
    params: {}
- name: status_dashboards
  endpoint:
    path: /status_dashboards
    method: POST
    data_selector: response
    params: {}
- name: status_dashboard
  endpoint:
    path: /status_dashboards/{status_viewid}
    method: GET
    data_selector: data
    params: {}
- name: update_status_dashboard
  endpoint:
    path: /status_dashboards/{status_viewid}
    method: PUT
    data_selector: data
    params: {}
- name: poller_group_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: uptime_button
  endpoint:
    path: /uptime_buttons
    method: POST
    data_selector: data
- name: dashboard_view
  endpoint:
    path: /dashboard_views/{dashboard_viewid}
    method: PUT
    data_selector: data
- name: poller_group
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
- name: poller_group
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: success
    params: {}
- name: announcement
  endpoint:
    path: /announcement/{status_viewid}/{announcement_id}
    method: PUT
    data_selector: data
    params: {}
- name: dashboard_views
  endpoint:
    path: /dashboard_views/{dashboard_viewid}
    method: GET
    data_selector: data
    params: {}
- name: uptime_button
  endpoint:
    path: /uptime_buttons/{monitor_id}
    method: PUT
    data_selector: data
    params: {}
- name: poller_group
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: anomaly_dashboard
  endpoint:
    path: /reports/anomaly
    method: GET
    data_selector: data
    params:
      period: '3'
      monitor_type: URL
- name: Single Application Details
  endpoint:
    path: /apminsight/app/{application_id}/{time_window}
    method: GET
    data_selector: data
    params: {}
- name: Manage Application
  endpoint:
    path: /api/apminsight/app/{application_id}/manage
    method: POST
    data_selector: data
    params: {}
- name: Delete Application
  endpoint:
    path: /api/apminsight/app/{application_id}
    method: DELETE
    data_selector: data
    params: {}
- name: anomaly_cloud_report
  endpoint:
    path: /reports/anomaly/cloud/{parent_id}
    method: GET
    data_selector: data.anomaly_summary
    params:
      period: '{report_period_constants}'
- name: anomaly_monitor_report
  endpoint:
    path: /reports/anomaly/monitors/type
    method: GET
    data_selector: data.anomaly_table_data
    params:
      monitor_id: '{monitor_id}'
      period: '{report_period_constants}'
      severity: '{anomaly_severity_types}'
- name: anomaly_monitor_group_report
  endpoint:
    path: /reports/anomaly/monitor_groups
    method: GET
    data_selector: data.anomaly_table_data
    params:
      group_id: '{group_id}'
      period: '{report_period_constants}'
      severity: '{anomaly_severity_types}'
- name: apm_applications
  endpoint:
    path: /apminsight/app/{time_window}
    method: GET
    data_selector: data
    params: {}
- name: agent_info
  endpoint:
    path: /apminsight/ins/agent_info
    method: GET
    data_selector: data
- name: manage_instance
  endpoint:
    path: /apminsight/ins/{instance_id}/manage
    method: POST
- name: delete_instance
  endpoint:
    path: /apminsight/ins/{instance_id}
    method: DELETE
- name: single_transaction_details
  endpoint:
    path: /apminsight/{resource_type}/{resource_id}/{txn_type}/{txn_id}/{time_window}
    method: GET
- name: poller_group_updates
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: database_operations
  endpoint:
    path: /apminsight/{resource_type}/{resource_id}/db/list/{limit}/{attribute_type}/{time_window}
    method: GET
    data_selector: data
    params: {}
- name: background_transactions
  endpoint:
    path: /apminsight/{resource_type}/{resource_id}/bgtxn/list/{limit}/{attribute_type}/{time_window}
    method: GET
    data_selector: data
    params: {}
- name: errors
  endpoint:
    path: /apminsight/{resource_type}/{resource_id}/error/list/{limit}/{time_window}
    method: GET
    data_selector: data
    params: {}
- name: traces
  endpoint:
    path: /apminsight/{resource_type}/{resource_id}/tr/list/{limit}/{attr_trc_constant}/{thresholdLevel}/{time_window}
    method: GET
    data_selector: data
    params: {}
- name: add_on_premise_poller
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: single_trace_details
  endpoint:
    path: /apminsight/{resource_type}/{resource_id}/tr/{trId}
    method: GET
    data_selector: data
    params: {}
- name: delete_single_trace
  endpoint:
    path: /api/apminsight/{resource_type}/{resource_id}/tr/{instance_id}_{txn_id}_{collection_time}
    method: DELETE
    data_selector: data
    params: {}
- name: web_transaction_graph
  endpoint:
    path: /apminsight/{resource_type}/{resource_id}/{txn_type}/{txn_id}/graph/{graph_constant}/{time_window}
    method: GET
    data_selector: data
    params: {}
- name: db_graph
  endpoint:
    path: /apminsight/{resource_type}/{resource_id}/db/graph/{graph_constant}/{time_window}
    method: GET
    data_selector: data
    params:
      oauthscope: Site24x7.Reports.Read
- name: jvm_gc
  endpoint:
    path: /apminsight/{resource_type}/{resource_id}/jvm/gc/{time_window}
    method: GET
    data_selector: data
    params:
      oauthscope: Site24x7.Reports.Read
- name: jvm_threads
  endpoint:
    path: /apminsight/{resource_type}/{resource_id}/jvm/threads/{time_window}
    method: GET
    data_selector: data
    params:
      oauthscope: Site24x7.Reports.Read
- name: add_on_premise_poller
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: message
    params:
      oauthscope: Site24x7.Admin.Update
- name: jvm_config
  endpoint:
    path: /apminsight/{resource_type}/{resource_id}/jvm/config
    method: GET
    data_selector: data
- name: iis_details
  endpoint:
    path: /apminsight/{resource_type}/{resource_id}/iis/details/{time_window}
    method: GET
    data_selector: data
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: ''
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: apminsight_agent_config_profile
  endpoint:
    path: /apminsight/agent_config_profile/{profile_id}
    method: PUT
    data_selector: data
    params: {}
- name: list_all_rum_applications
  endpoint:
    path: /rum/web/view/userapps/{time_window}
    method: GET
- name: single_rum_application_details
  endpoint:
    path: /rum/web/view/{application_id}/{time_window}
    method: GET
- name: transaction_details_of_rum_application
  endpoint:
    path: /rum/web/view/{application_id}/wt/list/avgRT/{time_window}
    method: GET
- name: poller_group
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: device_details
  endpoint:
    path: /rum/web/view/{application_id}/device/{time_window}
    method: GET
    data_selector: data
    params: {}
- name: geographic_details
  endpoint:
    path: /rum/web/view/{application_id}/geographic/{attribute}/US/{time_window}
    method: GET
    data_selector: data
    params: {}
- name: Top N Internet Service Provider details
  endpoint:
    path: /rum/web/view/{appId}/isp/{limit}/{tw}
    method: GET
    data_selector: data.isps_list
- name: Top N geographic details
  endpoint:
    path: /rum/web/view/{application_id}/geographic/US/{attribute}/{limit}/{time_window}
    method: GET
    data_selector: data.rt_list
- name: Top N report data
  endpoint:
    path: /rum/web/view/{application_id}/top/n
    method: GET
    data_selector: data
- name: poller_group_update_settings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params:
      pollergroup_id: '1000000003014'
      action_type: ADDPOLLER
      primary_poller_list:
      - '1000000004003'
      - '1000000004002'
      standby_poller_list:
      - '1000000004001'
      - '1000000004005'
- name: rum_throughput_graph
  endpoint:
    path: /rum/web/view/{application_id}/graph/throughput/{time_window}
    method: GET
    data_selector: data
- name: rum_developer_summary_graph
  endpoint:
    path: /rum/web/view/{application_id}/developer/{time_window}
    method: GET
    data_selector: data
- name: poller_group_settings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: javascript_error_list
  endpoint:
    path: /rum/web/view/{application_id}/error/filter/list/{time_window}
    method: GET
    data_selector: data.error_list
    params: {}
- name: poller_group_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: retrieve_note
  endpoint:
    path: /monitors/notes/{monitor_id}
    method: GET
    data_selector: data
    params: {}
- name: add_or_update_note
  endpoint:
    path: /monitors/notes/{monitor_id}
    method: PUT
    data_selector: data
    params: {}
- name: pollergroup_updatesettings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: null
    params: {}
- name: applog_logtype
  endpoint:
    path: /api/applog/logtype/{logtype_id}
    method: GET
    data_selector: data
    params: {}
- name: delete_applog_logtype
  endpoint:
    path: /api/applog/logtype/{logtype_id}
    method: DELETE
    data_selector: null
    params: {}
- name: poller_group_update_settings
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: null
    params: {}
- name: log_profiles
  endpoint:
    path: /applog/log_profiles/{profile_id}
    method: GET
    data_selector: data
    params: {}
- name: delete_log_profile
  endpoint:
    path: /applog/log_profiles/{profile_id}
    method: DELETE
    data_selector: null
    params: {}
- name: credential_profile_update
  endpoint:
    path: /credential_profile/{profile_id}
    method: PUT
    data_selector: data
    params: {}
- name: On-Premise Poller Group
  endpoint:
    path: /monitors
    method: POST
    data_selector: data
    params: {}
- name: Add On-Premise Poller
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: Remove On-Premise Poller
  endpoint:
    path: /pollergroup/updatesettings
    method: PUT
    data_selector: data
    params: {}
- name: Redistribute Monitors
  endpoint:
    path: /monitors/pollergroup/redistribute/{poller_group_id}
    method: PUT
    data_selector: data
    params: {}
- name: website_monitoring
  endpoint:
    path: /website-monitoring
    method: GET
    data_selector: records
- name: synthetic_monitoring
  endpoint:
    path: /synthetic-monitoring
    method: GET
    data_selector: records
- name: real_user_monitoring
  endpoint:
    path: /real-user-monitoring
    method: GET
    data_selector: records
- name: website_monitor
  endpoint:
    path: /api/website/monitor
    method: GET
    data_selector: monitors
    params: {}
- name: server_monitor
  endpoint:
    path: /api/server/monitor
    method: GET
    data_selector: monitors
    params: {}
- name: Risk Assessment
  endpoint:
    path: /api/v1/risk_assessment
    method: GET
    data_selector: data
    params: {}
- name: whats_new
  endpoint:
    path: /whats-new-feed.rss
    method: GET
    data_selector: item
- name: monitor
  endpoint:
    path: /monitors
    method: GET
    data_selector: monitors
    params:
      incremental: last_modified
- name: monitor
  endpoint:
    path: /v1/monitors
    method: GET
    data_selector: monitors
    params: {}
- name: website_monitoring
  endpoint:
    path: /api/website_monitoring
    method: GET
- name: real_user_monitoring
  endpoint:
    path: /api/real_user_monitoring
    method: GET
- name: DNS Analysis
  endpoint:
    path: /tools/dns-lookup.html
    method: GET
    data_selector: records
    params: {}
- name: Website Availability
  endpoint:
    path: /check-website-availability.html
    method: GET
    data_selector: records
    params: {}
- name: Webpage Speed Test
  endpoint:
    path: /tools/web-speed-report.html
    method: GET
    data_selector: records
    params: {}
- name: JavaScript String Escaper / Unescaper
  endpoint:
    path: /tools/js-escaper.html
    method: GET
- name: Base64 Encoder
  endpoint:
    path: /tools/base64-encoder.html
    method: GET
- name: Base64 Decoder
  endpoint:
    path: /tools/base64-decoder.html
    method: GET
- name: SVG Viewer
  endpoint:
    path: /tools/svg-viewer.html
    method: GET
- name: JWT Decoder
  endpoint:
    path: /tools/jwt-decoder.html
    method: GET
- name: Regex Parser
  endpoint:
    path: /tools/regex-parser.html
    method: GET
- name: JSON Path Evaluator
  endpoint:
    path: /tools/json-path-evaluator.html
    method: GET
- name: Xpath Evaluator
  endpoint:
    path: /tools/xpath-evaluator.html
    method: GET
- name: HTML Validator
  endpoint:
    path: /tools/html-validator.html
    method: GET
- name: Redirection Checker
  endpoint:
    path: /tools/redirection-checker.html
    method: GET
- name: Link Checker
  endpoint:
    path: /tools/link-checker.html
    method: GET
- name: JSONPath Finder and Evaluator
  endpoint:
    path: /tools/jsonpath-finder-validator.html
    method: GET
- name: Thread dump analyzer
  endpoint:
    path: /tools/thread-dump-analyzer.html
    method: GET
- name: Method Execution Summary
  endpoint:
    path: /tools/thread-dump-method-execution-summary.html
    method: GET
- name: Thread Stack Length
  endpoint:
    path: /tools/thread-dump-stacktrace-length.html
    method: GET
- name: DownRadar
  endpoint:
    path: /dr
    method: GET
- name: check_website_availability
  endpoint:
    path: /tools/check-website-availability.html
    method: GET
    data_selector: results
    params: {}
- name: website_monitoring
  endpoint:
    path: /website-monitoring.html
    method: GET
    data_selector: monitoring_data
    params: {}
- name: domain_analysis
  endpoint:
    path: /tools/public/r/LytdYBmNj1IN4PMY3Xiqv0Mw6ZD1bZy4PYqy+xPLeqMPIMFETEyeIge2XtMcFwbAzyk80gU1FzRzcYbtoFqJxFMujmg3Gig7UWAwgulIzgfZ3CefXQbkBw==
    method: GET
    data_selector: results
    params: {}
- name: domain_analysis
  endpoint:
    path: /tools/find-ip-address-of-web-site.html
    method: GET
    data_selector: results
    params: {}
- name: domain_analysis
  endpoint:
    path: /tools/public/r/LytdYBmNj1IN4PMY3Xiqv0Mw6ZD1bZy4PYqy+xPLeqMkGlZsl9Ib6jVUBtyhHkNMelNy49puuvn7oW1yvJt+cxEx98+psvo2PHfVA0f6Zo5eSl1u2RcNb7aAATIohz62
    method: GET
    data_selector: Test Result
    params: {}
- name: website_speed_test
  endpoint:
    path: /api/v1/website_speed_test
    method: GET
    data_selector: results
- name: domain_analysis
  endpoint:
    path: /tools/blacklist-check
    method: GET
    data_selector: null
    params: {}
- name: blacklist_check
  endpoint:
    path: /check
    method: GET
    data_selector: results
- name: last_10_domains_analysed
  endpoint:
    path: /last10domains
    method: GET
    data_selector: domains
    params: {}
- name: domains_analyzed
  endpoint:
    path: /domains/analyzed
    method: GET
    data_selector: domains
- name: check_website_availability
  endpoint:
    path: /tools/check-website-availability.html
    method: GET
- name: ping_your_website
  endpoint:
    path: /tools/ping-test.html
    method: GET
- name: find_ip_address
  endpoint:
    path: /tools/find-ip-address-of-web-site.html
    method: GET
- name: find_location_of_your_domain
  endpoint:
    path: /tools/find-website-location.html
    method: GET
- name: compare_websites
  endpoint:
    path: /tools/website-comparison.html
    method: GET
- name: realtime_blacklist_check
  endpoint:
    path: /tools/blacklist-check.html
    method: GET
- name: brand_reputation_check
  endpoint:
    path: /tools/brand-reputation-check.html
    method: GET
- name: tls_checker
  endpoint:
    path: /tools/tls-checker.html
    method: GET
- name: dkim_validator
  endpoint:
    path: /tools/dkim-validator.html
    method: GET
- name: dmarc_analyzer
  endpoint:
    path: /tools/dmarc-analyzer.html
    method: GET
- name: dns_propagation_checker
  endpoint:
    path: /tools/dns-propagation.html
    method: GET
- name: email_validator
  endpoint:
    path: /tools/email-validator.html
    method: GET
- name: domain_expiry_checker
  endpoint:
    path: /tools/domain-expiry.html
    method: GET
- name: spf_record_checker
  endpoint:
    path: /tools/spf-validator.html
    method: GET
- name: whois_lookup
  endpoint:
    path: /tools/whois-lookup.html
    method: GET
- name: domains
  endpoint:
    path: /tools/domain-expiry.html
    method: GET
    data_selector: results
    params: {}
- name: generate_pgp_keys
  endpoint:
    path: /pgp-key-generator
    method: POST
    data_selector: generated_keys
    params: {}
- name: Check Website Availability
  endpoint:
    path: /tools/check-website-availability.html
    method: GET
- name: Ping your Website or Webserver
  endpoint:
    path: /tools/ping-test.html
    method: GET
- name: Find IP Address
  endpoint:
    path: /tools/find-ip-address-of-web-site.html
    method: GET
- name: Find Location of your Domain
  endpoint:
    path: /tools/find-website-location.html
    method: GET
- name: Compare Websites
  endpoint:
    path: /tools/website-comparison.html
    method: GET
- name: Realtime Blacklist Check
  endpoint:
    path: /tools/blacklist-check.html
    method: GET
- name: Brand Reputation Check
  endpoint:
    path: /tools/brand-reputation-check.html
    method: GET
- name: TLS Checker
  endpoint:
    path: /tools/tls-checker.html
    method: GET
- name: DKIM Validator
  endpoint:
    path: /tools/dkim-validator.html
    method: GET
- name: DMARC Analyzer
  endpoint:
    path: /tools/dmarc-analyzer.html
    method: GET
- name: DNS Propagation Checker
  endpoint:
    path: /tools/dns-propagation.html
    method: GET
- name: Email Validator
  endpoint:
    path: /tools/email-validator.html
    method: GET
- name: Domain Expiry Checker
  endpoint:
    path: /tools/domain-expiry.html
    method: GET
- name: SPF Record Checker
  endpoint:
    path: /tools/spf-validator.html
    method: GET
- name: Whois Lookup
  endpoint:
    path: /tools/whois-lookup.html
    method: GET
- name: Message Header Analyzer
  endpoint:
    path: /tools/message-header-analyzer.html
    method: GET
- name: regex_tester
  endpoint:
    path: /help/api/
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_units
  endpoint:
    path: /data-units
    method: GET
    data_selector: units
    params: {}
- name: dns_lookup
  endpoint:
    path: /tools/dns-lookup.html
    method: GET
    data_selector: domains
    params: {}
- name: domain_analysis
  endpoint:
    path: /tools/dns-propagation
    method: GET
    data_selector: results
- name: last_domains_analyzed
  endpoint:
    path: /tools/public/last_domains_analyzed
    method: GET
    data_selector: domains
    params: {}
- name: domains
  endpoint:
    path: /tools/public/r/LytdYBmNj1IN4PMY3Xiqv0Mw6ZD1bZy4PYqy+xPLeqOjHWgwqZ2MbA4lfpVL2geQPvvZfzXSudzQ5YbJkkyCbtIdnI/cbOkurrA8diqBJRGdCmSDmdrX7Q==
    method: GET
    data_selector: domains
    params: {}
- name: IPv4 Subnet Calculator
  endpoint:
    path: /tools/ipv4-subnetcalculator.html
    method: GET
- name: IPv6 Subnet Calculator
  endpoint:
    path: /tools/ipv6-subnetcalculator.html
    method: GET
- name: DNS Lookup
  endpoint:
    path: /tools/dns-lookup.html
    method: GET
    data_selector: records
    params: {}
- name: MX Lookup
  endpoint:
    path: /tools/mx-lookup.html
    method: GET
    data_selector: records
    params: {}
- name: last_10_domains_analysed
  endpoint:
    path: /web-speed-report/last-10-domains
    method: GET
    data_selector: domains
    params: {}
- name: cookie_test
  endpoint:
    path: /cookie/test
    method: POST
    data_selector: result
- name: website_monitoring
  endpoint:
    path: /api/website-monitoring
    method: GET
    data_selector: data
    params: {}
- name: website_monitoring
  endpoint:
    path: /api/website_monitoring
    method: GET
    data_selector: records
- name: server_monitoring
  endpoint:
    path: /api/server_monitoring
    method: GET
    data_selector: records
- name: Timezone
  endpoint:
    path: /api/timezones
    method: GET
    data_selector: timezones
- name: XML to JSON Converter
  endpoint:
    path: /tools/xml-to-json-converter
    method: GET
    data_selector: output
- name: CSV to JSON
  endpoint:
    path: /csv-to-json
    method: POST
- name: CSV to YAML Converter
  endpoint:
    path: /csv-to-yaml-converter
    method: GET
    data_selector: results
- name: website_monitoring
  endpoint:
    path: /api/website
    method: GET
    data_selector: data
    params: {}
- name: Check Website Availability
  endpoint:
    path: /tools/check-website-availability.html
    method: GET
- name: Ping your Website or Webserver
  endpoint:
    path: /tools/ping-test.html
    method: GET
- name: Find IP Address
  endpoint:
    path: /tools/find-ip-address-of-web-site.html
    method: GET
- name: Find Location of your Domain
  endpoint:
    path: /tools/find-website-location.html
    method: GET
- name: Compare Websites
  endpoint:
    path: /tools/website-comparison.html
    method: GET
- name: Realtime Blacklist Check
  endpoint:
    path: /tools/blacklist-check.html
    method: GET
- name: Brand Reputation Check
  endpoint:
    path: /tools/brand-reputation-check.html
    method: GET
- name: TLS Checker
  endpoint:
    path: /tools/tls-checker.html
    method: GET
- name: DKIM Validator
  endpoint:
    path: /tools/dkim-validator.html
    method: GET
- name: DMARC Analyzer
  endpoint:
    path: /tools/dmarc-analyzer.html
    method: GET
- name: DNS Propagation Checker
  endpoint:
    path: /tools/dns-propagation.html
    method: GET
- name: Email Validator
  endpoint:
    path: /tools/email-validator.html
    method: GET
- name: Domain Expiry Checker
  endpoint:
    path: /tools/domain-expiry.html
    method: GET
- name: SPF Record Checker
  endpoint:
    path: /tools/spf-validator.html
    method: GET
- name: Whois Lookup
  endpoint:
    path: /tools/whois-lookup.html
    method: GET
- name: EML Viewer
  endpoint:
    path: /tools/eml-viewer.html
    method: GET
- name: ICS Viewer
  endpoint:
    path: /tools/ics-viewer.html
    method: GET
- name: PGP Key Generator
  endpoint:
    path: /tools/pgp-key-generator.html
    method: GET
- name: TLS RPT Checker
  endpoint:
    path: /tools/tls-rpt-checker.html
    method: GET
- name: MTA-STS Lookup
  endpoint:
    path: /tools/mta-sts-lookup.html
    method: GET
- name: BIMI Checker
  endpoint:
    path: /tools/bimi-checker.html
    method: GET
- name: ASN Lookup
  endpoint:
    path: /tools/asn-lookup.html
    method: GET
- name: Message Header Analyzer
  endpoint:
    path: /tools/message-header-analyzer.html
    method: GET
- name: IDN Conversion
  endpoint:
    path: /idn/convert
    method: POST
    data_selector: result
    params: {}
- name: check_website_availability
  endpoint:
    path: /tools/check-website-availability.html
    method: GET
- name: ping_website
  endpoint:
    path: /tools/ping-test.html
    method: GET
- name: find_ip_address
  endpoint:
    path: /tools/find-ip-address-of-web-site.html
    method: GET
- name: synthetic_monitoring
  endpoint:
    path: /api/synthetic_monitoring
    method: GET
    data_selector: data
- name: server_performance
  endpoint:
    path: /api/v1/server/performance
    method: GET
    data_selector: performance_data
    params: {}
- name: network_monitoring
  endpoint:
    path: /network-monitoring
    method: GET
    data_selector: data
    params: {}
- name: network_monitoring
  endpoint:
    path: /api/network_monitoring
    method: GET
    data_selector: records
    params: {}
- name: application_performance
  endpoint:
    path: /services/data/vXX.X/sobjects/ApplicationPerformance
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: website_monitoring
  endpoint:
    path: /api/website_monitoring
    method: GET
    data_selector: data
    params: {}
- name: server_monitoring
  endpoint:
    path: /api/server_monitoring
    method: GET
    data_selector: data
    params: {}
- name: website_monitoring
  endpoint:
    path: /website-monitoring.html
    method: GET
- name: synthetic_monitoring
  endpoint:
    path: /synthetic-monitoring.html
    method: GET
- name: real_user_monitoring
  endpoint:
    path: /real-user-monitoring.html
    method: GET
- name: mobile_rum
  endpoint:
    path: /mobile-rum.html
    method: GET
- name: log_management
  endpoint:
    path: /log-management.html
    method: GET
- name: application_performance_monitoring
  endpoint:
    path: /application-performance-monitoring.html
    method: GET
- name: database_monitoring
  endpoint:
    path: /database-monitoring.html
    method: GET
- name: cloud_monitoring
  endpoint:
    path: /cloud-monitoring.html
    method: GET
- name: server_monitoring
  endpoint:
    path: /server-monitoring.html
    method: GET
- name: aws_monitoring
  endpoint:
    path: /aws-monitoring.html
    method: GET
- name: azure_monitoring
  endpoint:
    path: /azure.html
    method: GET
- name: gcp_monitoring
  endpoint:
    path: /gcp.html
    method: GET
- name: kubernetes_monitoring
  endpoint:
    path: /kubernetes-monitoring.html
    method: GET
- name: website_monitoring
  endpoint:
    path: /website-monitoring
    method: GET
    data_selector: monitoringData
- name: performance_metrics
  endpoint:
    path: /performance-metrics
    method: GET
    data_selector: metricsData
- name: website_monitoring
  endpoint:
    path: /website-monitoring
    method: GET
    data_selector: data
    params: {}
- name: synthetic_monitoring
  endpoint:
    path: /synthetic-monitoring
    method: GET
    data_selector: data
    params: {}
- name: real_user_monitoring
  endpoint:
    path: /real-user-monitoring
    method: GET
    data_selector: data
    params: {}
- name: website_monitoring
  endpoint:
    path: /api/website_monitoring
    method: GET
    data_selector: records
- name: uptime_monitoring
  endpoint:
    path: /api/uptime_monitoring
    method: GET
    data_selector: records
- name: North America
  endpoint:
    path: /data-center-locations/north-america
    method: GET
    data_selector: locations
    params: {}
- name: Europe
  endpoint:
    path: /data-center-locations/europe
    method: GET
    data_selector: locations
    params: {}
- name: Australia
  endpoint:
    path: /data-center-locations/australia
    method: GET
    data_selector: locations
    params: {}
- name: China
  endpoint:
    path: /data-center-locations/china
    method: GET
    data_selector: locations
    params: {}
- name: Japan
  endpoint:
    path: /data-center-locations/japan
    method: GET
    data_selector: locations
    params: {}
- name: India
  endpoint:
    path: /data-center-locations/india
    method: GET
    data_selector: locations
    params: {}
- name: Saudi Arabia DC
  endpoint:
    path: /data-center-locations/saudi-arabia
    method: GET
    data_selector: locations
    params: {}
- name: Canada DC
  endpoint:
    path: /data-center-locations/canada
    method: GET
    data_selector: locations
    params: {}
- name: UK DC
  endpoint:
    path: /data-center-locations/uk
    method: GET
    data_selector: locations
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: SMTP Server Monitoring
  endpoint:
    path: /monitor/smtp
    method: GET
    data_selector: availability
    params: {}
- name: POP/IMAP Server Monitoring
  endpoint:
    path: /monitor/popimap
    method: GET
    data_selector: availability
    params: {}
- name: dns_monitoring
  endpoint:
    path: /api/v1/dns_monitoring
    method: GET
    data_selector: dns_records
    params: {}
- name: SSL/TLS certificate monitoring
  endpoint:
    path: /ssl-certificate-monitoring
    method: GET
    data_selector: monitoring_data
    params: {}
- name: Domain Expiry Monitor
  endpoint:
    path: /domain-expiry-monitor
    method: GET
    data_selector: domain_data
    params: {}
- name: FTP Performance Metrics
  endpoint:
    path: /ftp/monitoring
    method: GET
    data_selector: metrics
    params: {}
- name: monitor
  endpoint:
    path: /api/monitor
    method: GET
    data_selector: monitors
- name: public_status_page
  endpoint:
    path: /statusiq/public-status-page
    method: GET
    data_selector: status_updates
- name: private_status_page
  endpoint:
    path: /statusiq/private-status-page
    method: GET
    data_selector: status_updates
- name: vmware_monitoring
  endpoint:
    path: /services/data/vXX.X/sobjects/vmware_monitoring
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: Cluster Monitoring
  endpoint:
    path: /monitoring/cluster
    method: GET
    data_selector: performance
    params: {}
- name: Host Monitoring
  endpoint:
    path: /monitoring/host
    method: GET
    data_selector: performance
    params: {}
- name: VM Monitoring
  endpoint:
    path: /monitoring/vm
    method: GET
    data_selector: performance
    params: {}
- name: windows_performance_metrics
  endpoint:
    path: /windows/metrics
    method: GET
    data_selector: performance_metrics
- name: windows_event_logs
  endpoint:
    path: /windows/event_logs
    method: GET
    data_selector: event_logs
- name: Linux performance metrics
  endpoint:
    path: /api/v1/linux/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: Process monitoring
  endpoint:
    path: /api/v1/linux/processes
    method: GET
    data_selector: processes
    params: {}
- name: sql_server_monitoring
  endpoint:
    path: /api/sqlserver/monitor
    method: GET
    data_selector: data
    params: {}
- name: exchange_monitoring
  endpoint:
    path: /api/exchange_monitoring
    method: GET
    data_selector: metrics
    params: {}
- name: custom_metrics
  endpoint:
    path: /api/v1/custom_metrics
    method: POST
    data_selector: metrics
    params: {}
- name: prometheus_metrics
  endpoint:
    path: /prometheus/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: kubernetes_performance
  endpoint:
    path: /kubernetes/performance
    method: GET
    data_selector: metrics
    params: {}
- name: kubernetes_logs
  endpoint:
    path: /kubernetes/logs
    method: GET
    data_selector: logs
    params: {}
- name: kubernetes_alerts
  endpoint:
    path: /kubernetes/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: cron_monitor
  endpoint:
    path: /cron/monitor
    method: GET
    data_selector: records
    params: {}
- name: AWS Monitoring
  endpoint:
    path: /aws-monitoring
    method: GET
    data_selector: metrics
    params: {}
- name: website_monitoring
  endpoint:
    path: /api/v1/website
    method: GET
    data_selector: records
- name: server_monitoring
  endpoint:
    path: /api/v1/server
    method: GET
    data_selector: records
- name: GCP monitoring
  endpoint:
    path: /gcp/?src=prod-menu
    method: GET
    data_selector: ''
    params: {}
- name: performance_metrics
  endpoint:
    path: /api/performance_metrics
    method: GET
    data_selector: data
    params: {}
- name: transaction_traces
  endpoint:
    path: /api/transaction_traces
    method: GET
    data_selector: data
    params: {}
- name: php_app_metrics
  endpoint:
    path: /api/php/app/metrics
    method: GET
    data_selector: data
- name: php_app_traces
  endpoint:
    path: /api/php/app/traces
    method: GET
    data_selector: data
- name: mobile_app_performance
  endpoint:
    path: /mobile_apm
    method: GET
    data_selector: records
- name: real_user_monitoring
  endpoint:
    path: /api/rum
    method: GET
    data_selector: data
    params: {}
- name: mobile_real_user_monitoring
  endpoint:
    path: /api/mobile_rum
    method: GET
    data_selector: data
    params: {}
- name: synthetic_transaction_monitoring
  endpoint:
    path: /api/synthetic
    method: GET
    data_selector: data
    params: {}
- name: email_monitoring
  endpoint:
    path: /api/email_monitoring
    method: GET
    data_selector: data
    params: {}
- name: ftp_monitoring
  endpoint:
    path: /api/ftp_monitoring
    method: GET
    data_selector: data
    params: {}
- name: rest_api_monitoring
  endpoint:
    path: /api/rest_api
    method: GET
    data_selector: data
    params: {}
- name: website_monitoring
  endpoint:
    path: /api/website_monitoring
    method: GET
    data_selector: data
    params: {}
- name: server_monitoring
  endpoint:
    path: /api/server_monitoring
    method: GET
    data_selector: data
    params: {}
- name: zoom_events
  endpoint:
    path: /api/zoom/events
    method: GET
    data_selector: events
- name: uptime_monitor
  endpoint:
    path: /api/uptime_monitor
    method: GET
    data_selector: monitors
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: network_traffic
  endpoint:
    path: /network-traffic-monitoring
    method: GET
    data_selector: traffic_data
    params: {}
- name: NetFlow
  endpoint:
    path: /help/netflow/?src=content
    method: GET
- name: Site24x7
  endpoint:
    path: /
    method: GET
- name: NCM
  endpoint:
    path: /network-configuration-manager.html
    method: GET
    data_selector: configs
    params: {}
- name: voip_metrics
  endpoint:
    path: /api/voip/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: VPN metrics
  endpoint:
    path: /vpn/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: switch_monitoring
  endpoint:
    path: /switch-monitoring
    method: GET
    data_selector: performance_metrics
    params: {}
- name: cisco_devices
  endpoint:
    path: /network/cisco-devices
    method: GET
    data_selector: devices
    params: {}
- name: Cisco Devices
  endpoint:
    path: /cisco/devices
    method: GET
    data_selector: devices
- name: SNMP
  endpoint:
    path: /snmp
    method: GET
    data_selector: data
    params: {}
- name: network_device_vendors
  endpoint:
    path: /network-device-vendors
    method: GET
- name: network_device_vendors
  endpoint:
    path: /network/device-vendors
    method: GET
    data_selector: vendors
    params: {}
- name: network_devices
  endpoint:
    path: /network/devices
    method: GET
    data_selector: devices
    params: {}
- name: network_topology
  endpoint:
    path: /network/topology
    method: GET
    data_selector: topology
    params: {}
- name: domain_analysis
  endpoint:
    path: /tools/find-ip-address-of-web-site
    method: GET
    data_selector: results
- name: dns_lookup
  endpoint:
    path: /tools/dns-lookup.html
    method: GET
    data_selector: results
    params: {}
- name: last_10_domains_analysed
  endpoint:
    path: /tools/public/r/last_10_domains_analysed
    method: GET
    data_selector: domains
    params: {}
- name: basic_monitor
  endpoint:
    path: /basic_monitor
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: website_monitoring
  endpoint:
    path: /website-monitoring
    method: GET
    data_selector: records
    params: {}
- name: application_performance_monitoring
  endpoint:
    path: /application-performance-monitoring
    method: GET
    data_selector: records
    params: {}
- name: contact_email
  endpoint:
    path: /api/v1/contact/email
    method: POST
    data_selector: records
- name: first_name
  endpoint:
    path: /api/v1/first-name
    method: POST
    data_selector: records
- name: last_name
  endpoint:
    path: /api/v1/last-name
    method: POST
    data_selector: records
- name: monitor
  endpoint:
    path: /api/monitors
    method: GET
    data_selector: monitors
    params: {}
- name: alerts
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: website_monitoring
  endpoint:
    path: /website_monitoring
    method: GET
    data_selector: records
- name: server_monitoring
  endpoint:
    path: /server_monitoring
    method: GET
    data_selector: records
- name: AWSControlTower
  endpoint:
    path: /help/aws/aws-control-tower.html
    method: GET
    data_selector: inventory
    params: {}
- name: ManagedInstanceGroup
  endpoint:
    path: /help/gcp/instance-group-monitor.html
    method: GET
    data_selector: instances
    params: {}
- name: AzureKeyVault
  endpoint:
    path: /help/azure/key-vault.html
    method: GET
    data_selector: secrets
    params: {}
- name: aws_trusted_advisor
  endpoint:
    path: /help/aws/trusted-advisor-integration.html
    method: GET
    data_selector: records
- name: gcp_logs
  endpoint:
    path: /help/log-management/forward-gcp-logs.html
    method: GET
    data_selector: records
- name: failover_cluster_ips
  endpoint:
    path: /api/failover_cluster_ips
    method: GET
    data_selector: records
    params: {}
- name: azure_monitoring
  endpoint:
    path: /api/azure_monitoring
    method: GET
    data_selector: records
    params: {}
- name: kubernetes_forecasting
  endpoint:
    path: /api/kubernetes_forecasting
    method: GET
    data_selector: records
    params: {}
- name: kubernetes_audit_logs
  endpoint:
    path: /logs/kubernetes-audit
    method: GET
    data_selector: records
- name: nodejs_logs
  endpoint:
    path: /logs/nodejs
    method: GET
    data_selector: records
- name: python_logs
  endpoint:
    path: /logs/python
    method: GET
    data_selector: records
- name: AWS_Batch_Jobs
  endpoint:
    path: /help/aws/aws-batch-monitoring.html
    method: GET
    data_selector: jobs
    params:
      incremental: submitted_at
- name: AWS_Backup
  endpoint:
    path: /help/aws/aws-backup-integration.html
    method: GET
    data_selector: backups
    params: {}
- name: monitor
  endpoint:
    path: /api/monitors
    method: GET
    data_selector: monitors
    params: {}
- name: ecs_failed_tasks
  endpoint:
    path: /api/v1/ecs/failed_tasks
    method: GET
    data_selector: tasks
    params: {}
- name: vdi_monitoring
  endpoint:
    path: /api/v1/vdi/monitoring
    method: GET
    data_selector: monitoring_data
    params: {}
- name: server_inventory
  endpoint:
    path: /api/v1/servers
    method: GET
    data_selector: servers
    params: {}
- name: application_inventory
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: applications
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: monitoring
  endpoint:
    path: /api/v1/monitoring
    method: GET
    data_selector: records
- name: monitor
  endpoint:
    path: /api/monitor
    method: GET
    data_selector: data
    params: {}
- name: containers
  endpoint:
    path: /learn/containers
    method: GET
    data_selector: records
- name: datacenter
  endpoint:
    path: /learn/datacenter
    method: GET
    data_selector: records
- name: it_tools
  endpoint:
    path: /learn/it-tools
    method: GET
    data_selector: records
- name: java
  endpoint:
    path: /learn/java
    method: GET
    data_selector: records
- name: linux
  endpoint:
    path: /learn/linux
    method: GET
    data_selector: records
- name: web_server
  endpoint:
    path: /learn/web-server
    method: GET
    data_selector: records
- name: wordpress
  endpoint:
    path: /learn/wordpress
    method: GET
    data_selector: records
- name: webinar
  endpoint:
    path: /api/webinars
    method: GET
    data_selector: webinars
    params: {}
- name: whitepapers
  endpoint:
    path: /whitepapers
    method: GET
    data_selector: whitepapers
- name: ebooks
  endpoint:
    path: /ebooks
    method: GET
    data_selector: ebooks
- name: monitoring_data
  endpoint:
    path: /api/monitoring/data
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: user_data
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: website_monitoring
  endpoint:
    path: /website-monitoring
    method: GET
    data_selector: data
    params: {}
- name: synthetic_monitoring
  endpoint:
    path: /synthetic-monitoring
    method: GET
    data_selector: data
    params: {}
- name: real_user_monitoring
  endpoint:
    path: /real-user-monitoring
    method: GET
    data_selector: data
    params: {}
- name: log_management
  endpoint:
    path: /log-management
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: monitor
  endpoint:
    path: /monitors
    method: GET
    data_selector: monitors
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
- name: version_updates
  endpoint:
    path: /community/filter/announcements
    method: GET
    data_selector: updates
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: network_devices
  endpoint:
    path: /network/devices
    method: GET
    data_selector: devices
    params: {}
- name: network_alerts
  endpoint:
    path: /network/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: scheduled_reports
  endpoint:
    path: /community/scheduled-reports-for-msp
    method: GET
    data_selector: reports
    params: {}
notes:
- All Site24x7 APIs require a Authorization request header for authentication.
- To operate your MSP customer account using APIs, you must pass an additional cookie
  header parameter 'zaaid'.
- 'oauthscope : Site24x7.Admin.Read'
- 'oauthscope : Site24x7.Admin.Update'
- 'OAuth scope required: Site24x7.Admin.Update'
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Each monitor requires a unique configuration based on the AWS resource being monitored.
- POST not allowed for monitors.
- API Version has to be passed as '2.1' in the Accept header for the Create Monitor
  API.
- Requires setup of connected app for OAuth2 authentication
- Access tokens cannot be passed in the request param.
- Uses OAuth 2 for authentication
- Ensure correct configuration of profiles before creating monitors.
- Monitoring types must be selected based on the service being monitored.
- POST method not allowed for these monitors.
- Some objects may return nulls in deeply nested fields
- Requires setup of connected app in api
- API Version has to be passed as “2.1” in the Accept header for the Retrieve Monitor
  API.
- API Version has to be passed as '2.1' in the Accept header for the Update Monitor
  API.
- Requires setup of OAuth2 token
- Uses OAuth2 with token in header.
- Client Certificate Authentication is supported for Website/RESTAPI/SOAP monitors.
- Uses OAuth2 with refresh token — requires setup of connected app in site24x7
- Uses OAuth2 — requires setup of connected app in Site24x7.
- OAuth2 is required for accessing the API.
- 'oauthscope : Site24x7.Reports.Read'
- Requires setup of connected app in Site24x7
- Requires setup of OAuth token for authorization
- API allows updates to poller groups with specific attributes
- Requires setup of OAuth2 tokens.
- 'oauthscope : Site24x7.Reports.Update'
- The primary_poller_list and standby_poller_list fields in the request body are mandatory.
- Uses OAuth2 for authentication.
- 'oauthscope: Site24x7.Admin.Update'
- 'oauthscope: Site24x7.Admin.Read'
- Uses OAuth2 — requires setup of connected app in Site24x7
- Requires setup of connected app in site24x7
- 'oauthscope : Site24x7.Admin.Create'
- Requires OAuth2 setup with Site24x7.
- Requires setup of OAuth2 tokens for access
- Triggers alert when the number of days since key creation date exceeds the configured
  threshold.
- Triggers alert when the number of days remaining until CMK deletion exceeds the
  configured threshold.
- Anomaly Enabled Attributes are marked in the documentation.
- API Version has to be passed as “2.1” in the Accept header for the Threshold APIs.
- Uses OAuth2 — requires setup of connected app in site24x7
- Some API calls may have rate limits or require specific scopes
- Prioritize and remediate routine actions automatically.
- Uses OAuth2 with bearer token for authentication.
- Uses OAuth2 with a token — requires setup of connected app in Site24x7
- Requires OAuth2 token for authorization.
- 'oauthscope : Site24x7.Admin.Delete'
- Uses OAuth2 with authorization token.
- 'oauthscope : Site24x7.Operations.Create'
- 'oauthscope : Site24x7.Operations.Update'
- Uses OAuth2 with access token for authorization
- Uses OAuth2 with token in header
- Requires setup of OAuth tokens
- 'OAuth scope required: Site24x7.Reports.Read'
- Only Top 'n' ISPs with highest average response time are fetched.
- Some objects may have specific ID requirements
- 'oauthscope : Site24x7.Operations.Read'
- 'oauthscope : Site24x7.Operations.Delete'
- Requires setup of connected app in Site24x7.
- Some monitoring types may have limitations on the number of checks.
- 30-day free trial available.
- On-demand scans and daily scans supported.
- The API supports OAuth2 authentication
- Some endpoints may have rate limits
- Uses OAuth2 with refresh token — requires setup of connected app in Site24x7
- Integration of Site24x7 with Third Party Applications using APIs provided by Zoho
  requires technical skill.
- Errors or defects in the integration may cause loss and corruption of data.
- API requires setup of connected app in Site24x7
- We've moved to OAuth from authtoken model on 31st August, 2019. All support for
  existing authtokens will stop from April 26th, 2021.
- Access token is valid for one hour.
- Refresh token is a permanent token.
- Stop downtime before it starts! Site24x7 monitors your website 24/7, alerting you
  to issues so you can fix them fast.
- Website monitoring can be done from over 130 locations worldwide.
- This API provides analytics and performance metrics for domains.
- Too many requests. Please try again later.
- Uses internal tools hosted in their data centers.
- API may have rate limiting, be mindful of the number of requests.
- 'Error: Too many requests. Please try again later.'
- At Site24x7, we do not use third-party software to track website visitors.
- We take your privacy seriously and use our own tools hosted in our data centres.
- Uses own tools hosted in their data centres.
- HTTP/2 protocol is supported.
- HTTP/2 protocol is not supported.
- Uses proprietary tools hosted in our data centres.
- Free tool which formats your HTML code with proper indentation.
- Any errors in your existing code is also highlighted while formatting.
- Some objects may have rate limits
- A 32-bit overflow will cause the Unix Time Stamp to cease working on January 19th,
  2038.
- Any timestamp before 1970 is represented by a negative number.
- In Unix time, leap seconds have the same Unix time as the second before it.
- Detect improper Java application behaviour by analyzing the state of each thread.
- The tool is a prerequisite for detecting faulty threads degrading your Java Virtual
  Machine performance.
- We take your privacy seriously and use our own tools hosted in our data centres.
  Your data is yours, and we never monetize it for advertisement purposes.
- We do not use third-party software to track website visitors.
- Input the RGB color codes as comma separated values.
- Synthetic monitoring allows for proactive identification of issues.
- AI-powered server monitoring tool
- Real-time alerts for performance issues
- Comprehensive cloud-based network monitoring solution
- Supports multi-vendor device monitoring
- Automated anomaly detection powered by AI/ML, enabled by default for key performance
  attributes.
- Detect slow-loading pages, delayed interactions, front-end errors and other user-impacting
  issues across every geography—and resolve them before they affect engagement or
  revenue.
- Requires OAuth2 authentication setup
- Website monitoring tools track key metrics such as uptime, time to first byte, page
  load time, links on the page, user actions, database performance, server status,
  traffic, third-party service performance, page relevance, and usability.
- Ensure continuous website availability by monitoring from 130+ locations.
- Get your site checked every 30 seconds.
- Continuously monitor the availability and performance of your IPv4 and IPv6 enabled
  SMTP servers from more than 90 global monitoring locations.
- Proactively identify potential DNS failure causes including network disruptions,
  configuration errors, and root server inaccessibility.
- Site24x7 supports monitoring of resources secured with OAuth 2.0, client certificate
  or Basic/NTLM authentication protocols.
- Automatically discovers SSL/TLS certificates associated with the monitored websites
  or web applications.
- Continuously monitors SSL/TLS certificates to ensure they are not approaching expiration.
- Monitor critical metrics such as round-trip-time, file upload time, file download
  time, and response time from 130+ locations across the globe.
- A FTP Server will be reported unavailable if the FTP Server is not accessible, the
  username/password is invalid in the case of authenticated FTP Servers, response
  time crosses your specified threshold, or file upload or download time crosses your
  specified threshold.
- Can monitor resources behind the firewall.
- Supports over 50 languages for status updates
- Monitor API end points authenticated using Basic/NTLM, OAuth 2 or Client Certificates.
- Monitor SOAP Web Services, which are secured with Basic/NTLM, OAuth 2 or PKCS#12
  client certificates.
- Automatically discover hosts and VMs associated with the cluster.
- Monitoring capabilities for SQL Server performance and uptime.
- Proactively detect, diagnose, and resolve performance and availability issues impacting
  your mail servers
- End-to-end visibility of your container environment
- AI-powered anomaly detection for proactive troubleshooting
- AI-powered insights for anomaly detection and forecasting
- Centralized management of AWS logs
- APM provides real-time performance insights crucial for maintaining a competitive
  edge in the digital era.
- APM tools can alert DevOps teams immediately when an application behaves erratically.
- May return nulls in deeply nested fields
- Node.js monitoring helps you optimize the performance of all events and I/O operations
  in your Node.js applications.
- Mobile APM gives visibility into mobile app performance and helps resolve issues.
- May encounter rate limits on API calls
- Ensure a positive experience for employees attending business meetings and webinars
  online.
- Configurable alerts for various Zoom events.
- Regularly conduct uptime tests every 30 seconds
- Ensure continuous availability and optimal performance for virtual desktop infrastructures
  (VDIs) from different vendors.
- Obtain end-to-end visibility across resources and gain control over your VDI environment.
- Cloud-based network traffic monitoring provides real-time statistics on network
  traffic and bandwidth consumption.
- Site24x7 uses the On-Premise Poller to monitor network traffic.
- Router monitoring allows for quick issue resolution with accurate data on network
  activities and router traffic sources.
- Monitor interface-level availability and performance with our router monitoring
  tool.
- Uses REST-API to monitor Cisco devices
- Supports monitoring your Meraki environment
- SNMP uses both port 161 and port 162 for sending commands and messages.
- Site24x7 is a purely SaaS solution with no infrastructure to buy or maintain.
- Contact sales@site24x7.com for any pricing clarification.
- Data retention of 3 years
- Minimum poll frequency of 5 mins
- API access limited to 20 calls/day/monitor
- We support add-ons for basic, advanced, host, network bundle, RUM page views, logs,
  synthetic runs and uptime monitors.
- Website is a basic monitor.
- Basic monitor is a license entity referring to each instance of various resources.
- Firmware vulnerability management and compliance is included for Enterprise users
  only.
- As of now, this feature is only enabled in the Enterprise plan.
- Plan limits apply for monitors and logs.
- Add-ons available for additional capacity.
- This feature is supported in both the Professional and Enterprise plans.
- Monitor the performance of your cloud services via all ISPs.
- Ensure optimum uptime for your on-premise IT management solution.
- API requires OAuth2 authentication.
- Rate limits may apply to API calls.
- Monitor your SaaS-based applications continuously and ensure they are functioning
  without any issues.
- Ensure OAuth2 tokens are refreshed regularly to maintain access.
- Some metrics may have reporting delays.
- AppLogs now supports Kubernetes audit logs, Node.js logs, and Python logs
- Some endpoints may return nulls in deeply nested fields
- Webinars are available for various topics related to Site24x7 services.
- Provides various resources including whitepapers and ebooks.
- Some objects like monitoring data may return nulls in deeply nested fields
- Your data is yours, and we never monetize it for advertisement purposes.
- Zoho has never sold your information to someone else for advertising.
- We limit access to your personal information to our employees and contractors who
  have a legitimate need to use it.
- Requires OAuth2 setup for API access.
- Provide customers with a seamless, professional interface using their own domain.
- Share customer dashboards using the custom domain, enhancing trust and consistency.
- Easily integrate OpenAI into Site24x7 using your own OpenAI API keys or Microsoft
  Azure OpenAI.
- Ensure to check the API rate limits.
- Some endpoints may require additional parameters.
- Fixed a mismatch in the display of successful job counts in Veeam Backup monitoring.
- Addressed stability concerns with the Veeam Backup monitoring monitor after consecutive
  successful polls.
- Enhanced the vCenter monitor to promptly reflect a Down status when data collection
  stops or fails, eliminating delays in data collection.
- Resolved startup issues affecting the Windows On-Premise Poller.
- Ended support for 32-bit On-Premise Poller to streamline performance and focus on
  64-bit systems.
- Enables monitoring of NAT Gateway in Oracle Cloud Infrastructure
- AWS PrivateLink integration enables deep observability into private network infrastructure.
- Enhanced Alert Logs designed for greater visibility, smarter filtering, and deeper
  insights.
- 'Seamless integration: Automatically consolidate alerts from Site24x7 into BigPanda,
  providing a unified view of your IT environment.'
- 'Agentic automation for IT operations: Leverage BigPanda to transform manual and
  reactive human processes into intelligent, autonomous systems that detect, respond,
  and prevent IT incidents at machine speed.'
- Start using the Score Planner to track issues and coordinate with your team on improving
  your security score.
- Easily define rules to detect business transactions automatically
- Map an APM Business Transaction Rules profile at the application level
- Get a curated list of business transactions
- Visualize each business transaction with a service map
- Custom Roles are now available in the Elite and Enterprise plans.
- Uses OAuth2 with authorization code flow
- The 32-bit On-Premise Poller will no longer receive updates, bug fixes, or any technical
  support from version 6.5.
- Supports multiple report types, including Summary Reports, Availability Summary
  Reports, License Summary Reports, and Outage Reports
- The current view is available until July 21, 2025, after which you will be automatically
  switched to the new view.
- Gain complete visibility into traffic patterns, back-end health, and listener performance.
- Detect and troubleshoot issues like unresponsive backends, dropped connections,
  and health check failures.
- Optimize load balancing policies by tracking latency, connection errors, and throughput.
- Preserve original client IPs for better traceability and diagnostics.
- Receive instant alerts on anomalies and threshold breaches for faster remediation.
- Scale with confidence during high-traffic events through proactive monitoring.
- Status propagation and proactive alerting
- Region-level visibility
- Log group-level insights
- Focus on active log groups
- Improved operational intelligence
- 'Simplified communication: Instead of adding each monitor as an individual component
  from Site24x7, you can now add the entire monitor group health check as a component,
  simplifying incident communication.'
- Unified monitoring dashboard for customer monitors
- Severity-based alarm filtering available
- Built on Web Content Accessibility Guidelines (WCAG) to ensure perceivable, operable,
  understandable, and robust user experiences.
- Integrating the Base Database Service with Site24x7 enables you to gain deep visibility
  into your database infrastructure’s performance, availability, and resource utilization.
- 'Assertions mapped to OWASP Top 10: The assertions in Domain Summary are now tagged
  based on the OWASP Top 10 vulnerabilities.'
- Automated email delivery of scheduled reports.
- ilert complements Site24x7's monitoring and observability capabilities with its
  centralized alerting capabilities.
- Every Tuesday from May 6 to June 3 at 11am–1pm EDT | 6am - 8am BST
errors:
- You are not authorized to perform this operation.
- '404 Not Found: Monitor does not exist.'
- '401 Unauthorized: You are not authorized to perform this operation.'
- 'ERROR4XX: Errors resulting from requests that are not valid due to an incorrect
  client configuration.'
- 'ERROR5XX: Errors encountered during the running of a GraphQL query.'
- 'HTTP1XX: The number of HTTP 1xx errors for the endpoint per second.'
- 'HTTP2XX: The number of HTTP 2xx errors for the endpoint per second.'
- 'HTTP4XX: The number of HTTP 4xx errors for the endpoint per second.'
- 'HTTP5XX: The number of HTTP 5xx errors for the endpoint per second.'
- 'GREMLINHTTP1XX: The number of HTTP 1xx errors for the Gremlin endpoint per second.'
- 'GREMLINHTTP2XX: The number of HTTP 2xx errors for the Gremlin endpoint per second.'
- 'GREMLINHTTP4XX: The number of HTTP 4xx errors for the Gremlin endpoint per second.'
- 'GREMLINHTTP5XX: The number of HTTP 5xx errors for the Gremlin endpoint per second.'
- 'SPARQLHTTP1XX: The number of HTTP 1xx errors for the SPARQL endpoint per second.'
- 'SPARQLHTTP2XX: The number of HTTP 2xx errors for the SPARQL endpoint per second.'
- 'SPARQLHTTP4XX: The number of HTTP 4xx errors for the SPARQL endpoint per second.'
- 'SPARQLHTTP5XX: The number of HTTP 5xx errors for the SPARQL endpoint per second.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'INVALID_CONFIGURATION: Ensure all mandatory fields are provided'
- 'RESOURCE_NOT_FOUND: Verify the specified resource IDs are correct'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Not Found: The specified resource does not exist.'
- '400 Bad Request: Check the request parameters or body format.'
- '401 Unauthorized: Ensure the client credentials are correct.'
- '404 Not Found: Verify the endpoint path.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Recheck OAuth token'
- '404 Not Found: Monitor ID does not exist'
- '401 Unauthorized: Recheck OAuth token or scopes'
- '400 Bad Request: Check request attributes and ensure all mandatory fields are provided.'
- 'HTTP/1.1 200 OK: success'
- '400 Bad Request: Check parameters for validity'
- '401 Unauthorized: Check OAuth token validity'
- '404 Not Found: Check if the endpoint exists'
- '401 Unauthorized: Check your OAuth scopes or token expiration.'
- 'HTTP/1.1 200 OK: Indicates success'
- 'Unauthorized: Check the provided OAuth token.'
- '400 Bad Request: Check the request payload for required fields.'
- '401 Unauthorized: Recheck OAuth token.'
- 'Unauthorized: Recheck OAuth scopes or token expiration'
- HTTP/1.1 200 OK
- '400 Bad Request: Check request parameters'
- '404 Not Found: Verify endpoint URL'
- '404 Not Found: Verify endpoint path'
- 'Invalid action_id: Ensure the action_id is correct.'
- 'Unauthorized: Check authentication token.'
- '400 Bad Request: Check the request parameters'
- 'HTTP/1.1 200 OK: Request successful'
- '401 Unauthorized: Check OAuth token.'
- '401 Unauthorized: Recheck OAuth token or scopes.'
- 'code: 0, message: success'
- '401 Unauthorized: Check API key or authentication details.'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Check your credentials or token'
- 'access denied: The API rejects token requests with ''access denied'' before requesting
  the 31st token.'
- Too many requests. Please try again later.
- 'Error: Too many requests. Please try again later.'
- 'TOO_MANY_REQUESTS: Too many requests. Please try again later.'
- 'Too many requests: Please try again later.'
- 'ERROR: Too many requests. Please try again later.'
- 'REQUEST_LIMIT_EXCEEDED: Too many requests. Please try again later.'
- '401 Unauthorized: Check your API key or token.'
- '401 Unauthorized: Check OAuth token'
- '429 Too Many Requests: Slow down API requests'
- 'REQUEST_TIMEOUT: Check the request parameters or try again later.'
- 'INVALID_URL: Ensure the URL format is correct.'
- '401 Unauthorized: Recheck OAuth credentials or token expiration'
- 'Too many requests: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check your credentials and permissions.'
- '429 Too Many Requests: You have exceeded the rate limit.'
- '401 Unauthorized: Check client credentials.'
- '429 Too Many Requests: Rate limit exceeded.'
- '429 Too Many Requests: Reduce request frequency.'
- '404 Not Found: Check the endpoint path.'
- '401 Unauthorized: Verify your authentication credentials.'
- '403 Forbidden: Check if your account has access to this resource'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - oauthscope
  - 'oauthscope : Site24x7.Operations.Update'
  - OAuthClient
  - NotificationProfile
  - ThresholdProfile
  - UserGroup
  - OnCallSchedule
  - MonitorGroup
  - Action
  - 'oauthscope : Site24x7.Admin.Update'
  - 'oauthscope : Site24x7.Reports.Read'
  - 'oauthscope : Site24x7.Msp.Read'
  - 'oauthscope : Site24x7.Msp.Create'
  - 'oauthscope : Site24x7.Msp.Delete'
  - Zoho-oauthtoken
  - access_token
  - client_id
  - client_secret
  - 'oauthscope : Site24x7.Admin.Read'
  - 'oauthscope : Site24x7.Reports.Create'
  - Site24x7.Admin.Update
  - Site24x7.Reports.Read
  - OAuth2
client:
  base_url: https://www.site24x7.com/api
  auth:
    type: oauth2
    location: header
    header_name: Authorization
  headers:
    Accept: application/json; version=2.0
source_metadata: null
