resources:
- name: download_document
  endpoint:
    path: /documents/{uuid-document}/download
    method: POST
- name: safes
  endpoint:
    path: /safes
    method: GET
    data_selector: response
    params: {}
- name: safes
  endpoint:
    path: /safes
    method: GET
    data_selector: uuid-safe
    params: {}
- name: documents
  endpoint:
    path: /documents/{UUID-SAFE}/safe
    method: GET
    data_selector: uuidDoc
    params:
      UUID-SAFE: required
      UUID-FOLDER: optional
- name: folders
  endpoint:
    path: /folders/{UUID-SAFE}/find
    method: GET
    data_selector: uuid_safe
    params:
      UUID-SAFE: required
- name: create_folder
  endpoint:
    path: /folders/{UUID-SAFE}/create
    method: POST
    data_selector: message
    params:
      folder_name: required
      uuid_folder: optional
- name: rename_folder
  endpoint:
    path: /folders/{UUID-SAFE}/rename
    method: POST
    data_selector: message
    params:
      folder_name: required
      uuid_folder: required
- name: create_batch
  endpoint:
    path: /batches
    method: POST
    data_selector: message
    params:
      keys: required
- name: account_balance
  endpoint:
    path: /account/balance
    method: GET
    data_selector: credit
    params: {}
- name: safes
  endpoint:
    path: /safes
    method: GET
    data_selector: safes
    params: {}
- name: documents
  endpoint:
    path: /documents/{UUID-SAFE}/safe
    method: GET
    data_selector: documents
    params:
      UUID-SAFE: required
- name: folders
  endpoint:
    path: /folders/{UUID-SAFE}/find
    method: GET
    data_selector: folders
    params:
      UUID-SAFE: required
- name: create_folder
  endpoint:
    path: /folders/{UUID-SAFE}/create
    method: POST
    data_selector: folder_creation
    params:
      folder_name: required
- name: rename_folder
  endpoint:
    path: /folders/{UUID-SAFE}/rename
    method: POST
    data_selector: folder_rename
    params:
      folder_name: required
      uuid_folder: required
- name: create_batch
  endpoint:
    path: /batches
    method: POST
    data_selector: batch_creation
    params:
      keys: required
- name: account_balance
  endpoint:
    path: /account/balance
    method: GET
    data_selector: account_balance
    params: {}
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: records
- name: document_specific
  endpoint:
    path: /documents/{UUID-DOCUMENT}
    method: GET
    data_selector: records
- name: document_dimensions
  endpoint:
    path: /documents/{UUID-DOCUMENT}/dimensions
    method: GET
    data_selector: dimensions
- name: documents_by_phase
  endpoint:
    path: /documents/{ID-FASE}/status
    method: GET
    data_selector: records
- name: upload_document
  endpoint:
    path: /documents/{UUID-SAFE}/upload
    method: POST
    data_selector: uuid
- name: upload_document_slave
  endpoint:
    path: /documents/{UUID-DOC-PRINCIPAL}/uploadslave
    method: POST
    data_selector: message
- name: upload_document_binary
  endpoint:
    path: /documents/{UUID-SAFE}/uploadbinary
    method: POST
    data_selector: uuid
- name: upload_document_hash
  endpoint:
    path: /documents/{UUID-SAFE}/uploadhash
    method: POST
    data_selector: uuid
- name: highlight_clause
  endpoint:
    path: /documents/{UUID-DOCUMENT}/addhighlight
    method: POST
    data_selector: success
- name: send_document_to_signer
  endpoint:
    path: /documents/{UUID-DOCUMENT}/sendtosigner
    method: POST
    data_selector: message
- name: cancel_document
  endpoint:
    path: /documents/{UUID-DOCUMENT}/cancel
    method: POST
    data_selector: uuidDoc
- name: download_document
  endpoint:
    path: /documents/{UUID-DOCUMENT}/download
    method: POST
    data_selector: url
- name: documents
  endpoint:
    path: /documents
    method: GET
    data_selector: records
    params: {}
- name: document_specific
  endpoint:
    path: /documents/{UUID-DOCUMENT}
    method: GET
    data_selector: records
    params: {}
- name: document_dimensions
  endpoint:
    path: /documents/{UUID-DOCUMENT}/dimensions
    method: GET
    data_selector: dimensions
    params: {}
- name: document_status
  endpoint:
    path: /documents/{ID-FASE}/status
    method: GET
    data_selector: records
    params: {}
- name: upload_document
  endpoint:
    path: /documents/{UUID-SAFE}/upload
    method: POST
    data_selector: uuid
    params: {}
- name: upload_document_slave
  endpoint:
    path: /documents/{UUID-DOC-PRINCIPAL}/uploadslave
    method: POST
    data_selector: message
    params: {}
- name: upload_document_binary
  endpoint:
    path: /documents/{UUID-SAFE}/uploadbinary
    method: POST
    data_selector: uuid
    params: {}
- name: upload_document_hash
  endpoint:
    path: /documents/{UUID-SAFE}/uploadhash
    method: POST
    data_selector: uuid
    params: {}
- name: send_to_signer
  endpoint:
    path: /documents/{UUID-DOCUMENT}/sendtosigner
    method: POST
    data_selector: message
    params: {}
- name: cancel_document
  endpoint:
    path: /documents/{UUID-DOCUMENT}/cancel
    method: POST
    data_selector: uuidDoc
    params: {}
- name: download_document
  endpoint:
    path: /documents/{UUID-DOCUMENT}/download
    method: POST
    data_selector: url
    params: {}
- name: resend_document_link
  endpoint:
    path: /documents/{UUID-DOCUMENT}/resend
    method: POST
    data_selector: message
    params: {}
- name: list_templates
  endpoint:
    path: /templates
    method: POST
    data_selector: id
    params: {}
- name: create_document_by_template
  endpoint:
    path: /documents/{UUID-SAFE}/makedocumentbytemplate
    method: POST
    data_selector: uuid
    params: {}
- name: download_document
  endpoint:
    path: /documents/{uuid-document}/download
    method: POST
    data_selector: url
    params: {}
- name: upload_big_file
  endpoint:
    path: /documents/{UUID-SAFE}/uploadbigfile
    method: POST
    data_selector: uuid
    params: {}
- name: resend_signature_link
  endpoint:
    path: /documents/{UUID-DOCUMENT}/resend
    method: POST
    data_selector: message
    params: {}
- name: list_templates
  endpoint:
    path: /templates
    method: POST
    data_selector: id
    params: {}
- name: create_document_from_template_html
  endpoint:
    path: /documents/{UUID-SAFE}/makedocumentbytemplate
    method: POST
    data_selector: uuid
    params: {}
- name: create_document_from_template_word
  endpoint:
    path: /documents/{UUID-SAFE}/makedocumentbytemplateword
    method: POST
    data_selector: uuid
    params: {}
- name: download_document
  endpoint:
    path: /documents/{uuid-document}/download
    method: POST
    data_selector: url
    params: {}
- name: list_slave_documents
  endpoint:
    path: /documents/{uuid-main-document}/listslaves
    method: GET
    data_selector: total_documents
    params: {}
- name: download_slave_documents
  endpoint:
    path: /documents/{uuid-main-document}/downloadlist
    method: POST
    data_selector: url
    params: {}
- name: create_rubric_in_template_word
  endpoint:
    path: /documents/{uuid-safe}/createrubricintemplateword
    method: POST
    data_selector: uuid
    params: {}
- name: upload_big_file
  endpoint:
    path: /documents/{UUID-SAFE}/uploadbigfile
    method: POST
    data_selector: uuid
    params: {}
- name: make_document_by_template_word
  endpoint:
    path: /documents/{UUID-SAFE}/makedocumentbytemplateword
    method: POST
    data_selector: uuid
    params: {}
- name: scheduling
  endpoint:
    path: /documents/{uuid-document}/scheduling
    method: POST
    data_selector: message
    params: {}
- name: powerform_responses
  endpoint:
    path: /documents/{uuid_documento}/powerformresponses
    method: GET
    data_selector: uuid_documento_gerado
    params: {}
- name: create_list_signers
  endpoint:
    path: /documents/{UUID-DOCUMENT}/createlist
    method: POST
    data_selector: key_signer
    params: {}
- name: add_trust_id
  endpoint:
    path: /documents/{UUID-DOCUMENT}/addtrustid
    method: POST
    data_selector: message.success
    params: {}
- name: remove_trust_id
  endpoint:
    path: /documents/{UUID-DOCUMENT}/removetrustid
    method: POST
    data_selector: message.data
    params:
      uuid-document: required
      email: required
- name: make_document_by_template
  endpoint:
    path: /documents/{UUID-SAFE}/makedocumentbytemplateword
    method: POST
    data_selector: uuid
    params: {}
- name: schedule_document
  endpoint:
    path: /documents/{uuid-document}/scheduling
    method: POST
    data_selector: message
    params:
      uuid-document: uuid-document
      workflow: '1'
      scheduling_date: 2026/09/10
      scheduling_time: '21:00'
      urgent_document: '0'
- name: list_powerform_responses
  endpoint:
    path: /documents/{uuid_documento}/powerformresponses
    method: GET
    data_selector: uuid_documento_gerado
    params: {}
- name: create_signers
  endpoint:
    path: /documents/{UUID-DOCUMENT}/createlist
    method: POST
    data_selector: key_signer
    params: {}
- name: add_trust_id
  endpoint:
    path: /documents/{UUID-DOCUMENT}/addtrustid
    method: POST
    data_selector: message
    params: {}
- name: remove_trust_id
  endpoint:
    path: /documents/{UUID-DOCUMENT}/removetrustid
    method: POST
    data_selector: message
    params:
      uuid-document: obrigatório
      email: obrigatório
- name: tags
  endpoint:
    path: /tags/{UUID-DOCUMENTO}
    method: GET
    data_selector: TAGs
    params: {}
- name: add_tags
  endpoint:
    path: /tags/{UUID-DOCUMENTO}/add
    method: POST
    data_selector: message
    params: {}
- name: remove_tags
  endpoint:
    path: /tags/{UUID-DOCUMENTO}/remove
    method: POST
    data_selector: message
    params: {}
- name: erase_tags
  endpoint:
    path: /tags/{UUID-DOCUMENTO}/erase
    method: POST
    data_selector: message
    params: {}
- name: add_urgent_tag
  endpoint:
    path: /tags/{UUID-DOCUMENTO}/addurgent
    method: POST
    data_selector: message
    params: {}
- name: remove_urgent_tag
  endpoint:
    path: /tags/{UUID-DOCUMENTO}/removeurgent
    method: POST
    data_selector: message
    params: {}
- name: listar_certificado_definido
  endpoint:
    path: /certificate/{UUID-DOCUMENTO}/list
    method: POST
    data_selector: ''
    params: {}
- name: definir_certificado
  endpoint:
    path: /certificate/{UUID-DOCUMENTO}/add
    method: POST
    data_selector: ''
    params: {}
- name: tags
  endpoint:
    path: /tags/{UUID-DOCUMENTO}
    method: GET
    data_selector: TAGs
    params: {}
- name: add_tags
  endpoint:
    path: /tags/{UUID-DOCUMENTO}/add
    method: POST
    data_selector: message
    params: {}
- name: remove_tags
  endpoint:
    path: /tags/{UUID-DOCUMENTO}/remove
    method: POST
    data_selector: message
    params: {}
- name: erase_tags
  endpoint:
    path: /tags/{UUID-DOCUMENTO}/erase
    method: POST
    data_selector: message
    params: {}
- name: add_urgent_tag
  endpoint:
    path: /tags/{UUID-DOCUMENTO}/addurgent
    method: POST
    data_selector: message
    params: {}
- name: remove_urgent_tag
  endpoint:
    path: /tags/{UUID-DOCUMENTO}/removeurgent
    method: POST
    data_selector: message
    params: {}
- name: listar_certificado_definido
  endpoint:
    path: /certificate/{UUID-DOCUMENTO}/list
    method: POST
    data_selector: key_signer
    params: {}
- name: definir_certificado
  endpoint:
    path: /certificate/{UUID-DOCUMENTO}/add
    method: POST
    data_selector: message
    params: {}
- name: list_watchers
  endpoint:
    path: /watcher/{UUID-DOCUMENTO}
    method: GET
    data_selector: watchers
- name: add_watcher
  endpoint:
    path: /watcher/{UUID-DOCUMENTO}/add
    method: POST
    data_selector: message
- name: remove_watcher
  endpoint:
    path: /watcher/{UUID-DOCUMENTO}/remove
    method: POST
    data_selector: message
- name: erase_watchers
  endpoint:
    path: /watcher/{UUID-DOCUMENTO}/erase
    method: POST
    data_selector: message
- name: webhook_postback
  endpoint:
    path: /webhook/postback
    method: POST
    data_selector: event
    params: {}
- name: listar_observadores
  endpoint:
    path: /watcher/{UUID-DOCUMENTO}
    method: GET
    data_selector: watchers
- name: adicionar_observador
  endpoint:
    path: /watcher/{UUID-DOCUMENTO}/add
    method: POST
    data_selector: message
- name: remover_observador
  endpoint:
    path: /watcher/{UUID-DOCUMENTO}/remove
    method: POST
    data_selector: message
- name: remover_todos_observadores
  endpoint:
    path: /watcher/{UUID-DOCUMENTO}/erase
    method: POST
    data_selector: message
- name: webhook
  endpoint:
    path: /documents/{UUID-DOCUMENT}/webhooks
    method: GET
    data_selector: webhook_url
    params: {}
- name: webhook
  endpoint:
    path: /documents/{UUID-DOCUMENT}/webhooks
    method: POST
    data_selector: message
    params: {}
- name: webhook
  endpoint:
    path: /documents/{UUID-DOCUMENT}/webhooks
    method: GET
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /documents/{UUID-DOCUMENT}/webhooks
    method: POST
    data_selector: message
    params: {}
- name: embed_function
  endpoint:
    path: /embed/viewblob
    method: GET
    data_selector: iframe
    params: {}
- name: embed
  endpoint:
    path: /embed/viewblob
    method: GET
    data_selector: iframe
    params: {}
- name: batches
  endpoint:
    path: /batches
    method: POST
    data_selector: ''
    params: {}
- name: batches
  endpoint:
    path: /batches
    method: POST
- name: safes
  endpoint:
    path: /safes
    method: GET
- name: documents
  endpoint:
    path: /documents/{uuid_safe}/safe
    method: GET
- name: documents
  endpoint:
    path: /documents/{uuid_safe}/safe
    method: GET
- name: create_folder
  endpoint:
    path: /folders/{uuid-safe}/create
    method: POST
- name: create_folder
  endpoint:
    path: /folders/{uuid-safe}/create
    method: POST
- name: rename_folder
  endpoint:
    path: /folders/{uuid-safe}/rename
    method: POST
- name: rename_folder
  endpoint:
    path: /folders/{uuid-safe}/rename
    method: POST
- name: criar_lote
  endpoint:
    path: /batches
    method: POST
- name: criar_lote
  endpoint:
    path: /batches
    method: POST
- name: documents
  endpoint:
    path: /documents
    method: GET
- name: documents
  endpoint:
    path: /documents
    method: GET
- name: documents
  endpoint:
    path: /documents/{uuid-document}
    method: GET
- name: upload_document
  endpoint:
    path: /documents/{uuid-safe}/upload
    method: POST
- name: upload_document_anexo
  endpoint:
    path: /documents/{uuid-doc-principal}/uploadslave
    method: POST
- name: upload_document_anexo
  endpoint:
    path: /documents/{uuid-doc-master}/uploadslavebinary
    method: POST
- name: upload_hash
  endpoint:
    path: /documents/{uuid-safe}/uploadhash
    method: POST
- name: upload_hash
  endpoint:
    path: /documents/{uuid-safe}/uploadhash
    method: POST
- name: destacar_clausulas
  endpoint:
    path: /documents/{uuid-document}/addhighlight
    method: POST
- name: enviar_documento_para_assinatura
  endpoint:
    path: /documents/{uuid-document}/sendtosigner
    method: POST
- name: send_document_to_signer
  endpoint:
    path: /documents/{uuid-document}/sendtosigner
    method: POST
- name: cancel_document
  endpoint:
    path: /documents/{uuid-document}/cancel
    method: POST
- name: reenviar_link_de_assinatura
  endpoint:
    path: /api/v1/documents/{uuid-document}/resend
    method: POST
    data_selector: object
    params:
      tokenAPI: required
      cryptKey: required
      email: required
      key_signer: required
- name: reenviar_link_de_assinatura
  endpoint:
    path: /api/v1/documents/{uuid-document}/resend
    method: POST
    data_selector: object
    params:
      tokenAPI: string
      cryptKey: string
      email: string
      key_signer: string
- name: documento_a_partir_do_template_HTML
  endpoint:
    path: /documents/{uuid-safe}/makedocumentbytemplate
    method: POST
- name: documento_a_partir_do_template_HTML
  endpoint:
    path: /documents/{uuid-safe}/makedocumentbytemplate
    method: POST
- name: Documento a partir do template WORD
  endpoint:
    path: /documents/{uuid-safe}/makedocumentbytemplateword
    method: POST
- name: documento_a_partir_do_template_WORD
  endpoint:
    path: /documents/{uuid-safe}/makedocumentbytemplateword
    method: POST
- name: listar_anexos
  endpoint:
    path: /documents/{uuid-main-document}/listslaves
    method: GET
- name: listar_anexos
  endpoint:
    path: /documents/{uuid-main-document}/listslaves
    method: GET
- name: Download Documentos e Certificados Desmembrados
  endpoint:
    path: /documents/{uuid-main-document}/downloadlist
    method: POST
- name: Download Documentos e Certificados Desmembrados
  endpoint:
    path: /documents/{uuid-main-document}/downloadlist
    method: POST
- name: Posicionamento XY de Rubricas
  endpoint:
    path: /documents/{uuid-safe}/createrubricintemplateword
    method: POST
- name: Posicionamento XY de Rubricas
  endpoint:
    path: /documents/{uuid-safe}/createrubricintemplateword
    method: POST
- name: Documento a partir do template WORD com mais de um preenchedor
  endpoint:
    path: /documents/{uuid-safe}/makedocumentbytemplateword
    method: POST
- name: documento a partir do template WORD com mais de um preenchedor
  endpoint:
    path: /documents/{uuid-safe}/makedocumentbytemplateword
    method: POST
- name: agendamento_de_envio
  endpoint:
    path: /documents/{UUID-DOCUMENT}/scheduling
    method: POST
- name: agendamento_de_envio
  endpoint:
    path: /documents/{UUID-DOCUMENT}/scheduling
    method: POST
- name: listar_grupos_de_assinaturas
  endpoint:
    path: /groups/{uuid-safe}
    method: GET
- name: signatarios
  endpoint:
    path: /documents/{uuid-document}/list
    method: GET
    data_selector: ''
    params: {}
- name: group_details
  endpoint:
    path: /groups/{uuid-cofre}/groupdetails/{uuid-group}
    method: GET
- name: group_details
  endpoint:
    path: /groups/{uuid-cofre}/groupdetails/{uuid-group}
    method: GET
- name: cadastrar_signatarios
  endpoint:
    path: /documents/{uuid-document}/createlist
    method: POST
- name: cadastrar_signatarios
  endpoint:
    path: /documents/{uuid-document}/createlist
    method: POST
- name: alterar_signatario
  endpoint:
    path: /api/v1/documents/{uuid-document}/changeemail
    method: POST
- name: alterar_signatario
  endpoint:
    path: /documents/{uuid-document}/changeemail
    method: POST
- name: alterar_número_do_sms
  endpoint:
    path: /documents/{uuid-document}/changesmsnumber
    method: POST
- name: Alterar código de acesso do signatário
  endpoint:
    path: /documents/{uuid-document}/changepasswordcode
    method: POST
- name: remover_signatario
  endpoint:
    path: /documents/{uuid-document}/removeemaillist
    method: POST
- name: cadastrar_informacoes_do_signatario
  endpoint:
    path: /documents/{uuid-document}/addinfo
    method: POST
- name: cadastrar_informacoes_do_signatario
  endpoint:
    path: /documents/{uuid-document}/addinfo
    method: POST
- name: create_signature_type
  endpoint:
    path: /documents/{uuid-usuario}/addsignaturetype
    method: POST
- name: add_signature_type
  endpoint:
    path: /documents/{uuid-usuario}/addsignaturetype
    method: POST
- name: copiar_link_assinatura
  endpoint:
    path: /documents/{uuid_documento}/signaturelink/{ID_linkassinatura}
    method: GET
- name: Copiar Link Assinatura
  endpoint:
    path: /documents/{uuid_documento}/signaturelink/{ID_linkassinatura}
    method: GET
- name: add_pins
  endpoint:
    path: /documents/{uuid-main-document}/addpins
    method: POST
- name: replicar_posicao_assinatura
  endpoint:
    path: /documents/{uuid-document}/addpinswithreplics
    method: POST
- name: add_pins
  endpoint:
    path: /documents/{uuid-main-document}/addpins
    method: POST
- name: replicar_posicao_assinatura
  endpoint:
    path: /documents/{uuid-document}/addpinswithreplics
    method: POST
- name: verificar_usuario
  endpoint:
    path: /users/check
    method: POST
- name: verificar_usuario
  endpoint:
    path: /users/check
    method: POST
- name: unblock_user
  endpoint:
    path: /users/unblock
    method: POST
- name: block_user
  endpoint:
    path: /users/block
    method: POST
- name: tags
  endpoint:
    path: /tags/{uuid-documento}
    method: GET
    data_selector: object
    params:
      tokenAPI: string
      cryptKey: string
- name: desbloquear_usuario
  endpoint:
    path: /users/unblock
    method: POST
- name: Remover TAGs do documento
  endpoint:
    path: /tags/{uuid-documento}/remove
    method: POST
- name: tags
  endpoint:
    path: /tags/{uuid-documento}
    method: GET
    data_selector: object
    params:
      tokenAPI: string
      cryptKey: string
- name: remover_todas_as_tags
  endpoint:
    path: /tags/{uuid-documento}/erase
    method: POST
- name: remover_tags_do_documento
  endpoint:
    path: /tags/{uuid-documento}/remove
    method: POST
- name: add_urgent_tag
  endpoint:
    path: /tags/{uuid-documento}/addurgent
    method: POST
- name: remover_tag_urgente
  endpoint:
    path: /tags/{uuid-documento}/removeurgent
    method: POST
- name: remover_todas_as_tags
  endpoint:
    path: /tags/{uuid-documento}/erase
    method: POST
- name: certificado_definido
  endpoint:
    path: /certificate/{uuid-documento}/list
    method: POST
- name: Adicionar TAG URGENTE
  endpoint:
    path: /tags/{uuid-documento}/addurgent
    method: POST
- name: certificado_icp_brasil
  endpoint:
    path: /certificate/{uuid-documento}/add
    method: POST
- name: remover_tag_urgente
  endpoint:
    path: /tags/{uuid-documento}/removeurgent
    method: POST
- name: observador
  endpoint:
    path: /watcher/{uuid-documento}/add
    method: POST
- name: observadores
  endpoint:
    path: /watcher/{uuid-documento}/add
    method: POST
- name: remover_observador
  endpoint:
    path: /watcher/{uuid-documento}/remove
    method: POST
- name: safes
  endpoint:
    path: /safes
    method: GET
- name: documents
  endpoint:
    path: /documents
    method: GET
- name: cofres
  endpoint:
    path: /safes
    method: GET
- name: signatarios
  endpoint:
    path: /documents/{uuid-document}/list
    method: GET
- name: documents
  endpoint:
    path: /documents
    method: GET
- name: signatarios
  endpoint:
    path: /documents/{uuid-document}/list
    method: GET
- name: tags
  endpoint:
    path: /tags/{uuid-documento}
    method: GET
- name: users
  endpoint:
    path: /users/list
    method: GET
- name: certificado_definido
  endpoint:
    path: /certificate/{uuid-documento}/list
    method: POST
- name: tags
  endpoint:
    path: /tags/{uuid-documento}
    method: GET
- name: observadores
  endpoint:
    path: /watcher/{uuid-documento}
    method: GET
    data_selector: object
    params:
      tokenAPI: string
      cryptKey: string
- name: observadores
  endpoint:
    path: /watcher/{uuid-documento}
    method: GET
    data_selector: object
    params:
      tokenAPI: string
      cryptKey: string
notes:
- O parâmetro cryptKey só precisa ser enviado caso esteja habilitado em sua conta.
- Aumente o número de requisições por hora da sua API. Fale com o comercial@d4sign.com.br
- Você terá um limite de 10 requisições por hora.
- Limite de 10 requisições por hora.
- Não esqueça de enviar o tokenAPI e cryptKey em sua requisição.
- Não esqueça de enviar o `tokenAPI` e `cryptKey` em sua requisição.
- Use API keys for authentication.
- Document uploads must be less than 500 MB.
- Requisições devem incluir tokenAPI e cryptKey quando necessário.
- Alguns documentos podem ser criptografados e armazenados em cofres.
- Certifique-se de que o parâmetro docauth ou docauthandselfie esteja definido como
  '1' ao registrar o signatário.
- Para criar o documento, é necessário ter permissões de acesso 'Administrador' ou
  'Padrão'.
- Certifique-se de que o parâmetro 'docauth' ou 'docauthandselfie' esteja definido
  como '1' ao registrar o signatário.
- Webhook events are triggered when a document is signed, finalized, or canceled.
- Utilize sempre endpoints HTTPS
- Webhook is a way to receive information when an event occurs.
- The webhook is triggered only when the document is signed by one of the parties,
  finalized, or canceled.
- Uses an IFRAME for embedding the signing process.
- Esse código javascript apenas tem a função de criar um IFRAME em sua página.
- Utilizando o SAML (Security Assertion Markup Language), um padrão aberto de comunicação
  para autenticação e autorização entre diferentes entidades.
- Todos os usuários precisam ser cadastrados como usuários externos, devido à conexão
  externa com a D4Sign.
- É essencial que o grupo criado seja adicionado ao aplicativo, ou seja, não se deve
  adicionar os usuários individualmente, mas sim o grupo.
- O Aplicativo está pronto para ser inserido na D4Sign.
errors:
- '5xx: Server error.'
- 'Server error: O retorno de um erro 5xx indica que houve algum problema em nossos
  servidores.'
- Server error.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Invalid UUID format: Verify the UUID provided.'
- 'Unauthorized access: Check API credentials.'
- 400 - Bad Request
auth_info:
  mentioned_objects:
  - tokenAPI
  - cryptKey
client:
  base_url: https://sandbox.d4sign.com.br/api/v1
  headers:
    accept: application/json
    content-type: application/json
source_metadata: null
