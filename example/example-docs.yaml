resources:
- name: user
  endpoint:
    path: /users/me
    method: GET
    data_selector: data
- name: event
  endpoint:
    path: /users/me/event_types
    method: GET
    data_selector: data
- name: tags
  endpoint:
    path: /api/3/tags
    method: GET
- name: contact
  endpoint:
    path: /contact
    method: GET
- name: repos
  endpoint:
    path: /repos
    method: GET
    params:
      sort: desc
- name: ActiveCampaignContact
  endpoint:
    path: /ActiveCampaignContact
    method: GET
- name: ActiveCampaignAccount
  endpoint:
    path: /ActiveCampaignAccount
    method: POST
- name: ActiveCampaignDeal
  endpoint:
    path: /ActiveCampaignDeal
    method: POST
- name: core_object
  endpoint:
    path: /custom-objects
    method: GET
    data_selector: objects
    params:
      ac_object: Contact
- name: custom_objects
  endpoint:
    path: /custom-objects
    method: GET
    data_selector: objects
- name: cx_app_review_process
  endpoint:
    method: POST
- name: webhook
  endpoint:
    method: POST
    path: /path/to/your/webhook/create/api
  params:
    url: ${webhook.url}
- name: webhook
  endpoint:
    method: PUT
    path: /path/to/your/webhook/update/api
  params:
    id: ${data.workflow.webhook_id}
- name: webhook
  endpoint:
    method: DELETE
    path: /path/to/your/webhook/delete/${data.workflow.webhook_id}
- name: import-customers
  endpoint:
    method: GET
    params:
      data_intake: polling
- name: quick_view
  endpoint:
    path: /app/quick_views
    method: POST
    data_selector: iframe_source
- name: forms
  endpoint:
    path: /api/forms
    method: GET
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
- name: webhook
  endpoint:
    path: /hooks
    method: POST
- name: historical-sync
  endpoint:
    method: POST
- name: me
  endpoint:
    path: /me
    method: GET
    data_selector: body
- name: options
  endpoint:
    path: /options
    method: GET
    data_selector: body.options
- name: fields
  endpoint:
    path: /fields
    method: GET
    data_selector: body.fields
- name: contact
  endpoint:
    path: /contact
    method: POST
    data_selector: body
- name: send-a-contact-to-pipedream
  endpoint:
    method: GET
    path: /me
    params: {}
- name: dropdown-options
  endpoint:
    method: GET
    path: /options
    params: {}
- name: contacts
  endpoint:
    path: /api/3/contacts
    method: POST
    data_selector: contact
- name: forms
  endpoint:
    path: /api/3/forms
    method: POST
    data_selector: form
- name: tickets
  endpoint:
    path: /api/3/tickets
    method: POST
    data_selector: ticket
- name: meetings
  endpoint:
    path: /api/3/meetings
    method: POST
    data_selector: meeting
- name: paypal_webhook
  endpoint:
    path: /v1/notifications/webhooks
    method: POST
    data_selector: webhook_id
- name: delete_webhook
  endpoint:
    path: /v1/notifications/webhooks/${data.application.webhook_id}
    method: DELETE
    data_selector: webhook_id
- name: userinfo
  endpoint:
    path: /v1/identity/oauth2/userinfo?schema=paypalv1.1
    method: GET
    data_selector: account_id
- name: CX_App
  endpoint:
    path: /docs/python-create-and-test-your-first-app-using-pipedream
    method: GET
- name: cx_app
  endpoint:
    path: /docs/python-create-and-test-your-first-app-using-pipedream
    method: GET
- name: account_info
  endpoint:
    path: /me
    method: GET
- name: options
  endpoint:
    path: /options
    method: GET
- name: fields
  endpoint:
    path: /fields
    method: GET
- name: contact
  endpoint:
    path: /contact
    method: POST
- name: options
  endpoint:
    path: /options
    method: GET
- name: workflow
  endpoint:
    path: /workflow
    method: POST
- name: endpoint
  endpoint:
    path: /v1/endpoint
    method: GET
- name: proxy_api_functions
  endpoint:
    method: POST
    params:
      url: ''
      connection_id: ''
      target: ''
      headers: {}
      body: {}
- name: proxy_api_functions
  endpoint:
    method: PUT
    params:
      url: ''
      connection_id: ''
      target: ''
      headers: {}
      body: {}
- name: postData
  endpoint:
    path: /endpoint
    method: POST
- name: getData
  endpoint:
    path: /endpoint
    method: GET
- name: putData
  endpoint:
    path: /endpoint
    method: PUT
- name: deleteData
  endpoint:
    path: /endpoint
    method: DELETE
- name: post-a-message
  endpoint:
    path: https://slack.com/api/chat.postMessage
    method: POST
- name: twilio-send-a-message
  endpoint:
    path: /Accounts/${custom_data.sub_account.value}/Messages.json
    method: POST
    data_selector: .
    params:
      body:
        To: ${piped_content.0.phone}
        From: ${custom_data.phone_number.value}
        Body: ${custom_data.message.value}
      headers:
        Content-Type: application/x-www-form-urlencoded
- name: form_webhook
  endpoint:
    path: /forms/${custom_data.form.value}/webhooks/${webhook.id}
    method: PUT
    data_selector: body.enabled
- name: form_webhook_delete
  endpoint:
    path: /forms/${custom_data.form.value}/webhooks/${webhook.id}
    method: DELETE
- name: contact_custom_object
  endpoint:
    path: /contact/custom_object
    method: POST
- name: team_registration
  endpoint:
    path: /team_registration
    method: POST
- name: workflows
  endpoint:
    path: /docs/workflows
    method: GET
    data_selector: workflows
- name: app_details
  endpoint:
    path: /app/details
    method: GET
- name: submit_app
  endpoint:
    path: /app/submit
    method: POST
- name: zendesk_webhook
  endpoint:
    method: PUT
    path: forms/${custom_data.form.value}/webhooks/${webhook.id}
- name: zendesk_webhook
  endpoint:
    method: DELETE
    path: forms/${custom_data.form.value}/webhooks/${webhook.id}
- name: user
  endpoint:
    path: /api/v2/users/${reference}
    method: GET
    data_selector: user
- name: ticket
  endpoint:
    path: /api/v2/tickets/${reference}.json
    method: GET
    data_selector: ticket
- name: webhook_events
  endpoint:
    method: POST
- name: groupMembers
  endpoint:
    path: /api/3/groupMembers
    method: POST
- name: brandings
  endpoint:
    path: /brandings
    method: GET
    data_selector: brandings
- name: bulk_delete_accounts
  endpoint:
    path: /api/3/accounts/bulk_delete
    method: DELETE
    params:
      ids[]: ACCOUNT_ID
- name: bulk_delete_personalizations
  endpoint:
    path: /personalizations/bulkdelete
    method: DELETE
    params:
      ids: 11,12,13
- name: bulk_contact_importer
  endpoint:
    method: POST
    params:
      exclude_automations: true
- name: bulk_import_status
  endpoint:
    path: /api/3/import/info
    method: GET
    data_selector: status
- name: bulk_import_status
  endpoint:
    path: /import/bulk_import
    method: GET
    data_selector: .
- name: account_custom_field_data_bulk_update
  endpoint:
    path: /accountCustomFieldData/bulkUpdate
    method: PATCH
- name: individual_connection
  endpoint:
    path: /connections/{id}
    method: GET
- name: all_connections
  endpoint:
    path: /connections
    method: GET
- name: custom_fields
  endpoint:
    method: POST
- name: custom_field_values
  endpoint:
    method: POST
- name: custom_field_creation
  endpoint:
    path: /fields
    method: POST
    data_selector: field
- name: custom_field_verification
  endpoint:
    path: /fields
    method: GET
    data_selector: fields
- name: field_option
  endpoint:
    path: /fieldOption/bulk
    method: POST
    data_selector: fieldOptions
- name: lists
  endpoint:
    path: /lists
    method: GET
- name: field_relationship
  endpoint:
    path: /fieldRels
    method: POST
- name: fieldValues
  endpoint:
    path: /fieldValues
    method: POST
    data_selector: fieldValue
- name: event_tracking_status
  endpoint:
    path: /eventTracking
    method: GET
- name: toggle_event_tracking
  endpoint:
    path: /eventTracking
    method: POST
- name: whitelisted_event_name
  endpoint:
    path: /eventTrackingEvents
    method: POST
- name: list_whitelisted_events
  endpoint:
    path: /eventTrackingEvents
    method: GET
- name: track_event
  endpoint:
    path: /event
    method: POST
- name: delete_event
  endpoint:
    path: /api/3/eventTrackingEvents/{{EventName}}
    method: DELETE
- name: activities
  endpoint:
    path: /activities
    method: GET
    data_selector: activities
    params:
      contact: '{{contactId}}'
- name: tracking_logs
  endpoint:
    path: /contacts/{{contactId}}/trackingLogs
    method: GET
    data_selector: trackingLogs
- name: calendar
  endpoint:
    path: /calendars
    method: POST
- name: custom_field_creation
  endpoint:
    path: /api/3/fields
    method: POST
    data_selector: field
- name: custom_field_option_bulk
  endpoint:
    path: /api/3/fieldOption/bulk
    method: POST
- name: custom_field_relationship
  endpoint:
    path: /api/3/fieldRel
    method: POST
- name: field_relationships
  endpoint:
    path: /fieldRels
    method: POST
- name: account_custom_field_data
  endpoint:
    path: /accountCustomFieldData
    method: POST
    data_selector: accountCustomFieldDatum
- name: custom_field_meta
  endpoint:
    path: /api/3/accountCustomFieldMeta
    method: POST
- name: group_members
  endpoint:
    path: /groupMembers
    method: POST
- name: add_custom_field_to_field_group
  endpoint:
    path: /api/3/accountCustomFieldMeta/{id}/accountCustomFieldData
    method: POST
- name: contact
  endpoint:
    path: /contacts
    method: POST
    data_selector: contact
- name: account_contact
  endpoint:
    path: /api/3/accountContacts
    method: POST
- name: account
  endpoint:
    path: /accounts
    method: POST
    data_selector: account
- name: account_note
  endpoint:
    path: /accounts/notes
    method: POST
    data_selector: note
- name: address
  endpoint:
    path: /addresses
    method: POST
- name: campaign
  endpoint:
    path: /api/3/campaign
    method: POST
    data_selector: null
- name: fieldOption_bulk
  endpoint:
    path: /fieldOption/bulk
    method: POST
    data_selector: fieldOptions
- name: contactAutomations
  endpoint:
    path: /contactAutomations
    method: POST
    data_selector: contactAutomation
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
- name: bounceLogs
  endpoint:
    path: /contacts/{id}/bounceLogs
    method: GET
- name: contactData
  endpoint:
    path: /contacts/{id}/contactData
    method: GET
- name: contactGoals
  endpoint:
    path: /contacts/{id}/contactGoals
    method: GET
- name: contactLists
  endpoint:
    path: /contacts/{id}/contactLists
    method: GET
- name: contactLogs
  endpoint:
    path: /contacts/{id}/contactLogs
    method: GET
- name: contactTags
  endpoint:
    path: /contacts/{id}/contactTags
    method: GET
- name: contactDeals
  endpoint:
    path: /contacts/{id}/contactDeals
    method: GET
- name: deals
  endpoint:
    path: /contacts/{id}/deals
    method: GET
- name: fieldValues
  endpoint:
    path: /contacts/{id}/fieldValues
    method: GET
- name: geoIps
  endpoint:
    path: /contacts/{id}/geoIps
    method: GET
- name: notes
  endpoint:
    path: /contacts/{id}/notes
    method: GET
- name: organization
  endpoint:
    path: /contacts/{id}/organization
    method: GET
- name: plusAppend
  endpoint:
    path: /contacts/{id}/plusAppend
    method: GET
- name: trackingLogs
  endpoint:
    path: /contacts/{id}/trackingLogs
    method: GET
- name: scoreValues
  endpoint:
    path: /contacts/{id}/scoreValues
    method: GET
- name: automation
  endpoint:
    path: /contactAutomations/{id}/automation
    method: GET
- name: contact
  endpoint:
    path: /contactAutomations/{id}/contact
    method: GET
- name: contactGoalsAutomation
  endpoint:
    path: /contactAutomations/{id}/contactGoals
    method: GET
- name: shareable_campaign_template_link
  endpoint:
    path: /template/share
    method: GET
    data_selector: url
- name: personalization
  endpoint:
    path: /personalizations
    method: POST
    data_selector: personalization
- name: custom_objects
  endpoint:
    method: POST
- name: custom_schema_creation
  endpoint:
    path: /api/3/customObjects/schemas
    method: POST
    data_selector: schema
    params: {}
- name: schema_list
  endpoint:
    path: /
    method: GET
- name: individual_schema
  endpoint:
    path: /{{schemaID}}
    method: GET
- name: delete_schema
  endpoint:
    path: /{{schemaID}}
    method: DELETE
- name: update_schema
  endpoint:
    path: /{{schemaID}}
    method: PUT
- name: contact
  endpoint:
    path: /contact/sync
    method: POST
    data_selector: id
- name: custom_object_record
  endpoint:
    path: /customObjects/records/:schemaId/external/:externalId
    method: GET
- name: custom_object_record_by_id
  endpoint:
    path: /customObjects/records/:schemaId/:recordId
    method: GET
- name: custom_object_record_upsert
  endpoint:
    path: /api/3/customObjects/records
    method: POST
- name: custom_object_record_delete
  endpoint:
    path: /api/3/customObjects/records/{{schemaID}}/external/{{externalId}}
    method: DELETE
- name: contact_automation
  endpoint:
    path: /contactAutomations/{id}
    method: DELETE
- name: account_custom_field_data
  endpoint:
    path: /accountCustomFieldData/
    method: DELETE
- name: custom_field
  endpoint:
    path: /api/3/accountCustomFieldMeta
    method: DELETE
- name: account
  endpoint:
    path: /accounts
    method: GET
- name: account_note
  endpoint:
    path: /accountNotes
    method: POST
- name: custom_account_field
  endpoint:
    path: /customAccountFields
    method: POST
- name: address
  endpoint:
    path: /addresses
    method: POST
- name: automation
  endpoint:
    path: /automations
    method: GET
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
- name: contact
  endpoint:
    path: /contacts
    method: GET
- name: deal
  endpoint:
    path: /deals
    method: GET
- name: pipeline
  endpoint:
    path: /pipelines
    method: GET
- name: stage
  endpoint:
    path: /stages
    method: GET
- name: form
  endpoint:
    path: /forms
    method: GET
- name: list
  endpoint:
    path: /lists
    method: GET
- name: note
  endpoint:
    path: /notes
    method: POST
- name: score
  endpoint:
    path: /scores
    method: GET
- name: segment
  endpoint:
    path: /segments
    method: GET
- name: tag
  endpoint:
    path: /tags
    method: POST
- name: task
  endpoint:
    path: /tasks
    method: POST
- name: user
  endpoint:
    path: /users
    method: POST
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
- name: message
  endpoint:
    path: /messages/{id}
    method: DELETE
- name: account
  endpoint:
    path: /api/3/accounts/{id}
    method: DELETE
- name: address_group
  endpoint:
    path: /addressGroups/{id}
    method: DELETE
- name: addresslist
  endpoint:
    path: /api/3/addressLists/{id}
    method: DELETE
- name: address
  endpoint:
    path: /addresses/{id}
    method: DELETE
- name: delete_association
  endpoint:
    path: /api/3/accountContacts/{id}
    method: DELETE
- name: contact
  endpoint:
    path: /api/3/contacts/{id}
    method: DELETE
- name: custom_field_field_group
  endpoint:
    path: /api/3/groupMembers/{groupID}
    method: DELETE
- name: personalization
  endpoint:
    path: /personalizations/
    method: DELETE
- name: duplicate_campaign
  endpoint:
    path: /campaigns/{id}/copy
    method: POST
- name: campaign
  endpoint:
    path: /campaigns//edit
    method: PUT
- name: personalization
  endpoint:
    path: /api/3/personalizations/
    method: PUT
- name: group_members
  endpoint:
    path: /groupMembers
    method: GET
- name: branding
  endpoint:
    path: /brandings/
    method: GET
    data_selector: branding
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
- name: contactAutomations
  endpoint:
    path: /contactAutomations
    method: GET
    data_selector: contactAutomations
- name: contactLists
  endpoint:
    path: /contactLists
    method: GET
    data_selector: contactLists
- name: deals
  endpoint:
    path: /deals
    method: GET
    data_selector: deals
- name: fieldValues
  endpoint:
    path: /fieldValues
    method: GET
    data_selector: fieldValues
- name: geoAddresses
  endpoint:
    path: /geoAddresses
    method: GET
    data_selector: geoAddresses
- name: geoIps
  endpoint:
    path: /geoIps
    method: GET
    data_selector: geoIps
- name: group_member
  endpoint:
    path: /groupMembers/{groupID}
    method: GET
- name: resource
  endpoint:
    method: GET
- name: resource
  endpoint:
    method: POST
- name: resource
  endpoint:
    method: PUT
- name: resource
  endpoint:
    method: DELETE
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
- name: addresses
  endpoint:
    path: /api/3/addresses
    method: GET
    data_selector: addresses
- name: account_contacts
  endpoint:
    path: /accountContacts
    method: GET
    data_selector: accountContacts
- name: automations
  endpoint:
    path: /automations
    method: GET
    data_selector: automations
- name: calendars
  endpoint:
    path: /calendars/
    method: GET
    data_selector: calendar
- name: calendars
  endpoint:
    path: /calendars
    method: GET
    data_selector: calendars
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
- name: contact_automations
  endpoint:
    path: /contactAutomations
    method: GET
    data_selector: contactAutomations
- name: contact_automations
  endpoint:
    path: /contacts//contactAutomations
    method: GET
    data_selector: contactAutomations
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
- name: account_custom_field_meta
  endpoint:
    path: /accountCustomFieldMeta
    method: GET
    data_selector: accountCustomFieldMeta
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: messages
- name: contact_activities
  endpoint:
    path: /api/3/contacts/[contactID]
    method: GET
    data_selector: activities
    params:
      contactID: '{{ required }}'
- name: personalizations
  endpoint:
    path: /api/3/personalizations
    method: GET
    data_selector: personalizations
- name: contacts
  endpoint:
    path: /3/contacts
    method: GET
    params:
      limit: 20
      offset: 0
- name: accounts
  endpoint:
    path: /accounts
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
- name: deals
  endpoint:
    path: /deals
    method: GET
- name: messages
  endpoint:
    path: /messages
    method: GET
- name: automations
  endpoint:
    path: /automations
    method: GET
- name: calendar_feed
  endpoint:
    path: /calendars/{id}
    method: DELETE
- name: user
  endpoint:
    path: /users/{id}
    method: DELETE
- name: contact
  endpoint:
    path: /contacts/{id}
    method: DELETE
- name: campaign
  endpoint:
    path: /campaigns/
    method: GET
    data_selector: campaign
- name: contact_geo_ip
  endpoint:
    path: /api/3/contacts/{id}/geoIps
    method: GET
    data_selector: geoAddress
- name: contact_score_value
  endpoint:
    path: /contacts/scoreValues
    method: GET
    data_selector: scoreValues
- name: custom_field_contact
  endpoint:
    path: /api/3/fields/
    method: GET
    data_selector: field
- name: account_custom_field_meta
  endpoint:
    path: /api/3/accountCustomFieldMeta/
    method: GET
    data_selector: accountCustomFieldMetum
- name: account_custom_field_data
  endpoint:
    path: /accountCustomFieldData/
    method: GET
    data_selector: accountCustomFieldDatum
- name: message
  endpoint:
    path: /messages/
    method: GET
    data_selector: message
- name: account
  endpoint:
    path: /accounts/
    method: GET
    data_selector: account
- name: address
  endpoint:
    path: /api/3/addresses/
    method: GET
    data_selector: address
- name: account_contact
  endpoint:
    path: /accountContacts/
    method: GET
    data_selector: accountContact
- name: account_contacts
  endpoint:
    path: /api/3/contacts/accountContacts
    method: GET
    data_selector: accountContacts
- name: contact_automation_entry_counts
  endpoint:
    path: /api/3/contacts//automationEntryCounts
    method: GET
    data_selector: automationEntryCounts
- name: contact_bounce_logs
  endpoint:
    path: /api/3/contacts//bounceLogs
    method: GET
    data_selector: bounceLogs
- name: contact_data
  endpoint:
    path: /contacts/contactData
    method: GET
    data_selector: contactDatum
- name: contacts
  endpoint:
    path: /contacts//contactDeals
    method: GET
    data_selector: contacts
- name: deals
  endpoint:
    path: /deals
    method: GET
    data_selector: deals
- name: contactDeals
  endpoint:
    path: /contactDeals
    method: GET
    data_selector: contactDeals
- name: contact_deals
  endpoint:
    path: /contacts//deals
    method: GET
    data_selector: deals
- name: contact_field_values
  endpoint:
    path: /api/3/contacts//fieldValues
    method: GET
    data_selector: fieldValues
- name: geo_ips
  endpoint:
    path: /geoIps
    method: GET
    data_selector: geoIps
- name: geo_address
  endpoint:
    path: /geoAddress
    method: GET
- name: contact_goals
  endpoint:
    path: /contacts//contactGoals
    method: GET
    data_selector: contactGoals
- name: contact_lists
  endpoint:
    path: /contacts/contactLists
    method: GET
    data_selector: contactLists
- name: contact_logs
  endpoint:
    path: /contacts/{id}/contactLogs
    method: GET
- name: contact_notes
  endpoint:
    path: /api/3/contacts//notes
    method: GET
    data_selector: notes
- name: contact_organization
  endpoint:
    path: /contacts//organization
    method: GET
    data_selector: organization
- name: contact_plus_append
  endpoint:
    path: /contacts//plusAppend
    method: GET
    data_selector: plusAppend
- name: contact_tracking_logs
  endpoint:
    path: /api/3/contacts/{id}/trackingLogs
    method: GET
- name: fields
  endpoint:
    path: /api/3/fields
    method: GET
    data_selector: fields
- name: campaign_links
  endpoint:
    path: /api/3/campaigns//links
    method: GET
    data_selector: links
- name: notes
  endpoint:
    path: /notes
    method: GET
    data_selector: notes
- name: personalization
  endpoint:
    path: /personalizations/{id}
    method: GET
    data_selector: personalization
- name: contact
  endpoint:
    data_selector: contact
- name: contacts
  endpoint:
    data_selector: contacts
- name: contacts
  endpoint:
    path: /api/3/contacts
    method: GET
    data_selector: contacts
    params:
      include: contactLists.list,organization
- name: contact_sync
  endpoint:
    path: /contact/sync
    method: POST
    data_selector: contact
- name: account_note
  endpoint:
    path: /accounts/notes/
    method: PUT
    data_selector: note
- name: calendar
  endpoint:
    path: /calendars
    method: PUT
    data_selector: calendar
- name: contact
  endpoint:
    path: /contacts/
    method: PUT
- name: account_custom_field_data
  endpoint:
    path: /accountCustomFieldData
    method: PUT
    data_selector: accountCustomFieldDatum
- name: account_custom_field_meta
  endpoint:
    path: /api/3/accountCustomFieldMeta/
    method: PUT
    data_selector: accountCustomFieldMetum
- name: account_custom_field_meta_data
  endpoint:
    path: /api/:version/accountCustomFieldMeta/1/accountCustomFieldData
    method: GET
    data_selector: links
- name: field
  endpoint:
    path: /fields/
    method: PUT
    data_selector: field
- name: message
  endpoint:
    path: /messages/{id}
    method: PUT
    data_selector: message
- name: account
  endpoint:
    path: /accounts/
    method: PUT
    data_selector: account
- name: address
  endpoint:
    path: /api/3/addresses/
    method: PUT
- name: account_contact
  endpoint:
    path: /accountContacts/
    method: PUT
- name: branding
  endpoint:
    path: /brandings/
    method: PUT
    data_selector: branding
- name: group_members
  endpoint:
    path: /groupMembers/
    method: PUT
    params:
      default_group:
        contact_custom_fields: '1'
        deal_custom_fields: '2'
        account_custom_fields: '3'
- name: contact_lists
  endpoint:
    path: /contactLists
    method: POST
    data_selector: contactList
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
- name: contact_automation
  endpoint:
    path: /contacts/1/contactAutomations
    method: GET
    data_selector: links.contactAutomations
- name: contact_data
  endpoint:
    path: /contacts/1/contactData
    method: GET
    data_selector: links.contactData
- name: contact_goals
  endpoint:
    path: /contacts/1/contactGoals
    method: GET
    data_selector: links.contactGoals
- name: contact_lists_contact
  endpoint:
    path: /contacts/1/contactLists
    method: GET
    data_selector: links.contactLists
- name: contact_logs
  endpoint:
    path: /contacts/1/contactLogs
    method: GET
    data_selector: links.contactLogs
- name: contact_tags
  endpoint:
    path: /contacts/1/contactTags
    method: GET
    data_selector: links.contactTags
- name: contact_deals
  endpoint:
    path: /contacts/1/contactDeals
    method: GET
    data_selector: links.contactDeals
- name: deals
  endpoint:
    path: /contacts/1/deals
    method: GET
    data_selector: links.deals
- name: field_values
  endpoint:
    path: /contacts/1/fieldValues
    method: GET
    data_selector: links.fieldValues
- name: geo_ips
  endpoint:
    path: /contacts/1/geoIps
    method: GET
    data_selector: links.geoIps
- name: notes
  endpoint:
    path: /contacts/1/notes
    method: GET
    data_selector: links.notes
- name: organization
  endpoint:
    path: /contacts/1/organization
    method: GET
    data_selector: links.organization
- name: plus_append
  endpoint:
    path: /contacts/1/plusAppend
    method: GET
    data_selector: links.plusAppend
- name: tracking_logs
  endpoint:
    path: /contacts/1/trackingLogs
    method: GET
    data_selector: links.trackingLogs
- name: score_values
  endpoint:
    path: /contacts/1/scoreValues
    method: GET
    data_selector: links.scoreValues
- name: contacts
  endpoint:
    path: /api/3/contacts
    method: GET
- name: deals
  endpoint:
    path: /api/3/deals
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
- name: deals
  endpoint:
    path: /deals
    method: GET
    data_selector: deals
notes:
- OAuth2 configuration requires setting up an authorization base URL, client_id, client_secret,
  scopes, and token URL.
- Refresh URL is optional and should be used if the OAuth server supports/require
  refreshing tokens.
- verify_url is used to validate user credentials via a POST request expecting a 200
  response; other statuses mark credentials as invalid.
- Pagination is handled via page numbers and page size parameters.
- Authenticated API Requests require the 'auth' object configuration
- Review process includes technical review and end-to-end testing of app's config
  file
- Marketplace listing creation occurs simultaneously with app review process
- Public apps cannot be released until the app listing is complete
- App must contain at least one workflow; apps with no workflows will be withdrawn
- Sandbox accounts available for testing before production
- Real-time logs available for debugging during sandbox testing
- Remote URL must work in a cross-domain iframe
- Zipped bundle must contain an index.html at the root; Maximum size of the bundle
  is 100 MB, with no file exceeding 10 MB
- Authorization is required for apps to communicate with ActiveCampaign
- Historical sync involves polling for a one-time data retrieval
- API uses Basic Authentication for all requests.
- Responses for /me, /options, /fields are predefined.
- POST /contact echoes back the request body.
- Webhooks require JSON payload
- Configuration through App Studio
- Token refresh URLs are the same as token request URL.
- All applications, both public and private, are hand-reviewed by the Developer Relations
  team at ActiveCampaign and need approval for release.
- Public applications require a higher standard of quality and must provide API credentials
  for testing.
- Private applications are only visible to users on the same account and can be shared
  with additional accounts by contacting the Developer Relations Team.
- Uses CX Apps that integrate with external systems through Pipedream
- API calls are asynchronous and return a Promise.
- Requires OAuth2 configuration and permission scopes for accessing various Slack
  functionalities.
- Uses OAuth2 with refresh token; requires proper scope setup including offline, accounts:read,
  and others
- Changing API AUTH endpoints will cause all current app users to disconnect when
  the new version is published
- Always test your applications in sandbox before submitting for review
- Workflow names cannot be updated once published
- Workflows cannot be deleted once published
- ActiveCampaign provides options for releasing apps either privately or to the Marketplace
- Does not provide Personally Identifiable Information (PII) of users
- Endpoint always returns 'Delete successful' even if none of the variable ids provided
  actually exist
- Not designed for frequent operations with less than 10 contacts; use Contacts functionality
  of ActiveCampaign API V3 for 10 or fewer contacts
- Maximum payload size for a single bulk_import request is 399,999 bytes
- Add a short delay between creating a bulk import and calling for its status to avoid
  false status results.
- Add a short delay between creating a bulk import and calling for its status to avoid
  false negatives.
- The Value being sent must match the type of data the field was built to accept.
- The Value being sent must match exactly to the Options provided.
- The Contact must be subscribed to the List the Custom Field has a Relationship to.
- Events must be connected to existing Contact records
- Deleting the Event name does not delete individual events that have already been
  logged
- Event names must be url encoded
- After creating a custom field, you must call the Add Custom Field to Field Group
  API to ensure visibility on record pages.
- Contact-Organization relationships are managed through Account-Contact endpoints
- Tags with spaces are replaced by hyphens in the tag name.
- Creating a variable with a pre-existing tag appends "_X" to the tag, where X is
  the next available number.
- Custom Objects can be public or private; private usage requires an enterprise account.
- For best performance in pagination with contacts, use sorting by id (orders[id]=ASC)
  and paginate using id_greater.
- Rate limit of 5 requests per second per account
- User needs deal and pipeline-specific permissions to fully retrieve deal field data;
  otherwise, limited data with only id, title, and isDisabled are returned.
- IP address geolocation uses IP-to-location databases which may not pinpoint the
  exact location of the Contact
- Allowed datetime format is ISO only
- When updating a multivalued field, values must be strings in an array
- Messages edited through the API will not show updates in the UI preview window.
errors:
- '401 Unauthorized: Ensure correct OAuth2 credentials and scopes.'
- Token Refresh Failure: Attempt refresh token up to three times, then notify customer
    if it fails.
- 409: Retry up to 100 times, respecting Retry-After header or using exponential backoff
    from 2 to 60 seconds
- 429: Retry up to 100 times, respecting Retry-After header or using exponential backoff
    from 2 to 60 seconds
- 500: Retry up to 100 times, respecting Retry-After header or using exponential backoff
    from 2 to 60 seconds
- 503: Retry up to 100 times, respecting Retry-After header or using exponential backoff
    from 2 to 60 seconds
- App Withdrawn: Withdraw the app from the review process if changes are needed after
    submission
- 401 Unauthorized: Recheck OAuth scopes or token expiration
- 401 Unauthorized: Check provided username and password
- 401: No Authorization header present or Username or password does not match
- 404: Not found for the requested path
- 401 Unauthorized: Check OAuth credentials and permissions
- API credentials not provided: Provide sandbox/test credentials for public app submissions
    to ensure the app can be tested end-to-end.
- 401 Unauthorized: Include a valid username and password
- If experiencing issues with asynchronous calls, ensure your code handles Promise
  responses correctly.
- 401 Unauthorized: Check authentication credentials and methods
- 'For requests containing a single contact: 20 requests per minute rate limit'
- 'For requests containing multiple contacts: 100 requests per minute rate limit'
- failureReasons: Handle specific failure reasons per contact or general errors like
    rate limits
- status: false
  solution: Wait at least a second after initiating a bulk import before checking
    its status to ensure accurate reporting.
- 200 OK: Event spawned
- Invalid template: Template ID might be incorrect or not exist
- Empty request body: Ensure request body is not empty
- Campaign not found: Verify campaign ID is correct and exists
- 402: The request could not be processed due to account payment issues.
- 403: The request could not be authenticated or the authenticated user is not authorized
    to access the requested resource.
- 404: The requested resource does not exist.
- 422: The request could not be processed, usually due to a missing or invalid parameter.
- 429: The user has sent too many requests in a given amount of time ("rate limiting")
    - contact support or account manager for more details.
- REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency
- No Result found for Personalization with id 15: Check if the personalization ID
    is correct
auth_info:
  mentioned_objects:
  - auth
  - calendly-oauth
  - oauth2
  - App Studio
  - Developer Info
  - API keys
  - App Configuration
  - Configuration Toolbox
  - App
  - Authorization
  - Developer Relations Team
  - CX App
  - oauth2_configuration
  - typeform_oauth2
  - zendesk-auth
  - API key
  - Custom Field
  - List
  - fieldValues
client:
  base_url: https://api.example.com
  paginator:
    type: cursor
    cursor_path: .next_cursor
    cursor_param: limit
    page_size_param: limit
    default_page_size: 200
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://calendly.com/oauth/token
    verify_url: https://${subdomain}.example.com/oauth2/token
    request_body:
      grant_type: client_credentials
    defined_fields:
      subdomain:
        label: Account Subdomain
        placeholder: Enter Your Account Subdomain
        help_text: 'Your account subdomain can be found by looking at your account
          url: https://{subdomain}.example.com/ '
      username:
        label: Client ID
        placeholder: Enter Your Client ID
        help_text: Login to your account to find API credentials
      password:
        label: Secret
        placeholder: Enter Your Secret
        help_text: Found immediately below your Client ID
    refresh_token: https://api.example.com/oauth/authorize
    location: header
    header_name: Authorization
    client_id: '{{ dlt.secrets[''typeform_client_id''] }}'
    client_secret: '{{ dlt.secrets[''typeform_client_secret''] }}'
  headers:
    Accept: text/html
    Content-Type: application/json
    A-Header-Name: some_value
source_metadata: null
