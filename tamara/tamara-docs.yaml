resources:
- name: create_in_store_qr_code_checkout_session
  endpoint:
    path: /checkout/in-store
    method: POST
- name: create_in_store_qr_code_checkout_session
  endpoint:
    path: /checkout/in-store
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api_configuration
  endpoint:
    path: /api/configuration
    method: GET
    data_selector: configuration
    params: {}
- name: capture_order
  endpoint:
    path: /orders/capture
    method: POST
    data_selector: order
    params: {}
- name: refund_order
  endpoint:
    path: /orders/refund
    method: POST
    data_selector: refund
    params: {}
- name: checkout_information
  endpoint:
    path: /rest/V1/tamara/checkout/{magentoOrderId}
    method: GET
    data_selector: response
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: data
    params: {}
- name: checkout_information
  endpoint:
    path: index.php?route=payment/api/tamarapay/checkout_information
    method: get
- name: checkout_information_open_cart_2_3_x
  endpoint:
    path: index.php?route=extension/payment/api/tamarapay/checkout_information
    method: get
- name: checkout_information_open_cart_3_0_x
  endpoint:
    path: index.php?route=extension/payment/api/tamarapay/checkout_information
    method: get
- name: webhook_events
  endpoint:
    path: /webhook/events
    method: POST
    data_selector: events
- name: webhook
  endpoint:
    path: /shopify/webhook/v3
    method: POST
    data_selector: event
    params: {}
- name: orders
  endpoint:
    path: /v1/orders
    method: GET
    data_selector: data
    params: {}
- name: refunds
  endpoint:
    path: /v1/refunds
    method: GET
    data_selector: data
    params: {}
- name: in_store_order_status
  endpoint:
    path: /in-store-order-status
    method: GET
    data_selector: status_records
- name: create_checkout_session
  endpoint:
    path: /merchants/orders
    method: POST
    data_selector: capture_id
    params: {}
- name: get_order_details
  endpoint:
    path: /merchants/orders/{order_id}
    method: GET
    data_selector: order_id
    params: {}
- name: update_order_reference_id
  endpoint:
    path: /merchants/orders/{order_reference_id}
    method: PUT
    data_selector: order_reference_id
    params: {}
- name: create_checkout_session
  endpoint:
    path: /checkout
    method: POST
    data_selector: response
    params: {}
- name: authorise_order
  endpoint:
    path: /orders/{order_id}/authorise
    method: POST
    data_selector: response
    params: {}
- name: capture_order
  endpoint:
    path: /payments/capture
    method: POST
    data_selector: response
    params: {}
- name: get_order_details
  endpoint:
    path: /merchants/orders/{order_id}
    method: GET
    data_selector: response
    params: {}
- name: update_order_reference_id
  endpoint:
    path: /updateorderreferenceid
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: refund
  endpoint:
    path: /merchants/orders/{order_id}/refund
    method: POST
    data_selector: records
- name: get_order_details
  endpoint:
    path: /merchants/orders/{order_id}
    method: GET
    data_selector: records
- name: update_order_reference_id
  endpoint:
    path: /orders/{order_id}/reference-id
    method: PUT
    data_selector: records
- name: create_in_store_checkout_session
  endpoint:
    path: /reference/createinstorecheckoutsession
    method: POST
    data_selector: response
    params: {}
- name: customer_id_verification_status
  endpoint:
    path: /merchants/customer/id-verification-status
    method: POST
    data_selector: response
    params:
      phone_number: ''
      country_code: ''
- name: create_in_store_checkout_session
  endpoint:
    path: /checkout/in-store-session
    method: POST
    data_selector: checkout_id
    params: {}
- name: get_order_details_by_order_id
  endpoint:
    path: /merchants/orders/{order_id}
    method: GET
    data_selector: order_id
    params: {}
- name: get_order_details_by_reference_id
  endpoint:
    path: /merchants/orders/reference-id/{order_reference_id}
    method: GET
    data_selector: order_id
    params: {}
- name: create_in_store_checkout_session
  endpoint:
    path: /checkout/in-store-session
    method: POST
    data_selector: checkout_id
    params: {}
- name: get_order_details_by_order_id
  endpoint:
    path: /merchants/orders/{order_id}
    method: GET
    data_selector: order_id
    params: {}
- name: get_order_details_by_reference_id
  endpoint:
    path: /merchants/orders/reference-id/{order_reference_id}
    method: GET
    data_selector: order_reference_id
    params: {}
- name: simplified_refund
  endpoint:
    path: /payments/simplified-refund/{order_id}
    method: POST
    data_selector: null
    params: {}
- name: update_order_reference_id
  endpoint:
    path: /orders/{order_id}/reference-id
    method: PUT
    data_selector: null
    params: {}
- name: customer_id_verification_status
  endpoint:
    path: /merchants/customer/id-verification-status
    method: POST
    data_selector: null
    params: {}
- name: Product Details Page Widget
  endpoint:
    path: /docs/direct-widgets/product-details
    method: GET
    data_selector: widgets
- name: Cart Widget
  endpoint:
    path: /docs/direct-widgets/cart
    method: GET
    data_selector: widgets
- name: Checkout Widget
  endpoint:
    path: /docs/direct-widgets/checkout
    method: GET
    data_selector: widgets
- name: Popup
  endpoint:
    path: /docs/direct-widgets/popup
    method: GET
    data_selector: widgets
- name: Tamara Logo and Brand Assets
  endpoint:
    path: https://cdn.tamara.co/merchant_docs/Tamara__Brand__Assets_v2.zip
    method: GET
- name: Tamara Widget API Documentation
  endpoint:
    path: https://docs.tamara.co/docs/direct-widgets
    method: GET
- name: Tamara Widget Tool
  endpoint:
    path: https://widget-docs.tamara.co/tamara-summary
    method: GET
- name: tamara_flutter_sdk
  endpoint:
    path: /packages/tamara_flutter_sdk
    method: GET
    data_selector: dependencies
    params: {}
- name: order_status
  endpoint:
    path: /order/status
    method: GET
    data_selector: statuses
- name: payment
  endpoint:
    path: /api/payment
    method: POST
    data_selector: paymentData
- name: settlements
  endpoint:
    path: /settlements
    method: GET
    data_selector: data
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: data
- name: settlement_model
  endpoint:
    path: /settlement/model
    method: GET
    data_selector: models
- name: settlement_reports
  endpoint:
    path: /settlement/reports
    method: GET
    data_selector: reports
- name: orders
  endpoint:
    path: /orders
    method: POST
    data_selector: order
    params: {}
- name: refunds
  endpoint:
    path: /refunds
    method: POST
    data_selector: refund
    params: {}
- name: settlement_details
  endpoint:
    path: /settlement/details
    method: GET
    data_selector: records
- name: checkout_information
  endpoint:
    path: /rest/V1/tamara/checkout/{magentoOrderId}
    method: GET
    data_selector: JSON string about the order's information
    params: {}
- name: roles
  endpoint:
    path: /users/manage-roles
    method: POST
    data_selector: roles
- name: payment_types
  endpoint:
    path: /checkout/payment-types
    method: GET
- name: Tamarapay
  endpoint:
    path: /services/data/vXX.X/sobjects/Tamarapay
    method: GET
    data_selector: records
- name: check_payment_options_availability
  endpoint:
    path: /checkout/payment-options-pre-check
    method: POST
- name: customer_id_verification_status
  endpoint:
    path: /merchants/customer/id-verification-status
    method: GET
- name: checkout_session
  endpoint:
    path: /create-checkout-session
    method: POST
- name: order_details
  endpoint:
    path: /get-order-details
    method: GET
- name: refund
  endpoint:
    path: /simplified-refund
    method: POST
- name: create_checkout_session
  endpoint:
    path: /checkout
    method: POST
- name: product_widget
  endpoint:
    path: /widgets/product
    method: GET
    data_selector: widgetData
    params: {}
- name: authorise_order
  endpoint:
    path: /orders/{order_id}/authorise
    method: POST
- name: cancel_order
  endpoint:
    path: /orders/{order_id}/cancel
    method: POST
- name: checkout_information
  endpoint:
    path: index.php?route=payment/api/tamarapay/checkout_information
    method: get
    params: {}
- name: capture_order
  endpoint:
    path: /payments/capture
    method: POST
- name: In-Store Order Status Flow
  endpoint:
    path: /reference/in-store-checkout-flow
    method: GET
- name: Get Order Details
  endpoint:
    path: /reference/getorderdetails
    method: GET
- name: Update order_reference_id
  endpoint:
    path: /reference/updateorderreferenceid
    method: PUT
- name: Simplified Refund
  endpoint:
    path: /reference/simplifiedrefund
    method: POST
- name: Register Webhook URL
  endpoint:
    path: /reference/registerwebhookurl
    method: POST
- name: Retrieve Webhook URL using Webhook ID
  endpoint:
    path: /reference/retrievewebhookurlusingwebhookid
    method: GET
- name: Update Webhook URL using Webhook ID
  endpoint:
    path: /reference/updatewebhookurlusingwebhookid
    method: PUT
- name: Delete Webhook URL using Webhook ID
  endpoint:
    path: /reference/deletewebhookurlusingwebhookid
    method: DELETE
- name: create_in_store_checkout_session
  endpoint:
    path: /checkout/in-store-session
    method: POST
- name: void_checkout_session
  endpoint:
    path: /checkout/{checkout_id}/void
    method: POST
- name: order_details
  endpoint:
    path: /orders/{order_id}
    method: GET
    data_selector: order_details
- name: webhook_events
  endpoint:
    path: /webhook/events
    method: POST
    data_selector: events
- name: update_order_reference_id
  endpoint:
    path: /orders/{order_id}/reference-id
    method: PUT
- name: simplified_refund
  endpoint:
    path: /payments/simplified-refund/{order_id}
    method: POST
- name: webhooks
  endpoint:
    path: /reference/registerwebhookurl
    method: POST
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /v1/payments
    method: POST
    data_selector: data
    params: {}
- name: register_webhook
  endpoint:
    path: /webhooks
    method: POST
- name: retrieve_webhook_url
  endpoint:
    path: /webhooks/{webhookId}
    method: GET
- name: update_webhook
  endpoint:
    path: /webhooks/{webhookId}
    method: PUT
- name: orders
  endpoint:
    path: /v1/orders
    method: GET
    data_selector: data
    params: {}
- name: delete_webhook
  endpoint:
    path: /webhooks/{webhookId}
    method: DELETE
- name: dispute_case
  endpoint:
    path: /external/merchants/orders/disputes/
    method: GET
- name: update_dispute
  endpoint:
    path: /external/merchants/orders/disputes/{dispute_id}
    method: POST
- name: Tamara Gateway
  endpoint:
    path: /woocommerce/settings/payments/tamara_gateway
    method: POST
- name: sandbox_api
  endpoint:
    path: /api-sandbox.tamara.co
    method: GET
- name: live_api
  endpoint:
    path: /api.tamara.co
    method: GET
- name: order
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params: {}
- name: cancel_order
  endpoint:
    path: /cancel
    method: POST
- name: capture_order
  endpoint:
    path: /capture
    method: POST
- name: refund_order
  endpoint:
    path: /refund
    method: POST
- name: In-store Order Status
  endpoint:
    path: /in-store-order-status
    method: GET
    data_selector: statuses
- name: create_checkout_session
  endpoint:
    path: /merchants/orders
    method: POST
    data_selector: response
- name: get_order_details
  endpoint:
    path: /merchants/orders/{order_id}
    method: GET
    data_selector: response
- name: update_order_reference_id
  endpoint:
    path: /merchants/orders/{order_id}/reference
    method: PUT
    data_selector: response
- name: create_checkout_session
  endpoint:
    path: /checkout
    method: POST
- name: authorise_order
  endpoint:
    path: /orders/{order_id}/authorise
    method: POST
- name: get_order_details
  endpoint:
    path: /merchants/orders/{order_id}
    method: GET
- name: capture_order
  endpoint:
    path: /payments/capture
    method: POST
- name: refund
  endpoint:
    path: /merchants/orders/{order_id}/refund
    method: POST
    data_selector: total_amount
    params: {}
- name: get_order_details
  endpoint:
    path: /merchants/orders/{order_id}
    method: GET
    data_selector: order_id
    params: {}
- name: update_order_reference_id
  endpoint:
    path: /orders/{order_id}/reference-id
    method: PUT
    data_selector: message
    params: {}
- name: webhook
  endpoint:
    path: /notification
    method: POST
    data_selector: data
    params: {}
- name: create_in_store_checkout_session
  endpoint:
    path: /reference/createinstorecheckoutsession
    method: POST
- name: check_customer_id_verification_status
  endpoint:
    path: /merchants/customer/id-verification-status
    method: POST
- name: create_in_store_checkout_session
  endpoint:
    path: /checkout/in-store-session
    method: POST
- name: get_order_details_by_order_id
  endpoint:
    path: /merchants/orders/{order_id}
    method: GET
- name: get_order_details_by_reference_id
  endpoint:
    path: /merchants/orders/reference-id/{order_reference_id}
    method: GET
- name: create_in_store_checkout_session
  endpoint:
    path: /checkout/in-store-session
    method: POST
- name: get_order_details
  endpoint:
    path: /merchants/orders/{order_id}
    method: GET
- name: get_order_details_by_reference_id
  endpoint:
    path: /merchants/orders/reference-id/{order_reference_id}
    method: GET
- name: simplified_refund
  endpoint:
    path: /payments/simplified-refund/{order_id}
    method: POST
    data_selector: refund_id
    params: {}
- name: order_reference_id
  endpoint:
    path: /orders/{order_id}/reference-id
    method: PUT
    data_selector: message
    params: {}
- name: customer_id_verification_status
  endpoint:
    path: /merchants/customer/id-verification-status
    method: POST
    data_selector: is_id_verified
    params: {}
- name: payment_options
  endpoint:
    path: /payment-options
    method: GET
    data_selector: options
    params: {}
- name: Product Details Page Widget
  endpoint:
    path: /widgets/product-details
    method: GET
    data_selector: widget_data
- name: Cart Widget
  endpoint:
    path: /widgets/cart
    method: GET
    data_selector: widget_data
- name: Checkout Widget
  endpoint:
    path: /widgets/checkout
    method: GET
    data_selector: widget_data
- name: Popup
  endpoint:
    path: /widgets/popup
    method: GET
    data_selector: widget_data
- name: PDP Widget
  endpoint:
    path: /docs/direct-widgets
    method: GET
    data_selector: widget_info
    params: {}
- name: Cart Widget
  endpoint:
    path: /docs/direct-widgets
    method: GET
    data_selector: widget_info
    params: {}
- name: Checkout Widget
  endpoint:
    path: /docs/direct-widgets
    method: GET
    data_selector: widget_info
    params: {}
- name: orders
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: data
    params: {}
- name: capture_order
  endpoint:
    path: /pp-order-mgmt/capture-order
    method: POST
- name: users
  endpoint:
    path: /users
    method: POST
    data_selector: user
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
- name: payment_types
  endpoint:
    path: /checkout/payment-types
    method: GET
- name: check_payment_options_availability
  endpoint:
    path: /checkout/payment-options-pre-check
    method: POST
- name: customer_id_verification_status
  endpoint:
    path: /merchants/customer/id-verification-status
    method: GET
- name: create_checkout_session
  endpoint:
    path: /checkout
    method: POST
- name: authorise_order
  endpoint:
    path: /orders/{order_id}/authorise
    method: POST
- name: cancel_order
  endpoint:
    path: /orders/{order_id}/cancel
    method: POST
- name: capture_order
  endpoint:
    path: /payments/capture
    method: POST
- name: in_store_order_status
  endpoint:
    path: /reference/in-store-checkout-flow
    method: GET
- name: create_in_store_checkout_session
  endpoint:
    path: /checkout/in-store-session
    method: POST
- name: void_checkout_session
  endpoint:
    path: /checkout/{checkout_id}/void
    method: POST
- name: order_details
  endpoint:
    path: /orders/{order_id}
    method: GET
- name: update_order_reference_id
  endpoint:
    path: /orders/{order_id}/reference-id
    method: PUT
- name: simplified_refund
  endpoint:
    path: /payments/simplified-refund/{order_id}
    method: POST
- name: webhook
  endpoint:
    path: /reference/registerwebhookurl
    method: POST
    data_selector: notification
    params: {}
- name: order_details
  endpoint:
    path: /reference/getorderdetails
    method: GET
    data_selector: order
    params: {}
- name: register_webhook
  endpoint:
    path: /webhooks
    method: POST
- name: retrieve_webhook_url
  endpoint:
    path: /webhooks/{webhookId}
    method: GET
- name: update_webhook
  endpoint:
    path: /webhooks/{webhookId}
    method: PUT
- name: delete_webhook
  endpoint:
    path: /webhooks/{webhookId}
    method: DELETE
- name: dispute_case
  endpoint:
    path: /external/merchants/orders/disputes/
    method: GET
- name: update_dispute
  endpoint:
    path: /external/merchants/orders/disputes/{dispute_id}
    method: POST
- name: orders
  endpoint:
    path: /v1/orders
    method: GET
    data_selector: data
    params: {}
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: data
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Make sure to use the correct base URL for sandbox/production environment
- Please keep your tokens securely guarded and don’t share them.
- 'Debugging Mode: Enabled ONLY when working on Sandbox mode.'
- This plugin can be used to add Tamara as a payment gateway for your Magento store.
- 'Enable Tamara payment: Enable / Disable payment method'
- 'Api Environment: Sandbox for Testing, Production for Live'
- Trigger to Tamara is mandatory for refunds
- Uses OAuth2 with refresh token — requires setup of connected app in Tamara
- The admin user must have the role for ‘Tamara config’.
- Customer's email address, country, and phone number are required for the checkout
  flow.
- API rate limits apply, consider pagination in requests
- API Bearer Authorization token received from Tamara to be used during sandbox testing
  phase before going live.
- Notification Authorization token received from Tamara to validate notification payload
  is being sent by Tamara.
- If enabled, this option allows you to automatically trigger Capture and Cancel order
  to Tamara when you perform the corresponding action in Opencart.
- If you already changed order status to shipped through Prestashop Admin Panel it
  means that a capture request is already sent to Tamara, check the order from Tamara
  Partners Portal or Partners Portal Sandbox site.
- API Token to be used in every single request to Tamara API.
- تمارا فعّالة الحين في متجرك وعملائك يقدرون يستفيدون منها
- Webhook API Version is '2025-04'
- Change the country and publicKey in the widget configuration.
- Ensure to handle rate limits appropriately.
- Because Shopify does not share the Shopify order number for the payment app integration
  and then Tamara can not match the Shopify order number or order number in the Tamara.
  The Webhooks allow us to update the order number to match it with your Shopify store.
- Currently, our Tamara Payment App cannot add tags to a Shopify order. But you can
  use the Shopify Flow app which can add order tags for Tamara's order.
- Currently, Shopify only supports 1 currency in your store and it's your default
  currency. Then with Tamara payment app, we also support 1 currency. For example,
  if your default currency is SAR, then only Saudi customers can use Tamara.
- You must configure the plugin to use it
- If you input the wrong token(s), the plugin will be automatically disabled and an
  error for incorrect credentials will be shown.
- Make sure you're using the Sandbox token only while in testing mode before going
  live.
- Also, make sure that you use the Live token once you are given the go-ahead from
  the Tamara integration team.
- Tamara orders can only be cancelled before they are Completed(shipped to customer).
- An order can NOT be canceled if its payment has been captured at Tamara.
- An order can not be canceled if its payment has been captured from Tamara. In this
  case, please use the WooCommerce 'Refund' function instead.
- Some objects may return nulls in deeply nested fields
- تفعيل تمارا يتطلب نسخ رموز التفعيل(Merchant Key)
- فريق دعم الشركاء حاضرين لخدمتك.
- تأكد من إدخال البيانات بدقة لضمان نجاح الربط.
- بيانات الربط تحصل عليها من حساب التاجر الخاص بك في تمارا عبر لوحة التحكم الخاصة
  بتمارا
- Incomplete orders such as (declined/expired) won't be listed on Tamara's partner
  portal.
- Webhook notifications for approved status changes are sent to registered URLs.
- Refund transactions are processed in realtime on Tamara's end but refunds might
  take several hours to several days to reflect on the customer's bank account depending
  on the customer's bank's processing time.
- Webhook URL must use HTTPS and has a max limit of 255 chars.
- You must choose the Approved event at least to proceed.
- Webhook URL must use HTTPS and has a max limit of 255 characters
- Notification Token is a JWT token using HS256 algorithm
- Please implement and test this flow carefully on our sandbox environment before
  going live.
- Enabling camera permissions is essential for the ID verification process.
- Tamara Partners App DOES NOT support sandbox accounts!
- Checkout session expires in 15 mins by default.
- Order ID is always unique.
- You may have multiple refund_id if you perform multiple partial refunds for the
  same order_id, please try to store them all in your DBs.
- Each store has its own public key; that public key pulls what options are available
  to your store as per the configuration at Tamara’s end, and automatically renders
  the appropriate widget content with the available options.
- You will have 2 different public keys; 1 for the Sandbox Testing environment and
  1 for the Production environment.
- Clear indication that Tamara is available as a payment option.
- 'Tamara’s messaging pillars: customer value and competitive advantage.'
- The PDP widget should be positioned directly below the product price.
- The Cart Widget should be placed below the cart total or near the 'Proceed to Checkout'
  button.
- The Checkout Widget should be placed within the payment method selection options.
- Accurate representation of Tamara’s plan structures.
- The popup is to be dynamic—i.e., the payment plans displayed in the popup.
- Recommended integrating Tamara iOS SDK using Swift Package Manager for the best
  experience and easier updates.
- Please note that the version should be changed to our latest version.
- Need to call authorise order method before calling capture a payment
- Need to call authorise order method before call Refunds
- Please use random phone numbers that are not considered 'special numbers'.
- Failure cases include card declined, multiple accounts linked to card, and prepaid
  card examples.
- Testing Cards support a wide range of card types such as VISA, MasterCard, MADA
  and AMEX.
- Make sure you're logged in first to the Partners Portal
- Merchants authenticate with Tamara's APIs by providing their API token in the request's
  Authorization header as a bearer token.
- Requires setup of connected app in Tamara
- Some processes may require multiple steps
- Enabled ONLY when working on Sandbox mode.
- Tamara payment module requires configuration of Merchant Token, Notification Token
  & Public Key.
- Trigger to Tamara must be enabled to sync orders.
- Dispute will move to Under Review status; Tamara team will review the dispute and
  respond accordingly.
- Debug option allows the module to write logs to file.
- Webhook enables automatic handling of order statuses.
- Invoices API is coming soon.
- Settlements are issued on Saturday and bank transfers occur on Tuesday.
- Trigger to Tamara is mandatory for refunds.
- If your theme removes the container `product.info.social`, you will not be able
  to see the widget on the product details page.
- Make sure you're logged in to the Partners Portal
- Orders created since this time will be scanned and updated
- You can add a new role to your Tamara portal if you're the Admin or have a custom
  role with permission to 'Add role'.
- Only users with Admin role have access to generate API tokens.
- API tokens cannot be viewed again once generated.
- Use during sandbox testing phase before going live.
- Trigger to Tamara is mandatory for payment capture.
- Refunds supported for Tamara paid orders.
- Incomplete orders such as declined/expired won't be listed on Tamara's partner portal.
- The product price is within the merchant limits
- API Bearer Authorization token received from Tamara so that you can perform live
  transactions.
- The payment method displayed on the widget will depend on which payment options
  are offered by Tamara.
- Fetch all the order details available on Tamara's side using the unique order_id
  that is issued by Tamara for every order whether online or in-store.
- Webhook settings must be enabled to receive notifications
- Tamara API token is required for every request
- Don't enable test mode as it is not supported.
- Public Key should be used for 1 store only, if you have multiple stores, please
  let us know.
- Requires setup of OAuth2 client credentials in the Tamara dashboard
- Currently, our Tamara Payment App cannot add tags to a Shopify order.
- Shopify only supports 1 currency in your store and it's your default currency.
- Tamara orders can only be cancelled before they are completed (shipped to customer).
- An order can not be canceled if its payment has been captured from Tamara. In this
  case, please use the WooCommerce “Refund” function instead.
- تفعيل تمارا يتطلب نسخ رموز التفعيل (Merchant Key)
- فريق دعم الشركاء حاضرين لخدمتك. ارسل لنا إيميل على merchant.support@tamara.co أو
  تواصل معنا عبر مركز المساعدة
- يمكنك الحصول على مفاتيح التفعيل من خلال لوحة التاجر في تمارا.
- Enter the webhook URL endpoint (the max limit for URL is 255 chars) that will receive
  the notifications.
- You must choose the Approved event at least to proceed with this guide.
- Tamara provides a Notification Token to merchants to authenticate the notifications
  received from Tamara.
- Enabling camera permissions isn’t just a technical checkbox—it’s about delivering
  a reliable, efficient, and secure experience to your customers.
- Use Sandbox public key for Sandbox Testing widgets and Production public key for
  Production widgets.
- Ensure to include the Tamara logo in the widget to reinforce brand recognition.
- The widget should dynamically calculate payment amounts based on the product price.
- The PDP widget should be positioned directly below the product price for maximum
  visibility.
- Dynamic item or cart total calculation.
- PDP widget should be placed directly below the product price.
- Cart widget should be placed near the cart total to reduce cart abandonment.
- Ensure to handle token refresh appropriately.
- We recommend integrating Tamara iOS SDK using Swift Package Manager for the best
  experience and easier updates.
- Some endpoints may return nulls in deeply nested fields
- Failure cases include card declined, multiple accounts linked to card, and prepaid
  card.
- Decline (Not working as intended, please ignore)
- Ensure that all API calls are authenticated using OAuth2.
- Tamara requires specific configurations for different e-commerce platforms.
- The password reset link will be valid for 72 hours only.
- Once Tamara verifies the customer's payment and approves the order, it's considered
  as paid.
- Settlement reports will be issued every Sunday and your settlements will be processed
  directly to your bank account every working Tuesday.
- Ensure proper user roles are assigned to control access.
- Ensure you choose the desired account access & branches for which you're granting
  user permission. Without this selection, the user won't see the orders from those
  account/branches.
- The user's status will be 'Pending Activation', and they cannot log in until their
  account is activated.
- Ensure API access is enabled for your account
- Rate limits may apply depending on your plan
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check the request parameters and body'
- '401 Unauthorized: Token may have expired or scopes may be incorrect'
- '404 Not Found: Endpoint or resource does not exist'
- '401 Unauthorized: Will be provided by our partner team after completing the sandbox
  testing'
- 'total_amount_invalid_limit: The total amount has reached the min/max limit'
- 'consumer_empty_first_name: First name of the customer is missing'
- 'consumer_invalid_phone_number: Phone number of the customer is invalid'
- 'consumer_invalid_email: Email ID of the customer is invalid'
- 'consumer_empty_email: Email ID of the customer is empty'
- 'total_amount_invalid_currency: Most likely, the customer is buying from a non-supported
  country with a non-supported currency and Tamara does not support cross-currencies.'
- 'not_supported_delivery_country: Delivery country is not supported'
- '401 Unauthorized: Check your API key or token.'
- '404 Not Found: Resource not found.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Ensure valid authentication credentials.'
- '404 Not Found: Verify the endpoint and resource.'
- '400 Bad Request: Check the request parameters for correctness.'
- '401 Unauthorized: Verify the authentication credentials.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Verify the endpoint path'
- '429 Too Many Requests: Rate limit exceeded'
- 'Unauthorized: Recheck your tamaraToken or permissions'
- '400 Bad Request: Check your request parameters for correctness.'
- '401 Unauthorized: Ensure your OAuth token is valid.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check your authentication credentials.'
- '403 Forbidden: You do not have permission to access this resource.'
- '401 Unauthorized: Check your OAuth token and permissions.'
- '400 Bad Request: Ensure all required fields are provided and formatted correctly.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your authentication credentials'
- '429 Too Many Requests: Reduce the frequency of API calls'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.tamara.co
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
