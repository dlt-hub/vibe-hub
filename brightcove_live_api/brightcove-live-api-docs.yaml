resources:
- name: jobs
  endpoint:
    path: /v2/jobs
    method: GET
- name: configure_job
  endpoint:
    path: /v2/jobs
    method: POST
- name: finish_job
  endpoint:
    path: /v2/jobs/{id}/finish
    method: POST
- name: get_job
  endpoint:
    path: /v2/jobs/{id}
    method: GET
- name: update_job
  endpoint:
    path: /v2/jobs/{id}
    method: PUT
- name: clip_job
  endpoint:
    path: /v2/jobs/{id}/clip
    method: POST
- name: force_failover
  endpoint:
    path: /v2/jobs/{id}/failover
    method: POST
- name: start_job
  endpoint:
    path: /v2/jobs/{id}/start
    method: POST
- name: stop_job
  endpoint:
    path: /v2/jobs/{id}/stop
    method: POST
- name: get_thumbnail_images
  endpoint:
    path: /v2/jobs/{id}/thumbnail
    method: GET
- name: List notifications for a job
  endpoint:
    path: /v2/notifications/job
    method: GET
    params:
      last_key: string
- name: List notifications for an account
  endpoint:
    path: /v2/notifications/account
    method: GET
    params:
      last_key: string
- name: List all schedules of a job
  endpoint:
    path: /v2/schedules/job
    method: GET
    params:
      page_size: integer
      start_token: string
      state: string
      start: integer
      end: integer
- name: Get AutoStop Schedule
  endpoint:
    path: /v2/schedules/autostop
    method: GET
- name: Create JobStartStop Schedule
  endpoint:
    path: /v2/schedules/startstop
    method: POST
- name: Delete JobStartStop Schedule
  endpoint:
    path: /v2/schedules/startstop
    method: DELETE
- name: Get JobStartStop Schedule
  endpoint:
    path: /v2/schedules/startstop
    method: GET
- name: Update JobStartStop Schedule
  endpoint:
    path: /v2/schedules/startstop
    method: PUT
- name: Inserts Cuepoint into running stream
  endpoint:
    path: /v2/cuepoints
    method: POST
- name: Lists Ad Configs
  endpoint:
    path: /v2/adconfigs
    method: GET
- name: Creates an Ad Config
  endpoint:
    path: /v2/adconfigs
    method: POST
- name: healthcheck
  endpoint:
    path: v2/healthcheck
    method: GET
    data_selector: null
    params: {}
- name: get_ad_config
  endpoint:
    path: v2/ad_config
    method: GET
    data_selector: null
    params: {}
- name: get_job_metrics
  endpoint:
    path: v2/job_metrics
    method: GET
    data_selector: null
    params: {}
- name: get_all_supported_metrics
  endpoint:
    path: v2/supported_metrics
    method: GET
    data_selector: null
    params: {}
- name: create_playback_token
  endpoint:
    path: v2/playback_token
    method: POST
    data_selector: null
    params: {}
- name: generate_playback_url
  endpoint:
    path: v2/playback_url
    method: GET
    data_selector: null
    params: {}
- name: get_session
  endpoint:
    path: v2/session
    method: GET
    data_selector: null
    params: {}
- name: get_events_from_session
  endpoint:
    path: v2/session/events
    method: GET
    data_selector: null
    params: {}
- name: get_sessions_for_resource
  endpoint:
    path: v2/resource/sessions
    method: GET
    data_selector: null
    params: {}
- name: list_cdn_tokens
  endpoint:
    path: v2/cdn_tokens
    method: GET
    data_selector: null
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: video
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: channels
  endpoint:
    path: /channels
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: lead_form
  endpoint:
    path: /lead_forms
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: videos
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports-reference
    method: GET
    data_selector: reports
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: annotations
  endpoint:
    path: /annotations
    method: GET
    data_selector: records
- name: widgets
  endpoint:
    path: /widgets
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports
    method: GET
    data_selector: reports
    params: {}
- name: core_reports
  endpoint:
    path: /interactivity/analytics/core-reports
    method: GET
    data_selector: reports
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /v1/accounts/{account_id}/playlists
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: campaigns
  endpoint:
    path: /v1/accounts/{account_id}/campaigns
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /v1/playlists
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: videos
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: players
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: video
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
    params: {}
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports-reference
    method: GET
    data_selector: reports
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: interactivity_reports
  endpoint:
    path: /interactivity/reports
    method: GET
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: playlists
  endpoint:
    path: /v1/accounts/{account_id}/playlists
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /services/data/v1/campaign
    method: GET
    data_selector: records
    params: {}
- name: viewer
  endpoint:
    path: /services/data/v1/viewer
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
- name: playlist
  endpoint:
    path: /services/data/vXX.X/sobjects/Playlist
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
- name: playlist
  endpoint:
    path: /services/data/vXX.X/sobjects/Playlist
    method: GET
    data_selector: records
- name: interactivity_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
    params: {}
- name: videos
  endpoint:
    path: /account/videos
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: records
    params: {}
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: records
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: video
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: videos
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /reports/interactivity
    method: GET
    data_selector: records
    params: {}
- name: core_reports
  endpoint:
    path: /reports/core
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: records
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /videos
    method: GET
- name: playlists
  endpoint:
    path: /playlists
    method: GET
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /v1/accounts/{account_id}/playlists
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: player
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: viewer_id
  endpoint:
    path: /viewer-id
    method: GET
    data_selector: records
    params: {}
- name: lead_forms
  endpoint:
    path: /lead-forms
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /campaign/v1
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/reports
    method: GET
    data_selector: reports
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: video_properties
  endpoint:
    path: /cms/v1/videos
    method: GET
    data_selector: videos
- name: video_download
  endpoint:
    path: /social/v1/videos/download
    method: GET
    data_selector: video_url
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /v1/accounts/{account_id}/playlists
    method: GET
    data_selector: items
- name: remote_asset_video
  endpoint:
    path: /cms/api/remote-assets
    method: POST
    data_selector: video
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: ingest_profiles
  endpoint:
    path: /v1/accounts/{account_id}/ingest_profiles
    method: GET
    data_selector: data
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: items
- name: playlist
  endpoint:
    path: /v1/playlists
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/reports
    method: GET
    data_selector: reports
    params: {}
- name: video_properties
  endpoint:
    path: /media/properties
    method: GET
    data_selector: video_properties
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: annotations
  endpoint:
    path: /annotations
    method: GET
    data_selector: records
- name: widgets
  endpoint:
    path: /widgets
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports-reference
    method: GET
    data_selector: records
- name: campaigns
  endpoint:
    path: /campaign/get-started/getting-started-campaign-module
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /playback/videos/{video_id}
    method: GET
    data_selector: video_preview
- name: playlist
  endpoint:
    path: /playback/playlists/{playlist_id}
    method: GET
    data_selector: video_preview
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
    params: {}
- name: interactivity_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{{account_id}}/videos
    method: GET
    data_selector: videos
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: playlists
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: videos
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: reports
- name: interactivity_reports
  endpoint:
    path: /reports/interactivity
    method: GET
    data_selector: data
    params: {}
- name: core_reports
  endpoint:
    path: /reports/core
    method: GET
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: playlists
  endpoint:
    path: /v1/accounts/{account_id}/playlists
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: custom_dictionary
  endpoint:
    path: /v1/accounts/{account_id}/autocaption-dictionary
    method: GET
    data_selector: dictionary
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: videos
    params: {}
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: playlists
    params: {}
- name: WebVTT Styling
  endpoint:
    path: /styling/captions
    method: GET
    data_selector: captions
    params: {}
- name: CSS Style Guide
  endpoint:
    path: /styling/css-guide
    method: GET
    data_selector: css_properties
    params: {}
- name: User Caption Settings
  endpoint:
    path: /user/caption-settings
    method: GET
    data_selector: user_settings
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports-reference.html
    method: GET
    data_selector: reports
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: interactivity_reports
  endpoint:
    path: /analytics/interactivity-reports-reference
    method: GET
    data_selector: reports
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: video_metadata
  endpoint:
    path: /videos/required_metadata
    method: GET
    data_selector: required_fields
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /v1/accounts/{account_id}/playlists
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: items
- name: player
  endpoint:
    path: /v1/players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
    params: {}
- name: player
  endpoint:
    path: /players
    method: GET
    data_selector: players
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{{account_id}}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{{account_id}}/players
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports
    method: GET
    data_selector: reports
- name: core_reports
  endpoint:
    path: /interactivity/analytics/core-reports
    method: GET
    data_selector: reports
- name: Sample Player
  endpoint:
    path: /players
    method: POST
    data_selector: player
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: player
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: annotations
  endpoint:
    path: /annotations
    method: GET
    data_selector: records
- name: widgets
  endpoint:
    path: /widgets
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaign/v1
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: player
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: items
    params: {}
- name: video
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: playlist
  endpoint:
    path: /v1/accounts/{account_id}/playlists
    method: GET
    data_selector: items
    params: {}
- name: player_update_mode
  endpoint:
    path: /players/update_mode
    method: POST
    data_selector: update_mode
    params: {}
- name: player_version
  endpoint:
    path: /players/version
    method: POST
    data_selector: player_version
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
    params: {}
- name: overlay
  endpoint:
    path: //players.brightcove.net/videojs-overlay/3/videojs-overlay.min.js
    method: GET
    data_selector: overlays
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: playlist-endscreen
  endpoint:
    path: /plugins/playlist-endscreen
    method: POST
    data_selector: options
    params:
      playlistId: '1234567001'
      title: Related Videos
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /reports/interactivity
    method: GET
    data_selector: records
    params: {}
- name: core_reports
  endpoint:
    path: /reports/core
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: player_localization
  endpoint:
    path: /players/localization
    method: POST
    data_selector: localization
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: viewer
  endpoint:
    path: /viewers
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: records
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: records
- name: options
  endpoint:
    path: /options/json
    method: POST
    data_selector: options
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Google Analytics
  endpoint:
    path: /Analytics
    method: POST
    data_selector: events
    params:
      tracker: GA-123456-1
      eventsToTrack:
        ad_end: Ad Ended
        ad_start: Ad Started
        error: Player Errors
        play_request: Play Request
        player_load: Player Load
        video_engagement: Video Engagement
        video_impression: Video Impression
        video_view: Video View
      paramsToTrackGA4:
      - account
      - platform_version
      - player
      - range
      - seconds_viewed
      - session
      - tags
      - video_duration
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /v1/campaigns
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: reports
- name: annotations
  endpoint:
    path: /annotations
    method: GET
    data_selector: records
- name: widgets
  endpoint:
    path: /widgets
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /campaign_member
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /contact
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: video
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: videos
    params:
      incremental: updated_at
- name: interactivity_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
    params: {}
- name: core_reports
  endpoint:
    path: /core-reports
    method: GET
    data_selector: reports
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: annotations
  endpoint:
    path: /annotations
    method: GET
    data_selector: records
- name: experiences
  endpoint:
    path: /experiences
    method: GET
    data_selector: records
- name: iframe_embed_code
  endpoint:
    path: /iframe/embed
    method: GET
    data_selector: iframe_code
- name: in_page_embed_code
  endpoint:
    path: /in_page/embed
    method: GET
    data_selector: in_page_code
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /services/data/vXX.X/videos
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: interactivity_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: data
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: iFrame Embed
  endpoint:
    path: /iframe/embed
    method: POST
- name: JavaScript Embed
  endpoint:
    path: /javascript/embed
    method: POST
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: data
    params: {}
- name: analytics
  endpoint:
    path: /v1/accounts/{account_id}/analytics
    method: GET
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /accounts/{account_id}/playlists
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports-reference.html
    method: GET
    data_selector: records
- name: campaign
  endpoint:
    path: /campaign/get-started/index.html
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: performance_report
  endpoint:
    path: /analytics/reports/performance-report-reference.html
    method: GET
- name: engagement_report
  endpoint:
    path: /analytics/reports/engagement-report-reference.html
    method: GET
- name: trending_now
  endpoint:
    path: /analytics/reports/analytics-report-reference.html#trending
    method: GET
- name: custom_report
  endpoint:
    path: /analytics/reports/creating-custom-analytics-reports.html
    method: GET
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: data
- name: player
  endpoint:
    path: /players
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /v1/campaigns
    method: GET
    data_selector: records
- name: viewer
  endpoint:
    path: /v1/viewers
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
    params: {}
- name: viewer
  endpoint:
    path: /viewer
    method: GET
    data_selector: records
    params: {}
- name: Quality Score
  endpoint:
    path: /qoe/quality_score
    method: GET
    data_selector: qualityScore
    params: {}
- name: Error Rate
  endpoint:
    path: /qoe/error_rate
    method: GET
    data_selector: errorRate
    params: {}
- name: Stall Rate
  endpoint:
    path: /qoe/stall_rate
    method: GET
    data_selector: stallRate
    params: {}
- name: Upscale Time
  endpoint:
    path: /qoe/upscale_time
    method: GET
    data_selector: upscaleTime
    params: {}
- name: Abandonment Rate
  endpoint:
    path: /qoe/abandonment_rate
    method: GET
    data_selector: abandonmentRate
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: analytics_report
  endpoint:
    path: /analytics/reports
    method: GET
    data_selector: reports
    params: {}
- name: custom_analytics_report
  endpoint:
    path: /analytics/custom-reports
    method: GET
    data_selector: customReports
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: reports
- name: interactivity
  endpoint:
    path: /interactivity/annotations
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaigns
  endpoint:
    path: /v1/accounts/{account_id}/campaigns
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: videos
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: data
    params: {}
- name: interactivity_reports
  endpoint:
    path: /interactivity/reports
    method: GET
    data_selector: reports
    params: {}
- name: annotations
  endpoint:
    path: /interactivity/annotations
    method: GET
    data_selector: annotations
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: Performance Report
  endpoint:
    path: /analytics/performance
    method: GET
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: interactivity_reports
  endpoint:
    path: /interactivity/reports
    method: GET
    data_selector: reports
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
    params: {}
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/reports
    method: GET
    data_selector: reports
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: viewers
  endpoint:
    path: /viewers
    method: GET
    data_selector: records
- name: engagement_status
  endpoint:
    path: /engagement/status
    method: GET
    data_selector: metrics
    params: {}
- name: key_metrics
  endpoint:
    path: /key/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: items
    params: {}
- name: engagement_sessions
  endpoint:
    path: /engagement/sessions
    method: GET
    data_selector: sessions_data
- name: milestones
  endpoint:
    path: /milestones
    method: GET
    data_selector: milestones_data
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /v1/accounts/{account_id}/playlists
    method: GET
    data_selector: items
- name: video
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: playlist
  endpoint:
    path: /v1/accounts/{account_id}/playlists
    method: GET
    data_selector: items
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: videos
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params:
      incremental: last_modified
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: analytics
  endpoint:
    path: /analytics/v1/data
    method: GET
    data_selector: results
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /reports/interactivity
    method: GET
    data_selector: reports
    params: {}
- name: core_reports
  endpoint:
    path: /reports/core
    method: GET
    data_selector: reports
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /contact
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: youtube_destination
  endpoint:
    path: /youtube/destinations
    method: POST
- name: facebook_destination
  endpoint:
    path: /facebook/destinations
    method: POST
- name: x_destination
  endpoint:
    path: /x/destinations
    method: POST
- name: linkedin_destination
  endpoint:
    path: /linkedin/destinations
    method: POST
- name: instagram_destination
  endpoint:
    path: /instagram/destinations
    method: POST
- name: videos
  endpoint:
    path: /accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: viewer
  endpoint:
    path: /viewers
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign/v1/campaigns
    method: GET
    data_selector: records
- name: viewer
  endpoint:
    path: /viewer/v1/viewers
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /social/videos
    method: GET
    data_selector: videos
- name: publishing_destinations
  endpoint:
    path: /social/publishing_destinations
    method: GET
    data_selector: destinations
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: data
    params: {}
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports
    method: GET
    data_selector: reports
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: data
- name: analytics
  endpoint:
    path: /analytics/v1
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/reports
    method: GET
    data_selector: reports
    params: {}
- name: meta_tags
  endpoint:
    path: /meta/tags
    method: GET
    data_selector: tags
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params: {}
- name: interactivity_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
    params: {}
- name: social_engagement
  endpoint:
    path: /social/analytics/social_engagement
    method: GET
    data_selector: reports
    params: {}
- name: social_engagement_by_video
  endpoint:
    path: /social/analytics/social_engagement_by_video
    method: GET
    data_selector: video_reports
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: Social Views
  endpoint:
    path: /social/analytics/views
    method: GET
    data_selector: views
    params: {}
- name: Social Engagement
  endpoint:
    path: /social/analytics/engagement
    method: GET
    data_selector: engagement
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: reports
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params: {}
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
    params: {}
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports-reference.html
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
    params: {}
- name: interactivity_reports
  endpoint:
    path: /analytics/interactivity-reports
    method: GET
    data_selector: reports
    params: {}
- name: core_reports
  endpoint:
    path: /analytics/core-reports
    method: GET
    data_selector: reports
    params: {}
- name: ingest_profiles
  endpoint:
    path: /admin/ingest-profiles
    method: GET
    data_selector: profiles
- name: media_settings
  endpoint:
    path: /admin/media-settings
    method: GET
    data_selector: settings
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
- name: viewer
  endpoint:
    path: /viewer
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: data
    params: {}
- name: ingest_profiles
  endpoint:
    path: /admin/ingest-profiles/index.html
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /reports/interactivity
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /v1/accounts/{account_id}/campaigns
    method: GET
    data_selector: campaigns
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: videos
- name: videos
  endpoint:
    path: /v1/accounts/{{account_id}}/videos
    method: GET
    data_selector: items
    params: {}
- name: playlists
  endpoint:
    path: /v1/accounts/{{account_id}}/playlists
    method: GET
    data_selector: items
    params: {}
- name: interactivity_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: records
- name: core_reports
  endpoint:
    path: /core-reports
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: live_event
  endpoint:
    path: /admin/general/configuring-server-side-ad-settings.html
    method: GET
    data_selector: settings
    params: {}
- name: fill_slate
  endpoint:
    path: /admin/general/managing-live-settings.html
    method: GET
    data_selector: fill_slates
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: data
    params: {}
- name: interactivity_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
    params: {}
- name: interactivity_reports
  endpoint:
    path: /reports/interactivity
    method: GET
    data_selector: data
    params: {}
- name: core_reports
  endpoint:
    path: /reports/core
    method: GET
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /v1/campaigns
    method: GET
    data_selector: data
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /analytics/interactivity/reports
    method: GET
    data_selector: reports
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /v1/accounts/{account_id}/playlists
    method: GET
    data_selector: items
- name: interactivity_report
  endpoint:
    path: /interactivity/reports
    method: GET
    data_selector: reports
    params: {}
- name: core_report
  endpoint:
    path: /core/reports
    method: GET
    data_selector: reports
    params: {}
- name: Zoom Account Integration
  endpoint:
    path: /admin/integrations
    method: POST
    data_selector: integration_status
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: event
  endpoint:
    path: /events
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /accounts/{account_id}/players
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: audience_api
  endpoint:
    path: /audience/v1
    method: GET
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Redundant Channels
  endpoint:
    path: /live/redundant_channels
    method: POST
    data_selector: channels
    params: {}
- name: Low-Latency Event
  endpoint:
    path: /live/low_latency_event
    method: POST
    data_selector: events
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
- name: interactivity
  endpoint:
    path: /interactivity
    method: GET
    data_selector: records
- name: RTMP Outputs
  endpoint:
    path: /v2/accounts/{account_id}/jobs
    method: POST
    data_selector: outputs.rtmp
- name: Add RTMP Outputs
  endpoint:
    path: /v2/accounts/{account_id}/jobs/{job_id}
    method: PUT
    data_selector: outputs.rtmp
- name: Get Job Definition
  endpoint:
    path: /v2/accounts/{account_id}/jobs/{job_id}
    method: GET
    data_selector: outputs
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: viewer
  endpoint:
    path: /viewers
    method: GET
    data_selector: records
- name: custom_ingest_profile
  endpoint:
    path: /create_custom_ingest_profile
    method: POST
    data_selector: profile
    params:
      segment_duration_seconds: 2
      profile_type: live
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: analytics
  endpoint:
    path: /interactivity/analytics/index.html
    method: GET
    data_selector: reports
- name: Live SD 4:3 576
  endpoint:
    path: /LiveSD4:3/576
    method: GET
    data_selector: renditions
- name: Live SD 576
  endpoint:
    path: /LiveSD576
    method: GET
    data_selector: renditions
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
    params: {}
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports-reference
    method: GET
    data_selector: reports
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
    params: {}
- name: interactivity_reports
  endpoint:
    path: /reports/interactivity
    method: GET
    data_selector: records
- name: core_reports
  endpoint:
    path: /reports/core
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: records
- name: core_reports
  endpoint:
    path: /core-reports
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
    params: {}
- name: streaming_session
  endpoint:
    path: /streaming/session
    method: POST
    data_selector: sessionDetails
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
    params: {}
- name: live_event
  endpoint:
    path: /live/event
    method: POST
    data_selector: event_details
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaigns
  endpoint:
    path: /v1/accounts/{account_id}/campaigns
    method: GET
    data_selector: items
    params: {}
- name: streaming_settings
  endpoint:
    path: /settings/live_streaming
    method: GET
    data_selector: streaming_info
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports-reference.html
    method: GET
    data_selector: reports
    params: {}
- name: campaign
  endpoint:
    path: /v1/campaigns
    method: GET
    data_selector: records
    params: {}
- name: viewer
  endpoint:
    path: /v1/viewers
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: viewer
  endpoint:
    path: /viewers
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: videos
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: data
    params: {}
- name: viewer
  endpoint:
    path: /viewers
    method: GET
    data_selector: data
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
    params: {}
- name: interactivity_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: records
- name: Chapter Menu
  endpoint:
    path: /interactivity/chapter-menu
    method: POST
    data_selector: chapterMenu
- name: Chapters
  endpoint:
    path: /interactivity/chapters
    method: POST
    data_selector: chapters
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports-reference
    method: GET
    data_selector: reports
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: interactivity_reports
  endpoint:
    path: /interactivity/reports
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: player
  endpoint:
    path: /players
    method: GET
    data_selector: items
    params: {}
- name: annotations
  endpoint:
    path: /annotations
    method: GET
    data_selector: annotations
    params: {}
- name: widgets
  endpoint:
    path: /widgets
    method: GET
    data_selector: widgets
    params: {}
- name: annotations
  endpoint:
    path: /interactivity/annotations/options
    method: GET
    data_selector: options
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/reports
    method: GET
    data_selector: reports
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports-reference
    method: GET
    data_selector: reports
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: video
  endpoint:
    path: /services/data/vXX.X/sobjects/Video
    method: GET
    data_selector: records
    params: {}
- name: playlist
  endpoint:
    path: /services/data/vXX.X/sobjects/Playlist
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
    params: {}
- name: video
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: viewer_id
  endpoint:
    path: /viewer_id
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: projects
  endpoint:
    path: /interactivity/projects
    method: GET
    data_selector: projects
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
    params: {}
- name: viewer_id
  endpoint:
    path: /viewer-id
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /v1/campaigns
    method: GET
    data_selector: records
- name: viewer
  endpoint:
    path: /v1/viewers
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
    params: {}
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports
    method: GET
    data_selector: reports
    params: {}
- name: campaigns
  endpoint:
    path: /campaign/integrations
    method: GET
    data_selector: campaigns
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports-reference.html
    method: GET
    data_selector: records
- name: ingest_profiles
  endpoint:
    path: /ingest-profiles
    method: GET
    data_selector: profiles
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
    params: {}
- name: lead_form
  endpoint:
    path: /lead_forms
    method: GET
    data_selector: records
- name: viewer_id
  endpoint:
    path: /viewer_id
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: interactivity_report
  endpoint:
    path: /analytics/interactivity_reports
    method: GET
    data_selector: reports
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign/v1/campaigns
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: engagement_report
  endpoint:
    path: /reports/engagement
    method: GET
    data_selector: records
    params:
      incremental: last_updated
- name: interactivity_reports
  endpoint:
    path: /reports/interactivity
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /reports/interactivity
    method: GET
    data_selector: data
    params: {}
- name: core_reports
  endpoint:
    path: /reports/core
    method: GET
    data_selector: data
    params: {}
- name: video_tracking_events
  endpoint:
    path: /events
    method: GET
    data_selector: events
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: annotations
  endpoint:
    path: /interactivity/annotations
    method: GET
    data_selector: records
- name: widgets
  endpoint:
    path: /interactivity/widgets
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/reports
    method: GET
    data_selector: reports
    params: {}
- name: interactive_video_tracking
  endpoint:
    path: /interactivity/analytics/tracking
    method: GET
    data_selector: tracking_events
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
- name: interactivity_projects
  endpoint:
    path: /interactivity/projects
    method: GET
- name: interactivity_experiences
  endpoint:
    path: /interactivity/experiences
    method: GET
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign/v1/campaigns
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
- name: lead_form
  endpoint:
    path: /lead_form
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: interactivity_report
  endpoint:
    path: /reports/interactivity
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: video
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: AI metadata enhancement job
  endpoint:
    path: /v1/accounts/{account_id}/videos/{video_id}/ai/metadata-enhancement/{language}
    method: POST
- name: AI metadata enhancement jobs list
  endpoint:
    path: /v1/accounts/{account_id}/ai/metadata-enhancement/jobs
    method: GET
- name: AI metadata enhancement tag rules
  endpoint:
    path: /v1/accounts/{account_id}/ai/metadata-enhancement/tags
    method: GET
- name: Request AI metadata enhancement at ingestion
  endpoint:
    path: /v1/accounts/{account_id}/videos/{video_id}/ingest-requests
    method: POST
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: videos
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: playlists
- name: ingestion-configurations
  endpoint:
    path: /v1/accounts/{account_id}/ingestion-configurations
    method: GET
- name: translation-job
  endpoint:
    path: /v1/accounts/{account_id}/videos/{video_id}/ai/translation
    method: POST
- name: translation-jobs
  endpoint:
    path: /v1/accounts/{account_id}/videos/{video_id}/ai/translation/jobs
    method: GET
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: analytics
  endpoint:
    path: /v1/accounts/{account_id}/analytics
    method: GET
    data_selector: data
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: viewer_data
  endpoint:
    path: /viewers
    method: GET
    data_selector: records
- name: video
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: playlist
  endpoint:
    path: /v1/accounts/{account_id}/playlists
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports-reference.html
    method: GET
    data_selector: reports
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: items
    params: {}
- name: channel
  endpoint:
    path: /v1/channels
    method: GET
    data_selector: items
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: items
- name: playlist
  endpoint:
    path: /v1/playlists
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports-reference.html
    method: GET
    data_selector: reports
    params: {}
- name: campaigns
  endpoint:
    path: /campaign/get-started/index.html
    method: GET
    data_selector: campaigns
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
- name: viewer
  endpoint:
    path: /viewer
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: reports
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: viewer
  endpoint:
    path: /viewers
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: playlists
  endpoint:
    path: /v1/accounts/{account_id}/playlists
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /campaigns/members
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: campaign
  endpoint:
    path: /campaign
    method: GET
    data_selector: records
- name: viewer
  endpoint:
    path: /viewer
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: player
  endpoint:
    path: /players
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: data
    params: {}
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: data
    params: {}
- name: video
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: playlist
  endpoint:
    path: /v1/playlists
    method: GET
    data_selector: items
    params: {}
- name: video_performance
  endpoint:
    path: /services/data/vXX.X/sobjects/VideoPerformance
    method: GET
    data_selector: records
- name: leads_performance
  endpoint:
    path: /services/data/vXX.X/sobjects/LeadsPerformance
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/accounts/{account_id}/players
    method: GET
    data_selector: items
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: data
- name: playlist
  endpoint:
    path: /playlists
    method: GET
    data_selector: data
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: data
    params: {}
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: data
    params: {}
- name: interactivity_reports
  endpoint:
    path: /reports/interactivity
    method: GET
    data_selector: reports
    params: {}
- name: videos
  endpoint:
    path: /v1/videos
    method: GET
    data_selector: items
- name: players
  endpoint:
    path: /v1/players
    method: GET
    data_selector: items
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports
    method: GET
    data_selector: reports
- name: core_reports
  endpoint:
    path: /interactivity/analytics/core-reports
    method: GET
    data_selector: reports
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: players
  endpoint:
    path: /players
    method: GET
    data_selector: items
    params: {}
- name: video
  endpoint:
    path: /videos
    method: GET
    data_selector: items
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: GET
    data_selector: items
    params: {}
- name: analytics
  endpoint:
    path: /analytics
    method: GET
    data_selector: reports
    params: {}
- name: interactivity_reports
  endpoint:
    path: /interactivity/reports
    method: GET
    data_selector: records
- name: videos
  endpoint:
    path: /v1/accounts/{account_id}/videos
    method: GET
    data_selector: items
- name: analytics
  endpoint:
    path: /v1/accounts/{account_id}/analytics
    method: GET
    data_selector: analytics_data
- name: interactivity_reports
  endpoint:
    path: /interactivity/analytics/interactivity-reports-reference.html
    method: GET
    data_selector: records
    params: {}
- name: interactivity_reports
  endpoint:
    path: /reports
    method: GET
    data_selector: data
    params: {}
- name: core_reports
  endpoint:
    path: /core_reports
    method: GET
    data_selector: data
    params: {}
- name: view_events
  endpoint:
    path: /audience/view_events
    method: GET
    data_selector: events
- name: interaction_events
  endpoint:
    path: /audience/interaction_events
    method: GET
    data_selector: events
notes:
- Requires setup of OAuth2 for API access
- Requires OAuth2 authentication.
- Some endpoints may have rate limits.
- Ensure proper scopes are requested for the OAuth token.
- Some objects may return nulls in deeply nested fields
- Ensure to configure API token correctly
- Rate limits apply to API calls
- Requires setup of connected app in Brightcove
- Make sure to handle rate limits and pagination
- Uses OAuth2 with refresh token — requires setup of connected app in Brightcove
- Requires setup of OAuth2 credentials in Brightcove account
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some API endpoints may have specific rate limits
- Refer to Brightcove API documentation for additional endpoint details.
- Uses OAuth2 with refresh token.
- Some objects like Contact may return nulls in deeply nested fields
- Ensure proper authentication setup for API access.
- Some endpoints may have specific rate limits
- Requires setup of connected app in api
- Ensure to have the correct account_id in the endpoint path.
- Requires setup of connected app in Brightcove platform
- Ensure correct API scopes are configured for the application
- Some endpoints may require specific permissions set in the account.
- Uses OAuth2 with refresh token
- Ensure to set up a connected app in Brightcove for OAuth2 authentication.
- Some endpoints may require specific account permissions.
- Some responses may have nested structures
- Some resources may return nulls in deeply nested fields
- Requires setup of OAuth2 credentials for API access.
- Ensure to configure OAuth settings in your Brightcove account.
- Requires setup of connected app in Brightcove.
- Some endpoints may require additional parameters.
- Uses OAuth2 with refresh token — requires setup of connected app in Brightcove.
- Requires proper OAuth setup in Brightcove.
- API responses may vary based on user permissions
- Some API endpoints may have rate limits
- Requires setup of connected app in API
- Ensure OAuth2 is set up correctly for API access
- Some endpoints may have rate limits
- Requires OAuth2 authentication with a connected app.
- Requires setup of client ID and secret in the Brightcove console
- Ensure to set up connected apps for OAuth2 authentication.
- Ensure proper video permissions are set in the account.
- Some endpoints may return nulls in deeply nested fields
- Some responses may contain null values
- API requires setup of connected app in Brightcove
- Some reports may have limitations on data granularity
- Requires setup of a connected app in Brightcove
- Rate limits may apply based on account type
- While uploads are in a processing state, do not close or move away from the browser
  window.
- Ensure to handle null values in response data
- Requires OAuth2 authentication setup in Brightcove
- API calls may be subject to rate limiting
- API may have rate limits.
- Ensure that the correct scopes are set for the OAuth token.
- API requires setup of OAuth2 connected app.
- API requires setup of connected app in api
- Some data fields may return null.
- Data may have rate limits depending on usage
- Some fields may return nulls in deeply nested structures
- There is no file size limit. Brightcove has tested with uploads as large as 100GB
  without any issues.
- When uploading large files, Brightcove recommends setting the Upload Queueing setting
  to Upload one file at a time.
- If you receive Studio timeout errors when uploading large files, try uploading the
  file to S3 or some other remote storage location and use the URL upload option in
  the Studio.
- API may return nulls in deeply nested fields
- Some responses may have nested fields
- Some objects like Video may return nulls in deeply nested fields
- Requires setup of OAuth application in Brightcove
- When you edit an existing video, the system will create a new asset in your media
  library after you publish it and leave the original one untouched.
- If the 'Process & add to library' button is grayed out, the videos you are using
  in your scenes are being processed.
- Videos cannot be downloaded using Studio, but can be done using the Social Syndication
  API
- If an MP4 rendition is not available for download, you can retranscode the video
- You can not use a YouTube URL because a direct links to video files aren't generated.
- Uploads will not work if a size warning for Google Drive is displayed (typically
  for files > 100MB). Even after modifying the URL, it will redirect to a size error
  page and the upload will fail.
- The ability to get a direct link to a file is a Box premium feature, unavailable
  on free personal accounts.
- OneDrive URLs are not supported.
- Google Cloud Storage is not supported.
- Remote asset videos will not have poster or thumbnail images, however, images can
  be uploaded.
- Remote asset videos created in Basic accounts cannot be edited after they are created.
- Viewers may not be able play remote asset videos if their computer's clock time
  is set ahead of the actual time.
- Requires connected app setup in Brightcove
- Check API limits and rate limits
- OAuth2 authentication is required for API access.
- Brightcove recommends exporting less than 15K videos at a time.
- URLs for renditions and images are not fixed.
- Double-byte characters such as Korean and Japanese will not display properly if
  opened in Excel.
- Ensure to set up your application in Brightcove for OAuth2.
- Rate limits may apply based on your account level.
- Videos that are deactivated cannot be played in a Brightcove Player.
- Only shared videos can be added to folders and playlists. Private videos do not
  support these options.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- If a video is ingested using a custom ingest profile that does not include any HLS
  renditions (only MP4 renditions), the poster and thumbnail will not be captured
  during the transcoding process.
- Image capture is not supported for videos that have been secured using DRM.
- Image capture is not supported for restricted trial accounts; you can contact Brightcove
  to remove this restriction.
- Ensure OAuth2 credentials are set up correctly.
- Some API responses may vary based on user permissions
- video_preview is always returned as an array of HLS manifests.
- Some video objects may have missing metadata fields
- Ensure that the OAuth2 connected app is set up correctly.
- Requires OAuth2 setup for API access.
- Integration requires proper account setup and API key management.
- A maximum of 1000 videos can be added to a playlist.
- Only the first 20 videos in a playlist are loaded into playlists for the Brightcove
  Player.
- It is not possible to convert a manual playlist to a smart playlist or vice-versa.
- The largest number of videos that can be added to a playlist is 100.
- Some API responses may have nested fields
- Some fields may return nulls in certain API responses
- Ensure OAuth setup is completed before making API calls.
- SRT, SCC and DFXP captions will be automatically converted to WebVTT for Dynamic
  Delivery accounts (regardless of format, the text encoding of the file must be UTF-8
  or the processing will fail).
- The text of the captions must be encoded UTF-8 to display properly for double-byte
  languages such as Japanese and Korean.
- Because the captions are displayed in HTML, any text inside brackets will be interpreted
  as a tag and not displayed.
- If '<' is used within a WebVTT file without a trailing whitespace, captions will
  not be displayed by the Android SDK.
- Caption file names should only include letters (upper or lower case), numbers, dashes
  (-) and underscores (_).
- 'We have seen cases where captions created by a third party start the captions with
  the time stamp: 01:00:00.000. This will cause the captions to begin one hour into
  the video. To ensure that the captions are correctly synced with the video, make
  sure that the time stamps begin with 00:00:00.000 and check all time stamps for
  the 01 hour offset.'
- Using a remote URL is not supported when using Server-Side Ad Insertion (SSAI).
- If you are hosting captions files on your own server, make sure the file is located
  at a URL that can be accessed by the Brightcove player. The server hosting the captions
  file should also have Cross-Origin Resource Sharing (CORS) enabled.
- Changes made to the text track properties may take up to 15 minutes to appear in
  published players.
- The Caption(CC)/Subtitles icon depends on the player's language. Brightcove strongly
  advises users not to change this because it is an intentional design choice to present
  a localized UI.
- Currently, ingesting text tracks from Google Drive links is not possible.
- Some endpoints may have restrictive rate limits
- Some endpoints may have rate limiting
- API requires setup of a connected app in Brightcove
- Ensure proper OAuth setup for API access.
- The chapter menu will only appear when there is more than one chapter cue point
  in the webVTT file.
- The preview player in the media module doesn't display the chapter icon. To be able
  to preview the chapter icon, you must publish the player to web.
- Requires OAuth2 authentication setup
- Processing time to generate the captions will vary but it generally takes about
  1.5x the length of the video to generate captions for a video.
- If you have auto-generated captions attached to a video and replace the video with
  Auto Captioning turned on, new captions will be generated. The existing captions
  will remain attached to the video also.
- There is a 1000-entry limit for the Custom Dictionary.
- Some API responses may include nested JSON structures
- Never use `!important` or any other CSS tricks to override user preferences (those
  set in the Captions Settings dialog).
- Safari uses native captions on the device and the device settings take precedence
  over vtt styles.
- Currently, only in-line styling is supported. Style blocks are not supported.
- Some endpoints may require specific permissions.
- Ensure to have necessary permissions configured in the Brightcove API settings.
- Setup of connected app in Brightcove required for OAuth2.
- Watch for API rate limits
- Some API responses may include null values in certain fields
- Sharing videos that have been secured using DRM is not supported.
- Sharing will fail for videos created using the 'Convert live stream to VOD' option.
- Affiliate accounts have the ability to configure an Acceptance Mode for each master
  account.
- Ensure to set up OAuth2 credentials in the Brightcove account.
- Required fields are enforced only in the Media module.
- You can't activate an inactive video in the Media module unless all of its required
  metadata fields are complete.
- Requires OAuth2 authentication for access.
- Ensure to handle token expiration properly.
- Some API calls may have rate limits.
- Ensure you handle token expiration properly.
- This feature is available to all customers, but it is not enabled by default. Contact
  your Customer Success Manager if you would like to have it turned on for your account(s).
- Multi-lingual metadata cannot be added to videos that were transcoded using a Legacy
  ingest profile.
- Before you can associate multi-lingual metadata with videos, you must configure
  a primary language and one or more additional languages as part of the Language
  Settings.
- Some videos may return incomplete metadata.
- API has a rate limit that may require throttling.
- A maximum of 200 players can be created.
- Any changes made to a player may take up to 5 minutes to appear in published players.
- Players with unpublished changes can't be duplicated.
- Requires permission for all data requests.
- API usage may be limited based on account type.
- Some reports may have rate limits
- All players may not be the same version. As Brightcove continues to develop and
  improve the Brightcove player, new player versions will be released.
- Updates are applied to all players automatically unless the Update Mode setting
  is set to Manual.
- Some responses may include pagination
- API calls may be throttled based on account limits.
- Ensure API client has proper scopes set.
- Requires setup of OAuth application in Brightcove.
- Rate limits apply to API calls.
- The Geo Restriction properties are only available to Enterprise and Professional
  accounts. Domain Restriction is available to all accounts.
- While domain restrictions can help prevent unauthorized distribution of your content,
  customers seeking maximum content security should look at DRM solutions instead.
- Domain restrictions are supported when using a Gallery In-Page Experience and the
  Recommended (JavaScript) embed code.
- Domain restricted players are not compatible with AMP integrations.
- While there is no limit on the number of domains that can be added in Studio, there
  is a limit on the URL length for the API request to the Playback API.
- If the current policy key is removed, the player-level restrictions will stop working.
- Requires OAuth2 authentication with refresh token.
- Ensure proper API permissions are granted
- Automatic is the default mode. Automatic causes the player to be updated whenever
  Brightcove promotes a player version to 'current default' status.
- In Manual mode, players will not be automatically updated.
- Allows for video uploads and management through the API
- Requires OAuth2 authentication for all API calls.
- Requires authentication via OAuth2 with a connected app.
- Requires OAuth2 setup for API access
- Rate limits apply
- It may take up to 5 minutes for the changes to appear in published players.
- Some API responses may include null values in optional fields
- Uses OAuth2 with refresh token — requires setup of a connected app in Brightcove.
- The quality selector requires Brightcove Player version 5.17.0 or newer and may
  not work with all browsers.
- Apple does not allow controlling the playback quality on iOS or desktop as it uses
  adaptive bitrate streaming to adjust the quality level automatically based on bandwidth,
  connection speed, screen size, etc.
- The playback rate selector requires Brightcove Player version 6.35.0 or newer and
  may not work with all browsers.
- The player width has to be at least 424 pixels to show Playback Rates Control.
- Safari does not support rates above 2x.
- This feature is only available in Brightcove Player 6.32.0+.
- This feature is only available in Brightcove Player 6.41.0+.
- If a player endscreen is configured it will not show up on an iOS device if the
  player is in native fullscreen mode.
- Sharing must be enabled for the sharing icon to appear on the end screen.
- Make sure to handle pagination for large datasets.
- Browsers do not have perfectly standardized locale detection.
- The HTML attribute lang can be used to set preferred language.
- Some endpoints may have rate limits that apply.
- Some responses may vary based on account settings
- The Interactivity plugin only supports player 7.
- Each analytics system gathers data and calculates metrics differently. analytics
  data will not be identical to what appears in Adobe Analytics.
- The Adobe Analytics plugin is not supported when using the Brightcove Player SDKs.
- Brightcove strongly recommends switch over to Google Analytics 4
- The GA plugin does not currently provide an option to disable the automatic page_view
  send
- Requires setup of a Brightcove account for API access.
- Some APIs may return nulls in deeply nested fields
- Plugin functionality is available for Enterprise customers.
- Some fields may return null values
- Authentication requires a connected app setup.
- The value of the application ID is arbitrary and left to your use-case.
- The application ID is used to distinguish the use of Brightcove Players across a
  site.
- Some reports may return empty datasets based on filters
- Requires OAuth2 setup with Brightcove
- It is considered a best practice to use the Standard (iframe) implementation unless
  some application logic requires the use of the Advanced (in-page) code.
- Make sure to set up your connected app in Brightcove for OAuth2.
- Requires OAuth2 authentication with a connected app in Brightcove.
- 'Known Issue: Since the preview player is being loaded over HTTPS within the Studio,
  if your content is being served over HTTP, the preview player will not playback
  the content and your browser will display an insecure scripts message.'
- Some responses may contain pagination information
- You must have access to the Gallery module to be able to publish in-page experiences.
- Once a template is selected, it can't be changed.
- Some templates may not be available when a playlist or multiple videos are selected.
- Some reports may return nulls in certain fields
- Ensure that the connected app has the necessary scopes.
- The TinyMCE editor is configured to strip certain HTML tags when they are pasted
  into the editor.
- If removing the `iframe` entry will leave the Prohibited Elements field blank, enter
  'none' in this field.
- Some operations may have rate limits
- '3Play Media offers two embed methods for publishing plugins: iFrame and JavaScript.'
- The iFrame embed method is recommended for simplicity.
- Some objects may return paginated results
- Query String Support in In-Page Embeds Change applies to BCP7. Migration only necessary
  if relying on in-page embed's implicit support of autoplay or `t` query parameters
  in the parent URL.
- The `data-start-time` attribute works for players v6.19.0+.
- The `t` query parameter works for players in-page and iframe embeds for version
  6 players only, v6.19.0+. It has been removed from v7.7.0+ players.
- Some objects may return nulls in deeply nested fields.
- Requires setup of connected app in Brightcove API
- Although it is possible to change a video that is statically bound to a player,
  this is not a good practice.
- When using a reference ID that has special characters, you must escape the special
  characters in the publishing code or issues may arise.
- Some API responses may have rate limits.
- OAuth2 setup is required for accessing the API
- Ensure API keys are correctly configured in the Brightcove console.
- You can use multiple instances of the same player on same page, using a single index.min.js
  file.
- It can be very expensive bandwidth-wise to have multiple players on a page and have
  the preload set to auto.
- You cannot use multiple players on the same page that are from different accounts
  where both players use the player ID value of default.
- When mixing in-page players, the global bc will refer to the last player in the
  page.
- There are known issues when attempting to use AMD module loaders like RequireJS
  and multiple in-page players.
- When embedding multiple 360 videos on a page with the advanced embed code, only
  the first video can have 360 interactivity.
- Mixing players with 360 videos and players with non-360 videos is not supported.
- If multiple players have the same id on one page and specify different size inside
  <video> tag using width and height attributes, the player CSS from the last player
  is applied to all players.
- Reference IDs must be unique across all videos in an account.
- Operations involving reference ids will lock the id for up to 30 seconds.
- Requires setup of OAuth2 credentials.
- Rate limiting applies to API requests.
- Brightcove QoE Analytics are available to Media Video Cloud customers at no extra
  charge.
- Requires setup of a connected app in Brightcove.
- QoE Insights are available to Media Video Cloud customers for an additional charge.
- Requires OAuth2 authentication setup.
- Rate limits apply to all API calls.
- Ensure OAuth token is valid before making requests.
- Analytics reports may include data for deleted videos.
- Data is updated approximately every 3-4 hours.
- API requires setup of OAuth credentials through Brightcove.
- Rate limits apply on API usage.
- Ensure that the API keys are stored securely.
- Requires setup of API client in Brightcove
- Some API responses may contain pagination
- The unit of measurement for 'Total Bandwidth' in the custom report's Analytics performance
  data is in bytes.
- The ability to create custom reports in the Analytics module is only available to
  Enterprise and Professional publishers.
- Scheduled custom reports in the Analytics Module can only be seen by the user who
  created them in the Scheduled Reports UI.
- Reports that return more than one million rows will not load.
- Simultaneous custom report requests within the same account will execute in series.
- The video duration is displayed in seconds.
- Data in custom reports is shown using the account's reporting time zone offset.
- Changing the reporting time zone setting only affects data going forward, and changes
  are not applied retroactively.
- Updates to the reporting time zone may not take effect immediately.
- The default Reporting Time Zone applies only to the Analytics module and not to
  the Live Analytics.
- Some videos may have restricted access
- Engagement statistics for live streams are not reliable, because the duration of
  the video is not fixed.
- Simultaneous report requests within the same account will execute in series.
- Some APIs may have rate limits that could affect data ingestion.
- Requires OAuth2 authentication
- Rate limits apply based on user account type
- Top Titles are limited to the top 100 videos by audience size.
- Insights are presented 1-day behind viewership as data is processed overnight.
- Hours Viewed by Location only goes to a state/province level.
- Library Breakdown by Genre may be disabled if the customer’s metadata isn’t structured
  to allow identification of videos by genre.
- Data export per viewer is not included.
- Segments and Sync to marketing systems are not included in Essential Insights, but
  are available in the full version of Audience Insights.
- Ensure you have the correct OAuth tokens.
- Some API calls may require additional permissions or setup.
- Ensure OAuth2 credentials are properly set up.
- Analytics reports include analytics for videos that have been deleted from your
  account.
- Data on Daily Unique Viewers and Video Bandwidth data takes up to 3 days to be available.
- Simultaneous report requests will execute in series, which may lead to delays.
- Segments are set to Active by default at creation.
- The time it takes to create a segment could vary depending on the size of segment
  being generated.
- There is a limit of 10 active segments allowed at a time.
- Ensure that the API token is valid and has the correct scopes.
- Requires a Brightcove account for API access
- Additional setup may be required for certain endpoints
- Some endpoints may require additional permissions.
- Rate limits may apply to API requests.
- Milestones track progress against your decisions and are persistent throughout each
  tab of the Scorecard.
- Some API endpoints may have rate limits.
- Ensure proper authentication is set up before accessing resources.
- Ensure OAuth2 credentials are set up correctly in Brightcove.
- API calls may be rate limited.
- Requires OAuth2 authentication setup in Brightcove.
- Requires OAuth2 authentication with a valid access token.
- Some API calls may return rate limiting errors if exceeded
- Ensure client ID and secret are kept secure.
- Some API endpoints may have specific access requirements
- Ensure that the connected app is properly configured.
- Be aware of rate limits when making requests.
- Set up your accounts as business accounts before you start.
- Ensure YouTube channels are not hidden for the destination to work.
- The key is tied to a particular instance (prod/prod0/prod2/prod3/prod4).
- Ensure to have correct OAuth scopes for data access
- Use OAuth2 with refresh token for authentication.
- Requires configuration of API authentication
- Ensure proper scopes are set for OAuth2
- Requires OAuth2 authentication for accessing API endpoints.
- Ensure correct API permissions are set for the client.
- Videos that are DRM enabled will display a lock icon in the video thumbnail.
- Videos posted to Instagram must be between 3 seconds and 14 minutes in length.
- Some objects may return nulls in certain fields
- Your account must be enabled for Brightcove Live before using this feature.
- 'Facebook Requirements (Effective June 10, 2024): Account Age must be at least 60
  days old and page must have at least 100 followers.'
- To create a Live stream on YouTube, you need to verify your account then enable
  Live streaming for your account, this step may take up to 24 hrs to activate.
- Make sure the encoder is closed and stopped when the live stream is complete. Leaving
  a connection open between any encoder and Brightcove, even when no data is being
  sent, may result in unexpected connection charges.
- The key is tied to a particular instance (prod/prod0/prod2/prod3/prod4). You can
  only fetch data from the workspaces to which the token has been given access to.
- Ensure that OAuth2 credentials are set up correctly.
- Ensure all paths are specified as secure (https://).
- X will cache tweets so if you are making changes to the X meta tags, those changes
  may not be reflected in new tweets.
- Ensure that the account has sufficient permissions to access the videos.
- Ensure to handle OAuth2 token expiration properly.
- Brightcove Social does not track any actions that happen to videos on the social
  media side.
- Requires setup of API credentials in Brightcove.
- If Auto Sync is being used and the sync rules are configured to update video metadata
  on the social platform, multiple entries for the same video may appear.
- The page lists videos that have been published to a social media destination.
- Be sure to handle rate limiting appropriately.
- Ensure that you have the correct authentication credentials for API access.
- The Twitter Insights APIs don't report media views therefore viewing data is not
  available as part of the social analytics.
- Instagram analytics are not displayed as part of the social analytics.
- YouTube does not guarantee that this data is real-time data.
- Some responses may include nested fields
- Requires OAuth 2.0 setup
- Ensure correct account_id is used in API calls
- Some objects may have specific requirements or limitations
- Live outputs are VBR (Variable BitRate), where bitrate varies depending on the complexity
  of the content.
- The average video bitrate should be around the target value, but there can be brief
  periods when the measured video bitrate exceeds that target.
- Ensure the API key has the necessary permissions.
- Live streaming support is available only for Enterprise publishers.
- Live broadcasts will experience a 20-30 second delay.
- Streaming must begin within 30 minutes of the event start.
- Live streaming support is available only for Enterprise publishers
- Streaming must begin within 30 minutes of the event start (default-level account
  setting)
- The FPS should be set to 30fps, as a live stream requires
- Some objects like videos may return nulls in deeply nested fields
- Requires the IMA3 plugin v3.5.0+ and SSAI plugin v1.11.0+
- Customers must be using Dynamic Delivery
- Only IMA and SSAI plugins are supported (no FreeWheel)
- Currently only supports a single player on the page
- Some API responses may be paginated
- Legacy ingest profiles no longer support live clipping. To create a video clip from
  a live stream, make sure your account is enabled for Dynamic Delivery and use a
  Dynamic Delivery ingest profile.
- Clips can only be created within 7 days of the event end. Afterwards, the Create
  Clip button will be disabled. If the event is longer than 24 hours, only the last
  24 hours are clippable.
- 'For recurring events: If during the 7 days after an event the event is reactivated,
  the clipping will only be available for the content of the most recent event. There
  will be no way to create clips from the prior event, even if it''s under 7 days
  after the last event was deactivated.'
- If you stop and restart a channel for a new live stream, the previous live stream
  information for clipping may be overwritten.
- Clips with a start time less than 10 seconds into the stream cannot be created.
- Clipping is not supported when using the Safari browser.
- Ensure the client has the right permissions for the data access.
- Ensure OAuth scopes are set correctly for accessing data
- API may return different structures depending on the request.
- Every account has a Static Entry Point (SEP) limit of 3, with the exception of us-west-2
  which will have a limit of 10. If you need more SEPs, contact Brightcove support.
- If you are using live redundancy with SSAI, you must insert ads into all jobs in
  the group at the same time.
- Live redundancy cannot be used with DRM-protected live streams at this time.
- The primary stream should be published in the region closest to the encoder. The
  backup stream should be published in the region next closest to the encoder.
- Backup streams cannot be deleted.
- If you created a single stream event and you add a backup stream in the Control
  Room page, you will need to republish your player embed code with the new video
  ID to benefit from redundancy.
- If you do not republish the player, you will also not see the analytics data from
  the reporting tab.
- OAuth2 with refresh token required for authentication.
- Live jobs utilizing SSAI or Redundancy Groups cannot currently support multi-language
  audio.
- If you are using Live-to-VOD, the VOD assets will not have multiple audio tracks
- Creating clips from multi-audio live events is not supported at this time
- It is not possible to create DRM live jobs with multi-language audio tracks from
  Live Module UI. This is only available via the Live API
- RTMP outputs created from SEPs will contain only video and no audio when selecting
  a transcoded output profile.
- OAuth2 with refresh token required for API access
- This feature is a paid add-on for your account.
- Enabling your account for Playback Rights (EPA) will impact your ability to do live
  clipping.
- Ensure to handle OAuth token expiration properly.
- Analytics are recorded for the default live video ID generated with a Live event.
  If a customer takes the m3u8 playlist for playback, or creates a remote asset with
  it (a new video ID), the analytics won't be collected for the new asset.
- Only Concurrent Viewers will be presented in real-time; other metrics will be collected
  and aggregated with a delay similar to standard analytics.
- Concurrent Viewers is only accurate for streams that are delivered with the Brightcove
  Player and SDKs (or non-Brightcove Players using the Brightcove Data Collection
  API).
- Data will be available for up to 32 days after the event.
- Real-time is defined by the aggregated sessions over a one-minute interval.
- With recurring events (static entry points), analytics will be provided from the
  start of the most recent activation.
- At the moment, the analytics module cannot fetch the precise 'unique viewer' data
  and has a discrepancy between LIVE module analytics. Please use the LIVE Analytics
  UI to confirm the number of viewers.
- Certain ad blockers will prevent Live analytics data from loading properly.
- Some reports may have limitations on data returned
- API calls are subject to rate limits.
- Some APIs may have rate limits
- Ads, including server-side ads (SSAI), will not be streamed to RTMP outputs. The
  ad-free stream will be used instead.
- RTMP outputs are limited to 5 outputs per live job. This limitation includes connections
  marked as an error.
- RTMP output has no redundancy feature, and only a single rendition can be selected
  for the RTMP output per live job.
- Enabling a live stream for the first time may take up to 24 hours.
- Some video properties may not be available for all videos
- Requires OAuth2 authentication with a refresh token.
- Ensure correct setup of connected app in Brightcove.
- Only one integration can be added to an event at a time.
- Zoom broadcast over Brightcove will be delayed by approximately 20 seconds.
- Some responses may contain null values in certain fields
- Some API calls may require additional permissions.
- Ensure that the API key is included in the Authorization header.
- Rate limits apply based on account type.
- Analytics are recorded for the default live video ID generated with a Live channel.
  If a customer takes the m3u8 playlist for playback, or creates a remote asset with
  it (a new video ID), the analytics won't be collected for the new asset.
- Only Concurrent Viewers will be presented in real-time; other metrics will be collected
  and aggregated with a delay similar to standard analytics
- Concurrent Viewers is only accurate for streams that are delivered with the Brightcove
  Player and SDKs (or non-Brightcove Players using the Brightcove Data Collection
  API)
- Data will be available for up to 32 days after the channel
- Real-time is defined by the aggregated sessions over a one-minute interval
- With recurring channels, analytics will be provided from the start of the most recent
  activation
- At the moment, the analytics module cannot fetch the precise "unique viewer" data
  and has a discrepancy between LIVE module analytics. Please use the Reporting UI
  to confirm the number of viewers.
- Requires OAuth2 for authentication.
- Requires setup of applications in Brightcove.
- Rate limits apply based on account type
- Some responses may contain paginated data
- Ads (including SSAI) are not propagated to RTMP outputs — an ad‑free stream is used.
- Adding RTMP Outputs to a Channel that has already been created only works if the
  Channel is in the 'OFF' state.
- Some responses may include null values
- Use `2` for segment_duration_seconds for reduced latency
- Must be `live` for live streaming profiles
- Use caution with rate limits.
- Some endpoints may not support pagination.
- Some API calls may involve rate limiting.
- For jobs created through the Live API, you cannot currently specify an ingest profile,
  but must instead define the output characteristics.
- These profiles are used specifically when creating live events. They are not used
  when uploading videos to Video Cloud.
- Live outputs are VBR.
- Standard profiles may not be edited - if you want a modified version, you will need
  to create a custom profile.
- Uses a model version of 2
- Some renditions may have null account_id
- The API requires OAuth2 authentication.
- Rate limits apply to API requests.
- Requires setup of Brightcove account for API access
- API may have rate limits and require pagination for large datasets
- DRM protected content could not play in the Incognito mode of Chrome for Android
  due to the Chrome browser’s specifications.
- Your Live account must be enabled first by Brightcove Support in order to use DRM.
- Ensure to keep your API keys secure and private.
- Some reports may have limitations on data freshness
- The player will be pre-fetching less video data, and chances of playback pausing
  while the player buffers additional segments will be increased
- The customer's CDN will see increased request traffic
- Apple’s recommendation for standard live stream HLS is a 6-second segment duration.
  Shortening the segments may make the stream less stable in sub-optimal conditions.
- Requires OAuth2 authentication for data access.
- Some fields may return nulls depending on video settings
- To save the broadcast after it’s complete, check the Convert event to video asset
  when complete checkbox.
- Ensure to set up OAuth2 correctly to avoid authentication issues.
- Streaming key is always 'alive'.
- Ensure to set up OAuth for proper authentication.
- Convert event to video asset when complete checkbox should be checked to save the
  broadcast.
- Stream Name is always 'alive' in Brightcove.
- Enable the Allow live streaming meetings option in Zoom settings to use Brightcove
  Live.
- Select Custom Live Streaming Service in Zoom to stream to Brightcove Live.
- OAuth2 authentication is required for accessing the API.
- Some API endpoints may have rate limits that need to be adhered to.
- Requires configuration of OAuth2 settings in the Brightcove console.
- API calls may be rate limited
- Brightcove recommends giving each chapter a unique name.
- Rate limits apply to API usage.
- Ensure to handle token expiration.
- Brightcove recommends not collecting any personal identifiable information.
- Some API endpoints may have usage limits that require monitoring
- Some responses may contain nested data structures
- Some endpoints may have usage limits
- Requires OAuth2 setup for connected app in Brightcove
- All CSS URLs need to be formatted with no uppercase letters to ensure proper functionality.
- Variables must begin with a letter, underscore ( _ ), or $
- Use = for assignments and double quotes for quoted strings
- Commas are reserved for delimiting multiple variables
- Multiple variables have to close with a semicolon
- Uses OAuth2 with refresh token — requires setup of connected app in Video Cloud
- API access requires proper OAuth token management.
- Ensure API limits are respected to avoid throttling.
- Browser security settings may cause forms and external pages to NOT display.
- Any form and/or external web content must be 'iframeable' to display correctly.
- There may be a short delay before the Custom Form widget will appear in published
  videos.
- API requires OAuth2 authentication.
- The plugin must be configured with the `create` option for auto-creation of projects.
- Requires API key and OAuth setup.
- Some API responses may vary based on account settings.
- By design, the time triggered annotation does not perform its intended functionality
  while in edit mode.
- When using a time triggered action, Brightcove recommends that the Start/End Time
  is configured to last at least one second.
- Requires OAuth2 setup with a connected app.
- When editing a project, you should only be able to edit & delete project annotations.
  If your project has a template applied, those annotations should not be editable
  from the project. They can only be edited from the template.
- Ensure to replace {account_id} with your actual account ID in the endpoint paths.
- Must enable the Interactivity plugin for the Brightcove Player to create projects
  when adding a tag to the video.
- Ensure correct scopes are set for data access
- Requires OAuth2 authentication and setup of connected app in Brightcove
- Some endpoints may have rate limits and require pagination
- Some objects may return null values in nested fields.
- API calls are rate-limited.
- OAuth2 with refresh token is required for access.
- Requires OAuth2 authentication with a valid token.
- The Slide Sync Experience works only for VOD - live streams are not supported.
- Requires setup of Brightcove account and API credentials
- Some API responses may include null values for optional fields
- Lesson experiences allow you to create entire learning experiences through interactive
  video.
- Ensure to configure API permissions correctly.
- Some objects may return nulls in nested fields
- Requires setup of API credentials in Brightcove
- Some API calls may have rate limits
- All of the Core reports are limited to returning 50,000 rows of output.
- The Question report is limited to returning 50,000 rows of output.
- The Gradebook report is limited to returning 50,000 rows of output.
- Some reports may return nulls in deeply nested fields
- All events and properties are exposed as a JSON object made available via the 'onTrackingEvent'
  callback function.
- Ensure connected app is configured properly
- Reports are cached for one hour after being initially called. In order to get up
  to the minute data, please change any element of the report parameters (e.g. extend
  the date range by one day) or wait until the cache has cleared.
- Throttling may be required for large datasets.
- Requires proper account setup and authentication
- Rate limits may apply depending on account type
- Requires OAuth2 setup with Brightcove.
- All connections to the solution must utilize HTTPS protocol
- 'Firewalls in place on the networks from which the solution is accessed must whitelist:
  "*.hapyak.com"'
- Ensure that the client ID and secret are correctly configured in the DLT secrets.
- Some fields may be deprecated or change over time, check API documentation regularly.
- The checkbox to Enable Interactivity will replace the need for entering any API
  key data.
- Projects without videos will display a warning icon for the video thumbnail.
- Ensure to set up OAuth2 for authentication.
- The language for quiz annotations can only be set on the account level, not on the
  project level.
- After styling changes are complete, click Publish to save the changes.
- Click Restore to revert back to the default styling settings.
- Requires OAuth2 setup
- Some endpoints may have limitations on data returned
- Enabling the Advanced Optimizer may increase processing time and credit usage.
- Metadata enhancement will fail if the video doesn’t have any text track.
- Some video properties may vary based on account type
- Dubbing requires translated captions, and translated captions require auto-captions.
- Ensure proper OAuth scopes are set for data access
- API calls may require specific permissions based on the user role
- Auto captions are not covered by this permission.
- Some fields may be nullable
- Be aware of rate limits on API calls
- Rate limiting is enforced, so be mindful of the number of requests made.
- Uses OAuth2 with refresh token — requires setup of connected app in brightcove
- FAST channels with SSAI work with the Gallery Immersion template.
- In the case of SSAI channels where you use RTP as output to BC Live, the associated
  live job should not be deactivated or re-activated in the Live Module or via the
  Live API. Please manage Cloud Playout channels only within the Cloud Playout module.
- If you do not see the Cloud Playout option in your Video Cloud account. Contact
  your Customer Success Manager.
- API requires authentication setup.
- Requires OAuth2 authentication for API access
- Ensure to handle rate limits and throttling with API calls
- Requires setup of API credentials on Brightcove's dashboard
- API usage is subject to rate limits.
- Ensure that the correct account ID is used in requests.
- Ensure to handle rate limiting according to API documentation.
- The features and integrations discussed apply only to Video On Demand (VOD) content.
- Campaign 2.0 is not compatible with players that have the Campaign plugin enabled.
- Requires a valid account ID to access resources.
- Some video properties may return nulls in deeply nested fields
- Requires a valid Brightcove account and API setup.
- Requires OAuth2 authentication with a valid access token
- API rate limits may apply
- Some API features may have restrictions or specific configurations
- No API access for Campaign Profiles
- Ensure that the OAuth2 client is properly configured in the Brightcove developer
  portal.
- Requires OAuth2 authentication for API access.
- Ensure proper permissions are set for API tokens.
- Requires setup of OAuth2 client in Brightcove.
- Some API responses may be paginated.
- Be aware of potential API call limits
- Ensure to handle pagination for large datasets.
- Ensure to check API usage limits.
- Ensure API keys are kept secure
- This API requires API keys for authentication.
- When using a custom integration, you are responsible for identifying the viewer.
- Ensure to set up API keys in Brightcove before accessing the API.
- The limit on string length for event slot values is 250 characters.
- If multiple values are sent to the same event or metric slot during a single viewing
  session, the existing value in the slot is replaced with the new value.
- If a view event for the session does not exist yet then one will be created.
- If the result of track() is false indicating that the event failed to send, you
  can enable the verbose option on the Campaign plugin to see console logging with
  a specific reason why.
- Some responses may contain null values for certain fields
- View event data can be exported using the Export Data option or by using the Audience
  API.
errors:
- '401 Unauthorized: Check your credentials and token validity'
- '404 Not Found: Ensure the resource exists'
- '401 Unauthorized: Check your credentials and scopes.'
- '401 Unauthorized: Check client credentials and token expiration.'
- '404 Not Found: Verify the endpoint and resource.'
- '429 Too Many Requests: Rate limit exceeded, retry after some time.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: Verify the endpoint URL'
- '429 Too Many Requests: Rate limit exceeded'
- '204 No Content: No data found for the request'
- '401 Unauthorized: Check your credentials'
- '403 Forbidden: You do not have permission to access this resource'
- '401 Unauthorized: Check your credentials and OAuth scopes'
- '429 Too Many Requests: Reduce the number of API calls'
- '401 Unauthorized: Check if the OAuth token is valid'
- '401 Unauthorized: Check your OAuth token.'
- '404 Not Found: Verify the resource path.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check your API key and permissions.'
- '401 Unauthorized: Check your API key and token expiration'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: Verify the endpoint.'
- '429 Too Many Requests: Rate limit exceeded.'
- '404 Not Found: Check the endpoint or resource ID.'
- '403 Forbidden: Verify account permissions or token validity.'
- '401 Unauthorized: Check your access token and permissions'
- '404 Not Found: Verify the resource ID or endpoint path'
- 'TOKEN_EXPIRED: Refresh your OAuth token.'
- 'INVALID_CLIENT: Check client ID and secret.'
- '401 Unauthorized: Check credentials and permissions.'
- '404 Not Found: Verify the endpoint path and parameters.'
- '401 Unauthorized: Check your API credentials'
- '404 Not Found: Verify the endpoint path'
- '401 Unauthorized: Invalid credentials provided.'
- '404 Not Found: The requested resource does not exist.'
- '403 Forbidden: Check permissions.'
- '404 Not Found: Verify the endpoint URL.'
- '500 Internal Server Error: Retry the request.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Check API credentials'
- '403 Forbidden: Verify API access permissions'
- '404 Not Found: Verify endpoint path'
- '429 Too Many Requests: Throttle API calls'
- '401 Unauthorized: Check client credentials or token validity'
- '404 Not Found: Verify the endpoint path and parameters'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your access token'
- '401 Unauthorized: Check OAuth token and scopes.'
- '403 Forbidden: Check permissions for the requested resource'
- '404 Not Found: Verify the endpoint URL and resource ID'
- '401 Unauthorized: Check your authentication credentials.'
- '429 Too Many Requests: Rate limit exceeded. Try again later.'
- 'AUTHORIZATION_ERROR: Check your credentials and permissions.'
- 'VIDEO_NOT_FOUND: Verify the video ID.'
- 'INVALID_REQUEST: Review the request parameters.'
- '401 Unauthorized: Check OAuth token'
- '404 Not Found: Verify endpoint and resource ID'
- '404 Not Found: Verify endpoint path and parameters'
- '401 Unauthorized: Check the provided OAuth credentials'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: The requested resource does not exist'
- '401 Unauthorized: Check OAuth credentials'
- '403 Forbidden: Ensure correct API permissions'
- '404 Not Found: Verify endpoint URL'
- '401 Unauthorized: Check your OAuth token and permissions'
- '404 Not Found: Verify the endpoint and resource ID'
- '403 Forbidden: Check your permissions.'
- '401 Unauthorized: Invalid credentials or token expired.'
- '404 Not Found: Resource does not exist.'
- '500 Internal Server Error: Server encountered an error.'
- '401 Unauthorized: Check your OAuth credentials'
- '403 Forbidden: Ensure that you have permission to access this resource'
- '404 Not Found: The requested resource could not be found'
- 'The upload process seems to hang or makes no progress: Try clearing the browser
  cache and then upload the video again.'
- 'The difference between the request time and the current time is too large: This
  error will occur when the system time on the machine uploading videos is not set
  correctly.'
- '401 Unauthorized: Verify the client credentials and OAuth token'
- '403 Forbidden: Check if the account has access to the requested resource'
- 'MEDIA_ERR_SRC_NOT_SUPPORTED: No compatible source was found for this media.'
- '403 Forbidden: Check API permissions'
- '500 Internal Server Error: Retry request after some time'
- '401 Unauthorized: Invalid client ID or secret'
- '401 Unauthorized: Check client credentials.'
- '403 Forbidden: Check permissions for the requested resource.'
- '404 Not Found: The requested resource could not be found.'
- '403 Forbidden: Check permissions or API token'
- '404 Not Found: Verify endpoint and resource IDs'
- '403 Forbidden: Check API permissions.'
- '404 Not Found: Verify endpoint path.'
- '404 Not Found: Verify the video ID or account ID'
- '401 Unauthorized: Check your credentials and permissions.'
- '404 Not Found: Verify the endpoint path and resource availability.'
- '401 Unauthorized: Check client credentials and token validity.'
- '401 Unauthorized: Check client credentials and token expiration'
- '403 Forbidden: Verify permissions for the requested resource'
- '403 Forbidden: Ensure you have permissions for the requested resource.'
- '404 Not Found: Verify the endpoint and resource identifiers.'
- '401 Unauthorized: Check your credentials and OAuth token.'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check OAuth token validity'
- '404 Not Found: Verify endpoint and resource'
- '401 Unauthorized: Verify client credentials.'
- '401 Unauthorized: Recheck OAuth token validity'
- '403 Forbidden: Check your permissions'
- '404 Not Found: Verify the resource endpoint'
- '500 Internal Server Error: Retry the request'
- '401 Unauthorized: Ensure that the access token is valid.'
- '404 Not Found: Verify the account ID and resource path.'
- '401 Unauthorized: Check your credentials and permissions'
- '401 Unauthorized: Check client ID and secret.'
- 'Enforce custom field matching: the affiliate account must have the same custom
  fields as the master account or any shares will fail.'
- '404 Not Found: Verify the endpoint and resource ID.'
- '401 Unauthorized: Check client credentials and token'
- '404 Not Found: Verify the requested resource path.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Check your API credentials.'
- '403 Forbidden: Ensure you have access rights.'
- '400 Bad Request: Check request parameters'
- '404 Not Found: Verify endpoint paths'
- '403 Forbidden: Check API key and permissions.'
- '404 Not Found: Verify the resource ID.'
- '404 Not Found: Verify endpoint and parameters.'
- '404 Not Found: Verify endpoint paths.'
- '401 Unauthorized: Check client ID and secret'
- '404 Not Found: Verify endpoint path and account ID'
- '429 Too Many Requests: Reduce request frequency'
- '403 Forbidden: Check permissions for the account'
- '404 Not Found: Verify the endpoint and account ID'
- '401 Unauthorized: Invalid credentials.'
- '403 Forbidden: You do not have access to this resource'
- '401 Unauthorized: Check your token and permissions.'
- '404 Not Found: Verify endpoint and resource.'
- '403 Forbidden: Check your permissions and scopes'
- '404 Not Found: Ensure the endpoint exists'
- '500 Internal Server Error: Retry after some time'
- '404 Not Found: Verify the resource path'
- '401 Unauthorized: Check your access token.'
- '401 Unauthorized: Check OAuth token or scopes'
- '403 Forbidden: Check your API key and permissions.'
- '401 Unauthorized: Check your OAuth token'
- '401 Unauthorized: Check your client ID and secret.'
- '403 Forbidden: Check account permissions'
- '401 Unauthorized: Check your OAuth token or client configuration.'
- '403 Forbidden: Insufficient permissions for the requested resource.'
- '404 Not Found: Ensure the endpoint is correct.'
- '429 Too Many Requests: Throttle requests'
- '404 Not Found: Resource not found'
- '403 Forbidden: Check for sufficient permissions'
- '404 Not Found: Verify endpoint path and resource availability'
- '401 Unauthorized: Ensure the client ID and secret are correct'
- '401 Unauthorized: Token may be expired or invalid.'
- '404 Not Found: Check the endpoint path and parameters.'
- '409: Reference ID locked, please wait 30 seconds before retrying.'
- '403 Forbidden: Access denied for the requested resource'
- '404 Not Found: Ensure the resource ID is correct.'
- '401 Unauthorized: Check your client credentials or token expiration.'
- '404 Not Found: Verify the resource exists.'
- '404 Not Found: Verify endpoint URL.'
- '401 Unauthorized: Ensure valid access token.'
- '429 Too Many Requests: Rate limit exceeded. Reduce request frequency.'
- '401 Unauthorized: Check OAuth scopes or token expiration'
- '401 Unauthorized: Check your API key or token'
- '404 Not Found: Verify the resource identifier'
- '429 Too Many Requests: Implement exponential backoff'
- 'Missing or Partial Data: Data is typically processed within 48-72 hours and refreshed
  around 15:00 UTC.'
- 'Running a report multiple times does not refresh data: Quick reports are cached
  for 3 hours.'
- 'Live videos are not included in report: Currently, live videos are not included
  in the report.'
- '403 Forbidden: Insufficient permissions for the requested resource'
- Analytics data may take a bit longer to load when applying filters.
- '401 Unauthorized: Check your access token and permissions.'
- '404 Not Found: Verify the endpoint and resource id.'
- '404 Not Found: Verify endpoint and resource existence'
- '429 Too Many Requests: Slow down your requests'
- '404 Not Found: Check the resource ID or endpoint path'
- '500 Internal Server Error: Retry the request after some time'
- '403 Forbidden: Check permissions or authentication tokens'
- '404 Not Found: Verify the endpoint and parameters'
- '500 Internal Server Error: Retry the request after a moment'
- '404 Not Found: Verify the endpoint and parameters are correct.'
- 'Unknown: Unable to retrieve country information if there is no entry for the IP
  address.'
- '401 Unauthorized: Check your client ID and secret'
- 'INVALID_TOKEN: Token has expired or is invalid'
- 'NOT_FOUND: The requested resource does not exist'
- 'FORBIDDEN: You do not have permission to access this resource'
- '403 Forbidden: Check if you have the right permissions.'
- '500 Internal Server Error: Try again later or contact support.'
- '401 Unauthorized: Check OAuth token validity.'
- '401 Unauthorized: Ensure the access token is valid.'
- '403 Forbidden: Check your API keys and permissions'
- '404 Not Found: Verify the resource ID'
- '401 Unauthorized: Check the access token.'
- '404 Not Found: Verify endpoint and parameters'
- '403 Forbidden: Invalid access token'
- '404 Not Found: Check endpoint URL'
- '401 Unauthorized: Check credentials or token expiration'
- '404 Not Found: Check the endpoint URL or resource ID'
- '404 Not Found: Verify the requested resource exists.'
- '404 Not Found: Verify the resource path and account ID'
- 'Upload rejection: Video was a duplicate'
- NO_RENDITION_FOR_SOCIAL_PLATFORM_ERROR
- The request metadata specifies an invalid or empty video title
- '403 Forbidden: Ensure you have access to the resource'
- '404 Not Found: Verify the endpoint or resource ID'
- '401 Unauthorized: Invalid credentials or insufficient permissions.'
- '401 Unauthorized: Check your API token'
- '429 Too Many Requests: Reduce the request rate'
- Network instability affecting the input.
- Transcoder overload resulting in skip frames.
- Encoder sending variable frame durations.
- '403 Forbidden: Check if the API key has the correct permissions'
- '404 Not Found: Verify the endpoint and resource identifier'
- '404 Not Found: Check endpoint path or resource ID'
- '401 Unauthorized: Check your client credentials.'
- '401 Unauthorized: Check OAuth token expiration or scopes'
- '404 Not Found: The requested resource was not found.'
- '401 Unauthorized: Check OAuth token.'
- '401 Unauthorized: Check the validity of your OAuth token'
- 'INVALID_CLIENT: Check client_id and client_secret'
- 'NOT_AUTHORIZED: Ensure user has correct permissions'
- '404 NOT_FOUND: Verify endpoint and resource IDs'
- '403 Forbidden: Ensure adequate permissions for the requested resource.'
- '404 Not Found: Verify endpoint path and resource availability.'
- '401 Unauthorized: Check your OAuth token and permissions.'
- '401 Unauthorized: Check your API key and token.'
- '429 Too Many Requests: You have exceeded your rate limit.'
- '401 Unauthorized: Ensure OAuth token is valid'
- '404 Not Found: Check endpoint URL and resource ID'
- '403 Forbidden: Check permissions for the account.'
- '500 Internal Server Error: Retry the request later'
- '500 Internal Server Error: Retry after some time.'
- '401 Unauthorized: Verify credentials and token validity'
- '404 Not Found: Ensure endpoint existence'
- '404 Not Found: Ensure the resource exists.'
- '403 Forbidden: Ensure you have the right permissions'
- '429 Too Many Requests: Throttle your requests.'
- '404 Not Found: Ensure the requested resource exists.'
- '403 Forbidden: Access denied for the requested resource.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Check token validity.'
- '401 Unauthorized: Check OAuth token and scopes'
- '401 Unauthorized: Check client credentials'
- '400 Bad Request: Check your request parameters.'
- '403 Forbidden: Ensure you have the correct permissions.'
- '404 Not Found: Check the endpoint path or parameters'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- '403 Forbidden: You don''t have permission'
- '403 Forbidden: Check your API key and access permissions.'
- '403 Forbidden: You do not have permission to perform this action.'
- '401 Unauthorized: Check if the token is valid.'
- '403 Forbidden: Insufficient permissions.'
- 'API_CALL_LIMIT_EXCEEDED: Reduce frequency of requests.'
- '404 Not Found: Verify the endpoint and resource availability.'
- '401 Unauthorized: Check your API key or OAuth token.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '429 Too Many Requests: Rate limit exceeded, please try again later.'
- '403 Forbidden: Check API key and permissions'
- '404 Not Found: Verify the requested resource exists'
- '403 Forbidden: You do not have permission for this operation.'
- '401 Unauthorized: Check if your token is valid.'
- '401 Unauthorized: Check if the authentication tokens are set correctly.'
- '401 Unauthorized: Recheck OAuth token expiration'
- '500 Internal Server Error: Retry request'
- '403 Forbidden: You do not have permission to access this resource.'
- '404 Not Found: Resource does not exist'
- '403 Forbidden: Check permissions for the access token.'
- '404 Not Found: Verify the endpoint URL and parameters.'
- '401 Unauthorized: Check your access token and scopes.'
- '404 Not Found: Check the resource path or account ID'
- '401 Unauthorized: Check token validity'
- '401 Unauthorized: Check client_id, client_secret and refresh_token.'
- '500 Internal Server Error: Retry after a few moments'
- '401 Unauthorized: Ensure your token is valid'
- '403 Forbidden: Check permissions'
- '404 Not Found: Verify URL and resource ID'
- '404 Not Found: Verify the resource identifier.'
- '401 Unauthorized: Check client credentials and token validity'
- '403 Forbidden: Permissions issue with the provided token'
- '429 Too Many Requests: Reduce the number of requests.'
- 'INVALID_ACCESS_TOKEN: Token may have expired or been revoked.'
- 'RESOURCE_NOT_FOUND: Check the resource ID.'
- '401 Unauthorized: Verify token validity'
- '404 Not Found: Ensure correct endpoint path'
- '500 Internal Server Error: Please try again later.'
- '404 Not Found: Verify the endpoint and parameters.'
- '401 Unauthorized: Check if the access token is valid or expired.'
- '403 Forbidden: Ensure you have the correct permissions for the requested resource.'
- '401 Unauthorized: Check if the access token is valid.'
- '403 Forbidden: Verify API permissions.'
- '429 Too Many Requests: Implement exponential backoff.'
- '403 Forbidden: Check if the API key is valid.'
- '403 Forbidden: You do not have access to this resource.'
- '403 Forbidden: Invalid API key'
- '401 Unauthorized: Check your API credentials and permissions.'
- '404 Not Found: Verify the endpoint and resource exists.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
auth_info:
  mentioned_objects:
  - BC_OAuth2
  - OauthToken
  - AuthProvider
  - OAuthClient
  - AuthorizationCode
  - NamedCredential
  - OAuthToken
  - OAuth2
  - OAuth
  - AccessToken
  - User
  - Account
  - API Key
  - ClientCredentials
  - Video
  - ClientCredential
  - ConnectedApp
  - Client ID
  - Client Secret
  - ClientID
  - ClientSecret
  - BrightcoveAPI
client:
  base_url: https://apis.support.brightcove.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.brightcove.com/oauth2/token
    client_id: '{{ dlt.secrets[''brightcove_client_id''] }}'
    client_secret: '{{ dlt.secrets[''brightcove_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''brightcove_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
