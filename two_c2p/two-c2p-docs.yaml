resources:
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: response
    params: {}
- name: applepay_merchantvalidation
  endpoint:
    path: /payment/4.3/applepay/merchantvalidation
    method: POST
    data_selector: object
    params: {}
- name: Beneficiary Registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: Payout Request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: applepay_merchant_validation
  endpoint:
    path: /payment/4.3/applepay/merchantvalidation
    method: POST
    data_selector: object
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /payout/create
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: Payment Options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: Payment Option Details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: Payment Response (Backend)
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: Payment Response (Frontend)
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: Initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: User Preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: Card Token Information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: Exchange Rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: Exchange Rate With Token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: Payment Instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: Payment Maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: Customer Token Maintenance API
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: Card Installment Plan Info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: Loyalty Point Info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: quickpay_generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
    data_selector: data
    params: {}
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
    data_selector: data
    params: {}
- name: quickpay_update
  endpoint:
    path: /api-quickpay-update
    method: PUT
    data_selector: data
    params: {}
- name: quickpay_delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: Payment Options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: Payment Option Details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: Payment Response (Backend)
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: Payment Response (Frontend)
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: Initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: User Preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: Card Token Information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: Exchange Rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: Exchange Rate With Token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: Payment Instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: Payment Maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: Customer Token Maintenance API
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: Card Installment Plan Info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: Loyalty Point Info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params:
      merchantID: JT01
      invoiceNo: '1523953661'
      description: item 1
      amount: 1000.0
      currencyCode: SGD
      paymentChannel:
      - CC
- name: payment_response_backend
  endpoint:
    path: /api-payment-response-backend
    method: GET
    data_selector: backendResponse
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /api-payment-response-frontend
    method: GET
    data_selector: frontendResponse
    params: {}
- name: payment_inquiry
  endpoint:
    path: /api-payment-inquiry
    method: GET
    data_selector: paymentInquiryResponse
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /api/payment/token
    method: POST
- name: payment_options
  endpoint:
    path: /api/payment/options
    method: GET
- name: do_payment
  endpoint:
    path: /api/do/payment
    method: POST
- name: transaction_status_inquiry
  endpoint:
    path: /api/transaction/status/inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /api/payment/inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: data
    params: {}
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: Payment Response Backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
    data_selector: backendResponse
    params: {}
- name: Payment Response Frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
    data_selector: frontendResponse
    params: {}
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
    data_selector: paymentInquiry
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payment_token_request
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: body
    params:
      merchantID: JT01
      invoiceNo: '1523953661'
      description: item 1
      amount: 1000.0
      currencyCode: SGD
      customerToken:
      - '28052010234224845229'
      - '7305201872122484776'
- name: payment_token_response
  endpoint:
    path: /docs/api-payment-token
    method: GET
    data_selector: response
    params:
      webPaymentUrl: https://sandbox-pgw-ui.2c2p.com/payment/4.3/#/token/kSAops9Zwhos8hSTSeLTUcCrwcnrndJUZanGJy3fBEsXCiYmynwxHvK5h7XPBadJqD0nG7v65t5N2jPVrnwX2jL4nu%2bKKSegjUjERKCyWPg%3d
      paymentToken: kSAops9Zwhos8hSTSeLTUcCrwcnrndJUZanGJy3fBEsXCiYmynwxHvK5h7XPBadJqD0nG7v65t5N2jPVrnwX2jL4nu+KKSegjUjERKCyWPg=
      respCode: '0000'
      respDesc: Success
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_response_backend
  endpoint:
    path: /api-payment-response-backend
    method: POST
    data_selector: backendResponse
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /api-payment-response-frontend
    method: GET
    data_selector: frontendResponse
    params: {}
- name: payment_inquiry
  endpoint:
    path: /api-payment-inquiry
    method: GET
    data_selector: paymentInquiryResponse
    params: {}
- name: payment_token_request
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentTokenRequest
    params: {}
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
    data_selector: backendPaymentResponse
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
    data_selector: frontendPaymentResponse
    params: {}
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
    data_selector: paymentInquiryResponse
    params: {}
- name: payment_token
  endpoint:
    path: /api/payment-token
    method: POST
    data_selector: paymentToken
    params:
      merchantID: JT01
      recurring: true
      invoicePrefix: '020620125724'
      recurringAmount: '10'
      recurringInterval: '30'
      recurringCount: '12'
      chargeNextDate: '03062020'
- name: payment_response_backend
  endpoint:
    path: /api/payment-response-backend
    method: POST
    data_selector: respCode
    params:
      merchantID: JT01
      amount: '1500.00'
      currencyCode: THB
      customerToken: '28052010234224845229'
- name: payment_response_frontend
  endpoint:
    path: /api/payment-response-frontend
    method: GET
    data_selector: respCode
    params: {}
- name: payment_inquiry
  endpoint:
    path: /api/payment-inquiry
    method: GET
    data_selector: invoiceNo
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: records
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: records
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: records
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: records
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: data
    params: {}
- name: payment_option
  endpoint:
    path: /payment/options
    method: GET
    data_selector: options
    params: {}
- name: payment_response_backend
  endpoint:
    path: /payment/response/backend
    method: GET
    data_selector: response
    params: {}
- name: payment_inquiry
  endpoint:
    path: /payment/inquiry
    method: GET
    data_selector: inquiry
    params: {}
- name: customer_tokenization
  endpoint:
    path: /docs/redirect-api-card-tokenization
    method: GET
- name: payment_with_customer_token
  endpoint:
    path: /docs/redirect-api-payment-with-card-token
    method: GET
- name: ipp_installment_payment_plan
  endpoint:
    path: /docs/redirect-api-ipp-installment-payment-plan
    method: GET
- name: rpp_recurring_payment_plan
  endpoint:
    path: /docs/redirect-api-rpp-recurring-payment-plan
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: Payment Token Request
- name: Payment Response (Backend)
  endpoint:
    path: /docs/api-payment-response-backend
    method: POST
    data_selector: Back End Payment Response
- name: Payment Response (Frontend)
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
    data_selector: Front End Payment Response
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
    data_selector: Payment Inquiry API
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params:
      merchantID: JT01
      invoiceNo: '1523953661'
      description: item 1
      amount: 1000.0
      currencyCode: SGD
      customerToken:
      - '28052010234224845229'
      - '7305201872122484776'
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: POST
    data_selector: backendPaymentResponse
    params:
      merchantID: JT04
      invoiceNo: '280520075921'
      accountNo: 411111XXXXXX1111
      amount: '230.87'
      currencyCode: THB
      customerToken: '28052010234224845229'
      tranRef: '2868821'
      referenceNo: '2785703'
      approvalCode: '531484'
      eci: '05'
      transactionDateTime: '20200528080508'
      respCode: '0000'
      respDesc: Success
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
    data_selector: frontendPaymentResponse
    params:
      invoiceNo: '280520075921'
      channelCode: CC
      respCode: '2000'
      respDesc: Transaction is completed, please do payment inquiry request for full
        payment information.
- name: payment
  endpoint:
    path: /v4/payments
    method: POST
    data_selector: data
    params: {}
- name: payout
  endpoint:
    path: /v4/payouts
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: user_preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: card_token_information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: exchange_rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: exchange_rate_with_token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: payment_maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: customer_token_maintenance
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: card_installment_plan_info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: loyalty_point_info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /api/payment/token
    method: POST
    data_selector: response
    params:
      merchantID: JT01
      invoiceNo: '020620102231'
      description: item 1
      amount: 10500.0
      currencyCode: THB
      paymentChannel:
      - IPP
      installmentPeriodFilter:
      - 6
      - 12
- name: payment_response_backend
  endpoint:
    path: /api/payment/response/backend
    method: POST
    data_selector: response
- name: payment_response_frontend
  endpoint:
    path: /api/payment/response/frontend
    method: GET
    data_selector: response
- name: payment_inquiry
  endpoint:
    path: /api/payment/inquiry
    method: GET
    data_selector: response
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: encryptedCardInfo
    params: {}
- name: payment_token
  endpoint:
    path: /api/payment/token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_response_backend
  endpoint:
    path: /api/payment/response/backend
    method: POST
    data_selector: backendResponse
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /api/payment/response/frontend
    method: GET
    data_selector: frontendResponse
    params: {}
- name: payment_inquiry
  endpoint:
    path: /api/payment/inquiry
    method: GET
    data_selector: inquiryResponse
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: beneficiary
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: payout
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /api-payment-option
    method: GET
- name: payment_option_details
  endpoint:
    path: /api-payment-option-details
    method: GET
- name: payment_response_backend
  endpoint:
    path: /api-payment-response-backend
    method: GET
- name: payment_response_frontend
  endpoint:
    path: /api-payment-response-frontend
    method: GET
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /api-payment-inquiry
    method: GET
- name: initialization
  endpoint:
    path: /api-initialization
    method: GET
- name: user_preference
  endpoint:
    path: /api-user-preference
    method: GET
- name: card_token_information
  endpoint:
    path: /api-card-tokens-information
    method: GET
- name: exchange_rate
  endpoint:
    path: /api-exchange-rate
    method: GET
- name: exchange_rate_with_token
  endpoint:
    path: /api-exchange-rate-with-token
    method: GET
- name: payment_instruction
  endpoint:
    path: /api-payment-instruction
    method: GET
- name: payment_maintenance
  endpoint:
    path: /payment-action-api-spec
    method: GET
- name: customer_token_maintenance
  endpoint:
    path: /customer-token-maintenance-api
    method: GET
- name: card_installment_plan_info
  endpoint:
    path: /api-card-installment-plan-info
    method: GET
- name: loyalty_point_info
  endpoint:
    path: /loyalty-point-info-api
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: Payment Options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: Payment Option Details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: Payment Response (Backend)
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: Payment Response (Frontend)
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: Initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: User Preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: Card Token Information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: Exchange Rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: Exchange Rate With Token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: Payment Instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: Payment Maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: Customer Token Maintenance API
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: Card Installment Plan Info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: Loyalty Point Info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: Payment Token
  endpoint:
    path: /api-payment-token
    method: POST
- name: Do Payment
  endpoint:
    path: /api-do-payment
    method: POST
- name: Payment Inquiry
  endpoint:
    path: /api-payment-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: null
    params: {}
- name: payment_option
  endpoint:
    path: /docs/api-payment-option
    method: POST
    data_selector: null
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: POST
    data_selector: null
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details#section-payment-option-details-response
    method: GET
    data_selector: channels
- name: do_payment
  endpoint:
    path: /docs/api-do-payment#section-do-payment-request
    method: POST
    data_selector: payment
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
    data_selector: merchantID
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry#section-payment-inquiry-request
    method: POST
    data_selector: merchantID
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option
  endpoint:
    path: /docs/api-payment-option
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details#section-payment-option-details-response
    method: GET
    data_selector: channels
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment#section-do-payment-request
    method: POST
    data_selector: payment
    params: {}
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
    data_selector: data
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
    data_selector: data
    params: {}
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry#section-payment-inquiry-request
    method: POST
    data_selector: data
    params: {}
- name: Beneficiary Registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: Beneficiary Inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: Payout Request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: Payout Inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option
  endpoint:
    path: /api-payment-option
    method: POST
    data_selector: merchantDetails
    params: {}
- name: payment_option_details
  endpoint:
    path: /api-payment-option-details
    method: POST
    data_selector: transactionDetails
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details#section-payment-option-details-response
    method: GET
    data_selector: data
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment#section-do-payment-request
    method: POST
    data_selector: data
    params: {}
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
    data_selector: data
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
    data_selector: data
    params: {}
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry#section-payment-inquiry-request
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option
  endpoint:
    path: /api-payment-option
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option_details
  endpoint:
    path: /api-payment-option-details
    method: POST
    data_selector: totalChannel
    params: {}
- name: Do Payment Request
  endpoint:
    path: /docs/api-do-payment#section-do-payment-request
    method: POST
    data_selector: responseReturnUrl
    params: {}
- name: Payment Inquiry Request
  endpoint:
    path: /docs/api-payment-inquiry#section-payment-inquiry-request
    method: POST
    data_selector: paymentToken
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option
  endpoint:
    path: /api-payment-option
    method: POST
    data_selector: merchantDetails
    params: {}
- name: payment_option_details
  endpoint:
    path: /api-payment-option-details
    method: POST
    data_selector: totalChannel
    params: {}
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: data
    params: {}
- name: payment_response_backend
  endpoint:
    path: /api-payment-response-backend
    method: POST
    data_selector: merchantID
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /api-payment-response-frontend
    method: POST
    data_selector: invoiceNo
    params: {}
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry#section-payment-inquiry-request
    method: POST
    data_selector: merchantID, invoiceNo, locale
    params: {}
- name: payment_inquiry_response
  endpoint:
    path: /docs/api-payment-inquiry#section-payment-inquiry-response
    method: GET
    data_selector: merchantID, invoiceNo, amount, currencyCode, tranRef, respCode,
      respDesc
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option
  endpoint:
    path: /api-payment-option
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option_details
  endpoint:
    path: /api-payment-option-details
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option_details
  endpoint:
    path: /payment/option/details
    method: GET
    data_selector: channels
    params: {}
- name: do_payment
  endpoint:
    path: /payment/do
    method: POST
    data_selector: data
    params: {}
- name: transaction_status
  endpoint:
    path: /payment/transaction/status
    method: GET
    data_selector: status
    params: {}
- name: payment_inquiry
  endpoint:
    path: /payment/inquiry
    method: POST
    data_selector: inquiry
    params: {}
- name: payment_inquiry
  endpoint:
    path: /payment/inquiry
    method: GET
    data_selector: merchantID, invoiceNo, amount, currencyCode, tranRef, respCode,
      respDesc
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option
  endpoint:
    path: /docs/api-payment-option
    method: POST
    data_selector: merchantDetails
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: POST
    data_selector: channelCategories
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
    data_selector: channels
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: data
    params: {}
- name: transaction_status
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: POST
    data_selector: response
    params: {}
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: POST
    data_selector: inquiryResponse
    params: {}
- name: payment_inquiry_response
  endpoint:
    path: /docs/api-payment-inquiry#section-payment-inquiry-response
    method: GET
    data_selector: paymentInquiryResponse
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option
  endpoint:
    path: /docs/api-payment-option
    method: POST
    data_selector: merchantDetails
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: POST
    data_selector: channelCategories
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
    data_selector: channels
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: data
    params: {}
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
    data_selector: data
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
    data_selector: data
    params: {}
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: POST
    data_selector: data
    params: {}
- name: payment_inquiry_response
  endpoint:
    path: /payment-inquiry-response
    method: GET
    data_selector: paymentInquiryResponse
    params: {}
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: GET
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: POST
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: QuickPay Generate and Send Link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_response
  endpoint:
    path: /api-payment-response-backend
    method: POST
    data_selector: respCode
    params: {}
- name: Do Payment Request
  endpoint:
    path: /docs/api-do-payment#section-do-payment-request
    method: POST
    data_selector: payment
    params: {}
- name: Payment Inquiry Request
  endpoint:
    path: /docs/api-payment-inquiry#section-payment-inquiry-request
    method: POST
    data_selector: paymentInquiry
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: invoiceNo
    params: {}
- name: payment_inquiry
  endpoint:
    path: /payment/inquiry
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: records
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: records
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option
  endpoint:
    path: /api-payment-option
    method: POST
    data_selector: merchantDetails
    params: {}
- name: payment_option_details
  endpoint:
    path: /api-payment-option-details
    method: POST
    data_selector: transactionDetails
    params: {}
- name: payment_option_details
  endpoint:
    path: /api/payment-option-details
    method: GET
    data_selector: channels
- name: do_payment
  endpoint:
    path: /api/do-payment
    method: POST
    data_selector: data
- name: payment_inquiry
  endpoint:
    path: /api/payment-inquiry
    method: POST
    data_selector: data
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params:
      merchantID: JT04
      invoiceNo: '180920091803'
      description: V4 Test
      amount: '10'
      currencyCode: THB
      paymentChannel:
      - CC
      customerToken:
      - '28052010234224845229'
- name: payment_option
  endpoint:
    path: /api-payment-option
    method: POST
    data_selector: paymentToken
    params:
      paymentToken: kSAops9Zwhos8hSTSeLTUan0njYf92g2LsyeEPOMzMzvNhmv58XaUFMcCJnjd2ex+MigQbmdvEUzhzbbzvHi2YTRKgLGjT9fWQIrqtp/QqA=
      locale: en
      clientID: 30c7cf51-75c4-4265-a70a-effddfbbb0ff
- name: payment_option_details
  endpoint:
    path: /api-payment-option-details
    method: POST
    data_selector: paymentToken
    params:
      categoryCode: GCARD
      groupCode: CC
      paymentToken: kSAops9Zwhos8hSTSeLTUan0njYf92g2LsyeEPOMzMzvNhmv58XaUFMcCJnjd2ex+MigQbmdvEUzhzbbzvHi2YTRKgLGjT9fWQIrqtp/QqA=
      locale: en
      clientID: 30c7cf51-75c4-4265-a70a-effddfbbb0ff
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details#section-payment-option-details-response
    method: GET
    data_selector: channels
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment#section-do-payment-request
    method: POST
    data_selector: payment
    params: {}
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
    data_selector: respCode
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
    data_selector: respDesc
    params: {}
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry#section-payment-inquiry-request
    method: POST
    data_selector: invoiceNo
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option
  endpoint:
    path: /api-payment-option
    method: POST
    data_selector: merchantDetails
    params: {}
- name: payment_option_details
  endpoint:
    path: /api-payment-option-details
    method: POST
    data_selector: transactionDetails
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details#section-payment-option-details-response
    method: GET
    data_selector: channels
    params: {}
- name: Do Payment Request
  endpoint:
    path: /docs/api-do-payment#section-do-payment-request
    method: POST
    data_selector: payment
    params: {}
- name: Payment Inquiry Request
  endpoint:
    path: /docs/api-payment-inquiry#section-payment-inquiry-request
    method: POST
    data_selector: paymentInquiry
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /api/payment/token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option
  endpoint:
    path: /api/payment/option
    method: POST
    data_selector: merchantDetails
    params: {}
- name: payment_option_details
  endpoint:
    path: /api/payment/option/details
    method: POST
    data_selector: channelCategories
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details#section-payment-option-details-response
    method: GET
    data_selector: channels
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment#section-do-payment-request
    method: POST
    data_selector: payment
    params: {}
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
    data_selector: data
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
    data_selector: locale
    params: {}
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry#section-payment-inquiry-request
    method: POST
    data_selector: tranRef
    params: {}
- name: Payment Inquiry
  endpoint:
    path: /docs/payment-maintenance-inquiry-guide
    method: GET
- name: Void / Cancel
  endpoint:
    path: /docs/payment-maintenance-void-guide
    method: GET
- name: Settle Payment
  endpoint:
    path: /docs/payment-maintenance-settle-guide
    method: GET
- name: Refund
  endpoint:
    path: /docs/payment-maintenance-refund-guide
    method: GET
- name: Refund Status Inquiry
  endpoint:
    path: /docs/payment-maintenance-refund-status-guide
    method: GET
- name: Card Tokenization
  endpoint:
    path: /docs/payment-maintenance-card-token-guide
    method: GET
- name: RPP Maintenance
  endpoint:
    path: /docs/payment-maintenance-recurring-payment-guide
    method: GET
- name: IPP Options Inquiry
  endpoint:
    path: /docs/payment-maintenance-ipp-guide
    method: GET
- name: FX Rate Inquiry
  endpoint:
    path: /docs/payment-maintenance-fx-rate-inquiry-guide
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: Payment Inquiry
  endpoint:
    path: /PaymentAction/2.0/action
    method: POST
    data_selector: PaymentProcessRequest
- name: payment_process_response
  endpoint:
    path: /payment/inquiry
    method: GET
    data_selector: PaymentProcessResponse
- name: payment_inquiry
  endpoint:
    path: /payment/inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payment_inquiry
  endpoint:
    path: /2C2PFrontend/PaymentAction/2.0/action
    method: POST
- name: refund
  endpoint:
    path: /refund
    method: POST
    data_selector: data
    params: {}
- name: payout
  endpoint:
    path: /payout
    method: POST
    data_selector: data
    params: {}
- name: PaymentProcessResponse
  endpoint:
    path: /payment/inquiry
    method: POST
    data_selector: PaymentProcessResponse
    params: {}
- name: refund_request
  endpoint:
    path: /PaymentAction/2.0/action
    method: POST
    data_selector: PaymentProcessRequest
- name: refund
  endpoint:
    path: /refund
    method: POST
    data_selector: data
    params: {}
- name: refund_response
  endpoint:
    path: /path/to/refund/response
    method: GET
    data_selector: PaymentProcessResponse
    params: {}
- name: refund_notification
  endpoint:
    path: /path/to/refund/notification
    method: POST
    data_selector: notifyResponse
    params: {}
- name: refund_request
  endpoint:
    path: /PaymentAction/2.0/action
    method: POST
    data_selector: PaymentProcessRequest
- name: refund_response
  endpoint:
    path: /docs/api-payment-action-payment-process#response-parameter
    method: POST
    data_selector: PaymentProcessResponse
    params: {}
- name: refund_notification
  endpoint:
    path: /docs/payment-maintenance-refund-status-guide
    method: POST
    data_selector: notifyResponse
    params: {}
- name: Void / Cancel
  endpoint:
    path: /api/payment-action
    method: POST
    data_selector: PaymentProcessRequest
    params: {}
- name: void_transaction
  endpoint:
    path: /api/softpos/void
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: void_cancel_response
  endpoint:
    path: /void/cancel/response
    method: GET
    data_selector: PaymentProcessResponse
    params: {}
- name: Void / Cancel
  endpoint:
    path: /api-payment-action-payment-process
    method: POST
    data_selector: PaymentProcessRequest
    params: {}
- name: PaymentProcessResponse
  endpoint:
    path: /docs/payment-action-payment-process
    method: GET
    data_selector: PaymentProcessResponse
- name: settle_request
  endpoint:
    path: /2C2PFrontend/PaymentAction/2.0/action
    method: POST
    data_selector: PaymentProcessRequest
    params: {}
- name: settle_response
  endpoint:
    path: /settle/response
    method: POST
    data_selector: PaymentProcessResponse
    params: {}
- name: settle_payment
  endpoint:
    path: /payment/settle
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: settle_response
  endpoint:
    path: /settle/response
    method: POST
    data_selector: PaymentProcessResponse
- name: refund_status_request
  endpoint:
    path: /2C2PFrontend/PaymentAction/2.0/action
    method: POST
    data_selector: PaymentProcessRequest
    params: {}
- name: refund_status_inquiry
  endpoint:
    path: /refund/status/inquiry
    method: GET
- name: refund_status
  endpoint:
    path: /refund/status
    method: GET
    data_selector: refundList
- name: refund_status
  endpoint:
    path: /PaymentAction/2.0/action
    method: POST
    data_selector: PaymentProcessRequest
    params: {}
- name: refund_status
  endpoint:
    path: /refund-status
    method: GET
    data_selector: PaymentProcessResponse
    params: {}
- name: customer_token
  endpoint:
    path: /customer/token
    method: GET
    data_selector: records
- name: add_customer_token
  endpoint:
    path: /customertoken/3.0/CustomerToken/add
    method: POST
- name: add_customer_token
  endpoint:
    path: /customertoken/3.0/CustomerToken/add
    method: POST
    data_selector: data
    params: {}
- name: add_customer_token
  endpoint:
    path: /add
    method: POST
    data_selector: responseData
- name: update_customer_token
  endpoint:
    path: /update
    method: POST
    data_selector: responseData
- name: add_customer_token_response
  endpoint:
    path: /add_customer_token_response
    method: POST
    data_selector: response
    params: {}
- name: update_customer_token_request
  endpoint:
    path: /update_customer_token_request
    method: POST
    data_selector: request
    params: {}
- name: update_customer_token_response
  endpoint:
    path: /update_customer_token_response
    method: POST
    data_selector: response
    params: {}
- name: inquiry_customer_token_response
  endpoint:
    path: /inquiry_customer_token_response
    method: POST
    data_selector: response
    params: {}
- name: update_customer_token
  endpoint:
    path: /customertoken/3.0/CustomerToken/get
    method: POST
    data_selector: response
    params: {}
- name: inquiry_customer_token
  endpoint:
    path: /customertoken/3.0/CustomerToken/get
    method: POST
    data_selector: response
    params: {}
- name: delete_customer_token
  endpoint:
    path: /customertoken/3.0/CustomerToken/delete
    method: POST
    data_selector: ''
    params: {}
- name: delete_customer_token
  endpoint:
    path: /customertoken/3.0/CustomerToken/delete
    method: POST
    data_selector: response
    params: {}
- name: payment
  endpoint:
    path: /api/payment
    method: POST
    data_selector: data
    params: {}
- name: payout
  endpoint:
    path: /api/payout
    method: POST
    data_selector: data
    params: {}
- name: recurring_payment_inquiry_request
  endpoint:
    path: /docs/api-payment-action-recurring-maintenance#recurring-inquiry-request-parameter
    method: POST
    data_selector: encrypted_request_data
    params: {}
- name: recurring_payment_inquiry_response
  endpoint:
    path: /recurring/payment/inquiry/response
    method: GET
    data_selector: RecurringMaintenanceResponse
    params: {}
- name: recurring_payment_inquiry_response
  endpoint:
    path: /recurring/payment/inquiry
    method: POST
    data_selector: RecurringMaintenanceResponse
    params: {}
- name: update_recurring_payment
  endpoint:
    path: /2C2PFrontend/PaymentAction/2.0/action
    method: POST
    data_selector: responseData
    params: {}
- name: Update Recurring Payment Request
  endpoint:
    path: /2C2PFrontend/PaymentAction/2.0/action
    method: POST
    data_selector: encrypted_request_data
    params: {}
- name: Update Recurring Payment Response
  endpoint:
    path: /2C2PFrontend/PaymentAction/2.0/action
    method: POST
    data_selector: encrypted_response_data
    params: {}
- name: cancel_recurring_payment
  endpoint:
    path: /2C2PFrontend/PaymentAction/2.0/action
    method: POST
    data_selector: Cancel Response Data
    params: {}
- name: cancel_recurring_payment
  endpoint:
    path: /recurring/cancel
    method: POST
    data_selector: Encrypted Cancel Request Data
- name: cancel_recurring_payment_response
  endpoint:
    path: /recurring/cancel/response
    method: GET
    data_selector: Cancel Response Data
- name: installment_payment_plan_options
  endpoint:
    path: /payment-maintenance/ipp-options-inquiry
    method: GET
- name: installment_payment_plan_options
  endpoint:
    path: /payment-maintenance/ipp-options-inquiry
    method: GET
- name: ippBanks
  endpoint:
    path: /IppOptionResponse
    method: GET
    data_selector: ippBanks
    params: {}
- name: encrypted_response_data
- name: ippBanks
  endpoint:
    path: /IppOptionResponse
    method: GET
    data_selector: ippBanks
    params: {}
- name: foreign_exchange_rate_inquiry
  endpoint:
    path: /v4.5.0/foreign-exchange-rate
    method: GET
    data_selector: data
- name: Beneficiary Registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: Beneficiary Inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: Payout Request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: response
    params: {}
- name: Payout Inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: FX Rate Inquiry
  endpoint:
    path: /PaymentAction/2.0/action
    method: POST
    data_selector: FX Rate Inquiry Request Data
- name: FX Rate Inquiry
  endpoint:
    path: /PaymentAction/2.0/action
    method: POST
    data_selector: FxRateRequest
- name: FX Rate Inquiry Response
  endpoint:
    path: /2C2PFrontend/PaymentAction/2.0/action
    method: POST
    data_selector: FxRateResponse
- name: FX Rate List Inquiry Request
  endpoint:
    path: /2C2PFrontend/PaymentAction/2.0/action
    method: POST
    data_selector: FxRateListRequest
- name: fx_rate_list
  endpoint:
    path: /fx-rate-list
    method: GET
    data_selector: currencyList
    params: {}
- name: fx_rate_response
  endpoint:
    path: /fx-rate-response
    method: POST
    data_selector: FxRateResponse
- name: fx_rate_list_request
  endpoint:
    path: /fx-rate-list-request
    method: POST
    data_selector: FxRateListRequest
- name: fx_rate_list
  endpoint:
    path: /fx-rate-list
    method: GET
    data_selector: currencyList
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: withdraw_option
  endpoint:
    path: /withdrawOption
    method: POST
    data_selector: withdrawOption
    params: {}
- name: withdraw
  endpoint:
    path: /withdraw
    method: POST
    data_selector: withdraw
    params: {}
- name: withdraw_response
  endpoint:
    path: /withdraw/response
    method: GET
    data_selector: respDesc
    params: {}
- name: withdraw_option
  endpoint:
    path: /withdrawOption
    method: POST
- name: withdraw
  endpoint:
    path: /withdraw
    method: POST
- name: balance_inquiry
  endpoint:
    path: /payment-maintenance/balance-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: withdraw_response
  endpoint:
    path: /withdraw/response
    method: GET
    data_selector: withdrawResponse
    params: {}
- name: balance_inquiry
  endpoint:
    path: /paymentaction/2.0/balanceInquiry
    method: POST
    data_selector: availableBalance
    params: {}
- name: balance_inquiry
  endpoint:
    path: /payment-maintenance/balance-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: balance_inquiry
  endpoint:
    path: /paymentaction/2.0/balanceInquiry
    method: POST
    data_selector: response
    params: {}
- name: agent_status_inquiry
  endpoint:
    path: /AgentStatus/v1/Inquiry
    method: POST
    data_selector: agents
    params: {}
- name: InquiryEnabledAgents
  endpoint:
    path: /InquiryEnabledAgents
    method: POST
    data_selector: agents
    params:
      merchantID: '458458000000000'
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: agent_status_inquiry
  endpoint:
    path: /AgentStatus/v1/Inquiry
    method: POST
    data_selector: agents
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: InquiryEnabledAgents
  endpoint:
    path: /AgentStatus/v1/InquiryEnabledAgents
    method: POST
    data_selector: agents
- name: payment
  endpoint:
    path: /api/payment
    method: POST
    data_selector: payment_data
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: user_preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: card_token_information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: exchange_rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /api-payment-option
    method: GET
- name: payment_option_details
  endpoint:
    path: /api-payment-option-details
    method: GET
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /api-payment-inquiry
    method: GET
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: Payout Request
  endpoint:
    path: /create-payout
    method: POST
- name: Payout Inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /api/payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /api/payment-option
    method: GET
- name: payment_instruction
  endpoint:
    path: /api/payment-instruction
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_configuration
  endpoint:
    path: /docs/api-payment-configuration
    method: GET
    data_selector: attributes
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: payment
  endpoint:
    path: /api/payment
    method: POST
    data_selector: payment_response
    params:
      merchant_id: Merchant ID provided by 2C2P
      secret_key: Secret Key for authentication
      mode: Sandbox or Production
      stored_card_payment: Enable or disable stored card payments
      payment_expiry: Set the payment slip validity for the 123 alternative payment
        method
      language: Select the language for the payment gateway
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /api/payment
    method: POST
- name: transaction_status
  endpoint:
    path: /api/transaction/status
    method: GET
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: user_preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: card_token_information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: exchange_rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: exchange_rate_with_token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: payment_maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: customer_token_maintenance
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: card_installment_plan_info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: loyalty_point_info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
    data_selector: parameters
    params: {}
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
    data_selector: parameters
    params: {}
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
    data_selector: parameters
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment
  endpoint:
    path: /docs/api-payment-token
    method: GET
    data_selector: records
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
    data_selector: records
- name: transaction_status
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: records
- name: payment_module
  endpoint:
    path: /modules/payment
    method: POST
    data_selector: module
    params:
      merchant_id: Merchant ID provided by 2C2P
      secret_key: Secret Key for authentication
      mode: Sandbox or Production
      stored_card_payment: true or false
      payment_expiry: 123 Payment Expiry in hours
      language: Language for the payment gateway
- name: payment_option
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: registrationResponse
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: payoutResponse
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: user_preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: card_token_information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: exchange_rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: payment_maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: customer_token_maintenance
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: loyalty_point_info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: payment
  endpoint:
    path: /api/payment
    method: POST
    data_selector: payment_data
- name: transaction_status
  endpoint:
    path: /api/transaction/status
    method: GET
    data_selector: transaction_data
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payment_methods
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: transaction_status
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: quickpay_generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
    data_selector: data
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
    data_selector: data
- name: quickpay_update
  endpoint:
    path: /api-quickpay-update
    method: PUT
    data_selector: data
- name: quickpay_delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
    data_selector: data
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: payment_methods
  endpoint:
    path: /api/payment-methods
    method: GET
    data_selector: payment_methods
    params: {}
- name: transaction_status
  endpoint:
    path: /api/transaction-status
    method: GET
    data_selector: transaction_status
    params: {}
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: Payment Options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: Payment Option Details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: payout
  endpoint:
    path: /api/v4/payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payment_module
  endpoint:
    path: /docs/api-payment-option
    method: GET
    data_selector: payment_options
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: Payment Options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: Payment Option Details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: Payment Response (Backend)
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: Payment Response (Frontend)
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: Initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: User Preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: Card Token Information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: Exchange Rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: Exchange Rate With Token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: Payment Instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: Payment Maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: Customer Token Maintenance API
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: Card Installment Plan Info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: Loyalty Point Info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: payment_methods
  endpoint:
    path: /docs/api-payment-methods
    method: GET
    data_selector: methods
- name: transaction_status
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: status
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
    data_selector: records
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
    data_selector: records
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
    data_selector: records
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
    data_selector: records
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: records
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
    data_selector: records
- name: initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
    data_selector: records
- name: user_preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
    data_selector: records
- name: card_token_information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
    data_selector: records
- name: exchange_rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
    data_selector: records
- name: exchange_rate_with_token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
    data_selector: records
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
    data_selector: records
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: user_preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: card_token_information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: exchange_rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: user_preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: card_token_information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: exchange_rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: exchange_rate_with_token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: payment_maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: customer_token_maintenance
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: card_installment_plan_info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: loyalty_point_info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: quickpay_generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
    data_selector: response
    params: {}
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /v1/payout/request
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /v1/beneficiary/registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /api-payment-option
    method: GET
- name: payment_option_details
  endpoint:
    path: /api-payment-option-details
    method: GET
- name: payment_response_backend
  endpoint:
    path: /api-payment-response-backend
    method: GET
- name: payment_response_frontend
  endpoint:
    path: /api-payment-response-frontend
    method: GET
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /api-payment-inquiry
    method: GET
- name: initialization
  endpoint:
    path: /api-initialization
    method: GET
- name: user_preference
  endpoint:
    path: /api-user-preference
    method: GET
- name: card_token_information
  endpoint:
    path: /api-card-tokens-information
    method: GET
- name: exchange_rate
  endpoint:
    path: /api-exchange-rate
    method: GET
- name: exchange_rate_with_token
  endpoint:
    path: /api-exchange-rate-with-token
    method: GET
- name: payment_instruction
  endpoint:
    path: /api-payment-instruction
    method: GET
- name: payment_maintenance
  endpoint:
    path: /payment-action-api-spec
    method: GET
- name: customer_token_maintenance
  endpoint:
    path: /customer-token-maintenance-api
    method: GET
- name: card_installment_plan_info
  endpoint:
    path: /api-card-installment-plan-info
    method: GET
- name: loyalty_point_info
  endpoint:
    path: /loyalty-point-info-api
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: Payment UI
  endpoint:
    path: /docs/sdk-classes-payment-request#payment-ui
    method: POST
    data_selector: paymentUIRequest
    params: {}
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: paymentToken
- name: transaction_result
  endpoint:
    path: /payment/transaction/result
    method: POST
    data_selector: transactionResultResponse
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: Payment Options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: Payment Option Details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: Payment Response (Backend)
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: Payment Response (Frontend)
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: Initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: User Preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: Card Token Information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: Exchange Rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: Exchange Rate With Token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: Payment Instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: Payment Maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: Customer Token Maintenance API
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: Card Installment Plan Info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: Loyalty Point Info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /docs/sdk-classes-apis-interface#section-do-payment-request-api
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: payment_transaction_response
  endpoint:
    path: /docs/sdk-classes-apis-interface#section-do-payment-response-api
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payout
  endpoint:
    path: /payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /api/payment/token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status
  endpoint:
    path: /api/transaction/status
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /generate_payment_token
    method: POST
    data_selector: token
- name: payment_request
  endpoint:
    path: /process_payment
    method: POST
    data_selector: response
- name: transaction_request
  endpoint:
    path: /transaction_result
    method: POST
    data_selector: result
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: user_preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: card_token_information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: exchange_rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: payment_maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: customer_token_maintenance
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: loyalty_point_info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: payment_token
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transaction_status
    params: {}
- name: payment
  endpoint:
    path: /payment/execute
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: results
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: results
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: results
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: results
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: transactionResultResponse
    params: {}
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionDetails
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /generate_payment_token
    method: POST
    data_selector: response
    params: {}
- name: transaction_result
  endpoint:
    path: /execute_payment_ui_request
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
- name: transaction_status
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: response.token
    params:
      tokenize: 'true'
- name: transaction_request
  endpoint:
    path: /execute/payment
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: transaction_result
  endpoint:
    path: /docs/sdk-classes-apis-interface#section-do-payment-response-api
    method: GET
    data_selector: response
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: response.data
    params: {}
- name: transaction_request
  endpoint:
    path: /execute/payment/request
    method: POST
    data_selector: response.data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: GET
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
- name: payment_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResult
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: transactionResult
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: response
    params: {}
- name: customer_token
  endpoint:
    path: /set/customer/token
    method: POST
    data_selector: response
    params: {}
- name: transaction_request
  endpoint:
    path: /execute/payment/request
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: data
    params: {}
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /generatePaymentToken
    method: POST
    data_selector: token
- name: transaction_request
  endpoint:
    path: /executePayment
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: paymentToken
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: paymentRequest
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: transactionResultRequest
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /docs/sdk-classes-apis-interface#section-do-payment-request-api
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
- name: Payment Transaction
  endpoint:
    path: /docs/sdk-classes-apis-interface#section-do-payment-request-api
    method: POST
    data_selector: transactionResultRequest
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: response.token
    params: {}
- name: payment_request
  endpoint:
    path: /create/payment/request
    method: POST
    data_selector: response.request
    params: {}
- name: transaction_request
  endpoint:
    path: /execute/payment/request
    method: POST
    data_selector: response.result
    params: {}
- name: payment_token
  endpoint:
    path: /1/generatePaymentToken
    method: POST
    data_selector: null
    params: {}
- name: tokenization
  endpoint:
    path: /1/enableTokenization
    method: POST
    data_selector: null
    params: {}
- name: transaction_request
  endpoint:
    path: /1/transactionRequest
    method: POST
    data_selector: null
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: GET
    data_selector: records
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: records
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: records
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: records
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: token
    params: {}
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: paymentToken
- name: recurring_payment_plan
  endpoint:
    path: /create/recurring/payment/plan
    method: POST
    data_selector: recurringPaymentPlan
- name: transaction_request
  endpoint:
    path: /execute/payment/request
    method: POST
    data_selector: transactionResult
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResultResponse
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: paymentToken
- name: customer_token
  endpoint:
    path: /set/customer/token
    method: POST
    data_selector: customerToken
- name: payment_request
  endpoint:
    path: /execute/payment/request
    method: POST
    data_selector: transactionResultResponse
- name: transaction_result
  endpoint:
    path: /proceedTransaction
    method: POST
    data_selector: response
    params:
      paymentToken: roZG9I1hk/GYjNt+BYPYbxQtKElbZDs9M5cXuEbE+Z0QTr/yUcl1oG7t0AGoOJlBhzeyBtf5mQi1UqGbjC66E85S4m63CfV/awwNbbLbkxsvfgzn0KSv7JzH3gcs/OIL
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: token
    params: {}
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: transactionResult
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api-payment-request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: data
    params: {}
- name: refund
  endpoint:
    path: /refund
    method: POST
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: response.data
    params:
      payment_token: paymentToken
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params:
      merchantID: JT04
      invoiceNo: '1595219400'
      description: 2 days 1 night hotel room
      amount: 10.0
      currencyCode: THB
      nonceStr: a8092512-b144-41b0-8284-568bb5e9264c
      paymentChannel:
      - LCARDIPP
      request3DS: Y
      installmentPeriodFilter:
      - 6
      interestType: M
      productCode: ProductA
      promotionCode: PromoA
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: token
    params: {}
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: request
    params: {}
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: transaction
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: paymentToken
    params: {}
- name: pay_at_counter
  endpoint:
    path: /pay/at/counter
    method: POST
    data_selector: response
    params: {}
- name: Beneficiary Registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: Payout Request
  endpoint:
    path: /create-payout
    method: POST
- name: recurring_payment_plan
  endpoint:
    path: /recurring_payment_plan
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_request
  endpoint:
    path: /docs/sdk-classes-apis-interface#section-do-payment-request-api
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: Generate Payment Token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params:
      merchantID: JT04
      invoiceNo: '1595219400'
      description: 2 days 1 night hotel room
      amount: 10.0
      currencyCode: THB
      nonceStr: a8092512-b144-41b0-8284-568bb5e9264c
      paymentChannel:
      - GCARD
      request3DS: Y
      recurring: true
      invoicePrefix: demo1596431482
      recurringAmount: 1.0
      recurringInterval: 5
      recurringCount: 3
      allowAccumulate: true
      maxAccumulateAmount: 10.0
      chargeNextDate: '04122020'
- name: Do Payment
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: Transaction Status Inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: data
- name: recurring_payment_plan
  endpoint:
    path: /payment/recurring-plan
    method: POST
    data_selector: data
- name: transaction_request
  endpoint:
    path: /payment/transaction
    method: POST
    data_selector: data
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: Payment Request
  endpoint:
    path: /docs/sdk-classes-payment-request#online-direct-debit-payment-odd
    method: GET
- name: Do Payment
  endpoint:
    path: /docs/sdk-classes-apis-interface#section-do-payment-request-api
    method: GET
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: response
    params: {}
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: response
    params: {}
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: response
    params: {}
- name: payment_execution
  endpoint:
    path: /proceedTransaction
    method: POST
    data_selector: response
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /transactionStatusInquiry
    method: GET
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /docs/sdk-classes-payment-request#deep-link-payment-deeplink
    method: POST
    data_selector: paymentRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment
  endpoint:
    path: /proceedTransaction
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
- name: payment_request
  endpoint:
    path: /api-payment-request
    method: POST
    data_selector: paymentRequest
- name: transaction_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionRequest
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment
  endpoint:
    path: /v4/payment
    method: POST
    data_selector: data
    params: {}
- name: refund
  endpoint:
    path: /v4/refund
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
- name: payment_request
  endpoint:
    path: /docs/sdk-classes-payment-request
    method: POST
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PATCH
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: QuickPay Generate and Send Link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: token
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: request
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: transaction
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /docs/sdk-classes-payment-request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: transaction_request
  endpoint:
    path: /docs/sdk-classes-apis-interface#section-do-payment-request-api
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /generate_payment_token
    method: POST
    data_selector: paymentToken
- name: payment_request
  endpoint:
    path: /create_payment_request
    method: POST
    data_selector: paymentRequest
- name: transaction_request
  endpoint:
    path: /execute_transaction
    method: POST
    data_selector: transactionResultRequest
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: GET
    data_selector: records
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: records
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: records
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: records
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: Generate Payment Token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: Receive Payment Token Response
  endpoint:
    path: /api-payment-token-response
    method: GET
    data_selector: paymentToken
    params: {}
- name: Prepare Payment Request
  endpoint:
    path: /api-payment-request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: Prepare Transaction Request
  endpoint:
    path: /api-transaction-request
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: Receive Transaction Request Response
  endpoint:
    path: /api-transaction-response
    method: GET
    data_selector: transactionResponse
    params: {}
- name: Initiate Transaction Status Inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /generate_payment_token
    method: POST
    data_selector: response.token
- name: payment_request
  endpoint:
    path: /construct_payment_request
    method: POST
    data_selector: response.request
- name: transaction_request
  endpoint:
    path: /execute_payment
    method: POST
    data_selector: response.transaction_result
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: response.token
    params: {}
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: response.request
    params: {}
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: response.transaction
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /api/payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api/do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api/transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
    data_selector: paymentProvider
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: Beneficiary Registration
  endpoint:
    path: /docs/beneficiary-registration
    method: GET
- name: Payout Request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payment_option_details
  endpoint:
    path: /paymentOptionDetails
    method: GET
    data_selector: channels
    params: {}
- name: apple_pay_payment
  endpoint:
    path: /applePayPayment
    method: POST
    data_selector: response
    params: {}
- name: transaction_result
  endpoint:
    path: /transactionResult
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
- name: payment_request
  endpoint:
    path: /docs/sdk-classes-payment-request#web-payment-webpay
    method: POST
- name: transaction_request
  endpoint:
    path: /docs/sdk-classes-apis-interface#section-do-payment-request-api
    method: POST
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: token
- name: web_payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: request
- name: transaction_request
  endpoint:
    path: /payment/transaction
    method: POST
    data_selector: transaction
- name: Payout Request
  endpoint:
    path: /create-payout
    method: POST
- name: Beneficiary Registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: Beneficiary Inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: Payment Option Details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
    data_selector: paymentProvider
    params: {}
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_provider_info
  endpoint:
    path: /payment/option/details
    method: GET
    data_selector: channels
    params: {}
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: response
    params: {}
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: token
- name: payment_request
  endpoint:
    path: /process/payment
    method: POST
    data_selector: paymentResult
- name: transaction_request
  endpoint:
    path: /transaction/result
    method: POST
    data_selector: transactionResult
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
- name: payment_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResultRequest
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: GET
    data_selector: records
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: records
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: records
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: records
    params: {}
- name: generate_payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResultResponse
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionDetails
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /docs/sdk-classes-payment-request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: response.token
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: response.request
    params: {}
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: response.transaction
    params: {}
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: data
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: data
- name: transaction_result
  endpoint:
    path: /transaction/result
    method: POST
    data_selector: data
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: payout
  endpoint:
    path: /payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: payment token
    params: {}
- name: payment_option_details
  endpoint:
    path: /api-payment-option-details
    method: GET
    data_selector: payment provider info
    params: {}
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transaction result
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transaction status
    params: {}
- name: payment_option_details
  endpoint:
    path: /PaymentOptionDetails
    method: GET
    data_selector: channels
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
    data_selector: paymentProvider
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: transactionResultResponse
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionDetails
    params: {}
- name: Beneficiary Registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: Beneficiary Inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: Payout Request
  endpoint:
    path: /create-payout
    method: POST
- name: Payout Inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
- name: payment_request
  endpoint:
    path: /docs/sdk-classes-payment-request
    method: POST
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
- name: payment_provider_info
  endpoint:
    path: /payment_option_details
    method: GET
    data_selector: channels
- name: google_pay_payment
  endpoint:
    path: /proceed_google_pay_payment
    method: POST
    data_selector: response
- name: transaction_request
  endpoint:
    path: /proceed_transaction
    method: POST
    data_selector: response
- name: payment_token
  endpoint:
    path: /generate_payment_token
    method: POST
    data_selector: token
    params: {}
- name: payment_request
  endpoint:
    path: /payment_request
    method: POST
    data_selector: request
    params: {}
- name: transaction_request
  endpoint:
    path: /transaction_request
    method: POST
    data_selector: transaction
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: create_payout
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /api/payment-token
    method: POST
    data_selector: paymentToken
    params:
      merchantID: JT08
      invoiceNo: '1595219400'
      description: 2 days 1 night hotel room
      amount: 10.0
      currencyCode: VND
      nonceStr: a8092512-b144-41b0-8284-568bb5e9264c
      paymentChannel:
      - DPAY
- name: do_payment
  endpoint:
    path: /api/do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_request_response
  endpoint:
    path: /docs/sdk-helper-apis-interface#section-zalo-pay-payment-result-response
    method: GET
    data_selector: response
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payment
  endpoint:
    path: /proceedTransaction
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /process/payment
    method: POST
    data_selector: data
    params: {}
- name: transaction_request
  endpoint:
    path: /execute/transaction
    method: POST
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: beneficiaryRegistration
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: payoutRequest
    params: {}
- name: Payment Token
  endpoint:
    path: /api-payment-token
    method: GET
    data_selector: paymentToken
    params: {}
- name: Do Payment
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: Transaction Status Inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /docs/sdk-classes-payment-request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: transaction_request
  endpoint:
    path: /docs/sdk-classes-apis-interface
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: merchantID, invoiceNo, description, amount, currencyCode, nonceStr,
      paymentChannel
    params: {}
- name: Payment Request
  endpoint:
    path: /docs/sdk-classes-payment-request
    method: POST
    data_selector: paymentToken, paymentRequest
    params: {}
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionID
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: GET
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_request_response
  endpoint:
    path: /docs/sdk-helper-apis-interface#section-zalo-pay-payment-result-response
    method: GET
    data_selector: response
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: response
- name: payment
  endpoint:
    path: /proceedTransaction
    method: POST
    data_selector: response
    params: {}
- name: payout
  endpoint:
    path: /payout
    method: POST
    data_selector: data
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api-payment-request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: transaction_request
  endpoint:
    path: /api-transaction-request
    method: POST
    data_selector: transactionRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: QuickPay Generate Link
  endpoint:
    path: /api/quickpay/generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api/quickpay/query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api/quickpay/update
    method: PUT
- name: QuickPay Delete
  endpoint:
    path: /api/quickpay/delete
    method: DELETE
- name: payment_token
  endpoint:
    path: /generate_payment_token
    method: POST
    data_selector: response
    params: {}
- name: payment_request
  endpoint:
    path: /create_payment_request
    method: POST
    data_selector: response
    params: {}
- name: transaction_request
  endpoint:
    path: /execute_transaction
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api-payment-request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: transaction_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
- name: payment_request
  endpoint:
    path: /construct/payment/request
    method: POST
- name: transaction_request
  endpoint:
    path: /execute/payment/request
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /docs/sdk-classes-payment-request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: transaction_request
  endpoint:
    path: /docs/sdk-classes-apis-interface#section-do-payment-request-api
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: Payment Token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: Payment Request
  endpoint:
    path: /sdk-classes-payment-request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: Transaction Request
  endpoint:
    path: /sdk-classes-apis-interface
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: Transaction Status Inquiry
  endpoint:
    path: /api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: token
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: request
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: transaction
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
- name: payment_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: paymentRequest
- name: transaction_status
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: response
    params: {}
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResultResponse
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: transactionResultResponse
    params: {}
- name: payment_request
  endpoint:
    path: /prepare/payment/request
    method: POST
    data_selector: transactionResultResponse
    params: {}
- name: transaction_request
  endpoint:
    path: /execute/payment/request
    method: POST
    data_selector: transactionResultResponse
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: quickpay_generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
    data_selector: data
    params: {}
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
    data_selector: data
    params: {}
- name: quickpay_update
  endpoint:
    path: /api-quickpay-update
    method: PUT
    data_selector: data
    params: {}
- name: quickpay_delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /api/payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api/payment-request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api/transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResultResponse
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment
  endpoint:
    path: /payment/transaction
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /docs/sdk-classes-payment-request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: token
    params: {}
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: request
    params: {}
- name: transaction_result
  endpoint:
    path: /payment/transaction/result
    method: POST
    data_selector: result
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResult
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_inquiry
  endpoint:
    path: /api-payment-inquiry
    method: GET
    data_selector: paymentInquiry
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: response
    params: {}
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: response
    params: {}
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: response
    params: {}
- name: transaction_status
  endpoint:
    path: /transaction/status
    method: GET
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: token
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: request
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: transaction
- name: Beneficiary Registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: Beneficiary Inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /api/payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /api/do-payment
    method: POST
    data_selector: transactionResult
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api/transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: transactionResultResponse
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /api/payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status
  endpoint:
    path: /api/transaction-status
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /docs/sdk-classes-payment-request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: transaction_request
  endpoint:
    path: /docs/sdk-classes-apis-interface
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
- name: payment_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResultRequest
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionDetails
    params: {}
- name: quickpay
  endpoint:
    path: /quickpay
    method: POST
    data_selector: data
    params: {}
- name: payout
  endpoint:
    path: /payout
    method: POST
    data_selector: data
    params: {}
- name: quickpay_generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: quickpay_update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: quickpay_delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: quickpay_send_link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: payment_token
  endpoint:
    path: /api/payment-token
    method: POST
    data_selector: paymentToken
- name: transaction_status_inquiry
  endpoint:
    path: /api/transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api-payment-request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: data
    params: {}
- name: digital_currency_request
  endpoint:
    path: /payment/digital_currency
    method: POST
    data_selector: data
    params: {}
- name: transaction_request
  endpoint:
    path: /payment/transaction
    method: POST
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: response
    params: {}
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
    data_selector: data
    params: {}
- name: transaction_result
  endpoint:
    path: /proceedTransaction
    method: POST
    data_selector: response
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /transactionStatusInquiry
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: data
- name: third_party_payment_request
  endpoint:
    path: /third/party/payment/request
    method: POST
    data_selector: data
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: data
- name: transaction_status_inquiry
  endpoint:
    path: /transaction/status/inquiry
    method: GET
    data_selector: data
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /docs/sdk-classes-payment-request
    method: GET
    data_selector: paymentRequest
    params: {}
- name: transaction_request
  endpoint:
    path: /docs/sdk-classes-apis-interface
    method: GET
    data_selector: transactionResultRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params:
      merchantID: JT04
      invoiceNo: '1595219400'
      description: 2 days 1 night hotel room
      amount: 10.0
      currencyCode: THB
      nonceStr: a8092512-b144-41b0-8284-568bb5e9264c
      paymentChannel:
      - GBNPL
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment
  endpoint:
    path: /proceedTransaction
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option
  endpoint:
    path: /docs/api-payment-option
    method: POST
    data_selector: paymentOptionResponse
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payment_option
  endpoint:
    path: /paymentOption
    method: POST
    data_selector: response
    params: {}
- name: payment_option_details
  endpoint:
    path: /payment/option/details
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /api/payment/token
    method: POST
    data_selector: paymentToken
- name: payment_option_detail
  endpoint:
    path: /api/payment/option/detail
    method: POST
    data_selector: paymentOptionDetailResponse
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResultRequest
    params: {}
- name: payment
  endpoint:
    path: /api/payment
    method: POST
    data_selector: data
    params: {}
- name: payout
  endpoint:
    path: /api/payout
    method: POST
    data_selector: data
    params: {}
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /api/payment/token
    method: POST
    data_selector: token
    params: {}
- name: do_payment
  endpoint:
    path: /api/do/payment
    method: POST
    data_selector: paymentResult
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api/transaction/status/inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: Beneficiary Registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: Beneficiary Inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: Payout Request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: Payout Inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payment_transaction
  endpoint:
    path: /proceedTransaction
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: transactionResultResponse
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: transaction_status
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /api-payment-inquiry
    method: GET
- name: transaction_status
  endpoint:
    path: /transaction-status
    method: POST
    data_selector: response
    params:
      paymentToken: string
      additionalInfo: boolean
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: response
    params: {}
- name: third_party_payment
  endpoint:
    path: /payment/third-party
    method: POST
    data_selector: response
    params: {}
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: response
    params: {}
- name: system_initialization
  endpoint:
    path: /api/system_initialization
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /docs/sdk-classes-payment-request
    method: POST
    data_selector: paymentRequest
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: payment_token
  endpoint:
    path: /api/payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: customer_token_info
  endpoint:
    path: /api/customer-token-info
    method: POST
    data_selector: customerTokenInfo
    params: {}
- name: customer_token_info
  endpoint:
    path: /customer/token/info
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /generate/payment/token
    method: POST
    data_selector: token
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: request
- name: transaction_request
  endpoint:
    path: /transaction/request
    method: POST
    data_selector: transaction
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /api/payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_option
  endpoint:
    path: /api/payment-option
    method: POST
    data_selector: paymentOptionResponse
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: exchange_rate
  endpoint:
    path: /api-exchange-rate
    method: POST
    data_selector: exchangeRateResponse
    params: {}
- name: exchange_rate
  endpoint:
    path: /exchangeRate
    method: POST
    data_selector: response
    params:
      paymentToken: roZG9I1hk/GYjNt+BYPYbxQtKElbZDs9M5cXuEbE+Z0QTr/yUcl1oG7t0AGoOJlBhzeyBtf5mQi1UqGbjC66E85S4m63CfV/awwNbbLbkxsvfgzn0KSv7JzH3gcs/OIL
      bin: '411111'
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: quickpay_generate_link
  endpoint:
    path: /quickpay/generate-link
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: GET
    data_selector: paymentToken
- name: user_preference
  endpoint:
    path: /api-user-preference
    method: GET
    data_selector: userPreferenceResponse
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params:
      merchantID: JT04
      invoiceNo: '1595219400'
      description: 2 days 1 night hotel room
      amount: 10.0
      currencyCode: THB
      nonceStr: a8092512-b144-41b0-8284-568bb5e9264c
      paymentChannel:
      - ALL
- name: payment_option_detail
  endpoint:
    path: /docs/sdk-classes-apis-interface#section-payment-option-detail-request-api
    method: POST
    data_selector: paymentOptionDetailResponse
    params: {}
- name: payment_option_details
  endpoint:
    path: /paymentOptionDetail
    method: POST
    data_selector: response
    params: {}
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: Payment Notification
  endpoint:
    path: /docs/sdk-classes-apis-interface#section-payment-notification-request-api
    method: POST
    data_selector: paymentNotificationResponse
    params: {}
- name: payment_notification
  endpoint:
    path: /payment/notification
    method: POST
    data_selector: response
    params: {}
- name: payment
  endpoint:
    path: /api/payment
    method: POST
    data_selector: data
    params: {}
- name: refund
  endpoint:
    path: /api/refund
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /api-do-payment
    method: POST
    data_selector: response
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: transactionStatus
    params: {}
- name: cancel_transaction
  endpoint:
    path: /cancel-transaction
    method: POST
    data_selector: data
    params: {}
- name: refund
  endpoint:
    path: /refund
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: paymentToken
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: paymentRequest
- name: transaction_request
  endpoint:
    path: /payment/transaction
    method: POST
    data_selector: transactionResultRequest
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentTokenID
    params: {}
- name: cancel_transaction
  endpoint:
    path: /sdk-classes-apis-interface
    method: POST
    data_selector: cancelTransactionResponse
    params: {}
- name: cancel_transaction
  endpoint:
    path: /cancelTransaction
    method: POST
    data_selector: response
    params: {}
- name: loyalty_point_information
  endpoint:
    path: /sdk/api/loyalty-point-information
    method: GET
    data_selector: loyaltyPoints
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /v4/transaction/status/inquiry
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
- name: loyalty_point_info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: transaction_status
  endpoint:
    path: /api-transaction-status-inquiry
    method: POST
    data_selector: transactionStatusResponse
    params: {}
- name: payment_inquiry
  endpoint:
    path: /api-payment-inquiry
    method: POST
    data_selector: paymentInquiryResponse
    params: {}
- name: loyalty_point_info
  endpoint:
    path: /loyaltyPointInfo
    method: POST
    data_selector: response
    params:
      paymentToken: roZG9I1hk/GYjNt+BYPYbxQtKElbZDs9M5cXuEbE+Z0QTr/yUcl1oG7t0AGoOJlBhzeyBtf5mQi1UqGbjC66E85S4m63CfV/awwNbbLbkxsvfgzn0KSv7JzH3gcs/OIL
      providerId: DGC
- name: transaction_status
  endpoint:
    path: /transactionStatus
    method: POST
    data_selector: response
    params:
      paymentToken: string
      additionalInfo: boolean
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: system_initialization
  endpoint:
    path: /sdk-classes-apis-interface#section-system-initialization-request-api
    method: GET
    data_selector: response
    params: {}
- name: digital_payment
  endpoint:
    path: /api/payment/digital
    method: POST
    data_selector: paymentResponse
    params: {}
- name: qr_payment
  endpoint:
    path: /api/payment/qr
    method: POST
    data_selector: paymentResponse
    params: {}
- name: buy_now_pay_later_payment
  endpoint:
    path: /api/payment/bnpl
    method: POST
    data_selector: paymentResponse
    params: {}
- name: universal_payment
  endpoint:
    path: /api/payment/universal
    method: POST
    data_selector: paymentResponse
    params: {}
- name: loyalty_point_payment
  endpoint:
    path: /api/payment/loyalty
    method: POST
    data_selector: paymentResponse
    params: {}
- name: digital_currency_payment
  endpoint:
    path: /api/payment/dcurrency
    method: POST
    data_selector: paymentResponse
    params: {}
- name: customer_token
  endpoint:
    path: /v4/customer/token
    method: GET
    data_selector: data
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
    data_selector: paymentToken
    params: {}
- name: Customer Token Info
  endpoint:
    path: /docs/sdk-classes-apis-interface#section-customer-token-info-request-api
    method: GET
    data_selector: customerTokenInfo
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: customer_token_info
  endpoint:
    path: /customer/token/info
    method: POST
    data_selector: response
    params:
      paymentToken: roZG9I1hk/GYjNt+BYPYbxQtKElbZDs9M5cXuEbE+Z0QTr/yUcl1oG7t0AGoOJlBhzeyBtf5mQi1UqGbjC66E85S4m63CfV/awwNbbLbkxsvfgzn0KSv7JzH3gcs/OIL
- name: payment_option
  endpoint:
    path: /api/payment_option
    method: GET
- name: payment_option_detail
  endpoint:
    path: /api/payment_option_detail
    method: GET
- name: do_payment
  endpoint:
    path: /api/do_payment
    method: POST
- name: customer_token_info
  endpoint:
    path: /api/customer_token_info
    method: GET
- name: exchange_rate
  endpoint:
    path: /api/exchange_rate
    method: GET
- name: exchange_rate
  endpoint:
    path: /sdk/api/exchange-rate
    method: GET
    data_selector: records
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params:
      merchantID: JT04
      invoiceNo: '1595219400'
      description: 2 days 1 night hotel room
      amount: 10.0
      currencyCode: THB
      nonceStr: a8092512-b144-41b0-8284-568bb5e9264c
      paymentChannel:
      - ALL
- name: exchange_rate
  endpoint:
    path: /api-exchange-rate
    method: GET
    data_selector: exchangeRate
    params:
      bin: '411111'
- name: exchange_rate_response
  endpoint:
    path: /exchange-rate-response
    method: GET
    data_selector: fxRates
    params: {}
- name: user_preference_response
  endpoint:
    path: /user-preference-response
    method: GET
    data_selector: info
    params: {}
- name: transaction_status_response
  endpoint:
    path: /transaction-status-response
    method: GET
    data_selector: channelCode
    params: {}
- name: system_initialization_response
  endpoint:
    path: /system-initialization-response
    method: GET
    data_selector: initialization
    params: {}
- name: payment_notification_response
  endpoint:
    path: /payment-notification-response
    method: GET
    data_selector: responseCode
    params: {}
- name: cancel_transaction_response
  endpoint:
    path: /cancel-transaction-response
    method: GET
    data_selector: channelCode
    params: {}
- name: loyalty_point_info_response
  endpoint:
    path: /loyalty-point-info-response
    method: GET
    data_selector: paymentToken
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: data
    params: {}
- name: PaymentInfo
  endpoint:
    path: /payment/info
    method: GET
    data_selector: records
- name: PaymentInput
  endpoint:
    path: /payment/input
    method: GET
    data_selector: records
- name: PaymentNotification
  endpoint:
    path: /payment/notification
    method: GET
    data_selector: records
- name: PaymentRequest
  endpoint:
    path: /payment/request
    method: GET
    data_selector: records
- name: PaymentValidation
  endpoint:
    path: /payment/validation
    method: GET
    data_selector: records
- name: payment_token
  endpoint:
    path: /api/payment/token
    method: POST
- name: user_preference
  endpoint:
    path: /api/user/preference
    method: POST
- name: user_preference
  endpoint:
    path: /user/preference
    method: POST
    data_selector: response
    params: {}
- name: TransactionResultAdditionalInfo
  endpoint:
    path: /transaction/result/additional/info
    method: GET
    data_selector: records
- name: PaymentProvider
  endpoint:
    path: /payment/provider
    method: GET
    data_selector: records
- name: LoyaltyPoint
  endpoint:
    path: /loyalty/point
    method: GET
    data_selector: records
- name: LoyaltyPointReward
  endpoint:
    path: /loyalty/point/reward
    method: GET
    data_selector: records
- name: PaymentUIRequest
  endpoint:
    path: /payment/ui/request
    method: GET
    data_selector: records
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
- name: payment_notification
  endpoint:
    path: /api/payment/notification
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_notification
  endpoint:
    path: /docs/sdk-classes-apis-interface#section-payment-notification-request-api
    method: POST
    data_selector: paymentNotificationResponse
    params: {}
- name: payment_notification
  endpoint:
    path: /payment/notification
    method: POST
    data_selector: response
    params: {}
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: Payment Options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: Payment Option Details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: Payment Response (Backend)
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: Payment Response (Frontend)
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: Initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: User Preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: Card Token Information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: Exchange Rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: Exchange Rate With Token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: Payment Instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: Payment Maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: Customer Token Maintenance API
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: Card Installment Plan Info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: Loyalty Point Info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: cancel_transaction
  endpoint:
    path: /sdk-classes-apis-interface
    method: POST
    data_selector: cancelTransactionResponse
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: cancel_transaction
  endpoint:
    path: /cancelTransaction
    method: POST
    data_selector: response
    params:
      paymentToken: paymentToken
- name: loyalty_point_information
  endpoint:
    path: /sdk/api/loyalty-point-information
    method: GET
    data_selector: data
    params: {}
- name: Payment Provider Request
  endpoint:
    path: /docs/sdk-helper-apis-interface#section-payment-provider-request
    method: GET
    data_selector: records
- name: Deep Link Payment Result Response
  endpoint:
    path: /docs/sdk-helper-apis-interface#section-deep-link-payment-result-response
    method: GET
    data_selector: records
- name: Google Pay Payment Result Response
  endpoint:
    path: /docs/sdk-helper-apis-interface#section-google-pay-payment-result-response
    method: GET
    data_selector: records
- name: Apple Pay Payment Result Response
  endpoint:
    path: /docs/sdk-helper-apis-interface#section-apple-pay-payment-result-response
    method: GET
    data_selector: records
- name: ZaloPay Payment Result Response
  endpoint:
    path: /docs/sdk-helper-apis-interface#section-zalo-pay-payment-result-response
    method: GET
    data_selector: records
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: loyalty_point_info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: POST
    data_selector: loyaltyPointInfoResponse
    params: {}
- name: loyalty_point_info
  endpoint:
    path: /loyaltyPointInfo
    method: POST
    data_selector: response
    params:
      paymentToken: roZG9I1hk/GYjNt+BYPYbxQtKElbZDs9M5cXuEbE+Z0QTr/yUcl1oG7t0AGoOJlBhzeyBtf5mQi1UqGbjC66E85S4m63CfV/awwNbbLbkxsvfgzn0KSv7JzH3gcs/OIL
      providerId: DGC
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: GooglePayResult
  endpoint:
    path: /docs/api-google-pay-result
    method: GET
    data_selector: parameters
    params: {}
- name: ZaloPayResult
  endpoint:
    path: /docs/api-zalo-pay-result
    method: GET
    data_selector: parameters
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: Payment Options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: Payment Option Details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: Payment Response (Backend)
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: Payment Response (Frontend)
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: Initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: User Preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: Card Token Information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: Exchange Rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: Exchange Rate With Token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: Payment Instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: Payment Maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: Customer Token Maintenance API
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: Card Installment Plan Info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: Loyalty Point Info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: DeepLinkPaymentResponseCode
  endpoint:
    path: /docs/deep-link-payment-response-code
    method: GET
    data_selector: records
- name: GooglePayPaymentResponseCode
  endpoint:
    path: /docs/google-pay-payment-response-code
    method: GET
    data_selector: records
- name: ApplePayPaymentResponseCode
  endpoint:
    path: /docs/apple-pay-payment-response-code
    method: GET
    data_selector: records
- name: ZaloPayPaymentResponseCode
  endpoint:
    path: /docs/zalo-pay-payment-response-code
    method: GET
    data_selector: records
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
    data_selector: transactionResult
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
- name: payment_inquiry
  endpoint:
    path: /payment/inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary/inquiry
    method: GET
- name: payload
  endpoint:
    path: /payment/request
    method: POST
    data_selector: Payload
    params: {}
- name: payment_option
  endpoint:
    path: /sdk/payment/option
    method: GET
- name: payment_option_detail
  endpoint:
    path: /sdk/payment/option/detail
    method: GET
- name: do_payment
  endpoint:
    path: /sdk/payment/do
    method: POST
- name: customer_token_info
  endpoint:
    path: /sdk/customer/token/info
    method: GET
- name: exchange_rate
  endpoint:
    path: /sdk/exchange/rate
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: exchange_rate_response
  endpoint:
    path: /exchange-rate-response
    method: GET
    data_selector: fxRates
- name: user_preference_request
  endpoint:
    path: /user-preference-request
    method: POST
    data_selector: paymentToken
- name: transaction_status_request
  endpoint:
    path: /transaction-status-request
    method: POST
    data_selector: paymentToken
- name: system_initialization_request
  endpoint:
    path: /system-initialization-request
    method: POST
    data_selector: paymentToken
- name: payment_notification_request
  endpoint:
    path: /payment-notification-request
    method: POST
    data_selector: paymentToken
- name: cancel_transaction_request
  endpoint:
    path: /cancel-transaction-request
    method: POST
    data_selector: paymentToken
- name: loyalty_point_info_request
  endpoint:
    path: /loyalty-point-info-request
    method: POST
    data_selector: paymentToken
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: Payment Options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: Payment Option Details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: Exchange Rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: Merchant Info
  endpoint:
    path: /docs/api-merchant-info
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: PaymentInfo
  endpoint:
    path: /payment/info
    method: GET
    data_selector: paymentInfo
- name: PaymentInput
  endpoint:
    path: /payment/input
    method: GET
    data_selector: paymentInput
- name: PaymentNotification
  endpoint:
    path: /payment/notification
    method: GET
    data_selector: paymentNotification
- name: PaymentRequest
  endpoint:
    path: /payment/request
    method: POST
    data_selector: paymentRequest
- name: PaymentResultAdditionalInfo
  endpoint:
    path: /payment/result/additional-info
    method: GET
    data_selector: paymentResultAdditionalInfo
- name: PaymentValidation
  endpoint:
    path: /payment/validation
    method: GET
    data_selector: paymentValidation
- name: TransactionInfo
  endpoint:
    path: /transaction/info
    method: GET
    data_selector: transactionInfo
- name: UserPreference
  endpoint:
    path: /user/preference
    method: GET
    data_selector: userPreference
- name: payment
  endpoint:
    path: /v4/payment
    method: POST
    data_selector: data
    params: {}
- name: payout
  endpoint:
    path: /v4/payout
    method: POST
    data_selector: data
    params: {}
- name: TransactionResultAdditionalInfo
  endpoint:
    path: /TransactionResultAdditionalInfo
    method: GET
    data_selector: qrData, barcodeData, referenceNo, paymentExpiry
    params: {}
- name: PaymentProvider
  endpoint:
    path: /PaymentProvider
    method: GET
    data_selector: id, channels, merchantInfo, transactionInfo, terms, termsConsent,
      capabilities
    params: {}
- name: LoyaltyPoint
  endpoint:
    path: /LoyaltyPoint
    method: GET
    data_selector: providerId, accountNo, accountAuthData, redeemAmount, rewards,
      paymentScheme
    params: {}
- name: LoyaltyPointReward
  endpoint:
    path: /LoyaltyPointReward
    method: GET
    data_selector: sequenceNo, id, name, label, type, point, amount, currencyCode,
      quantity, price, totalPoints, totalAmount, totalPrice
    params: {}
- name: PaymentUIRequest
  endpoint:
    path: /PaymentUIRequest
    method: GET
    data_selector: activity, uiViewController
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
    data_selector: parameters
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
    data_selector: parameters
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
    data_selector: parameters
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: parameters
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: parameters
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transaction_status
- name: payment_request
  endpoint:
    path: /v4/payment/request
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /v4/payout/request
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: POST
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: Payment Options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: Payment Option Details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: Payment Response (Backend)
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: Payment Response (Frontend)
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: Initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: User Preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: Card Token Information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: Exchange Rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: Exchange Rate With Token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: Payment Instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: Payment Maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: Customer Token Maintenance API
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: Card Installment Plan Info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: Loyalty Point Info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: parameters
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: parameters
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: parameters
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: parameters
- name: payment_provider_request
  endpoint:
    path: /docs/sdk-helper-payment-request
    method: POST
- name: deep_link_payment_result_response
  endpoint:
    path: /docs/sdk-helper-payment-result-response
    method: GET
- name: google_pay_payment_result_response
  endpoint:
    path: /docs/sdk-helper-google-pay-result-response
    method: GET
- name: apple_pay_payment_result_response
  endpoint:
    path: /docs/sdk-helper-apple-pay-result-response
    method: GET
- name: zalopay_payment_result_response
  endpoint:
    path: /docs/sdk-helper-zalopay-result-response
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: GooglePayResult
  endpoint:
    path: /docs/api-google-pay-result
    method: GET
    data_selector: records
- name: ZaloPayResult
  endpoint:
    path: /docs/api-zalo-pay-result
    method: GET
    data_selector: records
- name: payout
  endpoint:
    path: /payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: quickpay_generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
    data_selector: data
    params: {}
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
    data_selector: data
    params: {}
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: POST
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: POST
- name: Payment Options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: result
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: result
    params: {}
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: encryptedCardInfo
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /payment/token
    method: GET
    data_selector: records
- name: payment_options
  endpoint:
    path: /payment/options
    method: GET
    data_selector: records
- name: transaction_status_inquiry
  endpoint:
    path: /payment/transaction/status
    method: GET
    data_selector: records
- name: Transaction Status Inquiry
  endpoint:
    path: /api-sdk-transaction-status-inquiry
    method: GET
    data_selector: transactionDetails
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: quickpay_generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: GET
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: quickpay_update
  endpoint:
    path: /api-quickpay-update
    method: POST
- name: quickpay_delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: quickpay_generate_and_send_link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: quickpay_send_link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: quickpay_generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
    data_selector: data
    params: {}
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
    data_selector: data
    params: {}
- name: quickpay_update
  endpoint:
    path: /api-quickpay-update
    method: PUT
    data_selector: data
    params: {}
- name: quickpay_delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-sdk-transaction-status-inquiry
    method: GET
    data_selector: response
    params: {}
- name: Generate Link
  endpoint:
    path: /2C2PFrontEnd/QuickPay/DirectAPI
    method: POST
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: QuickPay Generate and Send Link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: quickpay_generate_link
  endpoint:
    path: /api/quickpay/generate/link
    method: POST
    data_selector: data
    params: {}
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: QuickPay Generate and Send Link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: user_preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: card_token_information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: exchange_rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: exchange_rate_with_token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: payment_maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: customer_token_maintenance
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: card_installment_plan_info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: loyalty_point_info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: quickpay_generate_link
  endpoint:
    path: /api/quickpay/generate/link
    method: POST
    data_selector: data
    params: {}
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: quickpay_query
  endpoint:
    path: /QuickPay/DirectAPI
    method: POST
    data_selector: QPQueryRes
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: quickpay_query
  endpoint:
    path: /quickpay/query
    method: GET
    data_selector: data
    params: {}
- name: quickpay_generate_link
  endpoint:
    path: /quickpay/generate-link
    method: POST
    data_selector: data
    params: {}
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: POST
    data_selector: response
    params: {}
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: Beneficiary Registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: QuickPay Query
  endpoint:
    path: /docs/api-quickpay-query-request-parameter
    method: GET
    data_selector: parameters
    params: {}
- name: QuickPay Update
  endpoint:
    path: /QuickPay/DirectAPI
    method: POST
- name: QuickPay Update
  endpoint:
    path: /quickpay/update
    method: POST
- name: QuickPay Query
  endpoint:
    path: /quickpay/query
    method: POST
- name: QuickPay Delete
  endpoint:
    path: /quickpay/delete
    method: POST
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
    data_selector: parameters
- name: Payment Options
  endpoint:
    path: /docs/api-payment-option
    method: GET
    data_selector: parameters
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
    data_selector: parameters
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: parameters
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
    data_selector: parameters
- name: quickpay_update
  endpoint:
    path: /api/quickpay/update
    method: POST
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: quickpay_update
  endpoint:
    path: /api/quickpay/update
    method: POST
    data_selector: response
    params: {}
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: Payment Options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: User Preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: quickpay_delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: quickpay_generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: quickpay_update
  endpoint:
    path: /api-quickpay-update
    method: PATCH
- name: quickpay_send_link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: delete_request
  endpoint:
    path: /QuickPay/DirectAPI
    method: POST
    data_selector: QPDeleteReq
- name: delete_response
  endpoint:
    path: /QuickPay/DirectAPI
    method: POST
    data_selector: QPDeleteRes
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: encryptedCardInfo
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
    data_selector: parameters
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
    data_selector: parameters
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
    data_selector: parameters
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
    data_selector: parameters
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
    data_selector: parameters
- name: QuickPay Delete
  endpoint:
    path: /api/quickpay/delete
    method: DELETE
    data_selector: response
    params:
      version: '2.4'
      timeStamp: yyyyMMddHHmmss
      merchantID: AN 15
      qpID: N 10
      hashValue: AN 150
- name: quickpay_generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
    data_selector: data
    params: {}
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
    data_selector: data
    params: {}
- name: quickpay_delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
    data_selector: response
    params: {}
- name: quickpay_delete
  endpoint:
    path: /api/quickpay/delete
    method: POST
    data_selector: response
    params:
      version: '2.4'
      timeStamp: yyyyMMddHHmmss
      qpID: N 10
      resCode: N 3
      resDesc: AN 50
      hashValue: AN 150
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: paymentToken
- name: transaction_status
  endpoint:
    path: /transaction/status
    method: GET
    data_selector: transactionStatusInquiry
- name: payment_inquiry
  endpoint:
    path: /payment/inquiry
    method: GET
    data_selector: paymentInquiry
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: generate_quickpay_link
  endpoint:
    path: /api-quickpay-generate-link
    method: GET
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: quickpay_update
  endpoint:
    path: /api-quickpay-update
    method: GET
- name: quickpay_delete
  endpoint:
    path: /api-quickpay-delete
    method: GET
- name: generate_and_send_quickpay_link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: GET
- name: send_quickpay_link
  endpoint:
    path: /api-quickpay-send-link
    method: GET
- name: generate_send_link
  endpoint:
    path: /2C2PFrontEnd/QuickPay/DeliveryAPI
    method: POST
    data_selector: GenerateSendQPRes
- name: QuickPay Generate and Send Link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: POST
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: POST
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: POST
- name: QuickPay Generate and Send Link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: beneficiary
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: payout
    params: {}
- name: quickpay_generate_send_link
  endpoint:
    path: /api/quickpay-generate-and-send-link
    method: POST
    data_selector: response
    params:
      version: '2.4'
      timeStamp: yyyyMMddHHmmss
      currency: ISO4217
      amount: transaction amount
      expiry: yyyy-MM-dd HH:mm:ss
      url: QuickPay URL
      resCode: response status code
      resDesc: response status short description
      hashValue: HMACSHA1 cryptographic hash value
- name: generate_link
  endpoint:
    path: /QuickPay/DirectAPI
    method: POST
    data_selector: GenerateQPRes
- name: generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: generate_and_send_link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: send_link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: QuickPay Generate Link
  endpoint:
    path: /api/quickpay/generate/link
    method: POST
    data_selector: response
- name: send_link_request
  endpoint:
    path: /QuickPay/DeliveryAPI
    method: POST
    data_selector: QPSendReq
- name: send_link_response
  endpoint:
    path: /QuickPay/DeliveryAPI
    method: POST
    data_selector: QPSendRes
- name: generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
    data_selector: requestParameters
- name: query
  endpoint:
    path: /api-quickpay-query
    method: GET
    data_selector: requestParameters
- name: update
  endpoint:
    path: /api-quickpay-update
    method: PUT
    data_selector: requestParameters
- name: delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
    data_selector: requestParameters
- name: generate_and_send_link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
    data_selector: requestParameters
- name: send_link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
    data_selector: requestParameters
- name: generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
    data_selector: response
    params: {}
- name: query
  endpoint:
    path: /api-quickpay-query
    method: GET
    data_selector: response
    params: {}
- name: update
  endpoint:
    path: /api-quickpay-update
    method: PUT
    data_selector: response
    params: {}
- name: delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
    data_selector: response
    params: {}
- name: generate_and_send_link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
    data_selector: response
    params: {}
- name: send_link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
    data_selector: response
    params: {}
- name: QuickPayGenerateLink
  endpoint:
    path: /api/quickpay/generate-link
    method: POST
    data_selector: data
    params: {}
- name: QuickPay Send Link
  endpoint:
    path: /api/quickpay-send-link
    method: POST
    data_selector: response
    params:
      version: '2.4'
      timeStamp: yyyyMMddHHmmss
      merchantID: AN 15
      qpID: AN 10
      toEmails: AN 255
      ccEmails: AN 255
      bccEmails: AN 255
      emailSubject: AN 255
      emailMessage: AN 255
      toMobiles: AN 255
      smsMessage: AN 60
      hashValue: AN 150
- name: quickpay_send_link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: QuickPay Send Link
  endpoint:
    path: /api/quickpay/send-link
    method: POST
    data_selector: response
    params: {}
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /2C2PFrontEnd/QuickPay/DirectAPI
    method: POST
    data_selector: QPQueryRes
- name: quickpay_generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: quickpay_update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: quickpay_delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: quickpay_generate_and_send_link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: quickpay_send_link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: QuickPay Generate and Send Link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api/quickpay/query
    method: GET
    data_selector: records
    params:
      version: '2.4'
- name: Payment Token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: Payment Options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: Payment Option Details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: Payment Response (Backend)
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: Payment Response (Frontend)
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: Do Payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: Transaction Status Inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: Payment Inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: Initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: User Preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: Card Token Information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: Exchange Rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: Exchange Rate With Token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: Payment Instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: Payment Maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: Customer Token Maintenance API
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: Card Installment Plan Info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: Loyalty Point Info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: quickpay_generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: quickpay_update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: quickpay_delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: quickpay_query
  endpoint:
    path: /docs/api-quickpay-query-request-parameter
    method: GET
    data_selector: records
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: QuickPay Generate and Send Link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: QuickPay Update
  endpoint:
    path: /QuickPay/DirectAPI
    method: POST
    data_selector: QPUpdateRes
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: POST
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: POST
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: POST
- name: QuickPay Generate and Send Link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: QuickPay Update
  endpoint:
    path: /api/quickpay-update
    method: POST
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
- name: payment_request
  endpoint:
    path: /docs/sdk-softpos-apis-interface#payment-request
    method: POST
    data_selector: paymentRequest
- name: quickpay_update
  endpoint:
    path: /api-quickpay-update
    method: POST
    data_selector: response
    params: {}
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
    data_selector: response
    params: {}
- name: void_transaction
  endpoint:
    path: /void
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: QuickPay Update
  endpoint:
    path: /api/quickpay/update
    method: POST
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: void_transaction
  endpoint:
    path: /docs/sdk-softpos-apis-interface#payment-request
    method: POST
    data_selector: voidTransactionResponse
    params: {}
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: QuickPay Generate and Send Link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: delete_request
  endpoint:
    path: /2C2PFrontEnd/QuickPay/DirectAPI
    method: POST
    data_selector: QPDeleteReq
- name: delete_response
  endpoint:
    path: /2C2PFrontEnd/QuickPay/DirectAPI
    method: POST
    data_selector: QPDeleteRes
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: Payout Request
  endpoint:
    path: /create-payout
    method: POST
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: QuickPay Generate and Send Link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: quickpay_delete
  endpoint:
    path: /api/quickpay/delete
    method: DELETE
    data_selector: records
    params:
      version: '2.4'
      timeStamp: yyyyMMddHHmmss
      merchantID: AN 15
      qpID: N 10
      hashValue: AN 150
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: query_transaction
  endpoint:
    path: /docs/sdk-softpos-apis-interface#payment-request
    method: POST
    data_selector: transactionResponse
    params: {}
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
    data_selector: response
    params: {}
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
    data_selector: response
    params: {}
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
    data_selector: response
    params: {}
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
    data_selector: response
    params: {}
- name: quickpay_delete
  endpoint:
    path: /api/quickpay/delete
    method: DELETE
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: payment_request
  endpoint:
    path: /docs/api-payment-token
    method: GET
    data_selector: records
- name: transaction_status_response
  endpoint:
    path: /sdk-classes-apis-interface#transaction-status-response-api
    method: GET
    data_selector: records
- name: GenerateSendQPReq
  endpoint:
    path: /2C2PFrontEnd/QuickPay/DeliveryAPI
    method: POST
    data_selector: GenerateSendQPReq
- name: GenerateSendQPRes
  endpoint:
    path: /2C2PFrontEnd/QuickPay/DeliveryAPI
    method: POST
    data_selector: GenerateSendQPRes
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: quickpay_generate_and_send_link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
    data_selector: link
    params: {}
- name: SoftPOSResult
  endpoint:
    path: /docs/sdk-softpos-apis-interface
    method: GET
    data_selector: SoftPOSResult
    params: {}
- name: SoftPOSResultCode
  endpoint:
    path: /docs/sdk-softpos-apis-interface
    method: GET
    data_selector: SoftPOSResultCode
    params: {}
- name: quickpay_generate_send_link
  endpoint:
    path: /api/quickpay-generate-and-send-link
    method: POST
    data_selector: response
    params: {}
- name: payment
  endpoint:
    path: /sdk/softpos/api/payment
    method: POST
    data_selector: transaction
    params: {}
- name: void_transaction
  endpoint:
    path: /sdk/softpos/api/void
    method: POST
    data_selector: transaction
    params: {}
- name: query
  endpoint:
    path: /sdk/softpos/api/query
    method: GET
    data_selector: transaction
    params: {}
- name: generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: query_link
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: update_link
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: delete_link
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: generate_and_send_link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: send_link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: send_link
  endpoint:
    path: /QuickPay/DeliveryAPI
    method: POST
    data_selector: QPSendRes
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: GET
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: transaction
  endpoint:
    path: /api/v1/trans
    method: POST
    data_selector: result
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: POST
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: POST
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: POST
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: quickpay_send_link
  endpoint:
    path: /api/quickpay/send/link
    method: POST
    data_selector: responseData
    params:
      version: '2.4'
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: POST
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: warmup
  endpoint:
    path: /api/v1/warmup
    method: GET
    data_selector: ''
    params: {}
- name: quickpay_send_link_response
  endpoint:
    path: /api/quickpay/send-link
    method: GET
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: QuickPay Generate and Send Link
  endpoint:
    path: /api-quickpay-generate-and-send-link
    method: POST
- name: QuickPay Send Link
  endpoint:
    path: /api-quickpay-send-link
    method: POST
- name: activation
  endpoint:
    path: /api/v1/activation
    method: POST
    data_selector: respCode
    params: {}
- name: payment
  endpoint:
    path: /v4.3/payment
    method: POST
    data_selector: data
    params: {}
- name: payout
  endpoint:
    path: /v4.3/payout
    method: POST
    data_selector: data
    params: {}
- name: Transaction
  endpoint:
    path: /api/v1/trans
    method: POST
    data_selector: data
    params: {}
- name: void_transaction
  endpoint:
    path: /api/void
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: Void Transaction
  endpoint:
    path: /api/v1/trans
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: user_preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: card_token_information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: exchange_rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: exchange_rate_with_token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: payment_maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: customer_token_maintenance
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: card_installment_plan_info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: loyalty_point_info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: Beneficiary Registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: Beneficiary Inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: Payout Request
  endpoint:
    path: /create-payout
    method: POST
- name: Payout Inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: Beneficiary Registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: Payout Request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: enquiry
  endpoint:
    path: /api/v1/{transaction ID}
    method: GET
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: sale_or_pre_auth_transaction
  endpoint:
    path: /api/sale-or-pre-auth
    method: POST
    data_selector: transaction
    params:
      amount: D
      description: C 250
      posMessageId: AN 50
      autoDismissResult: B
      preferredInstrument: Enum
      qrPaymentMethods: Enum
- name: void_transaction
  endpoint:
    path: /api/void-transaction
    method: POST
    data_selector: transaction
    params:
      orgTranId: C 250
      posMessageId: AN 50
      adminPwd: N 25
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: GET
    data_selector: records
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: records
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: records
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: records
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payment_token
  endpoint:
    path: /api/payment/token
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_request
  endpoint:
    path: /api/payment/request
    method: POST
    data_selector: paymentResponse
    params: {}
- name: void_transaction
  endpoint:
    path: /void
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: paymentToken
    params:
      merchantID: JT04
      invoiceNo: '1595219400'
      description: 2 days 1 night hotel room
      amount: 10.0
      currencyCode: THB
      nonceStr: a8092512-b144-41b0-8284-568bb5e9264c
      paymentChannel:
      - ALL
- name: void_transaction
  endpoint:
    path: /docs/sdk-softpos-apis-interface
    method: POST
    data_selector: response
    params:
      transactionId: tran_01XXXXXXXXXXXXXXR
- name: quickpay
  endpoint:
    path: /quickpay
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /api-payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: query_transaction
  endpoint:
    path: /sdk-softpos-apis-interface
    method: GET
    data_selector: transactionResponse
    params: {}
- name: POS API
  endpoint:
    path: /api/pos
    method: POST
    data_selector: transaction
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payment_request
  endpoint:
    path: /sdk-softpos-apis-interface#payment-request
    method: POST
- name: softpos_payment_result_response
  endpoint:
    path: /sdk-softpos-apis-interface#softpos-payment-result-response
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: warmup
  endpoint:
    path: /warmup
    method: GET
    data_selector: respCode
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: activation
  endpoint:
    path: /activation
    method: POST
    data_selector: respCode
    params:
      activationCode: MERCHANT_ACTIVATION_CODE
- name: transaction
  endpoint:
    path: /api/transaction
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: Void Transaction
  endpoint:
    path: /api/void
    method: POST
    data_selector: data
    params: {}
- name: SoftPOSType
  endpoint:
    path: /docs/api-payment-enums/softpos-type
    method: GET
    data_selector: parameters
- name: TransactionType
  endpoint:
    path: /docs/api-payment-enums/transaction-type
    method: GET
    data_selector: parameters
- name: PaymentMethodType
  endpoint:
    path: /docs/api-payment-enums/payment-method-type
    method: GET
    data_selector: parameters
- name: SoftPOSPaymentResponseCode
  endpoint:
    path: /docs/api-payment-enums/softpos-payment-response-code
    method: GET
    data_selector: parameters
- name: payment
  endpoint:
    path: /sdk/softpos/api/payment
    method: POST
    data_selector: records
- name: void_transaction
  endpoint:
    path: /sdk/softpos/api/void
    method: POST
    data_selector: records
- name: query
  endpoint:
    path: /sdk/softpos/api/query
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /api/v1/trans
    method: POST
    data_selector: result
- name: quickpay_generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
    data_selector: data
    params: {}
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
    data_selector: data
    params: {}
- name: transaction_inquiry
  endpoint:
    path: /api/inquiry
    method: GET
    data_selector: data
- name: warmup
  endpoint:
    path: /api/v1/warmup
    method: GET
    data_selector: respCode, rspMsg
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: activation
  endpoint:
    path: /api/v1/activation
    method: POST
    data_selector: respCode
    params: {}
- name: Sale or Pre-Auth Transaction
  endpoint:
    path: /api/sale-or-pre-auth
    method: POST
    data_selector: transaction
    params:
      amount: D
      description: C 250
      posMessageId: AN 50
      autoDismissResult: B
      preferredInstrument: Enum
      qrPaymentMethods: Enum
- name: Void Transaction
  endpoint:
    path: /api/void-transaction
    method: POST
    data_selector: transaction
    params:
      orgTranId: C 250
      posMessageId: AN 50
      adminPwd: N 25
- name: transaction
  endpoint:
    path: /api/v1/trans
    method: POST
    data_selector: data
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_response
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
    data_selector: TransactionResponse
    params: {}
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
    data_selector: TransactionResponse
    params: {}
- name: void_transaction
  endpoint:
    path: /api/void
    method: POST
    data_selector: data
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
- name: transaction
  endpoint:
    path: /api/v1/trans
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: quickpay_generate_link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
    data_selector: response
    params: {}
- name: quickpay_query
  endpoint:
    path: /api-quickpay-query
    method: GET
    data_selector: response
    params: {}
- name: quickpay_update
  endpoint:
    path: /api-quickpay-update
    method: PUT
    data_selector: response
    params: {}
- name: quickpay_delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: transaction_inquiry
  endpoint:
    path: /api/v1/{transaction ID}
    method: GET
    data_selector: data
- name: beneficiary_registration
  endpoint:
    path: /payouts/api/v1.1/beneficiary/register
    method: POST
    data_selector: payload
- name: QuickPay
  endpoint:
    path: /api/quickpay
    method: POST
    data_selector: data
    params: {}
- name: Payout
  endpoint:
    path: /api/payout
    method: POST
    data_selector: data
    params: {}
- name: sale_or_pre_auth_transaction
  endpoint:
    path: /api/sale_or_pre_auth_transaction
    method: POST
    data_selector: transaction
    params:
      amount: D
      description: C 250
      posMessageId: AN 50
      autoDismissResult: B
      preferredInstrument: Enum
      qrPaymentMethods: Enum
- name: void_transaction
  endpoint:
    path: /api/void_transaction
    method: POST
    data_selector: void_transaction
    params:
      orgTranId: C 250
      posMessageId: AN 50
      adminPwd: N 25
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: parameters
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: GET
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: Payment Response
  endpoint:
    path: /api/payment-response
    method: GET
    data_selector: TransactionResponse
    params: {}
- name: Transaction Status Inquiry
  endpoint:
    path: /api/transaction-status-inquiry
    method: GET
    data_selector: TransactionResponse
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_inquiry
  endpoint:
    path: /payouts/api/v1.1/payout/beneficiary/inquiry
    method: POST
    data_selector: payload
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: POST
    data_selector: data
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: records
    params:
      merchantID: M
      requestID: M
      beneficiaryID: C
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: warmup
  endpoint:
    path: /warmup
    method: GET
    data_selector: respCode
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: records
    params:
      requestId: mandatory
      respCode: mandatory
      respDesc: mandatory
- name: payout
  endpoint:
    path: /payout
    method: POST
    data_selector: data
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
- name: activation
  endpoint:
    path: /activation
    method: POST
    data_selector: respCode
    params:
      activationCode: MERCHANT_ACTIVATION_CODE
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: GET
    data_selector: parameters
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: parameters
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: GET
    data_selector: parameters
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: parameters
- name: Payment Request
  endpoint:
    path: /docs/request-parameters-apptoapp
    method: POST
    data_selector: data
    params: {}
- name: Payment Response
  endpoint:
    path: /docs/response-parameters-apptoapp
    method: GET
    data_selector: data
    params: {}
- name: payout_create
  endpoint:
    path: /payouts/api/v1.2/payout/create
    method: POST
    data_selector: payload
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: void_transaction
  endpoint:
    path: /void
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: data
    params: {}
- name: transaction_status
  endpoint:
    path: /inquiry
    method: GET
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: payout_response
  endpoint:
    path: /docs/payout-response
    method: GET
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: GET
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: sale_or_pre_auth_transaction
  endpoint:
    path: /api/sale_or_pre_auth_transaction
    method: POST
    data_selector: transaction
    params:
      amount: D
      description: C 250
      posMessageId: AN 50
      autoDismissResult: B
      preferredInstrument: Enum
      qrPaymentMethods: Enum
- name: void_transaction
  endpoint:
    path: /api/void_transaction
    method: POST
    data_selector: transaction
    params:
      orgTranId: C 250
      posMessageId: AN 50
      adminPwd: N 25
- name: payout_inquiry
  endpoint:
    path: /payouts/api/v1.2/payout/inquiry
    method: POST
    data_selector: payload
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout/inquiry
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
    data_selector: data
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout/inquiry
    method: GET
    data_selector: records
    params:
      merchantID: M
      requestID: C
      UTR: C
- name: Payment Response
  endpoint:
    path: /api/payment/response
    method: GET
    data_selector: TransactionResponse
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: response
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: response
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: response
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: response
- name: payout_inquiry
  endpoint:
    path: /payout/inquiry
    method: POST
    data_selector: response
    params:
      version: '1.2'
      merchantID: AN 25
      requestID: AN 50
      UTR: AN 25
      payoutDate: C 10
      amount: D 16,2
      currency: A 3
      beneficiaryName: A 150
      respCode: N 4
      respDesc: C 150
- name: beneficiary_registration
  endpoint:
    path: /payouts/api/v1.1/beneficiary/register
    method: POST
    data_selector: payload
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: payout_bank_code
  endpoint:
    path: /docs/payout-bank-code
    method: GET
- name: payout_preferred_provider
  endpoint:
    path: /docs/payout-preferred-provider
    method: GET
- name: payout_source_of_fund
  endpoint:
    path: /docs/payout-source-of-fund
    method: GET
- name: Thailand Banks
  endpoint:
    path: /api/thailand-banks
    method: GET
    data_selector: banks
- name: Singapore Banks
  endpoint:
    path: /api/singapore-banks
    method: GET
    data_selector: banks
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: malaysia_bank_codes
  endpoint:
    path: /malaysia/bank_codes
    method: GET
    data_selector: records
- name: philippines_bank_codes
  endpoint:
    path: /philippines/bank_codes
    method: GET
    data_selector: records
- name: myanmar_bank_codes
  endpoint:
    path: /myanmar/bank_codes
    method: GET
    data_selector: records
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
- name: indonesia_banks
  endpoint:
    path: /indonesia/banks
    method: GET
    data_selector: banks
    params: {}
- name: korea_banks
  endpoint:
    path: /korea/banks
    method: GET
    data_selector: banks
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: hong_kong_banks
  endpoint:
    path: /payout/hong_kong
    method: GET
    data_selector: banks
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /payouts/api/v1.1/payout/beneficiary/inquiry
    method: POST
    data_selector: payload
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: preferred_provider
  endpoint:
    path: /merchants/providers
    method: POST
    data_selector: Providers
- name: beneficiary_inquiry
  endpoint:
    path: /api/beneficiary-inquiry
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /api/payout-request
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary/inquiry
    method: GET
    data_selector: data
    params:
      merchantID: M
      requestID: M
      beneficiaryID: C
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: records
    params:
      requestId: M
      beneficiaryId: C
      accountName: M
      emailAddress: O
      mobileNo: C
      bankCode: C
      merchantId: C
      idCard: C
      companyId: O
      beneficiaryType: C
      beneficiaryTypeValue: C
      notificationUrl: O
      respCode: M
      respDesc: M
      Remarks: C
      preferredProvider: C
      dateOfBirth: C
      nationality: C
      dateOfIncorporation: C
      countryOfIncorporation: C
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
- name: initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
- name: user_preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
- name: card_token_information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
- name: exchange_rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
- name: exchange_rate_with_token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
- name: payment_maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
- name: customer_token_maintenance
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
- name: card_installment_plan_info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
- name: loyalty_point_info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_create
  endpoint:
    path: /payouts/api/v1.2/payout/create
    method: POST
    data_selector: payload
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_source_of_fund_list
  endpoint:
    path: /docs/payout-source-of-fund
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: payout
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: beneficiary
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: beneficiary
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: payout
    params: {}
- name: SOF List
  endpoint:
    path: /merchants/source-of-fund
    method: POST
    data_selector: SofProfiles
    params:
      merchantID: '702702000000001'
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: Payout Request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: data
    params:
      merchantID: M
      beneficiaryName: M
      amount: M
      beneficiaryBankCode: M
      requestID: M
      UTR: O
      payoutDate: O
      userDefined1: O
      userDefined2: O
      userDefined3: O
      userDefined4: O
      userDefined5: O
      preferredSofProfile: O
      beneficiaryId: C
      beneficiaryType: C
      beneficiaryTypeValue: C
      preferredProvider: C
      notificationUrl: O
- name: payout_source_of_fund_list
  endpoint:
    path: /docs/payout-source-of-fund
    method: GET
    data_selector: records
    params:
      merchantID: M
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: GET
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: payout_response
  endpoint:
    path: /payout/response
    method: POST
    data_selector: response
    params:
      version: '1.2'
      merchantID: M
      requestID: M
      UTR: M
      payoutDate: M
      amount: M
      currency: M
      beneficiaryName: M
      respCode: M
      respDesc: M
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: payout_inquiry
  endpoint:
    path: /payouts/api/v1.2/payout/inquiry
    method: POST
    data_selector: payload
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
    data_selector: response
    params: {}
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
    data_selector: response
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
    data_selector: response
    params: {}
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
    data_selector: response
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
    data_selector: response
    params: {}
- name: do_payment
  endpoint:
    path: /docs/api-do-payment
    method: POST
    data_selector: response
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payment_inquiry
  endpoint:
    path: /docs/api-payment-inquiry
    method: GET
    data_selector: response
    params: {}
- name: initialization
  endpoint:
    path: /docs/api-initialization
    method: GET
    data_selector: response
    params: {}
- name: user_preference
  endpoint:
    path: /docs/api-user-preference
    method: GET
    data_selector: response
    params: {}
- name: card_token_information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
    data_selector: response
    params: {}
- name: exchange_rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
    data_selector: response
    params: {}
- name: exchange_rate_with_token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
    data_selector: response
    params: {}
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
    data_selector: response
    params: {}
- name: payment_maintenance
  endpoint:
    path: /docs/payment-action-api-spec
    method: GET
    data_selector: response
    params: {}
- name: customer_token_maintenance
  endpoint:
    path: /docs/customer-token-maintenance-api
    method: GET
    data_selector: response
    params: {}
- name: card_installment_plan_info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
    data_selector: response
    params: {}
- name: loyalty_point_info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: records
    params:
      merchantID: M
      requestID: C
      UTR: C
- name: Beneficiary Registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: Beneficiary Inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: Payout Request
  endpoint:
    path: /create-payout
    method: POST
- name: Payout Inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: paymentToken
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /v4/payment/token
    method: POST
    data_selector: data
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry-response-parameter
    method: GET
    data_selector: records
    params:
      version: '1.2'
- name: payment
  endpoint:
    path: /payments
    method: POST
    data_selector: paymentResponse
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: shippingAddressAgeIndicator
  endpoint:
    path: /shippingAddressAgeIndicator
    method: GET
    data_selector: records
- name: shippingNameIndicator
  endpoint:
    path: /shippingNameIndicator
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /contact
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /order
    method: GET
    data_selector: records
- name: loyaltyPoints
  endpoint:
    path: /loyaltyPoints
    method: GET
    data_selector: records
- name: browserDetails
  endpoint:
    path: /browserDetails
    method: GET
    data_selector: records
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: POST
    data_selector: payment_token
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
    data_selector: records
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_option
  endpoint:
    path: /paymentOption
    method: POST
    data_selector: paymentOptionResponse
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: Thailand Bank Codes
  endpoint:
    path: /docs/payout-bank-codes/thailand
    method: GET
    data_selector: records
- name: Singapore Bank Codes
  endpoint:
    path: /docs/payout-bank-codes/singapore
    method: GET
    data_selector: records
- name: payment_options
  endpoint:
    path: /api/payment-option
    method: POST
    data_selector: response
    params: {}
- name: malaysia_banks
  endpoint:
    path: /malaysia/banks
    method: GET
    data_selector: records
    params: {}
- name: philippines_banks
  endpoint:
    path: /philippines/banks
    method: GET
    data_selector: records
    params: {}
- name: myanmar_banks
  endpoint:
    path: /myanmar/banks
    method: GET
    data_selector: records
    params: {}
- name: payment_options
  endpoint:
    path: /payment/options
    method: GET
    data_selector: options
    params: {}
- name: indonesia
  endpoint:
    path: /indonesia/bank_codes
    method: GET
    data_selector: records
- name: korea
  endpoint:
    path: /korea/bank_codes
    method: GET
    data_selector: records
- name: payment_options
  endpoint:
    path: /api/payment/options
    method: GET
    data_selector: paymentOptions
    params: {}
- name: payment_inquiry
  endpoint:
    path: /api/payment/inquiry
    method: GET
    data_selector: paymentInquiry
    params: {}
- name: bank_codes_hong_kong
  endpoint:
    path: /payout/bank_codes/hong_kong
    method: GET
    data_selector: bank_codes
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: preferred_provider
  endpoint:
    path: /docs/payout-preferred-provider
    method: GET
- name: payment_option_details
  endpoint:
    path: /paymentOptionDetails
    method: POST
    data_selector: respDesc
    params: {}
- name: preferred_provider
  endpoint:
    path: /payouts/api/v1.1/merchants/providers
    method: POST
    data_selector: Providers
    params: {}
- name: payment_option_details
  endpoint:
    path: /api/payment/option/details
    method: GET
    data_selector: data
    params: {}
- name: payment_option_details
  endpoint:
    path: /api/payment-option-details
    method: GET
    data_selector: records
    params:
      paymentToken: M
      categoryCode: M
      groupCode: M
      clientID: O
      locale: O
- name: payout
  endpoint:
    path: /payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary/inquiry
    method: GET
    data_selector: data
    params: {}
- name: preferred_provider
  endpoint:
    path: /docs/payout-preferred-provider
    method: GET
    data_selector: records
    params:
      merchantID: M
- name: payment_option
  endpoint:
    path: /v4/payment-option
    method: GET
    data_selector: data
    params: {}
- name: quickpay_generate_link
  endpoint:
    path: /v4/quickpay/generate-link
    method: POST
    data_selector: data
    params: {}
- name: payment_option_details
  endpoint:
    path: /api/payment-option-details
    method: GET
    data_selector: paymentOptions
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: preferred_provider
  endpoint:
    path: /preferred-provider
    method: GET
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: payment_response_backend
  endpoint:
    path: /api/payment/response/backend
    method: GET
- name: payment_response_frontend
  endpoint:
    path: /api/payment/response/frontend
    method: GET
- name: SOF List
  endpoint:
    path: /payouts/api/v1.1/merchants/source-of-fund
    method: POST
    data_selector: SofProfiles
- name: SOF List
  endpoint:
    path: /docs/payout-source-of-fund
    method: GET
    data_selector: records
    params:
      merchantID: M
- name: payment
  endpoint:
    path: /v4/payments
    method: POST
    data_selector: data
    params: {}
- name: refund
  endpoint:
    path: /v4/refunds
    method: POST
    data_selector: data
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /api/payment-response-frontend
    method: POST
    data_selector: paymentResponse
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: response
    params: {}
- name: sof_list
  endpoint:
    path: /docs/sof-list-response-parameter
    method: GET
    data_selector: records
    params: {}
- name: payment
  endpoint:
    path: /v4/payment
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /v4/beneficiary/registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /v4/payout/request
    method: POST
    data_selector: data
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /api/payment/response/frontend
    method: GET
    data_selector: response
    params: {}
- name: payment_token
  endpoint:
    path: /payment/token
    method: POST
    data_selector: paymentToken
    params: {}
- name: Do Payment
  endpoint:
    path: /payment/4.3/payment
    method: POST
    data_selector: transaction
    params: {}
- name: Payout Request
  endpoint:
    path: /create-payout
    method: POST
- name: Beneficiary Registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: Beneficiary Inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: do_payment
  endpoint:
    path: /api/do-payment
    method: POST
    data_selector: payment
    params:
      paymentToken: M
      payment:
        channelCode: M
- name: payment
  endpoint:
    path: /payment/transaction
    method: POST
    data_selector: transaction
    params: {}
- name: payment_token
  endpoint:
    path: /api/payment-token
    method: POST
    data_selector: paymentToken
    params: {}
- name: do_payment
  endpoint:
    path: /api/do_payment
    method: POST
    data_selector: data
    params: {}
- name: transaction_status
  endpoint:
    path: /api/transaction_status
    method: GET
    data_selector: data
    params: {}
- name: do_payment
  endpoint:
    path: /api/do-payment
    method: POST
- name: transaction_status_inquiry
  endpoint:
    path: /api/transaction-status-inquiry
    method: GET
- name: payment_token
  endpoint:
    path: /v4/payment/token
    method: POST
    data_selector: data
    params: {}
- name: transaction_status
  endpoint:
    path: /transaction/status
    method: GET
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
    data_selector: data
    params: {}
- name: payment_token
  endpoint:
    path: /docs/api-payment-token
    method: GET
    data_selector: paymentToken
    params: {}
- name: transaction_status
  endpoint:
    path: /payment/4.3/transactionStatus
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: transaction_status_inquiry
  endpoint:
    path: /api/transaction-status-inquiry
    method: GET
    data_selector: records
    params:
      paymentToken: M
      clientID: O
      locale: O
      additionalInfo: O
- name: payment_option
  endpoint:
    path: /paymentOption
    method: POST
    data_selector: paymentOptions
- name: payment_options
  endpoint:
    path: /api/payment/options
    method: GET
    data_selector: paymentOptions
- name: transaction_status
  endpoint:
    path: /v4/transaction/status
    method: GET
    data_selector: data
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: records
    params:
      incremental: channelCode
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
    data_selector: data
    params: {}
- name: payment_inquiry
  endpoint:
    path: /payment/inquiry
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: POST
- name: payment_options
  endpoint:
    path: /docs/api-payment-option
    method: GET
    data_selector: payment_options
    params: {}
- name: payment_option_details
  endpoint:
    path: /docs/api-payment-option-details
    method: GET
    data_selector: payment_option_details
    params: {}
- name: payment_response_backend
  endpoint:
    path: /docs/api-payment-response-backend
    method: GET
    data_selector: payment_response_backend
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /docs/api-payment-response-frontend
    method: GET
    data_selector: payment_response_frontend
    params: {}
- name: payment_inquiry
  endpoint:
    path: /paymentInquiry
    method: POST
    data_selector: ''
    params: {}
- name: payment_inquiry
  endpoint:
    path: /payment/inquiry
    method: POST
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
- name: payment_option
  endpoint:
    path: /api/payment-option
    method: GET
    data_selector: records
- name: payout
  endpoint:
    path: /api/payout
    method: POST
    data_selector: records
- name: payment_inquiry
  endpoint:
    path: /api/payment/inquiry
    method: POST
    data_selector: data
    params:
      paymentToken: C 255
      merchantID: AN 25
      childMerchantID: AN 25
      invoiceNo: AN 50
      locale: C 10
- name: payment_option_details
  endpoint:
    path: /payment/4.3/paymentOptionDetails
    method: POST
    data_selector: response
    params: {}
- name: payment_inquiry
  endpoint:
    path: /payment/inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /api/payment/inquiry
    method: GET
    data_selector: data
    params: {}
- name: payment_option_details
  endpoint:
    path: /v4/payment-option/details
    method: GET
    data_selector: data
    params: {}
- name: payment_option_details
  endpoint:
    path: /api/payment-option-details
    method: GET
    data_selector: data
    params:
      paymentToken: M
      categoryCode: M
      groupCode: M
      clientID: O
      locale: O
- name: initialization
  endpoint:
    path: /payment/4.3/Initialization
    method: POST
    data_selector: initialization
- name: Payment Option Details
  endpoint:
    path: /api/payment-option-details
    method: GET
    data_selector: records
- name: initialization
  endpoint:
    path: /api-initialization
    method: GET
    data_selector: initialization
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: user_preference
  endpoint:
    path: /payment/4.3/userpreference
    method: POST
    data_selector: null
    params: {}
- name: payment_response_backend
  endpoint:
    path: /api/payment/response/backend
    method: GET
    data_selector: records
- name: user_preference
  endpoint:
    path: /api/user/preference
    method: GET
    data_selector: data
    params: {}
- name: user_preference
  endpoint:
    path: /api/user_preference
    method: GET
    data_selector: records
    params:
      paymentToken: M
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: Payment Response (Frontend)
  endpoint:
    path: /api/payment-response-frontend
    method: POST
    data_selector: paymentResponse
- name: user_preference
  endpoint:
    path: /v4/user/preference
    method: GET
    data_selector: data
    params: {}
- name: user_preference
  endpoint:
    path: /api/user/preference
    method: GET
    data_selector: user_preference
    params: {}
- name: payment_response
  endpoint:
    path: /v4.3/payment/response
    method: GET
    data_selector: response
    params: {}
- name: card_token_information
  endpoint:
    path: /payment/4.3/cardtokeninfo
    method: POST
    data_selector: paymentToken
    params: {}
- name: payment_response_frontend
  endpoint:
    path: /api/payment/response/frontend
    method: GET
    data_selector: response
    params: {}
- name: do_payment
  endpoint:
    path: /api/do/payment
    method: POST
    data_selector: payment
    params: {}
- name: card_token_information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
    data_selector: records
    params: {}
- name: do_payment
  endpoint:
    path: /payment
    method: POST
    data_selector: null
    params: {}
- name: card_token_information
  endpoint:
    path: /v4/card_token_information
    method: GET
    data_selector: data
- name: card_token_information
  endpoint:
    path: /api/card-tokens-information
    method: GET
    data_selector: response
    params: {}
- name: payment_request
  endpoint:
    path: /payment/request
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: do_payment
  endpoint:
    path: /api/do-payment
    method: POST
    data_selector: payment
    params:
      paymentToken: M
      payment:
        code: M
        channelCode: M
- name: exchange_rate
  endpoint:
    path: /exchange-rate
    method: GET
    data_selector: data
    params: {}
- name: exchange_rate
  endpoint:
    path: /payment/4.3/ExchangeRate/secure
    method: POST
    data_selector: payload
    params: {}
- name: payout
  endpoint:
    path: /payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: exchange_rate
  endpoint:
    path: /api/exchange-rate
    method: GET
    data_selector: rates
    params:
      merchantID: M
      providerCode: M
      currencyCode: M
- name: do_payment
  endpoint:
    path: /api/do-payment
    method: POST
    data_selector: data
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api/transaction-status-inquiry
    method: GET
    data_selector: data
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /transaction/status
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
- name: exchange_rate
  endpoint:
    path: /exchange-rate
    method: GET
    data_selector: rates
    params: {}
- name: payout
  endpoint:
    path: /payout
    method: POST
    data_selector: payout_response
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /payment/4.3/transactionStatus
    method: POST
    data_selector: response
    params: {}
- name: Exchange Rate
  endpoint:
    path: /docs/api-exchange-rate
    method: GET
    data_selector: fxRates
    params: {}
- name: Exchange Rate With Token
  endpoint:
    path: /docs/api-exchange-rate-with-token
    method: GET
    data_selector: fxRates
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /v4.3/transaction/status
    method: GET
    data_selector: data
    params: {}
- name: exchange_rate
  endpoint:
    path: /v1/exchange-rate
    method: GET
    data_selector: data
- name: beneficiary_registration
  endpoint:
    path: /v1/beneficiary-registration
    method: POST
    data_selector: data
- name: payout_request
  endpoint:
    path: /v1/create-payout
    method: POST
    data_selector: data
- name: transaction_status_inquiry
  endpoint:
    path: /docs/api-transaction-status-inquiry
    method: GET
    data_selector: records
    params:
      paymentToken: M
      clientID: O
      locale: O
      additionalInfo: O
- name: exchange_rate_with_token
  endpoint:
    path: /payment/4.3/exchangerate
    method: POST
- name: exchange_rate_with_token
  endpoint:
    path: /api/exchange-rate-with-token
    method: GET
    data_selector: records
    params:
      paymentToken: M
      clientID: O
      locale: O
      bin: O
- name: transaction_status
  endpoint:
    path: /transaction/status
    method: GET
    data_selector: data
    params: {}
- name: transaction_status_inquiry
  endpoint:
    path: /api-transaction-status-inquiry
    method: GET
    data_selector: payload
    params:
      channelCode: M
      invoiceNo: C
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /payment/inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
- name: payout_request
  endpoint:
    path: /create/payout
    method: POST
- name: exchange_rate_with_token
  endpoint:
    path: /api/exchange-rate-with-token
    method: GET
    data_selector: fxRates
    params: {}
- name: payment_inquiry
  endpoint:
    path: /payment/4.3/paymentInquiry
    method: POST
    data_selector: payload
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: payment_inquiry
  endpoint:
    path: /api/payment/inquiry
    method: POST
    data_selector: data
    params:
      paymentToken: C 255
      merchantID: AN 25
      childMerchantID: AN 25
      invoiceNo: AN 50
      locale: C 10
- name: payment_instruction
  endpoint:
    path: /paymentInstruction
    method: POST
    data_selector: payload
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: Payment Inquiry
  endpoint:
    path: /api/payment/inquiry
    method: GET
    data_selector: payments
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payment_instruction
  endpoint:
    path: /api/payment/instruction
    method: POST
    data_selector: response
    params:
      merchantID: C 25
      agentCode: C 10
      agentChannelCode: C 3
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: initialization
  endpoint:
    path: /payment/4.3/Initialization
    method: POST
    data_selector: initialization
- name: payment_instruction
  endpoint:
    path: /api/payment/instruction
    method: GET
    data_selector: instructions
    params: {}
- name: initialization
  endpoint:
    path: /api/initalization
    method: GET
    data_selector: initialization
    params: {}
- name: Payment Process Request
  endpoint:
    path: /api/payment/process
    method: POST
    data_selector: PaymentProcessRequest
    params: {}
- name: Payment Process Response
  endpoint:
    path: /api/payment/process/response
    method: GET
    data_selector: PaymentProcessResponse
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: user_preference
  endpoint:
    path: /payment/4.3/userpreference
    method: POST
    data_selector: user
    params: {}
- name: recurring_inquiry
  endpoint:
    path: /RecurringMaintenanceRequest
    method: POST
    data_selector: recurring
    params:
      version: '2.4'
      processType: I
- name: recurring_update
  endpoint:
    path: /RecurringMaintenanceRequest
    method: POST
    data_selector: recurring
    params:
      version: '2.4'
      processType: U
- name: recurring_cancel
  endpoint:
    path: /RecurringMaintenanceRequest
    method: POST
    data_selector: recurring
    params:
      version: '2.4'
      processType: C
- name: user_preference
  endpoint:
    path: /user/preference
    method: GET
    data_selector: preferences
- name: user_preference
  endpoint:
    path: /api/user_preference
    method: GET
    data_selector: records
    params:
      paymentToken: M
      clientID: O
      locale: O
- name: QuickPay Generate Link
  endpoint:
    path: /api-quickpay-generate-link
    method: POST
- name: QuickPay Query
  endpoint:
    path: /api-quickpay-query
    method: GET
- name: QuickPay Update
  endpoint:
    path: /api-quickpay-update
    method: PUT
- name: QuickPay Delete
  endpoint:
    path: /api-quickpay-delete
    method: DELETE
- name: add_card
  endpoint:
    path: /add_card
    method: POST
    data_selector: MaintenanceRequest
    params:
      version: '2.3'
      action: A
- name: update_card
  endpoint:
    path: /update_card
    method: POST
    data_selector: MaintenanceRequest
    params:
      version: '2.3'
      action: U
- name: delete_card
  endpoint:
    path: /delete_card
    method: POST
    data_selector: MaintenanceRequest
    params:
      version: '2.3'
      action: D
- name: inquiry_card_info
  endpoint:
    path: /inquiry_card_info
    method: POST
    data_selector: MaintenanceRequest
    params:
      version: '2.3'
      action: I
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: GET
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: ipp_option_request
  endpoint:
    path: /api/ipp/options/inquiry
    method: POST
    data_selector: IppOptionRequest
    params:
      version: '2.2'
      merchantID: ''
- name: ipp_option_response
  endpoint:
    path: /api/ipp/options/inquiry/response
    method: GET
    data_selector: IppOptionResponse
    params:
      version: '2.1'
      respCode: ''
      respReason: ''
- name: card_token_info
  endpoint:
    path: /payment/4.3/cardtokeninfo
    method: POST
    data_selector: paymentToken
- name: Beneficiary Registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: Beneficiary Inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: Payout Request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: Payout Inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: card_token_information
  endpoint:
    path: /docs/api-card-tokens-information
    method: GET
    data_selector: records
- name: fx_rate_inquiry
  endpoint:
    path: /fx_rate_inquiry
    method: POST
    data_selector: FxRateResponse
    params:
      version: '2.2'
      merchantID: C 15
      currency: C 3
- name: fx_rate_list_inquiry
  endpoint:
    path: /fx_rate_list_inquiry
    method: POST
    data_selector: FxRateListResponse
    params:
      version: '2.2'
      merchantID: C 15
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: POST
- name: card_token_information
  endpoint:
    path: /api/card-tokens-information
    method: GET
    data_selector: records
- name: withdraw_options
  endpoint:
    path: /withdraw-options
    method: GET
    data_selector: withdrawOption
    params:
      version: '1.0'
      merchantID: C 15
- name: withdraw_request
  endpoint:
    path: /withdraw-request
    method: POST
    data_selector: withdrawResponse
    params:
      version: '1.0'
      merchantID: C 15
      withdrawOptionID: N 5
      amount: D 10,2
- name: balance_inquiry
  endpoint:
    path: /balance-inquiry
    method: GET
    data_selector: balanceResponse
    params:
      version: '1.0'
      merchantID: C 15
- name: exchange_rate
  endpoint:
    path: /v4/exchange-rate
    method: GET
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: POST
- name: exchange_rate
  endpoint:
    path: /payment/4.3/ExchangeRate/secure
    method: POST
    data_selector: payload
- name: Agent Status Inquiry by agent codes
  endpoint:
    path: /api/agent-status/inquiry/by-agent-codes
    method: POST
    data_selector: agents
    params:
      merchantID: C 15
      agentCodes: Array
- name: Agent Status Inquiry for all agents
  endpoint:
    path: /api/agent-status/inquiry/all-agents
    method: POST
    data_selector: agents
    params:
      merchantID: C 15
- name: exchange_rate
  endpoint:
    path: /api/exchange-rate
    method: GET
    data_selector: records
    params:
      merchantID: M
      providerCode: M
      currencyCode: M
- name: Add Customer
  endpoint:
    path: /api/customer/add
    method: POST
    data_selector: response
    params: {}
- name: Update Customer Token
  endpoint:
    path: /api/customer/update
    method: POST
    data_selector: response
    params: {}
- name: Delete Customer Token
  endpoint:
    path: /api/customer/delete
    method: POST
    data_selector: response
    params: {}
- name: Inquiry Customer Token
  endpoint:
    path: /api/customer/inquiry
    method: POST
    data_selector: response
    params: {}
- name: Exchange Rate
  endpoint:
    path: /api/v4/exchange-rate
    method: GET
    data_selector: rates
- name: exchange_rate
  endpoint:
    path: /api/exchange-rate
    method: GET
    data_selector: fxRates
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: records
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: records
    params: {}
- name: exchange_rate_with_token
  endpoint:
    path: /payment/4.3/exchangerate
    method: POST
    data_selector: response
    params: {}
- name: card_installment_plan_info
  endpoint:
    path: /payment/4.3/cardinstallmentplaninfo
    method: POST
    data_selector: channels
- name: exchange_rate
  endpoint:
    path: /api/exchange_rate
    method: GET
    data_selector: data
    params: {}
- name: card_installment_plan_info
  endpoint:
    path: /api/card_installment_plan_info
    method: GET
    data_selector: records
    params:
      paymentToken: M
      bankCode: O
      securePayToken: M
      locale: O
      clientID: O
- name: exchange_rate_with_token
  endpoint:
    path: /api/exchange-rate-with-token
    method: GET
    data_selector: data
    params:
      paymentToken: M
      clientID: O
      locale: O
      bin: O
- name: card_installment_plan_info
  endpoint:
    path: /v4.3/card/installment_plan_info
    method: GET
    data_selector: installmentPlans
    params: {}
- name: exchange_rate_with_token
  endpoint:
    path: /api/exchange-rate-with-token
    method: GET
    data_selector: fxRates
    params: {}
- name: Card Installment Plan Info
  endpoint:
    path: /docs/api-card-installment-plan-info
    method: GET
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: Loyalty Point Information
  endpoint:
    path: /api/sdk/api-loyalty-point-information
    method: GET
- name: payment_instruction
  endpoint:
    path: /paymentInstruction
    method: POST
- name: loyalty_point_info
  endpoint:
    path: /payment/4.3/loyaltypointinfo
    method: POST
    data_selector: response
    params: {}
- name: loyalty_point_info
  endpoint:
    path: /api/loyalty-point-info
    method: GET
    data_selector: data
    params: {}
- name: payment_instruction
  endpoint:
    path: /payment/instruction
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
    data_selector: data
    params: {}
- name: Loyalty Point Info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
    data_selector: records
    params: {}
- name: payment_instruction
  endpoint:
    path: /docs/api-payment-instruction
    method: GET
    data_selector: records
    params: {}
- name: loyalty_point_info
  endpoint:
    path: /api/loyalty-point-information
    method: GET
- name: loyalty_point_info
  endpoint:
    path: /loyalty-point-info
    method: GET
    data_selector: rewards
    params: {}
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
    data_selector: response
    params: {}
- name: Payment Instruction
  endpoint:
    path: /api/payment/instruction
    method: GET
    data_selector: instructions
    params: {}
- name: payment_process
  endpoint:
    path: /payment/process
    method: POST
- name: recurring_maintenance
  endpoint:
    path: /recurring/maintenance
    method: POST
- name: store_card_maintenance
  endpoint:
    path: /store/card/maintenance
    method: POST
- name: ipp_options_inquiry
  endpoint:
    path: /ipp/options/inquiry
    method: GET
- name: fx_rate_inquiry
  endpoint:
    path: /fx/rate/inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: parameter
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: parameter
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: parameter
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: parameter
    params: {}
- name: PaymentProcessRequest
  endpoint:
    path: /api/payment/process
    method: POST
    data_selector: PaymentProcessRequest
- name: PaymentProcessResponse
  endpoint:
    path: /api/payment/process/response
    method: GET
    data_selector: PaymentProcessResponse
- name: recurring_inquiry
  endpoint:
    path: /recurring/inquiry
    method: POST
    data_selector: RecurringMaintenanceRequest
    params:
      version: '2.4'
      processType: I
- name: recurring_update
  endpoint:
    path: /recurring/update
    method: POST
    data_selector: RecurringMaintenanceRequest
    params:
      version: '2.4'
      processType: U
- name: recurring_cancel
  endpoint:
    path: /recurring/cancel
    method: POST
    data_selector: RecurringMaintenanceRequest
    params:
      version: '2.4'
      processType: C
- name: payment
  endpoint:
    path: /snap/v{version}/debit/payment-host-to-host
    method: POST
- name: Add Card
  endpoint:
    path: /api/add-card
    method: POST
    data_selector: MaintenanceRequest
    params: {}
- name: Update Card
  endpoint:
    path: /api/update-card
    method: POST
    data_selector: MaintenanceRequest
    params: {}
- name: Delete Card
  endpoint:
    path: /api/delete-card
    method: POST
    data_selector: MaintenanceRequest
    params: {}
- name: Inquiry Card Info
  endpoint:
    path: /api/inquiry-card-info
    method: POST
    data_selector: MaintenanceRequest
    params: {}
- name: Card Response
  endpoint:
    path: /api/card-response
    method: GET
    data_selector: MaintenanceResponse
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: responseMessage
    params:
      merchantId: ''
      amount:
        value: ''
        currency: ''
      additionalInfo:
        paymentToken: {}
        description: ''
        tokenize: false
        request3DS: false
        paymentChannel: []
      urlParams:
      - type: ''
        url: ''
        isDeepLink: false
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: ipp_option_request
  endpoint:
    path: /ipp/option/request
    method: POST
    data_selector: IppOptionRequest
    params:
      version: '2.2'
      merchantID: C 15
- name: ipp_option_response
  endpoint:
    path: /ipp/option/response
    method: GET
    data_selector: IppOptionResponse
    params:
      version: '2.1'
      respCode: C 3
      respReason: C 100
- name: debit_payment
  endpoint:
    path: /snap/v{version}/debit/payment-host-to-host
    method: POST
    data_selector: payment
    params:
      partnerReferenceNo: String
      merchantId: String
      amount:
        value: String
        currency: String
      additionalInfo:
        paymentToken:
          description: String
          tokenize: Boolean
          request3DS: Boolean
          paymentChannel:
          - String
      urlParams:
        type: String
        url: String
        isDeepLink: Boolean
- name: FX Rate Inquiry
  endpoint:
    path: /fx-rate-inquiry
    method: POST
    data_selector: FxRateResponse
    params:
      version: '2.2'
      merchantID: C 15
      currency: C 3
      fxProvider: C 20
- name: FX Rate List Inquiry
  endpoint:
    path: /fx-rate-list-inquiry
    method: POST
    data_selector: FxRateListResponse
    params:
      version: '2.2'
      merchantID: C 15
      fxProvider: C 20
- name: payment
  endpoint:
    path: /snap/v{version}/debit/payment-host-to-host
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: payment
  endpoint:
    path: /do-payment
    method: POST
    data_selector: responseMessage
    params: {}
- name: withdraw_options
  endpoint:
    path: /withdraw/options
    method: GET
    data_selector: withdrawOption
    params:
      version: '1.0'
      merchantID: C 15
- name: withdraw_request
  endpoint:
    path: /withdraw/request
    method: POST
    data_selector: withdrawResponse
    params:
      version: '1.0'
      merchantID: C 15
      withdrawOptionID: N 5
      amount: D 10,2
- name: balance_inquiry
  endpoint:
    path: /balance/inquiry
    method: GET
    data_selector: balanceResponse
    params:
      version: '1.0'
      merchantID: C 15
- name: payment
  endpoint:
    path: /snap/v{version}/debit/payment-host-to-host
    method: POST
    data_selector: response
- name: response_parameters
  endpoint:
    path: /snap/v{version}/debit/payment-host-to-host
    method: POST
- name: agent_status_by_agent_codes
  endpoint:
    path: /api/agent-status/inquiry/by-agent-codes
    method: GET
    data_selector: agents
    params:
      merchantID: C 15
      agentCodes: Array
- name: agent_status_all_agents
  endpoint:
    path: /api/agent-status/inquiry/all-agents
    method: GET
    data_selector: agents
    params:
      merchantID: C 15
- name: customer_token
  endpoint:
    path: /customer-token
    method: GET
- name: Add Customer
  endpoint:
    path: /customer/add
    method: POST
    data_selector: response
    params: {}
- name: Update Customer Token
  endpoint:
    path: /customer/update
    method: POST
    data_selector: response
    params: {}
- name: Delete Customer Token
  endpoint:
    path: /customer/delete
    method: POST
    data_selector: response
    params: {}
- name: Inquiry Customer Token
  endpoint:
    path: /customer/inquiry
    method: POST
    data_selector: response
    params: {}
- name: direct_debit_payment_status
  endpoint:
    path: /v4/direct-debit/payment-status
    method: GET
    data_selector: data
    params: {}
- name: direct_debit_payment_status
  endpoint:
    path: /snap/v{version}/debit/status
    method: POST
- name: card_installment_plan_info
  endpoint:
    path: /payment/4.3/cardinstallmentplaninfo
    method: POST
    data_selector: channels
    params: {}
- name: Direct Debit Payment Status
  endpoint:
    path: /snap/v{version}/debit/status
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: direct_debit_payment_status
  endpoint:
    path: /payment/v4.3/direct-debit/payment-status
    method: GET
    data_selector: data
    params: {}
- name: card_installment_plan_info
  endpoint:
    path: /api/card-installment-plan-info
    method: GET
    data_selector: records
    params:
      paymentToken: M
      bankCode: O
      securePayToken: M
      locale: O
      clientID: O
- name: direct_debit_payment_status
  endpoint:
    path: /snap/v{version}/debit/status
    method: POST
    data_selector: body
    params: {}
- name: debit_status
  endpoint:
    path: /snap/v{version}/debit/status
    method: POST
    data_selector: response
    params: {}
- name: payout
  endpoint:
    path: /payout
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: card_installment_plan_info
  endpoint:
    path: /api/card-installment-plan-info
    method: GET
    data_selector: records
- name: payout
  endpoint:
    path: /payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: Loyalty Point Information
  endpoint:
    path: /sdk-api-loyalty-point-information
    method: GET
- name: direct_debit_payment_cancel
  endpoint:
    path: /snap/v{version}/debit/cancel
    method: POST
    data_selector: none
    params: {}
- name: loyalty_point_info
  endpoint:
    path: /payment/4.3/loyaltypointinfo
    method: POST
    data_selector: response
    params: {}
- name: loyalty_point_info
  endpoint:
    path: /api/v4/loyalty-point-info
    method: GET
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: debit_cancel
  endpoint:
    path: /snap/v{version}/debit/cancel
    method: POST
    data_selector: null
    params: {}
- name: loyalty_point_info
  endpoint:
    path: /docs/loyalty-point-info-api
    method: GET
    data_selector: records
    params:
      paymentToken: C 25
      providerId: AN 255
      referenceID: AN 255
      securePayToken: AN 255
      clientID: AN 255
      locale: C 10
      browserDetails:
        Device Type: AN 255
        Name: AN 255
        OS: AN 255
        Version: AN 255
- name: direct_debit_payment_cancel
  endpoint:
    path: /snap/v{version}/debit/cancel
    method: POST
    data_selector: ''
    params: {}
- name: response
  endpoint:
    path: /snap/v{version}/debit/cancel
    method: POST
- name: loyalty_point_information
  endpoint:
    path: /api/loyalty-point-information
    method: GET
    data_selector: records
- name: Loyalty Point Info
  endpoint:
    path: /loyalty-point-info
    method: GET
    data_selector: records
- name: direct_debit_payment_refund
  endpoint:
    path: /snap/v{version}/debit/refund
    method: POST
- name: refund
  endpoint:
    path: /v4.3/refund
    method: POST
    data_selector: data
    params: {}
- name: refund
  endpoint:
    path: /snap/v{version}/debit/refund
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: direct_debit_payment_refund
  endpoint:
    path: /snap/v{version}/debit/refund
    method: POST
    data_selector: body
    params: {}
- name: response
  endpoint:
    path: /snap/v{version}/debit/refund
    method: POST
    data_selector: responseCode
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: GET
- name: create_virtual_account
  endpoint:
    path: /snap/v{version}/transfer-va/create-va
    method: POST
- name: create_virtual_account
  endpoint:
    path: /snap/v{version}/transfer-va/create-va
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: create_virtual_account
  endpoint:
    path: /create-va
    method: POST
    data_selector: response
    params:
      trxId: String
      virtualAccountName: String
      totalAmount:
        value: String
        currency: String
      additionalInfo:
        agentCode: String
        agentChannelCode: String
- name: responseParameters
  endpoint:
    path: /snap/v1.0/access-token/b2b
    method: POST
    data_selector: responseParameters
- name: response_parameters
  endpoint:
    path: /snap/v{version}/transfer-va/create-va
    method: POST
    data_selector: responseParameters
- name: transfer_va_status
  endpoint:
    path: /snap/v{version}/transfer-va/status
    method: POST
- name: Inquire Virtual Account
  endpoint:
    path: /snap/v{version}/transfer-va/status
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payment
  endpoint:
    path: /snap/v{version}/debit/payment-host-to-host
    method: POST
- name: inquire_virtual_account
  endpoint:
    path: /snap/v{version}/transfer-va/status
    method: POST
    data_selector: body
    params:
      trxId: String
      serviceCode: String
- name: qr_generation
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-generate
    method: POST
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: response
    params:
      merchantId: required
      amount:
        value: required
        currency: required
      additionalInfo:
        paymentToken: required
        description: required
        tokenize: optional
        request3DS: optional
        paymentChannel: optional
      urlParams:
        type: required
        url: required
        isDeepLink: required
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: responseMessage
    params:
      merchantId: ''
      amount:
        value: ''
        currency: ''
      additionalInfo:
        paymentToken: {}
        description: ''
        request3DS: ''
        uiParams: {}
        userInfo:
          name: ''
          email: ''
          mobileNo: ''
        payment: {}
        code: {}
        channelCode: ''
        data: {}
        qrType: ''
      urlParams:
      - type: ''
        url: ''
        isDeepLink: ''
- name: payment
  endpoint:
    path: /snap/v{version}/debit/payment-host-to-host
    method: POST
    data_selector: response
    params: {}
- name: response_parameters
  endpoint:
    path: /snap/v{version}/debit/payment-host-to-host
    method: POST
- name: generate_qr_code
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-generate
    method: POST
    data_selector: response
    params: {}
- name: responseCode
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-generate
    method: POST
    data_selector: responseCode
    params: {}
- name: responseMessage
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-generate
    method: POST
    data_selector: responseMessage
    params: {}
- name: webRedirectUrl
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-generate
    method: POST
    data_selector: webRedirectUrl
    params: {}
- name: additionalInfo
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-generate
    method: POST
    data_selector: additionalInfo
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
- name: do_payment
  endpoint:
    path: /api/do_payment
    method: POST
    data_selector: responseMessage
    params: {}
- name: inquiry_qr_payment_request
  endpoint:
    path: /api/quickpay/generate-link
    method: POST
    data_selector: records
    params: {}
- name: quickpay_query
  endpoint:
    path: /api/quickpay/query
    method: GET
    data_selector: records
    params: {}
- name: qr_mpm_query
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-query
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: Inquiry QR Payment Request
  endpoint:
    path: /inquiry/qr/payment/request
    method: POST
- name: Payout Request
  endpoint:
    path: /create/payout
    method: POST
- name: debit_payment
  endpoint:
    path: /snap/v{version}/debit/payment-host-to-host
    method: POST
    data_selector: response
    params: {}
- name: inquiry_qr_payment_request
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-query
    method: POST
- name: response_parameters
  endpoint:
    path: /snap/v{version}/debit/payment-host-to-host
    method: POST
    data_selector: response
    params: {}
- name: inquiry_qr_payment_request
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-query
    method: POST
    data_selector: response
    params:
      originalPartnerReferenceNo: String
      merchantId: String
      serviceCode: String
      amount:
        value: String
        currency: String
- name: qr_mpm_query
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-query
    method: POST
    data_selector: responseCode
    params: {}
- name: payout_request
  endpoint:
    path: /payouts/request
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
    data_selector: data
    params: {}
- name: payment_refund
  endpoint:
    path: /payment/refund
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: qr_payment_refund
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-refund
    method: POST
- name: direct_debit_payment_status
  endpoint:
    path: /snap/v{version}/debit/status
    method: POST
- name: QR Payment Refund
  endpoint:
    path: /api/quickpay/refund
    method: POST
    data_selector: data
    params: {}
- name: Direct Debit Payment Status
  endpoint:
    path: /snap/v{version}/debit/status
    method: POST
- name: qr_payment_refund
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-refund
    method: POST
    data_selector: body
    params: {}
- name: qr_payment_refund
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-refund
    method: POST
    data_selector: response
    params:
      originalPartnerReferenceNo: required
      partnerReferenceNo: required
      merchantId: required
      refundAmount:
        value: required
        currency: required
- name: responseParameters
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-refund
    method: POST
    data_selector: responseParameters
    params: {}
- name: direct_debit_payment_status
  endpoint:
    path: /snap/v{version}/debit/status
    method: POST
    data_selector: body
    params:
      partnerReferenceNo: String
      merchantId: String
      serviceCode: String
      amount:
        value: String
        currency: String
- name: debit_status
  endpoint:
    path: /snap/v{version}/debit/status
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: Beneficiary Registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: Beneficiary Inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: Payout Request
  endpoint:
    path: /create-payout
    method: POST
- name: Payout Inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: direct_debit_payment_cancel
  endpoint:
    path: /snap/v{version}/debit/cancel
    method: POST
- name: registration-account-binding
  endpoint:
    path: /snap/v{version}/registration-account-binding
    method: POST
- name: direct_debit_payment_cancel
  endpoint:
    path: /direct/debit/payment/cancel
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: result
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: result
    params: {}
- name: direct_debit_payment_cancel
  endpoint:
    path: /snap/v{version}/debit/cancel
    method: POST
- name: account_binding
  endpoint:
    path: /snap/v{version}/registration-account-binding
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: result
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: result
    params: {}
- name: account_binding
  endpoint:
    path: /snap/v{version}/registration-account-binding
    method: POST
    data_selector: response
    params: {}
- name: direct_debit_payment_cancel
  endpoint:
    path: /snap/v{version}/debit/cancel
    method: POST
    data_selector: response
    params: {}
- name: response_parameters
  endpoint:
    path: /snap/v{version}/registration-account-binding
    method: POST
    data_selector: responseCode
    params: {}
- name: response_parameters
  endpoint:
    path: /snap/v{version}/response
    method: GET
    data_selector: additionalInfo
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: direct_debit_payment_refund
  endpoint:
    path: /snap/v{version}/debit/refund
    method: POST
- name: account_binding_inquiry
  endpoint:
    path: /snap/v{version}/registration-account-inquiry
    method: POST
- name: direct_debit_payment_refund
  endpoint:
    path: /snap/v{version}/debit/refund
    method: POST
    data_selector: body
    params: {}
- name: account_binding_inquiry
  endpoint:
    path: /snap/v{version}/registration-account-inquiry
    method: POST
    data_selector: body
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: direct_debit_payment_refund
  endpoint:
    path: /snap/v{version}/debit/refund
    method: POST
    data_selector: response
    params:
      originalPartnerReferenceNo: String
      partnerReferenceNo: String
      merchantId: String
      refundAmount:
        value: String
        currency: String
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: response_parameters
  endpoint:
    path: /snap/v{version}/debit/refund
    method: POST
    data_selector: response
    params: {}
- name: account_binding_inquiry
  endpoint:
    path: /snap/v{version}/registration-account-inquiry
    method: POST
    data_selector: body
    params:
      partnerReferenceNo: String
- name: registration_account_inquiry
  endpoint:
    path: /snap/v{version}/registration-account-inquiry
    method: POST
    data_selector: response
    params: {}
- name: create_virtual_account
  endpoint:
    path: /snap/v{version}/transfer-va/create-va
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
    data_selector: data
    params: {}
- name: reconcile_report
  endpoint:
    path: /docs/batch-services-reconcile-report-ipp
    method: GET
    data_selector: records
    params: {}
- name: create_virtual_account
  endpoint:
    path: /create/virtual/account
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
    data_selector: data
    params: {}
- name: create_virtual_account
  endpoint:
    path: /create-va
    method: POST
- name: transfer_va_create
  endpoint:
    path: /snap/v{version}/transfer-va/create-va
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: reconcile_report
  endpoint:
    path: /reconcile/report
    method: GET
    data_selector: records
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /docs/beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /docs/beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /docs/create-payout
    method: POST
    data_selector: response
    params: {}
- name: payout_inquiry
  endpoint:
    path: /docs/payout-inquiry
    method: GET
    data_selector: response
    params: {}
- name: transfer_va_status
  endpoint:
    path: /snap/v{version}/transfer-va/status
    method: POST
- name: Authorization Request
  endpoint:
    path: /input
    method: POST
    data_selector: records
    params: {}
- name: Authorization Response
  endpoint:
    path: /output
    method: GET
    data_selector: records
    params: {}
- name: Inquire Virtual Account
  endpoint:
    path: /snap/v{version}/transfer-va/status
    method: POST
- name: inquire_virtual_account
  endpoint:
    path: /snap/v{version}/transfer-va/status
    method: POST
    data_selector: transaction_details
    params:
      trxId: required
      serviceCode: '27'
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: data
    params: {}
- name: responseParameters
  endpoint:
    path: /snap/v{version}/transfer-va/status
    method: POST
    data_selector: responseParameters
    params: {}
- name: auth_request
  endpoint:
    path: /input
    method: POST
    data_selector: records
- name: auth_response
  endpoint:
    path: /output
    method: GET
    data_selector: records
- name: generate_qr_code
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-generate
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: card_tokenization_request
  endpoint:
    path: /input
    method: POST
    data_selector: data
    params: {}
- name: card_tokenization_response
  endpoint:
    path: /output
    method: GET
    data_selector: data
    params: {}
- name: generate_qr_code
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-generate
    method: POST
    data_selector: records
- name: payment
  endpoint:
    path: /payment
    method: POST
    data_selector: responseMessage
    params:
      merchantId: string
      amount:
        value: string
        currency: string
      additionalInfo:
        description: string
        request3DS: boolean
        userInfo:
          name: string
          email: string
          mobileNo: string
        channelCode: string
        qrType: string
      urlParams:
      - type: string
        url: string
        isDeepLink: boolean
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /payout-request
    method: POST
    data_selector: data
    params: {}
- name: generate_qr_code
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-generate
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /payout/request
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary/registration
    method: POST
    data_selector: response
    params: {}
- name: qr_mpm_query
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-query
    method: POST
- name: payout
  endpoint:
    path: /payout
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: Inquiry QR Payment Request
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-query
    method: POST
- name: Inquiry QR Payment Request
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-query
    method: POST
    data_selector: body
    params:
      originalPartnerReferenceNo: String
      merchantId: String
      serviceCode: String
      amount:
        value: String
        currency: String
- name: response
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-query
    method: POST
    data_selector: additionalInfo
    params: {}
- name: payment_refund
  endpoint:
    path: /v4/payment/refund
    method: POST
    data_selector: data
    params: {}
- name: payout_request
  endpoint:
    path: /v4/payout/request
    method: POST
    data_selector: data
    params: {}
- name: qr_payment_refund
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-refund
    method: POST
- name: QR Payment Refund
  endpoint:
    path: /api/qr-payment-refund
    method: POST
    data_selector: data
    params: {}
- name: qr_payment_refund
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-refund
    method: POST
    data_selector: response
    params: {}
- name: responseParameters
  endpoint:
    path: /snap/v{version}/qr/qr-mpm-refund
    method: POST
    data_selector: responseParameters
    params: {}
- name: registration_account_binding
  endpoint:
    path: /snap/v{version}/registration-account-binding
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: registration_account_binding
  endpoint:
    path: /snap/v{version}/registration-account-binding
    method: POST
    data_selector: records
- name: account_binding
  endpoint:
    path: /snap/v{version}/registration-account-binding
    method: POST
    data_selector: response
    params:
      partnerReferenceNo: String
      action: StoreCard
      merchantId: String
      phoneNo: String
      additionalData:
        userId: String
        email: String
      additionalInfo:
        key: Object
        cardNo: String
        expiryMonth: String
        expiryYear: String
- name: response_parameters
  endpoint:
    path: /snap/v{version}/registration-account-binding
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: registration_account_inquiry
  endpoint:
    path: /snap/v{version}/registration-account-inquiry
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: response
    params: {}
- name: Account Binding Inquiry
  endpoint:
    path: /snap/v{version}/registration-account-inquiry
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: data
    params: {}
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
    data_selector: data
    params: {}
- name: account_binding_inquiry
  endpoint:
    path: /snap/v{version}/registration-account-inquiry
    method: POST
    data_selector: body
    params:
      partnerReferenceNo: String
- name: registration_account_inquiry
  endpoint:
    path: /snap/v{version}/registration-account-inquiry
    method: POST
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
    data_selector: response
    params: {}
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
    data_selector: response
    params: {}
- name: Reconcile Report
  endpoint:
    path: /output
    method: GET
    data_selector: CSV file
    params:
      filename_format: Reconcile2c2p_A_v2.1_MID_CURRENCY_yyyy-MM-dd_HHmmss.csv
- name: reconcile_report
  endpoint:
    path: /reconcile_report
    method: GET
    data_selector: records
    params: {}
- name: reconcile_report
  endpoint:
    path: /docs/batch-services-reconcile-report-full-payment
    method: GET
    data_selector: records
- name: authorization_request
  endpoint:
    path: /input
    method: POST
    data_selector: records
- name: authorization_response
  endpoint:
    path: /output
    method: GET
    data_selector: records
- name: beneficiary_registration
  endpoint:
    path: /beneficiary-registration
    method: POST
- name: beneficiary_inquiry
  endpoint:
    path: /beneficiary-inquiry
    method: GET
- name: payout_request
  endpoint:
    path: /create-payout
    method: POST
- name: payout_inquiry
  endpoint:
    path: /payout-inquiry
    method: GET
- name: card_tokenization_request
  endpoint:
    path: /input
    method: POST
    data_selector: records
- name: card_tokenization_response
  endpoint:
    path: /output
    method: GET
    data_selector: records
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Create JWT Request Payload with signature to interact with 2C2P API
- Receive payment response and verify the integrity of the response
- Payment platform supports website or mobile application integration.
- OAuth2 is used for authentication.
- Requires setup of connected app in 2C2P
- Demo accounts are available for testing without registration
- Test cards and accounts are available
- Ensure to follow the guidelines for OAuth2 authentication.
- Some objects like Contact may return nulls in deeply nested fields
- The demo accounts will allow you to quickly test the connection and a basic integration.
- Ensure you manage token expiration properly.
- Do not use test cards or accounts for live transactions
- Ensure to handle API rate limits appropriately.
- Ensure to authenticate before making requests.
- Uses OAuth2 for authentication
- Ensure to handle API rate limits and error responses as documented.
- Ensure to handle token expiration properly.
- API requires authentication setup via connected app
- Ensure you have the correct OAuth2 setup for authentication.
- Refer to the API documentation for specific parameters
- Ensure to handle token expiration
- Drop-in UI is available for a better user experience on web UI.
- Redirect API with iFrame allows seamless payment flow.
- Uses OAuth2 with refresh token — requires setup of connected app in 2C2P
- Our monthly integration newsletters will provide regular updates on 2C2P’s payment
  gateway and information about integration.
- Requires setup of connected app in API
- Requires setup of connected app in api
- Proceed only when the parameter 'respCode' is '0000' which indicates success.
- If the parameter 'backendReturnUrl' is not set, the system will obtain the backend
  return URL from the merchant profile by default.
- Ensure correct OAuth scopes are set
- Ensure correct OAuth scopes are set for API access
- The Redirect API allows merchants to integrate with 2C2P-hosted payment page services
  with minimum effort.
- 2C2P provides omnichannel payment processing.
- MerchantID, secret code & currencyCode are provided by 2c2p.
- Payment Channel set IPP
- The parameter 'respCode' specifies the status of the transaction.
- This is a non-UI payment service, designed for merchants who wish to control the
  payment experience UI/UX from their end.
- Drop-in UI is available
- Redirect API with iFrame allows merchants to integrate to 2C2P Payment Gateway within
  the merchant's own web page
- API requires setup of connected app in 2C2P
- This integration flow is for merchants who want to create non-UI payments.
- Merchant must request a payment token from 2C2P.
- MerchantID, secret code & currencyCode are provided by 2C2P.
- Payment Channel set to CC.
- tokenize set to true to enable tokenization.
- Requires setup of OAuth2 with client credentials.
- Validation of Payment Token is required when the parameter 'respCode' is '0000'.
- Some objects may return nulls in deeply nested fields
- Payment Channel must be set to IPP.
- Direct API with Secure Fields allows merchants to integrate to 2C2P Payment Gateway
  within the merchants' own web page.
- Set recurring to true for recurring payments.
- Ensure to use the correct OAuth scopes for authorization.
- This integration flow is for merchants who want to create payments such as 3DS payments,
  wallet payments and internet banking payments.
- Use My2c2p to encrypt the card data.
- Sandbox environment is available for testing.
- Some endpoints may have specific request and response parameters
- Some objects may have specific requirements for integration.
- Ensure to handle API limits accordingly
- Please refer to the available payment channels for Global Card (CC) & Local Card
  (LCC).
- Terminate the payment process if the parameter 'respCode' is not '0000'.
- MerchantID, secret code & CurrencyCode are provided by 2C2P.
- For PaymentChannel, merchants can refer to the available payment channels.
- For PaymentChannel, merchants can refer to the available payment channels for QR
  Payment.
- Please refer to the high level diagram flow of Third Party Redirection.
- Merchants must call the Do Payment API to request for payment.
- The response includes a redirection URL for payment confirmation.
- Refer to the Payment Inquiry API Response documentation for details.
- PaymentChannel must be set to APPLEPAY.
- To start accepting Google Pay, you must signup with Google to get your Google Pay
  MerchantId
- For PaymentChannel, fill in GOOGLEPAY
- Tokenization feature is available for card payment, e-wallet & etc.
- Set the parameter tokenize to true to enable tokenization.
- A generated customer token can be used in subsequent payment requests.
- Merchants must provide MerchantID, secret code & currencyCode.
- Payment options request is optional if the merchant knows available options.
- Set the parameter 'recurring' to 'true' when making payment requests for recurring
  payments.
- Payment requests and responses are encrypted using JWE
- JWE algorithm = RSA-OAEP + A256GCM
- The signature uses JWS PS256
- Merchants must know how to prepare requests and process responses using JWE + JWS
  with exchange key
- Some responses may contain null values for optional fields
- Refunds can only be requested for settled transactions.
- Ensure proper handling of token expiration
- For certain 123 payments and wallets, the refund process is asynchronous.
- Initial response will be REFUND_PENDING.
- Note that refunds can only be requested for settled transactions.
- Uses OAuth2 — requires setup of connected app in 2C2P
- Following a void / cancel request, the API will return encrypted response data.
- Merchants must know how to prepare requests and process responses using JWE + JWS
  with exchange key.
- Ensure to handle OAuth token expiration gracefully.
- 'To decrypt the response, refer to: Process JWT Request with Keys'
- Integration requires OAuth2 setup
- Uses JWT for authentication and request generation
- For decrypting JWT token, refer to the provided sample code.
- 'To generate encrypted request data, refer to the guide: Generate JWT Request with
  Keys.'
- 'To decrypt the response, refer to: Process JWT Request with Keys.'
- Refer to the guidelines for preparing request data.
- Refer to the sample code for generating the JWT token.
- Some endpoints may have specific requirements for parameters
- Integration requires setup of connected app in 2C2P
- The response data is encrypted and requires JWT token decryption.
- 'To generate encrypted request data, refer to the guide: Generate JWT Request with
  Keys'
- To prepare the data payload for the recurring payment inquiry request, refer to
  the sample structure shown in the documentation.
- Refer to the API specifications for request parameters.
- 'Refer to: Process JWT Request with Keys'
- Refer to the sample response structure below.
- The API will return encrypted response data.
- 'To generate encrypted request data, refer to: Generate JWT Request with Keys'
- Payment requests and responses are signed using JWS
- Merchants must know how to prepare requests and process responses using JWS with
  keys
- 'Only FPX in Malaysia supported agent status inquiry. Example agent codes: MYMBB,
  MYPBB, MYAMB'
- To send the encrypted request via API, refer to the sample request.
- Some operations may have additional parameters
- Only FPX in Malaysia supported agent status inquiry.
- Integration with WooCommerce requires proper authentication setup.
- JWT token is required for request payload
- Response includes encrypted data that needs to be decrypted
- For testing, choose Sandbox. For live usage, choose Production.
- To integrate the 2C2P payment gateway with PrestaShop, you will need a sandbox account
  or a test account.
- Ensure to handle OAuth2 token expiration properly.
- Support for Magento 2 Framework version 2.2.x version 2.3.x version 2.4.x
- If disabled, the 2C2P payment option will not appear on your checkout page.
- The default language is English.
- Refer to API documentation for specific endpoint details
- Ensure to follow the API documentation for proper integration.
- Requires a sandbox account or test account for integration
- Uses OAuth2 with refresh token
- Ensure to follow the API rate limits to avoid throttling.
- Support for osCommerce version 2.3.4.1
- Requires setup of OAuth2 credentials in the 2C2P developer portal
- Ensure to handle OAuth token expiration properly
- Be aware of API rate limits and throttling
- Requires a sandbox or test account for integration.
- For testing, choose Sandbox mode. For live usage, choose Production mode.
- 'Enable/Status: If disabled, the 2C2P payment option will not appear on your checkout
  page.'
- Merchant ID and Secret Key can be found in the my2C2P portal.
- To integrate the 2C2P payment gateway with ZenCart, you will need a sandbox account
  or a test account.
- To integrate the 2C2P payment gateway with osCommerce, you will need a sandbox account
  or a test account.
- Support for UberCart version 7
- Merchant do not worry about APIs integration and it is all managed by Shopify and
  2c2p.
- Merchant is only required to setup payment on Shopify admin portal.
- Support for X-Cart version 5
- Some responses may contain nested fields
- This API requires proper OAuth setup to function correctly.
- Requires proper OAuth2 setup including client credentials.
- The 2C2P PGW SDK should be initialized using the Application / AppDelegate class
- Integration requires setup of OAuth2 credentials in the developer portal.
- Requires setup of connected app for authentication
- Merchants who store customers' billing address information may fill in those details
  during the customer's checkout process using this API.
- To receive a payment transaction request response, refer to the parameters below.
- Ensure to handle token expiration correctly
- 2C2P supports 3D-Secure, an authentication protocol for e-commerce transactions.
- Ensure compliance with regional regulations for payment processing
- Payment Token ID must be passed to the merchant application.
- Merchants must obtain the customer's consent to store their card details for future
  transactions.
- Merchants must initiate the Transaction Status Inquiry API to retrieve transaction
  details and status.
- Requires generation of payment token before executing transaction.
- Handle different response codes appropriately.
- Requires proper setup of OAuth2 credentials.
- Ensure to handle token expiration correctly.
- The payment token is required to initiate the payment UI request.
- Error handling is required for transaction status inquiries.
- Enable Tokenization with a boolean flag.
- Payment token format must be a string.
- Requires setup of connected app in API.
- 'To view payment process flows based on response code, refer to: Payment Flow Response
  Codes.'
- Refer to the Payment API for transaction details and status.
- Customer token payments allow merchants to offer streamlined shopping experiences.
- Requires generation of payment token before setting customer token.
- Transaction requests must be constructed based on generated payment token.
- Ensure to handle different response codes appropriately.
- OAuth2 authentication is required for API access.
- Merchants can offer Installment Payment Plans (IPP) to customers.
- The 2C2P PGW SDK allows merchants to support local credit or debit card payments
  in their mobile applications.
- Requires setup of installment payment plan.
- Uses a payment token to authenticate transactions
- Ensure to handle errors correctly for payout requests
- To see all available LIPP options, refer to the payment channel matrix.
- Tokenization or stored card feature is a method to replace sensitive data such as
  credit card details with non-sensitive data.
- Merchants do not need to undertake a complex and time-consuming PCI-DSS certification
  process.
- Payment token must be generated before creating payment request.
- Ensure to handle errors gracefully during transaction execution.
- Enable or Disable Tokenization
- Some endpoints may have specific request parameter requirements
- Merchants can set up recurring payment schedules for customers.
- Open WebView for redirects
- Requires payment token for transactions
- Uses a payment token to initiate transaction requests.
- API allows merchants to accept card loyalty point payments
- Uses customer token without authorization.
- Loyalty point reward info can be retrieved from Loyalty Point Info API
- Loyalty point info can be retrieved from Loyalty Point Info API
- Refer to the Payment Token API for required parameters.
- The payment token must be generated before proceeding with the transaction request.
- Ensure to handle OAuth token expiration.
- Refer to the payment channel matrix for available LIPP options.
- Payment channel 'COUNTER' available for payment requests.
- PaymentCode requires 'LIPP' as channel code.
- Security code must be provided for card payments.
- The payment token must be generated before making a payment request.
- Payment token ID must be passed to the merchant application.
- Refer to Payment Flow Response Codes for payment process flows based on response
  code.
- Requires setup of connected app in the API
- To prepare a payment token request, refer to the required parameters provided.
- To receive a transaction request response, refer to the parameters below.
- Loyalty point reward info can be retrieved from Loyalty Point Info API.
- Generates payment token before constructing payment request.
- Handles different response codes for redirect and external application.
- Refer to Payment Channel Matrix for available payment channels and agents for supported
  banks.
- Some objects like payment request may require specific attributes
- Web Payment / Direct Debit is an alternative payment method provided by 2C2P that
  connects most of the major banks across South East Asia.
- OAuth2 with refresh token required for payment processing.
- 'Step 1: Generate payment token.'
- 'Step 2: Construct Web Payment request.'
- 'Step 3: Construct transaction request.'
- 'Step 4: Execute payment request.'
- The 2C2P PGW SDK allows customers to receive a payment slip through the merchant's
  mobile application.
- Ensure to generate payment token before making payment requests.
- Payment requests must include user details such as name, email, and mobile number.
- Requires setup of web payment integration
- Ensure to handle different response codes appropriately
- Refer to the Payment Channel Matrix for supported banks.
- API responds with a payment token to be used in subsequent requests.
- Payment token is required for payment requests.
- Deep link payment channel is supported.
- Generates a payment token and constructs a Deep Link payment request.
- Refer to the Payment Token API for generating payment tokens.
- Payment Option Details provide information about the payment provider.
- E-wallet tokenization without authorization
- Tokens need to be generated before making payment requests.
- Requires setup of connected app for OAuth
- Payment channels must be verified against the payment channel matrix
- Uses Google Pay for payment processing.
- The payment token is required for processing payment requests.
- Ensure to handle the response code properly for different transaction states.
- Uses Masterpass SDK for transaction requests
- Merchants can accept e-wallets tokenization without authorization.
- Example code provided for generating payment token and processing transactions.
- Requires setup of payment token and payment request before executing transaction.
- Requires setup of connected app for OAuth2 authentication.
- Requires setup of payment provider account for integration
- Requires a valid payment token to initiate transactions.
- Handles errors based on response codes.
- The API allows merchants to accept payments from e-wallets such as Masterpass.
- SDK allows merchants to accept payments from e-wallets such as ZaloPay.
- Requires setup of connected app in ZaloPay
- Handle error responses appropriately
- Uses a payment token for transactions
- The LINE Pay digital wallet can be topped up and used for payments across Thailand.
- Payment requests require a valid payment token.
- Ensure correct handling of redirect URLs and deep links.
- Integration requires proper setup of client credentials.
- The ZaloPay digital wallet can be topped up and used for payments across Vietnam.
- Payment Token ID must be passed to the merchant application
- Redirect URLs may need to be handled within the application
- Refer to the API documentation for detailed integration steps and parameter descriptions.
- Requires valid payment token for transaction execution
- Ensure to handle OAuth token expiration properly.
- The 2C2P PGW SDK allows merchants to accept payments from e-wallets such as Boost
  Wallet.
- Boost is a mobile wallet that allows customers to perform cashless mobile transactions
  across Malaysia.
- Transaction responses may require handling of various response codes.
- Integration requires registration and setup of API credentials.
- Requires payment token for transaction requests
- Requires payment token generation before making payment requests
- Error responses may vary based on transaction status
- Ensure to handle API rate limits according to the documentation.
- The API allows merchants to accept payments from e-wallets such as Touch 'n Go.
- M-Pitesan is a mobile wallet powered by Ooredoo in Myanmar.
- Uses payment token for transaction requests
- Requires setup of payment channels
- The PayPal Wallet allows customers to pay with a PayPal account, credit or debit
  cards, bank accounts, or Bill Me Later credit lines.
- Response codes indicate the outcome of the transaction.
- Ensure all API requests are authenticated.
- The API requires a payment token to initiate transactions
- Uses OAuth2 for authentication.
- Requires setup of connected app for OAuth integration
- Ensure the API keys are properly set in the environment variables.
- Requires generation of a payment token before proceeding with transactions
- Be sure to handle API rate limits appropriately.
- Check response codes for transaction status.
- Requires setup of OAuth credentials
- Ensure to handle response codes appropriately
- Requires setup of connected application for API calls.
- Handles payments from e-wallets such as Alipay.
- API allows merchants to accept payments from e-wallets such as CB Pay.
- 'Step 1: Generate payment token requires input.'
- 'Step 2: Construct e-wallet request requires name, email, and mobile number.'
- Integrates with various payment methods and features.
- Ensure to use correct OAuth credentials.
- Requires setup of OAuth for authentication
- Requires setup of connected app for OAuth2.
- Uses a payment token for transactions.
- The 2C2P PGW SDK allows customers to scan and pay through a merchant's mobile application.
- Requires setup of OAuth 2.0 client credentials
- For QR payment MUST keep repeating request Transaction Status Inquiry API to check
  payment status until customer take payment action like scan QR for payment or cancel
  payment.
- Requires setup of authentication for payment processing.
- Refer to Payment Flow Response Codes for details on response codes.
- Uses various payment request structures for transaction handling.
- The response will contain the payment token ID which must be passed to the merchant
  application.
- The Payment Options API allows merchants to retrieve details for their merchant
  account configuration, enabled payment options, and transactions.
- 'Step 2: Construct payment option request.'
- 'Step 3: Retrieve payment options response.'
- Ensure to follow the API rate limits and guidelines.
- The Payment Option Details API allows merchants to retrieve payment information
  based on their merchant account configuration.
- Payment token is required to generate payment option details.
- Merchant applications must relay information about customer's selected payment method.
- Requires generating a payment token before proceeding with transactions.
- Generates a payment token for transaction status inquiry.
- Uses SDK for payment processing
- Redirects may occur during authentication
- Refer to the System Initialization Response API Parameters for details.
- Be aware of the request limits
- API Method available for generating payment tokens.
- The API allows merchants to retrieve customer card information that has been stored
  through the 2C2P PGW.
- Payment requests require a generated payment token.
- Requires proper setup of OAuth2 credentials
- Ensure correct permissions are set for API access
- API responses may vary based on request parameters
- The User Preference API allows merchants to retrieve information on customers' payment
  preference.
- Response will contain the payment token ID which must be passed to the merchant
  application.
- To prepare a payment option detail request, categoryCode and groupCode must be set.
- Some objects like UserPreferenceResponse may return nulls in deeply nested fields
- Requires generating a payment token before requesting payment option details.
- The Payment Notification API allows merchants to share payment results with customers
  through customers' preferred channels.
- Requires connected app for OAuth2 authentication.
- Ensure correct setup of authentication before making API calls
- Be aware of transaction limits imposed by the API
- Requires paymentToken to cancel a transaction.
- Requires generation of payment token before canceling transaction.
- Check for specific error codes for better debugging.
- The Loyalty Point Information API allows merchants to retrieve details for loyalty
  point information.
- The Transaction Status API allows merchants to display payment result information
  to the customer.
- Ensure payment token is generated before calling transaction status.
- Some requests may require specific headers or parameters
- The API allows merchants to retrieve customer card information stored through the
  2C2P PGW.
- Requires setup of OAuth2 authentication with client credentials
- Refer to the API documentation for specific endpoint details
- Ensure to comply with PCI DSS standards for payment processing.
- Requires payment token for user preference requests.
- API requires OAuth2 authentication
- Requires generation of payment token before constructing payment notification request.
- Ensure the correct setup of OAuth for API access
- Integration requires OAuth2 authentication setup.
- Make sure to handle token expiration correctly.
- Ensure correct OAuth scopes are configured
- Ensure all API keys are stored securely
- OAuth2 with refresh token is required for authentication.
- Init class constructor with apiEnvironment
- Generate secure pay token with payload
- Authentication handling for 3DS payment.
- Ensure compliance with PCI-DSS standards
- Ensure to handle API rate limits
- Apple Pay Prerequisite
- Ensure to handle different payment methods accordingly
- Check Google Pay brand guidelines on your app.
- Make sure your app are signed with release key and using production environment.
- Add custom URL scheme under URL types with format 'pgw{your app bundle identifier}.
- Add application URL schemes of your app info.plist.
- Authentication is required to access the API
- The SDK allows merchants to build an excellent payment experience within their mobile
  apps.
- Requires setup of client credentials in the API management console
- 'The SDK has been developed on the platform version: iOS 12.4+, Android 21+ (OS
  5.0), React Native 0.70.0+.'
- merchantId or paymentToken one of them is required.
- 'The SDK has been developed on following platform version: iOS 12.0+, Android 19+
  (OS 4.4)'
- Requires setup of API keys and endpoints.
- Ensure correct permissions for token scopes
- Ensure to handle token expiration and refresh properly.
- Production API environment endpoint  • For all countries.
- Sandbox API environment endpoint  • For testing.
- Merchant can download css file for custom own css style for DropIn and Dialog mode.
- Handles 3DS payment authentication.
- Merchants must initiate the Transaction Status Inquiry API to retrieve transaction
  details.
- Request version number is mandatory and the current version is 2.4.
- 'Current version: 2.4'
- Google Play services version 25.18.30 or higher required
- Android Webview for Chrome version 137 or higher required
- Requests and responses are encoded using Base64.
- Check the API reference for specific endpoint details and request/response parameters.
- API requires OAuth2 for authentication.
- Ensure to handle token expiry properly.
- Ensure to handle token expiration for OAuth2.
- The SDK has been developed on iOS 12.0+ and Android 21+ (OS 5.0).
- 'The SDK has been developed on following platform version: iOS 12.4+, Android 21+
  (OS 5.0), React Native 0.70.0+.'
- Request version number is mandatory.
- Request timestamp must be in yyyyMMddHHmmss format.
- The SDK has been developed on various platform versions.
- Requires OAuth2 authentication for API access.
- Merchant required self-host custom css file on their server.
- Some endpoints may have specific request parameters
- Response data is returned in Base64 format.
- Merchants must indicate whether to send the link via email OR sms (only one can
  be used per call)
- QuickPay requests and responses are encoded using Base64.
- Merchant required to encode the QuickPay request and decode the QuickPay response.
- Request time stamp must be in yyyyMMddHHmmss format.
- Merchant ID provided by 2C2P is mandatory.
- Description of QuickPay URL must accept only alphanumeric characters and the special
  characters ._-#.
- Currency must be standard ISO4217 currency codes.
- Transaction amount must accept decimal values.
- Requests and responses are encoded using Base64
- The 2C2P SoftPOS SDK should be initialized using the Application / AppDelegate class
- Payment API allows merchants to accept contactless credit and debit card payments
  via compatible NFC-enabled devices.
- Ensure to handle OAuth token expiration appropriately.
- Ensure to replace placeholders with actual values in your implementation.
- Voiding a transaction requires the transaction ID and payment token.
- API method for merchant to retrieve transaction information.
- Requires setup of OAuth2 credentials in 2C2P dashboard
- Integration requires OAuth2 authentication
- 'The SDK has been developed on following platform version: Android 26+ (OS 8.0)'
- Check API documentation for specific request parameters.
- API calls require proper OAuth authentication.
- Ensure to handle API limits as per guidelines.
- Some endpoints require specific request parameters.
- The API allows merchants to accept contactless credit and debit card payments via
  compatible NFC-enabled devices.
- OAuth2 authentication required for API access
- Requires setup of connected app in 2C2P.
- Requires initialization with PGW SDK params.
- Requires OAuth2 authentication.
- Ensure to handle token expiration appropriately.
- Some endpoints may have specific request/response parameters
- SoftPOS app has to be activated before calling any other API.
- Ensure to handle error responses accordingly.
- Check the API response for potential rate limit issues.
- Ensure to handle API rate limiting.
- Requires setup of OAuth2 for API access
- Integrate with Payout API
- Enquiry Request do not take any body and uses GET request.
- Beneficiary registration requests and responses are encrypted using JWT with HS256
  algorithm (HMAC with SHA-256) using Merchant’s Secret Key.
- Merchants must know how to prepare requests and process responses using JWT Token.
- Ensure to handle token expiration appropriately
- Duplicate request IDs will be rejected (idempotency ID) * Must be in UUID format
  * Only requires either the 'requestID' or 'UTR' parameters.
- Ensure to handle payment tokens appropriately.
- Mandatory attributes need to be provided in the request.
- MSA POS Lib v1.2.8 or newer is required for integration.
- Ensure to handle token expiration and refresh as needed
- Limitations may apply based on the merchant's account settings
- Please seek our team to retrieve the token value
- Started from android 11 (API level 30) or higher, you'll need to include the <query>
  in the manifest to query package info.
- Requires API keys and OAuth setup.
- Ensure that the client_id and client_secret are properly configured in secrets.
- Warmup Request do not take any parameters
- Mandatory attributes include requestId and respCode.
- Supports SALE and PRE-AUTH operations
- Payment requests and responses are encrypted using JWT with HS256 algorithm (HMAC
  with SHA-256) using Merchant’s Secret Key.
- API supports VOID operations to reverse a previous transaction using the transaction
  ID.
- Unique requestID must be in UUID format and duplicates will be rejected
- Inquiry Request does not take any body and uses GET request.
- Merchant have to pass transaction ID as path parameter to make an inquiry request.
- Payment requests and responses are encrypted using JWT with HS256 algorithm.
- Requires OAuth2 setup for API access
- Requests and responses are encrypted using JWT with HS256 algorithm using Merchant’s
  Secret Key.
- Duplicate request IDs will be rejected (idempotency ID) * Must be in UUID format
  * Only requires either the 'requestID' or 'UTR' parameters
- Requires setup of connected app in 2C2P for OAuth2.
- Preferred Provider requests and responses are encrypted using JWT with HS256 algorithm
  (HMAC with SHA-256) using Merchant’s Secret Key.
- Check for proper scopes and permissions while integrating
- Ensure to handle error codes appropriately
- Refer to [Payout Response Code list](doc:payout-response-code)
- SOF List requests and responses are encrypted using JWT with HS256 algorithm (HMAC
  with SHA-256) using Merchant’s Secret Key.
- Payment token API will return response data that contains JWT token.
- Ensure to adhere to the length restrictions for invoice numbers when making specific
  payment requests.
- Requires setup of OAuth2 credentials for accessing the API
- Ensure to handle token expiration and refresh accordingly
- Payment Token ID generated by 2C2P. Valid for 30 minutes.
- Requires API key for authentication
- Allows merchants to retrieve details on all their available payment options in a
  single request.
- Refer to Initialization API for the language code list.
- Ensure proper OAuth2 scopes are set.
- Mandatory attributes must be provided as specified.
- Requires setup of OAuth2 for authentication
- Payment channels may vary based on merchant configuration
- Mandatory attributes include name, currency, country, respCode, respDesc.
- Ensure to handle rate limits as per API guidelines.
- Payment responses are encrypted using JWT
- Refer to the JWT Token Guide on how to prepare requests and process responses.
- Requests and responses are encrypted using JWT with HS256 algorithm.
- Merchant must know how to prepare requests and process responses using JWT Token.
- Merchant ID provided by 2C2P to merchant is mandatory.
- Requires setup of OAuth2 for access.
- Some API endpoints may have specific requirements
- Some endpoints may have rate limits
- Payment channel code must refer to the Payment Channel Matrix table.
- Product description must be HTML encoded if it contains special characters.
- Transaction currency code must be in 3 alphabetical values as specified in ISO 4217.
- Only applicable for those using 2C2P's authentication and with the request of 'request3DS
  = Y'
- Some responses may include null values in optional fields
- Some endpoints may have specific rate limits
- If locale is empty, the API will respond based on payment token locale.
- Ensure to use proper authentication setup for access.
- Response Code Refer to Payment Flow Response Code.
- Requires setup of OAuth2 credentials in the developer portal
- Payment requests and responses are encrypted using JWT
- 'Algorithm : HMAC SHA-256 using Merchant’s Secret Key.'
- Ensure to handle OAuth token expiration
- This API does not require any request data.
- Requires OAuth authentication
- Initialization details are mandatory.
- The User Preference API allows merchants to retrieve information on users' preference
  settings.
- Some endpoints may return nulls in specific fields
- Merchants receive an encoded message which must be decoded using base64URL.
- Requires OAuth2 authentication
- API responses may vary based on user preferences
- 'User information priority: Client ID > UI Params > User IP > Default Value'
- Requires setup of OAuth2 credentials
- Refer to Payment Channel Matrix table for channel codes.
- Refer to Payment Flow Response Code for response codes.
- Transaction is pending for payment, please wait for backend notification.
- Check the API documentation for specific request parameters.
- Payment token ID is mandatory.
- Unique client ID is optional.
- API requires authentication using OAuth2.
- Ensure correct setup of client credentials.
- Integration requires setting up an OAuth2 application.
- Refer to Payment Channel Matrix for payment channel codes
- Response codes are defined in Payment Flow Response Code documentation
- Make sure to handle different payment method responses correctly.
- Requires setup of OAuth application in 2C2P
- Ensure to handle token expiration properly
- Merchants should not use this API to check or acknowledge updated payment status.
  In such cases, merchants must use the Payment Inquiry API call from backend.
- Ensure to handle API limits and errors appropriately.
- 'Algorithm: HMAC SHA-256 using Merchant’s Secret Key.'
- Some endpoints may return additional fields based on the request
- Requires setup of API client and permissions.
- Mandatory attributes include initialization details and locale details.
- Ensure to check API limits to avoid request failures.
- Integration may require additional setup.
- Current version for requests is 2.2
- Card available status prompts the user if a specific card is expired.
- Ensure API access is correctly configured.
- Check for specific merchant account settings.
- Ensure to handle token expiration and refresh tokens appropriately.
- This API is used only for VISA IPP
- Ensure to handle token expiration and refresh appropriately
- Data Attribute Reference includes mandatory and optional attributes
- Requires integration with 2C2P payment services.
- Requires setup of OAuth credentials in the dashboard
- Requires setup of the API credentials in the system.
- Uses POST method for API requests
- Authorization header is required for subsequent requests after calling SNAP OAuth
  API
- Mandatory attributes include merchantID, agentCode, agentChannelCode, instructions,
  respCode, and respDesc.
- Use this API to obtain an access token by calling the OAuth API successfully.
- Use this API to get a new access token via the refresh token when an existing access
  token is about to expire.
- OAuth2 setup is required for authentication
- Use 2C2P Hosted Payment Page for payments
- 'Use this API in the following ways to process payments: To initiate a payment request,
  You require server-to-server integration, You handle the Payment Page UI.'
- Requires setup in the 2C2P platform.
- Transaction is completed and inquire to get transaction details
- Requires API key for authentication.
- Uses OAuth2
- Refer to the documentation for detailed endpoint usage
- Requires OAuth2 authentication with client credentials.
- Use this API to inquire payments when transaction is completed and inquire to get
  transaction details
- Use this API to initiate a QR payment request
- Ensure to configure OAuth2 settings properly.
- API calls may vary based on the type of payment processed.
- Requires proper setup of connected app in 2C2P
- Use this API to process payments via server-to-server integration
- Use this API in the following ways to process payments
- You require server-to-server integration
- Ensure to handle payment token securely.
- Use this API to inquire payments when Transaction is completed and inquire to get
  transaction details
- Ensure to handle token refresh appropriately
- Use this API to cancel the payment if the payment status is not returned after a
  long time.
- Use this API to store card information
- Some APIs may return nulls in certain fields
- Ensure proper OAuth2 setup for authentication.
- API calls may have rate limits.
- Use this API to inquire account binding details
- Setup is required for OAuth2 with refresh token.
- Datetime format yyyyMMddHHmmss
- Use this API to initiate payment request
- API requires authentication via OAuth2.
- Everyday Before 4.00AM GMT+7
- Ensure to check for relevant permissions when using OAuth2
- Ensure correct OAuth scopes are enabled
- The merchant must fill in the SFTP setup form and send the request to support team.
  An account will be created for merchant to access 2c2p SFTP in demo and production
  environment.
- 'File name format: Reconcile2c2p_B_v2.1_MID_CURRENCY_yyyy-MM-dd_HHmmss.csv'
- Sample CSV file available for download.
- Ensure correct permissions for API access
- 'File name format : auth_YYYYMMDD_fileName.csv'
- 'Parameter delimiter : semicolon '';'''
- 'Record delimiter : line break'
- 'Encryption Method : GPG'
- 'File name format: offlineauth_YYYYMMDD_fileName.csv'
- 'Parameter delimiter: semicolon '';'''
- 'Record delimiter: line break'
- 'Encryption Method: GPG'
- 'File name format: token_YYYYMMDD_fileName.csv'
- Ensure to handle token expiration during OAuth flow
- Ensure to adhere to API rate limits to avoid throttling.
- Make sure to handle token expiration and refreshing.
- Ensure proper OAuth setup before making requests.
- Requires OAuth2 authentication and access token.
- Requires setup of credentials for API access
- Refer to specific API endpoints for detailed parameters
- 'Drop time for response file: Everyday Before 4.00AM GMT+7'
- Sample Data includes fields like BATCH_NO, LINE_NO, TYPE_TABLE, and others.
- Sample data format includes various payment parameters and transaction details.
- 'File name format: auth_YYYYMMDD_fileName.csv'
- Merchants must fill in the SFTP setup form and send the request to support team.
  An account will be created for merchant to access 2c2p SFTP in demo and production
  environment.
- Merchants must fill in the SFTP setup form and send the request to support team.
- Card tokenization request file must be encrypted using GPG.
errors:
- '401 Unauthorized: Recheck OAuth credentials'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Invalid credentials'
- '429 Too Many Requests: Rate limit exceeded'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your authentication details.'
- '400 Bad Request: Review the request parameters.'
- 'INVALID_REQUEST: Check the request parameters for correctness.'
- 'UNAUTHORIZED: Verify authentication details.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Verify your credentials.'
- '404 Not Found: Check the endpoint URL.'
- '400 Bad Request: Check for required fields in the request.'
- '401 Unauthorized: Validate the provided authentication details.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '401 Unauthorized: Check your credentials.'
- '400 Bad Request: Check request parameters.'
- '0000: Success'
- '2000: Transaction is completed, please do payment inquiry request for full payment
  information.'
- 'Invalid payment token: Ensure the payment token is correctly generated.'
- 'Payment failed: Check payment method and details.'
- 'respCode: ''0000'' indicates success.'
- 'respCode: ''2000'' indicates transaction is completed, please do payment inquiry
  request for full payment information.'
- '400 Bad Request: Check request parameters for correctness'
- '401 Unauthorized: Verify OAuth token'
- '404 Not Found: Check endpoint paths'
- 'respCode: 0000 indicates success.'
- 'respCode: 2000 indicates transaction is completed, please do payment inquiry request
  for full payment information.'
- '401 Unauthorized: Verify token or client credentials.'
- 'respCode: 2000 indicates transaction is completed.'
- '1: Card number error.'
- '2: Card number error.'
- '3: Month error.'
- '4: Year error.'
- '5: Year error.'
- '6: Year error.'
- '7: Year error.'
- '8: Month error.'
- '9: Month error.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify client credentials and tokens.'
- '500 Internal Server Error: Retry the request.'
- 'INVALID_REQUEST: Check request parameters.'
- 'UNAUTHORIZED: Ensure valid authentication credentials.'
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Verify access token.'
- 'PAYMENT_FAILED: Review payment information.'
- '1: Invalid card number.'
- '2: Card number is required.'
- '3: Expiry month is required.'
- '4: Invalid expiry month.'
- '5: Expiry year is required.'
- '6: Invalid expiry year.'
- '7: CVV is required.'
- '10: Invalid CVV.'
- '401 Unauthorized: Check your authentication details'
- '400 Bad Request: Review the request parameters'
- '500 Internal Server Error: Retry the request after some time'
- Other codes not specified may indicate failure.
- Other response codes should be handled according to Payment Response Code.
- 'respCode: 0000 indicates success, any other respCode indicates failure.'
- 'respCode: 0000 - Success'
- 'respCode: 1001 - Redirect to authenticate ACS bank page.'
- 'respCode: 2000 - Transaction is completed, please do payment inquiry request for
  full payment information.'
- 'respCode not 0000: Terminate the payment process.'
- '1001: Redirect to authenticate ACS bank page.'
- 'ERROR: Invalid validation url'
- 'ERROR: Error: {responsePayload}'
- 'respCode: 0000 indicates success'
- 'respCode: 2000 indicates transaction is completed'
- 'respCode: 0000 indicates success, otherwise terminate the payment process.'
- '500 Internal Server Error: Try again later'
- 'Invalid payment token: Check the provided token.'
- 'Invalid request parameters: Ensure all required fields are filled.'
- '401 Unauthorized: Verify token and scopes'
- '404 Not Found: Endpoint may not exist'
- Other response codes may indicate failure or require further action.
- 'respCode: 1001: Redirect to authenticate ACS bank page.'
- 'respCode: 0000: Success'
- 'respCode: 2000: Transaction is completed, please do payment inquiry request for
  full payment information.'
- '400 Bad Request: Check request parameters for validity.'
- '401 Unauthorized: Verify access token and permissions.'
- '401: Unauthorized'
- 'Invalid token: Check if the token is expired or malformed.'
- 'Merchant ID not found: Ensure the merchant ID is correct.'
- 'Update Failed: Check request parameters and try again'
- 'respCode: 00 - Cancel Successful'
- 'respReason: Cancel Failed'
- 'responseCode: 00 indicates success'
- 'respCode: 00 - Success'
- 'respCode: other - Check the response description for details'
- '401 Unauthorized: Check OAuth token'
- '400 Bad Request: Validate request parameters'
- '404 Not Found: Verify endpoint path'
- 'respCode: 0000, respDesc: Success'
- '401 Unauthorized: Check authentication credentials.'
- '401 Unauthorized: Recheck JWT token'
- '500 Internal Server Error: Issue with the server'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Check your API key or token'
- '404 Not Found: Verify the endpoint URL'
- '401 Unauthorized: Check your access token and scopes'
- '401 Unauthorized: Ensure valid credentials.'
- '404 Not Found: Verify endpoint path.'
- '401 Unauthorized: Check OAuth token validity.'
- '500 Internal Server Error: Try again later.'
- Transaction completed successfully
- Error response from server, check response code
- Get error response and display error.
- 'INVALID_API_KEY: Check your API key'
- 'INVALID_REQUEST: Check the request parameters'
- '401 Unauthorized: Recheck OAuth credentials or token expiration'
- 'TransactionAuthenticateRedirect: Redirect to authentication'
- 'TransactionCompleted: Inquiry payment result by using invoice no.'
- '401 Unauthorized: Check your credentials'
- 'TransactionAuthenticateRedirect: Handle redirect for authentication.'
- 'TransactionCompleted: Inquiry payment result by invoice number.'
- '400 Bad Request: Check request parameters for correctness.'
- '401 Unauthorized: Verify authentication details.'
- '404 Not Found: Endpoint may not exist or is incorrect.'
- 'TransactionCompleted: Payment transaction completed successfully'
- 'ERROR_CODE: Error description and potential solutions'
- 'TransactionFailed: Check payment details and try again.'
- 'InvalidPaymentToken: Ensure the payment token is valid.'
- 'TokenizationDisabled: Ensure tokenization is enabled.'
- 'TRANSACTION_FAILED: Check payment details or network issues'
- 'INVALID_TOKEN: Ensure the payment token is correct'
- 'AUTHENTICATION_ERROR: Verify API credentials and permissions'
- '401 Unauthorized: Invalid API credentials.'
- 'TransactionAuthenticateRedirect: Redirect for authentication required.'
- 'TransactionAuthenticateRedirect: Redirect required for authentication'
- 'TransactionCompleted: Transaction successfully completed'
- '401 Unauthorized: Recheck OAuth tokens'
- '500 Internal Server Error: Retry after some time'
- 'TransactionAuthenticateRedirect: Open WebView for authentication'
- 'TransactionCompleted: Transaction completed successfully'
- 'Error response: Handle error appropriately'
- 'TransactionAuthenticateRedirect: Redirect to authentication page.'
- 'TransactionCompleted: Payment transaction successfully completed.'
- 'TransactionFailed: Payment transaction failed.'
- 'TransactionAuthenticateRedirect: Open WebView for redirect.'
- 'APIResponseCode.TransactionAuthenticateRedirect: Redirect for authentication'
- 'APIResponseCode.TransactionAuthenticateFullRedirect: Full redirect for authentication'
- 'APIResponseCode.TransactionCompleted: Complete transaction'
- 'TransactionAuthenticateRedirect: Redirect for authentication required'
- 'TransactionCompleted: Payment completed successfully'
- 'TransactionAuthenticateRedirect: User needs to authenticate the transaction.'
- 'TransactionCompleted: The transaction was successful.'
- 'Error response: Handle errors received from the transaction request.'
- 'INVALID_REQUEST: Check request parameters for correctness'
- 'UNAUTHORIZED: Verify client_id and client_secret'
- 'FORBIDDEN: Ensure you have permissions for the requested resource'
- 'INVALID_REQUEST: Check request parameters'
- 'TransactionPaymentSlip: Payment slip generation failed'
- 'transactionPaymentSlip: Payment slip generation failed'
- 'Invalid payment token: Ensure the payment token is correct.'
- 'Transaction failed: Check the transaction details and try again.'
- 'TRANSACTION_FAILED: Check payment details and retry'
- 'INVALID_PAYMENT_TOKEN: Ensure the payment token is valid and not expired'
- 'TransactionAuthenticateRedirect: Handle redirection for authentication.'
- 'Transaction not found: Check if the transaction ID is correct.'
- 'Invalid payment token: Ensure that the payment token is valid and not expired.'
- '401 Unauthorized: Verify client credentials'
- '500 Internal Server Error: Retry the request'
- 'INVALID_PAYMENT_TOKEN: Token may have expired or is incorrect'
- 'NETWORK_ERROR: Ensure network connectivity and retry'
- 'TransactionAuthenticateRedirect: Handle authentication redirect.'
- 'TransactionAuthenticateFullRedirect: Handle authentication full redirect.'
- 'TransactionAuthenticateFullRedirect: Full redirect to authenticate'
- 'INVALID_PAYMENT_TOKEN: Ensure the payment token is correctly generated.'
- 'TRANSACTION_FAILED: Check payment details and try again.'
- 'INVALID_PAYMENT_TOKEN: The provided payment token is invalid.'
- 'TRANSACTION_FAILED: The transaction could not be completed.'
- 'NOT_AUTHORIZED: The request is not authorized.'
- 'Transaction failed: Check payment details and try again.'
- 'Unauthorized: Ensure proper authentication is provided.'
- 'TRANSACTION_FAILED: Check payment details or contact support'
- 'TransactionCompleted: Payment completed successfully.'
- 'TransactionFailed: Payment processing failed.'
- 'TransactionAuthenticateFullRedirect: Full redirect required for authentication'
- 'TransactionAuthenticateRedirect: Redirect to authenticate transaction.'
- 'TransactionAuthenticateFullRedirect: Full redirect for authentication required.'
- 'TransactionExternalApplication: Deep link to open external application.'
- 'TransactionExternalApplication: External application required for processing.'
- '401 Unauthorized: Check OAuth credentials or scopes.'
- '400 Bad Request: Validate request parameters.'
- 'UNAUTHORIZED: Invalid authentication credentials'
- 'NOT_FOUND: Resource not found'
- 'TokenGeneratedSuccess: Payment token was generated successfully'
- 'TransactionCompleted: Transaction was completed successfully'
- 'TokenGeneratedSuccess: Indicates successful generation of payment token.'
- 'TransactionAuthenticateRedirect: Indicates redirect for transaction authentication.'
- 'TransactionCompleted: Indicates successful completion of the transaction.'
- 'TransactionExternalApplication: Construct ZaloPay payment request.'
- 'ErrorResponse: Get error response and display error.'
- 'PaymentSuccess: Inquiry payment result by using payment token'
- 'TransactionExternalApplication: Execute payment request again'
- 'TransactionAuthenticateRedirect: Redirect to authenticate transaction'
- 'TransactionExternalApplication: Redirect to external application'
- 'TransactionAuthenticateRedirect: Requires user authentication.'
- 'TransactionExternalApplication: Redirect to external application needed.'
- '401 Unauthorized: Verify authentication token'
- '404 Not Found: Ensure the endpoint exists'
- 'TransactionAuthenticateRedirect: Requires redirect to authenticate'
- 'TransactionExternalApplication: Requires external application to handle transaction'
- 'TransactionAuthenticateRedirect: Open WebView'
- 'TransactionAuthenticateFullRedirect: Open WebView'
- 'TransactionExternalApplication: Open app'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Check your authentication credentials'
- 'INVALID_PAYMENT_TOKEN: Ensure the payment token is valid'
- 'TRANSACTION_FAILED: Check payment request details'
- 'TransactionAuthenticateRedirect: Requires redirect handling'
- 'TransactionExternalApplication: Requires external app handling'
- '404 Not Found: Endpoint may be incorrect'
- '401 Unauthorized: Check your API credentials.'
- 'TransactionAuthenticateRedirect: Requires user redirection'
- 'TransactionAuthenticateFullRedirect: Requires full redirection'
- 'TransactionExternalApplication: Requires opening an external application'
- 'ErrorResponse: Check error details for troubleshooting'
- '401 Unauthorized: Verify API keys and tokens.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'TransactionAuthenticateRedirect: Redirect to authentication process'
- 'TransactionAuthenticateFullRedirect: Full redirect to authentication'
- 'TransactionExternalApplication: Redirect to an external application'
- 'TransactionAuthenticateRedirect: Handle redirection for authentication'
- 'TransactionExternalApplication: Handle external application deep link'
- 'INVALID_PAYMENT_TOKEN: Ensure payment token is valid'
- 'TRANSACTION_FAILED: Check transaction details and retry'
- 'UNKNOWN_ERROR: General error; contact support'
- 'TRANSACTION_FAILED: Transaction could not be completed.'
- 'INVALID_PAYMENT_TOKEN: Provided payment token is invalid.'
- 'NETWORK_ERROR: Unable to connect to the payment service.'
- '400 Bad Request: Check the request parameters for errors.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: Try again later or contact support.'
- 'TransactionAuthenticateRedirect: Redirect to authentication required'
- 'TransactionAuthenticateFullRedirect: Full redirect to authentication required'
- 'TransactionExternalApplication: Open external application required'
- '400 Bad Request: Check the request format and parameters.'
- '401 Unauthorized: Verify API credentials.'
- 'TransactionAuthenticateRedirect: Redirect the user to authenticate the transaction'
- 'TransactionExternalApplication: Open an external application'
- 'UNAUTHORIZED: Ensure the client credentials are correct.'
- '500 Internal Server Error: Server issue, retry later'
- 'TransactionExternalApplication: Open external application for deep link.'
- 'TransactionAuthenticateRedirect: Open WebView for authentication.'
- 'TransactionAuthenticateFullRedirect: Open WebView for full redirect.'
- 'TransactionExternalApplication: Open external application.'
- 'UNAUTHORIZED: Check your API key and secret.'
- 'NOT_FOUND: The requested resource could not be found.'
- 'UNAUTHORIZED: Ensure valid authentication token.'
- 'NOT_FOUND: Verify endpoint paths.'
- 'TransactionAuthenticateRedirect: Redirect to authentication page'
- 'TransactionAuthenticateFullRedirect: Full redirect to authentication page'
- '401 Unauthorized: Invalid token or expired token'
- 'TransactionCompleted: Transaction has been completed'
- 'Error: Get error response and display error.'
- 'TRANSACTION_FAILED: Check payment method or insufficient funds'
- 'TransactionAuthenticateRedirect: Requires user authentication redirect.'
- 'TransactionCompleted: Payment was successful.'
- 'TransactionAuthenticateRedirect: Requires user interaction'
- 'TransactionCompleted: Payment successful'
- 'ErrorResponse: Handle appropriately for user feedback'
- 'APIResponseCode.APISuccess: Indicates a successful response.'
- '403 Forbidden: Ensure proper permissions.'
- 'APIResponseCode.REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'APIResponseCode.QUERY_TIMEOUT: Break down filters or add selectivity'
- 'APIResponseCode.UNAUTHORIZED: Recheck OAuth scopes or token expiration'
- 'TransactionCompleted: Transaction completed successfully.'
- 'INVALID_REQUEST: Review request parameters'
- 'UNAUTHORIZED: Check OAuth tokens'
- 'NOT_FOUND: Verify endpoint paths'
- 'INVALID_REQUEST: Check the request parameters for correctness'
- '401 Unauthorized: Ensure valid authentication credentials'
- 'APIResponseCode.APISuccess: Successful API response'
- 'APIResponseCode.apiSuccess: Successful API response'
- '401 Unauthorized: Check client credentials or token.'
- 'TransactionCompleted: Payment has been completed successfully'
- 'INVALID_REQUEST: Check the parameters being sent in the request'
- 'TRANSACTION_NOT_FOUND: Verify the transaction ID provided'
- '401 Unauthorized: Ensure valid access token is being used'
- 'INVALID_PAYMENT_TOKEN: Ensure the payment token is generated correctly.'
- 'PAYMENT_FAILED: Check the payment details and try again.'
- 'APIResponseCode.APISuccess: Indicates successful API call.'
- 'APIResponseCode.apiSuccess: Indicates successful API call.'
- '401 Unauthorized: Verify credentials.'
- '404 Not Found: Endpoint may not exist.'
- 'APIResponseCode.APISuccess: Successful response'
- 'APIResponseCode.apiSuccess: Successful response'
- 'TransactionNotFound: The specified transaction could not be found.'
- 'TransactionCompleted: The transaction has already been completed.'
- '404 Not Found: Verify endpoint existence'
- '401 Unauthorized: Verify authentication credentials'
- '404 Not Found: Ensure correct API endpoint is used'
- 'INVALID_REQUEST: Check the request parameters and try again.'
- 'UNAUTHORIZED: Ensure that the authentication credentials are correct.'
- 'NOT_FOUND: Ensure the endpoint is correct.'
- 'Get error response and display error: Handle errors appropriately.'
- 'APIResponseCode.APISuccess: Read cancel transaction response.'
- 'error: Get error response and display error.'
- '401 Unauthorized: Check if the token is valid or expired'
- '404 Not Found: Endpoint not available'
- '401 Unauthorized: Invalid credentials or expired token.'
- '403 Forbidden: Insufficient permissions.'
- '500 Internal Server Error: Retry after a few moments'
- 'INVALID_REQUEST: Check for missing required fields'
- 'AUTHENTICATION_FAILED: Verify credentials and token'
- 'INVALID_REQUEST: Check the request parameters and format'
- 'UNAUTHORIZED: Verify the access token and permissions'
- 'NOT_FOUND: Ensure the endpoint URL is correct'
- '401 Unauthorized: Check API key or token expiration.'
- '400 Bad Request: Verify request parameters.'
- '1: Card number is required'
- '2: Card number is invalid'
- '3: Expiry month is required'
- '4: Expiry month must be two numbers'
- '5: Expiry year is required'
- '6: Expiry year must be four numbers'
- '7: Card already expired(year)'
- '8: Card already expired(month)'
- '9: Expiry month is invalid'
- '10: CVV2/CVC2 is invalid'
- '11: Invalid Card Issued Month'
- '12: Invalid Card Issued Year'
- 'UNAUTHORIZED: Verify client credentials'
- 'INTERNAL_SERVER_ERROR: Retry the request'
- '401 Unauthorized: Verify client credentials.'
- '404 Not Found: Endpoint may be incorrect.'
- '401 Unauthorized: Invalid credentials or token expired.'
- '404 Not Found: Endpoint does not exist.'
- '404 Not Found: Check endpoint path.'
- 'resCode: ''000'' indicates success'
- 'MISSING_PARAMETER: Ensure all mandatory parameters are included.'
- 'INVALID_MERCHANT_ID: Check the merchant ID provided.'
- '0003: User canceled transaction'
- '2000: Transaction status inquiry response is available'
- '401: Unauthorized access'
- '400 Bad Request: Check mandatory fields and their formats.'
- '401 Unauthorized: Verify authentication credentials.'
- '400 Bad Request: Check request parameters for errors.'
- '401 Unauthorized: Token may be expired or invalid.'
- '000: Success'
- '400 Bad Request: Check the request parameters for validity.'
- '401 Unauthorized: Verify client credentials and token.'
- '401 Unauthorized: Check if your access token is valid.'
- '404 Not Found: The requested resource does not exist.'
- '500 Internal Server Error: An error occurred on the server.'
- 'PaymentSuccess: Indicates the transaction was voided successfully'
- 'Error: Failure response indicating the void transaction did not complete'
- 'PaymentSuccess: Indicates a successful payment response.'
- 'Error: Display error response if payment fails.'
- 'UNAUTHORIZED: Check OAuth token'
- '401 Unauthorized: Validate authentication credentials'
- '404 Not Found: Verify endpoint URL'
- '40000: Exception during SoftPOS Initialization'
- '40001: Exception during SoftPOS setup'
- '40002: No default configuration'
- '41001: Parsing activity result failed'
- '41002: Cannot get payment profile'
- '41003: Unsupported type'
- '42001: Card Detection Timeout'
- '42002: Manual Abort transaction'
- '42003: Card read retry count exceeded'
- '42004: Card Read Failed'
- '42005: Card declined the transaction in GAC2'
- '43001: Connection to upstream timeout'
- '43002: Client request error, please check the request'
- '43003: Server error, please try again later'
- '49000: This is an unlikely error, during result processing it is null, please contact
  support'
- '49001: Error from other source'
- '49002: Exception from other source'
- '401 Unauthorized: Ensure valid authentication.'
- '0: Success'
- 'INVALID_CREDENTIALS: Check your client ID and secret.'
- 'TOKEN_EXPIRED: Refresh your access token.'
- '001: Invalid MID'
- '002: Invalid QuickPay ID'
- '003: Invalid amount'
- '004: Invalid currency'
- '005: Invalid description'
- '006: Invalid expiry date'
- '007: Invalid payment option'
- '008: Invalid IPP interest type'
- '009: Invalid payment expiry date'
- '010: Invalid allowMultiplePayment value'
- '011: Invalid max transactions value'
- '012: Invalid order ID prefix'
- '013: Order ID in use'
- '014: Max transaction must be more than pending and approved transactions'
- '015: Invalid request version'
- '016: Invalid request 3DS value'
- '017: Invalid enable store card value'
- '018: Invalid recurring (RPP) flag'
- '019: Invalid recurring amount'
- '020: Invalid allow accumulate flag'
- '021: Invalid allow accumulate amount'
- '022: Invalid recurring interval'
- '023: Invalid recurring count'
- '024: Invalid charge next date'
- '025: Invalid charge on date'
- '026: Please provide either charge on date or recurring interval'
- '027: Please provide only one value between charge on date and recurring interval'
- '101: Please provide one or more emails / mobiles'
- '102: One or more email address is invalid'
- '103: One or more BCC email address is invalid'
- '104: One or more mobile number is invalid'
- '105: One or more CC email address is invalid'
- '106: Invalid email subject'
- '107: Invalid email message'
- '108: Invalid SMS message'
- '997: Invalid request message'
- '998: Empty compulsory value'
- '999: System down'
- 'INVALID_REQUEST: Check the request parameters and data format'
- 'UNAUTHORIZED: Verify your API key and permissions'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'PaymentSuccess: Indicates a successful payment response'
- 'REJECTED: Payment was rejected'
- 'TIMEOUT: Payment request timed out'
- '404 Not Found: Endpoint does not exist'
- 'APPROVED: APPROVED'
- 'ERR_TIMEOUT: Transaction timeout'
- 'ERR_INSECURITY_DEVICE: Device attestation error or security flaw'
- 'ERR_ACTIVATION_CODE: Invalid activation code'
- 'ERR_CONNECT: Transaction connection error'
- 'ERR_SEND: Transaction sending error'
- 'ERR_RECEIVE: Transaction receiving error'
- 'ERR_PACK: Transaction pack request message error'
- 'ERR_UNPACK: Transaction unpack response message error'
- 'ERR_NO_ORIG_TRANS: Original transaction NOT exist'
- 'ERR_ALREADY_VOIDED: Transaction has been voided'
- 'ERR_REFUND_UNSUPPORTED: Not support refund'
- 'ERR_VOID_UNSUPPORTED: Not support void'
- 'ERR_HOST_DECLINED: Host declined the transaction'
- 'ERR_USER_CANCEL: User cancelled the transaction'
- 'ERR_ABORTED: Transaction was aborted with some reasons,please try to get device
  status or do warmup'
- 'ERR_AMOUNT: Transaction amount exceeds the allowed contactless transaction limit'
- 'ERR_CARD_UNSUPPORTED: The transaction is declined by the card and cannot perform
  the transaction'
- 'ERR_CARD_INVALID: Invalid card, please change another card and retry'
- 'ERR_EMV_DECLINED: Invalid EMV parameters, please check EMV configurations'
- 'ERR_NOT_ACTIVATED: Card reading incomplete, please tap and hold card steadily'
- 'ERR_INVALID_REQUEST: Our service is temporally not available to process your payment,please
  check the payment status in backend portal'
- 'ERR_NOT_ACTIVATED: Device not activated'
- 'ERR_INVALID_REQUEST: Invalid request'
- 'ERR_CAN_NOT_DETECT_MPOS: Bluetooth can not detect MPOS D177 device, please check
  the MPOS D177 is available or not'
- 'ERR_BT_DISCONNECTED: Bluetooth disconnected now, please check the MPOS D177 is
  available or not'
- 'ERR_BT_DISABLED: Bluetooth disabled now, please kindly to enable it'
- 'ERR_BT_PERMISSION_MISSING: The location permission is missing now, please kindly
  to allow it'
- 'ERR_UNEXPECTED: Unexpected error, need to restart SoftPOS application by warmup'
- '401 Unauthorized: Check client credentials'
- 'PaymentSuccess: Transaction successful'
- 'PaymentFailed: Transaction failed'
- 'Invalid payment token: Ensure the token is correct.'
- 'Transaction not found: Check the transaction ID.'
- '401 Unauthorized: Check your credentials and OAuth token.'
- '400 Bad Request: Ensure all required parameters are provided.'
- '401 Unauthorized: Check API key or OAuth token'
- '400 Bad Request: Verify request parameters'
- '404 Not Found: Check endpoint path'
- 'Failed: Use rspCode, rspMsg for debugging'
- 'rspCode: 0 - Success'
- 'tranStatus: Approved'
- '401 Unauthorized: Validate API key or token.'
- '404 Not Found: Ensure the endpoint is correct'
- 'UNAUTHORIZED: Check API key and permissions'
- 'ERR_INVALID_REQUEST: Our service is temporaly not available to process your payment,please
  check the payment status in backend portal'
- '401 Unauthorized: Validate client credentials'
- '429 Too Many Requests: Throttle API calls'
- '401 Unauthorized: Check your API key and OAuth credentials.'
- 'INVALID_REQUEST: Check that the request parameters are correctly formatted.'
- 'UNAUTHORIZED: Verify that the access token is valid.'
- '401 Unauthorized: Check token validity.'
- '403 Forbidden: Ensure the user has the necessary permissions.'
- 'Success: Completed successfully'
- 'Failed: Response failed'
- '8101: Success – Payout request accepted'
- '8100: Success – Payout disbursement success'
- 'Failed<Unit>: Response failed. Use rspCode, rspMsg for debugging'
- '401 Unauthorized: Verify credentials and token validity'
- '8180: Success – Payout beneficiary registration success'
- '401 Unauthorized: Invalid or expired token'
- 'INVALID_REQUEST: Check required parameters'
- 'UNAUTHORIZED: Check API key or token'
- 'FORBIDDEN: You do not have permission to access this resource'
- 'respCode: 8101 - Success – Payout request accepted'
- 'respCode: 8100 - Success – Payout disbursement success'
- '400 Bad Request: Check request parameters for validity'
- '401 Unauthorized: Ensure valid OAuth credentials'
- '404 Not Found: Verify endpoint paths and resource availability'
- '0000: Success – Request Accepted'
- '8102: Rejected – Payout request rejected from Bank'
- '8103: Invalid Merchant'
- '8104: Invalid Request ID'
- '8105: Duplicate Request ID'
- '8106: Invalid UTR'
- '8107: Invalid Payout Date'
- '8108: Invalid Amount'
- '8109: Invalid Beneficiary Name'
- '8110: Invalid Beneficiary Account No'
- '8111: Invalid Beneficiary Bank Code'
- '8112: Invalid Beneficiary Mobile No'
- '8113: Invalid User Defined Property'
- '8114: Cannot find payout provider'
- '8115: Payout feature is not enabled. Please contact your account manager.'
- '8116: Insufficient Balance'
- '8117: Invalid Request'
- '8118: Invalid ID Card'
- '8119: Invalid SoF'
- '8120: Invalid Beneficiary Id'
- '8121: Invalid Registered Beneficiary Status'
- '8122: Invalid Company Id'
- '8123: Invalid Regency Code'
- '8124: Invalid Beneficiary Email Address'
- '8125: Invalid Notification URL'
- '8126: Rejected (Refunded)'
- '8127: Duplicate UTR'
- '8128: Invalid Passport Number'
- '8129: Invalid Army/Police Number'
- '8130: Duplicate Beneficiary Entry'
- '8131: Invalid Preferred Provider'
- '8132: Invalid Account Status'
- '8133: Invalid Account Type'
- '8134: Invalid Beneficiary Type'
- '8135: Invalid Use of Preferred Provider'
- '8136: Invalid Currency Code'
- '8181: Success – Payout beneficiary registration accepted'
- '8182: Duplicate beneficiary registration'
- '8183: Rejected – Payout beneficiary registration rejected'
- '8197: Payout malfunction'
- '8198: Payout timeout error'
- '8199: Internal Server Error'
- '8200: Interface Error'
- '8201: Bank Timeout Error'
- '8401: Customer Payout Not Found'
- '8402: Payout Not Found'
- '8403: Merchant Not Found'
- '8404: Batch File Content Incorrect'
- '8405: Cannot Read File'
- '8406: File Has No Content'
- '8407: File Has Missing Fields or Wrong Content'
- '8408: Incorrect File Name'
- '8409: Incorrect File Size'
- '8410: Duplicate Transaction Id'
- '8411: Bank Codes Not Exist'
- '8412: Incorrect File Extension'
- '8500: Success - CDD checking pass'
- '8501: Rejected - CDD checking fail'
- '400 Bad Request: Check request parameters for errors'
- '404 Not Found: Verify endpoint path is correct'
- 'UNAUTHORIZED: Validate API key'
- '400 Bad Request: Check input parameters and their formats.'
- '401 Unauthorized: Verify OAuth token and permissions.'
- '500 Internal Server Error: Retry the request or contact support.'
- '401 Unauthorized: Verify your credentials'
- '404 Not Found: The requested resource was not found'
- '401 Unauthorized: Invalid authentication credentials'
- 'INVALID_REQUEST: Check request format and parameters.'
- 'UNAUTHORIZED: Verify authentication credentials.'
- 'NOT_FOUND: Ensure the endpoint exists.'
- '401 Unauthorized: Invalid credentials.'
- 'MISSING_PARAMETER: Check required parameters for the request'
- 'INVALID_CHANNEL_CODE: Ensure the channel code is valid'
- '400 Bad Request: Check required parameters and their formats.'
- '500 Internal Server Error: Retry the request after some time.'
- '404 Not Found: Ensure endpoint is correct'
- '400 Bad Request: Check required fields in the request'
- '401 Unauthorized: Invalid credentials or token expired'
- '400 Bad Request: Check request parameters and format.'
- '401 Unauthorized: Verify your credentials and access rights.'
- '403 Forbidden: Check permissions for the API endpoint'
- '400 Bad Request: Ensure all required fields are provided'
- 'UNAUTHORIZED: Verify authentication credentials'
- 'NOT_FOUND: Resource does not exist'
- '404 Not Found: Ensure endpoint exists'
- '401 Unauthorized: Ensure valid authentication'
- 'M: Mandatory'
- 'O: Optional'
- '1000: Redirect to authenticate ACS bank page.'
- '1002: Redirect to E-NETS DBS page.'
- '1003: Transaction is pending for payment, please wait for backend notification.'
- '1004: Redirect to OCTOPUS app.'
- '1005: Pending for user scan QR.'
- '401 Unauthorized: Check your API key or token.'
- '401 Unauthorized: Verify API key and token.'
- '404 Not Found: Ensure endpoint path is correct.'
- '401 Unauthorized: Check your credentials and token expiration.'
- '400 Bad Request: Ensure all required parameters are included.'
- '2000: Transaction completed'
- '1004: Fallback data required for web payment'
- Response code and description are mandatory in responses
- '401 Unauthorized: Verify the API key and token.'
- 'UNAUTHORIZED: Verify the access token'
- 'NOT_FOUND: Endpoint does not exist'
- '2000: transaction completed'
- '00: transaction success'
- '01: transaction failed'
- '02: general message'
- '401 Unauthorized: Check client credentials or token expiration.'
- '401 Unauthorized: Verify access token.'
- 'Invalid payment token: Verify the payment token ID.'
- 'Card expired: Check the expiry date of the card.'
- 'RESP_CODE_ERROR: Check response code list for details'
- 'INVALID_REQUEST: Check the parameters sent in the request.'
- '401 Unauthorized: Recheck OAuth credentials.'
- 'INVALID_REQUEST: Verify request parameters and their values'
- 'UNAUTHORIZED: Check API key and secret'
- 'FORBIDDEN: Ensure access rights for the requested resource'
- '400 Bad Request: Check provided parameters'
- '401 Unauthorized: Ensure valid credentials are provided'
- '500 Internal Server Error: Server encountered an unexpected condition'
- '429 Too Many Requests: Rate limit exceeded.'
- '400 Bad Request: Missing required parameters'
- '401 Unauthorized: Verify the access token.'
- '401 Unauthorized: Ensure API key is correct.'
- '400 Bad Request: Invalid parameters'
- 'INVALID_REQUEST: Check your request parameters.'
- 'UNAUTHORIZED: Verify your authentication details.'
- '401 Unauthorized: Check credentials'
- '500 Internal Server Error: Retry after some time.'
- '401 Unauthorized: Check credentials and token'
- '401 Unauthorized: Ensure your credentials are correct.'
- 'INVALID_PARAMETER: Check request parameters'
- 'FORBIDDEN: Check user permissions'
- '401 Unauthorized: Verify credentials'
- '401 Unauthorized: Token may be expired.'
- '401 Unauthorized: Check your credentials or token expiration.'
- '401 Unauthorized: Check client credentials or token validity'
- '500 Internal Server Error: Retry request'
- '401 Unauthorized: Ensure valid credentials are provided.'
- 'UNAUTHORIZED_ACCESS: Ensure your token is valid.'
- 'RESOURCE_NOT_FOUND: Verify the endpoint path.'
- 'INVALID_REQUEST: Check request parameters and their values.'
- 'UNAUTHORIZED: Recheck API token or credentials.'
- 'NOT_FOUND: Verify the requested resource exists.'
- '401 Unauthorized: Check API credentials'
- 'Invalid request format: Ensure the request file adheres to the specified format.'
- 'Unauthorized access: Check SFTP credentials and permissions.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
  - OAuth
  - TransactionResultRequest
  - PaymentRequest
  - PGWSDK
  - PaymentOptionRequest
  - CustomerTokenInfoRequest
  - ExchangeRateRequest
  - PGWSDKParams
  - SecurePaySDK
  - OAuth2
  - AccessToken
  - RefreshToken
  - Oauth
  - SoftPOSSDK
  - PaymentResultResponseCallback
  - SoftPOSPaymentResultResponse
  - SoftPOSResult
  - Token
  - Authorization
  - merchantID
  - token
client:
  base_url: https://api.2c2p.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://api.2c2p.com/oauth/token
    client_id: '{{ dlt.secrets[''2c2p_client_id''] }}'
    client_secret: '{{ dlt.secrets[''2c2p_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''2c2p_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
