resources:
- name: ideogram_v3_pro
  endpoint:
    path: /api/mcp/magicapi/ideogram-v3-pro-text-to-image
    method: POST
    data_selector: result
- name: flux_8b
  endpoint:
    path: /api/mcp/magicapi/flux-8b-text-to-image
    method: POST
    data_selector: result
- name: domain_checker
  endpoint:
    path: /api/mcp/magicapi/domainchecker
    method: POST
    data_selector: result
- name: ideogram_v3_pro
  endpoint:
    path: /magicapi/ideogram-v3-pro-text-to-image
    method: POST
- name: flux_8b
  endpoint:
    path: /magicapi/flux-8b-text-to-image
    method: POST
- name: domain_checker
  endpoint:
    path: /magicapi/domainchecker
    method: POST
- name: ideogram_v3_pro
  endpoint:
    path: /api/mcp/magicapi/ideogram-v3-pro-text-to-image
    method: POST
- name: flux_8b
  endpoint:
    path: /api/mcp/magicapi/flux-8b-text-to-image
    method: POST
- name: domain_checker
  endpoint:
    path: /api/mcp/magicapi/domainchecker
    method: POST
- name: flux_8b_text_to_image
  endpoint:
    path: /magicapi/flux-8b-text-to-image
    method: POST
- name: domain_checker
  endpoint:
    path: /magicapi/domainchecker
    method: POST
- name: geocoding
  endpoint:
    path: /trueway/geocoding
    method: POST
- name: seedance_image_to_video
  endpoint:
    path: /byteplus/seedance-image-to-video-pro
    method: POST
- name: kokoro_text_to_speech
  endpoint:
    path: /magicapi/kokoro-v1-text-to-speech
    method: POST
- name: ideogram_v3_pro
  endpoint:
    path: /magicapi/ideogram-v3-pro-text-to-image
    method: POST
- name: flux_8b
  endpoint:
    path: /magicapi/flux-8b-text-to-image
    method: POST
- name: domain_checker
  endpoint:
    path: /magicapi/domainchecker
    method: POST
- name: domain_checker
  endpoint:
    path: /domainchecker
    method: POST
- name: flux_8b_text_to_image
  endpoint:
    path: /flux-8b-text-to-image
    method: POST
- name: kokoro_v1_text_to_speech
  endpoint:
    path: /kokoro-v1-text-to-speech
    method: POST
- name: seedance_image_to_video_pro
  endpoint:
    path: /seedance-image-to-video-pro
    method: POST
- name: ideogram_v3_pro
  endpoint:
    path: /magicapi/ideogram-v3-pro-text-to-image
    method: POST
- name: flux_8b
  endpoint:
    path: /magicapi/flux-8b-text-to-image
    method: POST
- name: domain_checker
  endpoint:
    path: /magicapi/domainchecker
    method: POST
- name: flux_8b_text_to_image
  endpoint:
    path: /flux-8b-text-to-image
    method: POST
- name: domain_checker
  endpoint:
    path: /domainchecker
    method: POST
- name: geocoding
  endpoint:
    path: /trueway/geocoding
    method: POST
- name: seedance_image_to_video
  endpoint:
    path: /byteplus/seedance-image-to-video-pro
    method: POST
- name: kokoro_v1_text_to_speech
  endpoint:
    path: /magicapi/kokoro-v1-text-to-speech
    method: POST
- name: usage_single_subscription
  endpoint:
    path: /user/usage/{storeSlug}/{apiProduct}/
    method: GET
- name: usage_all_subscriptions
  endpoint:
    path: /user/usage/
    method: GET
- name: PricingPlan
  endpoint:
    path: /pricing/plans
    method: GET
- name: extract
  endpoint:
    path: /api/v1/pipfeed/free_no_card/extract
    method: POST
    data_selector: result
- name: Default Behavior
  endpoint:
    path: /
    method: GET
    data_selector: X-Magicapi-Billing
    params: {}
- name: Allow Unlimited Calls
  endpoint:
    path: /
    method: GET
    data_selector: X-Magicapi-Billing
    params: {}
- name: Charge More Than 1 Unit
  endpoint:
    path: /
    method: GET
    data_selector: X-Magicapi-Billing
    params: {}
- name: overrideCustomUsage
  endpoint:
    path: /[apiStoreSlug]/overrideCustomUsage
    method: POST
- name: extract
  endpoint:
    path: /extract
    method: POST
    data_selector: properties
    params: {}
- name: screenshot
  endpoint:
    path: /api/screenshot/
    method: GET
- name: screenshot
  endpoint:
    path: /api/v1/magicapi/screenshot-api/api/screenshot
    method: GET
    data_selector: data
    params:
      resX: 1280
      resY: 900
      outFormat: jpg
      waitTime: 100
      isFullPage: false
      dismissModals: false
      url: https://api.market/
- name: check_domains
  endpoint:
    path: /check_domains/
    method: POST
    data_selector: json
- name: check_domains
  endpoint:
    path: /api/v1/magicapi/domainchecker/check_domains/
    method: POST
    data_selector: available
    params: {}
- name: whois
  endpoint:
    path: /whois/{domain}
    method: GET
    data_selector: WHOIS information
- name: whois
  endpoint:
    path: /api/v1/magicapi/whois/whois/google.com
    method: GET
    data_selector: null
    params: {}
- name: pdf_to_text_url
  endpoint:
    path: /pdf-to-text-url/
    method: POST
- name: pdf_to_text_file
  endpoint:
    path: /pdf-to-text-file/
    method: POST
- name: pdf_to_html_url
  endpoint:
    path: /pdf-to-html-url/
    method: POST
- name: pdf_to_html_file
  endpoint:
    path: /pdf-to-html-file/
    method: POST
- name: pdf_to_html_url
  endpoint:
    path: /api/v1/magicapi/pdf-extract/pdf-to-html-url/
    method: POST
    data_selector: html
- name: pdf_to_text_url
  endpoint:
    path: /api/v1/magicapi/pdf-extract/pdf-to-text-url/
    method: POST
    data_selector: text
- name: pdf_to_text_file
  endpoint:
    path: /api/v1/magicapi/pdf-extract/pdf-to-text-file/
    method: POST
    data_selector: text
- name: pdf_to_html_file
  endpoint:
    path: /api/v1/magicapi/pdf-extract/pdf-to-html-file/
    method: POST
    data_selector: html
- name: upscale2x
  endpoint:
    path: /upscaler/upscale2x/
    method: POST
    data_selector: response
    params: {}
- name: upscale4x
  endpoint:
    path: /upscaler/upscale4x/
    method: POST
    data_selector: response
    params: {}
- name: upscale8x
  endpoint:
    path: /upscaler/upscale8x/
    method: POST
    data_selector: response
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: dnschecker
  endpoint:
    path: /api/v1/magicapi/dnschecker/dnschecker
    method: POST
    data_selector: records
- name: process_image
  endpoint:
    path: /api/v1/magicapi/period/period
    method: POST
    data_selector: request_id
    params: {}
- name: get_result
  endpoint:
    path: /api/v1/magicapi/period/predictions/REQUEST_ID
    method: GET
    data_selector: status
    params: {}
- name: restoration
  endpoint:
    path: /api/v1/magicapi/restoration/restoration
    method: POST
    data_selector: request_id
    params: {}
- name: predictions
  endpoint:
    path: /api/v1/magicapi/restoration/predictions/REQUEST_ID
    method: GET
    data_selector: status
    params: {}
- name: toonify
  endpoint:
    path: /api/v1/toonme-api/toonify/toonme/v1/
    method: POST
    data_selector: image_process_response
- name: get_result
  endpoint:
    path: /api/v1/toonme-api/toonify/toonme/v1/result/
    method: POST
    data_selector: image_process_response
- name: coder
  endpoint:
    path: /api/v1/magicapi/coder/coder
    method: POST
    data_selector: request_id
    params: {}
- name: predictions
  endpoint:
    path: /api/v1/magicapi/coder/predictions/REQUEST_ID
    method: GET
    data_selector: status
    params: {}
- name: faceswap
  endpoint:
    path: /api/v1/magicapi/faceswap/faceswap
    method: POST
    data_selector: output
- name: image_upload
  endpoint:
    path: /api/v1/magicapi/image-upload/upload
    method: POST
    data_selector: url
- name: deblurer
  endpoint:
    path: /api/v1/magicapi/deblurer/deblurer
    method: POST
    data_selector: request_id
- name: predictions
  endpoint:
    path: /api/v1/magicapi/deblurer/predictions/REQUEST_ID
    method: GET
    data_selector: status
- name: process_image
  endpoint:
    path: /api/v1/magicapi/hair/hair
    method: POST
    data_selector: ''
    params: {}
- name: get_result
  endpoint:
    path: /api/v1/magicapi/hair/predictions/REQUEST_ID
    method: GET
    data_selector: ''
    params: {}
- name: predictions
  endpoint:
    path: /aiqrcode/predictions
    method: POST
    data_selector: output
    params: {}
- name: status
  endpoint:
    path: /aiqrcode/status/{request_id}
    method: GET
    data_selector: status
    params: {}
- name: whisper
  endpoint:
    path: /api/v1/magicapi/whisper/whisper
    method: POST
    data_selector: audio
    params: {}
- name: predictions
  endpoint:
    path: /api/v1/magicapi/whisper/predictions/REQUEST_ID
    method: GET
    data_selector: status
    params: {}
- name: colorizer
  endpoint:
    path: /api/v1/magicapi/colorizer/colorizer
    method: POST
    data_selector: request_id
- name: predictions
  endpoint:
    path: /api/v1/magicapi/colorizer/predictions/REQUEST_ID
    method: GET
    data_selector: status
- name: openjourney_request
  endpoint:
    path: /api/v1/magicapi/openjourney/openjourney
    method: POST
    data_selector: '{}'
- name: openjourney_prediction
  endpoint:
    path: /api/v1/magicapi/openjourney/predictions/REQUEST_ID
    method: GET
    data_selector: '{}'
- name: object_remover
  endpoint:
    path: /api/v1/magicapi/objectremover/objectremover
    method: POST
    data_selector: ''
    params: {}
- name: predictions
  endpoint:
    path: /api/v1/magicapi/objectremover/predictions/REQUEST_ID
    method: GET
    data_selector: ''
    params: {}
- name: captioner
  endpoint:
    path: /api/v1/magicapi/captioner/captioner
    method: POST
    data_selector: request_id
- name: predictions
  endpoint:
    path: /api/v1/magicapi/captioner/predictions/REQUEST_ID
    method: GET
    data_selector: status
- name: object_detector
  endpoint:
    path: /api/v1/magicapi/objectdetector/objectdetector
    method: POST
    data_selector: response
    params: {}
- name: predictions
  endpoint:
    path: /api/v1/magicapi/objectdetector/predictions/REQUEST_ID
    method: GET
    data_selector: result
    params: {}
- name: nsfw_detection
  endpoint:
    path: /api/v1/magicapi/nsfw/nsfw
    method: POST
    data_selector: request_id
- name: nsfw_prediction
  endpoint:
    path: /api/v1/magicapi/nsfw/predictions/REQUEST_ID
    method: GET
    data_selector: status
- name: autocompletes
  endpoint:
    path: /autocompletes
    method: POST
    data_selector: entities
    params: {}
- name: organizations
  endpoint:
    path: /entities/organizations
    method: POST
    data_selector: properties
    params: {}
- name: search_organizations
  endpoint:
    path: /searches/organizations
    method: POST
    data_selector: entities
    params:
      limit: 50
- name: organization
  endpoint:
    path: /services/data/vXX.X/sobjects/Organization
    method: GET
    data_selector: records
    params: {}
- name: extract
  endpoint:
    path: /api/v1/pipfeed/parse/extract
    method: POST
    data_selector: response
    params: {}
- name: image_faceswap
  endpoint:
    path: /image/run
    method: POST
    params:
      target_url: ''
      swap_url: ''
      target_face_index: 0
- name: image_faceswap_result
  endpoint:
    path: /image/result/
    method: POST
    params:
      request_id: ''
- name: video_faceswap
  endpoint:
    path: /video/run
    method: POST
    params:
      target_url: ''
      swap_url: ''
      target_face_index: 0
- name: video_faceswap_result
  endpoint:
    path: /video/result/
    method: POST
    params:
      request_id: ''
- name: meta_llama_3_8b_instruct
  endpoint:
    path: /api/v1/bridgeml/meta-llama3-8b/bridgeml/meta-llama3-8b
    method: POST
    data_selector: choices
    params: {}
- name: meta_llama_3_70b
  endpoint:
    path: /api/v1/bridgeml/meta-llama3-70b/bridgeml/meta-llama3-70b
    method: POST
    data_selector: choices
    params: {}
- name: Mistral-7B-Instruct
  endpoint:
    path: /store/bridgeml/mistralai7b
    method: GET
    data_selector: model
    params: {}
- name: mistral_api
  endpoint:
    path: /api/v1/bridgeml/mistralai7b/bridgeml/mistralai7b
    method: POST
    data_selector: choices
    params: {}
- name: Mixtral Model
  endpoint:
    path: /api/v1/models/mistralai/Mixtral-8x22B-Instruct-v0.1
    method: POST
    data_selector: response
    params: {}
- name: bridgeml_mistralai8x22
  endpoint:
    path: /api/v1/bridgeml/mistralai8x22/bridgeml/mistralai8x22
    method: POST
    data_selector: choices
    params: {}
- name: Llama 2
  endpoint:
    path: /api/llama2
    method: GET
    data_selector: model_details
    params: {}
- name: meta_llama_request
  endpoint:
    path: /api/v1/bridgeml/meta-llama7b/bridgeml/meta-llama7b
    method: POST
    data_selector: choices
    params: {}
- name: meta_llama_13b
  endpoint:
    path: /api/v1/bridgeml/meta-llama13b/bridgeml/meta-llama13b
    method: POST
    data_selector: choices
    params: {}
- name: meta_llama70b
  endpoint:
    path: /api/v1/bridgeml/meta-llama70b/bridgeml/meta-llama70b
    method: POST
    data_selector: choices
    params: {}
- name: google_gemma_7b_it
  endpoint:
    path: /bridgeml/google
    method: POST
    data_selector: choices
    params: {}
- name: NeuralHermesRequest
  endpoint:
    path: /api/v1/bridgeml/mlabonne/bridgeml/mlabonne
    method: POST
    data_selector: choices
    params: {}
- name: request
  endpoint:
    path: /bridgeml/baai
    method: POST
    data_selector: messages
    params: {}
- name: codellama
  endpoint:
    path: /api/v1/bridgeml/codellama/bridgeml/codellama
    method: POST
    data_selector: choices
    params: {}
- name: text-to-image
  endpoint:
    path: /text-to-image
    method: POST
    data_selector: result
- name: generate_audio
  endpoint:
    path: /api.market/store/bridgeml/text-to-audio
    method: POST
    data_selector: audio_url
    params: {}
- name: text_to_audio
  endpoint:
    path: /api/v1/bridgeml/text-to-audio/text-to-audio
    method: POST
    data_selector: output
    params: {}
- name: image_face_swap
  endpoint:
    path: /api/v1/capix/faceswap/faceswap/v1/image
    method: POST
    data_selector: ''
    params: {}
- name: video_face_swap
  endpoint:
    path: /api/v1/capix/faceswap/faceswap/v1/video
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_face_swap_result
  endpoint:
    path: /api/v1/capix/faceswap/result/
    method: POST
    data_selector: ''
    params: {}
- name: MakeUp
  endpoint:
    path: /api-product-docs/capix-ai/makeup
    method: GET
- name: apply_photolab_effect_v1
  endpoint:
    path: /api/v1/capix/photolab/photolab/v1/
    method: POST
    data_selector: ''
    params: {}
- name: apply_photolab_effect_v2
  endpoint:
    path: /api/v1/capix/photolab/photolab/v2/
    method: POST
    data_selector: ''
    params: {}
- name: get_photolab_result
  endpoint:
    path: /api/v1/capix/photolab/result/
    method: POST
    data_selector: ''
    params: {}
- name: colorize
  endpoint:
    path: /api/v1/capix/colorizer/colorize/v1/
    method: POST
    data_selector: response
    params: {}
- name: colorize
  endpoint:
    path: /capix/colorizer/colorize/v1/
    method: POST
    data_selector: response
    params: {}
- name: upscaler_v1
  endpoint:
    path: /api/v1/capix/upscaler/upscaler/v1/
    method: POST
    data_selector: response
    params: {}
- name: upscaler_v2
  endpoint:
    path: /api/v1/capix/upscaler/upscaler/v2/
    method: POST
    data_selector: response
    params: {}
- name: upscaler_v1
  endpoint:
    path: /api/v1/capix/upscaler/upscaler/v1/
    method: POST
    data_selector: null
    params: {}
- name: upscaler_v2
  endpoint:
    path: /api/v1/capix/upscaler/upscaler/v2/
    method: POST
    data_selector: null
    params: {}
- name: rembg
  endpoint:
    path: /api/v1/capix/rembg/rembg
    method: POST
    data_selector: response
    params: {}
- name: rembg
  endpoint:
    path: /api/v1/capix/rembg/rembg
    method: POST
    data_selector: response
    params: {}
- name: inpainting
  endpoint:
    path: /api/v1/capix/inpainting/inpainting
    method: POST
    data_selector: response
    params: {}
- name: inpainting
  endpoint:
    path: /api/v1/capix/inpainting/inpainting
    method: POST
    data_selector: null
    params: {}
- name: tts
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: text_to_speech
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: home_configuration
  endpoint:
    path: /homegpt/home/v1/
    method: POST
    data_selector: null
    params: {}
- name: room_configuration
  endpoint:
    path: /homegpt/room/v1/
    method: POST
    data_selector: null
    params: {}
- name: fetch_room_result
  endpoint:
    path: /homegpt/result/
    method: POST
    data_selector: null
    params: {}
- name: detector
  endpoint:
    path: /api/v1/capix/free/detector/v1/
    method: POST
    data_selector: ''
- name: content_analysis
  endpoint:
    path: /
    method: POST
    data_selector: response
    params: {}
- name: AI Story Generator
  endpoint:
    path: /api.market/store/capix/story
    method: GET
- name: story_generation
  endpoint:
    path: /
    method: POST
    data_selector: body
    params: {}
- name: story_generate
  endpoint:
    path: /story/generate/story/v1/
    method: POST
    data_selector: story
- name: story_generation
  endpoint:
    path: /api/v1/capix/story/generate/story/v1/
    method: POST
    data_selector: response
    params:
      text: 'Story Topic: A Time-Travel Adventure



        Setting: The story is set in both the present day and the Victorian era. The
        present-day setting is a bustling modern city known for its technological
        advancements. The Victorian setting is characterized by cobblestone streets,
        gas-lit lamps, and the early stages of industrialization.



        Main Characters:



        Alex: A curious and adventurous software engineer from the present day who
        inadvertently discovers a time-travel device.

        Eliza: A resourceful and intelligent Victorian-era inventor who dreams of
        changing the future.

        Plot Details:



        Discovery of the Time Machine: Alex discovers an old, mysterious device in
        their attic, left behind by a forgotten ancestor. Experimenting with it, they
        accidentally activate it and are transported to the Victorian era.

        Meeting Eliza: Alex meets Eliza, who is fascinated by the time machine and
        Alex''s futuristic knowledge. Together, they explore the possibilities of
        time travel.

        A Threat Emerges: A sinister figure from the Victorian era learns about the
        time machine and wants to use it for nefarious purposes, threatening both
        the past and the future.

        Race Against Time: Alex and Eliza must work together to safeguard the time
        machine and prevent the alteration of history. They face challenges in both
        eras, blending elements of Victorian society with futuristic technology.

        Resolution: The story concludes with a thrilling confrontation, and a decision
        that affects both characters'' destinies.

        Themes: The story explores themes of adventure, the ethics of time travel,
        the impact of technology on society, and the timeless nature of human curiosity
        and ambition.'
      word_count: 1200
      mode: Creative
      story_genre: Mystery
- name: generate_essay
  endpoint:
    path: /api/v1/capix/essay/generate/essay/v1/
    method: POST
    data_selector: response
    params: {}
- name: generate_book_title
  endpoint:
    path: /api/v1/capix/title/generate/booktitle/v1/
    method: POST
    data_selector: ''
    params: {}
- name: book_title
  endpoint:
    path: /api/v1/capix/title/generate/booktitle/v1/
    method: POST
    data_selector: titles
- name: FindDrivingRoute
  endpoint:
    path: /api/v1/trueway/routing/DirectionsService/FindDrivingRoute
    method: GET
    data_selector: response
    params:
      stops: 40.629041,-74.025606;40.630099,-73.993521;40.644895,-74.013818;40.627177,-73.980853
      avoid_tolls: 'false'
      avoid_highways: 'false'
      avoid_ferries: 'false'
      optimize: 'false'
- name: FindDrivingPath
  endpoint:
    path: /DirectionsService/FindDrivingPath
    method: GET
    data_selector: route
    params:
      origin: 40.629041,-74.025606
      destination: 40.627177,-73.980853
      avoid_tolls: 'false'
      avoid_highways: 'false'
      avoid_ferries: 'false'
- name: Geocode
  endpoint:
    path: /api/v1/trueway/geocoding/GeocodingService/Geocode
    method: GET
    data_selector: results
    params:
      address: 505 Howard St, San Francisco
      country: US
      language: en
      bounds: -90.0,-180.0,90.0,180.0
- name: ReverseGeocode
  endpoint:
    path: /api/v1/trueway/geocoding/GeocodingService/ReverseGeocode
    method: GET
    data_selector: results
    params:
      location: 37.7879493,-122.3961974
      language: en
- name: CalculateDrivingMatrix
  endpoint:
    path: /api/v1/trueway/matrix/MatrixService/CalculateDrivingMatrix
    method: GET
    params:
      origins: 40.629041,-74.025606;40.630099,-73.993521;40.644895,-74.013818;40.627177,-73.980853
      destinations: 40.629041,-74.025606;40.630099,-73.993521;40.644895,-74.013818;40.627177,-73.980853
      avoid_tolls: 'false'
      avoid_highways: 'false'
      avoid_ferries: 'false'
- name: FindPlaceByText
  endpoint:
    path: /api/v1/trueway/places/PlacesService/FindPlaceByText
    method: GET
    data_selector: results
    params:
      text: required
      language: optional
      bounds: optional
- name: FindPlacesNearby
  endpoint:
    path: /api/v1/trueway/places/PlacesService/FindPlacesNearby
    method: GET
    data_selector: results
    params:
      location: required
      radius: optional
      type: optional
      language: optional
- name: cartoon_transformation
  endpoint:
    path: /api/v1/ailabtools/cartoon-yourself/portrait/effects/portrait-animation
    method: POST
    data_selector: data
    params: {}
- name: full_body_cartoonization
  endpoint:
    path: /cartoonization/full-body
    method: POST
- name: facial_cartoonization
  endpoint:
    path: /cartoonization/facial
    method: POST
- name: avatar_cartoonization
  endpoint:
    path: /cartoonization/avatar
    method: POST
- name: parse_resume
  endpoint:
    path: /api/v1/sharpapi.com/resume/api/v1/hr/parse_resume
    method: POST
    data_selector: result
    params: {}
- name: check_parsing_status
  endpoint:
    path: /api/v1/sharpapi.com/resume/api/v1/hr/parse_resume/job/status/{job_id}
    method: GET
    data_selector: data.attributes.result
    params: {}
- name: airports
  endpoint:
    path: /airports/v1/airports/iata/SIN
    method: GET
    data_selector: data
- name: airports
  endpoint:
    path: /v1/airports
    method: GET
    data_selector: data
    params: {}
- name: flight_duration
  endpoint:
    path: /v1/airports/flight_duration/IATA/{departure_airport}/{departure_date}/{departure_time}/IATA/{arrival_airport}/{arrival_date}/{arrival_time}
    method: GET
    data_selector: flight_length
    params: {}
- name: specific_airport
  endpoint:
    path: /v1/airports/{airport_id}
    method: GET
    data_selector: data
    params: {}
- name: text_to_speech_conversion
  endpoint:
    path: /convert
    method: POST
    data_selector: audioFile
    params: {}
- name: available_models
  endpoint:
    path: /models
    method: GET
    data_selector: models
    params: {}
- name: available_languages
  endpoint:
    path: /languages
    method: GET
    data_selector: languages
    params: {}
- name: models
  endpoint:
    path: /models/list
    method: GET
    data_selector: models
- name: languages
  endpoint:
    path: /languages/list
    method: GET
    data_selector: languages
- name: tts_run
  endpoint:
    path: /tts/run
    method: POST
    data_selector: result
notes:
- API Playground is a place for anyone to test out any API they have subscribed to.
- Api.market logs every single request and response unless otherwise specified.
- Anyone can use or test any api with FREE plan as long as they are signed in and
  subscribed to any of the api.
- Outputs with error codes aren't counted as successful api calls.
- All MCP servers use the same authentication header
- Every API on API.Market is automatically an MCP server
- Never hardcode API keys in shared code
- Use environment variables for API keys
- Rotate keys regularly for security
- Monitor usage through API.Market dashboard
- Every API on API.Market is automatically an MCP server.
- No setup required beyond configuration.
- Rate limits depend on your API.Market subscription tier. Check your dashboard for
  current limits.
- Error Handling section provides additional insights on managing API responses.
- This Pricing Plan allows API Sellers to offer a free product that enables users
  to experience the platform without providing credit card information. Typically,
  this plan is limited to a few hundred API calls per month.
- This Pricing Plan allows API Sellers to offer a product where charges are incurred
  at the end of the subscription cycle based on usage, calculated as the number of
  API Calls multiplied by the Cost per API Call.
- This Pricing Plan enables API Sellers to provide a straightforward subscription
  product. Once the customer reaches the allocated quota of API calls, they will receive
  a 429 error.
- This Pricing Plan allows API Sellers to provide a subscription product where customers
  are charged based on the overage amount once they exceed the allocated quota of
  API calls.
- You can sign in using any email on your API store.
- For an endpoint that looks like this, you can send a POST request using any of the
  methods described.
- Default behavior consumes 1 API call per request unless specified otherwise.
- Endpoints can be marked as FREE to not reduce API usage.
- Override headers are internal to MagicAPI and are not visible to end users.
- Adjustments must be made within a 6-hour window from the original request time.
- Offers access to various DNS records including A, AAAA, MX, NS, SOA, TXT, HINFO
  and more.
- Returns DNS records in a structured JSON format.
- The image is stored securely for no more than one hour, after which it is permanently
  deleted.
- The API automatically filters out NSFW content.
- Images are automatically deleted after 7 days from the date of upload.
- This API incorporates rate limits to manage usage and prevent abuse.
- Uses API key for authentication
- Uses OAuth2 with refresh token
- Extract data from online news & articles. Get full metadata with content, images,
  authors, summary, category, keywords, topics, and more.
- Always keep your API.market key confidential.
- Respect the terms of use for the websites you are extracting information from.
- Ensure you handle the data you obtain responsibly and ethically.
- 'No /upload/ Endpoint: The new API requires you to provide public URLs for your
  target_url and swap_url directly.'
- 'New Endpoint Paths for Submitting Jobs: The paths for initiating image and video
  faceswaps are new.'
- 'Separate Result Endpoints: There are distinct endpoints for fetching image results
  (/image/result/) and video results (/video/result/).'
- If you were using the /upload/ endpoint in the old API, ensure your image and video
  files are accessible via public URLs.
- This is a cheap LLM API.
- This cheap LLM API was developed by Meta and released the Meta Llama 3 family of
  large language models.
- The Llama 3 instruction-tuned models are optimized for dialogue use cases.
- Model supports function calling and JSON mode.
- Mixtral-8x22B-Instruct-v0.1 supports function calling.
- Input is text only, output is generated text only.
- Llama 2 is intended for commercial and research use in English.
- Pretraining data has a cutoff of September 2022.
- You can use this easy to use and cheap LLM API here at https://api.market/store/bridgeml/meta-llama7b
- Use of this model is governed by the Meta license.
- You can try out this easy to use and cheap LLM API here at https://api.market/store/bridgeml/meta-llama13b
- Use in any manner that violates applicable laws or regulations is prohibited.
- This API allows interaction with the NeuralHermes model for various requests.
- Model is designed for a variety of natural language processing tasks.
- Fast text-to-image generation model capable of producing high-quality images
- The Video Faceswap API is limited to a maximum duration of 4 seconds.
- This API cannot be used for any NSFW content or images.
- All combo ids are not supported directly.
- API requires an API token for authentication.
- Replace API_KEY with your actual API key in all requests.
- Ensure that all JSON data in the request body is properly formatted.
- Word Count is the max word count of the story. Max 2000 is received.
- 'Writing Mode could be either: Standard, Complex, Creative, Simple.'
- 'Story Genre could be either: science fiction, mystery, fantasy, descriptive.'
- Ensure that the API key is kept secure and not exposed in public repositories or
  client-side code.
- Affordable alternative to the Google Maps API
- Supports up to 25 origins and destinations per request
- Utilizes sophisticated generative adversarial networks to deliver unique artistic
  transformations.
- Different styles available for cartoonization
- Free Resume Parsing API available
errors:
- '200: Successful execution'
- '200 OK: Successful API call'
- 'Error codes: Outputs with error codes aren''t counted as successful api calls.'
- '400 - Bad Request: The request was unacceptable, often due to missing a required
  parameter.'
- '401 - Unauthorized: No valid API key provided.'
- '404 - Not Found: The requested resource doesn''t exist.'
- '429 - Too many requests: API request limit exceeded. See section Rate Limiting
  for more info.'
- '5xx - Server Error: We have failed to process your request. (You can contact us
  anytime)'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck API key.'
- '429 Too Many Requests: Throttle API calls.'
- '401 Unauthorized: Missing or invalid x-magicapi-key.'
- '404 Not Found: No subscription matches the path.'
- '429 Too Many Requests: Rate-limit exceeded.'
- 'Unauthorized Access: If the request is made by a user other than the API store
  creator.'
- 'Time Limit Exceeded: If the override is attempted after the 2-hour window.'
- 'Invalid Input: Issues like missing parameters or incorrect data format.'
- 'Content Restrictions: The FaceSwap API does not process nude or NSFW images.'
- '400: Bad request. Check input parameters.'
- '401: Unauthorized. Invalid or missing API key.'
- '404: Resource not found.'
- '500: Internal server error. Retry after some time.'
- 'REQUEST_LIMIT_EXCEEDED: Exceeded the limit of 1000 requests per month.'
- Model may produce inaccurate or biased responses.
- 'Invalid API_KEY: Ensure that the API key is correctly set.'
- '400 Bad Request: Check the request body for required fields.'
- '401 Unauthorized: Check API key'
- '400 Bad Request: The request was invalid. This can happen if the JSON is malformed
  or required parameters are missing.'
- '401 Unauthorized: The API key provided in the token header is invalid.'
- '500 Internal Server Error: An error occurred on the server while processing the
  request.'
- '401 Unauthorized: Invalid token.'
- '400 Bad Request: Invalid request body.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.magicapi.dev
  headers:
    Accept: application/json
    Content-Type: application/json
source_metadata: null
