resources:
- name: sessions
  endpoint:
    path: /sessions
    method: POST
    data_selector: session
    params: {}
- name: clusters
  endpoint:
    path: /teams/{team_id}/clusters/{cluster_id}
    method: PUT
    data_selector: cluster
    params: {}
- name: Deployment Architecture
  endpoint:
    path: /pro-architecture/architecture-overview
    method: GET
    data_selector: data
    params: {}
- name: SaaS
  endpoint:
    path: /pro-architecture/saas
    method: GET
    data_selector: data
    params: {}
- name: Hybrid Cloud
  endpoint:
    path: /pro-architecture/hybrid-cloud
    method: GET
    data_selector: data
    params: {}
- name: Private Cloud
  endpoint:
    path: /pro-architecture/private-cloud
    method: GET
    data_selector: data
    params: {}
- name: On-Premises
  endpoint:
    path: /pro-architecture/on-prem
    method: GET
    data_selector: data
    params: {}
- name: data_loader
  endpoint:
    path: /data_loader
    method: POST
    data_selector: data
    params: {}
- name: transformer
  endpoint:
    path: /transformer
    method: POST
    data_selector: data
    params: {}
- name: data_exporter
  endpoint:
    path: /data_exporter
    method: POST
    data_selector: data
    params: {}
- name: file_versioning
  endpoint:
    path: /guides/version-control/file-versions
    method: GET
    data_selector: version_history
- name: Deployments App
  endpoint:
    path: /extensibility/pro-api-reference/deployments/overview
    method: POST
- name: Version Control Terminal
  endpoint:
    path: /extensibility/pro-api-reference/workspaces/update-workspace
    method: PUT
- name: deployment
  endpoint:
    path: /extensibility/pro-api-reference/deployments/overview
    method: POST
- name: workspace
  endpoint:
    path: /extensibility/pro-api-reference/workspaces/update-workspace
    method: PUT
- name: deployment
  endpoint:
    path: /extensibility/pro-api-reference/deployments/overview
    method: POST
- name: workspace
  endpoint:
    path: /extensibility/pro-api-reference/workspaces/update-workspace
    method: PUT
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_loader
  endpoint:
    path: /path/to/data_loader
    method: GET
    data_selector: records
    params: {}
- name: data_exporter
  endpoint:
    path: /path/to/data_exporter
    method: POST
    data_selector: records
    params: {}
- name: sessions
  endpoint:
    path: /api/sessions
    method: POST
    data_selector: session
    params: {}
- name: pipelines
  endpoint:
    path: /api/pipelines
    method: GET
    data_selector: pipelines
    params: {}
- name: charismatic_inventor
  endpoint:
    path: /pipelines/charismatic_inventor/metadata.yaml
- name: environment_variables
  endpoint:
    path: /development/variables/environment-variables
    method: GET
    data_selector: variables
- name: swords
  endpoint:
    path: /swords
    method: GET
- name: teams_swords
  endpoint:
    path: /teams/:id/swords
    method: GET
- name: sword_detail
  endpoint:
    path: /swords/:id
    method: GET
- name: Sword
  endpoint:
    path: /swords
    method: GET
- name: Sword Create
  endpoint:
    path: /swords
    method: POST
- name: Sword Detail
  endpoint:
    path: /swords/:id
    method: GET
- name: Sword Update
  endpoint:
    path: /swords/:id
    method: PUT
- name: Sword Delete
  endpoint:
    path: /swords/:id
    method: DELETE
- name: Team Sword Create
  endpoint:
    path: /teams/:id/swords
    method: POST
- name: Team Sword List
  endpoint:
    path: /teams/:id/swords
    method: GET
- name: sword
  endpoint:
    path: /swords
    method: GET
- name: team_sword
  endpoint:
    path: /teams/:id/swords
    method: GET
- name: sword
  endpoint:
    path: /swords
    method: GET
- name: sword
  endpoint:
    path: /teams/:id/swords
    method: GET
- name: sword
  endpoint:
    path: /swords/:id
    method: GET
- name: sword
  endpoint:
    path: /swords
    method: POST
- name: sword
  endpoint:
    path: /swords/:id
    method: PUT
- name: sword
  endpoint:
    path: /swords/:id
    method: DELETE
notes:
- Mage Cloud API is used to manage Mage Pro clusters.
- Mage Pro is a production-grade platform for building, running, and scaling data
  pipelines.
- SAML/OAuth2 support for SSO integration
- Dynamic resource allocation based on workload patterns
- 'Control Plane: Managed by Mage in secure cloud infrastructure'
- 'Data Plane: Deployed in your AWS, GCP, or Azure environment'
- 'Connectivity: Secure agent-based communication between planes'
- 'Resource Management: Configurable compute profiles with auto-scaling'
- 'Pipeline Execution: All data processing occurs within your network boundary'
- Deploy securely in your private cloud environment
- Private cloud deployments allow developers to have complete architectural control
  over the control plane and the data plane.
- A valid Mage Pro license key is required for all on-prem deployments.
- The license key must be included in your deployment configuration (Kubernetes or
  Docker) before the server will start.
- User management includes Admin, Editor, and Viewer roles.
- Monitoring tools provide visibility into costs and usage.
- To utilize the collaborative workspace environment, please contact Mage to request
  an account upgrade.
- The container will take up to several minutes to update and restart with the new
  environment configuration.
- Mage makes building data pipelines intuitive through its block-based architecture.
- Supports batch, data integration, and streaming pipelines.
- Pipeline automation is a critical component of production data workflows.
- This foundational automation capability enables consistent, reliable data processing
  without manual intervention.
- Supported Git providers include GitHub and GitLab, with OAuth and SSH authentication
  options available for secure repository integration.
- Both approaches use the same tools and follow identical workflows.
- Before using the Git Terminal, you must first authenticate with GitHub through the
  Deploy App. This one-time setup enables all Git operations within Mage Pro.
- Currently the deployments application is only available for GitHub, GitLab, and
  Bitbucket users.
- 'Mage Pro offers a modern alternative: visual pipelines, built-in observability,
  and AI-assisted development, with zero DevOps overhead.'
- Authentication uses the same credentials from your GitHub connection
- 'Mage Pro offers a powerful alternative: a unified platform for data integration,
  transformation, and orchestration with full code control, AI-assisted development,
  and cloud-native scalability.'
- 'Global Hooks can be triggered at two different points during the execution of a
  pipeline: before or after a specific block in the pipeline.'
- Toggling on the history and logging feature will significantly degrade performance
  of the operations resolution time.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- You can monitor many metrics for each of your pipelines and blocks.
- Soon, you’ll be able to monitor aggregate metrics across all pipelines and blocks.
- In Mage version `0.8.83` and above, you don’t need to specify the environment variable
  anymore.
- Using Mage with Spark is much easier if you use Docker.
- You need to whitelist your IP in the security group of your EMR cluster to access
  it.
- Add environment-specific overrides for your pipeline configuration.
- Environment variables may be set in your Docker container to configure Mage settings.
- If you’re running Mage using pip or conda, your local machine’s environment variables
  are accessible within the running Mage app.
- Requires setup of connected app in api
errors:
- '401 Unauthorized: Invalid session token.'
- '400 Bad Request: Check request payload.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404: Email/username and/or password invalid.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://cloud.mage.ai
  auth:
    type: oauth2
source_metadata: null
