resources:
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: campaign_by_id
  endpoint:
    path: /campaigns/{campaign_id}
    method: GET
    data_selector: record
    params: {}
- name: create_campaign
  endpoint:
    path: /campaigns/create
    method: POST
    data_selector: record
    params: {}
- name: update_campaign_schedule
  endpoint:
    path: /campaigns/<campaign-id>/schedule
    method: POST
    data_selector: record
    params: {}
- name: delete_campaign
  endpoint:
    path: /campaigns/{campaign_id}
    method: DELETE
    data_selector: record
    params: {}
- name: email_accounts
  endpoint:
    path: /email-accounts/
    method: GET
    data_selector: data
    params:
      offset: '0'
      limit: '100'
- name: create_email_account
  endpoint:
    path: /email-accounts/save
    method: POST
    data_selector: ok
    params: {}
- name: update_email_account
  endpoint:
    path: /email-accounts/{email_account_id}
    method: POST
    data_selector: ok
    params: {}
- name: fetch_email_account_by_id
  endpoint:
    path: /email-accounts/{account_id}/
    method: GET
    data_selector: data
    params: {}
- name: fetch_campaign_leads
  endpoint:
    path: /campaigns/{campaign_id}/leads
    method: GET
    data_selector: data
    params:
      offset: 0
      limit: 100
- name: fetch_lead_categories
  endpoint:
    path: /leads/fetch-categories
    method: GET
    data_selector: data
    params: {}
- name: fetch_lead_by_email
  endpoint:
    path: /leads/
    method: GET
    data_selector: data
    params: {}
- name: reply_to_lead
  endpoint:
    path: /campaigns/${campaign_id}/reply-email-thread
    method: POST
    data_selector: email_stats_id
    params: {}
- name: fetch_campaign_statistics
  endpoint:
    path: /campaigns/{campaign_id}/statistics
    method: GET
    data_selector: data
    params: {}
- name: fetch_campaign_statistics_by_date_range
  endpoint:
    path: /campaigns/{campaign_id}/analytics-by-date
    method: GET
    data_selector: data
    params: {}
- name: fetch_campaign_top_level_analytics
  endpoint:
    path: /campaigns/{campaign_id}/analytics
    method: GET
    data_selector: data
    params: {}
- name: add_leads_to_campaign
  endpoint:
    path: /campaigns/{campaign_id}/leads
    method: POST
    data_selector: lead_list
    params: {}
- name: resume_lead
  endpoint:
    path: /campaigns/{campaign_id}/leads/{lead_id}/resume
    method: POST
    data_selector: resume_lead_with_delay_days
    params: {}
- name: pause_lead
  endpoint:
    path: /campaigns/{campaign_id}/leads/{lead_id}/pause
    method: POST
    data_selector: {}
    params: {}
- name: delete_lead
  endpoint:
    path: /campaigns/{campaign_id}/leads/{lead_id}
    method: DELETE
    data_selector: {}
    params: {}
- name: unsubscribe_lead_from_campaign
  endpoint:
    path: /campaigns/${campaign_id}/leads/${lead_id}/unsubscribe
    method: POST
    data_selector: {}
    params: {}
- name: unsubscribe_lead_from_all_campaigns
  endpoint:
    path: /leads/${lead_id}/unsubscribe
    method: POST
    data_selector: {}
    params: {}
- name: add_update_global_block_list
  endpoint:
    path: /leads/add-domain-block-list
    method: POST
    data_selector: domain_block_list
    params: {}
- name: update_lead
  endpoint:
    path: /campaigns/{campaign_id}/leads/{lead_id}
    method: POST
    data_selector: {}
    params: {}
- name: update_lead_category
  endpoint:
    path: /campaigns/${campaign_id}/leads/${lead_id}/category
    method: POST
    data_selector: {}
    params: {}
- name: patch_campaign_status
  endpoint:
    path: /campaigns/${<campaign_id>}/status
    method: POST
    data_selector: status
    params: {}
- name: fetch_webhooks_by_campaign_id
  endpoint:
    path: /campaigns/<campaign-id>/webhooks
    method: GET
    data_selector: {}
    params: {}
- name: add_update_campaign_webhook
  endpoint:
    path: /campaigns/<campaign-id>/webhooks
    method: POST
    data_selector: {}
    params: {}
- name: delete_campaign_webhook
  endpoint:
    path: /campaigns/<campaign-id>/webhooks
    method: DELETE
    data_selector: {}
    params: {}
- name: add_client_to_system
  endpoint:
    path: /client/save
    method: POST
    data_selector: {}
    params: {}
- name: clients
  endpoint:
    path: /client/
    method: GET
    data_selector: '[*]'
- name: reconnect_failed_email_accounts
  endpoint:
    path: /email-accounts/reconnect-failed-email-accounts
    method: POST
    data_selector: ok
- name: Smartlead APIs
  endpoint:
    path: /API-Documentation-a0d223bdd3154a77b3735497aad9419f
    method: GET
- name: Smartlead APIs
  endpoint:
    path: /API-Documentation-a0d223bdd3154a77b3735497aad9419f
    method: GET
- name: dkim_record
  endpoint:
    path: /services/data/vXX.X/sobjects/DKIMRecord
    method: POST
    data_selector: records
    params: {}
- name: email_authentication
  endpoint:
    path: /API-Documentation-a0d223bdd3154a77b3735497aad9419f
    method: GET
    data_selector: documentation
    params: {}
- name: dkim_record
  endpoint:
    path: /dkim/records
    method: POST
    data_selector: records
    params: {}
- name: spf_record
  endpoint:
    path: /dns/spf
    method: POST
    data_selector: records
- name: dmarc_record
  endpoint:
    path: /dns/dmarc
    method: POST
    data_selector: records
- name: dkim_record
  endpoint:
    path: /dns/dkim
    method: POST
    data_selector: records
- name: MX Records Setup
  endpoint:
    path: /api/mx-records-setup
    method: GET
- name: DKIM Setup
  endpoint:
    path: /api/dkim-setup
    method: GET
- name: secondary_domains
  endpoint:
    path: /api/secondary_domains
    method: GET
    data_selector: domains
- name: email_accounts
  endpoint:
    path: /api/email_accounts
    method: GET
    data_selector: data
- name: SPF
  endpoint:
    path: /api/spf
    method: POST
    data_selector: data
    params: {}
- name: DMARC
  endpoint:
    path: /api/dmarc
    method: POST
    data_selector: data
    params: {}
- name: DKIM
  endpoint:
    path: /api/dkim
    method: POST
    data_selector: data
    params: {}
- name: email_campaign
  endpoint:
    path: /api/v1/email_campaigns
    method: POST
    data_selector: data
    params: {}
- name: email_account
  endpoint:
    path: /api/email_accounts
    method: POST
    data_selector: data
- name: warmup_configuration
  endpoint:
    path: /api/warmup_configuration
    method: POST
    data_selector: data
- name: Spamhaus
  endpoint:
    path: /spamhaus
    method: GET
    data_selector: codes
    params: {}
- name: Barracuda
  endpoint:
    path: /barracuda
    method: GET
    data_selector: codes
    params: {}
- name: SpamCop
  endpoint:
    path: /spamcop
    method: GET
    data_selector: codes
    params: {}
- name: SORBS
  endpoint:
    path: /sorbs
    method: GET
    data_selector: codes
    params: {}
- name: UCEPROTECT
  endpoint:
    path: /uceprotect
    method: GET
    data_selector: codes
    params: {}
- name: DNSBL
  endpoint:
    path: /dnsbl
    method: GET
    data_selector: codes
    params: {}
- name: CBL
  endpoint:
    path: /cbl
    method: GET
    data_selector: codes
    params: {}
- name: Invaluement
  endpoint:
    path: /invaluement
    method: GET
    data_selector: codes
    params: {}
- name: PSBL
  endpoint:
    path: /psbl
    method: GET
    data_selector: codes
    params: {}
- name: NJABL
  endpoint:
    path: /njabl
    method: GET
    data_selector: codes
    params: {}
- name: blacklist_troubleshooting
  endpoint:
    path: /api/blacklist_troubleshooting
    method: GET
- name: automatic_test
  endpoint:
    path: /api/automatic_test
    method: POST
    data_selector: test_details
- name: deliverability_report
  endpoint:
    path: /api/deliverability_report
    method: GET
    data_selector: reports
- name: Domain Blocklist Check
  endpoint:
    path: /API-Documentation-a0d223bdd3154a77b3735497aad9419f
    method: GET
    data_selector: blocklist_info
- name: deliverability_test
  endpoint:
    path: /api/deliverability/test
    method: POST
    data_selector: test_results
    params: {}
- name: placement_score
  endpoint:
    path: /placement_score
    method: GET
    data_selector: score_data
    params: {}
- name: bounced_emails
  endpoint:
    path: /bounced_emails
    method: GET
    data_selector: bounced_data
    params: {}
- name: webhook
  endpoint:
    path: /app/settings/webhook
    method: POST
- name: blocklist_check
  endpoint:
    path: /api/v1/blocklist/check
    method: GET
    data_selector: results
- name: blocklist_removal
  endpoint:
    path: /api/v1/blocklist/remove
    method: POST
    data_selector: response
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: event
    params: {}
- name: webhook
  endpoint:
    path: /app/settings/webhook
    method: POST
- name: domains
  endpoint:
    path: /domains
    method: POST
- name: email_accounts
  endpoint:
    path: /email/accounts
    method: POST
- name: bounce_autopause
  endpoint:
    path: /api/bounce_autopause
    method: POST
    data_selector: webhook_notification
    params: {}
- name: outlook_mailboxes
  endpoint:
    path: /outlook/mailboxes
    method: GET
    data_selector: mailboxes
- name: webhook
  endpoint:
    path: /webhook
    method: POST
    data_selector: payload
- name: mailbox
  endpoint:
    path: /api/mailbox
    method: GET
    data_selector: mailboxes
- name: webhook_events
  endpoint:
    path: /webhooks/events
    method: POST
    data_selector: payload
    params: {}
- name: Google Mailbox
  endpoint:
    path: /services/data/vXX.X/sobjects/GoogleMailbox
    method: GET
    data_selector: records
- name: Outlook Mailbox
  endpoint:
    path: /services/data/vXX.X/sobjects/OutlookMailbox
    method: GET
    data_selector: records
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
- name: mcp
  endpoint:
    path: /sse
    method: GET
- name: campaign_metrics
  endpoint:
    path: /api/v1/campaigns/metrics
    method: GET
    data_selector: data
    params: {}
- name: all_leads
  endpoint:
    path: /api/v1/all_leads
    method: GET
    data_selector: leads
    params: {}
- name: account_health_check
  endpoint:
    path: /en/health-check
    method: GET
    data_selector: checklist
- name: inbox
  endpoint:
    path: /infrainbox/inboxes
    method: GET
    data_selector: inboxes
    params: {}
- name: mailboxes
  endpoint:
    path: /api/mailboxes
    method: GET
    data_selector: mailbox_data
    params: {}
- name: domains
  endpoint:
    path: /api/domains
    method: GET
    data_selector: domain_data
    params: {}
- name: mailbox
  endpoint:
    path: /api/mailbox
    method: POST
    data_selector: mailbox_details
- name: campaign_health
  endpoint:
    path: /campaigns/health
    method: GET
    data_selector: data
- name: email_account_health
  endpoint:
    path: /email_accounts/health
    method: GET
    data_selector: data
- name: lead_journey
  endpoint:
    path: /leads/{LEAD_ID}/journey
    method: GET
    data_selector: data
- name: domain_reputation
  endpoint:
    path: /domains/reputation
    method: GET
    data_selector: data
- name: All Leads
  endpoint:
    path: /all-leads
    method: GET
    data_selector: leads
notes:
- Your API key is rate limited to 10 requests every 2 seconds.
- Rate limited to 3 times in a 24 hour period
- Use your existing Smartlead credentials (username and password) to log in.
- The app will not allow you to sign up. It will be an extension to your Smartlead’s
  web application.
- Includes API key and OAuth, example curl requests, webhooks, and integration patterns
  with CRMs and analytics.
- If Two-Factor Authentication (2FA) is enabled, generate an Application Specific
  Password.
- Ensure that username and From Email fields are the same.
- Uses OAuth2 with refresh token — requires setup of connected app in Smartlead
- Some API endpoints may have rate limits
- Cold email landscape is evolving, your tracking should too.
- If you have enabled Two-Factor Authentication (2FA) for your Zoho account, you will
  need to generate an Application Specific Password to use with your IMAP client in
  order to send/receive emails.
- Ensure that you are using the correct Host URLs for your Zoho email configuration.
- Set a minimum time gap of 10 to 15 minutes per mailbox
- Keep daily caps within 40 to 50 during early stages and include warmup + outbound
- One platform per mailbox; avoid overlapping schedules
- Move to oAuth if not already done
- Keep your mailboxes healthy and connected with clear sending guidelines, smart pacing,
  and fast restore steps.
- Set a minimum time gap of 10 to 15 minutes per mailbox.
- Keep daily caps within 40 to 50 during early stages and include warmup + outbound.
- Use one sending platform per mailbox.
- Double-check your password to ensure it is correct.
- Carefully review your email client's settings to confirm that they match your email
  provider's recommended configuration.
- If you use two-factor authentication, create an application-specific password for
  your email client.
- Ensure your email provider hasn't blocked your account due to suspicious activity.
- Make sure your email client is running the latest version.
- This error may occur if you are pushing the sensitivity thresholds for Gmail. It
  is recommended to reduce the volume of emails per day or avoid using Gmail accounts
  for outbound campaigns.
- DMARC reports mean you've set up your authentication flow right
- Ensure DKIM, SPF, DMARC, and MX records are properly configured for email deliverability.
- Without MX records you won’t be able receive or even send emails.
- Understanding the difference between secondary domains and domain aliases is crucial
  for effective email domain management.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Changes made might need some time to update.
- Changes in DNS may take some time to propagate.
- Consider sending emails as plain text to improve deliverability.
- Smartlead offers SMTP/2FA approach, which will work PERFECTLY fine
- Prepare for some weird things to happen in Feb with Gmail
- Ensure to check the record type for SPF, DMARC, and DKIM entries.
- Implement authentication protocols like SPF, DKIM, and DMARC.
- Warm-up emails have nothing to do with your Email campaigns.
- The emails from warm-up don't consume your daily sending limit set for your email
  accounts.
- The impact on deliverability is not solely determined by the DMARC policy setting.
- Different DNSBL providers have their own set of return codes.
- Most removals take 24 to 72 hours.
- If the blacklist isn’t among the top 10 most impactful lists, you’re usually fine
  to continue sending.
- AI categorization feature is not available in the Base plan.
- The lead list and campaign performance data are NOT duplicated. You’ll need to upload
  a new lead list to the duplicated campaign.
- Currently you can use the test id for 1 test only.
- Each DNSBL provider may have its own set of return codes and meanings.
- Make sure you have a Smartlead account (create a trial if needed).
- Some objects like Contact may return nulls in deeply nested fields
- Tests can be set to run daily or weekly.
- Requires connected email accounts and campaigns.
- The Deliverability Report provides insights into email performance across various
  mailboxes.
- Emails may not be received due to poor sender reputation, bad email list quality,
  or spammy content.
- Check if the domain is listed on common blocklists (MXToolbox, Spamhaus).
- Rotate to a new, clean sending domain.
- Improve domain reputation with warm-up and authenticated sending (SPF, DKIM, DMARC).
- Open a support request with Microsoft if the ban persists.
- Verify that the domain is added and validated in your Outlook/Microsoft 365 tenant.
- Ensure MX and TXT records are correctly set up.
- If using a third-party SMTP, confirm the domain is properly authorized for relaying.
- Contact Microsoft support to request an exception for your tenant.
- If on a trial tenant, upgrade to a licensed Microsoft 365 account.
- Send at lower volume while warming up the domain.
- Reduce sending volume (10–15/day per mailbox for new accounts).
- Stagger campaigns across multiple verified domains and mailboxes.
- Monitor tenant activity in the Exchange admin center for limits and throttling.
- If using a shared SMTP, contact your provider for IP rotation.
- Move to a dedicated IP/server (SmartServer or equivalent).
- Pair the domain with a clean, non-blacklisted IP.
- Slow down sending volume and avoid sudden spikes.
- Improve personalization and engagement (avoid spammy content).
- Monitor open/reply rates — maintain positive sender reputation.
- Warm up the domain before scaling campaigns.
- Ensure SPF, DKIM, and DMARC are correctly configured for the sending domain.
- Verify the “MAIL FROM” domain matches your authenticated records.
- If relaying via Outlook, confirm the domain is authorized in the tenant.
- High Bounce Rate Auto-Protection can be enabled to pause campaigns if a defined
  bounce rate is hit.
- 'Auto bounce limit is reached: Smartlead offers a feature called High Bounce Rate
  Auto Protection to safeguard your email deliverability.'
- 'Running out of emails for your account: Smartlead operates based on the number
  of emails you have available in your account.'
- 'Connectivity issues with connected mailbox: If you have connected only one mailbox
  to your campaign, and that mailbox is experiencing connectivity issues or errors.'
- 'Exhausting all leads in the campaign: If you have added a limited number of leads
  to your campaign, and all of them have been processed or marked as ''completed.'''
- 'Billing issues: If there are issues with your billing, such as a failed payment
  or expired credit card.'
- 'Avoid Large Attachments: Some email servers reject emails that exceed a certain
  size. Keep attachments and overall email size to a minimum.'
- 'Watch Content Filters: Avoid using spammy words or overusing links, images, and
  exclamation points in your emails. Emails flagged as spam by content filters are
  more likely to bounce.'
- 'Choose an ESP with Good Reputation: Using reputable ESPs like Amazon SES, SendGrid,
  or Mailgun can help ensure better deliverability since they manage IP reputation
  and authentication protocols effectively.'
- 'Monitor ESP Health: Regularly monitor your ESP''s IP and domain reputation. If
  their IPs are blacklisted or their deliverability is low, consider switching providers.'
- 'Check Your Domain and IP: Regularly check if your sending domain or IP address
  is listed on blocklists like Spamhaus or MXToolbox. Being listed on a blocklist
  can cause bounces.'
- 'Remove Blocklist Listings: If your domain or IP is listed, follow the blocklist
  removal process provided by the relevant authority.'
- 'Remove Unengaged Users: If a user hasn’t opened or interacted with your emails
  over a significant period, consider removing them from your list. Sending to unengaged
  users can lead to bounces or spam complaints.'
- 'Plain Text vs. HTML: Consider sending emails with a simple format, such as plain
  text with minimal images and links. HTML-heavy emails or overly complex designs
  can trigger spam filters, leading to bounces.'
- 'Provide Text and HTML Versions: Always send a plain-text version of your email
  alongside the HTML version to ensure proper rendering and reduce the chances of
  bounces.'
- 'Review Bounce Codes: Every time an email bounces, the receiving server sends a
  bounce code (e.g., 4xx for soft bounces, 5xx for hard bounces). Analyze these codes
  to understand why your emails are bouncing and take corrective action.'
- 'Adjust Your Strategy: If you see patterns in bounce reports (e.g., specific ISPs
  rejecting your emails), adjust your sending patterns or contact the ISP for assistance.'
- DKIM configuration is tied to the domain of the sending email account.
- Different sender accounts on the same domain can have different DKIM records if
  not configured correctly.
- Lead lists are not transferred during duplication.
- SPF failures generally indicate that emails are being sent from servers that are
  not authorized to send on behalf of your domain.
- SPF is domain-based, email-specific factors like using third-party email services
  or forwarding can also cause SPF failures if the sending server is not properly
  listed in the SPF record.
- Ensure SPF, DKIM, and DMARC Pass
- Monitor Spam Scores
- Ensure Consistent Message-IDs
- Analyze Email Routing (Received)
- Maintain a Valid Return Path
- Send Plain Text and HTML Versions
- For new email domains or IP addresses, warm them up gradually by sending small volumes
  of emails over time to build a positive reputation.
- Use dedicated infrastructure if sending a high volume of cold emails.
- Ensure SPF, DKIM, and DMARC are properly configured before testing.
- Consider reaching out to the blacklist site to get your IP unlisted.
- For Gmail and Outlook Mailboxes, the IPs will get delisted on their own.
- The test will now run automatically according to the schedule you’ve set, without
  requiring manual intervention.
- You can review all deliverability reports in the timestamp view.
- Proper DNS configuration and DMARC alignment are essential for maintaining a healthy
  sender reputation and preventing email bounces or spam folder placement.
- DNS changes may take up to 24–48 hours to propagate.
- The Deliverability Report is a powerful tool for understanding how your emails are
  performing across multiple providers and how you can improve your campaigns.
- Always review your email before sending to check if the variable is rendering correctly.
- Make sure there are no spaces inside the brackets.
- The IP Reputation section is designed to provide a detailed look at your email deliverability
  and any blacklisting issues.
- Monitor bounce rates to improve sender reputation.
- Use email validation tools to clean your list.
- Ensure you've copied a valid API key
- If your API key fails, you may run out of GPT4 allowance or credits
- Blocklist checks can return multiple results.
- Removal requests may require evidence of issue resolution.
- The API key is available only for Smartlead Pro Plan users.
- DKIM is an email authentication method designed to verify that the email content
  hasn’t been altered during transit and that the sender is legitimate.
- Failures can occur due to incorrect configurations, inconsistencies in DNS records,
  or email-specific issues.
- Automatically pauses campaigns that exceed a predefined bounce threshold and sends
  detailed notifications via webhooks.
- Webhook URL should use HTTPS
- Accept POST requests with JSON
- Reply with a quick 2xx success
- Not all blacklists are equally impactful. Major ones like Spamhaus can severely
  affect email deliverability, while smaller ones (e.g., SORBS, UCEPROTECT) may not.
- Always preview your emails before sending.
- Ensure no formatting errors (like spaces inside variable tags).
- Use the X-Request-Id header as a unique event identifier.
- Always return 2xx for success, 4xx for invalid requests, and 5xx for temporary server
  errors.
- Smartlead checks for replies every 30–60 minutes to keep your email accounts safe
  and avoid spam flags.
- Untracked Replies is available from Pro plan.
- Some events are state-change events that depend on “new vs old” fields in the event
  payload.
- Manual Step Reached is emitted when a sequence hits a manual action step.
- Ensure that tracking pixels and link redirects are enabled in your sequences; disabling
  these will prevent open or click tracking.
- Verify that your sending domain has correct SPF, DKIM and DMARC records. Sender
  bounces often relate to misconfigured domains.
- Campaign track settings may include options like DONT_EMAIL_OPEN, DONT_LINK_CLICK,
  and DONT_REPLY_TO_AN_EMAIL.
- You need to ensure you've copied a valid API key
- If your API key fails, we will show an error message in this same area for when
  it fails.
- All Smartlead integration actions require an existing campaign.
- Domains and mailboxes bought through SmartSenders can’t be transferred and used
  out of Smartlead platform.
- Setup takes 24 to 48 hours to complete due to technical setup and email configuration.
- Mailboxes you purchase are standard SMTP and IMAP mailboxes hosted on new dedicated
  IP addresses with no prior sender history, so you must warm up your accounts to
  establish sender reputation before launching your outreach campaign to ensure high
  deliverability.
- Uses HTTPS for webhooks and accepts POST requests with JSON
- Design your receiver to check the event ID to avoid duplicates
- For Google mailboxes, start with 3-5 emails/domain. Warm up at 25 emails/day with
  a 60-75% reply rate for 2 weeks. Post-warmup, begin with 5-8 emails/day, scaling
  to 15-20/day after Week 4.
- Technically, you shouldn’t send more than 200 emails/day. However, it's recommended
  to stay below 50 emails/day (combined warmup + campaigns) for optimal deliverability.
- While possible, exceeding 20/day may harm deliverability. Spread volume across multiple
  mailboxes/domains.
- Domains and mailboxes purchased through SmartSenders are locked within the Smartlead
  platform and cannot be transferred externally.
- Mailboxes auto-renew monthly.
- Mid-month deletions are non-refundable.
- Mailboxes will be delivered within 24-48 hours after the order is placed.
- Your webhook URL must accept HTTPS POST requests with JSON.
- User-level webhooks override Client or Campaign-level webhooks.
- 'Be idempotent: Use X-Request-Id to prevent double-processing.'
- Always verify X-Smartlead-Signature.
- A 14-day warmup is required before starting campaigns.
- Each mailbox can safely send up to 20 cold emails and 20 warm emails per day.
- Each domain supports 1–5 mailboxes.
- Zapmail Standard includes admin access; InboxInfra does not.
- Webhook delivery is considered failed if the server does not confirm success or
  the request times out.
- Domains and mailboxes are exclusive to Smartlead and non-transferable.
- Metrics update in near-real time, but there may be a short delay.
- Smartlead MCP only supports SSE (Server-Sent Events). HTTPS transport is not supported.
- Campaign tracking settings can affect data metrics.
- Uses Smartlead API to automate reporting
- Requires API keys for requests
- Always double-check your DNS records after any domain or hosting changes and before
  launching major email campaigns.
- Check mailbox connectivity and verify your IMAP/SMTP or OAuth settings.
- Confirm your DNS records are correct.
- Immediate action is recommended if warmup emails aren’t sending, new bounces or
  authentication issues arise, or DNS changes have been made recently.
- SmartSenders allows you to purchase domains and email accounts directly through
  Smartlead’s marketplace.
- All DNS records are managed using Cloudflare because they are the best for DNS propagation.
- Flat $59/month quality upkeep fee covers continuous verification, scoring, and AI-driven
  enrichment.
- Setup typically completes within 24–48 hours after purchase.
- Domains/mailboxes are exclusive to Smartlead and can’t be transferred.
- The Smartlead MCP integration works only via SSE (Server-Sent Events) for now. HTTPS
  transport is not supported.
- API allows for detailed diagnostics and performance checks.
- Placeholders in commands need to be replaced with actual data.
- Inactive leads do not count toward your monthly lead limit.
- You can store unlimited inactive leads without paying extra.
- Successful email warm-up requires a few critical technical checks to ensure your
  domain and mailbox are ready to build a strong sending reputation.
- Sending too many emails too quickly can hurt your reputation and increase the chance
  of blocks or spam flags.
- 'Keep DNS clean: valid SPF, DKIM, DMARC, and MX.'
- 'Maintain connectivity: Ensure OAuth or SMTP and IMAP are connected.'
- SmartProspect is available as an add-on to any Smartlead plan.
- Users receive 2000 credits to explore SmartProspect before committing to the monthly
  maintenance fee.
errors:
- '400: BED REQUEST'
- '404: Campaign not found - Invalid campaign_id.'
- 400 BAD_REQUEST - ACCOUNT_ALREADY_EXIST
- 404 NOT_FOUND - ACCOUNT_NOT_FOUND
- ACCOUNT_VERIFICATION_FAILED
- '400 Bad Request: Invalid start_date & end_date range. Date difference should be
  max of 30days.'
- '400 Bad Request: Invalid campaign id.'
- '404 NOT FOUND: Campaign not found - Invalid campaign_id.'
- 'NOT_ACCEPTABLE: Bulk reconnect API cannot be consumed more than 3 times a day'
- 'Not Found: No failed email account found!'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Sending Quota Exceeded: Sending emails in short succession or bursts'
- 'invalid_grant: Authentication process issue'
- 'invalid_grant: Indicates an issue with the authentication process, where the server
  rejects the provided credentials.'
- '127.0.0.2: Listed (general spam source)'
- '127.0.0.3: Listed on the PBL. (Policy Block List)'
- '127.0.0.4: Listed on the XBL (compromised or infected machine)'
- 550 5.7.501 Access denied, banned sender domain
- 550 5.7.64 TenantAttribution; Relay Access Denied
- 550 5.7.708 Access denied, traffic not accepted from this IP
- 550 5.7.705 Service unavailable. Access denied, tenant has exceeded threshold
- 550 5.7.606 Access denied, banned sending IP
- 550 5.7.750 Access denied, suspected spam
- 550 5.7.1 Access denied, not authorized to relay
- '127.0.0.3: Listed (Policy Block List)'
- '127.0.0.4: Listed (compromised or infected machine)'
- 550 - No such user here
- 421 - Service temporarily unavailable
- 'Missing or Incorrect SPF Record in DNS: If your domain’s SPF record is missing
  or not configured correctly, any emails sent from that domain will fail SPF checks.'
- 'Sending from Unauthorized Servers: If you send emails from servers or services
  that are not listed in your SPF record, SPF will fail for those emails.'
- 'Too Many DNS Lookups in SPF Record: SPF has a limit of 10 DNS lookups per record.
  If you exceed this limit, SPF will fail due to an overly complex record.'
- '550 - No such user here: The email address doesn''t exist.'
- '421 - Service temporarily unavailable: The server is down temporarily.'
- Error message shown if API key fails
- 'Incorrect DKIM DNS Record: If the DKIM record in your domain’s DNS is incorrect
  or incomplete, validation will fail.'
- 'No DKIM Signature in Outgoing Email: The email server may not be signing the emails
  with the DKIM signature due to misconfiguration.'
- 'Mismatched DKIM Keys: If the private key used to sign the outgoing email doesn’t
  match the public key in the DKIM DNS record, validation will fail.'
- 4xx responses are treated as permanent failures—Smartlead will not retry.
- Repeated connection/authentication errors
- '429 Too Many Requests: Use a proper production webhook receiver instead of a limited
  test tool.'
- '4xx responses: Always reply with a 200 OK if you received the webhook successfully.'
- '5xx responses: Check your server logs and make sure the database or app isn’t slowing
  things down.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- It could fail due to pasting the wrong key to begin with
- It could fail if you've run out of GPT4 allowance or credits, you need to message
  OpenAI to increase your allowance for that situation
- '550: Sending limit exceeded'
- 'DOMAIN_NOT_AVAILABLE: Choose a different domain name.'
- 5xx errors will trigger retries from Smartlead.
- Avoid sending to catch-all or risky email addresses as they have high bounce rates.
- '429 responses: Use a proper production webhook receiver instead of a limited test
  tool.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'not reachable: MX or disabled inbox will cause this error'
- Throttle API calls or reduce frequency if encountering REQUEST_LIMIT_EXCEEDED
- Break down filters or add selectivity if encountering QUERY_TIMEOUT
- High bounce rates may occur when sending to personal inboxes.
- '401 Unauthorized: Check your admin credentials.'
- '500 Internal Server Error: Try again later or contact support.'
- 'Authentication fails: API key missing or incorrect'
- 'not reachable: MX or disabled inbox will cause'
- Warmup shows no sends today or yesterday on an enabled mailbox
- New bounces or auth failures appear
- DNS changes were made recently
auth_info:
  mentioned_objects: []
client:
  base_url: https://smartlead.ai
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
