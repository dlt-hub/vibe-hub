resources:
- name: AuditRunWithRuleFailurePresence
  endpoint:
    path: /v3/web-audits/{auditId}/runs/{runId}/scores
    method: GET
    data_selector: scores
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: account
  endpoint:
    path: /account
    method: GET
    data_selector: Account
- name: domains
  endpoint:
    path: /domains
    method: GET
    data_selector: Domain
- name: domain_count
  endpoint:
    path: /domains/count
    method: GET
    data_selector: EntityCount
- name: specific_domain
  endpoint:
    path: /domains/{domainId}
    method: GET
    data_selector: Domain
- name: update_domain
  endpoint:
    path: /domains/{domainId}
    method: PUT
    data_selector: Domain
- name: delete_domain
  endpoint:
    path: /domains/{domainId}
    method: DELETE
- name: web_audits
  endpoint:
    path: /domains/{domainId}/web-audits
    method: GET
    params:
      withRuns: true
      runsLimit: string
- name: web_journeys
  endpoint:
    path: /domains/{domainId}/web-journeys
    method: GET
    params: {}
- name: check_content_length
  endpoint:
    path: /files
    method: GET
    params:
      url: string
- name: upload_file
  endpoint:
    path: /files
    method: POST
    params:
      type: string
      name: string
      Content-Length: integer
- name: get_folders
  endpoint:
    path: /folders
    method: GET
    params: {}
- name: create_folder
  endpoint:
    path: /folders
    method: POST
    params: {}
- name: get_count
  endpoint:
    path: /folders/count
    method: GET
    params: {}
- name: find_folder
  endpoint:
    path: /folders/{folderId}
    method: GET
    params: {}
- name: update_folder
  endpoint:
    path: /folders/{folderId}
    method: PUT
    params: {}
- name: delete_folder
  endpoint:
    path: /folders/{folderId}
    method: DELETE
    params: {}
- name: get_users_with_folder_id
  endpoint:
    path: /folders/{folderId}/users
    method: GET
    params: {}
- name: add_users
  endpoint:
    path: /folders/{folderId}/users
    method: POST
    params: {}
- name: get_labels
  endpoint:
    path: /labels
    method: GET
    params: {}
- name: create_new_label
  endpoint:
    path: /labels
    method: POST
    params: {}
- name: update_label
  endpoint:
    path: /labels/{labelId}
    method: PUT
    params: {}
- name: delete_label
  endpoint:
    path: /labels/{labelId}
    method: DELETE
    params: {}
- name: all_journeys
  endpoint:
    path: /manual-journeys
    method: GET
    params: {}
- name: create_journey
  endpoint:
    path: /manual-journeys
    method: POST
    params: {}
- name: get_default_certificate
  endpoint:
    path: /manual-journeys/certificates/default
    method: GET
    params: {}
- name: journey
  endpoint:
    path: /manual-journeys/{manualJourneyId}
    method: GET
    params: {}
- name: initialize_journey
  endpoint:
    path: /manual-journeys/{manualJourneyId}
    method: POST
    params: {}
- name: update_journey
  endpoint:
    path: /manual-journeys/{manualJourneyId}
    method: PUT
    params: {}
- name: delete_journey
  endpoint:
    path: /manual-journeys/{manualJourneyId}
    method: DELETE
    params: {}
- name: createHarRun
  endpoint:
    path: /manual-journeys/{manualJourneyId}/har-runs
    method: POST
    data_selector: successful operation
    params:
      manualJourneyId: integer
- name: journeyLabels
  endpoint:
    path: /manual-journeys/{manualJourneyId}/labels
    method: GET
    data_selector: successful operation
    params:
      manualJourneyId: integer
- name: updateJourneyLabels
  endpoint:
    path: /manual-journeys/{manualJourneyId}/labels
    method: PUT
    data_selector: successful operation
    params:
      manualJourneyId: integer
- name: deleteJourneyLabel
  endpoint:
    path: /manual-journeys/{manualJourneyId}/labels/{labelId}
    method: DELETE
    data_selector: Item was successfully deleted
    params:
      manualJourneyId: integer
      labelId: integer
- name: journeyRules
  endpoint:
    path: /manual-journeys/{manualJourneyId}/rules
    method: GET
    data_selector: successful operation
    params:
      manualJourneyId: integer
- name: updateJourneyRules
  endpoint:
    path: /manual-journeys/{manualJourneyId}/rules
    method: PUT
    data_selector: successful operation
    params:
      manualJourneyId: integer
- name: allRuns
  endpoint:
    path: /manual-journeys/{manualJourneyId}/runs
    method: GET
    data_selector: successful operation
    params:
      manualJourneyId: integer
- name: run
  endpoint:
    path: /manual-journeys/{manualJourneyId}/runs/{runId}
    method: GET
    data_selector: successful operation
    params:
      manualJourneyId: integer
      runId: integer
- name: deleteJourneyRun
  endpoint:
    path: /manual-journeys/{manualJourneyId}/runs/{runId}
    method: DELETE
    data_selector: Item was successfully deleted
    params:
      manualJourneyId: integer
      runId: integer
- name: getRequestFilters
  endpoint:
    path: /manual-journeys/{manualJourneyId}/runs/{runId}/request-filters
    method: GET
    data_selector: successful operation
    params:
      manualJourneyId: integer
      runId: integer
- name: web_journeys
  endpoint:
    path: /rules/{ruleId}/web-journeys
    method: GET
    params:
      ruleId:
        in: path
        required: true
        type: integer
        format: int32
- name: tags
  endpoint:
    path: /tags
    method: GET
    params: {}
- name: tag
  endpoint:
    path: /tags/{tagId}
    method: GET
    params:
      tagId:
        in: path
        required: true
        type: integer
        format: int32
- name: users
  endpoint:
    path: /users
    method: GET
    params: {}
- name: user
  endpoint:
    path: /users/{userId}
    method: GET
    params:
      userId:
        in: path
        required: true
        type: integer
        format: int32
- name: user
  endpoint:
    path: /users/{userId}
    method: PUT
    data_selector: User
    params: {}
- name: user_folders
  endpoint:
    path: /users/{userId}/folders
    method: GET
    data_selector: UserFolder
    params: {}
- name: web_audit
  endpoint:
    path: /web-audits
    method: GET
    data_selector: Audit
    params: {}
- name: web_audit_actions
  endpoint:
    path: /web-audits/{webAuditId}/actions
    method: get
- name: web_audit_filters
  endpoint:
    path: /web-audits/{webAuditId}/filters
    method: get
- name: web_audit_login_actions
  endpoint:
    path: /web-audits/{webAuditId}/login-actions
    method: get
- name: web_audit_rules
  endpoint:
    path: /web-audits/{webAuditId}/rules
    method: get
- name: web_audit_runs
  endpoint:
    path: /web-audits/{webAuditId}/runs
    method: get
- name: web_journeys
  endpoint:
    path: /web-journeys
    method: get
- name: web_journey_runs
  endpoint:
    path: /web-journeys/{journeyId}/runs
    method: GET
    data_selector: items
    params:
      journeyId: integer
- name: run_web_journey
  endpoint:
    path: /web-journeys/{journeyId}/runs
    method: POST
    data_selector: items
    params:
      journeyId: integer
- name: get_web_journey_run
  endpoint:
    path: /web-journeys/{journeyId}/runs/{runId}
    method: GET
    data_selector: item
    params:
      journeyId: integer
      runId: integer
- name: fix_web_journey_run
  endpoint:
    path: /web-journeys/{journeyId}/runs/{runId}/actions/fix
    method: POST
    data_selector: item
    params:
      journeyId: integer
      runId: integer
- name: get_web_journey_run_results
  endpoint:
    path: /web-journeys/{journeyId}/runs/{runId}/results
    method: GET
    data_selector: item
    params:
      journeyId: integer
      runId: integer
notes:
- Requires setup of connected app in API
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401: Authentication credentials are missing or invalid'
- '404: Requested item not found'
- 401 Authentication credentials are missing or invalid
- 404 Requested item not found
- '403: Not Admin user or id parameter is not equal to current user id'
- '404: Not found user by given id'
- '401 Unauthorized: Authentication credentials are missing or invalid'
- '404 Not Found: Requested item not found'
- Requested resource not found
auth_info:
  mentioned_objects:
  - AuthToken
  - Authorization
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.observepoint.com/v2
source_metadata: null
