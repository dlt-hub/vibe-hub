resources:
- name: get_array
  endpoint:
    path: generated/pyexcel.get_array.html
    method: GET
- name: get_dict
  endpoint:
    path: generated/pyexcel.get_dict.html
    method: GET
- name: get_records
  endpoint:
    path: generated/pyexcel.get_records.html
    method: GET
- name: get_book_dict
  endpoint:
    path: generated/pyexcel.get_book_dict.html
    method: GET
- name: get_book
  endpoint:
    path: generated/pyexcel.get_book.html
    method: GET
- name: get_sheet
  endpoint:
    path: generated/pyexcel.get_sheet.html
    method: GET
- name: iget_book
  endpoint:
    path: generated/pyexcel.iget_book.html
    method: GET
- name: iget_array
  endpoint:
    path: generated/pyexcel.iget_array.html
    method: GET
- name: iget_records
  endpoint:
    path: generated/pyexcel.iget_records.html
    method: GET
- name: free_resources
  endpoint:
    path: generated/pyexcel.free_resources.html
    method: GET
- name: save_as
  endpoint:
    path: generated/pyexcel.save_as.html
    method: POST
- name: isave_as
  endpoint:
    path: generated/pyexcel.isave_as.html
    method: POST
- name: save_book_as
  endpoint:
    path: generated/pyexcel.save_book_as.html
    method: POST
- name: isave_book_as
  endpoint:
    path: generated/pyexcel.isave_book_as.html
    method: POST
- name: excel_file
  endpoint:
    path: /api/excel_file
    method: GET
    data_selector: records
    params: {}
- name: cell
  endpoint:
    path: /data/cell
    method: GET
    data_selector: data
- name: sheet
  endpoint:
    path: /data/sheet
    method: GET
    data_selector: data
- name: book
  endpoint:
    path: /data/book
    method: GET
    data_selector: data
- name: Sheet
  endpoint:
    path: /Sheet
    method: GET
    data_selector: content
- name: sheet
  endpoint:
    path: /sheet
    method: GET
    data_selector: content
    params: {}
- name: birth
  endpoint:
    path: /birth
    method: POST
    data_selector: data
    params: {}
- name: sheet
  endpoint:
    path: /get_sheet
    method: GET
- name: book
  endpoint:
    path: /get_book
    method: GET
- name: birth
  endpoint:
    path: /birth
    method: POST
    data_selector: records
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: result
- name: download
  endpoint:
    path: /download
    method: GET
    data_selector: output
- name: csv_file
  endpoint:
    path: open_a_csv_file
    method: GET
    data_selector: sheet
- name: add_row
  endpoint:
    path: add_a_new_row_to_an_existing_file
    method: POST
    data_selector: sheet
- name: update_row
  endpoint:
    path: update_an_existing_row_to_an_existing_file
    method: POST
    data_selector: sheet
- name: add_column
  endpoint:
    path: add_a_new_column_to_an_existing_file
    method: POST
    data_selector: sheet
- name: update_column
  endpoint:
    path: update_an_existing_column_to_an_existing_file
    method: POST
    data_selector: sheet
- name: sheet
  endpoint:
    path: /sheet
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: result
    params: {}
- name: download
  endpoint:
    path: /download
    method: GET
    data_selector: csv
    params: {}
- name: sheet
  endpoint:
    path: /sheet
    method: GET
    data_selector: data
    params: {}
- name: sheet
  endpoint:
    path: /get_sheet
    method: GET
    data_selector: content
- name: book
  endpoint:
    path: /get_book
    method: GET
    data_selector: content
- name: filter_out_data
  endpoint:
    path: /filter_out_data
    method: GET
    data_selector: content
    params: {}
- name: data
  endpoint:
    path: /data
    method: GET
    data_selector: rows
    params: {}
- name: sheet
  endpoint:
    path: /sheet
    method: GET
    data_selector: content
- name: book
  endpoint:
    path: /book
    method: GET
    data_selector: sheets
    params: {}
- name: sheet
  endpoint:
    path: /sheet
    method: GET
    data_selector: data
    params: {}
- name: built_in_plugins
  endpoint:
    path: /plugins
    method: GET
    data_selector: plugins
    params: {}
- name: data_parser
  endpoint:
    path: /data-parser
    method: GET
    data_selector: records
- name: data_renderer
  endpoint:
    path: /data-renderer
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /data-source
    method: GET
    data_selector: records
- name: excel_data
  endpoint:
    path: /data
    method: GET
    data_selector: records
- name: excel_files
  endpoint:
    path: /api/v1/excel_files
    method: GET
    data_selector: data
    params: {}
notes:
- pyexcel provides a unified API for reading, manipulating, and writing data in various
  Excel formats.
- The library focuses purely on data processing and does not address features like
  fonts, colors, or charts.
- Use pyexcel to read and write data to and from excel files.
- csv(comma separate value) file is pure text file. Formula, charts, images and formatting
  in xls file will disappear no matter which transcoding tool you use. Hence, pyexcel
  is a quick alternative for this transcoding job.
- The sheet api here is much less powerful than pandas DataFrame when the array is
  of significant size.
- Sometimes, the data in a spreadsheet may have unwanted strings in all or some cells.
- You may want to filter odd rows and print them in an array of dictionaries.
- You can use pyexcel.filters.RowValueFilter, which examines each row, return True
  if the row should be filtered out.
- The pyexcel DOES NOT consider Fonts, Styles, Formulas and Charts at all. When you
  load a stylish excel and update it, you definitely will lose all those styles.
- Uses SQLAlchemy to interact with the SQLite database
- You can find the corresponding source code at examples/memoryfile
- Formula, charts, images and formatting in xls file will disappear no matter which
  transcoding tool you use.
- No column pagination support for query sets as data source.
- The pyexcel DOES NOT consider Fonts, Styles and Charts at all. In the resulting
  excel files, fonts, styles and charts will not be transferred.
- With pyexcel v0.5.0, the way to package it has been changed because it uses lml
  for all plugins.
- This library focuses purely on data processing and does not address features like
  fonts, colors, or charts.
- When developing source plugins, it becomes necessary to have log trace available.
- You can suppress logging from specific modules like 'lml.plugin' and 'lml.loader'.
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: http://github.com/pyexcel/pyexcel.git
  headers:
    Accept: application/json
source_metadata: null
