resources:
- name: orders
  endpoint:
    path: /orders
    method: GET
    params:
      limit: 10
      offset: 0
      order_by: desc
- name: users
  endpoint:
    path: /users
    method: GET
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: create_session
  endpoint:
    path: /api/external/hpp/create-session
    method: POST
    data_selector: sessionId
- name: create_session
  endpoint:
    path: /api/external/hpp/create-session
    method: POST
    data_selector: sessionId
- name: extra
  endpoint:
    path: /docs/extra-object-fiat-onramp
    method: GET
- name: widget
  endpoint:
    path: /docs/fiat-onramp
    method: GET
- name: widget
  endpoint:
    path: /YOUR_PARTNER_ID/widget/order
    method: GET
- name: extra
  endpoint:
    path: /docs/extra-object-fiat-onramp
    method: GET
    data_selector: wallets
    params: {}
- name: widget
  endpoint:
    path: /widget/order
    method: GET
- name: signed_data
  endpoint:
    path: /generate/signed_data
    method: POST
    data_selector: signedData
    params: {}
- name: extra
  endpoint:
    path: /docs/extra-object-item-checkout
    method: GET
    data_selector: item_info
- name: fiat_currencies
  endpoint:
    path: /currencies
    method: GET
    data_selector: currencies
- name: fiat_currencies
  endpoint:
    path: /limiting-fiat-currencies
    method: GET
    data_selector: currencies
    params: {}
- name: position
  endpoint:
    path: /listeners/position
    method: POST
    data_selector: undefined
- name: payment-status
  endpoint:
    path: /listeners/payment-status
    method: POST
    data_selector: '{  status: String  payment_id: String  order_id: String  tx_id:
      String // if available  }'
- name: user_data_prefill
  endpoint:
    path: /data-prefill
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /docs/listerners-object
    method: GET
    data_selector: events
    params: {}
- name: nft_mint
  endpoint:
    path: /nft/mint
    method: POST
    data_selector: input_data
    params: {}
- name: token_swap
  endpoint:
    path: /token/swap
    method: POST
    data_selector: input_data
    params: {}
- name: nft_bundle_purchase
  endpoint:
    path: /nft/bundle/purchase
    method: POST
    data_selector: input_data
    params: {}
- name: uniswap
  endpoint:
    path: /uniswap
    method: POST
    data_selector: input_data
    params: {}
- name: sc_input_data
  endpoint:
    path: /sc_input_data
    method: POST
    data_selector: entrypoint
    params: {}
- name: nft_mint
  endpoint:
    path: /nft/mint
    method: POST
    data_selector: input_data
    params:
      transaction: https://polygonscan.com/tx/0x4ec7a561c37dca1d26208ad7b05fbb30dfad122cc71f647c78488740538a1a65
- name: token_swap
  endpoint:
    path: /token/swap
    method: POST
    data_selector: input_data
    params:
      transaction: https://polygonscan.com/tx/0xf1cac6306b8bd547b7e6b9779e0ecdeeb102db3a74fa7b78b850d018e7b0f40f
- name: nft_bundle_purchase
  endpoint:
    path: /nft/bundle/purchase
    method: POST
    data_selector: input_data
    params:
      transaction: https://polygonscan.com/tx/0xcaa648c827ba941225f6d60411aeb500cf2ba4f80f07ad3c1f7dc6e14a288382
- name: uniswap_vicicoin
  endpoint:
    path: /uniswap/vicicoin
    method: POST
    data_selector: input_data
    params:
      transaction: https://polygonscan.com/tx/0xe21ff8d51f300831b61671e266a256b70dae0b5e5600252b2a766fcc3e2ae55f
- name: uniswap_dolz
  endpoint:
    path: /uniswap/dolz
    method: POST
    data_selector: input_data
    params:
      transaction: https://polygonscan.com/tx/0xeff0f818fa9f6bc8f43df0a0059165b5014f24ca820b237f0d69a21afdfd05ce
- name: sc_input_data
  endpoint:
    path: /sc_input_data
    method: POST
    data_selector: entrypoint
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: payload
- name: convert
  endpoint:
    path: /api/v3/partners/convert
    method: POST
    data_selector: body
    params: {}
- name: convert
  endpoint:
    path: /convert
    method: POST
    data_selector: body
- name: smart_contract_interactions
  endpoint:
    path: /docs/smart-contract-faq
    method: GET
    data_selector: faq_entries
- name: supported_blockchains
  endpoint:
    path: /docs/supported-coins-and-blockchains
    method: GET
    data_selector: supported_blockchains
- name: supported_blockchains
  endpoint:
    path: /supported-blockchains
    method: GET
    data_selector: blockchains
- name: smart_contract_requirements
  endpoint:
    path: /smart-contract-requirements
    method: GET
    data_selector: requirements
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Nocagile integrates NOC and SOC services for comprehensive IT operations.
- The widget can be used for smart contract interactions.
- SDK is required for integration.
- To keep your private key safe, you should construct the signature on your backend
  and pass it to the frontend when initializing the widget.
- 'Please note: This is NOT a wallet private key, it is just a digital signature to
  encrypt the request.'
- Images larger than 1MB will not be shown in the following order screens.
- For the sandbox environment, Wert will provide you with the private key.
- This feature is only available for the NFT Checkout with NFTs priced in USDC / USDT
  on Polygon, BSC, Base or USDtez on Tezos.
- Make sure you use the latest version of SDK (6.x.x).
- Available as a paid add-on
- Each email will include standard Wert legal information as required by regulators.
- The listeners object helps you keep track of events in the module and respond accordingly.
- Sandbox simulates the production environment by sending requests to the sandbox
  module for test purchases and smart contract interactions.
- Cards will not be charged in the sandbox environment, however we request that you
  do not use real card details in the sandbox environment.
- The open() method will initialize the widget as an iFrame.
- Please let Wert know before you go live so that the customer support team is ready
  to support your users.
- Before going live, you will need to contact the Wert integration support team to
  sign an agreement and receive your production Partner Dashboard credentials and
  Partner ID.
- In order for the widget to load in production, all domains or subdomains where the
  widget will be hosted must be shared with Wert. Our team will whitelist these domains.
- Cards will not be charged in the sandbox environment.
- It's always a good idea to check real payments before going live to your users.
- Using Wert requires an additional transfer method argument in your input data
- Webhooks can fail, and redundancy is recommended.
- While it’s not common, webhooks can fail, and we don’t recommend that any of our
  partners rely solely on them.
- Requires setup of partner ID in headers
- OTP SMS is not sent on the sandbox; the code is always 0000.
- The minimum purchase value is $1 for everything except for BTC, which is $30, and
  the maximum is $10,000 for crypto and $20,000 for NFT, depending on the customer’s
  KYC level limit.
- Wert will not transfer NFTs; the smart contract should handle NFT transfers.
- Wert currently supports smart contracts on Arbitrum, Avalanche, Binance, Ethereum,
  Polygon, Tezos, Solana.
errors:
- '4000: We weren’t able to charge the user’s card and the order was not completed.
  The user can try again.'
- '4001: The transaction failed due to an incorrect CVV/CVC. The user can try again
  ensuring they enter the correct CVV/CVC.'
- '401: Unauthorized. Check your API key or contact support.'
- '403: Forbidden. Ensure the user is 18+ years old, country and state are supported,
  and user has accepted terms and conditions.'
- '409: Conflict. A user with the same phone number may already exist.'
- '429: Too Many Requests. Retry later.'
- '500: Internal Server Error'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Missing required fields'
- '401: Unauthorized request'
- '8001: Blockchain Execution Reverted'
- '8002: Blockchain Invalid Input Data'
- '8003: Blockchain Transaction Injection Error'
- '9001: Partner Does Not Exist'
- '9004: Partner Data Not Verified By Signature'
- '9005: Partner Unverified Contract'
- '9006: Partner Disabled SC'
- '1301: Commodity Unknown'
- '1302: Commodity Unknown'
- '1400: Contract Not Payable'
- '1013: Invalid Field'
- 404 Not Found
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://sandbox.wert.io
  auth:
    type: apikey
source_metadata: null
