resources:
- name: DocumentParticipants
  endpoint:
    path: /api/DocumentParticipants/v1.0/CopyParticipants
    method: GET
    params: {}
- name: objectmanagement
  endpoint:
    path: /webapi/objectmanagement/singleobjecttools/clone/41q_v1
    method: POST
    params: {}
- name: get_link
  endpoint:
    path: /webapi/objectmanagement/share/getlink_4HZ_v1
    method: POST
    data_selector: result
    params: {}
- name: getlink
  endpoint:
    path: /webapi/objectmanagement/share/getlink_4HZ_v1
    method: POST
    data_selector: result
    params:
      Identifier: CTL531031
      Format: TR1
      StickToCurrentVersion: 'true'
      LogViews: 'true'
      CreateDownloadLink: 'true'
      ExpirationDate: '2024-12-31T11:59:59'
      MaxWidth: '1000'
      FileExtension: .png
- name: asset_upload
  endpoint:
    path: /API/Module/v1.0/Action
    method: POST
    params: {}
- name: ImportFromThirdParty
  endpoint:
    path: /import-from-third-party
    method: POST
    data_selector: response
    params: {}
- name: asset_upload
  endpoint:
    path: /API/Module/v1.0/Action
    method: POST
- name: UpdateFromThirdParty
  endpoint:
    path: /docs/update-from-a-third-party
    method: POST
    data_selector: _oOptions
    params:
      RecordID: string
      LastExternalUploadNewVersionDate: string
- name: ImportFromThirdParty
  endpoint:
    path: /import-from-third-party
    method: POST
    data_selector: response
    params:
      DownloadUrl: string
      FolderID: string
- name: UpdateFromThirdParty
  endpoint:
    path: /docs/update-from-a-third-party
    method: POST
    data_selector: UpdateFromThirdParty
    params:
      RecordID: string
      LastExternalUploadNewVersionDate: string
- name: Documents
  endpoint:
    path: /update/assets
    method: POST
    data_selector: assets
    params:
      Parallelism: 5
- name: GetOrAddCache
  endpoint:
    path: /GetOrAddCache
    method: POST
    data_selector: cachedValue
    params:
      Key: string
      Options:
        ExpireInSeconds: integer
      GetNewValueCallback: function
      ValidateCallback: function
- name: GetOrAddCache
  endpoint:
    path: /GetOrAddCache
    method: POST
    data_selector: ''
    params:
      Key: string
      Options:
        ExpireInSeconds: 600
      GetNewValueCallback: function
      ValidateCallback: function
- name: ImportContentFile
  endpoint:
    path: /ImportContentFile
    method: POST
    data_selector: response
    params: {}
- name: PublishMessageToAWSSNS
  endpoint:
    path: /publish-message-to-aws-sns
    method: POST
    data_selector: Response
    params:
      OutboundTopicID: string
      Options: object
- name: ImportContentFile
  endpoint:
    path: /ImportContentFile
    method: POST
    data_selector: response
    params:
      FileName: string
      FolderID: string
      Content: string
      ImportRetries: number
      ImportMinWaitBeforeRetry: number
      ImportMaxWaitBeforeRetry: number
- name: ExportToS3
  endpoint:
    path: /export/s3
    method: POST
    data_selector: Response.Results
    params: {}
- name: publish_message
  endpoint:
    path: /publish-message-to-aws-sns
    method: POST
    data_selector: Response
    params: {}
- name: ScheduleExportToS3
  endpoint:
    path: /export/schedule
    method: POST
    data_selector: Response.Results
    params: {}
- name: ExportToS3
  endpoint:
    path: /export/s3
    method: POST
    data_selector: Response.Results
    params: {}
- name: ScheduleExportToS3
  endpoint:
    path: /schedule/export/s3
    method: POST
    data_selector: Response.Results
    params: {}
- name: XMLTools.Delete
  endpoint:
    path: /XMLTools/Delete
    method: POST
    data_selector: response
- name: set_activation
  endpoint:
    path: /webapi/security/bearerauthentication/setactivation_42Q_v1
    method: GET
    data_selector: success
    params:
      UserEmail: string
      Activation: boolean
- name: user_login
  endpoint:
    path: /api/Authentication/v2.0/Login
    method: POST
    data_selector: Response
    params: {}
- name: set_activation
  endpoint:
    path: /webapi/security/bearerauthentication/setactivation_42Q_v1
    method: GET
    data_selector: success
    params:
      UserEmail: string
      Activation: boolean
- name: metadata_fields
  endpoint:
    path: /reference/list-all-metadata-fields
    method: POST
- name: user_login
  endpoint:
    path: /api/Authentication/v2.0/Login
    method: POST
    data_selector: object
- name: contacts
  endpoint:
    path: /reference/contacts
    method: GET
- name: contacts
  endpoint:
    method: GET
- name: get_public_link
  endpoint:
    path: /reference/get-link-apis
    method: GET
- name: get_assets_cloud_storage_link
  endpoint:
    path: /reference/get-an-assets-cloud-storage-link
    method: GET
- name: create_crop_link
  endpoint:
    path: /reference/create-crop-link
    method: GET
- name: get_public_link
  endpoint:
    path: /reference/get-link
    method: GET
- name: get_public_links
  endpoint:
    path: /reference/get-links
    method: POST
- name: get_public_link
  endpoint:
    path: /webapi/objectmanagement/share/getlink_4HZ_v1
    method: GET
    data_selector: object
- name: get_public_links
  endpoint:
    path: /objectmanagement/share/getlinks_45W_v1
    method: POST
- name: Get presigned link
  endpoint:
    path: /reference/get-presigned-link
    method: GET
- name: Get presigned links in batch
  endpoint:
    path: /reference/get-presigned-links-in-batch
    method: POST
- name: get_public_link
  endpoint:
    path: /webapi/objectmanagement/share/getlink_4HZ_v1
    method: GET
- name: get_presigned_link
  endpoint:
    path: /webapi/mediafile/storage/signedurl/getpresignedlink_4ar_v1
    method: GET
    data_selector: link
- name: get_public_links
  endpoint:
    path: /objectmanagement/share/getlinks_45W_v1
    method: POST
- name: get_presigned_links_in_batch
  endpoint:
    path: /webapi/mediafile/storage/signedurl/getpresignedlinks_in_batch_4G8_v1
    method: POST
- name: create_crop_link
  endpoint:
    path: /api/AssetLink/v1.0/CreateCropLink
    method: GET
    data_selector: response
    params:
      Identifier: string
      LogAccess: boolean
      CreateDownloadLink: boolean
      TopY: string
      LeftX: string
      BottomY: string
      RightX: string
      Height: int32
      Width: int32
      ApplyWatermark: boolean
      format: string
      dateformat: string
- name: Get presigned link
  endpoint:
    path: /reference/get-presigned-link
    method: GET
    data_selector: link
- name: Get presigned links in batch
  endpoint:
    path: /reference/get-presigned-links-in-batch
    method: POST
    data_selector: links
- name: get_presigned_link
  endpoint:
    path: /webapi/mediafile/storage/signedurl/getpresignedlink_4ar_v1
    method: GET
- name: batch_edit
  endpoint:
    path: /webapi/objectmanagement/multiobjectstools/batchedit/batcheditfields_4FQ_v1
    method: POST
    data_selector: recordWarningMessages
    params: {}
- name: get_presigned_links_in_batch
  endpoint:
    path: /webapi/mediafile/storage/signedurl/getpresignedlinks_in_batch_4G8_v1
    method: POST
    data_selector: object
- name: batch_upsert_json
  endpoint:
    path: /reference/batch-upsert-a-json-array
    method: POST
- name: batch_upsert_csv
  endpoint:
    path: /reference/batch-upsert-a-csv-file
    method: POST
- name: query_batch_upsert_status
  endpoint:
    path: /reference/query-asynchronous-batch-upsert-calls
    method: GET
- name: create_crop_link
  endpoint:
    path: /api/AssetLink/v1.0/CreateCropLink
    method: GET
    data_selector: response
    params:
      Identifier: string
      LogAccess: boolean
      CreateDownloadLink: boolean
      TopY: string
      LeftX: string
      BottomY: string
      RightX: string
      Height: int32
      Width: int32
      ApplyWatermark: boolean
      format: string
      dateformat: string
- name: batch_upsert
  endpoint:
    path: /webapi/objectmanagement/multiobjectstools/datatable/batchupsert_4FY_v1
    method: POST
    data_selector: dataOptions
    params: {}
- name: batch_upsert_csv
  endpoint:
    path: /webapi/objectmanagement/multiobjectstools/datatable/batchupsert_csv_4G3_v1
    method: POST
- name: batch_edit
  endpoint:
    path: /webapi/objectmanagement/multiobjectstools/batchedit/batcheditfields_4FQ_v1
    method: POST
    data_selector: recordWarningMessages
    params:
      ignoreNotEditableDocuments: true
      ignoreInvalidDocuments: true
- name: query_batch_upsert
  endpoint:
    path: /webapi/objectmanagement/multiobjectstools/datatable/query_batchupsert_4G2_v1
    method: GET
    data_selector: results
    params:
      JobRecordID: required
- name: batch_upsert_json
  endpoint:
    path: /reference/batch-upsert-a-json-array
    method: POST
- name: batch_upsert_csv
  endpoint:
    path: /reference/batch-upsert-a-csv-file
    method: POST
- name: query_asynchronous_batch_upsert
  endpoint:
    path: /reference/query-asynchronous-batch-upsert-calls
    method: GET
- name: regenerate_proxies
  endpoint:
    path: /RegenerateProxiesForAsset
    method: GET
    data_selector: response
    params:
      AssetIdentifier: required
      FileFormat: optional
      DocType: required
      Priority: '-999999'
      GenerateOnlyIf: optional
      ForceUpdateRepresentative: 'false'
      UpdateMediaData: 'false'
      AsyncTransactionRecordID: optional
      format: XML
      dateformat: yyyy-MM-ddTHH:mm:ss
      Token: optional
      IdentifiersTableName: optional
- name: batch_upsert
  endpoint:
    path: /webapi/objectmanagement/multiobjectstools/datatable/batchupsert_4FY_v1
    method: POST
- name: regenerate_proxies
  endpoint:
    path: /RegenerateProxiesForAsset
    method: GET
    data_selector: response
    params:
      Priority: '-999999'
      ForceUpdateRepresentative: 'false'
      UpdateMediaData: 'false'
      format: XML
      dateformat: yyyy-MM-ddTHH%3Amm%3Ass
- name: batch_upsert_csv
  endpoint:
    path: /webapi/objectmanagement/multiobjectstools/datatable/batchupsert_csv_4G3_v1
    method: POST
- name: Search
  endpoint:
    path: /reference/search-api
    method: POST
- name: query_batch_upsert
  endpoint:
    path: /webapi/objectmanagement/multiobjectstools/datatable/query_batchupsert_4G2_v1
    method: GET
    data_selector: results
    params:
      JobRecordID: string
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: list
- name: proxies
  endpoint:
    path: /reference/regenerate-proxies
    method: GET
- name: regenerate_proxies
  endpoint:
    path: /RegenerateProxiesForAsset
    method: GET
    data_selector: response
    params: {}
- name: search
  endpoint:
    path: /API/Search/v4.0/Search
    method: POST
    data_selector: Items
    params:
      query: keyword:London AND Bridge OR uk AND title:Bridge
      fields: SystemIdentifier
      sort: '1'
      pagenumber: '1'
      debug: 'false'
      verbose: 'false'
      reversesearch: 'false'
      generateformatifnotexists: 'false'
      getpermanentassetspaths: 'false'
      includebinned: 'false'
      includestorageinfo: 'false'
      format: JSON
- name: RegenerateProxiesForAsset
  endpoint:
    path: /RegenerateProxiesForAsset
    method: GET
    params:
      Priority: -999999
      ForceUpdateRepresentative: false
      UpdateMediaData: false
      format: XML
      dateformat: yyyy-MM-ddTHH:mm:ss
- name: Standard search criteria
  endpoint:
    path: /path/to/standard/search
    method: GET
    data_selector: records
    params: {}
- name: Search within a folder structure
  endpoint:
    path: /path/to/folder/search
    method: GET
    data_selector: records
    params: {}
- name: search
  endpoint:
    path: /reference/search-api
    method: POST
- name: ListCriteria
  endpoint:
    path: /API/search/v3.0/ListCriteria
    method: POST
- name: search
  endpoint:
    path: /search
    method: POST
    data_selector: list
    params:
      countperpage: 100
      pagenumber: 1
      verbose: false
      generateformatifnotexists: false
      getpermanentassetspaths: false
      disableURIencoding: false
      includebinned: false
      includestorageinfo: false
      includeassetswithvirtualpaths: false
      format: XML
- name: List Fields
  endpoint:
    path: /API/search/v3.0/ListFields
    method: POST
- name: upload_assets
  endpoint:
    path: /reference/upload-assets
    method: POST
- name: search
  endpoint:
    path: /API/Search/v4.0/Search
    method: POST
    data_selector: Items
    params:
      query: keyword:London AND Bridge OR uk AND title:Bridge
      fields: path_TR1,SystemIdentifier
      sort: '1'
      pagenumber: '1'
      debug: 'false'
      verbose: 'false'
      reversesearch: 'false'
      generateformatifnotexists: 'false'
      getpermanentassetspaths: 'false'
      includebinned: 'false'
      includestorageinfo: 'false'
      format: JSON
- name: upload_media
  endpoint:
    path: /webapi/mediafile/import/upload/uploadmedia_4az_v1
    method: POST
    data_selector: uploadResults
    params:
      folderRecordID: required
      processAssetInBackground: boolean
      files: required
- name: search_criteria
  endpoint:
    path: /search/criteria
    method: GET
    data_selector: criteria
    params: {}
- name: upload_media_with_url
  endpoint:
    path: /webapi/mediafile/import/upload/uploadmediawithurl_45L_v1
    method: POST
    data_selector: object
- name: ListCriteria
  endpoint:
    path: /API/search/v3.0/ListCriteria
    method: POST
- name: upload_file_from_cloud_storage
  endpoint:
    path: /webapi/mediafile/import/upload/uploadFileFromCloudStorage_4OY_v1
    method: POST
    data_selector: object
    params: {}
- name: upload_image
  endpoint:
    path: /webapi/mediafile/import/upload/uploadimageandgetlargestdownloadlink_4CM_v1
    method: POST
    data_selector: downloadLink
- name: List Fields
  endpoint:
    path: /API/search/v3.0/ListFields
    method: POST
- name: upload_new_media
  endpoint:
    path: /api/UploadMedia/v3.0/UploadNewMedia
    method: POST
    data_selector: APIRequestInfo
    params:
      FolderRecordID: string
      UploadMode: string
      FileName: string
      format: string
      IgnoreCheckContainer: boolean
      Metadata: object
      dateformat: string
      Token: string
- name: Upload New Version
  endpoint:
    path: /api/UploadMedia/v2.0/UploadNewVersion
    method: POST
    data_selector: APIRequestInfo
    params:
      AssetRecordID: string
      FileName: string
      Format: XML
      UploadMode: string
      Metadata: object
      dateformat: string
      Token: string
- name: Upload media
  endpoint:
    path: /reference/upload-media-endpoint
    method: POST
    data_selector: ''
    params: {}
- name: Upload new media
  endpoint:
    path: /reference/upload-new-media
    method: POST
    data_selector: ''
    params: {}
- name: Upload new version
  endpoint:
    path: /reference/upload-version
    method: POST
    data_selector: ''
    params: {}
- name: Create upload transaction
  endpoint:
    path: /reference/create-upload-transaction
    method: POST
    data_selector: ''
    params: {}
- name: Register upload assets
  endpoint:
    path: /reference/register-upload-assets
    method: POST
    data_selector: ''
    params: {}
- name: Upload chunks
  endpoint:
    path: /reference/upload-chunks-to-orange-logic
    method: POST
    data_selector: ''
    params: {}
- name: Complete the upload session
  endpoint:
    path: /reference/complete-the-asset-upload
    method: POST
    data_selector: ''
    params: {}
- name: upload_assets
  endpoint:
    path: /reference/upload-assets
    method: POST
- name: upload_large_assets
  endpoint:
    path: /reference/multi-part-upload-api
    method: POST
- name: create_upload_transaction
  endpoint:
    path: /reference/create-upload-transaction
    method: POST
- name: register_upload_assets
  endpoint:
    path: /reference/register-upload-assets
    method: POST
- name: chunk_assets
  endpoint:
    path: /reference/chunk-assets
    method: POST
- name: upload_chunks
  endpoint:
    path: /reference/upload-chunks-to-orange-logic
    method: POST
- name: complete_asset_upload
  endpoint:
    path: /reference/complete-the-asset-upload
    method: POST
- name: upload_media
  endpoint:
    path: /webapi/mediafile/import/upload/uploadmedia_4az_v1
    method: POST
- name: upload_transaction
  endpoint:
    path: /webapi/mediafile/import/upload/transaction/24_v1
    method: POST
    data_selector: transactionID
    params: {}
- name: upload_media_with_url
  endpoint:
    path: /webapi/mediafile/import/upload/uploadmediawithurl_45L_v1
    method: POST
- name: register_upload_assets
  endpoint:
    path: /webapi/mediafile/import/upload/register_25_v1
    method: POST
    data_selector: files
- name: upload_file_from_cloud_storage
  endpoint:
    path: /webapi/mediafile/import/upload/uploadFileFromCloudStorage_4OY_v1
    method: POST
    data_selector: object
    params: {}
- name: upload_image
  endpoint:
    path: /webapi/mediafile/import/upload/uploadimageandgetlargestdownloadlink_4CM_v1
    method: POST
- name: upload_asset_chunk
  endpoint:
    path: /webapi/mediafile/import/upload/item/26_v1/{uploadItemId}
    method: POST
- name: upload_new_media
  endpoint:
    path: /api/UploadMedia/v3.0/UploadNewMedia
    method: POST
    data_selector: APIRequestInfo
- name: complete_upload_session
  endpoint:
    path: /webapi/mediafile/import/upload/complete_27_v1
    method: POST
    data_selector: response
    params: {}
- name: upload_transaction
  endpoint:
    path: /API/UT_UPLOADTRANSACTION/v1.0/CreateTransaction
    method: POST
- name: register_upload_items
  endpoint:
    path: /API/CortexUploader_BO/v1.1/RegisterUploadItems
    method: POST
- name: upload_new_version
  endpoint:
    path: /api/UploadMedia/v2.0/UploadNewVersion
    method: POST
    data_selector: APIRequestInfo
    params:
      AssetRecordID: string
      FileName: string
      Format: XMLJSON
      UploadMode: processInLine|ProcessProxiesInBackground|ProcessFullyInBackgroundLite|ProcessFullyInBackground|ProcessProxiesAndParentAndIndexInBackground
      Metadata: object
- name: CompleteUpload
  endpoint:
    path: /reference/complete-the-asset-upload
    method: POST
    data_selector: parameters
    params: {}
- name: CompleteUploadAndIntegrateMetadata
  endpoint:
    path: /reference/complete-the-asset-upload
    method: POST
    data_selector: parameters
    params: {}
- name: create_upload_transaction
  endpoint:
    path: /create-upload-transaction
    method: POST
- name: register_upload_assets
  endpoint:
    path: /register-upload-assets
    method: POST
- name: chunk_assets
  endpoint:
    path: /chunk-assets
    method: POST
- name: upload_chunks
  endpoint:
    path: /upload-chunks-to-orange-logic
    method: POST
- name: complete_asset_upload
  endpoint:
    path: /complete-the-asset-upload
    method: POST
- name: list_all_database_objects
  endpoint:
    path: /list-all-database-objects
    method: POST
    data_selector: json
- name: upload_transaction
  endpoint:
    path: /webapi/mediafile/import/upload/transaction/24_v1
    method: POST
    data_selector: transactionID
- name: register_upload_assets
  endpoint:
    path: /webapi/mediafile/import/upload/register_25_v1
    method: POST
- name: documents_all
  endpoint:
    path: /API/DataTable/v2.2/Documents.All
    method: POST
    data_selector: records
- name: documents_image_default
  endpoint:
    path: /API/DataTable/v2.2/Documents.Image.Default
    method: POST
    data_selector: records
- name: documents_audio_default
  endpoint:
    path: /API/DataTable/v2.2/Documents.Audio.Default
    method: POST
    data_selector: records
- name: documents_folder_default
  endpoint:
    path: /API/DataTable/v2.2/Documents.Folder.Default
    method: POST
    data_selector: records
- name: documents_multimedia_default
  endpoint:
    path: /API/DataTable/v2.2/Documents.Multimedia.Default
    method: POST
    data_selector: records
- name: documents_video_default
  endpoint:
    path: /API/DataTable/v2.2/Documents.Video.Default
    method: POST
    data_selector: records
- name: documents_virtual_folder_default
  endpoint:
    path: /API/DataTable/v2.2/Documents.Virtual-folder.Default
    method: POST
    data_selector: records
- name: upload_chunk
  endpoint:
    path: /webapi/mediafile/import/upload/item/26_v1/{uploadItemId}
    method: POST
- name: agent
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Agent.Default
    method: GET
- name: billing_account
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Billing-account.Default
    method: GET
- name: client
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Client.Default
    method: GET
- name: company
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Company.Default
    method: GET
- name: model
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Model.Default
    method: GET
- name: oauth_client_application
  endpoint:
    path: /API/DataTable/v2.2/Contacts.OAuth.Default
    method: GET
- name: source
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Source.Default
    method: GET
- name: source_agent
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Source-agent.Default
    method: GET
- name: staff
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Staff.Default
    method: GET
- name: all_accounts
  endpoint:
    path: /API/DataTable/v2.2/Contacts.All:Read
    method: GET
- name: complete_upload_session
  endpoint:
    path: /webapi/mediafile/import/upload/complete_27_v1
    method: POST
- name: keywords
  endpoint:
    path: /API/DataTable/v2.2/Keywords
    method: POST
- name: keywords_links
  endpoint:
    path: /API/DataTable/v2.2/Keywords-links
    method: POST
- name: upload_transaction
  endpoint:
    path: /API/UT_UPLOADTRANSACTION/v1.0/CreateTransaction
    method: POST
- name: register_upload_items
  endpoint:
    path: /API/CortexUploader_BO/v1.1/RegisterUploadItems
    method: POST
- name: documents_links
  endpoint:
    path: /API/DataTable/v2.2/Documents-links
    method: POST
- name: CompleteUpload
  endpoint:
    path: /API/CortexUploader_BO/v1.1/CompleteUpload
    method: POST
- name: CompleteUploadAndIntegrateMetadata
  endpoint:
    path: /API/CortexUploader_BO/v1.0/CompleteUploadAndIntegrateMetadata
    method: POST
- name: CompleteUpload
  endpoint:
    path: /reference/complete-the-asset-upload
    method: POST
    data_selector: parameters
- name: CompleteUploadAndIntegrateMetadata
  endpoint:
    path: /reference/complete-the-asset-upload
    method: POST
    data_selector: parameters
- name: documents
  endpoint:
    path: /API/DataTable/v2.2/Documents.Image.default
    method: POST
    data_selector: records
- name: database_objects
  endpoint:
    path: /API/DataTable/v2.2/
    method: POST
    data_selector: Response
    params:
      Format: JSON
- name: Documents.Image.Production-Still
  endpoint:
    path: /API/DataTable/v2.2/Documents.Image.Production-Still:Read
    method: GET
    data_selector: Response.Record
    params:
      CoreField.Identifier: ZZ13B
- name: Contact.Client
  endpoint:
    path: /API/DataTable/v2.1/Contact.Client:Read
    method: GET
    data_selector: Response.Record
    params:
      Contact.CoreField.Last_Name: f*
- name: Documents
  endpoint:
    path: /API/DataTable/v2.2/Documents.Image.Default:Read
    method: GET
    data_selector: metadata
    params:
      CoreField.Identifier: CTL898558
- name: Contact
  endpoint:
    path: /API/DataTable/v2.1/Contact.Client:Read
    method: GET
    data_selector: records
    params:
      Contact.CoreField.Last_Name: f*
- name: Contacts
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Client.Default:Read
    method: GET
    data_selector: records
    params:
      CoreField.Country: <>France
- name: Documents.Audio.Default
  endpoint:
    path: /API/DataTable/v2.2/Documents.Audio.Default
    method: GET
- name: Documents.Folder.Default
  endpoint:
    path: /API/DataTable/v2.2/Documents.Folder.Default
    method: GET
- name: Documents.Image.Default
  endpoint:
    path: /API/DataTable/v2.2/Documents.Image.Default
    method: GET
- name: Documents.Multimedia.Default
  endpoint:
    path: /API/DataTable/v2.2/Documents.Multimedia.Default
    method: GET
- name: Documents.Video.Default
  endpoint:
    path: /API/DataTable/v2.2/Documents.Video.Default
    method: GET
- name: Documents.Virtual-folder.Default
  endpoint:
    path: /API/DataTable/v2.2/Documents.Virtual-folder.Default
    method: GET
- name: Documents.All
  endpoint:
    path: /API/DataTable/v2.2/Documents.All
    method: GET
- name: Documents.Image.Default:Update
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Default:Update
    method: POST
    data_selector: Response
    params:
      CoreField.Identifier: ZZ116ER
      CoreField.Title: Sunrise over a temple in Bali
- name: update_metadata
  endpoint:
    path: /V2.2/Documents.Image.Default:Update
    method: GET
    data_selector: records
- name: Documents.Image.Default:Create
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Default:Create
    method: POST
    data_selector: RecordID
- name: Agent
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Agent.Default
    method: GET
- name: Billing account
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Billing-account.Default
    method: GET
- name: Client
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Client.Default
    method: GET
- name: Company
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Company.Default
    method: GET
- name: Model
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Model.Default
    method: GET
- name: OAuth Client Application
  endpoint:
    path: /API/DataTable/v2.2/Contacts.OAuth.Default
    method: GET
- name: Source
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Source.Default
    method: GET
- name: Source agent
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Source-agent.Default
    method: GET
- name: Staff
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Staff.Default
    method: GET
- name: Search all accounts
  endpoint:
    path: /API/DataTable/v2.2/Contacts.All:Read
    method: GET
- name: contacts
  endpoint:
    path: /API/DataTable/V2.2/Contacts.Client.Default:Create
    method: POST
    data_selector: Result
    params: {}
- name: keywords
  endpoint:
    path: /API/DataTable/v2.2/Keywords
    method: POST
- name: keywords_links
  endpoint:
    path: /API/DataTable/v2.2/Keywords-links
    method: POST
- name: create_or_update
  endpoint:
    path: /Documents.Image.Default:CreateOrUpdate
    method: POST
    data_selector: records
    params:
      CoreField.Id_Client: OL123
      CoreField.Title: London skyline
      CoreField.CaptionLong: Stunning view of the London skyline
      CoreField.Parent-folder: 2QDTWAWPHA1
- name: documents_links
  endpoint:
    path: /API/DataTable/v2.2/Documents-links
    method: GET
- name: Documents
  endpoint:
    path: /API/DataTable/v2.2/Documents.Image.default:Update
    method: POST
    data_selector: records
- name: documents_image_delete
  endpoint:
    path: /Documents.Image.Default:Delete
    method: GET
    data_selector: Result
    params:
      CoreField.Identifier: ZZ1OAF
- name: contacts_staff_delete
  endpoint:
    path: /Contacts.Staff.Default:Delete
    method: GET
    data_selector: Result
    params:
      CoreField.Identifier: ZZ1CT16394
- name: Documents.Image.Production-Still
  endpoint:
    path: /API/DataTable/v2.2/Documents.Image.Production-Still:Read
    method: GET
    data_selector: Response.Record
    params:
      CoreField.Identifier: ZZ13B
- name: Contact.Client
  endpoint:
    path: /API/DataTable/v2.1/Contact.Client:Read
    method: GET
    data_selector: Response.Record
    params:
      Contact.CoreField.Last_Name: f*
- name: Contact
  endpoint:
    path: /API/DataTable/v2.2/Contacts.Client.Default:Read
    method: GET
    data_selector: records
    params: {}
- name: Documents.Image.Default:Update
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Default:Update
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.Identifier: ZZ116ER
      CoreField.Title: Sunrise over a temple in Bali
- name: Documents.Image.Production-Still
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Production-Still:Read
    method: GET
    data_selector: Response
    params:
      RecordID: 2QDTWAOP1_5
- name: CreateOrUpdate
  endpoint:
    path: /API/DataTable/V2.2/Documents.{asset-type}.{asset-subtype}:CreateOrUpdate
    method: POST
    data_selector: Response
- name: Documents.Folder.Default:CreateOrUpdate
  endpoint:
    path: /API/DataTable/V2.2/Documents.Folder.Default:CreateOrUpdate
    method: POST
    data_selector: records
    params: {}
- name: Documents.Image.Default
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Default:Update
    method: GET
    data_selector: records
    params:
      CoreField.Identifier: ZZ116ER
      CoreField.Title: :=Sunrise over a temple in Bali
- name: Documents.Image.Production-Still
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Production-Still:Update
    method: GET
    data_selector: records
    params:
      CoreField.Identifier: ZZ15G
      Location.City: +=Bangkok
- name: Documents.Image.Production-Still
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Production-Still:Update
    method: GET
    data_selector: records
    params:
      CoreField.Identifier: ZZ15G
      Images.Content-Usage: +=Blog post
- name: Documents.Image.Production-Still
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Production-Still:Update
    method: GET
    data_selector: records
    params:
      CoreField.Identifier: ZZ15G
      Images.Content-Usage: -=Blog post
- name: Documents.Image.Production-Still
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Production-Still:Update
    method: GET
    data_selector: records
    params:
      CoreField.Identifier: ZZ15G
      Images.Content-Usage: ++=Brochure
- name: Documents.Image.Production-Still
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Production-Still:Update
    method: GET
    data_selector: records
    params:
      CoreField.Identifier: ZZ15G
      Images.Content-Usage: --=
- name: Documents.Image.Default:Create
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Default:Create
    method: POST
    data_selector: RecordID
- name: list_metadata_fields
  endpoint:
    path: /Documents.All:ListFields
    method: POST
    data_selector: fields
- name: Contacts.Client.Default:Create
  endpoint:
    path: /API/DataTable/V2.2/Contacts.Client.Default:Create
    method: POST
    data_selector: Result
    params: {}
- name: Documents.Image.Default:ListFields
  endpoint:
    path: /Documents.Image.Default:ListFields
    method: POST
- name: Documents.All:ListFields
  endpoint:
    path: /Documents.All:ListFields
    method: POST
- name: CreateOrUpdate
  endpoint:
    path: /Documents.Image.Default:CreateOrUpdate
    method: POST
    data_selector: Result
    params:
      CoreField.Id_Client: OL123
      CoreField.Title: London skyline
      CoreField.CaptionLong: Stunning view of the London skyline
      CoreField.Parent-folder: 2QDTWAWPHA1
- name: Documents.Folder.Default
  endpoint:
    path: /API/DataTable/V2.2/Documents.Folder.Default:Update
    method: POST
    data_selector: Result
    params:
      CoreField.Identifier: ZZ13U2O
      CoreField.Title: January photoshoot
- name: Documents.Image.Production-Still:CreateOrUpdate
  endpoint:
    path: /Documents.Image.Production-Still:CreateOrUpdate
    method: POST
    data_selector: Result
    params:
      CoreField.Identifier: ZZ12PO4
      CoreField.Purpose: Internal use only
      CoreField.CaptionLong: Wide shot of zen garden in spring with flowers in bloom.
- name: documents_image_default_update
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Default:Update
    method: POST
    data_selector: Response
    params:
      CoreField.Identifier: ZZ12PAR
      CoreField.Keywords: +=Seine river|Eiffel Tower|France
- name: Documents.Image.Default:Update
  endpoint:
    path: /Documents.Image.Default:Update
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.Identifier: ZZ12PAR
      CoreField.Keywords++: River Thames|Tower of London|England
- name: Documents.Image.Default:Update
  endpoint:
    path: /DataTable/V2.2/Documents.Image.Default:Update
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.Identifier: ZZ12PAR
      CoreField.Keywords--: ''
      CoreField.Keywords+: France
- name: Documents
  endpoint:
    path: /API/DataTable/V2.2/Documents.{type}.{subtype}:Update
    method: POST
- name: Contacts
  endpoint:
    path: /API/DataTable/V2.2/Contacts.All:Read
    method: GET
- name: documents
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Production-Still:Read
    method: POST
    data_selector: Response
    params:
      RecordID: 2QDTWAOP1_5
- name: create_or_update
  endpoint:
    path: /API/DataTable/V2.2/Documents.{asset-type}.{asset-subtype}:CreateOrUpdate
    method: POST
    data_selector: Response
- name: Documents.Image.Default:Update
  endpoint:
    path: /Documents.Image.Default:Update
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.Identifier: ZZ12PAR
      CoreField.CT_RecordidSource: '[API/DataTable/V2.2/Contacts.All:Read?CoreField.Identifier=ZZ1CT298]'
- name: Documents.Folder.Default:CreateOrUpdate
  endpoint:
    path: /API/DataTable/V2.2/Documents.Folder.Default:CreateOrUpdate
    method: POST
    data_selector: records
    params:
      CoreField.Id_Client: Folder2
      CoreField.title: 'Behind the Scenes: Dream Destinations Season 3'
      CoreField.Purpose: Internal Use Only
      CoreField.Mother: '[Documents.Folder.Default:CoreField.Identifier=ZZ13VPI]'
- name: paired_value_fields
  endpoint:
    path: /API/v2.2/DataTable/Documents.[type].[subtype]:CreateOrUpdate
    method: POST
    data_selector: RecordsAffected
    params: {}
- name: ListFields
  endpoint:
    path: /Documents.All:ListFields
    method: POST
- name: Update paired-value fields
  endpoint:
    path: /API/v2.2/DataTable/Documents.Video.Promo:CreateOrUpdate
    method: POST
    data_selector: Result
    params:
      CoreField.Identifier: ZZ11AKZ
      media.Video-team+=: Voice talent{"LinkedField":"K8OEC0XK0H"}
- name: documents_image_default_list_fields
  endpoint:
    path: /Documents.Image.Default:ListFields
    method: POST
- name: documents_all_list_fields
  endpoint:
    path: /Documents.All:ListFields
    method: POST
- name: update_paired_value
  endpoint:
    path: /API/v2.2/DataTable/Documents.Video.Promo:CreateOrUpdate
    method: POST
    data_selector: Result
    params:
      CoreField.Identifier: ZZ11AKZ
      media.Video-team+=: Voice talent{"LinkedField":"K8OEC0XK0H"}
- name: change_asset_subtype
  endpoint:
    path: /Documents.{type}.{subtype}:Update
    method: POST
- name: Documents.Folder.Default:Update
  endpoint:
    path: /API/DataTable/V2.2/Documents.Folder.Default:Update
    method: POST
    data_selector: Response
    params:
      CoreField.Identifier: ZZ13U2O
      CoreField.Title: January photoshoot
- name: Documents.Image.Default:Update
  endpoint:
    path: /Documents.Image.Default:Update
    method: POST
    data_selector: Result
    params:
      CoreField.Identifier: ZZ12PAR
      CoreField.DocSubType: Production Still
- name: Documents.Image.Production-Still:CreateOrUpdate
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Production-Still:CreateOrUpdate
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.Identifier: ZZ12PO4
      CoreField.Purpose: Internal use only
      CoreField.CaptionLong: Wide shot of zen garden in spring with flowers in bloom.
- name: Document Permissions
  endpoint:
    path: /Document.Security.Permission:Read
    method: GET
    data_selector: permissions
    params:
      incremental: updated_at
- name: update_tags
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Default:Update
    method: POST
    data_selector: Result
    params:
      CoreField.Identifier: ZZ12PAR
      CoreField.Keywords: +=Seine river|Eiffel Tower|France
- name: permissions
  endpoint:
    path: /API/Datatable/v2.1/Document.Security.Permission:Read
    method: POST
    data_selector: Response
    params:
      Document.CoreField.DO_RecordID: '[Datatable/v2.1/Document.All:Read?Document.CoreField.Identifier=ZZ13VPI]'
- name: activate_deactivate_inherited_permissions
  endpoint:
    path: /API/Datatable/v2.1/Document.Security.Permission:Delete
    method: POST
    params:
      Document.CoreField.DO_RecordID: '[Datatable/v2.1/Document.All:Read?Document.CoreField.{identifying-metadata-field}={asset-identifier}]'
      MaxRecordsAffected: 100
- name: Document.Security.Permission:CreateOrUpdate
  endpoint:
    path: /Document.Security.Permission:CreateOrUpdate
    method: POST
    data_selector: records
    params: {}
- name: Documents.Image.Default:Update
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Default:Update
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.Identifier: ZZ12PAR
- name: Document.Security.Permission:Delete
  endpoint:
    path: /API/Datatable/v2.1/Document.Security.Permission:Delete
    method: POST
    data_selector: RecordsAffected
    params:
      MaxRecordsAffected: 100
- name: Documents.Image.Default:Update
  endpoint:
    path: /Documents.Image.Default:Update
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.Identifier: ZZ12PAR
      CoreField.Keywords--: ''
      CoreField.Keywords+: France
- name: Create a new Stack or add assets to an existing Stack
  endpoint:
    path: /create-or-add-an-asset-to-a-stack
    method: POST
- name: Documents
  endpoint:
    path: /DataTable/V2.2/Documents.{type}.{subtype}:Update
    method: POST
    data_selector: records
- name: Contacts
  endpoint:
    path: /DataTable/V2.2/Contacts.All:Read
    method: GET
    data_selector: records
- name: AssignLeadDocument
  endpoint:
    path: /API/DataTable/v2.2/Documents.{Asset-type}.{Asset-subtype}:AssignLeadDocument
    method: POST
- name: Documents.Image.Default:Update
  endpoint:
    path: /Documents.Image.Default:Update
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.Identifier: ZZ12PAR
      CoreField.CT_RecordidSource: '[API/DataTable/V2.2/Contacts.All:Read?CoreField.Identifier=ZZ1CT298]'
- name: asset_representative
  endpoint:
    path: /API/DataTable/V2.2/Documents.Folder.Event-Folder:Update
    method: POST
    data_selector: Response
    params:
      CoreField.Identifier: ZZ13VPB
      CoreField.Representative_DO: '[DataTable/v2.2/Documents.Image.Production-Still:Read?CoreField.Identifier=ZZ17HB]'
- name: Update paired-value fields
  endpoint:
    path: /API/v2.2/DataTable/Documents.[type].[subtype]:CreateOrUpdate
    method: POST
- name: Documents.Folder.Default:Update
  endpoint:
    path: /Documents.Folder.Default:Update
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.ID_Client: FolderThree
      CoreField.Representative_DO: ''
- name: paired_value_field
  endpoint:
    path: /API/v2.2/DataTable/Documents.Video.Promo:CreateOrUpdate
    method: POST
    data_selector: Result
    params: {}
- name: move_assets
  endpoint:
    path: /Documents-links:ParentChildLink
    method: POST
- name: Documents.Video.Promo:CreateOrUpdate
  endpoint:
    path: /API/v2.2/DataTable/Documents.Video.Promo:CreateOrUpdate
    method: POST
    data_selector: IgnoredParameters
    params: {}
- name: Documents
  endpoint:
    path: /Documents.{type}.{subtype}:Update
    method: POST
    data_selector: ''
    params: {}
- name: move_asset
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Production-Still:Update
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.Identifier: ZZ12PO5
      CoreField.Parent-folder: '[/API/DataTable/V2.2/Documents.Folder.Default:Read?CoreField.Unique-Identifier=2QDTWAW79R4]'
- name: Documents.Image.Default:Update
  endpoint:
    path: /DataTable/V2.2/Documents.Image.Default:Update
    method: POST
    params:
      CoreField.Identifier: ZZ12PAR
      CoreField.DocSubType: Production Still
- name: Documents.Folder.Default:Update
  endpoint:
    path: /Documents.Folder.Default:Update
    method: POST
    params:
      CoreField.Identifier: ZZ13VOL
      CoreField.Parent-folder: '[/API/DataTable/V2.2/Documents.Folder.Event-folder:Read?CoreField.Identifier=ZZ13VOH]'
- name: Documents-links:ParentChildLink
  endpoint:
    path: /API/DataTable/V2.2/Documents-links:ParentChildLink
    method: POST
    data_selector: Result
    params: {}
- name: Document Security Permission
  endpoint:
    path: /Document.Security.Permission
    method: POST
    data_selector: records
- name: ParentChildLink
  endpoint:
    path: /DataTable/V2.2/Documents-links:ParentChildLink
    method: POST
    data_selector: Result
    params: {}
- name: permissions
  endpoint:
    path: /API/Datatable/v2.1/Document.Security.Permission:Read
    method: POST
    data_selector: Response
    params:
      Document.CoreField.DO_RecordID: '[Datatable/v2.1/Document.All:Read?Document.CoreField.Identifier=ZZ13VPI]'
- name: remove_assets_from_virtual_folders
  endpoint:
    path: /DataTable/V2.1/Document.Container.Link:Delete
    method: POST
    data_selector: records
- name: Remove assets from virtual folders
  endpoint:
    path: /Document.Container.Link:Delete
    method: POST
    data_selector: Result
    params: {}
- name: Contacts.All
  endpoint:
    path: /Contacts.All
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /API/V2.2/DataTable/Contacts.Client.Default:Read
    method: GET
    data_selector: Response
    params:
      incremental: CoreField.EditDate
- name: Add Permissions for Groups
  endpoint:
    path: /API/Datatable/v2.1/Document.Security.Permission:CreateOrUpdate
    method: POST
    data_selector: Result
    params:
      Document.CoreField.CG_RecordID: '[Datatable/v2.1/Contact.Group:Read?Contact.CoreField.Title_English=\*Everyone]'
      Document.CoreField.DO_RecordID: '[Datatable/v2.1/Document.All:Read?Document.CoreField.Identifier=ZZ13VPI]'
      Document.CoreField.EndDate: '2026-02-27'
      Document.CoreField.CanRead: '1'
      Document.CoreField.CanReadMedium: '1'
      Document.CoreField.CanReadLarge: '1'
      Document.CoreField.CanDownload: '1'
      Document.CoreField.CanShare: '0'
      Document.CoreField.CanWrite: '0'
      Document.CoreField.CanUpload: '0'
      Document.CoreField.CanDelete: '0'
      Document.CoreField.CanManageRights: '0'
      Document.CoreField.TargetPurpose: Public
- name: Add Permissions for users
  endpoint:
    path: /API/Datatable/v2.1/Document.Security.Permission:CreateOrUpdate
    method: POST
    data_selector: Result
    params:
      Document.CoreField.CT_RecordID: '[Datatable/v2.1/Contact.All:Read?Contact.CoreField.Email1=anna.morado@mangovations.com]'
      Document.CoreField.DO_RecordID: '[Datatable/v2.1/Document.All:Read?Document.CoreField.Identifier=ZZ13U]'
      Document.CoreField.EndDate: '2025-04-30'
      Document.CoreField.CanRead: '1'
      Document.CoreField.CanReadMedium: '1'
      Document.CoreField.CanReadLarge: '1'
      Document.CoreField.CanReadOriginal: '1'
      Document.CoreField.CanDownload: '1'
      Document.CoreField.CanFind: '1'
      Document.CoreField.CanShare: '1'
      Document.CoreField.CanWrite: '1'
      Document.CoreField.CanUpload: '1'
      Document.CoreField.CanDelete: '0'
      Document.CoreField.CanMove: '0'
      Document.CoreField.CanManageRights: '0'
      Document.CoreField.TargetPurpose: Public
- name: Contacts.Client.Default:Read
  endpoint:
    path: /DataTable/Contacts.Client.Default:Read
    method: POST
    data_selector: Response
    params: {}
- name: CreateOrUpdate
  endpoint:
    path: /Document/Security/Permission/CreateOrUpdate
    method: POST
- name: Contact.Client:CreateOrUpdate
  endpoint:
    path: /API/DataTable/v2.1/Contact.Client:CreateOrUpdate
    method: POST
    data_selector: Result
    params:
      Contact.CoreField.Email1: '{email address of the account}'
      Contact.CoreField.First_Name: '{first name}'
      Contact.CoreField.Last_Name: '{last name}'
      Contact.CoreField.Country: '{country}'
      Contact.CoreField.OrganisationName: '{organization}'
      Contact.CoreField.Status: '{status}'
      Contact.CoreField.MustResetPassword: '1'
- name: Delete Permission
  endpoint:
    path: /API/Datatable/v2.1/Document.Security.Permission:Delete
    method: POST
    data_selector: RecordsAffected
    params:
      MaxRecordsAffected: 100
- name: Contact.Client:Update
  endpoint:
    path: /Contact.Client:Update
    method: POST
    data_selector: RecordsAffected
    params: {}
- name: Contacts.All:Update
  endpoint:
    path: /API/DataTable/v2.2/Contacts.All:Update
    method: POST
    data_selector: RecordsAffected
    params: {}
- name: AssignLeadDocument
  endpoint:
    path: /Documents.{Asset-type}.{Asset-subtype}:AssignLeadDocument
    method: POST
    data_selector: response
    params: {}
- name: Contact.Group.Link
  endpoint:
    path: /API/DataTable/v2.1/Contact.Group.Link:Create
    method: POST
    data_selector: RecordID
    params: {}
- name: Documents.Folder.Event-Folder
  endpoint:
    path: /API/DataTable/v2.2/Documents.Folder.Event-Folder:Update
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.Identifier: ZZ13VPB
      CoreField.Representative_DO: '[DataTable/v2.2/Documents.Image.Production-Still:Read?CoreField.Identifier=ZZ17HB]'
- name: Contact.Group.Link:Delete
  endpoint:
    path: /Contact.Group.Link:Delete
    method: POST
    data_selector: RecordsAffected
    params: {}
- name: Documents.Folder.Default:Update
  endpoint:
    path: /API/DataTable/v2.2/Documents.Folder.Default:Update
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.ID_Client: FolderThree
      CoreField.Representative_DO: ''
- name: manage_assigned_groups
  endpoint:
    path: /reference/manage-assigned-groups
    method: POST
- name: manage_groups
  endpoint:
    path: /reference/manage-groups
    method: POST
- name: move_assets
  endpoint:
    path: /Documents-links:ParentChildLink
    method: POST
- name: Contact.Group:CreateorUpdate
  endpoint:
    path: /API/datatable/v2.1/Contact.Group:CreateorUpdate
    method: POST
    data_selector: Updates
    params: {}
- name: Contact.Group:Delete
  endpoint:
    path: /Contact.Group:Delete
    method: POST
    data_selector: RecordsAffected
    params: {}
- name: move_asset
  endpoint:
    path: /API/DataTable/V2.2/Documents.Image.Production-Still:Update
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.Identifier: ZZ12PO5
      CoreField.Parent-folder: '[/API/DataTable/V2.2/Documents.Folder.Default:Read?CoreField.Unique-Identifier=2QDTWAW79R4]'
- name: Manage group hierarchies
  endpoint:
    path: /API/Datatable/v2.1/Contact.Group.Link:Create
    method: POST
    data_selector: records
    params: {}
- name: Documents.Folder.Default:Update
  endpoint:
    path: /Documents.Folder.Default:Update
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.Identifier: ZZ13VOL
      CoreField.Parent-folder: '[/API/DataTable/V2.2/Documents.Folder.Event-folder:Read?CoreField.Identifier=ZZ13VOH]'
- name: Documents-links:ParentChildLink
  endpoint:
    path: /API/DataTable/V2.2/Documents-links:ParentChildLink
    method: POST
    data_selector: Result
    params: {}
- name: Contact.Group.Link:Create
  endpoint:
    path: /API/Datatable/v2.1/Contact.Group.Link:Create
    method: POST
    data_selector: RecordID
    params: {}
- name: ParentChildLink
  endpoint:
    path: /DataTable/V2.2/Documents-links:ParentChildLink
    method: POST
    data_selector: Result
    params: {}
- name: remove_assets_from_virtual_folders
  endpoint:
    path: /V2.1/Document.Container.Link:Delete
    method: POST
    data_selector: records
- name: create_webhook_subscription
  endpoint:
    path: /create_22E_v1
    method: POST
- name: update_webhook_subscription
  endpoint:
    path: /update_22F_v1
    method: POST
- name: delete_webhook_subscription
  endpoint:
    path: /delete_22G_v1
    method: DELETE
- name: get_webhook_by_id
  endpoint:
    path: /getbyid_22H_v1
    method: GET
- name: get_all_webhook_subscriptions
  endpoint:
    path: /getall_22I_v1
    method: GET
- name: test_delivery
  endpoint:
    path: /testdelivery_22C_v1
    method: POST
- name: test_predicates
  endpoint:
    path: /testpredicates_22D_v1
    method: POST
- name: trigger_event
  endpoint:
    path: /triggerevent_22N_v1
    method: POST
- name: get_webhook_topics
  endpoint:
    path: /gettopics_220_v1
    method: POST
- name: rotate_secret
  endpoint:
    path: /rotatesecret_22P_v1
    method: POST
- name: document_container_link_delete
  endpoint:
    path: /DataTable/v2.1/Document.Container.Link:Delete
    method: POST
    data_selector: Result
    params: {}
- name: Contacts.All
  endpoint:
    path: /Contacts.All
    method: GET
    data_selector: records
    params: {}
- name: webhook_event
  endpoint:
    path: /webhook/events
    method: POST
    data_selector: Data
    params: {}
- name: webhook_subscription
  endpoint:
    path: /webapi/extensibility/webhook/subscription/create_22E_v1
    method: POST
    data_selector: subscription
    params: {}
- name: contacts
  endpoint:
    path: /API/V2.2/DataTable/Contacts.Client.Default:Read
    method: POST
    data_selector: Response
    params:
      incremental: CoreField.CreateDate
- name: webhook_signature
  endpoint:
    path: /webapi/extensibility/webhook/subscription/rotatesecret_22P_v1
    method: POST
    data_selector: X-ol-signature
- name: contacts
  endpoint:
    path: /DataTable/Contacts.Client.Default:Read
    method: POST
    data_selector: Response
    params:
      CoreField.EditDate: '>2025-02-01T20:00:00'
      SortField: CoreField.EditDate
- name: Contact.Client:CreateOrUpdate
  endpoint:
    path: /API/DataTable/v2.1/Contact.Client:CreateOrUpdate
    method: POST
    data_selector: records
    params: {}
- name: Contact.Client:Update
  endpoint:
    path: /Contact.Client:Update
    method: POST
    data_selector: RecordsAffected
    params: {}
- name: Contacts.All:Update
  endpoint:
    path: /API/DataTable/v2.2/Contacts.All:Update
    method: POST
    data_selector: RecordsAffected
    params:
      CoreField.Email1: melissa.collins@mangovations.com
      CoreField.CT_Administrator: '[API/DataTable/v2.2/Contacts.Staff.Default:Read?CoreField.Email1=jennifer.abbot@mangovations.com]'
- name: Contact.Group.Link
  endpoint:
    path: /API/DataTable/v2.1/Contact.Group.Link:Create
    method: POST
    data_selector: RecordID
    params: {}
- name: Contact.Group.Link:Delete
  endpoint:
    path: /Contact.Group.Link:Delete
    method: POST
    data_selector: RecordsAffected
    params: {}
- name: Contact.Group
  endpoint:
    path: /API/datatable/v2.1/Contact.Group:CreateorUpdate
    method: POST
    data_selector: Response.Updates
    params: {}
- name: Contact.Group:Delete
  endpoint:
    path: /Contact.Group:Delete
    method: POST
    data_selector: RecordsAffected
    params:
      Contact.CoreField.Title_English: Archivist interns
- name: manage_group_hierarchies
  endpoint:
    path: /API/Datatable/v2.1/Contact.Group.Link:Create
    method: POST
    data_selector: null
    params: {}
- name: Contact.Group.Link:Create
  endpoint:
    path: /Contact.Group.Link:Create
    method: POST
    data_selector: RecordID
    params: {}
- name: create_webhook
  endpoint:
    path: /create_22E_v1
    method: POST
- name: update_webhook
  endpoint:
    path: /update_22F_v1
    method: POST
- name: delete_webhook
  endpoint:
    path: /delete_22G_v1
    method: DELETE
- name: get_webhook_by_id
  endpoint:
    path: /getbyid_22H_v1
    method: GET
- name: get_all_webhooks
  endpoint:
    path: /getall_22I_v1
    method: GET
- name: test_delivery
  endpoint:
    path: /testdelivery_22C_v1
    method: POST
- name: test_predicates
  endpoint:
    path: /testpredicates_22D_v1
    method: POST
- name: trigger_event
  endpoint:
    path: /triggerevent_22N_v1
    method: POST
- name: get_topics
  endpoint:
    path: /gettopics_220_v1
    method: POST
- name: rotate_secret
  endpoint:
    path: /rotatesecret_22P_v1
    method: POST
- name: webhook_event
  endpoint:
    path: /webhook/event
    method: POST
    data_selector: body
    params: {}
- name: webhook_subscription
  endpoint:
    path: /webapi/extensibility/webhook/subscription/create_22E_v1
    method: POST
    data_selector: subscription
    params:
      isActive: true
notes:
- Parameter sessions only isolate changes to parameters.
- Authentication tokens are valid for only one server.
- If an incorrect authentication token and a correct session cookie are provided in
  the same request, the API uses the cookie.
- Swagger always uses session cookies, so you must log in to the Orange Logic interface
  to test APIs in Swagger.
- The content browser is available by default on Orange Logic Milan and later and
  does not require installation.
- By default, the Content Browser SDK does not return any metadata fields.
- The Content Browser SDK used to be called the 'Generic Asset Browser.'
- If your organization uses Orange Logic Milan or later, we recommend using version
  2 of the Content Browser SDK.
- Uses OAuth2 with bearer token — requires setup of connected app in OrangeDAM
- Uses OAuth2 with refresh token — requires setup of connected app in api
- When you configure the Call external API automation to bypass user permissions,
  you can’t show toast messages to let the user know the automation is running.
- Some objects like Contact may return nulls in deeply nested fields
- Make any Orange Logic API call, including DataTable calls.
- The buffer for fetching results is limited to approximately 2 GB.
- Large assets (greater than 2 GB), especially videos, might impact site performance.
- The DownloadUrl is required for the asset to import.
- The FolderID is required for the asset to be imported into a specific folder.
- Download multiple assets from a third-party application by providing download URLs
  and target folders.
- A valid private RSA key in PEM format is required for this step.
- The public key must be configured in the third-party system.
- Authenticate a machine-to-machine connection with token exchange by signing a JWT
  token with a private RSA key in PEM format.
- When the cached access token is invalid or expired, the refresh token is used to
  create a new session ID.
- This utility is available beginning in Orange Logic Milan.
- If ImportContentFile runs more than once with the same file name and folder ID,
  the new data is saved as a new version of the original asset.
- This utility is available beginning in Orange Logic Milan
- This utility creates a separate task to carry out the export action, regardless
  of whether the Call external API automation in which this utility is used is running
  synchronously or asynchronously.
- Many Orange Logic APIs can be run as GET or POST calls.
- A 403 error might indicate that your call is too long.
- This function accepts a valid XML string and an XPath text to specify the XML node
  to delete.
- When an Orange Logic administrator allows bearer authentication on a user account,
  Orange Logic automatically creates a token that you can use to authenticate API
  calls. This token does not change or expire.
- Non-expiring bearer token can be used for API calls
- This is the least secure authentication method.
- To confirm the deactivated status of an authentication token, run the Get bearer
  token call, which returns a message when a requested token is deactivated.
- To use the User login endpoint, you must have the Authorize to log in using an API
  call Security Function.
- Changes to database objects are not limited to sessions and are visible to other
  users.
- User account API ID appears at the bottom of the Details tab.
- Every Contact record has an encrypted record ID.
- The authentication token you create for third-party applications remains active
  for 24 hours. The corresponding refresh token is active for 30 days.
- OAuth 2.0 is deactivated by default. To activate this feature, Orange Logic administrators
  can submit a support request.
- Users must be logged in to Orange Logic when accessing direct links.
- An Orange Logic administrator can create an application account in the Orange Logic
  interface.
- Seeds for client credentials are optional but recommended.
- Each asset must have its own set of properties in the request body.
- Anyone can access the link regardless of permissions, even if they don’t have an
  Orange Logic account.
- We recommend using the batch call to get links to multiple assets because it is
  less costly than calling the single API multiple times.
- Get an embed or download link to a single asset
- This endpoint is similar to batch editing assets in the Batch Edit side panel in
  the Orange Logic interface.
- The Batch edit fields call is available beginning in Orange Logic Juneau.
- Failures are reported in the `recordWarningMessages` object, which contains the
  relevant error message for each asset.
- If you receive a 404 error, wait a few moments. Then, try running the call again.
- Asynchronous processing is off by default. To activate it, submit a support request.
- To generate a link to a cropped version of an asset, enter a ratio for each coordinate.
- You must have the Can recompute asset proxy files Security Function to generate
  or regenerate proxies.
- Generating or regenerating a large number of proxies can take significant system
  resources.
- Batch upserts of JSON arrays are supported.
- Base URL contains versioning information.
- You must have the Access to the Search API Security Function to use the Search API.
- By default, the Search API only returns assets that would appear in an equivalent
  search in the Orange Logic interface.
- Users with the Can Expose Bucket Search API Security Function can include storage
  information in the search results with the includestorageinfo parameter.
- You can use a space () instead of `AND`.
- You can only include one query parameter in your call.
- Generating or regenerating a large number of proxies can take a significant amount
  of system resources.
- You must use operators to combine multiple query criteria. You cannot use the query
  parameter multiple times in the same request.
- The ParentFolderIdentifier criterion cannot be used with virtual folders.
- Search API v4.0 is available beginning in Orange Logic London.
- Defaults to XML for response format.
- The date format used in the query and response defaults to yyyy-MM-ddTHH:mm:ss.
- The maximum length for a `field` value in the Search API is 2048 characters.
- Wildcard searches of the `fields` parameter do not search smart or computed fields.
- The List Fields API returns a list of all fields available in your organization’s
  Orange Logic environment.
- Users must have the Can upload files in Cortex Security Function to use the Upload
  calls.
- Defaults to true
- The ParentFolderIdentifier criterion does not return information about virtual folders
  or assets within virtual folders.
- Wildcard searches cannot be used with quoted text.
- Search API v4.0 is available beginning in Orange Logic London
- Before you can use this API, Orange Logic must add the domain of your URL to the
  allow list.
- Defaults to XML response format.
- Duplicate detection is off by default.
- The maximum length for a field value in the Search API is 2048 characters.
- Wildcard searches of the fields parameter do not search smart or computed fields.
- 'There are three versions of the Upload Media API: v1.0, v2.0, and v3.0.'
- Duplicate detection is off by default. Submit a support request to enable duplicate
  detection.
- Users need Permissions to access any assets or containers they’re working with.
- The Upload assets calls have a 1.5 GB file size limit.
- This API was previously called the Uploader API.
- To use these APIs, your environment needs to have Python3, Pip3, virtualenv, and
  git installed.
- Defaults to true for keepFolderStructure.
- Defaults to true for noMappingTemplate.
- Defaults to CortexTools for uploadMethod.
- Defaults to true for useCache.
- Registering your assets allows Orange Logic to determine which asset a file chunk
  belongs to.
- Uploads from Google Cloud Storage are always processed fully in the background.
- 'There are three versions of the Upload Media API: v3.0 is the most robust.'
- This API can return the version, duplicate, and status information beginning in
  Orange Logic Juneau.
- Version and duplicate information are only returned if duplicate detection via checksum
  is activated.
- Response format can be specified as XML or JSON.
- Defaults to true for keepFolderStructure and noMappingTemplate.
- 'uploadMethod can be one of: CortexTools, Web, Agent, DropBox, Ftp, Getty.'
- Smaller chunks allow Orange Logic to increase parallelization and decrease transfer
  speed.
- If an error occurs and you need to re-upload a chunk, you’ll use fewer resources
  re-uploading a small chunk than you would a big chunk.
- Use one API call per asset chunk to upload all chunks to Orange Logic
- Starting position (in bytes) of the chunk must be a multiple of 131072
- Version and duplicate information are only returned if duplicate detection via checksum
  is activated. Duplicate detection via checksum is deactivated by default.
- DataTable calls follow a standard structure
- Response format can be XML or JSON.
- The Read action can only return one result at a time when querying assets. To view
  or update multiple records, use the Search API.
- Empty fields are excluded from the response by default. To include empty fields,
  add &Verbose=1 to the query.
- If you are updating a user account, your changes might trigger an email to notify
  that user of their account changes.
- Use the CoreField.Parent-folder parameter to set a location to create a record.
  Otherwise, a new record will be created directly in the root folder.
- Creates a new user account with specified details
- DataTable APIs use a standard structure for calls.
- API version is V2.2
- You can add `&UseSystemNames=1` to return the system name of all fields instead
  of the user-defined field names.
- 'Use a date field in ISO 8601 format: YYYY-MM-DD or YYYY-MM-DDTHH:MM:SS'
- Calls include a sub-call that locates an asset.
- Use the CoreField.Parent-folder parameter to set a location to create a record.
- DataTable calls do not update metadata fields that are read-only.
- This API call updates the metadata fields if they are already present.
- When creating accounts on a test site, no email notifications are sent.
- The += operator adds only values that already exist as tags in your Orange Logic
  instance.
- You can add &UseSystemNames=1 to return the system name of all fields instead of
  the user-defined field names.
- The **--=** operator removes all tags from an asset.
- Non-expiring bearer token is supported
- Read calls return metadata fields for the requested asset. This action can only
  return one asset at a time.
- Uses OAuth2 with bearer token for authorization.
- The paired-value field must have the Allow creation of new tag values setting activated
  if you want users to use the '++=' operator to add new values to authority lists.
- To link an asset or contact to a paired-value field, you must first obtain the asset
  or contact's record ID.
- Requires setup of connected app in Orange Logic
- No session (production configuration)
- Many calls that read, update, or change Permissions include a sub-call that locates
  a database object.
- This call does not block inheritance. If the asset is inheriting permissions from
  a parent asset, the inherited permissions still apply.
- The += operator adds only values that already exist as tags in your Orange Logic
  instance. The call will fail if you specify tags that don’t already exist.
- This call only returns Permissions added to the folder. It does not display inherited
  Permissions.
- Default Orange Logic Groups, such as Everyone, Staff, Admin, and SuperAdmin, are
  prefaced with an asterisk (`*`) in the Orange Logic system.
- You must escape this character with a backslash (`\`).
- Uses OAuth2 with Bearer token for authorization.
- If the asset has more than one line of Permissions, you must include &MaxRecordsAffected=100
  in the call.
- Stacking and unstacking assets requires the Stack Documents Security Function.
- To set a representative image, you need the CanManageRepresentative Security Function,
  which is assigned to the *RegisteredUsers Group by default.
- 'Session: No session (production configuration)'
- 'TimeoutPeriodMinutes: 120'
- Many of the calls to update an asset’s representatives include a sub-call.
- Linked fields must have the corresponding asset or contact’s record ID.
- Moving assets allows you to organize files.
- You can move image, audio, video, or document files from one folder to another.
- Uses OAuth2
- Requires setup of connected app in API
- Timeout period is 120 minutes
- Virtual folders contain references to assets. They do not contain the assets themselves.
- Many calls that read, update, or change Permissions include a sub-call that locates
  a database object, such as an asset.
- Requires setup of authentication for API access
- Uses OAuth2 with bearer token for authentication
- By default, updating accounts via API doesn’t trigger email notifications. To send
  emails, add `&AllowNotifications=1` to your call.
- All DataTable calls can be POST or GET.
- By default, the order of accounts returned reflects the order of the records in
  the database.
- Default Orange Logic Groups, such as Everyone, Staff, Admin, and SuperAdmin, are
  prefaced with an asterisk (`*`) in the Orange Logic system. You must escape this
  character with a backslash (`\`).
- Account last edited on or after a specific date and time can be retrieved using
  the > operator.
- Timeout period is 20 minutes
- We recommended including Contact.CoreField.MustResetPassword=1 in account calls,
  which requires a user to change their password when they next log in to their account.
- 'Timeout period: 120 minutes'
- The Administrator field is one of multiple linked fields included in account records.
  DataTable calls update linked fields by using a sub-call that locates another account
  record in the database.
- This call can also use the GET method.
- Members of a group share settings that allow them to perform certain actions or
  access specific features in Orange Logic.
- Filters and Updates are part of the request interpretation
- To move a large number of assets, use iAPI to batch apply the API call to all records
  in a CSV file.
- Child groups inherit privileges from parent groups, so when you add a parent group,
  you are assigning privileges to users in the child group.
- When you add a reference to a virtual folder, the DataTable call uses a Read action
  to identify the parent and child records you’re linking.
- Uses OAuth2 with a bearer token — requires setup of connected app
- Orange Logic webhooks are deactivated by default. To activate them, submit a support
  request.
- By default, Orange Logic is configured with a limited set of basic webhooks that
  are accessible via API.
- API requires OAuth 2.0 authentication.
- Each EventID should be received only once to avoid duplicates.
- Defaults to isActive as true
- Default order of accounts returned reflects the order of the records in the database.
- The ability to sign a webhook’s payload is available beginning in Orange Logic Kobe.
- This feature is deactivated by default.
- Returned accounts are sorted by the date they were edited.
- The ability to skip webhooks is available beginning in Orange Logic Juneau
- The Administrator field is one of multiple linked fields included in account records.
- When you add an account to a group, you give a user the Security Functions and Permissions
  assigned to that group.
- When you remove a user from a group, you take away from the user any privileges
  assigned to that group.
- Non-expiring bearer token
- Uses OAuth 2.0 authentication
- TimeoutPeriodMinutes is set to 120
- Each EventID should be received only once.
- Default topics include document.created, document.modified, document.deleted, document.updated,
  document.storage_mode_changed.
- The ability to skip webhooks is available beginning in Orange Logic Juneau.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Failed to check document has imported: '
- '403: Forbidden - URL too long'
- '400: Empty Email'
- '400: Empty SSO ID'
- '401: Login ID Not Found'
- '401: Email Not Found'
- '401: Email Not Unique'
- '401: Wrong Password'
- '401: Empty SSO ID'
- '401: SSO ID Not Found'
- '401: SSO ID Not Unique'
- '401: SSO ID Not Matched with Email Lookup'
- '401: SSO Data is Obsolete'
- '401: SSO Attribute Validation Failed'
- '401: Invalid Access Token'
- '403: Account Status Disabled'
- '403: Account Status Not Validated'
- '403: Account Status Rejected'
- '403: Account Status Blocked'
- '403: Account Only Permit SSO'
- '403: SSO Login Forbidden'
- '403: Non SSO Login Forbidden'
- '403: Not Enough Right'
- '403: Unrecognized Computer'
- '500: General Login Error'
- '500: SSO Account Creation Failed'
- '200: Request was successful'
- '200: Result'
- 200 - Result
- '401 Unauthorized: The call failed because Orange Logic didn’t detect an authenticated
  account. Log in to Orange Logic, and then retry your call.'
- '403: The call failed because you do not have the required permissions or security
  functions.'
- '404: The call failed because Orange Logic couldn''t find the asset. Check the URL
  and the parameters, and then retry your call.'
- '500: The call failed because the Orange Logic server encountered an unexpected
  error. Try the call again and submit a support request if the error persists.'
- '503: The call failed because the Orange Logic server is in a state that doesn’t
  allow API calls. Try the call again and submit a support request if the error persists.'
- '401: The call failed because Orange Logic didn’t detect an authenticated account.  Log
  in to Orange Logic, and then retry your call.'
- '404: The call failed because Orange Logic couldn''t find the asset.  Check the
  URL and the parameters, and then retry your call.'
- '500: The call failed because the Orange Logic server encountered an unexpected
  error.  Try the call again and submit a support request if the error persists.'
- '503: The call failed because the Orange Logic server is in a state that doesn’t
  allow API calls.  Try the call again and submit a support request if the error persists.'
- '400: Error if you attempt to edit any assets you do not have Permissions to edit.'
- '400: Error if you attempt to edit any assets with invalid identifiers.'
- RecordID not returned if operation fails.
- 'Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck OAuth token validity.'
- Reference value could not be resolved. Assign empty value to the field.
- 'Code: SUCCESS'
- 'Request failed with status: SUCCESS'
- 'Status: AlreadyExists'
- If a webhook fails, Orange Logic uses an internal queue system that attempts to
  resend the webhook up to five times.
- Webhook subscription requires the Webhook subscription Security Function to access
  the webhook APIs.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Webhook subscription
client:
  base_url: https://mangovations.com
  headers:
    Accept: application/json
source_metadata: null
