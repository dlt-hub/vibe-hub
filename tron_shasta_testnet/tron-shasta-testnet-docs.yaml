resources:
- name: transactions
  endpoint:
    path: /vaults/{vault_id}/transactions:initiate
    method: POST
    data_selector: response
    params: {}
- name: transactions
  endpoint:
    path: /v2/vaults/{vault_id}/transactions:initiate
    method: POST
    data_selector: details
    params: {}
- name: networks/bitcoin-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/bitcoin-testnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/ethereum-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/ethereum-testnet-goerli
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/ethereum-testnet-sepolia
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/optimism-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/optimism-testnet-goerli
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/polygon-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/polygon-testnet-mumbai
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/polygon-testnet-amoy
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/arbitrum-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/arbitrum-testnet-goerli
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/avalanche-c-chain-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/avalanche-c-chain-testnet-fuji
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/bnb-smart-chain-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/bnb-smart-chain-testnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/fuse-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/fuse-testnet-spark
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/base-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/base-testnet-goerli
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/tron-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/tron-testnet-shasta
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/solana-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/solana-devnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/cosmoshub-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/osmosis-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/injective-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/rootstock-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/ton-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/blast-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/aptos-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/sui-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/bittensor-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/litecoin-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: networks/xrpl-mainnet
  endpoint:
    path: /blockchains_getnetwork
    method: GET
- name: vaults
  endpoint:
    path: v2/vaults
    method: GET
- name: Assets
  endpoint:
    path: /reference/assets
    method: GET
    data_selector: records
- name: Transactions
  endpoint:
    path: /reference/transactions
    method: GET
    data_selector: records
- name: Wallets
  endpoint:
    path: /reference/wallets
    method: GET
    data_selector: records
- name: initiate_transaction
  endpoint:
    path: /transactions/initiatetransaction
    method: POST
- name: assets
  endpoint:
    path: /reference/assets_getasset
    method: GET
- name: balances
  endpoint:
    path: /reference/balances_querybalances
    method: POST
- name: transactions
  endpoint:
    path: /reference/transactions_initiatetransaction
    method: POST
- name: vaults
  endpoint:
    path: /reference/vaults_getvault
    method: GET
- name: wallets
  endpoint:
    path: /reference/wallets_listwallets
    method: GET
- name: initiate_transaction
  endpoint:
    path: /vaults/19e826e48ef4/transactions:initiate
    method: POST
    data_selector: details.assetTransfer
    params: {}
- name: transactions
  endpoint:
    path: /reference/transactions
    method: GET
    data_selector: records
    params: {}
- name: wallets
  endpoint:
    path: /reference/wallets
    method: GET
    data_selector: records
    params: {}
- name: assets
  endpoint:
    path: /reference/assets
    method: GET
    data_selector: records
    params: {}
- name: balances
  endpoint:
    path: /reference/balances
    method: GET
    data_selector: records
    params: {}
- name: vault_transactions_initiate
  endpoint:
    path: /v2/vaults/{vault_id}/transactions:initiate
    method: POST
    data_selector: details.evmTransaction
    params: {}
- name: vault_transactions_initiate_alpha
  endpoint:
    path: /v1alpha2/vaults/{vault_id}/transactions:initiate
    method: POST
    data_selector: details.evmTransaction
    params: {}
- name: transactions_initiate
  endpoint:
    path: /vaults/{vault_id}/transactions:initiate
    method: POST
    data_selector: details.evmTransaction
    params: {}
- name: transactions
  endpoint:
    path: /vaults/{vault}/transactions:initiate
    method: POST
    data_selector: details.solanaSerializedTransaction
    params: {}
- name: webhook_event
  endpoint:
    path: /webhook
    method: POST
    data_selector: payload
    params: {}
- name: webhook
  endpoint:
    path: /my-webhook
    method: POST
    data_selector: body
    params: {}
- name: AddressBook
  endpoint:
    path: /reference/addressbook_listaddressbookentries
    method: GET
- name: Assets
  endpoint:
    path: /reference/assets_getasset
    method: GET
- name: Balances
  endpoint:
    path: /reference/balances_querybalances
    method: POST
- name: Blockchains
  endpoint:
    path: /reference/blockchains_getnetwork
    method: GET
- name: Transactions
  endpoint:
    path: /reference/transactions_gettransaction
    method: GET
- name: Vaults
  endpoint:
    path: /reference/vaults_getvault
    method: GET
- name: Wallets
  endpoint:
    path: /reference/wallets_listwallets
    method: GET
- name: AddressBook
  endpoint:
    path: /reference/addressbook_listaddressbookentries
    method: GET
- name: Assets
  endpoint:
    path: /reference/assets_getasset
    method: GET
- name: Balances
  endpoint:
    path: /reference/balances_querybalances
    method: POST
- name: Blockchains
  endpoint:
    path: /reference/blockchains_getnetwork
    method: GET
- name: Transactions
  endpoint:
    path: /reference/transactions_gettransaction
    method: GET
- name: Vaults
  endpoint:
    path: /reference/vaults_getvault
    method: GET
- name: Wallets
  endpoint:
    path: /reference/wallets_listwallets
    method: GET
- name: AddressBook
  endpoint:
    path: /reference/addressbook_listaddressbookentries
    method: GET
- name: Assets
  endpoint:
    path: /reference/assets_getasset
    method: GET
- name: Balances
  endpoint:
    path: /reference/balances_querybalances
    method: POST
- name: Blockchains
  endpoint:
    path: /reference/blockchains_getnetwork
    method: GET
- name: Transactions
  endpoint:
    path: /reference/transactions_gettransaction
    method: GET
- name: Vaults
  endpoint:
    path: /reference/vaults_getvault
    method: GET
- name: Wallets
  endpoint:
    path: /reference/wallets_listwallets
    method: GET
- name: devices
  endpoint:
    path: /devices
    method: POST
    data_selector: device
- name: key_shares
  endpoint:
    path: /keys
    method: GET
    data_selector: keyShares
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: wallets
  endpoint:
    path: /wallets
    method: GET
    data_selector: records
- name: AddressBook
  endpoint:
    path: /reference/addressbook_listaddressbookentries
    method: GET
- name: Assets
  endpoint:
    path: /reference/assets_getasset
    method: GET
- name: Balances
  endpoint:
    path: /reference/balances_querybalances
    method: POST
- name: Blockchains
  endpoint:
    path: /reference/blockchains_getnetwork
    method: GET
- name: Transactions
  endpoint:
    path: /reference/transactions_gettransaction
    method: GET
- name: Vaults
  endpoint:
    path: /reference/vaults_getvault
    method: GET
- name: Wallets
  endpoint:
    path: /reference/wallets_listwallets
    method: GET
- name: address_book_entries
  endpoint:
    path: /{parent}/addressBookEntries
    method: GET
    data_selector: records
- name: address_book_entries
  endpoint:
    path: /{parent}/addressBookEntries:batchGet
    method: GET
    data_selector: addressBookEntries
- name: asset
  endpoint:
    path: /assets/{asset_id}
    method: GET
- name: batch_get_assets
  endpoint:
    path: /assets:batchGet
    method: GET
    data_selector: assets
    params:
      names: array of strings
- name: vault_asset
  endpoint:
    path: /vaults/{vault_id}/assets/{asset_id}
    method: GET
- name: balances
  endpoint:
    path: /vaults/{vault_id}:queryBalances
    method: POST
    data_selector: balances
    params:
      filter: ''
      pageSize: 100
      pageToken: ''
      includeReferencedResources: false
- name: wallet_balances
  endpoint:
    path: /v2/vaults/{vault_id}/wallets/{wallet_id}:queryBalances
    method: POST
    data_selector: walletBalances
    params: {}
- name: wallet_address_balances
  endpoint:
    path: /vaults/{vault_id}/wallets/{wallet_id}/addresses/{addresse_id}:queryBalances
    method: POST
    data_selector: walletAddressBalances
- name: refresh_asset_address_balance
  endpoint:
    path: /vaults/{vault_id}:refreshAssetAddressBalance
    method: POST
- name: network
  endpoint:
    path: /networks/{network_id}
    method: GET
- name: networks
  endpoint:
    path: /networks
    method: GET
    data_selector: networks
    params:
      pageSize: int32
      pageToken: string
- name: vault_networks
  endpoint:
    path: /v2/vaults/{vault_id}/networks
    method: GET
    data_selector: networks
- name: GetLatestBatchContract
  endpoint:
    path: /networks/{network_id}/batchContracts/latest
    method: GET
- name: transaction
  endpoint:
    path: /vaults/{vault_id}/transactions/{transaction_id}
    method: GET
- name: batch_get_transactions
  endpoint:
    path: /v2/vaults/{vault_id}/transactions:batchGet
    method: GET
    data_selector: transactions
    params:
      names: array of strings
      includeReferencedResources: boolean
      view: string
- name: transactions
  endpoint:
    path: /vaults/{vault_id}/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: initiate_transaction
  endpoint:
    path: /vaults/{vault_id}/transactions:initiate
    method: POST
    data_selector: transaction
- name: vote_on_transaction_request
  endpoint:
    path: /vaults/{vault_id}/transactionRequests/{transaction_request_id}:vote
    method: POST
- name: estimate_transaction_fee
  endpoint:
    path: /vaults/{vault_id}/transactions:estimateFee
    method: POST
- name: latest_transaction_simulation
  endpoint:
    path: /vaults/{vault_id}/transactions/{transaction_id}/simulations/latest
    method: GET
- name: cancel_transaction
  endpoint:
    path: /v2/vaults/{vault_id}/transactions/{transaction_id}:cancel
    method: POST
- name: replace_transaction
  endpoint:
    path: /v2/vaults/{vault_id}/transactions/{transaction_id}:replace
    method: POST
    data_selector: transaction
    params: {}
- name: amlScreening
  endpoint:
    path: /vaults/{vault_id}/transactions/{transaction_id}/amlScreening
    method: GET
    data_selector: amlScreening
- name: vault
  endpoint:
    path: /vaults/{vault_id}
    method: GET
- name: vaults
  endpoint:
    path: /vaults
    method: GET
    data_selector: vaults
    params: {}
- name: wallets
  endpoint:
    path: /vaults/{vault_id}/wallets
    method: GET
    data_selector: wallets
    params:
      pageSize: 50
- name: create_wallet
  endpoint:
    path: /vaults/{vault_id}/wallets
    method: POST
- name: wallet
  endpoint:
    path: /vaults/{vault_id}/wallets
    method: POST
- name: wallet
  endpoint:
    path: /vaults/{vault_id}/wallets/{wallet_id}
    method: GET
- name: wallet
  endpoint:
    path: /vaults/{vault_id}/wallets/{wallet_id}
    method: GET
- name: wallets
  endpoint:
    path: /vaults/{vault_id}/wallets:batchGet
    method: GET
    data_selector: wallets
    params:
      names: array of strings
      view: string
- name: archive_wallet
  endpoint:
    path: /vaults/{vault_id}/wallets/{wallet_id}:archive
    method: POST
- name: batch_get_wallets
  endpoint:
    path: /v2/vaults/{vault_id}/wallets:batchGet
    method: GET
    data_selector: wallets
    params:
      names: []
- name: batch_archive_wallets
  endpoint:
    path: /vaults/{vault_id}/wallets:batchArchive
    method: POST
- name: archive_wallet
  endpoint:
    path: /vaults/{vault_id}/wallets/{wallet_id}:archive
    method: POST
    data_selector: object
    params: {}
- name: unarchive_wallet
  endpoint:
    path: /vaults/{vault_id}/wallets/{wallet_id}:unarchive
    method: POST
- name: batch_unarchive_wallets
  endpoint:
    path: /v2/vaults/{vault_id}/wallets:batchUnarchive
    method: POST
- name: batch_archive_wallets
  endpoint:
    path: /vaults/{vault_id}/wallets:batchArchive
    method: POST
- name: wallet_addresses
  endpoint:
    path: /vaults/{vault_id}/wallets/{wallet_id}/addresses
    method: GET
    data_selector: walletAddresses
    params:
      pageSize: '50'
- name: unarchive_wallet
  endpoint:
    path: /vaults/{vault_id}/wallets/{wallet_id}:unarchive
    method: POST
- name: create_wallet_address
  endpoint:
    path: /vaults/{vault_id}/wallets/{wallet_id}/addresses
    method: POST
- name: batch_unarchive_wallets
  endpoint:
    path: /v2/vaults/{vault_id}/wallets:batchUnarchive
    method: POST
- name: wallet_address
  endpoint:
    path: /vaults/{vault_id}/wallets/{wallet_id}/addresses/{addresse_id}
    method: GET
    data_selector: walletAddress
    params: {}
- name: wallet_addresses
  endpoint:
    path: /vaults/{vault_id}/wallets/{wallet_id}/addresses
    method: GET
    data_selector: walletAddresses
    params:
      pageSize: '50'
- name: batch_get_wallet_addresses
  endpoint:
    path: /v2/vaults/{vault_id}/wallets/{wallet_id}/addresses:batchGet
    method: GET
    data_selector: walletAddresses
- name: create_wallet_address
  endpoint:
    path: /vaults/{vault_id}/wallets/{wallet_id}/addresses
    method: POST
- name: address_book_entries
  endpoint:
    path: /{parent}/addressBookEntries
    method: GET
    data_selector: addressBookEntries
    params:
      pageSize: '50'
- name: wallet_address
  endpoint:
    path: /vaults/{vault_id}/wallets/{wallet_id}/addresses/{addresse_id}
    method: GET
    data_selector: walletAddress
- name: asset
  endpoint:
    path: /assets/{asset_id}
    method: GET
- name: balances
  endpoint:
    path: /vaults/{vault_id}:queryBalances
    method: POST
    data_selector: balances
    params: {}
- name: wallet_addresses
  endpoint:
    path: /vaults/{vault_id}/wallets/{wallet_id}/addresses:batchGet
    method: GET
    data_selector: walletAddresses
    params: {}
- name: network
  endpoint:
    path: /networks/{network_id}
    method: GET
    data_selector: network
    params: {}
- name: address_book_entries
  endpoint:
    path: /{parent}/addressBookEntries
    method: GET
    data_selector: addressBookEntries
    params:
      pageSize: 50
- name: transaction
  endpoint:
    path: /vaults/{vault_id}/transactions/{transaction_id}
    method: GET
- name: asset
  endpoint:
    path: /assets/{asset_id}
    method: GET
    data_selector: asset
    params: {}
- name: vault
  endpoint:
    path: /vaults/{vault_id}
    method: GET
- name: query_balances
  endpoint:
    path: /vaults/{vault_id}:queryBalances
    method: POST
    data_selector: balances
    params:
      filter: ''
      pageSize: ''
      pageToken: ''
      includeReferencedResources: ''
- name: network
  endpoint:
    path: /networks/{network_id}
    method: GET
    data_selector: network
- name: wallets
  endpoint:
    path: /vaults/{vault_id}/wallets
    method: GET
    data_selector: wallets
- name: transaction
  endpoint:
    path: /vaults/{vault_id}/transactions/{transaction_id}
    method: GET
    data_selector: transaction
    params: {}
- name: vault
  endpoint:
    path: /vaults/{vault_id}
    method: GET
    data_selector: vault
    params: {}
- name: wallets
  endpoint:
    path: /vaults/{vault_id}/wallets
    method: GET
    data_selector: wallets
    params: {}
notes:
- Token TransferFrom - Tron Shasta
- Requires setup of gas wallet allowance for TRC-20 transactions
- Utila API uses API bearer token to authenticate requests.
- Make sure the new service account role is approved by an admin.
- Once you have generated a bearer token, you can try out the API to list vaults.
- Utila allows users to offload gas costs to any Utila wallet, eliminating friction
  and optimizing operational efficiency.
- This feature supports all ERC-20 and TRC-20 tokens.
- If authentication is required, use the bearer token in header.
- By default, Solana multi-signed transactions must be signed by the co-signer. To
  enable signing such transactions with the mobile app, contact Utila support.
- Webhooks are sent via HTTPS for security.
- Ensure to validate the signature using the provided public key.
- Uses a signature verification mechanism based on public key.
- Service accounts are created in a vault context.
- Creating a service account does not require a quorum of administrators, but the
  role assignment does.
- Device must be approved by the Admin Quorum before use.
- The device private key will be stored in the local configuration directory.
- Webhook must respond with HTTP 200 OK status code.
- The service may return fewer items than the specified page size.
- pagination is currently not supported
- The service may return fewer than the specified page size.
- Only the transaction's initiator or an admin can cancel a transaction.
- The service may return fewer items than the maximum specified in pageSize.
- If unspecified, at most 50 will be returned. The maximum value is 1000.
- The wallet resource must have a displayName and networks.
- A maximum of 1000 wallets can be unarchived in a batch.
- The maximum value for pageSize is 1000; values above 1000 will be coerced to 1000.
- URL for this request expired after 30 days.
- If unspecified, at most 50 will be returned.
errors:
- 'AUTHENTICATION_TOKEN_EXPIRED: The access token used for authentication has expired.'
- 'AUTHENTICATION_TOKEN_MISSING_OR_INVALID : The cookie token is invalid or missing'
- 'TRANSACTION_INSUFFICIENT_FUNDS: The transaction cannot be executed due to insufficient
  funds in the source account.'
- 'TRANSACTION_EXECUTION_REVERTED: The transaction failed to execute on the blockchain.'
- 'TRANSACTION_SOURCE_ACCOUNT_NOT_ACTIVATED: The source account is not activated.
  This is particularly relevant for TRON transactions.'
- 'TRANSACTION_ALREADY_SIGNED : The transaction was already signed.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Invalid signature: Check the x-utila-signature header.'
- '400 Bad Request: Invalid request data or event type.'
- '401 Unauthorized: Signature verification failed'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '400 Bad Request: Check request parameters and body structure.'
- '401 Unauthorized: Ensure valid Bearer token is provided.'
- '404 Not Found: Verify the vault_id is correct.'
- '200: A successful response.'
- 200 A successful response
- 200 A successful response.
- URL Expired
- '401 Unauthorized: Recheck authentication credentials'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.utila.io/v2
  headers:
    Content-Type: application/json
source_metadata: null
