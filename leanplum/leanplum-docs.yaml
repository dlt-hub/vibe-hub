resources:
- name: sendMessage
  endpoint:
    path: /api/sendMessage
    method: POST
    data_selector: response
    params:
      apiVersion: 1.0.6
      action: sendMessage
- name: send_message
  endpoint:
    path: /api
    method: GET
    data_selector: messageId
    params:
      appId: yourAppIdHere
      clientKey: yourClientKeyHere
      action: sendMessage
      apiVersion: 1.0.6
      messageId: messageId
      userId: theUserIdOfTheUser
      values: '{{"messageText":"Hello World!"}}'
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: user_data
  endpoint:
    path: /import_user_data
    method: POST
    data_selector: data
    params: {}
- name: user_data
  endpoint:
    path: /import/user_data
    method: POST
    data_selector: data
    params: {}
- name: bulk_delete_user_attributes
  endpoint:
    path: /bulk/delete/user/attributes
    method: POST
    data_selector: records
    params: {}
- name: user_attributes
  endpoint:
    path: /docs/prepare-a-csv-file-to-import-user-data#user-attributes
    method: POST
    data_selector: userAttributes
    params: {}
- name: device_attributes
  endpoint:
    path: /docs/prepare-a-csv-file-to-import-user-data#device-attributes
    method: POST
    data_selector: deviceAttributes
    params: {}
- name: events
  endpoint:
    path: /docs/prepare-a-csv-file-to-import-user-data#events
    method: POST
    data_selector: events
    params: {}
- name: email_unsubscribe_resubscribe
  endpoint:
    path: /docs/prepare-a-csv-file-to-import-user-data#email-unsubscribe--resubscribe
    method: POST
    data_selector: emailUnsubscribeResubscribe
    params: {}
- name: deleteUser
  endpoint:
    path: /reference/post_api-action-deleteuser
    method: POST
- name: multi
  endpoint:
    path: /reference/post_api-action-multi
    method: POST
- name: bulk_delete_users
  endpoint:
    path: /api
    method: POST
    data_selector: response
    params:
      defaultAction: deleteUser
- name: deleteUser
  endpoint:
    path: /reference/post_api-action-deleteuser
    method: POST
- name: multi
  endpoint:
    path: /reference/post_api-action-multi
    method: POST
- name: bulk_delete_users
  endpoint:
    path: /api?action=multi
    method: POST
    data_selector: users
    params:
      defaultAction: deleteUser
- name: campaign
  endpoint:
    path: /docs/create-a-campaign
    method: GET
    data_selector: campaign_data
    params: {}
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /create/campaign
    method: POST
    data_selector: campaign
- name: audience
  endpoint:
    path: /create/audience
    method: POST
    data_selector: audience
- name: delivery
  endpoint:
    path: /create/delivery
    method: POST
    data_selector: delivery
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: one_time_delivery
  endpoint:
    path: /docs/one-time-delivery
    method: GET
- name: recurring_delivery
  endpoint:
    path: /docs/recurring-delivery
    method: GET
- name: triggered_delivery
  endpoint:
    path: /docs/triggered-delivery
    method: GET
- name: advanced_delivery_options
  endpoint:
    path: /docs/advanced-delivery-options
    method: GET
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: conversion_events
  endpoint:
    path: /conversion_events
    method: GET
    data_selector: data
- name: conversion_events
  endpoint:
    path: /v1/conversion_events
    method: GET
    data_selector: data
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: action
  endpoint:
    path: /docs/add-campaign-action
    method: GET
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: campaigns
  endpoint:
    path: /docs/campaigns-overview
    method: GET
- name: users
  endpoint:
    path: /docs/upload-user-data
    method: POST
- name: Campaign Results
  endpoint:
    path: /docs/campaign-results
    method: GET
- name: campaign_results
  endpoint:
    path: /campaigns/results
    method: GET
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
- name: campaigns
  endpoint:
    path: /docs/campaigns-overview
    method: GET
- name: audiences
  endpoint:
    path: /audience-management
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_data
  endpoint:
    path: /api/user_data
    method: GET
    data_selector: records
    params: {}
- name: campaign
  endpoint:
    path: /services/data/vXX.X/sobjects/Campaign
    method: GET
    data_selector: records
    params: {}
- name: setUserAttributes
  endpoint:
    path: /?action=setUserAttributes
    method: GET
    data_selector: response
    params:
      appId: APP_ID
      clientKey: CLIENT_KEY
      userId: USER_ID
      userAttributes: '{"FavoriteStock":"AAPL"}'
- name: linkedData
  endpoint:
    path: /api/v3/datasets/WIKI/AAPL.json
    method: GET
    data_selector: dataset
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: create_campaign
  endpoint:
    path: /create/campaign
    method: POST
    data_selector: campaign
    params: {}
- name: edit_message_content
  endpoint:
    path: /edit/message/content
    method: PUT
    data_selector: content
    params: {}
- name: set_user_attributes
  endpoint:
    path: /
    method: GET
    data_selector: null
    params:
      action: setUserAttributes
      appId: APP_ID
      clientKey: CLIENT_KEY
      userId: USER_ID
      userAttributes: '{"FavoriteStock":"AAPL"}'
- name: linked_data_source
  endpoint:
    path: /api/v3/datasets/WIKI/AAPL.json
    method: GET
    data_selector: null
    params: {}
- name: push_notifications
  endpoint:
    path: /push_notifications
    method: POST
    data_selector: data
    params: {}
- name: email_templates
  endpoint:
    path: /email/templates
    method: GET
    data_selector: templates
- name: unsubscribed_users
  endpoint:
    path: /audiences/unsubscribed
    method: GET
    data_selector: users
    params: {}
- name: email_templates
  endpoint:
    path: /email/templates
    method: GET
    data_selector: templates
- name: unsubscribed_users
  endpoint:
    path: /audiences
    method: GET
    data_selector: users
    params:
      filter: unsubscribed
- name: email_campaign_analysis
  endpoint:
    path: /email/analytics
    method: GET
    data_selector: analytics_data
- name: email_campaign_analysis
  endpoint:
    path: /api/v1/email/campaigns/analysis
    method: GET
    data_selector: results
- name: email_metrics
  endpoint:
    path: /docs/analyze-email-metrics-by-domain
    method: GET
    data_selector: metrics
- name: email_campaign
  endpoint:
    path: /analyze-clicks-and-bounces-in-an-email-campaign
    method: GET
    data_selector: results
- name: email_metrics
  endpoint:
    path: /analyze-email-metrics-by-domain
    method: GET
- name: in_app_message
  endpoint:
    path: /api/in_app_messages
    method: POST
    data_selector: message
- name: center_popup
  endpoint:
    path: /in-app-message/center-popup
    method: POST
- name: webhook
  endpoint:
    path: /webhook
    method: POST
- name: webhook
  endpoint:
    path: /webhook
    method: POST
- name: Open URL
  endpoint:
    path: /docs/open-url
    method: GET
- name: Register for push
  endpoint:
    path: /docs/register-for-push
    method: GET
- name: Request App Rating
  endpoint:
    path: /docs/request-app-rating
    method: GET
- name: Open URL
  endpoint:
    path: /docs/open-url
    method: GET
- name: Register for push
  endpoint:
    path: /docs/register-for-push
    method: GET
- name: Request App Rating
  endpoint:
    path: /docs/request-app-rating
    method: GET
- name: delete_vars
  endpoint:
    path: /api
    method: POST
    data_selector: response
    params:
      action: deleteVars
- name: delete_vars
  endpoint:
    path: /api
    method: POST
    data_selector: response
    params:
      action: deleteVars
- name: audience_details
  endpoint:
    path: /audience/details
    method: GET
- name: audience
  endpoint:
    path: /audiences
    method: GET
    data_selector: records
- name: audience_details
  endpoint:
    path: /audience/details
    method: GET
- name: birthday
  endpoint:
    path: /audiences
    method: POST
    data_selector: user_attribute
    params: {}
- name: audience
  endpoint:
    path: /audiences
    method: GET
    data_selector: audiences
- name: user_property
  endpoint:
    path: /user/property
    method: GET
    data_selector: properties
- name: channel
  endpoint:
    path: /channel
    method: GET
    data_selector: properties
- name: device
  endpoint:
    path: /device
    method: GET
    data_selector: properties
- name: user_acquisition
  endpoint:
    path: /user/acquisition
    method: GET
    data_selector: properties
- name: localization
  endpoint:
    path: /localization
    method: GET
    data_selector: properties
- name: testing
  endpoint:
    path: /testing
    method: GET
    data_selector: properties
- name: user_property_device_segmentation
  endpoint:
    path: /docs/property-segmentation-rules
    method: GET
    data_selector: segmentation_rules
    params: {}
- name: user_properties
  endpoint:
    path: /user/properties
    method: GET
    data_selector: properties
- name: channel_properties
  endpoint:
    path: /channel/properties
    method: GET
    data_selector: properties
- name: device_properties
  endpoint:
    path: /device/properties
    method: GET
    data_selector: properties
- name: user_acquisition_properties
  endpoint:
    path: /user/acquisition/properties
    method: GET
    data_selector: properties
- name: localization_properties
  endpoint:
    path: /localization/properties
    method: GET
    data_selector: properties
- name: testing_properties
  endpoint:
    path: /testing/properties
    method: GET
    data_selector: properties
- name: ab_test
  endpoint:
    path: /ab/tests
    method: GET
    data_selector: data
    params: {}
- name: test_results
  endpoint:
    path: /docs/ab-test-analytics
    method: GET
    data_selector: results
    params: {}
- name: create_test
  endpoint:
    path: /docs/creating-an-ab-test
    method: GET
    data_selector: create
    params: {}
- name: winning_variant
  endpoint:
    path: /docs/finish-your-test-and-select-the-winning-variant
    method: GET
    data_selector: winning_variant
    params: {}
- name: campaign
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: records
- name: ab_test
  endpoint:
    path: /ab_tests
    method: POST
    data_selector: data
- name: A/A test
  endpoint:
    path: /docs/creating-an-ab-test
    method: GET
    data_selector: test_groups
- name: funnel
  endpoint:
    path: /funnels
    method: POST
    data_selector: funnel_data
- name: User Activity
  endpoint:
    path: /docs/user-analytics
    method: GET
    data_selector: reports
    params: {}
- name: create_custom_metric
  endpoint:
    path: /create/custom/metric
    method: POST
    data_selector: metrics
    params: {}
- name: edit_custom_metric
  endpoint:
    path: /edit/custom/metric
    method: PUT
    data_selector: metrics
    params: {}
- name: delete_custom_metric
  endpoint:
    path: /delete/custom/metric
    method: DELETE
    data_selector: metrics
    params: {}
- name: event_metrics
  endpoint:
    path: /event-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: state_metrics
  endpoint:
    path: /api/state_metrics
    method: GET
    data_selector: metrics
    params: {}
- name: create_custom_metric
  endpoint:
    path: /create/custom/metric
    method: POST
    data_selector: metrics
    params: {}
- name: edit_custom_metric
  endpoint:
    path: /edit/custom/metric
    method: PUT
    data_selector: metrics
    params: {}
- name: delete_custom_metric
  endpoint:
    path: /delete/custom/metric
    method: DELETE
    data_selector: metrics
    params: {}
- name: unique_user_metrics
  endpoint:
    path: /api/v1/unique_user_metrics
    method: GET
    data_selector: metrics
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: state_metrics
  endpoint:
    path: /state-metrics
    method: GET
    data_selector: metrics
    params: {}
- name: push_notifications
  endpoint:
    path: /push_notifications
    method: GET
    data_selector: events
    params: {}
- name: in_app_messages
  endpoint:
    path: /in_app_messages
    method: GET
    data_selector: events
    params: {}
- name: email_messages
  endpoint:
    path: /email_messages
    method: GET
    data_selector: events
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: events
    params: {}
- name: ab_tests
  endpoint:
    path: /ab_tests
    method: GET
    data_selector: events
    params: {}
- name: unique_user_metrics
  endpoint:
    path: /unique-user-metrics
    method: GET
    data_selector: records
- name: email_metrics
  endpoint:
    path: /email/analytics
    method: GET
    data_selector: results
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: email_campaign_clicks
  endpoint:
    path: /docs/analyzing-clicks-in-an-email-campaign
    method: GET
- name: email_metrics
  endpoint:
    path: /email/metrics
    method: GET
- name: push_notifications
  endpoint:
    path: /push_notifications
    method: GET
    data_selector: events
    params: {}
- name: in_app_messages
  endpoint:
    path: /in_app_messages
    method: GET
    data_selector: events
    params: {}
- name: email
  endpoint:
    path: /email
    method: GET
    data_selector: events
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: events
    params: {}
- name: ab_tests
  endpoint:
    path: /ab_tests
    method: GET
    data_selector: events
    params: {}
- name: team
  endpoint:
    path: /team
    method: POST
    data_selector: team_data
    params: {}
- name: team_member
  endpoint:
    path: /team/member
    method: POST
    data_selector: member_data
    params: {}
- name: email_metrics
  endpoint:
    path: /email/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: regions
  endpoint:
    path: /custom-regions
    method: GET
    data_selector: regions
    params: {}
- name: email_metrics_by_domain
  endpoint:
    path: /docs/analyze-email-metrics-by-domain
    method: GET
    data_selector: metrics
    params: {}
- name: parameters_transmitted
  endpoint:
    path: /adjust/parameters
    method: GET
    data_selector: parameters
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: email_events
  endpoint:
    path: /email/events
    method: POST
    data_selector: event
- name: push_events
  endpoint:
    path: /push/events
    method: POST
    data_selector: event
- name: in_app_events
  endpoint:
    path: /in_app/events
    method: POST
    data_selector: event
- name: ab_testing_events
  endpoint:
    path: /ab_testing/events
    method: POST
    data_selector: event
- name: regions
  endpoint:
    path: /custom/regions
    method: GET
    data_selector: regions
    params: {}
- name: user_attribution_data
  endpoint:
    path: /integration/user_attribution
    method: POST
    data_selector: data
    params: {}
- name: parameters_transmitted
  endpoint:
    path: /adjust/parameters
    method: GET
    data_selector: parameters
    params: {}
- name: Leanplum Marketing Events
  endpoint:
    path: /api/leanplum/events
    method: POST
    data_selector: events
- name: Campaign Enter
  endpoint:
    path: /path/to/campaign_enter
    method: GET
    data_selector: event_id
    params: {}
- name: Campaign Convert
  endpoint:
    path: /path/to/campaign_convert
    method: GET
    data_selector: event_id
    params: {}
- name: Campaign Exit
  endpoint:
    path: /path/to/campaign_exit
    method: GET
    data_selector: event_id
    params: {}
- name: Campaign Forced Exit
  endpoint:
    path: /path/to/campaign_forced_exit
    method: GET
    data_selector: event_id
    params: {}
- name: Campaign Triggered
  endpoint:
    path: /path/to/campaign_triggered
    method: GET
    data_selector: event_id
    params: {}
- name: Email Sent
  endpoint:
    path: /path/to/email_sent
    method: GET
    data_selector: event_id
    params: {}
- name: Email Delivered
  endpoint:
    path: /path/to/email_delivered
    method: GET
    data_selector: event_id
    params: {}
- name: Email Deferred
  endpoint:
    path: /path/to/email_deferred
    method: GET
    data_selector: event_id
    params: {}
- name: Email Events
  endpoint:
    path: /email/events
    method: POST
    data_selector: properties
- name: Push Events
  endpoint:
    path: /push/events
    method: POST
    data_selector: properties
- name: In-app Events
  endpoint:
    path: /inapp/events
    method: POST
    data_selector: properties
- name: A/B Testing Events
  endpoint:
    path: /abtesting/events
    method: POST
    data_selector: properties
- name: campaigns
  endpoint:
    path: /docs/campaigns-overview
    method: GET
- name: audiences
  endpoint:
    path: /docs/audience-management
    method: GET
- name: analytics
  endpoint:
    path: /docs/analytics-overview
    method: GET
- name: Email Bounce
  endpoint:
    path: /email/bounce
    method: GET
    data_selector: properties
- name: Email Open
  endpoint:
    path: /email/open
    method: GET
    data_selector: properties
- name: Email Clicked
  endpoint:
    path: /email/clicked
    method: GET
    data_selector: properties
- name: Email Marked as Spam
  endpoint:
    path: /email/marked_as_spam
    method: GET
    data_selector: properties
- name: Email Unsubscribed
  endpoint:
    path: /email/unsubscribed
    method: GET
    data_selector: properties
- name: Email Dropped
  endpoint:
    path: /email/dropped
    method: GET
    data_selector: properties
- name: App Inbox Sent
  endpoint:
    path: /app/inbox/sent
    method: GET
    data_selector: properties
- name: campaigns
  endpoint:
    path: /v1/campaigns
    method: GET
    data_selector: campaigns
- name: users
  endpoint:
    path: /v1/users
    method: GET
    data_selector: users
- name: app_inbox_opened
  endpoint:
    path: /app_inbox_opened
    method: POST
    data_selector: event
    params: {}
- name: in_app_message_viewed
  endpoint:
    path: /in_app_message_viewed
    method: POST
    data_selector: event
    params: {}
- name: in_app_message_accept
  endpoint:
    path: /in_app_message_accept
    method: POST
    data_selector: event
    params: {}
- name: in_app_message_submit
  endpoint:
    path: /in_app_message_submit
    method: POST
    data_selector: event
    params: {}
- name: in_app_message_select
  endpoint:
    path: /in_app_message_select
    method: POST
    data_selector: event
    params: {}
- name: push_notification_sent
  endpoint:
    path: /push_notification_sent
    method: POST
    data_selector: event
    params: {}
- name: push_notification_opened
  endpoint:
    path: /push_notification_opened
    method: POST
    data_selector: event
    params: {}
- name: push_notification_bounced
  endpoint:
    path: /push_notification_bounced
    method: POST
    data_selector: event
    params: {}
- name: webhook_sent
  endpoint:
    path: /webhook/sent
    method: POST
    data_selector: event_id
    params: {}
- name: ab_test_impression
  endpoint:
    path: /ab_test/impression
    method: POST
    data_selector: event_id
    params: {}
- name: Campaign Enter
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Campaign Convert
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Campaign Exit
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Campaign Forced Exit
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Campaign Triggered
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Email Sent
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Email Delivered
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Email Deferred
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Email Bounce
  endpoint:
    path: /events/email/bounce
    method: POST
    data_selector: event
    params: {}
- name: Email Open
  endpoint:
    path: /events/email/open
    method: POST
    data_selector: event
    params: {}
- name: Email Clicked
  endpoint:
    path: /events/email/clicked
    method: POST
    data_selector: event
    params: {}
- name: Email Marked as Spam
  endpoint:
    path: /events/email/marked_as_spam
    method: POST
    data_selector: event
    params: {}
- name: Email Unsubscribed
  endpoint:
    path: /events/email/unsubscribed
    method: POST
    data_selector: event
    params: {}
- name: Email Dropped
  endpoint:
    path: /events/email/dropped
    method: POST
    data_selector: event
    params: {}
- name: App Inbox Sent
  endpoint:
    path: /events/app/inbox_sent
    method: POST
    data_selector: event
    params: {}
- name: Campaign Enter
  endpoint:
    path: /campaign/enter
    method: POST
    data_selector: event
    params: {}
- name: Campaign Convert
  endpoint:
    path: /campaign/convert
    method: POST
    data_selector: event
    params: {}
- name: Campaign Exit
  endpoint:
    path: /campaign/exit
    method: POST
    data_selector: event
    params: {}
- name: Campaign Forced Exit
  endpoint:
    path: /campaign/forced_exit
    method: POST
    data_selector: event
    params: {}
- name: Campaign Triggered
  endpoint:
    path: /campaign/triggered
    method: POST
    data_selector: event
    params: {}
- name: Email Sent
  endpoint:
    path: /email/sent
    method: POST
    data_selector: event
    params: {}
- name: Email Delivered
  endpoint:
    path: /email/delivered
    method: POST
    data_selector: event
    params: {}
- name: Email Deferred
  endpoint:
    path: /email/deferred
    method: POST
    data_selector: event
    params: {}
- name: app_inbox_opened
  endpoint:
    path: /app/inbox/opened
    method: GET
    data_selector: event_id
- name: in_app_message_viewed
  endpoint:
    path: /in_app/message/viewed
    method: GET
    data_selector: event_id
- name: in_app_message_accept
  endpoint:
    path: /in_app/message/accept
    method: GET
    data_selector: event_id
- name: in_app_message_submit
  endpoint:
    path: /in_app/message/submit
    method: GET
    data_selector: event_id
- name: in_app_message_select
  endpoint:
    path: /in_app/message/select
    method: GET
    data_selector: event_id
- name: push_notification_sent
  endpoint:
    path: /push/notification/sent
    method: GET
    data_selector: event_id
- name: push_notification_opened
  endpoint:
    path: /push/notification/opened
    method: GET
    data_selector: event_id
- name: push_notification_bounced
  endpoint:
    path: /push/notification/bounced
    method: GET
    data_selector: event_id
- name: Email Bounce
  endpoint:
    path: /events/email/bounce
    method: POST
    data_selector: event_id
    params: {}
- name: Email Open
  endpoint:
    path: /events/email/open
    method: POST
    data_selector: event_id
    params: {}
- name: Email Clicked
  endpoint:
    path: /events/email/clicked
    method: POST
    data_selector: event_id
    params: {}
- name: Email Marked as Spam
  endpoint:
    path: /events/email/spam
    method: POST
    data_selector: event_id
    params: {}
- name: Email Unsubscribed
  endpoint:
    path: /events/email/unsubscribed
    method: POST
    data_selector: event_id
    params: {}
- name: Email Dropped
  endpoint:
    path: /events/email/dropped
    method: POST
    data_selector: event_id
    params: {}
- name: App Inbox Sent
  endpoint:
    path: /events/app/inbox/sent
    method: POST
    data_selector: event_id
    params: {}
- name: webhook_sent
  endpoint:
    path: /webhook/sent
    method: POST
    data_selector: properties
- name: ab_test_impression
  endpoint:
    path: /ab_test/impression
    method: POST
    data_selector: properties
- name: app_inbox_opened
  endpoint:
    path: /app_inbox_opened
    method: GET
    data_selector: properties
    params: {}
- name: in_app_message_viewed
  endpoint:
    path: /in_app_message_viewed
    method: GET
    data_selector: properties
    params: {}
- name: in_app_message_accept
  endpoint:
    path: /in_app_message_accept
    method: GET
    data_selector: properties
    params: {}
- name: in_app_message_submit
  endpoint:
    path: /in_app_message_submit
    method: GET
    data_selector: properties
    params: {}
- name: in_app_message_select
  endpoint:
    path: /in_app_message_select
    method: GET
    data_selector: properties
    params: {}
- name: push_notification_sent
  endpoint:
    path: /push_notification_sent
    method: GET
    data_selector: properties
    params: {}
- name: push_notification_opened
  endpoint:
    path: /push_notification_opened
    method: GET
    data_selector: properties
    params: {}
- name: push_notification_bounced
  endpoint:
    path: /push_notification_bounced
    method: GET
    data_selector: properties
    params: {}
- name: webhook_sent
  endpoint:
    path: /webhook_sent
    method: POST
    data_selector: event_id
    params: {}
- name: ab_test_impression
  endpoint:
    path: /ab_test_impression
    method: POST
    data_selector: event_id
    params: {}
- name: Campaign Enter
  endpoint:
    path: /campaign/enter
    method: POST
    data_selector: event
    params: {}
- name: Campaign Convert
  endpoint:
    path: /campaign/convert
    method: POST
    data_selector: event
    params: {}
- name: Campaign Exit
  endpoint:
    path: /campaign/exit
    method: POST
    data_selector: event
    params: {}
- name: Campaign Forced Exit
  endpoint:
    path: /campaign/forced_exit
    method: POST
    data_selector: event
    params: {}
- name: Campaign Triggered
  endpoint:
    path: /campaign/triggered
    method: POST
    data_selector: event
    params: {}
- name: Email Sent
  endpoint:
    path: /email/sent
    method: POST
    data_selector: event
    params: {}
- name: Email Delivered
  endpoint:
    path: /email/delivered
    method: POST
    data_selector: event
    params: {}
- name: Email Deferred
  endpoint:
    path: /email/deferred
    method: POST
    data_selector: event
    params: {}
- name: template
  endpoint:
    path: /templates
    method: GET
    data_selector: templates
- name: send_push_notification
  endpoint:
    path: /api?apiVersion=1.0.6&action=sendMessage
    method: GET
    data_selector: records
    params: {}
- name: push_notification_with_custom_message
  endpoint:
    path: /api?apiVersion=1.0.6&action=sendMessage
    method: GET
    data_selector: records
    params: {}
- name: update_user_attribute
  endpoint:
    path: /api?apiVersion=1.0.6&action=setUserAttributes
    method: POST
    data_selector: userAttributes
    params: {}
- name: email_bounce
  endpoint:
    path: /email/bounce
    method: POST
    data_selector: event_id
- name: email_open
  endpoint:
    path: /email/open
    method: POST
    data_selector: event_id
- name: email_clicked
  endpoint:
    path: /email/clicked
    method: POST
    data_selector: event_id
- name: email_marked_as_spam
  endpoint:
    path: /email/marked_as_spam
    method: POST
    data_selector: event_id
- name: email_unsubscribed
  endpoint:
    path: /email/unsubscribed
    method: POST
    data_selector: event_id
- name: email_dropped
  endpoint:
    path: /email/dropped
    method: POST
    data_selector: event_id
- name: app_inbox_sent
  endpoint:
    path: /app/inbox/sent
    method: POST
    data_selector: event_id
- name: App Inbox Opened
  endpoint:
    path: /app/inbox/opened
    method: GET
    data_selector: event_id
- name: In-App Message Viewed
  endpoint:
    path: /in-app/message/viewed
    method: GET
    data_selector: event_id
- name: In-App Message Accept
  endpoint:
    path: /in-app/message/accept
    method: GET
    data_selector: event_id
- name: In-App Message Submit
  endpoint:
    path: /in-app/message/submit
    method: GET
    data_selector: event_id
- name: In-App Message Select
  endpoint:
    path: /in-app/message/select
    method: GET
    data_selector: event_id
- name: Push Notification Sent
  endpoint:
    path: /push/notification/sent
    method: GET
    data_selector: event_id
- name: Push Notification Opened
  endpoint:
    path: /push/notification/opened
    method: GET
    data_selector: event_id
- name: Push Notification Bounced
  endpoint:
    path: /push/notification/bounced
    method: GET
    data_selector: event_id
- name: webhook_sent
  endpoint:
    path: /webhook/sent
    method: POST
    data_selector: event
    params: {}
- name: ab_test_impression
  endpoint:
    path: /ab/test/impression
    method: POST
    data_selector: event
    params: {}
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: push_notifications
  endpoint:
    path: /push_notifications
    method: GET
    data_selector: push_notifications
    params: {}
- name: emails
  endpoint:
    path: /emails
    method: GET
    data_selector: emails
    params: {}
- name: ab_tests
  endpoint:
    path: /ab_tests
    method: GET
    data_selector: ab_tests
    params: {}
- name: app_inbox
  endpoint:
    path: /app_inbox
    method: GET
    data_selector: app_inbox
    params: {}
- name: in_app_messages
  endpoint:
    path: /in_app_messages
    method: GET
    data_selector: in_app_messages
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: message_send
  endpoint:
    path: /message/send
    method: GET
    data_selector: records
- name: message_open
  endpoint:
    path: /message/open
    method: GET
    data_selector: records
- name: message_held_back
  endpoint:
    path: /message/held_back
    method: GET
    data_selector: records
- name: template
  endpoint:
    path: /templates
    method: GET
    data_selector: template_id
- name: Android SDK
  endpoint:
    path: /android-sdk
    method: GET
    data_selector: dependencies
- name: iOS SDK
  endpoint:
    path: /ios-sdk
    method: GET
    data_selector: dependencies
- name: JavaScript SDK
  endpoint:
    path: /javascript-sdk
    method: GET
    data_selector: dependencies
- name: Unity SDK
  endpoint:
    path: /unity-sdk
    method: GET
    data_selector: dependencies
- name: send_push_notification
  endpoint:
    path: /api?apiVersion=1.0.6&action=sendMessage
    method: GET
    data_selector: response
    params:
      appId: '{{lead.Leanplum_App_ID}}'
      clientKey: '{{lead.Leanplum_Production_ID}}'
      messageId: '{{lead.Leanplum_Message_ID}}'
      deviceId: '{{lead.Leanplum_User_ID}}'
- name: send_push_notification_with_custom_message
  endpoint:
    path: /api?apiVersion=1.0.6&action=sendMessage
    method: GET
    data_selector: response
    params:
      appId: '{{lead.Leanplum_App_ID}}'
      clientKey: '{{lead.Leanplum_Production_ID}}'
      messageId: '{{lead.Leanplum_Message_ID}}'
      deviceId: '{{lead.Leanplum_User_ID}}'
      values: '{{lead.Leanplum_Message_Text}}'
- name: update_user_attribute
  endpoint:
    path: /api?apiVersion=1.0.6&action=setUserAttributes
    method: POST
    data_selector: response
    params:
      appId: '{{lead.Leanplum_App_ID}}'
      clientKey: '{{lead.Leanplum_Production_ID}}'
      deviceId: '{{lead.Leanplum_User_ID}}'
- name: Leanplum Data
  endpoint:
    path: /exportData
    method: GET
- name: Leanplum
  endpoint:
    path: /path/to/leanplum
    method: GET
    data_selector: records
    params: {}
- name: setUserAttributes
  endpoint:
    path: /reference/post_api-action-setuserattributes
    method: POST
- name: sendMessage
  endpoint:
    path: /reference/post_api-action-sendmessage
    method: POST
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: push_notification
  endpoint:
    path: /push_notifications
    method: GET
    data_selector: records
- name: email
  endpoint:
    path: /emails
    method: GET
    data_selector: records
- name: ab_test
  endpoint:
    path: /ab_tests
    method: GET
    data_selector: records
- name: app_inbox
  endpoint:
    path: /app_inbox
    method: GET
    data_selector: records
- name: in_app_message
  endpoint:
    path: /in_app_messages
    method: GET
    data_selector: records
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: records
- name: message_send
  endpoint:
    path: /messages/send
    method: GET
    data_selector: records
    params: {}
- name: message_open
  endpoint:
    path: /messages/open
    method: GET
    data_selector: records
    params: {}
- name: message_held_back
  endpoint:
    path: /messages/held_back
    method: GET
    data_selector: records
    params: {}
- name: behavioral_data
  endpoint:
    path: /behavioral_data
    method: GET
    data_selector: variables
- name: lifecycle_data
  endpoint:
    path: /lifecycle_data
    method: GET
    data_selector: variables
- name: localization_data
  endpoint:
    path: /localization_data
    method: GET
    data_selector: variables
- name: technology_data
  endpoint:
    path: /technology_data
    method: GET
    data_selector: variables
- name: traffic_source_data
  endpoint:
    path: /traffic_source_data
    method: GET
    data_selector: variables
- name: user_data
  endpoint:
    path: /user_data
    method: GET
    data_selector: variables
- name: contextual_data
  endpoint:
    path: /contextual_data
    method: GET
    data_selector: variables
- name: linked_data
  endpoint:
    path: /linked_data
    method: GET
    data_selector: variables
- name: exportData
  endpoint:
    path: /exportData
    method: GET
- name: Leanplum Connector
  endpoint:
    path: /tealium/leanplum
    method: POST
    data_selector: records
- name: setUserAttributes
  endpoint:
    path: /reference/post_api-action-setuserattributes
    method: POST
    data_selector: parameters
    params:
      App ID: Required
      Client Key: Required
      API Version: Required
      User ID: Required
      Message ID: Required
      Dev Mode: Optional
      Device ID: Optional
      Create Disposition: Optional
      Force: Optional
      Values: Optional
- name: sendMessage
  endpoint:
    path: /reference/post_api-action-sendmessage
    method: POST
    data_selector: parameters
    params:
      App ID: Required
      Client Key: Required
      API Version: Required
      User ID: Required
      Message ID: Required
      Dev Mode: Optional
      Device ID: Optional
      Create Disposition: Optional
      Force: Optional
      Values: Optional
- name: email_preview
  endpoint:
    path: /email/preview
    method: GET
    data_selector: emailPreviewData
- name: Behavioral data
  endpoint:
    path: /behavioral_data
    method: GET
- name: Lifecycle data
  endpoint:
    path: /lifecycle_data
    method: GET
- name: Localization data
  endpoint:
    path: /localization_data
    method: GET
- name: Technology data
  endpoint:
    path: /technology_data
    method: GET
- name: Traffic Source data
  endpoint:
    path: /traffic_source_data
    method: GET
- name: User data
  endpoint:
    path: /user_data
    method: GET
- name: Contextual data
  endpoint:
    path: /contextual_data
    method: GET
- name: Linked data variables
  endpoint:
    path: /linked_data
    method: GET
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
    params: {}
- name: Email Preview
  endpoint:
    path: /email/preview
    method: GET
    data_selector: email_preview
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/events
    method: POST
    data_selector: eventData
- name: registerDevice
  endpoint:
    path: /api/registerDevice
    method: POST
    data_selector: response
    params: {}
- name: getMessages
  endpoint:
    path: /api/getMessages
    method: GET
    data_selector: messages
    params: {}
- name: trackpost
  endpoint:
    path: /api/trackpost
    method: POST
    data_selector: data
    params: {}
- name: registerDevicepost
  endpoint:
    path: /api/registerDevicepost
    method: POST
    data_selector: data
    params: {}
- name: event_tracking
  endpoint:
    path: /reference/events
    method: POST
    data_selector: events
- name: state_tracking
  endpoint:
    path: /reference/states
    method: POST
    data_selector: states
- name: User IDs
  endpoint:
    path: /reference/user-ids
    method: GET
    data_selector: user_ids
- name: user_attributes
  endpoint:
    path: /reference/user-attributes
    method: GET
    data_selector: attributes
    params: {}
- name: registerDevice
  endpoint:
    path: /api/registerDevice
    method: POST
    data_selector: response
    params: {}
- name: trackEvent
  endpoint:
    path: /api/trackEvent
    method: POST
    data_selector: response
    params: {}
- name: trackpost
  endpoint:
    path: /trackpost
    method: POST
- name: startCampaignpost
  endpoint:
    path: /startCampaignpost
    method: POST
- name: deleteUserpost
  endpoint:
    path: /deleteUserpost
    method: POST
- name: messages
  endpoint:
    path: /reference/messages
    method: GET
    data_selector: messages
- name: users
  endpoint:
    path: /reference/user-information
    method: GET
    data_selector: users
- name: messages
  endpoint:
    path: /api/messages
    method: GET
    data_selector: messages
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: users
- name: User IDs
  endpoint:
    path: /reference/user-ids
    method: GET
    data_selector: user_ids
- name: messages
  endpoint:
    path: /api/messages
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
- name: DialogCustomizer
  endpoint:
    path: /reference/android-add-dialog-customizer
    method: GET
    data_selector: customizer_methods
    params: {}
- name: messages
  endpoint:
    path: /api/messages
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
- name: custom_templates
  endpoint:
    path: /reference/customizing-in-app-message-templates
    method: GET
- name: push_notifications
  endpoint:
    path: /push_notifications
    method: POST
    data_selector: notifications
- name: add_android_notification_channel
  endpoint:
    path: /reference/post_api-action-addandroidnotificationchannel
    method: POST
    data_selector: response
- name: get_android_notification_channels
  endpoint:
    path: /reference/get_api-action-getandroidnotificationchannels
    method: GET
    data_selector: response
- name: notificationPayload
  endpoint:
    path: /notification/payload
    method: GET
    data_selector: largeImageURL
    params: {}
- name: inbox
  endpoint:
    path: /inbox
    method: GET
    data_selector: messages
- name: addAndroidNotificationChannel
  endpoint:
    path: /reference/post_api-action-addandroidnotificationchannel
    method: POST
- name: deleteAndroidNotificationChannel
  endpoint:
    path: /reference/post_api-action-deleteandroidnotificationchannel
    method: POST
- name: getAndroidNotificationChannels
  endpoint:
    path: /reference/get_api-action-getandroidnotificationchannels
    method: GET
- name: inbox_message
  endpoint:
    path: /inbox/messages
    method: GET
    data_selector: messages
    params: {}
- name: push_notification
  endpoint:
    path: /push/notification
    method: POST
    data_selector: notificationPayload
    params: {}
- name: user_behavior
  endpoint:
    path: /api/user_behavior
    method: POST
    data_selector: data
- name: messages
  endpoint:
    path: /api/messages
    method: GET
    data_selector: messages
- name: inbox
  endpoint:
    path: /inbox
    method: GET
    data_selector: messages
- name: getMessages
  endpoint:
    path: /reference/get_api-action-getmessages
    method: GET
- name: exportData
  endpoint:
    path: /reference/get_api-action-exportdata
    method: GET
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
    params: {}
- name: messages
  endpoint:
    path: /messages
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: records
    params: {}
- name: location_services
  endpoint:
    path: /reference/geofencing-and-location-based-messaging
    method: GET
    data_selector: geofencing
- name: location_services
  endpoint:
    path: /reference/react-native-location-services
    method: GET
- name: geofencing_and_location_based_messaging
  endpoint:
    path: /reference/geofencing-and-location-based-messaging
    method: GET
- name: start_session
  endpoint:
    path: /reference/post_api-action-start
    method: POST
- name: pause_session
  endpoint:
    path: /reference/post_api-action-pausesession
    method: POST
- name: resume_session
  endpoint:
    path: /reference/post_api-action-resumesession
    method: POST
- name: track_event
  endpoint:
    path: /reference/post_api-action-track
    method: POST
- name: set_user_attributes
  endpoint:
    path: /reference/post_api-action-setuserattributes
    method: POST
- name: export_user
  endpoint:
    path: /reference/get_api-action-exportuser
    method: GET
- name: send_message
  endpoint:
    path: /reference/post_api-action-sendmessage
    method: POST
- name: set_device_attributes
  endpoint:
    path: /reference/post_api-action-setdeviceattributes
    method: POST
- name: start_session
  endpoint:
    path: /reference/post_api-action-start
    method: POST
- name: pause_session
  endpoint:
    path: /reference/post_api-action-pausesession
    method: POST
- name: resume_session
  endpoint:
    path: /reference/post_api-action-resumesession
    method: POST
- name: track_event
  endpoint:
    path: /reference/post_api-action-track
    method: POST
- name: set_user_attributes
  endpoint:
    path: /reference/post_api-action-setuserattributes
    method: POST
- name: export_user
  endpoint:
    path: /reference/get_api-action-exportuser
    method: GET
- name: send_message
  endpoint:
    path: /reference/post_api-action-sendmessage
    method: POST
- name: set_device_attributes
  endpoint:
    path: /reference/post_api-action-setdeviceattributes
    method: POST
- name: getVars
  endpoint:
    path: /reference/get_api-action-getvars
    method: GET
    data_selector: variables
    params: {}
- name: exportData
  endpoint:
    path: /reference/get_api-action-exportdata
    method: GET
    data_selector: user_activity_data
    params: {}
- name: getAbTests
  endpoint:
    path: /reference/get_api-action-getabtests
    method: GET
    data_selector: ab_tests
    params: {}
- name: variables
  endpoint:
    path: /reference/get_api-action-getvars
    method: GET
- name: attribution
  endpoint:
    path: /reference/post_api-action-settrafficsourceinfo
    method: POST
- name: user_activity_data
  endpoint:
    path: /reference/get_api-action-exportdata
    method: GET
- name: ab_tests
  endpoint:
    path: /reference/get_api-action-getabtests
    method: GET
- name: messages
  endpoint:
    path: /reference/get_api-action-getmessages
    method: GET
- name: send_message
  endpoint:
    path: /api
    method: POST
    data_selector: ''
    params:
      action: sendMessage
- name: send_message
  endpoint:
    path: /api
    method: POST
    data_selector: data
    params:
      action: sendMessage
- name: track
  endpoint:
    path: /track
    method: POST
- name: getMessages
  endpoint:
    path: /getMessages
    method: GET
- name: advance
  endpoint:
    path: /api?action=advance
    method: POST
- name: user_behavior
  endpoint:
    path: /reference/user-behavior
    method: GET
- name: user_information
  endpoint:
    path: /reference/user-information
    method: GET
- name: messages
  endpoint:
    path: /reference/messages
    method: GET
- name: ab_tests
  endpoint:
    path: /reference/ab-tests
    method: GET
- name: files_and_variables
  endpoint:
    path: /reference/files-and-variables
    method: GET
- name: export_data
  endpoint:
    path: /reference/export-data
    method: GET
- name: import_data
  endpoint:
    path: /reference/import-data
    method: GET
- name: campaigns
  endpoint:
    path: /reference/campaigns
    method: POST
- name: api_limits
  endpoint:
    path: /reference/api-limits
    method: GET
- name: advance
  endpoint:
    path: /api?action=advance
    method: POST
- name: pauseState
  endpoint:
    path: /api?action=pauseState
    method: POST
    data_selector: response
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_PROD_KEY
      apiVersion: 1.0.6
      userId: hfarnsworth
      devMode: false
      createDisposition: CreateNever
- name: pauseState
  endpoint:
    path: /api?action=pauseState
    method: POST
    data_selector: response
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_PROD_KEY
      apiVersion: 1.0.6
      userId: hfarnsworth
      devMode: false
      createDisposition: CreateNever
- name: start_session
  endpoint:
    path: /api?action=start
    method: POST
- name: stop
  endpoint:
    path: /api?action=stop
    method: POST
    data_selector: null
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_PROD_KEY
      apiVersion: 1.0.6
      userId: hfarnsworth
      devMode: false
      createDisposition: CreateNever
- name: start
  endpoint:
    path: /api
    method: POST
    params:
      action: start
- name: start
  endpoint:
    path: /api?action=start
    method: POST
- name: track
  endpoint:
    path: /api?action=track
    method: POST
- name: stop
  endpoint:
    path: /api?action=stop
    method: POST
- name: stop
  endpoint:
    path: /api?action=stop
    method: POST
    data_selector: null
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_PROD_KEY
      apiVersion: 1.0.6
      userId: hfarnsworth
      devMode: false
      createDisposition: CreateNever
- name: track
  endpoint:
    path: /api
    method: POST
    data_selector: event
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_PROD_KEY
      apiVersion: 1.0.6
      userId: hfarnsworth
      devMode: false
      createDisposition: CreateIfNeeded
- name: default_response
  endpoint:
    path: /api?action=stop
    method: POST
    data_selector: response
    params: {}
- name: default
  endpoint:
    path: /api?action=track
    method: POST
    data_selector: response
    params: {}
- name: track
  endpoint:
    path: /api?action=track
    method: POST
    data_selector: null
    params: {}
- name: User Information
  endpoint:
    path: /reference/user-information
    method: GET
    data_selector: user_info
- name: track_action
  endpoint:
    path: /api?action=track
    method: POST
- name: setTrafficSourceInfo
  endpoint:
    path: /api?action=setTrafficSourceInfo
    method: POST
- name: user_information
  endpoint:
    path: /reference/user-information
    method: GET
    data_selector: records
- name: deleteUser
  endpoint:
    path: /api?action=deleteUser
    method: POST
    data_selector: response
    params: {}
- name: setTrafficSourceInfo
  endpoint:
    path: /api?action=setTrafficSourceInfo
    method: POST
    data_selector: response
    params: {}
- name: unblock
  endpoint:
    path: /api?action=unblock
    method: POST
    data_selector: response
    params: {}
- name: deleteUser
  endpoint:
    path: /api?action=deleteUser
    method: POST
    data_selector: response[].success
    params: {}
- name: sendMessage
  endpoint:
    path: /api
    method: POST
    data_selector: null
    params:
      action: sendMessage
- name: unblock
  endpoint:
    path: /api?action=unblock
    method: POST
    data_selector: response
    params: {}
- name: sendMessage
  endpoint:
    path: /api?action=sendMessage
    method: POST
    data_selector: response
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_PROD_KEY
      apiVersion: 1.0.6
      userId: hfarnsworth
      force: false
      devMode: false
      createDisposition: CreateNever
- name: sendMessage
  endpoint:
    path: /api?action=sendMessage
    method: POST
- name: sendMessage
  endpoint:
    path: /api?action=sendMessage
    method: POST
    data_selector: response
    params: {}
- name: add_android_notification_channel
  endpoint:
    path: /api?action=addAndroidNotificationChannel
    method: POST
    data_selector: response
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_DEV_KEY
      apiVersion: 1.0.6
      importance: 3
      default: false
- name: addAndroidNotificationChannel
  endpoint:
    path: /api?action=addAndroidNotificationChannel
    method: POST
    data_selector: response
    params: {}
- name: addAndroidNotificationChannel
  endpoint:
    path: /api?action=addAndroidNotificationChannel
    method: POST
    data_selector: response
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_DEV_KEY
- name: delete_android_notification_channel
  endpoint:
    path: /api?action=deleteAndroidNotificationChannel
    method: POST
    data_selector: response
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_DEV_KEY
      apiVersion: 1.0.6
- name: getAbTest
  endpoint:
    path: /api?action=getAbTest
    method: GET
    data_selector: response
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_CONTENT_KEY
      apiVersion: 1.0.6
- name: deleteAndroidNotificationChannel
  endpoint:
    path: /api?action=deleteAndroidNotificationChannel
    method: POST
    data_selector: response
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_DEV_KEY
      apiVersion: 1.0.6
- name: getAbTests
  endpoint:
    path: /api?action=getAbTests
    method: GET
    data_selector: response.abTests
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_CONTENT_KEY
      apiVersion: 1.0.6
- name: getAbTest
  endpoint:
    path: /api?action=getAbTest
    method: GET
    data_selector: response
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_CONTENT_KEY
      apiVersion: 1.0.6
- name: getVariant
  endpoint:
    path: /getVariant
    method: GET
- name: getVars
  endpoint:
    path: /getVars
    method: GET
- name: getAbTests
  endpoint:
    path: /api?action=getAbTests
    method: GET
    data_selector: response.abTests
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_CONTENT_KEY
      apiVersion: 1.0.6
- name: downloadFile
  endpoint:
    path: /api?action=downloadFile
    method: GET
- name: download_file
  endpoint:
    path: /api?action=downloadFile
    method: GET
- name: uploadFile
  endpoint:
    path: /api?action=uploadFile
    method: POST
    data_selector: response
    params: {}
- name: delete_postback
  endpoint:
    path: /api?action=deletePostback
    method: POST
    data_selector: response
    params: {}
- name: exportData
  endpoint:
    path: /api?action=exportData
    method: GET
    data_selector: sessions
- name: upload_file
  endpoint:
    path: /api?action=uploadFile
    method: POST
    data_selector: response
    params: {}
- name: sessions
  endpoint:
    path: /exportData/sessions
    method: GET
    data_selector: records
- name: user_attributes
  endpoint:
    path: /exportData/userAttributes
    method: GET
    data_selector: records
- name: experiments
  endpoint:
    path: /exportData/experiments
    method: GET
    data_selector: records
- name: states
  endpoint:
    path: /exportData/states
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /exportData/events
    method: GET
    data_selector: records
- name: exportData
  endpoint:
    path: /reference/get_api-action-exportdata
    method: GET
- name: exportReport
  endpoint:
    path: /reference/get_api-action-exportreport
    method: GET
- name: deletePostback
  endpoint:
    path: /api?action=deletePostback
    method: POST
    data_selector: response
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_DATA_EXPORT_KEY
      apiVersion: 1.0.6
- name: exportData
  endpoint:
    path: /exportData
    method: GET
    data_selector: records
- name: exportData
  endpoint:
    path: /api?action=exportData
    method: GET
- name: multi
  endpoint:
    path: /api
    method: POST
    data_selector: data
    params:
      appId: required
      clientKey: required
      apiVersion: required
      time: required
      data: required
- name: sessions
  endpoint:
    path: /reference/export-data
    method: GET
    data_selector: sessions
    params: {}
- name: user_attributes
  endpoint:
    path: /reference/export-data
    method: GET
    data_selector: user_attributes
    params: {}
- name: experiments
  endpoint:
    path: /reference/export-data
    method: GET
    data_selector: experiments
    params: {}
- name: states
  endpoint:
    path: /reference/export-data
    method: GET
    data_selector: states
    params: {}
- name: events
  endpoint:
    path: /reference/export-data
    method: GET
    data_selector: events
    params: {}
- name: getMultiResults
  endpoint:
    path: /api?action=getMultiResults
    method: GET
    data_selector: response
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_DEV_KEY
      apiVersion: 1.0.6
      jobId: JOB_ID
- name: exportData
  endpoint:
    path: /reference/get_api-action-exportdata
    method: GET
- name: exportReport
  endpoint:
    path: /reference/get_api-action-exportreport
    method: GET
- name: setTrafficSourceInfo
  endpoint:
    path: /api
    method: POST
    data_selector: ''
    params:
      action: setTrafficSourceInfo
      appId: '{APP_ID}'
      clientKey: '{CLIENT_KEY}'
      deviceId: '{DEVICE_ID}'
      client: HasOffers
      sdkVersion: 1.0.6
      trafficSource: '{"publisherId":"","publisherName":"","publisherSubPublisher":"","publisherSubSite":"","publisherSubCampaign":""}'
- name: exportData
  endpoint:
    path: /exportData
    method: GET
    data_selector: records
- name: exportUsers
  endpoint:
    path: /exportUsers
    method: GET
- name: getAbTests
  endpoint:
    path: /getAbTests
    method: GET
- name: get_vars
  endpoint:
    path: /api
    method: GET
    data_selector: vars
    params:
      appId: APP_ID_HERE
      clientKey: DEV_OR_PROD_KEY_HERE
      userId: USERID_HERE
      devMode: TRUE_OR_FALSE
- name: multi
  endpoint:
    path: /api
    method: POST
    data_selector: data
    params:
      appId: required
      clientKey: required
      apiVersion: required
      time: required
      data: required
- name: block_user_data
  endpoint:
    path: /reference/post_api-action-block
    method: POST
- name: delete_user_data
  endpoint:
    path: /reference/post_api-action-deleteuser
    method: POST
- name: export_user_data
  endpoint:
    path: /reference/get_api-action-exportuser
    method: GET
- name: set_user_attributes
  endpoint:
    path: /reference/post_api-action-setuserattributes
    method: POST
- name: set_device_attributes
  endpoint:
    path: /reference/post_api-action-setdeviceattributes
    method: POST
- name: getMultiResults
  endpoint:
    path: /api?action=getMultiResults
    method: GET
    data_selector: response
    params:
      appId: YOUR_APP_ID
      clientKey: YOUR_DEV_KEY
      apiVersion: 1.0.6
      jobId: JOB_ID
- name: setTrafficSourceInfo
  endpoint:
    path: /api
    method: GET
    data_selector: trafficSource
    params:
      action: setTrafficSourceInfo
      appId: '{APP_ID}'
      clientKey: '{CLIENT_KEY}'
      deviceId: '{DEVICE_ID}'
      client: HasOffers
      sdkVersion: 1.0.6
      trafficSource: '{"publisherId":"","publisherName":"","publisherSubPublisher":"","publisherSubSite":"","publisherSubCampaign":""}'
- name: export_users
  endpoint:
    path: /reference/get_api-action-exportusers
    method: GET
- name: get_ab_tests
  endpoint:
    path: /reference/get_api-action-getabtests
    method: GET
- name: getVars
  endpoint:
    path: /api
    method: GET
    data_selector: variables
    params:
      appId: APP_ID_HERE
      clientKey: DEV_OR_PROD_KEY_HERE
      userId: USERID_HERE
      devMode: TRUE_OR_FALSE
notes:
- Messages are queued, so they will be sent after the call completes.
- If the user/device does not exist, the API call is skipped and a warning will be
  returned.
- Uses OAuth2 with refresh token — requires setup of connected app in Leanplum
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Thank you for choosing Leanplum! We are excited to partner with you on your journey
  to build more meaningful relationships with your users.
- Requires setup of connected app in Leanplum
- Integrate the Leanplum JavaScript SDK through Google Tag Manager
- Use only production keys on public websites
- If a non-production key has been exposed, it can be revoked and a new one created
  in the App settings screen.
- In case a non-production key has been exposed, you can revoke it and create a new
  one in the App settings screen.
- Use a Production key in a live, production app — it contains the most limited set
  of permissions and is meant to be used when sending production data to Leanplum.
- Use a Development key only in tightly-controlled development environments (Staging
  / QA). It has a higher level of permissions associated with it and must never be
  used to send production traffic to Leanplum.
- Authentication is done by adding the clientKey and appId parameters to the HTTP
  requests.
- All data is encrypted in transit over TLS and HTTPS.
- Tracking uninstalls requires that push notifications are enabled for your app.
- Firebase and/or APNS may not notify us of uninstalls right away, so it's best to
  track uninstall trends over longer periods of time rather than as an exact metric
  day-by-day.
- Checking for uninstalls does not contribute to billing directly. However, if users
  track the Uninstall event, it counts as a single billable action. Without uninstall
  tracking enabled, users can track the Uninstall event only when we try to deliver
  a push campaign to them.
- API keys must be kept secure and should not be exposed publicly.
- Variables are retrieved asynchronously
- File variables are currently only supported on iOS and Android.
- With Leanplum variables, you can update your app's data and files remotely without
  having to resubmit your app to the App Store or Google Play.
- Ensure to follow CSV format for user data import.
- Check the file encoding to ensure it is encoded properly as UTF-8.
- When uploading the email attribute, make sure the name of the attribute matches
  the attribute name you have set in your email settings.
- Requires API key for authentication
- Ensure CSV format matches the required schema
- At Leanplum we believe it is important to test everything.
- Never use a development key in a live production build. Our development key uses
  an open socket (for real-time analytics), which could noticeably degrade your app's
  performance. Additionally, any user data will be lost as it is not captured in analytics.
- Avoid special characters in file name. Our system supports latin letters, numbers
  and underscore (a-z, A-Z, 0-9, _) in the file name. Spaces and other special characters
  are not supported and we do recommend to avoid them in the names of the uploaded
  files.
- API Calls, which are generated without using the SDK Materials, may in some instances
  also be referred to as 'Server-side API Calls.'
- Use campaigns to create a single message, a complex chain of messages, an A/B test,
  or a combination of all these actions.
- By default, the audience for a new campaign is set to All Users.
- Ensure correct OAuth2 setup for API access.
- Select Multi-Message campaign type to create a multi-message campaign draft
- The audience for a new campaign is set to All Users by default.
- Only available for clients with Email Messaging services.
- Goal category helps organize campaigns in the overview table.
- Campaign settings can be changed after creation.
- Select Multi-Message campaign type
- Complete all campaign composition and orchestration steps
- Contact your CSM if you'd like to activate campaign labels.
- API keys should be secured and not exposed publicly.
- The Goal category helps you organize your campaigns in the overview table.
- When setting up your campaign, choose a category that aligns best with your end
  goal.
- Users fall out of the campaign when they aren't eligible to receive the next action.
- Users can re-enter a campaign after the attribution window if they complete the
  entry trigger again.
- Users fall out of the campaign when they aren't eligible to receive the next action
  in the campaign.
- When you click 'End Campaign', it brings a hard stop to the campaign.
- Some API calls may have rate limits
- Some endpoints may require specific API keys to function correctly.
- API key required for authentication
- Users who don't have previous session data will not receive Optimal Time campaigns.
- Users without timezone data will not receive campaigns scheduled in User's Timezone.
- Contact your CSM to set a default timezone & default Optimal Time for users with
  0 sessions.
- Schedule campaigns with UTC Time for the first month you use Leanplum.
- Emails must be scheduled at least one hour in advance.
- Some objects may return nulls in deeply nested fields
- Delivery caps limit the total number of messages a user can receive in a given session,
  day or week.
- Delivery caps limit the total number of messages a user can receive in a given session,
  day or week, where a day is the past 24 hours and a week is the past 168 hours (7
  days). Right before each message is sent to a user, Leanplum determines if the message
  will exceed the daily or weekly caps. If so, the message will not be sent.
- Single in-app display limits
- User Guide
- In-app display and frequency limits picker
- Display limits define when an in-app should be displayed.
- Frequency limits define how often an in-app should be displayed.
- OAuth2 setup is required for authentication.
- Campaigns created via the Single Message experience can benefit from our recently
  released features.
- Campaigns created via the Single Message experience can benefit from recently released
  features.
- Everything you include in a multi-message campaign is called an action.
- Giving your actions unique names will help you identify the events and analytics
  related to those actions later on.
- API limits may apply based on account type.
- Uses OAuth2 for authentication.
- You can set the Sub-Delivery of server-side actions to Delay of zero seconds for
  an experience closer to the immediate send.
- These messages should be sent within 15 minutes of the scheduled delivery, depending
  on the server load at the time.
- The Confirm message only tracks an event for the 'Accept' button tap.
- It is not currently possible to create a Delayed Sub-delivery action from the Cancel
  button.
- You can, however, trigger immediate (in-app) actions from the Cancel button.
- The Campaign Results section shows a campaign's results and metrics after it's started.
- Campaign Results section shows a campaign's results and metrics after it's started.
- Campaign Flow helps visualize how users progress through a campaign.
- Securing your Leanplum API keys is important
- Personalized messages perform better than general ones.
- Strong campaigns combine both personalization and localization strategies, serving
  users the most relevant and specific content.
- API calls may be subject to rate limiting.
- Some API endpoints may have rate limits.
- Test on a real device to ensure that everything looks exactly how you want it to.
- The Quandl API is free to use and does not require any API keys.
- Ensure that the data source queries the URL for its associated web service properly
- On-screen preview gives a good rough idea of what a message will look like, but
  you should always test on a real device to make sure your content looks exactly
  how you want it to.
- Previewing different variants is currently supported only for Email actions.
- Preview on device will populate the personalized message variants with the user
  signed in on the device.
- The Quandl API for stock quotes is free to use and does not require any API keys.
- You can customize message content with user attributes and other values using handlebars
  {{ }}.
- You can only preview in-app actions with a development build of your app (using
  your development client key) since previewing requires an open web socket to receive
  the message in the same app session.
- Push notifications are not sending
- iOS, unlike Android, requires users to opt-in to enable push, so some of your users
  will not be able to receive notifications outside of your app.
- Android push images require an aspect ratio of 2:1.
- With GIFs, Android will only display a static image in the notification.
- iOS and Android samples for using key-value pairs with push
- Your device or user info does not match the Target audience for the message.
- Your device was switched to a different user who is not eligible for the push and/or
  was not eligible at the time the message sent.
- If you are targeting a user attribute that is an array with a contains segment,
  the value must match one of the array items exactly.
- The time it takes for a scheduled message from the servers depends on the messages
  volume and complexity of segmentation criteria.
- Optimal time delivery takes time to analyze user behavior before scheduling the
  message delivery.
- If your push notification delivery has a certain amount of delay, it won’t send
  right away unless you are using the preview button with a registered test device.
- You may have set a global message/push notification limit for your app.
- The app was open when the push notification was delivered to the device.
- Your bundle ID used to generate certificates is not correct.
- You have the wrong Google API key.
- AndroidManifest may be missing necessary code.
- Missing Android notification channel.
- The app was uninstalled on the device.
- Your message won’t send if the custom term or attribute text isn’t correct.
- Always comply with CAN-SPAM and CASL for marketing emails.
- User engagement is of the biggest factors for ISPs when determining your sender
  reputation, which is critical for successful email delivery and inboxing.
- Be sure to use your Leanplum requested sending domain.
- Most of the email clients have a preview pane of 600 - 800 pixels maximum width.
- Have in mind that more than 50% of emails are opened on mobile devices.
- The optimal total image data weight should be less than 1mb.
- Alt Text is the text that appears in the case your image doesn’t load.
- User engagement is a big factor for ISPs when determining your sender reputation.
- Links in Leanplum emails are redirecting users to a 'Your connection is not private'
  warning page.
- Links generated by Leanplum’s email service provider (ESP) are non-secure (http)
  by default.
- The SSL setup is not mandatory, but is highly recommended.
- Ensure content encourages positive vs. negative recipient engagement.
- SVG is also a popular image file format. However, it is not supported by Gmail and
  other popular email clients.
- Email Preview Text is displayed only for HTML emails (those having a BODY tag).
- The SSL setup is done outside Leanplum, in a 3rd party environment.
- Leanplum lets you manage email subscriptions.
- Some endpoints may require additional parameters for detailed analysis
- The Unique Open Rate is not likely to provide meaningful results when viewing the
  numbers day-by-day because it's the number of unique users on that day divided by
  the number of emails sent on that day.
- Analyze email metrics by domain
- In-app messages can appear at different points in your app experience, usually immediately
  after a user triggers some sort of event or state.
- In-app message as a first-level action is incompatible with the Recurring delivery
  method.
- You can only use the Events and States that you have explicitly tracked via our
  SDK for 'Display when' events. You cannot trigger an in-app message based on something
  on your server.
- Alert is a simple, one-button template that is best for short, informative messages.
- Leanplum has several in-app message templates to choose from, and you can customize
  your message's written content, colors, images, and more.
- Banners are great for driving or rewarding user behavior inside your app without
  covering the bulk of the current screen.
- The center popup is a larger one-button message with more flexibility in design
  and length than the alert message.
- Rich in-app messages allow you to change the font of your message text.
- A webhook is a simple notification that is sent as an HTTPS POST request after something
  occurs.
- A webhook is a simple notification sent as an HTTPS POST request after something
  occurs.
- Be sure to set the content type for the service or API you’re delivering the webhook
  to.
- There are several third-party tools that you can use to test and verify your webhook
  settings.
- Webhook testing can be done using tools like webhook.site
- Leanplum automatically retries webhooks that receive some error responses.
- 'Webhooks will be retried for the following HTTP error codes: 408, 409, 429, and
  500 through 599.'
- Leanplum retries a single webhook up to 50 times, with an increasing exponential
  backoff starting at 1 minute in between each request.
- An app function can send users to a custom URL, send the iOS Push Registration message,
  or run another custom function you have set in your code.
- The Push Registration prompt can only be sent to users once, so make sure you send
  it at the right time in your onboarding process or app experience.
- Syncing and changing variable values in the Leanplum dashboard
- Starting from Unity SDK 3.1.0, Variables can be synced directly from code.
- Leverage Leanplum’s advanced features to deliver personalised content embedded within
  your app's UI.
- Audience Details is where you build, edit, delete an audience or get insights about
  it.
- Allows segmentation of users based on behavioral, demographic, geolocation, or any
  other data.
- In order to open the details for a particular audience, just click on it in the
  Audience Dashboard.
- The Audience Builder allows you to segment your users based on behavioral, demographic,
  geolocation, or any other data that is available in Leanplum.
- Property segmentation rules allow you to segment your users based on User attributes,
  Preferences, Devices, Attribution and Location data.
- 'Delivery times: Datetime segmentation currently doesn''t work with the user timezone
  and optimal timezone delivery methods.'
- Welcome to the Segmentation reference. The articles in this section explain what
  segmentation rules are available in Leanplum, how you can use them with different
  data types available in your dashboard.
- A/B tests allow you measure which app changes or messaging strategies are the most
  successful.
- Requires setup of API keys in Leanplum
- Check API limits to avoid throttling
- If you are testing a message, make sure you review A/B testing a message for some
  messaging-specific tips.
- After reviewing your results, you can select a winning test group (control or variant)
  and roll out that experience to your users.
- Managing the status of your A/B tests by pausing, copying, or deleting a test
- Only development devices may see changes.
- An A/A test is a test where the variant group is the same as the control group.
- The goal of an A/A test isn't to test a change to one of the groups — the goal is
  to evaluate the statistical rigor of the tool used to run experiments.
- How to create, bookmark, and rename reports.
- As long as you don't publish your A/B test, your users won't see your changes.
- If a user qualifies for multiple A/B tests affecting the same variable, Leanplum
  will show that user the experience for whichever test was published first.
- By default, the targeting is sticky — i.e., new users who saw the A/B test will
  remain in the A/B test past their first session.
- Apply filters to zoom in on meaningful data.
- Filters let you take a closer look at metrics for a specific subset of your users.
- The goal of an A/A test is to evaluate the statistical rigor of the tool used to
  run experiments.
- Leanplum tracks dozens of metrics, and they're all available in Analytics when viewing
  results for your messages, A/B tests, and overall app usage.
- Custom metrics can be created based on default metrics.
- Users can apply filters based on various user segments.
- Make sure the metric fits your use case
- When testing a campaign or a variable that has an effect on user activity, don't
  use metrics that have (Total) Daily users as denominator.
- Leanplum gives you the ability to easily create custom metrics based on the default,
  out-of-the-box metrics.
- The Based on metric will serve as one of two metrics in a calculation, specifically
  the numerator if division is selected as the operator.
- API keys must be kept secure and not exposed in public repositories.
- Unique user metrics are currently only available for some reports.
- If you try to view a unique metric when specific scenarios are true, you will see
  an error message.
- The metrics created for parameter metrics, message events, A/B test events, Campaign
  events, and your custom events
- Leanplum offers a range of messaging channels, and each message type generates default
  events you can use as trigger events, Analytics filters, metrics, and more.
- Uses OAuth2
- 'The Analytics dashboard has two main sections: the graph and the metric tiles.'
- The graph displays metrics related to A/B test analytics.
- If you try to view a unique metric when one or more of the specified scenarios are
  true, you will see an error message.
- Leanplum automatically tracks several metrics for your email campaigns, including
  opens, clicks, bounces, and unsubscribes.
- The Analytics view is updated every 2 to 4 hours, so it may lag behind the counts
  in the Message Composer and Message Overview.
- May be delayed if receiving inbox providers temporarily defer the mail.
- Tracking message suppression is not enabled by default. Contact your CSM to enable
  this feature.
- Leanplum users cannot delete the MAIN team
- To delete a team, all apps in the team must be deleted first
- It may take 2-4 hours to see results in Analytics.
- You can change the settings for your confidence interval by selecting the percentage
  dropdown above the graph.
- Only users you've added to Leanplum will be able to log in.
- If you have configured Single Sign-On you will have two options to select.
- You may want to create separate apps for your staging and production environments
  — see Use the right API keys.
- If you believe your app’s security has been compromised in any way, we recommend
  revoking your API keys as soon as possible.
- You can exclude campaign messages from the app limits when configuring the Delivery
  settings.
- API documentation may have examples for different endpoints.
- 'You can enable all custom events for Recency & Frequency. For each event, you can
  attach up to 15 parameters as follows: Up to 10 string parameters, Up to 5 numeric
  parameters.'
- The parameters you enable for Recency & Frequency need to be within the limit of
  200 distinct parameters for your LP App.
- Leanplum users cannot delete the MAIN team, as it is the root entity for a company
  using Leanplum.
- Insert your Leanplum App ID and Client Key in the Adjust dashboard.
- Only users explicitly added to a Leanplum Team and assigned a role will be able
  to use your business login.
- Linked Data must be enabled — this is an advanced feature that is not enabled by
  default.
- You must have admin privileges for your team to view the settings of an app.
- Find and copy your Public API Key from Affirm.
- Ensure the Linked Data is working properly by sending an email preview.
- Ensure you do not overload your servers with more traffic than it can handle, per
  unit of time.
- Cohort names must be < 150 characters
- Leanplum will create missing users by default
- When you activate the Amplitude Feed, Leanplum will automatically stream all Leanplum
  specific marketing events to your Amplitude project.
- Make sure your user identities are matching in Leanplum and Amplitude. Otherwise,
  the integration may create data discrepancies.
- Do not set devMode=true for any API request that involves a real device or user.
  Only use it with test devices or developer accounts.
- You can create new regions, or view, edit and delete existing ones.
- By default, Leanplum collects the IDFV for iOS and the MD5 hash of the MAC address
  for Android.
- You can enable all custom events for Recency & Frequency.
- 'For each event, you can attach up to 15 parameters as follows: Up to 10 string
  parameters, Up to 5 numeric parameters.'
- 'Make all changes before saving: Applying a new or modifying an existing Recency
  & Frequency configuration can take a few hours.'
- New files with events will be added after 1 hour or around 50,000 events for JSON
  format.
- New files with events will be added after 1 hour or around 2m events for Parquet
  format.
- All events should either be de-duplicated on the client side during the ETL process
  or the analysis should be done on unique count of events.
- By default, Leanplum collects the IDFV for iOS and the MD5 hash of the MAC address
  for Android, but this can be easily changed to IDFA for iOS and GAID for Android
  with one line of code.
- According to Facebook and Twitter T&C, Appsflyer is unable to share user level data
  with any third party. As a result, all Facebook and Twitter installs are sent to
  Leanplum as organic.
- API rate limits apply to all endpoints.
- Events are sent in a JSON format when triggered.
- New files with events will be added after 1 hour or around 50,000 events (for JSON
  format).
- New files with events will be added after 1 hour or around 2m events (for Parquet
  format).
- Some events might be sent more than once due to timing of the different pipelines.
- Leanplum Campaign Events drive deeper analytics
- Leanplum customers utilize Leanplum Campaign Events they receive via the Data Feed
  for both pure CRM analytics use cases and broader product analytics use cases, where
  they cross data coming from the Leanplum Data Feed with other sources in their stacks.
- Duplicated events can be easily identified because they will have the same event
  id.
- All of the events above will be sent in the Parquet format if the parquet format
  is chosen.
- The data feed is available in both JSON and Parquet file formats.
- New files with events will be added after 1 hour or around 50,000 events (whichever
  happens first) for JSON format.
- New files with events will be added after 1 hour or around 2m events (whichever
  happens first) for Parquet format.
- User profile fields must include first_name, last_name, address, address2, city,
  state, zip, country, template_id, and api_token.
- The Mixpanel Cohorts integration allows up to 150 audiences to be connected to Leanplum.
- Users in the cohort will be updated every 15 minutes from Mixpanel.
- Please, allow up to 15 minutes for your audience to be available for targeting in
  Leanplum.
- All events will be sent in Parquet format if chosen.
- Requires creation of Inkit API key and template ID.
- Ensure to include Google Play Services for Push Services
- Pass server-side or client-side data from Segment to Leanplum without any coding
  to boost effective personalization and segmentation.
- Utilize Leanplum as a Segment Source to send engagement data to a destination of
  your choice.
- Create a role allowing access only to the API
- Marketo data synchronization with Leanplum allows targeting and segmentation
- Get started faster in Development mode
- Device SystemName is required for the integration to work
- Here are the filters available by default in Leanplum messaging
- Requires setup of connected app in api
- When Google Play installs an application it will broadcast an Intent with the com.android.vending.INSTALL_REFERRER
  action.
- Leanplum allows basic expressions everywhere.
- The email preview functionality requires user attributes 'first_name' and 'unsubscribe_token'.
- Modify your email templates to include a default value if first_name and/or unsubscribe_token
  are missing.
- Ensure that the email can properly send.
- Using Push Pre-Permissions has been shown to increase push notification opt-ins
  by as much as 182 percent.
- Use push to get users to install the newest version of your app
- Securing your Leanplum API keys
- To prevent numbers with many decimal places, pipe your results through `round` and
  `int`.
- OAuth2 with refresh token is required.
- Leanplum's email functionality references user attributes to send and preview your
  email to the right recipient.
- Typically, the user attribute is 'first_name' and 'unsubscribe_token.' If your test
  device is missing either of those fields, then the email can't be generated.
- Ensure that your profile has the required user attributes.
- Once you integrate the Leanplum SDK, in-app messaging should be ready to use.
- We also offer email services as an add-on feature.
- Uses OAuth2 for authentication
- To generate a new device ID for iOS, you must factory reset your device.
- iOS will treat this as a new device and will therefore display Push Pre-Permissions.
- Parameters and Event Values are not available in Developer activity analytics, but
  you can verify your parameters are being tracked correctly in the Debugger console.
- With the out-of-box Leanplum SDK, parameters cannot be used as a criteria to target
  users.
- Securing your Leanplum API keys is essential.
- Supports iOS 9.0 and above
- Leanplum iOS SDK 6.0.0 and above requires the CleverTap SDK and its dependencies
  to be installed.
- Use Your Development Key Only During Your Development Phase.
- There is a limit of 500 events per app in Leanplum.
- Make sure that you are testing the `forceContentUpdate` method, while the app is
  built in production mode.
- Up to 200 unique attributes can be defined per Leanplum app.
- Attribute names must be strings, and values must be strings or numbers.
- Ensure to remove development keys before submitting to App Store.
- In-app messages cannot be triggered via events sent via our REST API, events are
  required to come from the client with the SDK
- All versions of the Unity SDK supports In-App Messages on iOS and Android devices.
- Updated 14 days ago
- In order to use the `forceContentUpdate` method, you will be required to use version
  1.3.0+ of our JavaScript SDK.
- In-app messaging templates are open-source and customizable.
- Leanplum will not end the session after a user logs out and does not include any
  methods to do so.
- User attributes can carry over from session to session.
- Starting from Leanplum Android SDK 5.6.0 you can add a dialog customizer.
- Different window flags can be added.
- Triggering In-App messages based on event/state parameters and on User attribute
  changes is not supported in Unity Editor/Native.
- Setting up push notifications with Leanplum allows you to send notifications through
  the Leanplum dashboard or with the API.
- The Leanplum dashboard will reflect your new templates the next time you run your
  app and sync the templates.
- We use swizzling to collect push tokens. If your app has other SDKs installed that
  also use method swizzling it may cause conflicts.
- You can choose any combination of formats — this is just an example.
- Note that registerForRemoteNotifications method must be called when authorization
  is successful. If notifications are registered but authorization not granted, the
  user might get a push token, but will not be push enabled since the user has not
  enabled notifications.
- Starting in Android 8.0 (Oreo), notification channels must be implemented to send
  notifications.
- Custom actions are triggered by long-pressing the push notification.
- If your custom action 'Opens' the app, the custom action could be overridden by
  the main Open Action of the Push Notification.
- App Inbox does not require push certificates and can store messages for long periods
  of time.
- Uses Firebase Cloud Messaging (FCM) for push notifications.
- Notification channels must be implemented for Android 8.0 (Oreo) and above.
- App Inbox is a standalone messaging channel allowing you to send messages to users
  in your app.
- Uses OAuth2 authentication.
- Geolocation is gathered only on app start or resume, so a user's location is based
  on their most recent session.
- If you set up a message or campaign with a geofence region that has a radius smaller
  than 20km, we only include users with CELL or GPS Location accuracy.
- GPS/cell-based information is always trusted more — when available, we use the latitude/longitude
  coordinates from the device and use reverse-geocoding to determine the name of the
  Country, Region, and City.
- We also provide methods to disable automatic collection of GPS/cell-based geolocation
  (not IP), as well as a method to set user location manually, which allows you to
  truncate the lat/long to a custom number of decimal points, ultimately limiting
  the precision of geolocation and protecting user privacy.
- For React Native, depending on device type where we want to install the SDK, you
  will need to follow the instructions from iOS or Android section
- Before you turn the integration on with your specific partner, you need to confirm
  that your Leanplum integration is using the same device ID as the third-party you're
  hoping to integrate with.
- Leanplum organizes its data within sessions.
- Sessions time out after 2 hours of inactivity, or 30 minutes after being paused.
- APIs for receiving user's variables and files set in the Leanplum dashboard.
- Use secure key handling practices. Send your Keys and any other secure data in the
  request body when making post requests.
- Use secure key handling practices
- The getVars API method has a mode where when neither a userId nor deviceId are provided,
  we will return the default variable values in Leanplum
- The deleteUser actions are excluded as a billable request, allowing you to keep
  your data clean.
- Batching should first be done on a per-user basis, and then across users, with up
  to 50 users modified in a single multi request.
- OAuth2 authentication is required to access the API.
- If the user/device does not exist, the API request is skipped and a warning will
  be returned.
- This method requires your production API clientKey.
- For billing purposes, a 'User Session' is defined as a call of the API Method `start`
  or `resumeSession` that is made 30 (thirty) minutes or more after the latest call
  of the API Method `pauseSession` on the same device.
- deleteUser calls are exempt from API billing.
- Resumes data collection for a specific user, and ends a previous block on data collection.
  This will not restore any of data that was deleted by the previous block call.
- You must provide a deviceId and/or a userId.
- Resumes data collection for a specific user, and ends a previous block on data collection.
- You cannot delete the channel that is defined as default (unless it is the only
  channel). To delete the default channel, mark another channel as default first.
- This method requires your content read-only API clientKey.
- Uses OAuth2 with refresh token — requires setup of connected app in Leanplum.
- Uploads up to 16 files or 50 MB at a time to use in the File picker and File tab
  of the Leanplum dashboard.
- This method requires your data export API clientKey.
- Data is split into roughly 256 MB files, and is not necessarily ordered.
- Exports can be made in JSON or CSV format.
- Export files are automatically deleted 24 hours after export occurs.
- Data becomes available to export every 2 hours, and only for complete sessions.
- You cannot export data that has become available more than 60 days ago.
- You may only export data 24 times per day.
- Produces several csv files with specific schema for different datasets.
- An actual export will have multiple lines of these JSON-formatted objects, separated
  by a new line.
- The multi call method is limited to 50 users and/or 500 actions in a single call.
- While Leanplum is processing a successful multi call, concurrent requests for these
  users (via the SDK or API) will be queued and completed after the multi batch completes.
- The CSV export produces separate files for sessions, states, events, event parameters,
  and user attributes.
- The job ID is returned by multi.
- Each row in the export will have a JSON object with attributes representing a single
  user session.
- The `multi` call method is limited to 50 users and/or 500 actions in a single call.
- Leanplum assigns a Variant ID for each A/B test that is applicable for the user.
- clientKey is found in app settings
- Users must explicitly opt-in to data collection before tracking with Leanplum.
- To prevent data collection, do not call leanplum.start() until after user opts-in.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'INVALID_API_KEY: Check your API key and try again.'
- 'NOT_AUTHORIZED: Ensure you have the correct permissions.'
- '400 Bad Request: Check the CSV format and required fields.'
- '401 Unauthorized: Verify API key and permissions.'
- 'INVALID_CSV_FORMAT: Check your CSV file format'
- 'UNAUTHORIZED: Ensure API key is correct'
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Validate your OAuth2 credentials.'
- '403 Forbidden: Check API key permissions.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Check your API key and permissions.'
- 'INVALID_API_KEY: Check if the API key is correct'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of requests'
- '401 Unauthorized: Check your API key and token.'
- '403 Forbidden: Ensure you have the right permissions.'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: The requested resource could not be found.'
- '403 Forbidden: Ensure API key is valid and has necessary permissions.'
- '404 Not Found: Check the endpoint path.'
- '403 Forbidden: Check your API key and permissions'
- '404 Not Found: Ensure the endpoint is correct'
- '408'
- '409'
- '429'
- 500 through 599
- '408: Request Timeout'
- '409: Conflict'
- '429: Too Many Requests'
- '500: Internal Server Error'
- '501: Not Implemented'
- '502: Bad Gateway'
- '503: Service Unavailable'
- '504: Gateway Timeout'
- '401 Unauthorized: Recheck API key or token expiration'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your API keys and tokens'
- '429 Too Many Requests: Throttle your requests'
- '401 Unauthorized: Recheck API key'
- '401 Unauthorized: Ensure API key is valid.'
- '500 Internal Server Error: Try again later.'
- Unique user metrics are currently only available for some reports. Some parameters
  of your report need to be modified to view this report.
- Team cannot be deleted if it has one or more apps
- Be careful when giving Admin privileges
- 'INVALID_API_KEY: Ensure the API key is correct.'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of requests.'
- 'Dependency not found: Check your Gradle or Podfile configuration'
- 'Missing user attributes: ''first_name'' or ''unsubscribe_token'' prevents email
  generation.'
- 500 event limit and event naming limits
- '500: Event limit exceeded'
- '400: Bad request'
- '401 Unauthorized: Verify API keys and access permissions.'
- Up to 200 unique attributes can be defined per Leanplum app.
- Attribute names must be strings, and values must be strings or numbers.
- 'Notification channel not found: Ensure the channel ID is correct.'
- 'Push notification failed: Check if notification channels are set up properly.'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls'
- 'INVALID_TOKEN: Recheck OAuth token'
- response[].error.message
- 'response[].error.message: The error message for the API action, if any.'
- Verify that the response has neither warning or error objects to confirm the action
  was taken.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'warning: The warning message for the API action, if any.'
- 'error: The error message for the API action, if any.'
- '403: All calls in a batch with more than the limit will be ignored.'
- '401 Unauthorized: Ensure correct clientKey and appId.'
- '403: All calls in a batch with more than 50 users or 500 actions will be ignored.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - link branding domain
  - Email Success team
  - API Keys
  - Leanplum-Info.plist
client:
  base_url: https://www.leanplum.com
  auth:
    type: oauth2
source_metadata: null
