resources:
- name: groups
  endpoint:
    path: /orgs/{orgId}/groups
    method: GET
    data_selector: records
    params: {}
- name: create_group
  endpoint:
    path: /orgs/{orgId}/groups
    method: POST
    data_selector: records
    params: {}
- name: update_group
  endpoint:
    path: /orgs/{orgId}/groups/{groupId}
    method: PUT
    data_selector: records
    params: {}
- name: get_custom_group
  endpoint:
    path: /get_custom_group
    method: GET
    params:
      orgId: required
      groupId: required
- name: delete_custom_group
  endpoint:
    path: /delete_custom_group
    method: DELETE
    params:
      orgId: required
      groupId: required
- name: get_all_events_for_organization
  endpoint:
    path: /get_all_events
    method: GET
    params:
      orgId: required
      since: optional
      appId: optional
      version: optional
- name: get_app_configuration_file
  endpoint:
    path: /get_app_configuration_file
    method: GET
    params:
      appId: required
- name: create_release
  endpoint:
    path: /release
    method: POST
    data_selector: release
    params: {}
- name: list_releases
  endpoint:
    path: /releases
    method: GET
    data_selector: releases
    params: {}
- name: release
  endpoint:
    path: /releases
    method: GET
    data_selector: records
- name: release_step
  endpoint:
    path: /releases/{releaseId}/steps
    method: GET
    data_selector: records
- name: release
  endpoint:
    path: /releases
    method: POST
    data_selector: release
    params: {}
- name: checklist_item
  endpoint:
    path: /checklist-items
    method: POST
    data_selector: checklistItem
    params: {}
- name: update_checklist_item_status
  endpoint:
    path: /update/checklist/item/status
    method: POST
    data_selector: response
    params: {}
- name: update_checklist_item_comment
  endpoint:
    path: /update/checklist/item/comment
    method: POST
    data_selector: response
    params: {}
- name: create_approval_item
  endpoint:
    path: /create/approval/item
    method: POST
    data_selector: response
    params: {}
- name: custom_group
  endpoint:
    path: /custom/group
    method: GET
- name: events
  endpoint:
    path: /events
    method: GET
    params:
      since: date-time
      appId: string
      version: string
- name: app_configuration
  endpoint:
    path: /app/configuration
    method: GET
- name: create_release
  endpoint:
    path: /create_release
    method: POST
    data_selector: release
    params: {}
- name: list_releases
  endpoint:
    path: /list_releases
    method: GET
    data_selector: releases
    params:
      limit: 20
      offset: 0
- name: release
  endpoint:
    path: /releases
    method: GET
    data_selector: releases
- name: release_step
  endpoint:
    path: /releases/{releaseId}/steps
    method: GET
    data_selector: steps
- name: create_bucket
  endpoint:
    path: /buckets
    method: POST
    data_selector: bucket
    params: {}
- name: list_buckets
  endpoint:
    path: /buckets
    method: GET
    data_selector: buckets
    params: {}
- name: get_bucket_details
  endpoint:
    path: /buckets/{bucketId}
    method: GET
    data_selector: bucket
    params: {}
- name: update_bucket
  endpoint:
    path: /buckets/{bucketId}
    method: PUT
    data_selector: bucket
    params: {}
- name: get_bucket_builds
  endpoint:
    path: /buckets/{bucketId}/builds
    method: GET
    data_selector: builds
    params: {}
- name: get_bucket_build_details
  endpoint:
    path: /buckets/{bucketId}/builds/{buildDistroBuildId}
    method: GET
    data_selector: buildDetail
    params: {}
- name: update_build_details
  endpoint:
    path: /buckets/{bucketId}/builds/{buildDistroBuildId}
    method: PUT
    data_selector: build
    params: {}
- name: release
  endpoint:
    path: /releases
    method: POST
    data_selector: records
- name: checklist_item
  endpoint:
    path: /checklist_items
    method: POST
    data_selector: records
- name: release.kickedOff
  endpoint:
    path: /v1/app/{appId}/bucket/{bucketId}/build
    method: POST
    data_selector: event
    params: {}
- name: release.submitted
  endpoint:
    path: /v1/app/{appId}/bucket/{bucketId}/build
    method: POST
    data_selector: event
    params: {}
- name: update_checklist_item_status
  endpoint:
    path: /update_checklist_item_status
    method: POST
    data_selector: status
    params: {}
- name: update_checklist_item_comment
  endpoint:
    path: /update_checklist_item_comment
    method: POST
    data_selector: comment
    params: {}
- name: create_approval_item
  endpoint:
    path: /create_approval_item
    method: POST
    data_selector: approval_item
    params: {}
- name: release
  endpoint:
    path: /release.targetDateUpdated
    method: POST
    data_selector: release
    params: {}
- name: release.released
  endpoint:
    path: /release.released
    method: POST
    data_selector: release
    params: {}
- name: release.created
  endpoint:
    path: /release.created
    method: POST
    data_selector: release
    params: {}
- name: release.kickoffReminder
  endpoint:
    path: /release/kickoffReminder
    method: POST
    data_selector: records
- name: release.pilotChanged
  endpoint:
    path: /release/pilotChanged
    method: POST
    data_selector: records
- name: release.regressionStatusUpdated
  endpoint:
    path: /release/regressionStatusUpdated
    method: POST
    data_selector: records
- name: create_bucket
  endpoint:
    path: /buckets
    method: POST
    data_selector: bucket
    params: {}
- name: list_buckets
  endpoint:
    path: /buckets
    method: GET
    data_selector: buckets
    params: {}
- name: get_bucket_details
  endpoint:
    path: /buckets/{bucketId}
    method: GET
    data_selector: bucket
    params: {}
- name: update_bucket
  endpoint:
    path: /buckets/{bucketId}
    method: PUT
    data_selector: bucket
    params: {}
- name: get_bucket_builds
  endpoint:
    path: /buckets/{bucketId}/builds
    method: GET
    data_selector: builds
    params:
      limit: 20
      offset: 0
- name: get_bucket_build_details
  endpoint:
    path: /buckets/{bucketId}/builds/{buildDistroBuildId}
    method: GET
    data_selector: build
    params: {}
- name: update_build_details
  endpoint:
    path: /buckets/{bucketId}/builds/{buildDistroBuildId}
    method: PUT
    data_selector: build
    params: {}
- name: release_steps_ready_to_submit
  endpoint:
    path: /release/stepsReadyToSubmit
    method: POST
    data_selector: release
    params: {}
- name: release_reminder
  endpoint:
    path: /release/releaseReminder
    method: POST
    data_selector: release
    params: {}
- name: submit_reminder
  endpoint:
    path: /release/submitReminder
    method: POST
    data_selector: release
    params: {}
- name: release.kickedOff
  endpoint:
    path: /v1/app/{appId}/release.kickedOff
    method: POST
    data_selector: eventType
- name: release.submitted
  endpoint:
    path: /v1/app/{appId}/release.submitted
    method: POST
    data_selector: eventType
- name: release_steps_ready_to_release
  endpoint:
    path: /release/stepsReadyToRelease
    method: POST
    data_selector: records
- name: release_step_status_changed
  endpoint:
    path: /releaseStep/statusChanged
    method: POST
    data_selector: records
- name: app_store_version_status_updated
  endpoint:
    path: /appStoreVersion/statusUpdated
    method: POST
    data_selector: records
- name: release
  endpoint:
    path: /release.released
    method: POST
    data_selector: release
- name: release_created
  endpoint:
    path: /release.created
    method: POST
    data_selector: release
- name: release_target_date_updated
  endpoint:
    path: /release.targetDateUpdated
    method: POST
    data_selector: release
- name: appStoreVersion.phasedReleaseUpdated
  endpoint:
    path: /webhooks/appStoreVersion.phasedReleaseUpdated
    method: POST
    data_selector: payload
- name: checklistItem.statusChanged
  endpoint:
    path: /webhooks/checklistItem.statusChanged
    method: POST
    data_selector: payload
- name: buildDistro.newBuildAvailable
  endpoint:
    path: /webhooks/buildDistro.newBuildAvailable
    method: POST
    data_selector: payload
- name: release.kickoffReminder
  endpoint:
    path: /release/kickoffReminder
    method: POST
    data_selector: records
- name: release.pilotChanged
  endpoint:
    path: /release/pilotChanged
    method: POST
    data_selector: records
- name: release.regressionStatusUpdated
  endpoint:
    path: /release/regressionStatusUpdated
    method: POST
    data_selector: records
- name: buildDistro.buildArtifactAvailable
  endpoint:
    path: /buildDistro/buildArtifactAvailable
    method: POST
    data_selector: data
- name: ciBuild.statusChanged
  endpoint:
    path: /ciBuild/statusChanged
    method: POST
    data_selector: data
- name: ciBuild.appStoreBuildAssociated
  endpoint:
    path: /ciBuild/appStoreBuildAssociated
    method: POST
    data_selector: data
- name: release
  endpoint:
    path: /release/submitReminder
    method: POST
    data_selector: release
- name: release
  endpoint:
    path: /release/releaseReminder
    method: POST
    data_selector: release
- name: release
  endpoint:
    path: /release/stepsReadyToSubmit
    method: POST
    data_selector: release
- name: release_steps_ready_to_release
  endpoint:
    path: /release.stepsReadyToRelease
    method: POST
    data_selector: records
- name: release_step_status_changed
  endpoint:
    path: /releaseStep.statusChanged
    method: POST
    data_selector: records
- name: app_store_version_status_updated
  endpoint:
    path: /appStoreVersion.statusUpdated
    method: POST
    data_selector: records
- name: webhook_payload
  endpoint:
    path: /webhook/payload
    method: POST
    data_selector: records
- name: webhook_release_payload
  endpoint:
    path: /webhook/release
    method: POST
    data_selector: records
- name: webhook_checklist_item_payload
  endpoint:
    path: /webhook/checklist_item
    method: POST
    data_selector: records
- name: build
  endpoint:
    path: /buildDistro.newBuildAvailable
    method: POST
    data_selector: build
- name: appStoreVersion
  endpoint:
    path: /appStoreVersion.phasedReleaseUpdated
    method: POST
    data_selector: release
- name: checklistItem
  endpoint:
    path: /checklistItem.statusChanged
    method: POST
    data_selector: checklistItem
- name: appStoreVersionData
  endpoint:
    path: /webhook/appStoreVersionData
    method: GET
    data_selector: appStoreVersionData
    params: {}
- name: releaseSteps
  endpoint:
    path: /webhook/releaseSteps
    method: GET
    data_selector: releaseSteps
    params: {}
- name: CIBuild
  endpoint:
    path: /webhook/CIBuild
    method: GET
    data_selector: build
    params: {}
- name: buildDistro.buildArtifactAvailable
  endpoint:
    path: /buildDistro/buildArtifactAvailable
    method: POST
    data_selector: build
- name: ciBuild.statusChanged
  endpoint:
    path: /ciBuild/statusChanged
    method: POST
    data_selector: build
- name: ciBuild.appStoreBuildAssociated
  endpoint:
    path: /ciBuild/appStoreBuildAssociated
    method: POST
    data_selector: build
- name: BuildDistroBuild
  endpoint:
    path: /webhook/BuildDistroBuildPayload
    method: POST
    data_selector: build
- name: AppEntity
  endpoint:
    path: /app
    method: GET
    data_selector: id
- name: ReleaseEntity
  endpoint:
    path: /release
    method: GET
    data_selector: id
- name: GroupEntity
  endpoint:
    path: /group
    method: GET
    data_selector: id
- name: webhook_payload
  endpoint:
    path: /webhook/payload
    method: POST
    data_selector: event
    params: {}
- name: webhook_release_payload
  endpoint:
    path: /webhook/release_payload
    method: POST
    data_selector: release
    params: {}
- name: webhook_checklist_item_payload
  endpoint:
    path: /webhook/checklist_item_payload
    method: POST
    data_selector: checklistItem
    params: {}
- name: appStoreVersionData
  endpoint:
    path: /webhook/appStoreVersionData
    method: POST
    data_selector: appStoreVersionData
    params: {}
- name: releaseSteps
  endpoint:
    path: /webhook/releaseSteps
    method: POST
    data_selector: releaseSteps
    params: {}
- name: CIBuild
  endpoint:
    path: /webhook/CIBuild
    method: POST
    data_selector: build
    params: {}
- name: build
  endpoint:
    path: /WebhookBuildDistroBuildPayload
    method: POST
    data_selector: build
- name: app
  endpoint:
    path: /AppEntity
    method: GET
    data_selector: app
- name: release
  endpoint:
    path: /ReleaseEntity
    method: GET
    data_selector: release
- name: group
  endpoint:
    path: /GroupEntity
    method: GET
    data_selector: group
- name: GoogleStagedRollout
  endpoint:
    path: /google/stagedRollout
    method: POST
    data_selector: state
    params:
      state: string
      userFraction: 1
- name: ApplePhasedRelease
  endpoint:
    path: /apple/phasedRelease
    method: POST
    data_selector: state
    params:
      state: string
      dayNumber: 1
      startDate: '2019-08-24T14:15:22Z'
- name: ChecklistItemStatus
  endpoint:
    path: /checklist/item/status
    method: POST
    data_selector: status
    params:
      status: approved
      createdBy: string
      createdAt: '2022-03-02T01:15:00Z'
- name: CIBuildRequestEntity
  endpoint:
    path: /ci/build/request
    method: POST
    data_selector: buildIdentifier
    params:
      buildIdentifier: '123'
      startedAt: '2022-03-02T01:15:00Z'
      finishedAt: '2022-03-02T01:15:00Z'
      status: inProgress
      commitHash: e7a5fcf0f92ff69d59333ed0e40194f3c96791f6
      branch: main
      integrationId: appcenter-ci
- name: BuildDistroBuildEntity
  endpoint:
    path: /build/distro/build
    method: POST
    data_selector: buildId
    params:
      buildId: '12345'
      status: active
      bucketName: CIs
      bucketId: abc123
      createdAt: '2022-03-02T01:15:00Z'
      updatedAt: '2022-03-02T01:15:00Z'
      downloadURL: https://api.runway.team/v1/app/my-app/bucket/my-bucket/build/my-build/download
- name: WorkItemCodeCommit
  endpoint:
    path: /workitem/codecommit
    method: GET
    data_selector: records
- name: WorkItemCodePullRequest
  endpoint:
    path: /workitem/codepullrequest
    method: GET
    data_selector: records
- name: BucketMember
  endpoint:
    path: /bucket/member
    method: GET
    data_selector: records
- name: BuildDistroBuildTester
  endpoint:
    path: /builddistro/buildtester
    method: GET
    data_selector: records
- name: NotificationEntity
  endpoint:
    path: /notification/entity
    method: GET
    data_selector: records
- name: AutomationEntity
  endpoint:
    path: /automation/entity
    method: GET
    data_selector: records
- name: BucketRule
  endpoint:
    path: /bucket/rule
    method: GET
    data_selector: records
- name: BuildDistroBuildStatus
  endpoint:
    path: /builddistro/buildstatus
    method: GET
    data_selector: records
- name: GoogleStagedRollout
  endpoint:
    path: /google/staged/rollout
    method: POST
    data_selector: state
- name: ApplePhasedRelease
  endpoint:
    path: /apple/phased/release
    method: POST
    data_selector: state
- name: ChecklistItemPlacement
  endpoint:
    path: /checklist/item/placement
    method: GET
    data_selector: stepChecklist
- name: UserGroup
  endpoint:
    path: /user/group
    method: GET
    data_selector: pilot
- name: ChecklistItemStatus
  endpoint:
    path: /checklist/item/status
    method: GET
    data_selector: approved
- name: ReleaseType
  endpoint:
    path: /release/type
    method: GET
    data_selector: major
- name: IntegrationType
  endpoint:
    path: /integration/type
    method: GET
    data_selector: amazon
- name: CreateEditReleaseType
  endpoint:
    path: /release/type/edit
    method: POST
    data_selector: release
- name: UserAction
  endpoint:
    path: /user/action
    method: POST
    data_selector: AddRemoveEditIntegration
- name: ReleaseStatus
  endpoint:
    path: /release/status
    method: GET
    data_selector: active
- name: AppPlatform
  endpoint:
    path: /app/platform
    method: GET
    data_selector: ios
- name: WorkItemCodeCommit
  endpoint:
    path: /WorkItemCodeCommit
    method: GET
    data_selector: records
- name: WorkItemCodePullRequest
  endpoint:
    path: /WorkItemCodePullRequest
    method: GET
    data_selector: records
- name: BucketMember
  endpoint:
    path: /BucketMember
    method: GET
    data_selector: records
- name: BuildDistroBuildTester
  endpoint:
    path: /BuildDistroBuildTester
    method: GET
    data_selector: records
- name: NotificationEntity
  endpoint:
    path: /NotificationEntity
    method: GET
    data_selector: records
- name: AutomationEntity
  endpoint:
    path: /AutomationEntity
    method: GET
    data_selector: records
- name: BucketRule
  endpoint:
    path: /BucketRule
    method: GET
    data_selector: records
- name: BuildDistroBuildStatus
  endpoint:
    path: /BuildDistroBuildStatus
    method: GET
    data_selector: records
- name: app_config
  endpoint:
    path: /app/{appId}/app/config
    method: GET
    data_selector: application/yaml
- name: list_buckets
  endpoint:
    path: /app/{appId}/bucket
    method: GET
    data_selector: buckets
- name: get_bucket
  endpoint:
    path: /app/{appId}/bucket/{bucketId}
    method: GET
    data_selector: bucket
- name: app_config
  endpoint:
    path: /app/{appId}/app/config
    method: GET
    data_selector: application/yaml
    params: {}
- name: create_app
  endpoint:
    path: /app
    method: POST
    data_selector: createAppResponse
    params: {}
- name: create_bucket
  endpoint:
    path: /app/{appId}/bucket
    method: POST
    data_selector: buildDistroBucketResponse
    params: {}
- name: list_buckets
  endpoint:
    path: /app/{appId}/bucket
    method: GET
    data_selector: listBuildDistroBucketsResponse
    params: {}
- name: get_bucket
  endpoint:
    path: /app/{appId}/bucket/{bucketId}
    method: GET
    data_selector: buildDistroBucketResponse
    params: {}
- name: update_bucket
  endpoint:
    path: /app/{appId}/bucket/{bucketId}
    method: PATCH
    data_selector: buildDistroBucketResponse
    params: {}
- name: get_bucket_builds
  endpoint:
    path: /app/{appId}/bucket/{bucketId}/builds
    method: GET
    data_selector: buildDistroBucketBuildsResponse
    params: {}
- name: uploadBuildAdditionalFile
  endpoint:
    path: /app/{appId}/bucket/{bucketId}/build/{buildId}/additionalFiles
    method: POST
- name: downloadBucketBuildAdditionalFile
  endpoint:
    path: /app/{appId}/bucket/{bucketId}/build/{buildDistroBuildId}/additionalFiles/{fileName}
    method: GET
- name: listReleases
  endpoint:
    path: /app/{appId}/release
    method: GET
- name: createRelease
  endpoint:
    path: /app/{appId}/release
    method: POST
- name: listGroups
  endpoint:
    path: /org/{orgId}/group
    method: GET
- name: createGroup
  endpoint:
    path: /org/{orgId}/group
    method: POST
- name: getGroupById
  endpoint:
    path: /org/{orgId}/group/{groupId}
    method: GET
- name: updateGroupById
  endpoint:
    path: /org/{orgId}/group/{groupId}
    method: PUT
- name: deleteGroupById
  endpoint:
    path: /org/{orgId}/group/{groupId}
    method: DELETE
- name: getOrgEvents
  endpoint:
    path: /org/{orgId}/events
    method: GET
- name: createAppFromConfig
  endpoint:
    path: /org/{orgId}/app/config
    method: POST
- name: createApproval
  endpoint:
    path: /app/{appId}/approval
    method: POST
- name: createChecklistItem
  endpoint:
    path: /app/{appId}/checklistItem
    method: POST
- name: ingestCustomOBAAEvents
  endpoint:
    path: /app/{appId}/integration/{integrationId}/events
    method: POST
- name: uploadBuild
  endpoint:
    path: /app/{appId}/integration/{integrationId}/build
    method: POST
- name: uploadBuildAdditionalFile
  endpoint:
    path: /app/{appId}/bucket/{bucketId}/build/{buildId}/additionalFiles
    method: POST
- name: downloadBucketBuildAdditionalFile
  endpoint:
    path: /app/{appId}/bucket/{bucketId}/build/{buildDistroBuildId}/additionalFiles/{fileName}
    method: GET
- name: listReleases
  endpoint:
    path: /app/{appId}/release
    method: GET
- name: createRelease
  endpoint:
    path: /app/{appId}/release
    method: POST
- name: listGroups
  endpoint:
    path: /org/{orgId}/group
    method: GET
- name: createGroup
  endpoint:
    path: /org/{orgId}/group
    method: POST
- name: getOrgEvents
  endpoint:
    path: /org/{orgId}/events
    method: GET
- name: createAppFromConfig
  endpoint:
    path: /org/{orgId}/app/config
    method: POST
- name: createApproval
  endpoint:
    path: /app/{appId}/approval
    method: POST
- name: createChecklistItem
  endpoint:
    path: /app/{appId}/checklistItem
    method: POST
- name: ingestCustomOBAAEvents
  endpoint:
    path: /app/{appId}/integration/{integrationId}/events
    method: POST
- name: uploadBuild
  endpoint:
    path: /app/{appId}/integration/{integrationId}/build
    method: POST
- name: uploadCustomCIBuild
  endpoint:
    path: /app/{appId}/integration/{integrationId}/build
    method: POST
- name: getReleaseById
  endpoint:
    path: /app/{appId}/release/{releaseId}
    method: GET
- name: updateReleaseById
  endpoint:
    path: /app/{appId}/release/{releaseId}
    method: PUT
- name: deleteReleaseById
  endpoint:
    path: /app/{appId}/release/{releaseId}
    method: DELETE
- name: getReleaseStepById
  endpoint:
    path: /app/{appId}/release/{releaseId}/step/{stepId}
    method: GET
- name: skipRelease
  endpoint:
    path: /app/{appId}/release/{releaseId}/skip
    method: PUT
- name: unskipRelease
  endpoint:
    path: /app/{appId}/release/{releaseId}/unskip
    method: PUT
- name: submitRelease
  endpoint:
    path: /app/{appId}/release/{releaseId}/submit
    method: PUT
- name: updateRegressionStatus
  endpoint:
    path: /app/{appId}/release/{releaseId}/regressionStatus
    method: PUT
- name: updateReleaseStepApproval
  endpoint:
    path: /app/{appId}/release/{releaseId}/approval/{stepType}
    method: PUT
- name: updateChecklistItemStatus
  endpoint:
    path: /app/{appId}/release/{releaseId}/checklistItem/{checklistItemId}/status
    method: PUT
- name: updateChecklistItemComment
  endpoint:
    path: /app/{appId}/release/{releaseId}/checklistItem/{checklistItemId}/comment
    method: PUT
- name: uploadCustomCIBuild
  endpoint:
    path: /app/{appId}/integration/{integrationId}/build
    method: POST
    data_selector: ciBuild
    params: {}
- name: getReleaseById
  endpoint:
    path: /app/{appId}/release/{releaseId}
    method: GET
    data_selector: release
    params: {}
- name: updateReleaseById
  endpoint:
    path: /app/{appId}/release/{releaseId}
    method: PUT
    data_selector: release
    params: {}
- name: deleteReleaseById
  endpoint:
    path: /app/{appId}/release/{releaseId}
    method: DELETE
    data_selector: delete response
    params: {}
- name: getReleaseStepById
  endpoint:
    path: /app/{appId}/release/{releaseId}/step/{stepId}
    method: GET
    data_selector: releaseStep
    params: {}
- name: skipRelease
  endpoint:
    path: /app/{appId}/release/{releaseId}/skip
    method: PUT
    data_selector: release
    params: {}
- name: unskipRelease
  endpoint:
    path: /app/{appId}/release/{releaseId}/unskip
    method: PUT
    data_selector: release
    params: {}
- name: submitRelease
  endpoint:
    path: /app/{appId}/release/{releaseId}/submit
    method: PUT
    data_selector: submit response
    params: {}
- name: updateRegressionStatus
  endpoint:
    path: /app/{appId}/release/{releaseId}/regressionStatus
    method: PUT
    data_selector: regression status
    params: {}
- name: updateReleaseStepApproval
  endpoint:
    path: /app/{appId}/release/{releaseId}/approval/{stepType}
    method: PUT
    data_selector: approval response
    params: {}
- name: updateChecklistItemStatus
  endpoint:
    path: /app/{appId}/release/{releaseId}/checklistItem/{checklistItemId}/status
    method: PUT
    data_selector: checklist item status
    params: {}
- name: updateChecklistItemComment
  endpoint:
    path: /app/{appId}/release/{releaseId}/checklistItem/{checklistItemId}/comment
    method: PUT
    data_selector: checklist item comment
    params: {}
- name: release.submitted
  endpoint:
    path: /release.submitted
    method: POST
    data_selector: '200'
    params: {}
- name: release.released
  endpoint:
    path: /release.released
    method: POST
    data_selector: '200'
    params: {}
- name: release.created
  endpoint:
    path: /release.created
    method: POST
    data_selector: '200'
    params: {}
- name: release.targetDateUpdated
  endpoint:
    path: /release.targetDateUpdated
    method: POST
    data_selector: '200'
    params: {}
- name: release.pilotChanged
  endpoint:
    path: /release.pilotChanged
    method: POST
    data_selector: '200'
    params: {}
- name: release.regressionStatusUpdated
  endpoint:
    path: /release.regressionStatusUpdated
    method: POST
    data_selector: '200'
    params: {}
- name: release.kickoffReminder
  endpoint:
    path: /release.kickoffReminder
    method: POST
    data_selector: '200'
    params: {}
- name: release.submitReminder
  endpoint:
    path: /release.submitReminder
    method: POST
    data_selector: '200'
    params: {}
- name: release.releaseReminder
  endpoint:
    path: /release.releaseReminder
    method: POST
    data_selector: '200'
    params: {}
- name: release.stepsReadyToSubmit
  endpoint:
    path: /release.stepsReadyToSubmit
    method: POST
    data_selector: '200'
    params: {}
- name: release.stepsReadyToRelease
  endpoint:
    path: /release.stepsReadyToRelease
    method: POST
    data_selector: '200'
    params: {}
- name: releaseStep.statusChanged
  endpoint:
    path: /releaseStep.statusChanged
    method: POST
    data_selector: '200'
    params: {}
- name: appStoreVersion.statusUpdated
  endpoint:
    path: /appStoreVersion.statusUpdated
    method: POST
    data_selector: '200'
    params: {}
- name: appStoreVersion.phasedReleaseUpdated
  endpoint:
    path: /appStoreVersion.phasedReleaseUpdated
    method: POST
    data_selector: '200'
    params: {}
- name: EventType
- name: CIBuildEntity
- name: CIBuildRequestEntity
- name: CIBuildWorkflowData
- name: BuildDistroBuildEntity
- name: BuildDistroAdditionalArtifact
- name: BuildDistroBucketEntity
- name: BucketMember
- name: BuildDistroBuildTester
- name: WorkItem
- name: WorkItemTicket
- name: WorkItemCodeCommit
- name: WorkItemCodePullRequest
- name: CodeStatus
- name: CodeType
- name: PullRequestStatus
- name: BucketRule
- name: BuildDistroBuildStatus
- name: BuildDistroBuildUploadRequestFormData
- name: BuildDistroBuildAdditionalFileUploadRequestFormData
- name: OrgEventsEntity
- name: IntegrationType
- name: buildDistro.newBuildAvailable
  endpoint:
    path: buildDistro.newBuildAvailable
    method: POST
    data_selector: schema
    params: {}
- name: buildDistro.buildArtifactAvailable
  endpoint:
    path: buildDistro.buildArtifactAvailable
    method: POST
    data_selector: schema
    params: {}
- name: ciBuild.statusChanged
  endpoint:
    path: ciBuild.statusChanged
    method: POST
    data_selector: schema
    params: {}
- name: ciBuild.appStoreBuildAssociated
  endpoint:
    path: ciBuild.appStoreBuildAssociated
    method: POST
    data_selector: schema
    params: {}
- name: build_distro_build
  endpoint:
    path: /bucket/{bucketId}/build/{buildId}
    method: GET
    data_selector: build
    params: {}
- name: build_distro_bucket
  endpoint:
    path: /bucket/{bucketId}
    method: GET
    data_selector: bucket
    params: {}
- name: WorkItemCodeCommit
  endpoint:
    path: /workitemcode/commit
    method: GET
- name: WorkItemCodePullRequest
  endpoint:
    path: /workitemcode/pullrequest
    method: GET
- name: release.submitted
  endpoint:
    path: /release.submitted
    method: POST
    data_selector: '200'
    params: {}
- name: release.released
  endpoint:
    path: /release.released
    method: POST
    data_selector: '200'
    params: {}
- name: release.created
  endpoint:
    path: /release.created
    method: POST
    data_selector: '200'
    params: {}
- name: release.targetDateUpdated
  endpoint:
    path: /release.targetDateUpdated
    method: POST
    data_selector: '200'
    params: {}
- name: release.pilotChanged
  endpoint:
    path: /release.pilotChanged
    method: POST
    data_selector: '200'
    params: {}
- name: release.regressionStatusUpdated
  endpoint:
    path: /release.regressionStatusUpdated
    method: POST
    data_selector: '200'
    params: {}
- name: release.kickoffReminder
  endpoint:
    path: /release.kickoffReminder
    method: POST
    data_selector: '200'
    params: {}
- name: release.submitReminder
  endpoint:
    path: /release.submitReminder
    method: POST
    data_selector: '200'
    params: {}
- name: release.releaseReminder
  endpoint:
    path: /release.releaseReminder
    method: POST
    data_selector: '200'
    params: {}
- name: release.stepsReadyToSubmit
  endpoint:
    path: /release.stepsReadyToSubmit
    method: POST
    data_selector: '200'
    params: {}
- name: release.stepsReadyToRelease
  endpoint:
    path: /release.stepsReadyToRelease
    method: POST
    data_selector: '200'
    params: {}
- name: releaseStep.statusChanged
  endpoint:
    path: /releaseStep.statusChanged
    method: POST
    data_selector: '200'
    params: {}
- name: appStoreVersion.statusUpdated
  endpoint:
    path: /appStoreVersion.statusUpdated
    method: POST
    data_selector: '200'
    params: {}
- name: appStoreVersion.phasedReleaseUpdated
  endpoint:
    path: /appStoreVersion.phasedReleaseUpdated
    method: POST
    data_selector: '200'
    params: {}
- name: buildDistro.newBuildAvailable
  endpoint:
    path: /buildDistro/newBuildAvailable
    method: POST
    data_selector: '200'
    params: {}
- name: buildDistro.buildArtifactAvailable
  endpoint:
    path: /buildDistro/buildArtifactAvailable
    method: POST
    data_selector: '200'
    params: {}
- name: ciBuild.statusChanged
  endpoint:
    path: /ciBuild/statusChanged
    method: POST
    data_selector: '200'
    params: {}
- name: ciBuild.appStoreBuildAssociated
  endpoint:
    path: /ciBuild/appStoreBuildAssociated
    method: POST
    data_selector: '200'
    params: {}
- name: createApp
  endpoint:
    path: /apps
    method: POST
    data_selector: createAppResponse
- name: updateApp
  endpoint:
    path: /apps/{appId}
    method: PUT
    data_selector: updateAppResponse
- name: getApp
  endpoint:
    path: /apps/{appId}
    method: GET
    data_selector: getAppResponse
- name: buildDistroBuild
  endpoint:
    path: /builds/{buildDistroBuildId}
    method: GET
    data_selector: buildDistroBuildResponse
- name: buildDistroBuildDownload
  endpoint:
    path: /builds/{buildDistroBuildId}/download
    method: GET
    data_selector: buildDistroBuildDownloadResponse
- name: buildDistroBuildAdditionalFileDownload
  endpoint:
    path: /builds/{buildDistroBuildId}/additional-file/{fileName}
    method: GET
    data_selector: buildDistroBuildAdditionalFileDownloadResponse
- name: buildDistroBucketBuilds
  endpoint:
    path: /buckets/{bucketId}/builds
    method: GET
    data_selector: buildDistroBucketBuildsResponse
- name: buildDistroBucket
  endpoint:
    path: /buckets/{bucketId}
    method: GET
    data_selector: buildDistroBucketResponse
- name: listBuildDistroBuckets
  endpoint:
    path: /buckets
    method: GET
    data_selector: listBuildDistroBucketsResponse
- name: build_distro_build
  endpoint:
    path: /v1/app/my-app/bucket/my-bucket/build/my-build
    method: GET
    data_selector: builds
    params: {}
- name: build_distro_bucket
  endpoint:
    path: /v1/app/my-app/bucket
    method: GET
    data_selector: buckets
    params: {}
- name: commit
  endpoint:
    path: /commits
    method: GET
    data_selector: commits
- name: pull_request
  endpoint:
    path: /pull_requests
    method: GET
    data_selector: pull_requests
- name: createApp
  endpoint:
    path: /apps
    method: POST
    data_selector: data
    params: {}
- name: updateApp
  endpoint:
    path: /apps/{appId}
    method: PUT
    data_selector: data
    params: {}
- name: getApp
  endpoint:
    path: /apps/{appId}
    method: GET
    data_selector: data
    params: {}
- name: buildDistroBuild
  endpoint:
    path: /builds/{buildDistroBuildId}
    method: GET
    data_selector: data
    params: {}
- name: buildDistroBucket
  endpoint:
    path: /buckets/{bucketId}
    method: GET
    data_selector: data
    params: {}
notes:
- Requests to the API will be limited to 5 requests per second, 8000 requests per
  day.
- API keys are created from your organization's dashboard.
- The file must be included in a 'file' field as form data.
- Payload should be in application/json format.
- Requires proper configuration for OAuth2
- Check for API rate limits on requests
- Requests to the download URL must be authenticated with a Runway API key.
- Uses OAuth2 with refresh token — requires setup of connected app in Runway
errors:
- '404: Resource not found'
- '404: Data not found'
- '404: Not Found'
- '400: Bad Request'
- '404 Not Found: Check the bucket ID or build ID'
- '403 Forbidden: Ensure proper permissions are set for the API key'
- Resource not found response
- Bad request response
- '401 Unauthorized: Check API key validity'
- '404 Not Found: Resource does not exist'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'RESOURCE_NOT_FOUND: The resource you are trying to access does not exist.'
- 'BAD_REQUEST: The request could not be understood by the server due to malformed
  syntax.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.runway.team/v1
  auth:
    type: apikey
    location: header
    header_name: X-API-Key
source_metadata: null
