resources:
- name: energy_carriers
  endpoint:
    path: /energy/carriers
    method: GET
    data_selector: carriers
- name: user_specific_fuel_consumption
  endpoint:
    path: /user-specific/fuel-consumption
    method: GET
    data_selector: fuelConsumption
- name: total_emission_factor
  endpoint:
    path: /total/emission-factor
    method: GET
    data_selector: emissionFactor
- name: operational_fuel_consumption
  endpoint:
    path: /operational/fuel-consumption
    method: GET
    data_selector: operationalConsumption
- name: total_emission_reduction_factor
  endpoint:
    path: /total/emission-reduction
    method: GET
    data_selector: emissionReduction
- name: carriage_description
  endpoint:
    path: /carriage
    method: GET
    data_selector: carriage
- name: sea_vessel_types
  endpoint:
    path: /sea/vessel/types
    method: GET
    data_selector: vesselTypes
- name: sea_vessel_class
  endpoint:
    path: /sea/vessel/class
    method: GET
    data_selector: vesselClasses
- name: ro_ro_vessel_class
  endpoint:
    path: /ro_ro/vessel/class
    method: GET
    data_selector: roRoVesselClasses
- name: ro_ro_vehicle_load_factor
  endpoint:
    path: /ro_ro/vehicle/load_factor
    method: GET
    data_selector: loadFactors
- name: air_transport
  endpoint:
    path: /api/air_transport
    method: POST
    data_selector: transportChainElements
    params: {}
- name: sea_transport
  endpoint:
    path: /api/sea_transport
    method: POST
    data_selector: transportChainElements
    params: {}
- name: transport
  endpoint:
    path: /transport
    method: GET
    data_selector: transportChainElements
    params: {}
- name: airplane
  endpoint:
    path: /transport/mode/airplane
    method: GET
    data_selector: airplanes
    params: {}
- name: Airplane
  endpoint:
    path: /airplanes
    method: GET
    data_selector: aircraft
    params: {}
- name: logistic_hub
  endpoint:
    path: /logistic_hubs
    method: POST
    data_selector: transportChainElements
    params: {}
- name: primary_data_settings
  endpoint:
    path: /primary_data_settings
    method: POST
    data_selector: transportChainElements
    params: {}
- name: transportChainElements
  endpoint:
    path: /transportChainElements
    method: POST
    data_selector: transportChainElements
- name: transportChainElements
  endpoint:
    path: /cargo/transportChainElements
    method: POST
    data_selector: transportChainElements
- name: cargo
  endpoint:
    path: /cargo
    method: POST
    data_selector: cargo
    params: {}
- name: accounting
  endpoint:
    path: /accounting
    method: POST
    data_selector: accounting
    params: {}
- name: transportChainElements
  endpoint:
    path: /transportChainElements
    method: POST
    data_selector: transportChainElements
    params: {}
- name: Hybrid Aircraft
  endpoint:
    path: /api/hybrid-aircraft
    method: GET
    data_selector: aircraft
- name: energy_carriers
  endpoint:
    path: /energy/carriers
    method: GET
    data_selector: energyTypes
    params: {}
- name: user_specific_factors
  endpoint:
    path: /user/specific/factors
    method: GET
    data_selector: userFactors
    params: {}
- name: emission_factors
  endpoint:
    path: /emission/factors
    method: GET
    data_selector: emissionFactors
    params: {}
- name: DHC-8-200
  endpoint:
    path: /DHC-8-200
    method: GET
- name: DHC-8-300
  endpoint:
    path: /DHC-8-300
    method: GET
- name: DHC-8-400
  endpoint:
    path: /DHC-8-400
    method: GET
- name: DHC-7
  endpoint:
    path: /DHC-7
    method: GET
- name: DHC-8
  endpoint:
    path: /DHC-8
    method: GET
- name: DHC-2
  endpoint:
    path: /DHC-2
    method: GET
- name: DHC-4
  endpoint:
    path: /DHC-4
    method: GET
- name: DHC-3
  endpoint:
    path: /DHC-3
    method: GET
- name: DHC-6
  endpoint:
    path: /DHC-6
    method: GET
- name: Embraer 170
  endpoint:
    path: /Embraer-170
    method: GET
- name: Embraer 175
  endpoint:
    path: /Embraer-175
    method: GET
- name: Embraer 190
  endpoint:
    path: /Embraer-190
    method: GET
- name: Fokker 27
  endpoint:
    path: /Fokker-27
    method: GET
- name: Boeing MD-11
  endpoint:
    path: /Boeing-MD-11
    method: GET
- name: logistic_hub
  endpoint:
    path: /logistic_hubs
    method: POST
    data_selector: transportChainElements
    params: {}
- name: primary_data_settings
  endpoint:
    path: /primary_data_settings
    method: POST
    data_selector: transportChainElements
    params: {}
- name: settings
  endpoint:
    path: /settings
    method: POST
    data_selector: settings
    params: {}
- name: emission_classes
  endpoint:
    path: /emission_classes
    method: GET
    data_selector: records
- name: vehicle_empty_weight
  endpoint:
    path: /vehicle_empty_weight
    method: GET
    data_selector: records
- name: truck_body_type
  endpoint:
    path: /truck_body_type
    method: GET
    data_selector: records
- name: ferry_routing
  endpoint:
    path: /ferry_routing
    method: GET
    data_selector: records
- name: fuel_type
  endpoint:
    path: /fuel_type
    method: GET
    data_selector: records
- name: truck_load
  endpoint:
    path: /truck_load
    method: GET
    data_selector: records
- name: load_factor_ltl
  endpoint:
    path: /load_factor_ltl
    method: GET
    data_selector: records
- name: auto_threshold_load_factor
  endpoint:
    path: /auto_threshold_load_factor
    method: GET
    data_selector: records
- name: cooling_type
  endpoint:
    path: /cooling_type
    method: GET
    data_selector: records
- name: train
  endpoint:
    path: /train
    method: GET
    data_selector: records
- name: distance_adjustment_factor
  endpoint:
    path: /distance_adjustment_factor
    method: GET
    data_selector: records
- name: train_weight
  endpoint:
    path: /train_weight
    method: GET
    data_selector: records
- name: utilisation
  endpoint:
    path: /utilisation
    method: GET
    data_selector: records
- name: train_type
  endpoint:
    path: /train_type
    method: GET
    data_selector: records
- name: traction_type
  endpoint:
    path: /traction_type
    method: GET
    data_selector: records
- name: calculate_transport
  endpoint:
    path: /etw-rest/calculateTransport
    method: POST
- name: calculate_collection_and_delivery
  endpoint:
    path: /etw-rest/calculateCollectionAndDelivery
    method: POST
- name: get_version
  endpoint:
    path: /etw-rest/getVersion
    method: GET
- name: seaVesselTypes
  endpoint:
    path: /seaVesselTypes
    method: GET
    data_selector: vesselTypes
- name: seaVesselClass
  endpoint:
    path: /seaVesselClass
    method: GET
    data_selector: vesselClasses
- name: roRoVesselClass
  endpoint:
    path: /roRoVesselClass
    method: GET
    data_selector: roRoClasses
- name: roRoVehicleLoadFactor
  endpoint:
    path: /roRoVehicleLoadFactor
    method: GET
    data_selector: loadFactors
- name: calculate_transport
  endpoint:
    path: /etw-rest/calculateTransport
    method: POST
- name: calculate_transport_kml
  endpoint:
    path: /etw-rest/calculateTransport/kml
    method: GET
- name: calculateTransport
  endpoint:
    path: /etw-rest/calculateTransport
    method: POST
    data_selector: resultsPerTransportChainElement
- name: sea_ship_calculation
  endpoint:
    path: /sea/ship/calculation
    method: POST
    data_selector: results
- name: airplane_calculation
  endpoint:
    path: /airplane/calculation
    method: POST
    data_selector: results
- name: resultsPerTransportChainElement
  endpoint:
    path: /resultsPerTransportChainElement
    method: GET
    data_selector: resultsPerTransportChainElement
    params: {}
- name: transport
  endpoint:
    path: /aircraft/type
    method: GET
    data_selector: transportChainElements
    params: {}
- name: Hybrid short haul
  endpoint:
    path: /HybSH
    method: GET
    data_selector: records
- name: Hybrid medium haul
  endpoint:
    path: /HybMH
    method: GET
    data_selector: records
- name: Hybrid long haul
  endpoint:
    path: /HybLH
    method: GET
    data_selector: records
- name: calculate_transport_kml
  endpoint:
    path: /etw-rest/calculateTransport/kml
    method: GET
    data_selector: body
    params:
      expires: 2007-04-05T14:30Z
      uuid: b2d738cb-2b54-4f49-8f03-db838a03d91b
      signature: ol3RA-NjoO2POfxEcko994JIip1EQHTM8n6uqxYS730
- name: calculate_collection_and_delivery
  endpoint:
    path: /etw-rest/calculateCollectionAndDelivery
    method: POST
    data_selector: body
    params: {}
- name: get_version
  endpoint:
    path: /etw-rest/getVersion
    method: GET
    data_selector: body
    params: {}
- name: calculateTransport
  endpoint:
    path: /etw-rest/calculateTransport
    method: POST
- name: calculateCollectionAndDelivery
  endpoint:
    path: /etw-rest/calculateCollectionAndDelivery
    method: POST
- name: DHC-8-200
  endpoint:
    path: /DHC-8-200
    method: GET
    data_selector: Belly-Freight
    params: {}
- name: DHC-8-300
  endpoint:
    path: /DHC-8-300
    method: GET
    data_selector: Belly-Freight
    params: {}
- name: DHC-8-400
  endpoint:
    path: /DHC-8-400
    method: GET
    data_selector: Belly-Freight
    params: {}
- name: DHC-7
  endpoint:
    path: /DHC-7
    method: GET
    data_selector: Belly-Freight
    params: {}
- name: DHC-6
  endpoint:
    path: /DHC-6
    method: GET
    data_selector: Belly-Freight
    params: {}
- name: calculateTransport
  endpoint:
    path: /etw-rest/calculateTransport
    method: POST
- name: calculateCollectionAndDelivery
  endpoint:
    path: /etw-rest/calculateCollectionAndDelivery
    method: POST
- name: getVersion
  endpoint:
    path: /etw-rest/getVersion
    method: GET
- name: logistic_hub
  endpoint:
    path: /logistic_hubs
    method: POST
    data_selector: transportChainElements
    params: {}
- name: transport
  endpoint:
    path: /transports
    method: POST
    data_selector: transportChainElements
    params: {}
- name: calculate_transport
  endpoint:
    path: /etw-rest/calculateTransport
    method: POST
- name: calculate_transport_kml
  endpoint:
    path: /etw-rest/calculateTransport/kml
    method: GET
- name: calculate_collection_and_delivery
  endpoint:
    path: /etw-rest/calculateCollectionAndDelivery
    method: POST
- name: get_version
  endpoint:
    path: /etw-rest/getVersion
    method: GET
- name: transportChain
  endpoint:
    path: /transportChain
    method: POST
    data_selector: transportChainElements
    params: {}
- name: calculateCollectionAndDelivery
  endpoint:
    path: /etw-rest/calculateCollectionAndDelivery
    method: POST
    data_selector: null
    params: {}
- name: getVersion
  endpoint:
    path: /etw-rest/getVersion
    method: GET
- name: transport_chain_elements
  endpoint:
    path: /api/transport_chain_elements
    method: POST
    data_selector: transportChainElements
- name: Hybrid short haul
  endpoint:
    path: /hybrid/short-haul
    method: GET
    data_selector: records
- name: Hybrid medium haul
  endpoint:
    path: /hybrid/medium-haul
    method: GET
    data_selector: records
- name: Hybrid long haul
  endpoint:
    path: /hybrid/long-haul
    method: GET
    data_selector: records
- name: Belly-Freight
  endpoint:
    path: /belly-freight
    method: GET
    data_selector: records
- name: Freighter
  endpoint:
    path: /freighter
    method: GET
    data_selector: records
- name: user_specific_fuel_consumption
  endpoint:
    path: /user-specific-fuel-consumption
    method: POST
    data_selector: results
- name: total_emission_factor
  endpoint:
    path: /total-emission-factor
    method: POST
    data_selector: results
- name: operational_fuel_consumption
  endpoint:
    path: /operational-fuel-consumption
    method: POST
    data_selector: results
- name: total_emission_reduction
  endpoint:
    path: /total-emission-reduction
    method: POST
    data_selector: results
- name: carriage_description
  endpoint:
    path: /carriage-description
    method: POST
    data_selector: results
- name: sea_vessel_types
  endpoint:
    path: /sea/vessel/types
    method: GET
    data_selector: vessels
- name: sea_vessel_classes
  endpoint:
    path: /sea/vessel/classes
    method: GET
    data_selector: classes
- name: roro_vessel_classes
  endpoint:
    path: /roro/vessel/classes
    method: GET
    data_selector: classes
- name: roro_vehicle_load_factor
  endpoint:
    path: /roro/vehicle/load_factor
    method: GET
    data_selector: load_factor
- name: transportChainElements
  endpoint:
    path: /transportChainElements
    method: GET
    data_selector: elements
    params: {}
- name: Hybrid short haul
  endpoint:
    path: /services/data/vXX.X/sobjects/HybSH
    method: GET
- name: Hybrid medium haul
  endpoint:
    path: /services/data/vXX.X/sobjects/HybMH
    method: GET
- name: Hybrid long haul
  endpoint:
    path: /services/data/vXX.X/sobjects/HybLH
    method: GET
- name: Airplane
  endpoint:
    path: /api/v1/airplanes
    method: GET
    data_selector: airplanes
    params: {}
- name: logistic_hub
  endpoint:
    path: /logistic_hubs
    method: GET
    data_selector: transportChainElements
- name: primary_data_settings
  endpoint:
    path: /primary_data_settings
    method: GET
    data_selector: accounting
- name: cargo
  endpoint:
    path: /cargo
    method: POST
    data_selector: cargo
    params: {}
- name: accounting
  endpoint:
    path: /accounting
    method: POST
    data_selector: accounting
    params: {}
- name: cargo
  endpoint:
    path: /cargo
    method: POST
    data_selector: cargo
    params: {}
- name: accounting
  endpoint:
    path: /accounting
    method: POST
    data_selector: accounting
    params: {}
- name: transportChainElements
  endpoint:
    path: /transportChainElements
    method: POST
    data_selector: transportChainElements
    params: {}
- name: DHC-8-200
  endpoint:
    path: /DHC-8-200
    method: GET
- name: DHC-8-300
  endpoint:
    path: /DHC-8-300
    method: GET
- name: DHC-8-400
  endpoint:
    path: /DHC-8-400
    method: GET
- name: DHC-7
  endpoint:
    path: /DHC-7
    method: GET
- name: DHC-8
  endpoint:
    path: /DHC-8
    method: GET
- name: DHC2 Bvr/Tb Bvr
  endpoint:
    path: /DHC2_Bvr_Tb_Bvr
    method: GET
- name: DHC4 Caribou
  endpoint:
    path: /DHC4_Caribou
    method: GET
- name: DHC-3 Turbo Otter
  endpoint:
    path: /DHC-3_Turbo_Otter
    method: GET
- name: DHC2 Bvr
  endpoint:
    path: /DHC2_Bvr
    method: GET
- name: DHC3 Otter
  endpoint:
    path: /DHC3_Otter
    method: GET
- name: DHC-6 Twin Otter
  endpoint:
    path: /DHC-6_Twin_Otter
    method: GET
- name: logistic_hub
  endpoint:
    path: /logistic_hub
    method: POST
    data_selector: transportChainElements
    params: {}
- name: primary_data_settings
  endpoint:
    path: /primary_data_settings
    method: POST
    data_selector: transportChainElements
    params: {}
- name: settings
  endpoint:
    path: /settings
    method: POST
    data_selector: settings
    params: {}
- name: calculate_transport
  endpoint:
    path: /etw-rest/calculateTransport
    method: post
- name: collection_and_delivery
  endpoint:
    path: /etw-rest/calculateCollectionAndDelivery
    method: post
- name: info
  endpoint:
    path: /etw-rest/getVersion
    method: get
- name: calculate_transport
  endpoint:
    path: /etw-rest/calculateTransport
    method: POST
- name: calculate_transport_kml
  endpoint:
    path: /etw-rest/calculateTransport/kml
    method: GET
- name: calculate_transport
  endpoint:
    path: /etw-rest/calculateTransport
    method: POST
    data_selector: resultsPerTransportChainElement
- name: resultsPerTransportChainElement
  endpoint:
    path: /resultsPerTransportChainElement
    method: GET
    data_selector: results
    params: {}
- name: calculate_transport_kml
  endpoint:
    path: /etw-rest/calculateTransport/kml
    method: GET
    data_selector: application/octet-stream
    params:
      expires: string
      uuid: string
      signature: string
- name: calculate_collection_and_delivery
  endpoint:
    path: /etw-rest/calculateCollectionAndDelivery
    method: POST
    data_selector: ''
    params: {}
- name: get_version
  endpoint:
    path: /etw-rest/getVersion
    method: GET
    data_selector: ''
    params: {}
- name: calculateTransport
  endpoint:
    path: /etw-rest/calculateTransport
    method: post
- name: calculateCollectionAndDelivery
  endpoint:
    path: /etw-rest/calculateCollectionAndDelivery
    method: post
- name: calculate_transport
  endpoint:
    path: /etw-rest/calculateTransport
    method: post
- name: calculate_collection_and_delivery
  endpoint:
    path: /etw-rest/calculateCollectionAndDelivery
    method: post
- name: get_version
  endpoint:
    path: /etw-rest/getVersion
    method: get
- name: calculate_transport
  endpoint:
    path: /etw-rest/calculateTransport
    method: POST
- name: calculate_collection_and_delivery
  endpoint:
    path: /etw-rest/calculateCollectionAndDelivery
    method: POST
- name: get_version
  endpoint:
    path: /etw-rest/getVersion
    method: GET
- name: calculate_collection_and_delivery
  endpoint:
    path: /etw-rest/calculateCollectionAndDelivery
    method: POST
    data_selector: response
    params: {}
- name: version
  endpoint:
    path: /etw-rest/getVersion
    method: GET
    data_selector: version
    params: {}
- name: Havilland DHC-8-200 Dash 8
  endpoint:
    path: /services/data/vXX.X/sobjects/HavillandDHC8200Dash8
    method: GET
    data_selector: records
    params: {}
- name: De Havilland DHC-8-300 Dash 8
  endpoint:
    path: /services/data/vXX.X/sobjects/DeHavillandDHC8300Dash8
    method: GET
    data_selector: records
    params: {}
- name: De Havilland DHC-8 Dash 8-400
  endpoint:
    path: /services/data/vXX.X/sobjects/DeHavillandDHC8400
    method: GET
    data_selector: records
    params: {}
- name: De Havilland DHC-7 Dash 7
  endpoint:
    path: /services/data/vXX.X/sobjects/DeHavillandDHC7Dash7
    method: GET
    data_selector: records
    params: {}
- name: DHvilld-Bombardier DHC8 Dsh 8
  endpoint:
    path: /services/data/vXX.X/sobjects/DHvilldBombardierDHC8Dsh8
    method: GET
    data_selector: records
    params: {}
- name: logistic_hub
  endpoint:
    path: /logistic_hub
    method: POST
    data_selector: transportChainElements
    params: {}
- name: primary_data_settings
  endpoint:
    path: /primary_data_settings
    method: POST
    data_selector: transportChainElements
    params: {}
- name: user_specific_fuel_consumption
  endpoint:
    path: /user-specific-fuel-consumption
    method: POST
    data_selector: results
- name: total_emission_factor
  endpoint:
    path: /total-emission-factor
    method: POST
    data_selector: results
- name: operational_fuel_consumption
  endpoint:
    path: /operational-fuel-consumption
    method: POST
    data_selector: results
- name: total_emission_reduction_factor
  endpoint:
    path: /total-emission-reduction-factor
    method: POST
    data_selector: results
- name: carriage_description
  endpoint:
    path: /carriage-description
    method: POST
    data_selector: results
- name: sea_vessel_types
  endpoint:
    path: /seaVessel/types
    method: GET
    data_selector: types
- name: sea_vessel_class
  endpoint:
    path: /seaVessel/class
    method: GET
    data_selector: classes
- name: roro_vessel_class
  endpoint:
    path: /roroVessel/class
    method: GET
    data_selector: classes
- name: cargo_calculation
  endpoint:
    path: /calculations/cargo
    method: POST
    data_selector: results
    params: {}
- name: transport_calculation
  endpoint:
    path: /calculations/transport
    method: POST
    data_selector: results
    params: {}
- name: transportChainElements
  endpoint:
    path: /transportChainElements
    method: GET
    data_selector: transportChainElements
- name: Hybrid short haul
  endpoint:
    path: /HybSH
    method: GET
    data_selector: records
- name: Hybrid medium haul
  endpoint:
    path: /HybMH
    method: GET
    data_selector: records
- name: Hybrid long haul
  endpoint:
    path: /HybLH
    method: GET
    data_selector: records
- name: airplane
  endpoint:
    path: /transport/airplane
    method: GET
    data_selector: titles
    params: {}
- name: transportChainElements
  endpoint:
    path: /transportChainElements
    method: POST
    data_selector: elements
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Hybrid short haul
  endpoint:
    path: /HybSH
    method: GET
    data_selector: Hybrid
    params: {}
- name: Hybrid medium haul
  endpoint:
    path: /HybMH
    method: GET
    data_selector: Hybrid
    params: {}
- name: Hybrid long haul
  endpoint:
    path: /HybLH
    method: GET
    data_selector: Hybrid
    params: {}
- name: DH3
  endpoint:
    path: /services/data/vXX.X/sobjects/DH3
    method: GET
    data_selector: records
    params: {}
- name: DH4
  endpoint:
    path: /services/data/vXX.X/sobjects/DH4
    method: GET
    data_selector: records
    params: {}
- name: DH7
  endpoint:
    path: /services/data/vXX.X/sobjects/DH7
    method: GET
    data_selector: records
    params: {}
- name: DHT
  endpoint:
    path: /services/data/vXX.X/sobjects/DHT
    method: GET
    data_selector: records
    params: {}
- name: logistic_hub
  endpoint:
    path: /path/to/logistic_hub
    method: GET
    data_selector: logisticHubs
- name: primary_data_settings
  endpoint:
    path: /path/to/primary_data_settings
    method: GET
    data_selector: primaryDataSettings
- name: settings
  endpoint:
    path: /path/to/settings
    method: GET
    data_selector: settings
notes:
- Uses average trade lane values published by SFC/ Clean Cargo.
- Clean Cargo values are based on 100% container utilisation.
- Logistic hubs can be defined in the REff-Tool from Fraunhofer IML.
- Energy consumptions can be provided directly or using id-related values.
- User specific values produce results that do not comply with the ETW standard methodology;
  reported separately under userSpecificEmissions.
- Clean Cargo methodology is activated by default.
- User-specific values produce results that do not comply with the ETW standard methodology.
- Cooled carriage calculation only applies for trucks, container trains and Clean
  Cargo container ships.
- Various aircraft types available.
- In order to try out the API you need to contact their team to get a test account.
- EcoTransIT World selects the Clean Cargo default values automatically.
- Contact the team to get a test account for API access.
- Cooled carriage is currently available for trucks, trains, and seaships.
- Uses Clean Cargo methodology for emissions calculation by default.
- security updates
- 'change in API Specification: update energyComposition for inlandwaters and rail'
- 'add Notification: Fuel Mix overridden by clean cargo'
- fix tags in OpenApi.yaml
- 'change in API Specification: change energyComposition in Response'
- change default emission class In Canada to UsMoves 2023
- 'change in API Specification: add missing EnergyTypes for EnergyComposition in response'
- add more descriptions to OpenApi.yaml for collection and delivery (distribution
  tours)
- add kml output to collection and delivery (distribution tours)
- add userspecific, virtuelDistance and cooled transport to collection and delivery
  (distribution tours)
- add energy composition for collection and delivery (distribution tours)
- 'bugfix: load/unload in result for collection and delivery (distribution tours)'
- fix get access token link in OpenApi.yaml
- add collection and delivery (distribution tours) request
- 'bugfix: auto transhipments and splits'
- bugfix primaryEnergy - sometimes only total values were displayed in response
- bugfix notification country change only when country really changed
- clean up response
- Users can request default transportChainElements ids.
- Clean Cargo methodology suggests including an additional distance factor for operational
  derivations.
- In order to try out the API you need to contact our team to get a test account.
- Logistic hubs can be warehouses, terminals, transhipment centres or similar.
- EcoTransIT World offers to store logistic data on the customer’s server.
- The Clean Cargo values are stated on the base of 100% container utilisation.
- Clean Cargo methodology is activated by default for container vessels.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
errors:
- 400 Bad Request
- 401 Unauthorized
- '200'
- '400'
- '401'
- '400 Bad Request: Check the formatting of the request.'
- '200: Successful operation'
- '404: Not found'
- '410: Gone'
- 'INVALID_LOGISTIC_HUB_ID: Check the logistic hub ID provided.'
- 'DATA_EXPORT_FAILED: Ensure the data is correctly formatted before export.'
- 'INVALID_REQUEST: Ensure all required fields are present and properly formatted.'
- 'UNAUTHORIZED_ACCESS: Check API key or authentication details.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://customer-name.ecotransit.org
  headers:
    Accept: application/json
source_metadata: null
