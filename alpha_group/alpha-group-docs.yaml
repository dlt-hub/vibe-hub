resources:
- name: revoke_token
  endpoint:
    path: /v1/oauth2/revoke
    method: POST
- name: accounts
  endpoint:
    path: /v1/accounts
    method: GET
    data_selector: accounts
- name: balances
  endpoint:
    path: /v1/balances
    method: GET
    data_selector: balances
    params: {}
- name: statements
  endpoint:
    path: /v1/statements
    method: GET
    data_selector: transactions
    params:
      AccountID: required
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    params:
      AccountID: ''
      From: ''
      To: ''
- name: account
  endpoint:
    path: /v1/accounts/{accountId}
    method: GET
    data_selector: result
- name: entities
  endpoint:
    path: /v1/entities
    method: GET
    data_selector: records
- name: entities_settings
  endpoint:
    path: /v1/entities/settings
    method: GET
- name: credit_facilities
  endpoint:
    path: /v1/credit-facilities
    method: GET
- name: entities_settings
  endpoint:
    path: /v1/entities/settings
    method: GET
- name: facility_terms
  endpoint:
    path: /v1/credit-facilities/terms
    method: GET
- name: credit_facilities
  endpoint:
    path: /v1/credit-facilities
    method: GET
- name: Facility Letter
  endpoint:
    path: /v1/credit-facilities/letter
    method: GET
- name: facility_terms
  endpoint:
    path: /v1/credit-facilities/terms
    method: GET
- name: GET MTM by trade
  endpoint:
    path: /v1/credit-facilities/mtm/trade
    method: GET
- name: Facility Letter
  endpoint:
    path: /v1/credit-facilities/letter
    method: GET
- name: mtm_by_currency_pair
  endpoint:
    path: /v1/credit-facilities/mtm/currency-pair
    method: GET
- name: spot_quote
  endpoint:
    path: /v1/fx/quotes/spot
    method: POST
- name: MTM by trade
  endpoint:
    path: /v1/credit-facilities/mtm/trade
    method: GET
- name: mtm_by_currency_pair
  endpoint:
    path: /v1/credit-facilities/mtm/currency-pair
    method: GET
- name: spot_quote
  endpoint:
    path: /v1/fx/quotes/spot
    method: POST
- name: spot_quote
  endpoint:
    path: /v1/fx/quotes/spot
    method: POST
- name: spot_quote
  endpoint:
    path: /v1/fx/quotes/spot
    method: POST
- name: book_spot_trade
  endpoint:
    path: /v1/fx/trades/spot
    method: POST
- name: book_spot_trade
  endpoint:
    path: /v1/fx/trades/spot
    method: POST
- name: forward_quote
  endpoint:
    path: /v1/fx/quotes/forwards
    method: POST
- name: forward_quote
  endpoint:
    path: /v1/fx/quotes/forwards
    method: POST
- name: quotes
  endpoint:
    path: /v1/fx/quotes/forwards
    method: POST
    data_selector: null
    params: {}
- name: quotes_forwards
  endpoint:
    path: /v1/fx/quotes/forwards
    method: POST
    data_selector: null
    params: {}
- name: book_forward_trade
  endpoint:
    path: /v1/fx/trades/forwards
    method: POST
    data_selector: responses
- name: Book Forward Trade
  endpoint:
    path: /v1/fx/trades/forwards
    method: POST
    data_selector: object
- name: Forward Quote
  endpoint:
    path: /v1/fx/trades/forwards
    method: POST
- name: Trade Initial Margin
  endpoint:
    path: /v1/fx/trades/{tradeId}/initial-margin
    method: GET
- name: trade_initial_margin
  endpoint:
    path: /v1/fx/trades/forwards/{tradeId}/initial-margin
    method: GET
    params:
      entityId: string
- name: trade_initial_margin
  endpoint:
    path: /v1/fx/trades/forwards/{tradeId}/initial-margin
    method: GET
    data_selector: object
    params:
      entityId: string
- name: forward_trade
  endpoint:
    path: /v1/fx/trades/forwards/{tradeId}
    method: GET
    data_selector: object
    params:
      entityId: required
- name: forward_trade
  endpoint:
    path: /v1/fx/trades/forwards/tradeId/initial-margin
    method: GET
- name: forward_trade
  endpoint:
    path: /v1/fx/trades/forwards/{tradeId}
    method: GET
    params:
      entityId: ''
- name: book_drawdown
  endpoint:
    path: /v1/fx/trades/forwards/drawdowns
    method: POST
    data_selector: object
- name: Trade Initial Margin
  endpoint:
    path: /v1/fx/trades/forwards/tradeId
    method: GET
- name: Book Drawdown
  endpoint:
    path: /v1/fx/postdrawdown
    method: POST
- name: trade_drawdown_details
  endpoint:
    path: /v1/fx/trades/forwards/{tradeId}/drawdowns
    method: GET
    data_selector: response
- name: Book Drawdown
  endpoint:
    path: /v1/fx/trades/forwards/drawdowns
    method: POST
- name: held_rate_quote
  endpoint:
    path: /v1/fx/quotes/held-rates
    method: POST
- name: Trade Drawdown Details
  endpoint:
    path: /v1/fx/trades/forwards/{tradeId}/drawdowns
    method: GET
- name: active_held_rate_quotes
  endpoint:
    path: /v1/fx/quotes/held-rates
    method: GET
    data_selector: Quotes
    params:
      EntityId: required
      PageNumber: 1 to 2147483647
- name: held_rate_quote
  endpoint:
    path: /v1/fx/quotes/held-rates
    method: POST
- name: held_rate_trade
  endpoint:
    path: /v1/fx/trades/held-rates
    method: POST
- name: active_held_rate_quotes
  endpoint:
    path: /v1/fx/quotes/held-rates
    method: GET
    data_selector: Quotes
    params:
      EntityId: string
      PageNumber: int32
- name: earliest_settlement
  endpoint:
    path: /v1/fx/earliest-settlement
    method: GET
    data_selector: EarliestSettlementDate
    params:
      EntityId: required
      BuyCurrency: required
      SellCurrency: required
- name: Book Held Rate Trade
  endpoint:
    path: /v1/fx/trades/held-rates
    method: POST
    data_selector: object
- name: earliest_settlement
  endpoint:
    path: /v1/fx/earliest-settlement
    method: GET
    data_selector: object
- name: available_spot_value_dates
  endpoint:
    path: /v1/fx/spot/value-dates
    method: GET
    params:
      EntityId: string
      BuyCurrency: string
      SellCurrency: string
- name: earliest_settlement
  endpoint:
    path: /v1/fx/earliest-settlement
    method: GET
    params:
      EntityId: string
      BuyCurrency: string
      SellCurrency: string
- name: spot_value_dates
  endpoint:
    path: /fx/spot/value-dates
    method: GET
- name: estimate_quote
  endpoint:
    path: /fx/getquote
    method: GET
- name: earliest_settlement
  endpoint:
    path: /fx/getearliestsettlement
    method: GET
- name: estimate_quote
  endpoint:
    path: /v1/fx/quotes/estimate
    method: GET
    params:
      EntityId: required
      BuyCurrency: required
      SellCurrency: required
      FixedSide: required
      ValueDate: date-time | null
      Amount: required
- name: earliest_settlement
  endpoint:
    path: /v1/fx/earliest-settlement
    method: GET
- name: available_spot_value_dates
  endpoint:
    path: /v1/fx/available-spot-value-dates
    method: GET
- name: available_spot_value_dates
  endpoint:
    path: /v1/fx/spot/value-dates
    method: GET
    data_selector: ValueDates
    params:
      EntityId: ''
      BuyCurrency: ''
      SellCurrency: ''
- name: trade
  endpoint:
    path: /v1/fx/trades/{tradeId}
    method: GET
    data_selector: Trade response
    params:
      tradeId: string
      entityId: string
- name: spot_value_dates
  endpoint:
    path: /v1/fx/spot/value-dates
    method: GET
- name: trades
  endpoint:
    path: /v1/fx/trades/tradeId
    method: GET
- name: estimate_quote
  endpoint:
    path: /v1/fx/quote
    method: GET
- name: estimate_quote
  endpoint:
    path: /v1/fx/quotes/estimate
    method: GET
    data_selector: 200 Quote Estimate
    params:
      EntityId: required
      BuyCurrency: required
      SellCurrency: required
      FixedSide: required
      ValueDate: date-time | null
      Amount: required
- name: trades
  endpoint:
    path: /v1/fx/trades
    method: GET
    data_selector: Trades
    params:
      EntityId: ''
      FromValueDate: ''
      ToValueDate: ''
      FromOrderDate: ''
      ToOrderDate: ''
      Type: ''
      Subtype: ''
      PageNumber: ''
- name: estimate_quote
  endpoint:
    path: /v1/fx/quotes/estimate
    method: GET
- name: available_spot_value_dates
  endpoint:
    path: /reference/fx_getavailablespotdates
    method: GET
- name: trade_by_id
  endpoint:
    path: /reference/fx_gettrade
    method: GET
- name: validate_payment
  endpoint:
    path: /v1/payments/validation
    method: POST
- name: trade
  endpoint:
    path: /v1/fx/trades/{tradeId}
    method: GET
    data_selector: object
    params:
      entityId: ''
- name: verification_of_payee
  endpoint:
    path: /v1/payments/verification
    method: POST
    data_selector: object
    params: {}
- name: trades
  endpoint:
    path: /v1/fx/trades
    method: GET
    data_selector: Trades
    params:
      EntityId: string
      FromValueDate: date-time
      ToValueDate: date-time
      FromOrderDate: date-time
      ToOrderDate: date-time
      Type: Trade Type
      PageNumber: int32
- name: payment
  endpoint:
    path: /v1/payments
    method: POST
    data_selector: object
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: POST
    data_selector: object
    params: {}
- name: payment_confirmation
  endpoint:
    path: /payments/getconfirmation
    method: GET
    data_selector: object
    params: {}
- name: validate_payment
  endpoint:
    path: /v1/payments/validation
    method: POST
    data_selector: none
    params:
      PaymentDate: required
      Amount: required
      Currency: required
      CreditorAccountId: optional
      Reference: optional
      TradeReference: optional
      DebtorAccountId: optional
      DebtorAccountIban: optional
      Purpose: optional
      VerificationId: optional
      CreditorAccount: optional
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: payment details
    params:
      incremental: payment_id
- name: verification_of_payee
  endpoint:
    path: /v1/payments/verification
    method: POST
    data_selector: object
- name: payment
  endpoint:
    path: /v1/payments/{paymentId}
    method: GET
- name: payment_confirmation
  endpoint:
    path: /v1/payments/confirmation/{paymentId}
    method: GET
- name: purpose_of_payment
  endpoint:
    path: /v1/payments/purpose-of-payment
    method: GET
    data_selector: object
- name: payment
  endpoint:
    path: /v1/payments
    method: POST
    data_selector: object
- name: Payment Confirmation Document
  endpoint:
    path: /v1/payments/purpose-of-payment
    method: GET
- name: payments
  endpoint:
    path: /v1/payments
    method: POST
- name: internal_account_transfer
  endpoint:
    path: /v1/internal-account-transfers
    method: POST
    data_selector: object
- name: payments
  endpoint:
    path: /v1/payments
    method: GET
    data_selector: payment details
    params:
      payment_id: required
- name: internal_account_transfers
  endpoint:
    path: /v1/internal-account-transfers
    method: GET
- name: payment
  endpoint:
    path: /v1/payments/{paymentId}
    method: GET
- name: inter_account_transfers
  endpoint:
    path: /v1/internal-account-transfers
    method: GET
    data_selector: InterAccountTransfers
    params:
      EntityId: string
- name: payment_confirmation
  endpoint:
    path: /v1/payments/confirmation/{paymentId}
    method: GET
- name: internal_account_transfers
  endpoint:
    path: /v1/internal-account-transfers
    method: GET
- name: inter_account_transfer_by_id
  endpoint:
    path: /v1/internal-account-transfers/{id}
    method: GET
- name: purpose_of_payment
  endpoint:
    path: /v1/payments/purpose-of-payment
    method: GET
    data_selector: object
- name: inter_account_transfer
  endpoint:
    path: /v1/internal-account-transfers/{internalAccountTransferId}
    method: GET
    data_selector: object
    params:
      EntityId: ''
- name: Payment Confirmation Document
  endpoint:
    path: /v1/payments/purpose-of-payment
    method: GET
- name: Inter Account Transfers
  endpoint:
    path: /v1/internal-account-transfers/internalAccountTransferId
    method: GET
    data_selector: object
- name: internal_account_transfer
  endpoint:
    path: /v1/internal-account-transfers
    method: POST
    data_selector: object
    params: {}
- name: validate_beneficiary
  endpoint:
    path: /v1/beneficiaries/validation
    method: POST
- name: beneficiary
  endpoint:
    path: /v1/beneficiaries
    method: POST
    data_selector: object
- name: inter_account_transfers
  endpoint:
    path: /v1/internal-account-transfers
    method: GET
    data_selector: InterAccountTransfers
    params:
      EntityId: string
      PageNumber: int32
- name: beneficiaries
  endpoint:
    path: /v1/beneficiaries
    method: POST
- name: get_beneficiaries
  endpoint:
    path: /v1/beneficiaries
    method: GET
- name: internal_account_transfers
  endpoint:
    path: /v1/internal-account-transfers
    method: GET
- name: internal_account_transfer_by_id
  endpoint:
    path: /v1/internal-account-transfers/{id}
    method: GET
- name: beneficiary
  endpoint:
    path: /v1/beneficiaries/{beneficiaryId}
    method: GET
    params: {}
- name: inter_account_transfer
  endpoint:
    path: /v1/internal-account-transfers/{internalAccountTransferId}
    method: GET
    data_selector: object
    params:
      EntityId: string
- name: beneficiary
  endpoint:
    path: /v1/beneficiaries/{beneficiaryId}
    method: PUT
- name: internal_account_transfers
  endpoint:
    path: /v1/internal-account-transfers/internalAccountTransferId
    method: GET
- name: beneficiary
  endpoint:
    path: /v1/beneficiaries/{beneficiaryId}
    method: DELETE
- name: beneficiary_validation
  endpoint:
    path: /v1/beneficiaries/validation
    method: POST
- name: beneficiary
  endpoint:
    path: /v1/beneficiaries
    method: POST
    data_selector: object
- name: Accounts
  endpoint:
    path: /reference/accounts_getaccount
    method: GET
- name: Balances
  endpoint:
    path: /reference/balances_getbalance
    method: GET
- name: Statements
  endpoint:
    path: /reference/statements_getstatements
    method: GET
- name: Transactions
  endpoint:
    path: /reference/transactions_gettransactions
    method: GET
- name: beneficiaries
  endpoint:
    path: /v1/beneficiaries
    method: POST
    data_selector: object
    params: {}
- name: get_beneficiaries
  endpoint:
    path: /v1/beneficiaries
    method: GET
    data_selector: object
    params: {}
- name: statistics
  endpoint:
    path: /statistics
    method: GET
- name: beneficiary
  endpoint:
    path: /v1/beneficiaries/{beneficiaryId}
    method: GET
    data_selector: beneficiary details
    params: {}
- name: client
  endpoint:
    path: /register/{ClientId}
    method: GET
- name: client
  endpoint:
    path: /register/{ClientId}
    method: PUT
- name: beneficiary
  endpoint:
    path: /v1/beneficiaries/{beneficiaryId}
    method: PUT
- name: Delete a client
  endpoint:
    path: /register/{ClientId}
    method: DELETE
- name: beneficiary
  endpoint:
    path: /v1/beneficiaries/{beneficiaryId}
    method: DELETE
- name: domestic_payment_consent
  endpoint:
    path: /open-banking/v4.0/pisp/domestic-payment-consents
    method: POST
- name: domestic_payment_consent
  endpoint:
    path: /open-banking/v4.0/pisp/domestic-payment-consents/{consentId}
    method: GET
- name: domestic_payment
  endpoint:
    path: /open-banking/v4.0/pisp/domestic-payments
    method: POST
- name: Accounts
  endpoint:
    path: /reference/accounts_getaccounts
    method: GET
- name: Balances
  endpoint:
    path: /reference/balances_getbalances
    method: GET
- name: Beneficiaries
  endpoint:
    path: /reference/beneficiaries_getbeneficiaries-2
    method: GET
- name: Statements
  endpoint:
    path: /reference/statements_getstatements-2
    method: GET
- name: Transactions
  endpoint:
    path: /reference/transactions_gettransations-1
    method: GET
- name: domestic_payment
  endpoint:
    path: /open-banking/v4.0/pisp/domestic-payments/{domesticPaymentId}
    method: GET
- name: statistics
  endpoint:
    path: /statistics
    method: GET
    data_selector: stats
- name: international_payment_consent
  endpoint:
    path: /open-banking/v4.0/pisp/international-payment-consents
    method: POST
- name: client_registration
  endpoint:
    path: /register
    method: POST
- name: international_payment_consent
  endpoint:
    path: /open-banking/v3.1/pisp/international-payment-consents/{consentId}/funds-confirmation
    method: GET
- name: client
  endpoint:
    path: /register/{ClientId}
    method: GET
- name: international_payment_consents
  endpoint:
    path: /open-banking/v4.0/pisp/international-payment-consents/{consentId}/funds-confirmation
    method: GET
- name: client
  endpoint:
    path: /register/{ClientId}
    method: PUT
- name: international_payment
  endpoint:
    path: /open-banking/v4.0/pisp/international-payments
    method: POST
- name: international_payment
  endpoint:
    path: /open-banking/v4.0/pisp/international-payments/{internationalPaymentId}
    method: GET
- name: delete_client
  endpoint:
    path: /register/{ClientId}
    method: DELETE
- name: accounts
  endpoint:
    path: /open-banking/v4.0/aisp/accounts
    method: GET
    data_selector: Account
- name: domestic_payment_consent
  endpoint:
    path: /open-banking/v4.0/pisp/domestic-payment-consents
    method: POST
- name: domestic_payment_consent
  endpoint:
    path: /open-banking/v4.0/pisp/domestic-payment-consents/{consentId}
    method: GET
- name: accounts
  endpoint:
    path: /aisp/accounts
    method: GET
- name: transactions
  endpoint:
    path: /aisp/accounts/{accountId}/transactions
    method: GET
- name: statements
  endpoint:
    path: /aisp/accounts/{accountId}/statements
    method: GET
- name: domestic_payment
  endpoint:
    path: /open-banking/v4.0/pisp/domestic-payments
    method: POST
- name: accounts
  endpoint:
    path: /open-banking/v4.0/aisp/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: accounts
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/{accountId}
    method: GET
- name: domestic_payment
  endpoint:
    path: /open-banking/v4.0/pisp/domestic-payments/{domesticPaymentId}
    method: GET
- name: account_access_consents
  endpoint:
    path: /open-banking/v4.0/aisp/account-access-consents
    method: POST
- name: international_payment_consent
  endpoint:
    path: /open-banking/v4.0/pisp/international-payment-consents
    method: POST
- name: account_access_consent
  endpoint:
    path: /open-banking/v4.0/aisp/account-access-consents/{consentId}
    method: GET
- name: international_payment_consent
  endpoint:
    path: /open-banking/v3.1/pisp/international-payment-consents
    method: POST
- name: funds_confirmation
  endpoint:
    path: /open-banking/v3.1/pisp/international-payment-consents/{consentId}/funds-confirmation
    method: GET
- name: account_access_consents
  endpoint:
    path: /open-banking/v4.0/aisp/account-access-consents/{consentId}
    method: DELETE
- name: international_payment_consents_funds_confirmation
  endpoint:
    path: /open-banking/v4.0/pisp/international-payment-consents/{consentId}/funds-confirmation
    method: GET
- name: balances
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/{accountId}/balances
    method: GET
- name: international_payment
  endpoint:
    path: /open-banking/v4.0/pisp/international-payments
    method: POST
- name: balances
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/accountId/balances
    method: GET
- name: beneficiaries
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/{accountId}/beneficiaries
    method: GET
- name: international_payment
  endpoint:
    path: /open-banking/v4.0/pisp/international-payments/{internationalPaymentId}
    method: GET
- name: beneficiaries
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/accountId/beneficiaries
    method: GET
- name: beneficiaries
  endpoint:
    path: /open-banking/v4.0/aisp/beneficiaries
    method: GET
    data_selector: Beneficiary
    params: {}
- name: accounts
  endpoint:
    path: /open-banking/v4.0/aisp/accounts
    method: GET
    data_selector: Account
- name: statements
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/{accountId}/statements
    method: GET
- name: accounts
  endpoint:
    path: /open-banking/v4.0/aisp/accounts
    method: GET
    data_selector: accounts
- name: transactions
  endpoint:
    path: /open-banking/v4.0/transactions
    method: GET
    data_selector: transactions
- name: accounts
  endpoint:
    path: /open-banking/v4.0/aisp/accounts
    method: GET
- name: statements
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/{accountId}/statements/{statementId}
    method: GET
- name: accounts
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/{accountId}
    method: GET
- name: transactions
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/{accountId}/statements/{statementId}/transactions
    method: GET
    data_selector: transactions
- name: account_access_consent
  endpoint:
    path: /open-banking/v4.0/aisp/account-access-consents
    method: POST
- name: statements
  endpoint:
    path: /open-banking/v4.0/aisp/statements
    method: GET
- name: transactions
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/{accountId}/transactions
    method: GET
- name: account_access_consent
  endpoint:
    path: /open-banking/v4.0/aisp/account-access-consents/{consentId}
    method: GET
- name: domestic_payment_consent
  endpoint:
    path: /open-banking/v3.1/pisp/domestic-payment-consents
    method: POST
- name: account_access_consents
  endpoint:
    path: /open-banking/v4.0/aisp/account-access-consents/{consentId}
    method: DELETE
- name: domestic_payment_consent
  endpoint:
    path: /open-banking/v3.1/pisp/domestic-payment-consents/{consentId}
    method: GET
- name: balances
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/{accountId}/balances
    method: GET
- name: funds_confirmation
  endpoint:
    path: /open-banking/v3.1/pisp/domestic-payment-consents/{consentId}/funds-confirmation
    method: GET
- name: balances
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/accountId/balances
    method: GET
    data_selector: balances
- name: Create Domestic Payment
  endpoint:
    path: /open-banking/v3.1/pisp/domestic-payments
    method: POST
- name: beneficiaries
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/{accountId}/beneficiaries
    method: GET
- name: domestic_payment
  endpoint:
    path: /open-banking/v3.1/pisp/domestic-payments/{domesticPaymentId}
    method: GET
    data_selector: Data
    params:
      domesticPaymentId: ''
- name: beneficiaries
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/accountId/beneficiaries
    method: GET
    data_selector: beneficiaries
- name: account_balances
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/balances
    method: GET
    data_selector: balances
- name: domestic_payment
  endpoint:
    path: /pisp/domestic-payments/domesticPaymentId
    method: GET
- name: beneficiaries
  endpoint:
    path: /open-banking/v4.0/aisp/beneficiaries
    method: GET
    data_selector: Beneficiary
- name: international_payment_consent
  endpoint:
    path: /open-banking/v3.1/pisp/international-payment-consents
    method: POST
    data_selector: object
- name: beneficiaries
  endpoint:
    path: /open-banking/v4.0/aisp/beneficiaries
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /open-banking/v4.0/aisp/accounts
    method: GET
    data_selector: records
- name: statements
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/{accountId}/statements
    method: GET
- name: domestic_payment_consents
  endpoint:
    path: /pisp/domestic-payment-consents
    method: POST
    data_selector: Data
- name: international_payment_consents
  endpoint:
    path: /pisp/international-payment-consents
    method: POST
    data_selector: Data
- name: international_payment_consent
  endpoint:
    path: /open-banking/v3.1/pisp/international-payment-consents/{consentId}
    method: GET
- name: statements
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/{accountId}/statements/{statementId}
    method: GET
- name: funds_confirmation
  endpoint:
    path: /open-banking/v3.1/pisp/international-payment-consents/{consentId}/funds-confirmation
    method: GET
- name: transactions
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/{accountId}/statements/{statementId}/transactions
    method: GET
- name: international_payments
  endpoint:
    path: /open-banking/v3.1/pisp/international-payments
    method: POST
- name: statements
  endpoint:
    path: /open-banking/v4.0/aisp/statements
    method: GET
- name: transactions
  endpoint:
    path: /open-banking/v4.0/aisp/accounts/{accountId}/transactions
    method: GET
- name: international_payment
  endpoint:
    path: /open-banking/v3.1/pisp/international-payments/{internationalPaymentId}
    method: GET
- name: domestic_payment_consent
  endpoint:
    path: /open-banking/v3.1/pisp/domestic-payment-consents
    method: POST
- name: account_access_consents
  endpoint:
    path: /open-banking/v3.1/aisp/account-access-consents
    method: POST
- name: account_access_consents
  endpoint:
    path: /open-banking/v3.1/aisp/account-access-consents/{consentId}
    method: GET
- name: domestic_payment_consent
  endpoint:
    path: /open-banking/v3.1/pisp/domestic-payment-consents/{consentId}
    method: GET
- name: account_access_consents
  endpoint:
    path: /open-banking/v3.1/aisp/account-access-consents/{consentId}
    method: DELETE
- name: funds_confirmation
  endpoint:
    path: /open-banking/v3.1/pisp/domestic-payment-consents/{consentId}/funds-confirmation
    method: GET
- name: accounts
  endpoint:
    path: /open-banking/v3.1/aisp/accounts
    method: GET
- name: create_domestic_payment
  endpoint:
    path: /open-banking/v3.1/pisp/domestic-payments
    method: POST
- name: accounts
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}
    method: GET
- name: domestic_payment
  endpoint:
    path: /open-banking/v3.1/pisp/domestic-payments/{domesticPaymentId}
    method: GET
- name: balances
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/balances
    method: GET
- name: domestic_payment
  endpoint:
    path: /open-banking/v3.1/pisp/domestic-payments/domesticPaymentId
    method: GET
- name: beneficiaries
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/beneficiaries
    method: GET
- name: international_payment_consent
  endpoint:
    path: /open-banking/v3.1/pisp/international-payment-consents
    method: POST
- name: beneficiaries
  endpoint:
    path: /open-banking/v3.1/aisp/beneficiaries
    method: GET
- name: international_payment_consents
  endpoint:
    path: /open-banking/v3.1/pisp/international-payment-consents
    method: POST
- name: get_international_payment
  endpoint:
    path: /open-banking/v3.1/pisp/international-payments
    method: GET
- name: statements
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/statements
    method: GET
- name: international_payment_consent
  endpoint:
    path: /open-banking/v3.1/pisp/international-payment-consents/{consentId}
    method: GET
- name: statements
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/statements/{statementId}
    method: GET
- name: funds_confirmation
  endpoint:
    path: /open-banking/v3.1/pisp/international-payment-consents/{consentId}/funds-confirmation
    method: GET
- name: statements_file
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/statements/{statementId}/file
    method: GET
- name: international_payments
  endpoint:
    path: /open-banking/v3.1/pisp/international-payments
    method: POST
- name: transactions
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/statements/{statementId}/transactions
    method: GET
- name: international_payment
  endpoint:
    path: /open-banking/v3.1/pisp/international-payments/{internationalPaymentId}
    method: GET
- name: statements
  endpoint:
    path: /open-banking/v3.1/aisp/statements
    method: GET
- name: account_access_consents
  endpoint:
    path: /open-banking/v3.1/aisp/account-access-consents
    method: POST
- name: account_access_consents
  endpoint:
    path: /open-banking/v3.1/aisp/account-access-consents/{consentId}
    method: GET
- name: transactions
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/transactions
    method: GET
- name: account_access_consents
  endpoint:
    path: /open-banking/v3.1/aisp/account-access-consents/{consentId}
    method: DELETE
- name: accounts
  endpoint:
    path: /open-banking/v3.1/aisp/accounts
    method: GET
- name: accounts
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}
    method: GET
- name: balances
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/balances
    method: GET
- name: currency_accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: Accounts
    params:
      Currency: USD
- name: specific_currency_account
  endpoint:
    path: /api/v1/accounts/{AccountId}
    method: GET
    data_selector: EntityId
- name: beneficiaries
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/beneficiaries
    method: GET
- name: balances
  endpoint:
    path: /api/v1/balances
    method: GET
    data_selector: Balances
    params: {}
- name: beneficiaries
  endpoint:
    path: /open-banking/v3.1/aisp/beneficiaries
    method: GET
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: Transactions
    params:
      AccountId: required
      From: date-time
      To: date-time
      CreditOrDebit: date-time
      Iban: string
      PageNumber: integer
- name: statements
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/statements
    method: GET
- name: statements
  endpoint:
    path: /api/v1/statements
    method: GET
    data_selector: Statement
    params:
      AccountId: required
      From: ''
      To: ''
      PageNumber: ''
- name: statements
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/statements/{statementId}
    method: GET
- name: beneficiaries
  endpoint:
    path: /beneficiaries-1
    method: GET
- name: single_currency_payments
  endpoint:
    path: /payments-singlecurrency
    method: GET
- name: statements_file
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/statements/{statementId}/file
    method: GET
- name: transactions
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/statements/{statementId}/transactions
    method: GET
- name: validate_beneficiary
  endpoint:
    path: /validate-beneficiary
    method: POST
- name: create_beneficiary
  endpoint:
    path: /beneficiary
    method: POST
- name: retrieve_beneficiary
  endpoint:
    path: /beneficiary
    method: GET
- name: retrieve_all_beneficiaries
  endpoint:
    path: /beneficiaries
    method: GET
- name: update_beneficiary_address
  endpoint:
    path: /beneficiary
    method: PUT
- name: delete_beneficiary
  endpoint:
    path: /beneficiary
    method: DELETE
- name: statements
  endpoint:
    path: /open-banking/v3.1/aisp/statements
    method: GET
- name: transactions
  endpoint:
    path: /open-banking/v3.1/aisp/accounts/{accountId}/transactions
    method: GET
- name: validate_payment
  endpoint:
    path: /v1/payments/validate
    method: POST
- name: verify_payee
  endpoint:
    path: /v1/payments/verification
    method: POST
- name: create_payment
  endpoint:
    path: /v1/payments
    method: POST
- name: retrieve_payment_details
  endpoint:
    path: /v1/payments/{paymentId}
    method: GET
- name: retrieve_all_payments_details
  endpoint:
    path: /v1/payments
    method: GET
- name: retrieve_payment_confirmation_document
  endpoint:
    path: /v1/payments/confirmation/{paymentId}
    method: GET
- name: retrieve_purpose_of_payment
  endpoint:
    path: /v1/purpose-of-payment
    method: GET
- name: internal_account_transfers
  endpoint:
    path: /v1/internal-account-transfers
    method: GET
    data_selector: transfers
    params:
      entityID: entityID
- name: specific_internal_account_transfer
  endpoint:
    path: /v1/internal-account-transfers/internalAccountTransferId
    method: GET
    data_selector: transfer_details
    params:
      internalAccountTransferId: internalAccountTransferId
- name: Spot Trades
  endpoint:
    path: /spot
    method: GET
- name: Held Rates
  endpoint:
    path: /heldrates
    method: GET
- name: Forward Contracts
  endpoint:
    path: /forward
    method: GET
- name: Trade Reporting
  endpoint:
    path: /tradereporting
    method: GET
- name: Credit Reporting
  endpoint:
    path: /credit-reporting
    method: GET
- name: Estimate
  endpoint:
    path: /estimate
    method: GET
    data_selector: null
    params: {}
- name: currency_accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: Accounts
    params: {}
- name: currency_account_by_id
  endpoint:
    path: /api/v1/accounts/{AccountId}
    method: GET
    data_selector: Account
    params: {}
- name: spot_quote
  endpoint:
    path: /spotquote
    method: POST
- name: spot_trade
  endpoint:
    path: /spottrade
    method: POST
- name: balances
  endpoint:
    path: /api/v1/balances
    method: GET
    data_selector: Balances
    params: {}
- name: request_held_rate
  endpoint:
    path: /quotes/held-rate
    method: POST
    data_selector: ''
    params: {}
- name: book_trade
  endpoint:
    path: /trades/held-rate
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_active_quotes
  endpoint:
    path: /quotes/held-rate
    method: GET
    data_selector: ''
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: Transactions
    params:
      AccountId: required
      From: ''
      To: ''
      CreditOrDebit: ''
      Iban: ''
      PageNumber: ''
- name: request_quote
  endpoint:
    path: /forward/quote
    method: GET
- name: book_forward_trade
  endpoint:
    path: /forward/book
    method: POST
- name: initial_margin_settlement
  endpoint:
    path: /trade/initial_margin
    method: GET
- name: statements
  endpoint:
    path: /api/v1/statements
    method: GET
    data_selector: Statement
    params:
      AccountId: required
      From: ''
      To: ''
      PageNumber: ''
- name: trades
  endpoint:
    path: /v1/fx/trades
    method: GET
    data_selector: trades
    params: {}
- name: individual_trade
  endpoint:
    path: /v1/fx/trades/forwards/tradeID
    method: GET
    data_selector: tradeDetails
    params: {}
- name: drawdown_request
  endpoint:
    path: /v1/fx/trades/forwards/drawdowns
    method: POST
    data_selector: drawdownResponse
    params: {}
- name: drawdown_information
  endpoint:
    path: /v1/fx/trades/forwards/tradeID/drawdowns
    method: GET
    data_selector: drawdownInfo
    params: {}
- name: get_trade
  endpoint:
    path: /gettrade
    method: GET
    params:
      TradeID: ''
- name: get_trades
  endpoint:
    path: /gettrades
    method: GET
    params:
      entityId: ''
      trade_type: ''
      order_date: ''
      value_date: ''
      currency: ''
      amount: ''
- name: validate_beneficiary
  endpoint:
    path: /beneficiaries/validate
    method: POST
- name: create_beneficiary
  endpoint:
    path: /beneficiaries
    method: POST
- name: retrieve_beneficiary
  endpoint:
    path: /beneficiaries/{BeneficiaryID}
    method: GET
- name: retrieve_all_beneficiaries
  endpoint:
    path: /beneficiaries
    method: GET
- name: update_beneficiary_address
  endpoint:
    path: /beneficiaries/{BeneficiaryID}
    method: PUT
- name: delete_beneficiary
  endpoint:
    path: /beneficiaries/{BeneficiaryID}
    method: DELETE
- name: credit_facilities
  endpoint:
    path: /credit_facilities
    method: GET
- name: credit_terms
  endpoint:
    path: /credit_terms
    method: GET
- name: credit_letter
  endpoint:
    path: /credit_letter
    method: GET
- name: mtm_reporting
  endpoint:
    path: /v1/credit-facilities/mtm/trade
    method: GET
- name: validate_payment
  endpoint:
    path: /v1/payments/validate
    method: POST
- name: verify_payee
  endpoint:
    path: /v1/payments/verification
    method: POST
- name: create_payment
  endpoint:
    path: /v1/payments
    method: POST
- name: retrieve_payment_details
  endpoint:
    path: /v1/payments/{paymentId}
    method: GET
- name: retrieve_all_payments_details
  endpoint:
    path: /v1/payments
    method: GET
- name: retrieve_payment_confirmation_document
  endpoint:
    path: /v1/payments/confirmation/{paymentId}
    method: GET
- name: retrieve_purpose_of_payment
  endpoint:
    path: /v1/payments/purpose
    method: GET
- name: internal_account_transfers
  endpoint:
    path: /v1/internal-account-transfers
    method: GET
- name: currency_accounts
  endpoint:
    path: /v1/accounts
    method: GET
- name: spot_trades
  endpoint:
    path: /spot
    method: GET
- name: held_rates
  endpoint:
    path: /heldrates
    method: GET
- name: forward_contracts
  endpoint:
    path: /forward
    method: GET
- name: trade_reporting
  endpoint:
    path: /tradereporting
    method: GET
- name: credit_reporting
  endpoint:
    path: /credit-reporting
    method: GET
- name: Estimate
  endpoint:
    path: /estimate
    method: GET
    data_selector: market_rate
- name: spot_quote
  endpoint:
    path: /spotquote
    method: POST
- name: spot_trade
  endpoint:
    path: /spottrade
    method: POST
- name: held_rate_quotes
  endpoint:
    path: /quotes/held-rate
    method: GET
- name: request_held_rate
  endpoint:
    path: /quotes/held-rate
    method: POST
- name: book_trade
  endpoint:
    path: /trades/held-rate
    method: POST
- name: request_quote
  endpoint:
    path: /forward/quote
    method: GET
- name: book_forward_trade
  endpoint:
    path: /forward/book
    method: POST
- name: initial_margin_settlement
  endpoint:
    path: /trade/initial_margin
    method: GET
- name: trades
  endpoint:
    path: /v1/fx/trades
    method: GET
- name: individual_trade
  endpoint:
    path: /v1/fx/trades/forwards/tradeID
    method: GET
- name: drawdown_request
  endpoint:
    path: /v1/fx/trades/forwards/drawdowns
    method: POST
- name: drawdown_information
  endpoint:
    path: /v1/fx/trades/forwards/tradeID/drawdowns
    method: GET
- name: get trades
  endpoint:
    path: /gettrades
    method: GET
    params:
      entityId: identifier of the legal entity
- name: get trade
  endpoint:
    path: /gettrade
    method: GET
    params:
      TradeID: unique identifier assigned to each trade
- name: credit_facilities
  endpoint:
    path: /credit_facilities
    method: GET
- name: credit_terms
  endpoint:
    path: /credit_terms
    method: GET
- name: credit_letter
  endpoint:
    path: /credit_letter
    method: GET
- name: mtm_report
  endpoint:
    path: /v1/credit-facilities/mtm/trade
    method: GET
notes:
- In order to implement our APIs, we recommend you first register as a regulated TPP
  (Third-Party Provider) with the Open Banking Directory.
- The authorisation token needs to be entered into the header.
- Authentication is required to be able to access any of the Alpha Connect services.
- Available to ABS & Risk Management clients
- AccountID is a required field.
- OAuth2 Bearer token required for authorization.
- OAuth2 Bearer token required for authentication.
- Uses OAuth2 with bearer token.
- Book a Spot trade using a QuoteID.
- Updated about 1 month ago
- The endpoint allows you to request a payment confirmation on a submitted payment.
- Credentials are required for OAuth2 authentication.
- Uses OAuth2 Bearer token for authentication
- This endpoint allows you to validate the beneficiary details before submitting a
  request to create the beneficiary.
- The statistics will be published in close proximity to (and will be accessible via)
  our service availability dashboard
- PUT Beneficiary (RM Only)
- Uses OAuth2 with Bearer token.
- We have successfully run the OBIE Functional Conformance Tools against our implementation
  of the Account and Transaction API Specification - v3.1.7
- Endpoint will be secured by way of Mutual Authentication over TLS
- If the PSU revokes consent to data access with the AISP, the AISP must delete the
  account-access-consent resource with the ASPSP as soon as is practically possible.
- A PISP can optionally retrieve a payment consent resource that they have created
  to check its status.
- Bearer token has an expiry time of 1 hour, so you will have to re-request if your
  session is longer than an hour.
- Tokens can have limited scope meaning they will only be able to access certain services
  provided within the API.
- Querying parameters acts as an AND function, not OR.
- Transactions are only returned for a single currency account, AccountId is required.
- As statements are only returned per currency account, there has to be an AccountID
  included in the query.
- Bearer token has an expiry time of 1 hour
- Tokens can have limited scope
- The quote is only valid for 10 seconds.
- If the requested value date is not accepted by the bank, we will dynamically adjust
  it.
- Statements are only returned per currency account with an AccountID
- Querying parameters acts as an AND function, not OR
- Transitioning from the sandbox environment to the API production environment involves
  a few steps to ensure a smooth and successful deployment.
- Request production credentials (API key and secret) from your Alpha contact.
- This step is not required to book a trade, as the estimate is only for reference
  and no QuoteID is provided.
- This type of quote will not be stored and cannot be used for booking, it is only
  for reference and there is no commitment at this stage.
- The quote is valid for 10 seconds.
- Initial margin payment should be made via wire transfer.
- Responses to some API queries are paginated.
- In order to maintain the security and integrity of our bank account reporting API,
  we have implemented limits on how far back in time clients can request data.
- API keys must be stored securely, avoiding hardcoding them in source code or configuration
  files.
- We are dedicated to providing you with exceptional support in managing your API
  connection.
- The supported authentication method is username & SSH key.
- 'SSH Key Algorithms: RSA (recommended), ECDSA, EdDSA.'
- 'Recommended Key size: 4096 bits.'
- Our SFTP solution uses IP whitelisting.
- Our sandbox environment closely mimics the behaviour of the production environment,
  providing developers with a realistic simulation of how the API functions in a live
  scenario.
- The sandbox is completely disconnected from production systems and there is no risk
  in experimenting with the various API functionalities, making test requests, and
  simulating different scenarios.
- Ensure that all API requests are made over HTTPS
- You can test APIs right away by forking the Postman collection.
- If you require any logging history to assist with your development, please let us
  know and we'll be happy to assist.
- 'SSH Key Algorithms: RSA (recommended), ECDSA, EdDSA'
- 'Recommended Key size: 4096 bits'
- 'File types supported: CAMT53 and MT940 files.'
- Tokens can have limited scope meaning they will only be able to access certain services
- Requests must utilise HTTPS; requests made via plain HTTP will result in failure.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '400: There were errors in the request.'
- '401: Unauthorized.'
- '403: Forbidden.'
- '404: Resource not found.'
- 500 Internal server error
- '409: Duplicate request.'
- 400 There were errors in the request.
- 401 Unauthorized.
- 403 Forbidden.
- 404 Resource not found.
- 409 Duplicate request.
- 500 Internal server error.
- 400 Payment is invalid.
- '400'
- 401 Unauthorized
- 403 Forbidden
- '404'
- '429'
- '409: Matching idempotency key within 24 hours.'
- '429: Too Many Requests'
- '200'
- '500'
- '405: Method Not Allowed'
- '400: Invalid request, check parameters'
- '401: Unauthorized access, check authentication'
- '403: Forbidden, access denied'
- '404: Resource not found'
- '405: Method not allowed'
- '429: Too many requests, rate limit exceeded'
- '400: ErrorCode, Message, Path, Url'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400: Invalid request parameters'
- '401: Unauthorized access'
- '403: Forbidden access'
- '429: Too many requests'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '400: Error with request'
- 400 Bad Request
- '401 Unauthorized: Prompt the user to re-authenticate by getting a new token'
- '400 Bad Request: If your request contains invalid parameters or is improperly formatted,
  the API will return a 400 Bad Request error. To handle this error, validate the
  input parameters before making the request and provide clear error messages to the
  user indicating the nature of the issue.'
- '401 Unauthorized: If your request lacks proper authentication credentials (such
  as an invalid or missing API key), the API will return a 401 Unauthorized error.
  To handle this error, prompt the user to provide valid authentication credentials
  or retry the request with the correct credentials.'
- '403 Forbidden: If you attempt to access resources or perform actions for which
  you do not have sufficient permissions, the API will return a 403 Forbidden error.
  To handle this error, ensure that the user has the necessary permissions to perform
  the requested action, and if not, prompt them to contact the administrator or request
  the required permissions.'
- '404 Not Found: If the requested resource does not exist or cannot be found, the
  API will return a 404 Not Found error. To handle this error, verify that the resource
  URL is correct and exists within the API''s scope. If the resource does not exist,
  provide appropriate feedback to the user.'
- '409 Conflict: The client''s request could not be processed because it encountered
  a conflict or was already processed earlier. A conflict occurs when two or more
  API requests are processed simultaneously and this can result in duplicates or undesirable
  states. We are using Idempotency-Key to protect system from duplicate payments.'
- '429 Too Many Requests: If you exceed the rate limit for API requests, the API will
  return a 429 Too Many Requests error. To handle this error, implement rate limiting
  on your end to ensure that you do not exceed the allowed number of requests within
  the specified time frame. You can also implement backoff strategies such as exponential
  backoff to retry failed requests after a certain delay.'
- '5xx Server Errors: If the API encounters an unexpected error on the server side,
  it will return a 5xx Server Error. To handle this error, retry the request after
  a short delay. If the error persists, contact our support team for assistance.'
- 'invalid_request: A required parameter is missing from the request. grant_type,
  client_id, and client_secret must be supplied.'
- 'invalid_client: Verify that the client ID and secret values provided are accurate.'
- 'invalid_scope: Make sure the scope environment you are using is accurate, for example,
  "preprod-api" vs. "prod-api".'
- 'invalid_grant: The application does not have the scope that you have requested.
  Kindly get in touch with your business contact.'
- 'unsupported_grant_type: Invalid grant_type value was requested. Use client_credentials
  grant type.'
- '429: Exceeding limits will result in an error being returned.'
- '401 Unauthorized: Please handle these errors gracefully and prompt the user to
  re-authenticate'
- '400 Bad Request: If your request contains invalid parameters or is improperly formatted,
  validate the input parameters before making the request.'
- '401 Unauthorized: If your request lacks proper authentication credentials, prompt
  the user to provide valid authentication credentials.'
- '403 Forbidden: If you attempt to access resources or perform actions for which
  you do not have sufficient permissions, ensure that the user has the necessary permissions.'
- '404 Not Found: If the requested resource does not exist or cannot be found, verify
  that the resource URL is correct.'
- '409 Conflict: The client''s request could not be processed because it encountered
  a conflict or was already processed earlier.'
- '429 Too Many Requests: If you exceed the rate limit for API requests, implement
  rate limiting on your end.'
- '5xx Server Errors: If the API encounters an unexpected error on the server side,
  retry the request after a short delay.'
- invalid_request
- invalid_client
- invalid_scope
- invalid_grant
- unsupported_grant_type
- '429: Exceeding rate limits'
- '401 Unauthorized: Handle authentication errors gracefully'
auth_info:
  mentioned_objects:
  - Client ID
  - Client Secret
client:
  base_url: https://sandbox.api.alphagroup.com
  auth:
    type: oauth2
    flow: client_credentials
    location: header
    header_name: Authorization
source_metadata: null
