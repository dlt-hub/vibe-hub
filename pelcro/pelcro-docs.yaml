resources:
- name: customers
  endpoint:
    path: /api-core-customers
    method: GET
    data_selector: customers
- name: subscriptions
  endpoint:
    path: /api-open-subscription
    method: POST
    data_selector: subscriptions
- name: SKU
  endpoint:
    path: /reference/api-core-get-sku
    method: GET
- name: customers
  endpoint:
    path: /api-core-customers
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /api-core-list-ecommerce-orders
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: data
    params: {}
- name: Customers
  endpoint:
    path: /migration/pelcro_customers_template.csv
    method: GET
    data_selector: records
    params: {}
- name: Subscriptions
  endpoint:
    path: /migration/pelcro_subscriptions_template.csv
    method: GET
    data_selector: records
    params: {}
- name: Addresses
  endpoint:
    path: /migration/pelcro_address_template.csv
    method: GET
    data_selector: records
    params: {}
- name: Plans
  endpoint:
    path: /migration/pelcro_plans_template.csv
    method: GET
    data_selector: records
    params: {}
- name: Products
  endpoint:
    path: /migration/pelcro_products_template.csv
    method: GET
    data_selector: records
    params: {}
- name: Memberships
  endpoint:
    path: /migration/pelcro_memberships_template.csv
    method: GET
    data_selector: records
    params: {}
- name: Invoices
  endpoint:
    path: /migration/pelcro_migration_template_invoice.csv
    method: GET
    data_selector: records
    params: {}
- name: Charges
  endpoint:
    path: /migration/pelcro_migration_template_Offline_charges.csv
    method: GET
    data_selector: records
    params: {}
- name: Newsletters
  endpoint:
    path: /migration/pelcro_migration_template_newsletter.csv
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: POST
    data_selector: customers
    params: {}
- name: addresses
  endpoint:
    path: /addresses
    method: POST
    data_selector: addresses
    params: {}
- name: products
  endpoint:
    path: /products
    method: POST
    data_selector: products
    params: {}
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: plans
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscriptions
- name: memberships
  endpoint:
    path: /memberships
    method: POST
    data_selector: memberships
- name: invoices
  endpoint:
    path: /invoices
    method: POST
    data_selector: invoices
- name: offline_charges
  endpoint:
    path: /offline_charges
    method: POST
    data_selector: offline_charges
- name: newsletters
  endpoint:
    path: /newsletters
    method: POST
    data_selector: newsletters
- name: Customers
  endpoint:
    path: /migration/pelcro_customers_template.csv
    method: GET
    data_selector: records
    params: {}
- name: Subscriptions
  endpoint:
    path: /migration/pelcro_subscriptions_template.csv
    method: GET
    data_selector: records
    params: {}
- name: Addresses
  endpoint:
    path: /migration/pelcro_address_template.csv
    method: GET
    data_selector: records
    params: {}
- name: Plans
  endpoint:
    path: /migration/pelcro_plans_template.csv
    method: GET
    data_selector: records
    params: {}
- name: Products
  endpoint:
    path: /migration/pelcro_products_template.csv
    method: GET
    data_selector: records
    params: {}
- name: Memberships
  endpoint:
    path: /migration/pelcro_memberships_template.csv
    method: GET
    data_selector: records
    params: {}
- name: Invoices
  endpoint:
    path: /migration/pelcro_migration_template_invoice.csv
    method: GET
    data_selector: records
    params: {}
- name: Charges
  endpoint:
    path: /migration/pelcro_migration_template_Offline_charges.csv
    method: GET
    data_selector: records
    params: {}
- name: Newsletters
  endpoint:
    path: /migration/pelcro_migration_template_newsletter.csv
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /api/customers
    method: POST
    data_selector: customers
    params: {}
- name: addresses
  endpoint:
    path: /api/addresses
    method: POST
    data_selector: addresses
    params: {}
- name: products
  endpoint:
    path: /api/products
    method: POST
    data_selector: products
    params: {}
- name: plans
  endpoint:
    path: /api/plans
    method: POST
    data_selector: plans
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: subscriptions
    params: {}
- name: memberships
  endpoint:
    path: /memberships
    method: POST
    data_selector: memberships
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: POST
    data_selector: invoices
    params: {}
- name: offline_charges
  endpoint:
    path: /offline_charges
    method: POST
    data_selector: offline_charges
    params: {}
- name: newsletters
  endpoint:
    path: /newsletters
    method: POST
    data_selector: newsletters
    params: {}
- name: collaborators
  endpoint:
    path: /api/collaborators
    method: GET
    data_selector: collaborators
    params: {}
- name: automated_emails
  endpoint:
    path: /automated-emails
    method: GET
    data_selector: emails
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
- name: automated_emails
  endpoint:
    path: /docs/automated-emails
    method: GET
    data_selector: emails
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
    params: {}
- name: customer_address
  endpoint:
    path: /customers/addresses
    method: GET
    data_selector: addresses
- name: customer_metadata
  endpoint:
    path: /customer/metadata
    method: POST
    data_selector: data
    params: {}
- name: subscription_metadata
  endpoint:
    path: /subscription/metadata
    method: POST
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
    params: {}
- name: customer_address
  endpoint:
    path: /customers/addresses
    method: GET
    data_selector: addresses
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: plans
    params: {}
- name: customer_metadata
  endpoint:
    path: /metadata/customer
    method: POST
    data_selector: metadata
    params: {}
- name: subscription_metadata
  endpoint:
    path: /metadata/subscription
    method: POST
    data_selector: metadata
    params: {}
- name: SKU
  endpoint:
    path: /ecommerce/skus
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
- name: members
  endpoint:
    path: /members
    method: GET
    data_selector: members
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: plans
  endpoint:
    path: /api/plans
    method: GET
    data_selector: plans
    params: {}
- name: newsletters
  endpoint:
    path: /api/newsletters
    method: GET
- name: newsletters
  endpoint:
    path: /newsletters
    method: GET
    data_selector: newsletters
    params: {}
- name: orders
  endpoint:
    path: /ecommerce/orders
    method: GET
    data_selector: orders
    params: {}
- name: SKU
  endpoint:
    path: /ecommerce/skus
    method: GET
    data_selector: skus
    params: {}
- name: Customer Metadata
  endpoint:
    path: /api/customer_metadata
    method: GET
    data_selector: data
    params: {}
- name: Subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: memberships
  endpoint:
    path: /api/memberships
    method: GET
    data_selector: memberships
- name: membership_plans
  endpoint:
    path: /api/membership_plans
    method: POST
    data_selector: membership_plans
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
    params: {}
- name: members
  endpoint:
    path: /members
    method: GET
    data_selector: records
- name: invoices
  endpoint:
    path: /reference#api-core-list-invoices
    method: GET
    data_selector: invoices
- name: gift_subscription
  endpoint:
    path: /gifts
    method: POST
    data_selector: subscription_data
- name: newsletters
  endpoint:
    path: /newsletters
    method: GET
    data_selector: records
- name: credit_notes
  endpoint:
    path: /credit-notes
    method: GET
    data_selector: credit_notes
    params: {}
- name: newsletters
  endpoint:
    path: /newsletters
    method: GET
    data_selector: newsletters
- name: newsletter_details
  endpoint:
    path: /newsletters/{id}
    method: GET
    data_selector: newsletter
- name: create_newsletter
  endpoint:
    path: /newsletters
    method: POST
    data_selector: newsletter
- name: delete_newsletter
  endpoint:
    path: /newsletters/{id}
    method: DELETE
    data_selector: message
- name: export_newsletter
  endpoint:
    path: /newsletters/export
    method: GET
    data_selector: export
- name: create_coupon
  endpoint:
    path: /coupons
    method: POST
    data_selector: coupon
    params: {}
- name: coupon_reports
  endpoint:
    path: /coupons/reports
    method: GET
    data_selector: reports
    params: {}
- name: orders
  endpoint:
    path: /ecommerce/orders
    method: GET
    data_selector: orders
    params: {}
- name: customer_balance
  endpoint:
    path: /customer/balance
    method: GET
    data_selector: balance
    params: {}
- name: invoices
  endpoint:
    path: /billing/invoices
    method: GET
    data_selector: invoices
- name: lists
  endpoint:
    path: /api/lists
    method: GET
    data_selector: lists
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
- name: segments
  endpoint:
    path: /segments
    method: GET
    data_selector: segments
    params: {}
- name: payment_methods
  endpoint:
    path: /api/payment_methods
    method: GET
    data_selector: paymentMethods
    params: {}
- name: offline_payments
  endpoint:
    path: /api/offline_payments
    method: POST
    data_selector: paymentRecord
    params:
      amount: ''
      category: ''
      currency: ''
      reference: ''
- name: credit_notes
  endpoint:
    path: /credit-notes
    method: GET
    data_selector: credit_notes
    params: {}
- name: refunds
  endpoint:
    path: /v1.91/refunds
    method: GET
    data_selector: refunds
    params: {}
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    data_selector: coupons
    params: {}
- name: campaigns
  endpoint:
    path: /api/v1/campaigns
    method: GET
    data_selector: data
    params: {}
- name: customer_balance
  endpoint:
    path: /customer/balance
    method: GET
    data_selector: balance
    params: {}
- name: automations
  endpoint:
    path: /api/v1/automations
    method: GET
    data_selector: automations
    params: {}
- name: subscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: data
- name: lists
  endpoint:
    path: /api/v1/lists
    method: GET
    data_selector: data
- name: segments
  endpoint:
    path: /segments
    method: GET
    data_selector: segments
    params: {}
- name: segments
  endpoint:
    path: /api/segments
    method: GET
- name: USPS Qualification Report
  endpoint:
    path: /usps/qualification_report
    method: GET
    data_selector: report_data
- name: Postage Statement
  endpoint:
    path: /usps/postage_statement
    method: GET
    data_selector: statement_data
- name: CASS Summary Report
  endpoint:
    path: /usps/cass_summary_report
    method: GET
    data_selector: cass_data
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: records
- name: memberships
  endpoint:
    path: /memberships
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: records
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: records
- name: refunds
  endpoint:
    path: /refunds
    method: GET
    data_selector: records
- name: taxes
  endpoint:
    path: /taxes
    method: GET
    data_selector: records
- name: customer_balances
  endpoint:
    path: /customer_balances
    method: GET
    data_selector: records
- name: credit_notes
  endpoint:
    path: /credit_notes
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: records
- name: newsletters
  endpoint:
    path: /newsletters
    method: GET
    data_selector: records
- name: subscription_lists
  endpoint:
    path: /subscription_lists
    method: GET
    data_selector: records
- name: subscription_segments
  endpoint:
    path: /subscription_segments
    method: GET
    data_selector: records
- name: customer_segments
  endpoint:
    path: /customer_segments
    method: GET
    data_selector: records
- name: fulfillments
  endpoint:
    path: /fulfillments
    method: GET
    data_selector: records
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: campaign_runs
  endpoint:
    path: /campaign_runs
    method: GET
    data_selector: records
- name: campaigns
  endpoint:
    path: /api/campaigns
    method: GET
    data_selector: records
    params: {}
- name: campaign
  endpoint:
    path: /docs/event-campaign-triggered
    method: GET
- name: campaign_by_id_or_key
  endpoint:
    path: /reference/get-campaign-by-id-or-key
    method: GET
- name: Gross Volume
  endpoint:
    path: /reports/gross_volume
    method: GET
- name: Refunds
  endpoint:
    path: /reports/refunds
    method: GET
- name: Subscriptions by Sales Rep
  endpoint:
    path: /reports/subscriptions_by_sales_rep
    method: GET
- name: New Subscriptions
  endpoint:
    path: /reports/new_subscriptions
    method: GET
- name: Subscriptions by payment type
  endpoint:
    path: /reports/subscriptions_by_payment_type
    method: GET
- name: New Phases
  endpoint:
    path: /reports/new_phases
    method: GET
- name: Active Subscriptions
  endpoint:
    path: /reports/active_subscriptions
    method: GET
- name: Churned Subscriptions
  endpoint:
    path: /reports/churned_subscriptions
    method: GET
- name: Canceled Subscriptions
  endpoint:
    path: /reports/canceled_subscriptions
    method: GET
- name: Expired Subscriptions
  endpoint:
    path: /reports/expired_subscriptions
    method: GET
- name: Charges by Depositor
  endpoint:
    path: /reports/charges_by_depositor
    method: GET
- name: Product/Plan Renewal Rate
  endpoint:
    path: /reports/product_plan_renewal_rate
    method: GET
- name: Shipments Renewal
  endpoint:
    path: /reports/shipments_renewal
    method: GET
- name: Subscriptions by source
  endpoint:
    path: /reports/subscriptions_by_source
    method: GET
- name: Subscriptions by location
  endpoint:
    path: /reports/subscriptions_by_location
    method: GET
- name: Subscriptions by coupon
  endpoint:
    path: /reports/subscriptions_by_coupon
    method: GET
- name: Invoices by coupon
  endpoint:
    path: /reports/invoices_by_coupon
    method: GET
- name: subscriptions_by_coupon
  endpoint:
    path: /reports/subscriptions_by_coupon
    method: GET
    data_selector: records
    params: {}
- name: subscriptions_by_gifts
  endpoint:
    path: /reports/subscriptions_by_gifts
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: customers
- name: addresses
  endpoint:
    path: /api/v1/addresses
    method: GET
    data_selector: addresses
- name: subscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: subscriptions
- name: memberships
  endpoint:
    path: /api/v1/memberships
    method: GET
    data_selector: memberships
- name: orders
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: orders
- name: invoices
  endpoint:
    path: /api/v1/invoices
    method: GET
    data_selector: invoices
- name: payments
  endpoint:
    path: /api/v1/payments
    method: GET
    data_selector: payments
- name: refunds
  endpoint:
    path: /api/v1/refunds
    method: GET
    data_selector: refunds
- name: taxes
  endpoint:
    path: /api/v1/taxes
    method: GET
    data_selector: taxes
- name: customer_balances
  endpoint:
    path: /api/v1/customer_balances
    method: GET
    data_selector: customer_balances
- name: credit_notes
  endpoint:
    path: /api/v1/credit_notes
    method: GET
    data_selector: credit_notes
- name: standard_reports
  endpoint:
    path: /standard/reports
    method: GET
    data_selector: reports
    params: {}
- name: Sales Tax Rates
  endpoint:
    path: /docs/tax-reference
    method: GET
    data_selector: tax_rates
    params: {}
- name: subscriptions_by_coupon
  endpoint:
    path: /reports/subscriptions_by_coupon
    method: GET
    data_selector: data
    params:
      export_data_points: datetime,coupon_name,count
- name: subscriptions_by_gifts
  endpoint:
    path: /reports/subscriptions_by_gifts
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: ledger_accounts
  endpoint:
    path: /api/v1/ledger_accounts
    method: GET
    data_selector: ledger_accounts
    params: {}
- name: Stripe
  endpoint:
    path: /docs/stripe
    method: GET
    data_selector: records
- name: WorldPay
  endpoint:
    path: /docs/vantiv
    method: GET
    data_selector: records
- name: Tap Payments
  endpoint:
    path: /docs/tap
    method: GET
    data_selector: records
- name: Braintree
  endpoint:
    path: /docs/braintree
    method: GET
    data_selector: records
- name: Cybersource
  endpoint:
    path: /docs/cybersource
    method: GET
    data_selector: records
- name: Accounts Receivable
  endpoint:
    path: /accounts-receivable
    method: GET
    data_selector: records
- name: Deferred Revenue
  endpoint:
    path: /deferred-revenue
    method: GET
    data_selector: records
- name: Taxes
  endpoint:
    path: /taxes
    method: GET
    data_selector: records
- name: Recognized Revenue
  endpoint:
    path: /recognized-revenue
    method: GET
    data_selector: records
- name: customer
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: data
- name: invoice
  endpoint:
    path: /v1/invoices
    method: GET
    data_selector: data
- name: charge
  endpoint:
    path: /v1/charges
    method: GET
    data_selector: data
- name: subscription
  endpoint:
    path: /v1/subscriptions
    method: GET
    data_selector: data
- name: tax_rates
  endpoint:
    path: /docs/taxes
    method: GET
    data_selector: tax_rates
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: Stripe
  endpoint:
    path: /docs/stripe
    method: GET
- name: WorldPay
  endpoint:
    path: /docs/vantiv
    method: GET
- name: Tap Payments
  endpoint:
    path: /docs/tap
    method: GET
- name: Braintree
  endpoint:
    path: /docs/paypal-integration
    method: GET
- name: Cybersource
  endpoint:
    path: /docs/cybersource
    method: GET
- name: Vantiv Configuration
  endpoint:
    path: /admin/integrations/vantiv
    method: POST
    data_selector: configuration
    params: {}
- name: payment
  endpoint:
    path: /api/payments
    method: POST
    data_selector: payment_response
    params: {}
- name: recommended_plan
  endpoint:
    path: /reference/api-core-update-subscription
    method: POST
    data_selector: recommended_plan_id
    params: {}
- name: customer
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: data
    params: {}
- name: invoice
  endpoint:
    path: /v1/invoices
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: Google Tag ID
  endpoint:
    path: /tracking_id
    method: GET
    data_selector: tracking_id
    params: {}
- name: vantiv_configuration
  endpoint:
    path: /configure/vantiv
    method: POST
    data_selector: configuration_details
    params: {}
- name: Dialog Insight
  endpoint:
    path: /dialog-insight
    method: GET
    data_selector: ''
    params: {}
- name: Darwin CX
  endpoint:
    path: /darwin-cx
    method: GET
    data_selector: ''
    params: {}
- name: Google Tag Manager
  endpoint:
    path: /google-tag-manager
    method: GET
    data_selector: ''
    params: {}
- name: Klaviyo
  endpoint:
    path: /klaviyo
    method: GET
    data_selector: ''
    params: {}
- name: MailChimp
  endpoint:
    path: /mailchimp
    method: GET
    data_selector: ''
    params: {}
- name: MAPP Empower
  endpoint:
    path: /mapp
    method: GET
    data_selector: ''
    params: {}
- name: Omeda
  endpoint:
    path: /omeda
    method: GET
    data_selector: ''
    params: {}
- name: SendGrid
  endpoint:
    path: /sendgrid
    method: GET
    data_selector: ''
    params: {}
- name: payment
  endpoint:
    path: /payments
    method: POST
    data_selector: transaction
    params: {}
- name: subscription_update
  endpoint:
    path: /reference/api-core-update-subscription
    method: POST
    data_selector: data
    params: {}
- name: project_id
  endpoint:
    path: /configuration/project_id
    method: POST
- name: scenario_project_id
  endpoint:
    path: /configuration/scenario_project_id
    method: POST
- name: subscription_table_id
  endpoint:
    path: /configuration/subscription_table_id
    method: POST
- name: invoice_table_id
  endpoint:
    path: /configuration/invoice_table_id
    method: POST
- name: customer_created_scenario_id
  endpoint:
    path: /configuration/customer_created_scenario_id
    method: POST
- name: customer_reset_password_scenario_id
  endpoint:
    path: /configuration/customer_reset_password_scenario_id
    method: POST
- name: subscription_created_scenario_id
  endpoint:
    path: /configuration/subscription_created_scenario_id
    method: POST
- name: invoice_created_scenario_id
  endpoint:
    path: /configuration/invoice_created_scenario_id
    method: POST
- name: customer
  endpoint:
    path: /customer/updated
    method: POST
- name: address
  endpoint:
    path: /address/created
    method: POST
- name: subscription
  endpoint:
    path: /subscription/created
    method: POST
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: Dialog Insight
  endpoint:
    path: /dialog-insight
    method: GET
- name: Darwin CX
  endpoint:
    path: /darwin-cx
    method: GET
- name: Google Tag Manager
  endpoint:
    path: /google-tag-manager
    method: GET
- name: Klaviyo
  endpoint:
    path: /klaviyo
    method: GET
- name: MailChimp
  endpoint:
    path: /mailchimp
    method: GET
- name: MAPP Empower
  endpoint:
    path: /mapp
    method: GET
- name: Omeda
  endpoint:
    path: /omeda
    method: GET
- name: SendGrid
  endpoint:
    path: /sendgrid
    method: GET
- name: lists
  endpoint:
    path: /lists
    method: POST
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: data
    params: {}
- name: customer_created_scenario
  endpoint:
    path: /api/scenarios/customer_created
    method: POST
- name: customer_reset_password_scenario
  endpoint:
    path: /api/scenarios/customer_reset_password
    method: POST
- name: subscription_created_scenario
  endpoint:
    path: /api/scenarios/subscription_created
    method: POST
- name: invoice_created_scenario
  endpoint:
    path: /api/scenarios/invoice_created
    method: POST
- name: customer
  endpoint:
    path: /customer/updated
    method: POST
    data_selector: customer_data
- name: address
  endpoint:
    path: /address/created
    method: POST
    data_selector: address_data
- name: subscription
  endpoint:
    path: /subscription/created
    method: POST
    data_selector: subscription_data
- name: templates
  endpoint:
    path: /api/templates
    method: POST
    data_selector: templates
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: events
- name: subscription_conversion
  endpoint:
    path: /events/subscription
    method: POST
    data_selector: data
    params: {}
- name: member_events
  endpoint:
    path: /member/events
    method: GET
    data_selector: records
- name: order_events
  endpoint:
    path: /order/events
    method: GET
    data_selector: records
- name: payment_method_events
  endpoint:
    path: /payment_method/events
    method: GET
    data_selector: records
- name: campaign_events
  endpoint:
    path: /campaign/events
    method: GET
    data_selector: records
- name: charge_events
  endpoint:
    path: /charge/events
    method: GET
    data_selector: records
- name: lists
  endpoint:
    path: /lists
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: data
- name: customer_created
  endpoint:
    path: /customer.created
    method: POST
    data_selector: records
- name: customer_updated
  endpoint:
    path: /customer.updated
    method: POST
    data_selector: records
- name: subscription_created
  endpoint:
    path: /subscription.created
    method: POST
    data_selector: records
- name: subscription_updated
  endpoint:
    path: /subscription.updated
    method: POST
    data_selector: records
- name: invoice_created
  endpoint:
    path: /invoice.created
    method: POST
    data_selector: records
- name: invoice_updated
  endpoint:
    path: /invoice.updated
    method: POST
    data_selector: records
- name: member_events
  endpoint:
    path: /member/events
    method: GET
    data_selector: records
- name: order_events
  endpoint:
    path: /order/events
    method: GET
    data_selector: records
- name: payment_method_events
  endpoint:
    path: /payment_method/events
    method: GET
    data_selector: records
- name: campaign_events
  endpoint:
    path: /campaign/events
    method: GET
    data_selector: records
- name: charge_events
  endpoint:
    path: /charge/events
    method: GET
    data_selector: records
- name: customer_created
  endpoint:
    path: /events/customer_created
    method: POST
    data_selector: attached_event_data
- name: customer_updated
  endpoint:
    path: /events/customer_updated
    method: POST
    data_selector: attached_event_data
- name: customer_reset_password
  endpoint:
    path: /events/customer_reset_password
    method: POST
    data_selector: attached_event_data
- name: email_verification_request
  endpoint:
    path: /events/email_verification_request
    method: POST
    data_selector: attached_event_data
- name: customer_deleted
  endpoint:
    path: /events/customer_deleted
    method: POST
    data_selector: attached_event_data
- name: email_verification_succeeded
  endpoint:
    path: /events/email_verification_succeeded
    method: POST
    data_selector: attached_event_data
- name: subscription_created
  endpoint:
    path: /events/subscription_created
    method: POST
    data_selector: attached_event_data
- name: subscription_updated
  endpoint:
    path: /events/subscription_updated
    method: POST
    data_selector: attached_event_data
- name: subscription_canceled
  endpoint:
    path: /events/subscription_canceled
    method: POST
    data_selector: attached_event_data
- name: subscription_trialwillend
  endpoint:
    path: /events/subscription_trialwillend
    method: POST
    data_selector: attached_event_data
- name: subscription_renewed
  endpoint:
    path: /events/subscription_renewed
    method: POST
    data_selector: attached_event_data
- name: subscription_expired
  endpoint:
    path: /events/subscription_expired
    method: POST
    data_selector: attached_event_data
- name: subscription_gift_donor
  endpoint:
    path: /events/subscription_gift_donor
    method: POST
    data_selector: attached_event_data
- name: subscription_gift_notification
  endpoint:
    path: /events/subscription_gift_notification
    method: POST
    data_selector: attached_event_data
- name: subscription_gift_recipient
  endpoint:
    path: /events/subscription_gift_recipient
    method: POST
    data_selector: attached_event_data
- name: invoice_created
  endpoint:
    path: /events/invoice_created
    method: POST
    data_selector: attached_event_data
- name: invoice_upcoming
  endpoint:
    path: /events/invoice_upcoming
    method: POST
    data_selector: attached_event_data
- name: invoice_payment_succeeded
  endpoint:
    path: /events/invoice_payment_succeeded
    method: POST
    data_selector: attached_event_data
- name: invoice_payment_failed
  endpoint:
    path: /events/invoice_payment_failed
    method: POST
    data_selector: attached_event_data
- name: charge_succeeded
  endpoint:
    path: /events/charge_succeeded
    method: POST
    data_selector: attached_event_data
- name: charge_failed
  endpoint:
    path: /events/charge_failed
    method: POST
    data_selector: attached_event_data
- name: charge_refunded
  endpoint:
    path: /events/charge_refunded
    method: POST
    data_selector: attached_event_data
- name: source_expiring
  endpoint:
    path: /events/source_expiring
    method: POST
    data_selector: attached_event_data
- name: source_canceled
  endpoint:
    path: /events/source_canceled
    method: POST
    data_selector: attached_event_data
- name: address_created
  endpoint:
    path: /events/address_created
    method: POST
    data_selector: attached_event_data
- name: address_updated
  endpoint:
    path: /events/address_updated
    method: POST
    data_selector: attached_event_data
- name: member_created
  endpoint:
    path: /events/member_created
    method: POST
    data_selector: attached_event_data
- name: member_activated
  endpoint:
    path: /events/member_activated
    method: POST
    data_selector: attached_event_data
- name: campaign_triggered
  endpoint:
    path: /events/campaign_triggered
    method: POST
    data_selector: attached_event_data
- name: customer_created
  endpoint:
    path: /events/customer_created
    method: POST
    data_selector: data
- name: customer_updated
  endpoint:
    path: /events/customer_updated
    method: POST
    data_selector: data
- name: subscription_created
  endpoint:
    path: /events/subscription_created
    method: POST
    data_selector: data
- name: subscription_updated
  endpoint:
    path: /events/subscription_updated
    method: POST
    data_selector: data
- name: subscription_canceled
  endpoint:
    path: /events/subscription_canceled
    method: POST
    data_selector: data
- name: invoice_created
  endpoint:
    path: /events/invoice_created
    method: POST
    data_selector: data
- name: customer_created
  endpoint:
    path: /events/customer_created
    method: POST
    data_selector: event_data
- name: customer_updated
  endpoint:
    path: /events/customer_updated
    method: POST
    data_selector: event_data
- name: customer_reset_password
  endpoint:
    path: /events/customer_reset_password
    method: POST
    data_selector: event_data
- name: email_verification_request
  endpoint:
    path: /events/email_verification_request
    method: POST
    data_selector: event_data
- name: customer_deleted
  endpoint:
    path: /events/customer_deleted
    method: POST
    data_selector: event_data
- name: email_verification_succeeded
  endpoint:
    path: /events/email_verification_succeeded
    method: POST
    data_selector: event_data
- name: subscription_created
  endpoint:
    path: /events/subscription_created
    method: POST
    data_selector: event_data
- name: subscription_updated
  endpoint:
    path: /events/subscription_updated
    method: POST
    data_selector: event_data
- name: subscription_canceled
  endpoint:
    path: /events/subscription_canceled
    method: POST
    data_selector: event_data
- name: subscription_trialwillend
  endpoint:
    path: /events/subscription_trialwillend
    method: POST
    data_selector: event_data
- name: subscription_renewed
  endpoint:
    path: /events/subscription_renewed
    method: POST
    data_selector: event_data
- name: subscription_expired
  endpoint:
    path: /events/subscription_expired
    method: POST
    data_selector: event_data
- name: subscription_gift_donor
  endpoint:
    path: /events/subscription_gift_donor
    method: POST
    data_selector: event_data
- name: subscription_gift_notification
  endpoint:
    path: /events/subscription_gift_notification
    method: POST
    data_selector: event_data
- name: subscription_gift_recipient
  endpoint:
    path: /events/subscription_gift_recipient
    method: POST
    data_selector: event_data
- name: invoice_created
  endpoint:
    path: /events/invoice_created
    method: POST
    data_selector: event_data
- name: invoice_upcoming
  endpoint:
    path: /events/invoice_upcoming
    method: POST
    data_selector: event_data
- name: invoice_payment_succeeded
  endpoint:
    path: /events/invoice_payment_succeeded
    method: POST
    data_selector: event_data
- name: invoice_payment_failed
  endpoint:
    path: /events/invoice_payment_failed
    method: POST
    data_selector: event_data
- name: charge_succeeded
  endpoint:
    path: /events/charge_succeeded
    method: POST
    data_selector: event_data
- name: charge_failed
  endpoint:
    path: /events/charge_failed
    method: POST
    data_selector: event_data
- name: charge_refunded
  endpoint:
    path: /events/charge_refunded
    method: POST
    data_selector: event_data
- name: source_expiring
  endpoint:
    path: /events/source_expiring
    method: POST
    data_selector: event_data
- name: source_canceled
  endpoint:
    path: /events/source_canceled
    method: POST
    data_selector: event_data
- name: address_created
  endpoint:
    path: /events/address_created
    method: POST
    data_selector: event_data
- name: address_updated
  endpoint:
    path: /events/address_updated
    method: POST
    data_selector: event_data
- name: member_created
  endpoint:
    path: /events/member_created
    method: POST
    data_selector: event_data
- name: member_activated
  endpoint:
    path: /events/member_activated
    method: POST
    data_selector: event_data
- name: campaign_triggered
  endpoint:
    path: /events/campaign_triggered
    method: POST
    data_selector: event_data
- name: invoice_payment_failed
  endpoint:
    data_selector: records
- name: charge_succeeded
  endpoint:
    data_selector: records
- name: charge_failed
  endpoint:
    data_selector: records
- name: charge_refunded
  endpoint:
    data_selector: records
- name: address_created
  endpoint:
    data_selector: records
- name: address_updated
  endpoint:
    data_selector: records
- name: source_expiring
  endpoint:
    data_selector: records
- name: source_canceled
  endpoint:
    data_selector: records
- name: customer_created
  endpoint:
    path: /mail/send
    method: POST
    data_selector: dynamic_template_data
    params: {}
- name: customer_reset_password
  endpoint:
    path: /mail/send
    method: POST
    data_selector: dynamic_template_data
    params: {}
- name: subscription_created
  endpoint:
    path: /mail/send
    method: POST
    data_selector: dynamic_template_data
    params: {}
- name: customer_created
  endpoint:
    path: /events/customer_created
    method: POST
    data_selector: data
- name: customer_updated
  endpoint:
    path: /events/customer_updated
    method: POST
    data_selector: data
- name: subscription_created
  endpoint:
    path: /events/subscription_created
    method: POST
    data_selector: data
- name: subscription_updated
  endpoint:
    path: /events/subscription_updated
    method: POST
    data_selector: data
- name: subscription_canceled
  endpoint:
    path: /events/subscription_canceled
    method: POST
    data_selector: data
- name: subscription_trialwillend
  endpoint:
    path: /events/subscription_trialwillend
    method: POST
    data_selector: data
- name: subscription_renewed
  endpoint:
    path: /events/subscription_renewed
    method: POST
    data_selector: data
- name: subscription_expired
  endpoint:
    path: /events/subscription_expired
    method: POST
    data_selector: data
- name: invoice_created
  endpoint:
    path: /events/invoice_created
    method: POST
    data_selector: data
- name: invoice_payment_succeeded
  endpoint:
    path: /events/invoice_payment_succeeded
    method: POST
    data_selector: data
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: newsletter
  endpoint:
    path: /newsletters
    method: GET
    data_selector: newsletters
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: subscriptions
- name: invoice_payment_failed
  endpoint:
    path: /invoice/payment/failed
    method: GET
    data_selector: records
- name: charge_succeeded
  endpoint:
    path: /charge/succeeded
    method: GET
    data_selector: records
- name: charge_failed
  endpoint:
    path: /charge/failed
    method: GET
    data_selector: records
- name: charge_refunded
  endpoint:
    path: /charge/refunded
    method: GET
    data_selector: records
- name: address_created
  endpoint:
    path: /address/created
    method: GET
    data_selector: records
- name: address_updated
  endpoint:
    path: /address/updated
    method: GET
    data_selector: records
- name: source_expiring
  endpoint:
    path: /source/expiring
    method: GET
    data_selector: records
- name: source_canceled
  endpoint:
    path: /source/canceled
    method: GET
    data_selector: records
- name: Disqus
  endpoint:
    path: /disqus
    method: GET
    data_selector: ''
    params: {}
- name: Milibris
  endpoint:
    path: /milibris
    method: GET
    data_selector: ''
    params: {}
- name: Vimeo
  endpoint:
    path: /vimeo
    method: GET
    data_selector: ''
    params: {}
- name: Zinio
  endpoint:
    path: /zinio
    method: GET
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /v1/core/authenticate/milibris
    method: POST
    data_selector: info.subscriptions
    params:
      email: required
      password: required
      site_id: required
- name: send_email
  endpoint:
    path: /v3/mail/send
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /integration/v1/vimeo
    method: POST
    data_selector: subscription_data
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params:
      project_id: 12345
      remote_identifier: branded_app_12345
      source_application_id: 12345
      source_project_id: 12345
      items:
      - user_email: johndoe@example.test
        user_remote_identifier: 12345
        product_type: 2
        publication_id: 12345
        subscription_term_amount: 12
        subscription_term_units: issues
        label_type: 12345
        allow_delivery_notification: 0
        customer_requested: 1
- name: authenticate
  endpoint:
    path: /v1/core/authenticate/tecnavia
    method: POST
    data_selector: LOGIN
    params:
      token: required
      site_id: optional
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: info.subscriptions
    params:
      email: required
      password: required
      site_id: required
- name: AMP
  endpoint:
    path: /amp
    method: GET
- name: Wordpress
  endpoint:
    path: /wordpress
    method: GET
- name: customer
  endpoint:
    path: /integration/v1/vimeo
    method: POST
    data_selector: customers
- name: subscriptions
  endpoint:
    path: /integration/v1/vimeo/subscriptions
    method: POST
    data_selector: subscriptions
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: authenticate
  endpoint:
    path: /v1/core/authenticate/tecnavia
    method: POST
    data_selector: LOGIN
    params:
      token: required
      site_id: optional
- name: AMP
  endpoint:
    path: /integration/amp
    method: GET
- name: Wordpress
  endpoint:
    path: /integration/wordpress
    method: GET
- name: authorization
  endpoint:
    path: /integrations/amp/auth/authorization
    method: GET
    data_selector: ''
    params: {}
- name: pingback
  endpoint:
    path: /integrations/amp/auth/pingBack
    method: GET
    data_selector: ''
    params: {}
- name: login
  endpoint:
    path: /integrations/amp/login
    method: GET
    data_selector: ''
    params: {}
- name: logout
  endpoint:
    path: /integrations/amp/logout
    method: GET
    data_selector: ''
    params: {}
- name: Pelcro Integration
  endpoint:
    path: /sdk/main.js
    method: GET
    data_selector: Pelcro
    params: {}
- name: AvaTax
  endpoint:
    path: /integrations/taxes/avatax
    method: GET
    data_selector: records
    params: {}
- name: Avatax
  endpoint:
    path: /tax-management/avatax
    method: GET
    data_selector: integration_status
    params: {}
- name: site
  endpoint:
    path: /api/site
    method: GET
    data_selector: siteData
- name: user
  endpoint:
    path: /api/user
    method: GET
    data_selector: userData
- name: site
  endpoint:
    path: /site
    method: GET
    data_selector: data
- name: register
  endpoint:
    path: /user/register
    method: POST
- name: login
  endpoint:
    path: /user/login
    method: POST
- name: read
  endpoint:
    path: /user
    method: GET
- name: update
  endpoint:
    path: /user/update
    method: PUT
- name: logout
  endpoint:
    path: /user/logout
    method: POST
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /site
    method: GET
- name: user
  endpoint:
    path: /user
    method: GET
- name: subscription
  endpoint:
    path: /subscription
    method: GET
- name: campaign
  endpoint:
    path: /campaign
    method: GET
- name: password_forgot
  endpoint:
    path: /password/forgot
    method: POST
    data_selector: data
    params: {}
- name: password_reset
  endpoint:
    path: /password/reset
    method: POST
    data_selector: data
    params: {}
- name: password_update
  endpoint:
    path: /password/update
    method: POST
    data_selector: data
    params: {}
- name: create_address
  endpoint:
    path: /address/create
    method: POST
    data_selector: data
    params: {}
- name: update_address
  endpoint:
    path: /address/update
    method: POST
    data_selector: data
    params: {}
- name: list_addresses
  endpoint:
    path: /address/list
    method: GET
    data_selector: data
    params: {}
- name: site
  endpoint:
    path: /site
    method: GET
    data_selector: data
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: data
- name: products.list
  endpoint:
    path: /ecommerce/products/list
    method: GET
    data_selector: data.products
    params: {}
- name: products.read
  endpoint:
    path: /ecommerce/products/read
    method: GET
    data_selector: data.products
    params: {}
- name: products.getByProductId
  endpoint:
    path: /ecommerce/products/getByProductId
    method: GET
    data_selector: data.product
    params: {}
- name: products.getBySkuId
  endpoint:
    path: /ecommerce/products/getBySkuId
    method: GET
    data_selector: data.sku
    params: {}
- name: order.create
  endpoint:
    path: /ecommerce/order/create
    method: POST
    data_selector: data.order
    params: {}
- name: order.createSummary
  endpoint:
    path: /ecommerce/order/createSummary
    method: POST
    data_selector: data.summary
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
- name: listMembers
  endpoint:
    path: /subscriptions/members
    method: GET
    data_selector: data
- name: inviteMembers
  endpoint:
    path: /subscriptions/invite
    method: POST
    data_selector: data
- name: removeMember
  endpoint:
    path: /subscriptions/members/remove
    method: DELETE
    data_selector: data
- name: create
  endpoint:
    path: /source/create
    method: POST
    data_selector: data.sources
    params: {}
- name: update
  endpoint:
    path: /source/update
    method: POST
    data_selector: data.sources
    params: {}
- name: create_address
  endpoint:
    path: /address/create
    method: POST
    data_selector: response.data
- name: update_address
  endpoint:
    path: /address/update
    method: POST
    data_selector: response.data
- name: list_addresses
  endpoint:
    path: /address/list
    method: GET
    data_selector: response.data
- name: create_payment_method
  endpoint:
    path: /payment_methods/create
    method: POST
    data_selector: data
    params: {}
- name: update_payment_method
  endpoint:
    path: /payment_methods/update
    method: POST
    data_selector: data
    params: {}
- name: list_payment_methods
  endpoint:
    path: /payment_methods/list
    method: GET
    data_selector: data
    params: {}
- name: get_payment_method
  endpoint:
    path: /payment_methods/get
    method: GET
    data_selector: data
    params: {}
- name: delete_payment_method
  endpoint:
    path: /payment_methods/delete
    method: DELETE
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /ecommerce/products
    method: GET
    data_selector: data.products
- name: order
  endpoint:
    path: /ecommerce/order
    method: POST
    data_selector: data.order
- name: plan
  endpoint:
    path: /plan
    method: GET
    data_selector: plans
    params: {}
- name: create_order
  endpoint:
    path: /order/create
    method: POST
    data_selector: data
    params: {}
- name: create
  endpoint:
    path: /source/create
    method: POST
    data_selector: data.sources
    params: {}
- name: update
  endpoint:
    path: /source/update
    method: POST
    data_selector: data.sources
    params: {}
- name: list
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
- name: pay
  endpoint:
    path: /invoices/pay
    method: POST
    data_selector: response
    params: {}
- name: create_payment_method
  endpoint:
    path: /payment_methods/create
    method: POST
    data_selector: data
- name: update_payment_method
  endpoint:
    path: /payment_methods/update
    method: POST
    data_selector: data
- name: list_payment_methods
  endpoint:
    path: /payment_methods/list
    method: GET
    data_selector: data
- name: get_payment_method
  endpoint:
    path: /payment_methods/get
    method: GET
    data_selector: data
- name: delete_payment_method
  endpoint:
    path: /payment_methods/delete
    method: DELETE
    data_selector: data
- name: getByIP
  endpoint:
    path: /membership/getByIP
    method: GET
    data_selector: memberships
    params: {}
- name: getByEmail
  endpoint:
    path: /membership/getByEmail
    method: GET
    data_selector: memberships
    params: {}
- name: campaign
  endpoint:
    path: /campaign
    method: GET
- name: plan
  endpoint:
    path: /plan
    method: GET
    data_selector: plans
- name: create_order
  endpoint:
    path: /order/create
    method: POST
    data_selector: data
    params: {}
- name: list
  endpoint:
    path: /invoices/list
    method: GET
    data_selector: invoices
- name: pay
  endpoint:
    path: /invoices/pay
    method: POST
    data_selector: response
- name: paywall
  endpoint:
    path: /paywall
    method: GET
    data_selector: activePaywall
    params: {}
- name: product
  endpoint:
    path: /paywall/product
    method: GET
    data_selector: paywallProduct
    params: {}
- name: freeVisits
  endpoint:
    path: /paywall/freeVisitsLeft
    method: GET
    data_selector: visitsLeft
    params: {}
- name: newsletterPaywall
  endpoint:
    path: /paywall/displayNewsletterPaywall
    method: GET
    data_selector: shouldDisplayNewsletterPaywall
    params: {}
- name: meterPaywall
  endpoint:
    path: /paywall/displayMeterPaywall
    method: GET
    data_selector: shouldDisplayMeterPaywall
    params: {}
- name: blockingPaywall
  endpoint:
    path: /paywall/displayPaywall
    method: GET
    data_selector: shouldDisplayPlansPaywall
    params: {}
- name: articleRestriction
  endpoint:
    path: /paywall/isArticleRestricted
    method: GET
    data_selector: isArticleRestricted
    params: {}
- name: getByIP
  endpoint:
    path: /membership/getByIP
    method: GET
    data_selector: memberships
- name: getByEmail
  endpoint:
    path: /membership/getByEmail
    method: GET
    data_selector: memberships
- name: create
  endpoint:
    path: /newsletter/create
    method: POST
    data_selector: data
    params: {}
- name: getByEmail
  endpoint:
    path: /newsletter/getByEmail
    method: GET
    data_selector: data
    params: {}
- name: update
  endpoint:
    path: /newsletter/update
    method: POST
    data_selector: data
    params: {}
- name: isSubscribedToNewsletter
  endpoint:
    path: /newsletter/isSubscribedToNewsletter
    method: GET
    data_selector: data
    params: {}
- name: campaign
  endpoint:
    path: /campaigns
    method: GET
    data_selector: data
- name: active_paywall
  endpoint:
    path: /paywall/read
    method: GET
    data_selector: activePaywall
- name: paywall_product
  endpoint:
    path: /paywall/getProduct
    method: GET
    data_selector: paywallProduct
- name: free_visits_left
  endpoint:
    path: /paywall/freeVisitsLeft
    method: GET
    data_selector: visitsLeft
- name: display_newsletter_paywall
  endpoint:
    path: /paywall/displayNewsletterPaywall
    method: GET
    data_selector: shouldDisplayNewsletterPaywall
- name: display_meter_paywall
  endpoint:
    path: /paywall/displayMeterPaywall
    method: GET
    data_selector: shouldDisplayMeterPaywall
- name: display_paywall
  endpoint:
    path: /paywall/displayPaywall
    method: GET
    data_selector: shouldDisplayPlansPaywall
- name: is_article_restricted
  endpoint:
    path: /paywall/isArticleRestricted
    method: GET
    data_selector: isArticleRestricted
- name: webhook_events
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
- name: create_newsletter_subscription
  endpoint:
    path: /newsletter/create
    method: POST
    data_selector: data
    params: {}
- name: get_newsletter_by_email
  endpoint:
    path: /newsletter/getByEmail
    method: GET
    data_selector: data
    params: {}
- name: update_newsletter_subscription
  endpoint:
    path: /newsletter/update
    method: PUT
    data_selector: data
    params: {}
- name: check_subscription_status
  endpoint:
    path: /newsletter/isSubscribedToNewsletter
    method: GET
    data_selector: data
    params: {}
- name: coupon
  endpoint:
    path: /getFromUrl
    method: GET
    data_selector: coupon_code
- name: address
  endpoint:
    path: /event/address.created
    method: POST
    data_selector: data.object
- name: address
  endpoint:
    path: /address/updated
    method: GET
    data_selector: data.object
    params: {}
- name: campaign
  endpoint:
    path: /events/campaign.triggered
    method: POST
    data_selector: data.campaign
    params: {}
- name: campaign_run_completed
  endpoint:
    path: /api/v1/core/campaigns/{campaign_id}/runs/{run_id}/report/download
    method: GET
    data_selector: data
    params: {}
- name: webhook_events
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
    params: {}
- name: charge
  endpoint:
    path: /charge.failed
    method: GET
    data_selector: data.object
    params: {}
- name: address
  endpoint:
    path: /webhooks/address.created
    method: POST
    data_selector: data.object
    params: {}
- name: charge.refunded
  endpoint:
    path: /charge/refunded
    method: GET
- name: address
  endpoint:
    path: /address.updated
    method: GET
    data_selector: data.object
    params: {}
- name: campaign
  endpoint:
    path: /event/campaign.triggered
    method: POST
    data_selector: data.campaign
    params: {}
- name: subscription_schedule
  endpoint:
    path: /v1/subscription_schedules
    method: GET
    data_selector: data
    params: {}
- name: campaign_run_completed
  endpoint:
    path: /api/v1/core/campaigns
    method: GET
    data_selector: data
- name: charge.succeeded
  endpoint:
    path: /charge/succeeded
    method: GET
- name: charge
  endpoint:
    path: /charges
    method: GET
    data_selector: data.object
    params: {}
- name: charge
  endpoint:
    path: /charge/succeeded
    method: GET
    data_selector: data.object
    params: {}
- name: customer
  endpoint:
    path: /event/customer.created
    method: GET
    data_selector: data.object
    params: {}
- name: charge.refunded
  endpoint:
    path: /charge/refunded
    method: GET
- name: export_completed
  endpoint:
    path: /export/completed
    method: GET
    data_selector: data.object
    params: {}
- name: export_event
  endpoint:
    path: /export/downloaded
    method: GET
    data_selector: data.object
    params: {}
- name: charge
  endpoint:
    path: /charges
    method: GET
    data_selector: data.object
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: data.customer
    params: {}
- name: invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: data.invoice
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data.subscription
    params: {}
- name: customer.deleted
  endpoint:
    path: /customer.deleted
    method: GET
- name: customer
  endpoint:
    path: /customer.deleted
    method: POST
    data_selector: data.object
    params: {}
- name: subscription_schedule
  endpoint:
    path: /v1/subscription_schedules
    method: GET
    data_selector: data
    params: {}
- name: customer
  endpoint:
    path: /customer.updated
    method: GET
    data_selector: data.object
    params: {}
- name: customer.PasswordResetRequestSubmitted
  endpoint:
    path: /event/customer.PasswordResetRequestSubmitted
    method: GET
    data_selector: data.object
    params: {}
- name: charge.succeeded
  endpoint:
    path: /event/charge.succeeded
    method: GET
- name: customer
  endpoint:
    path: /customer/password_update/succeeded
    method: POST
    data_selector: data.object
- name: charge
  endpoint:
    path: /docs/event-charge-succeeded
    method: GET
    data_selector: data.object
    params: {}
- name: customer_email_verification_request
  endpoint:
    path: /event-customer-verify-email
    method: POST
    data_selector: data.object
    params: {}
- name: customer
  endpoint:
    path: /customer
    method: GET
    data_selector: data.object
    params: {}
- name: customer_email_verification_succeeded
  endpoint:
    path: /reference/verify-email
    method: POST
    data_selector: data.object
    params: {}
- name: subscriptions
  endpoint:
    path: /export/requested
    method: GET
    data_selector: data.object
- name: customer
  endpoint:
    path: /customer/passwordless_login_request
    method: POST
    data_selector: data.object
- name: invoice
  endpoint:
    path: /event-invoice-created
    method: GET
    data_selector: ''
    params: {}
- name: export
  endpoint:
    path: /export/completed
    method: GET
    data_selector: data.object
    params: {}
- name: invoice
  endpoint:
    path: /invoice
    method: GET
    data_selector: data.object
    params: {}
- name: export_downloaded
  endpoint:
    path: /export/downloaded
    method: GET
    data_selector: data.object
    params: {}
- name: invoice.payment_action_required
  endpoint:
    path: /event-invoice-payment-action-required
    method: GET
    data_selector: records
- name: invoice
  endpoint:
    path: /invoice/payment_action_required
    method: GET
    data_selector: data.object
- name: customer.deleted
  endpoint:
    path: /customer.deleted
    method: GET
- name: invoice.payment_failed
  endpoint:
    path: /event/invoice.payment_failed
    method: GET
- name: customer
  endpoint:
    path: /customer.deleted
    method: POST
    data_selector: data.object
- name: customer
  endpoint:
    path: /customer.updated
    method: POST
    data_selector: data.object
    params: {}
- name: invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: data.object
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: data.object.customer
    params: {}
- name: customer_password_reset
  endpoint:
    path: /customer/password_reset
    method: POST
    data_selector: data.object
    params: {}
- name: customer
  endpoint:
    path: /customer/password_update/succeeded
    method: POST
    data_selector: data.object
    params: {}
- name: invoice
  endpoint:
    path: /v1/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: invoice.payment_succeeded
  endpoint:
    path: /event/invoice.payment_succeeded
    method: POST
    data_selector: data
    params: {}
- name: customer_email_verification_request
  endpoint:
    path: /reference/request-email-verification
    method: POST
    data_selector: data.object
    params: {}
- name: customer
  endpoint:
    path: /reference/verify-email
    method: GET
    data_selector: object
    params: {}
- name: invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: data.object
    params: {}
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: data.object.customer
    params: {}
- name: line_item
  endpoint:
    path: /line_items
    method: GET
    data_selector: data.object.lines.data
    params: {}
- name: customer_passwordless_login_request
  endpoint:
    path: /customer/passwordless_login_request
    method: POST
    data_selector: data.object
- name: invoice_upcoming
  endpoint:
    path: /invoice/upcoming
    method: GET
    data_selector: data.object
    params: {}
- name: invoice
  endpoint:
    path: /event-invoice-created
    method: GET
    data_selector: records
- name: invoice
  endpoint:
    path: /invoice.updated
    method: GET
- name: invoices
  endpoint:
    path: /v1/invoices
    method: GET
    data_selector: data
    params: {}
- name: invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: data
    params: {}
- name: invoice
  endpoint:
    path: /invoice.payment_action_required
    method: GET
    data_selector: data.object
- name: member_activated
  endpoint:
    path: /events/member.activated
    method: POST
    data_selector: data.object
    params: {}
- name: member
  endpoint:
    path: /member.created
    method: POST
    data_selector: data.object
- name: invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: data
- name: member
  endpoint:
    path: /member.updated
    method: POST
    data_selector: data.object
    params: {}
- name: member_deleted
  endpoint:
    path: /member.deleted
    method: POST
    data_selector: data.object
    params: {}
- name: invoice
  endpoint:
    path: /invoice
    method: GET
    data_selector: data
- name: newsletter
  endpoint:
    path: /newsletter.created
    method: POST
    data_selector: data.object
    params: {}
- name: invoice.payment_succeeded
  endpoint:
    path: /event/invoice.payment_succeeded
    method: POST
- name: newsletter
  endpoint:
    path: /newsletter/updated
    method: GET
    data_selector: data.object
    params: {}
- name: invoice
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoice
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: order
  endpoint:
    path: /event/order.created
    method: POST
    data_selector: data.object
    params: {}
- name: order_payment_failed
  endpoint:
    path: /order/payment/failed
    method: POST
    data_selector: data.object
    params: {}
- name: invoice_upcoming
  endpoint:
    path: /invoice/upcoming
    method: GET
    data_selector: data.object
    params: {}
- name: order_payment
  endpoint:
    path: /order/payment/succeeded
    method: GET
    data_selector: data.object
    params: {}
- name: invoice
  endpoint:
    path: /event/invoice.updated
    method: GET
- name: product_created
  endpoint:
    path: /event/product.created
    method: POST
    data_selector: data.object
- name: invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: data
    params: {}
- name: product
  endpoint:
    path: /product.updated
    method: POST
    data_selector: data.object
- name: product_deleted
  endpoint:
    path: /product.deleted
    method: POST
    data_selector: data.object
    params: {}
- name: member
  endpoint:
    path: /event/member.activated
    method: POST
    data_selector: data.object
- name: product_sku
  endpoint:
    path: /product_sku.created
    method: POST
    data_selector: data.object
    params: {}
- name: member
  endpoint:
    path: /member.created
    method: POST
    data_selector: data.object
    params: {}
- name: product_sku
  endpoint:
    path: /product_sku.updated
    method: GET
    data_selector: data.object
    params: {}
- name: member
  endpoint:
    path: /member.updated
    method: POST
    data_selector: data.object
    params: {}
- name: product_sku.deleted
  endpoint:
    path: /product_sku.deleted
    method: GET
    data_selector: data.object
    params: {}
- name: member
  endpoint:
    path: /event/member.deleted
    method: POST
    data_selector: data.object
    params: {}
- name: plan_created
  endpoint:
    path: /plan.created
    method: POST
    data_selector: data.object
    params: {}
- name: newsletter
  endpoint:
    path: /newsletter
    method: POST
    data_selector: data.object
    params: {}
- name: plan.updated
  endpoint:
    path: /docs/event-plan-updated
    method: POST
    data_selector: data.object
- name: newsletter
  endpoint:
    path: /newsletter.updated
    method: GET
    data_selector: data.object
- name: source_canceled
  endpoint:
    path: /source/canceled
    method: GET
    data_selector: data.object
    params: {}
- name: order
  endpoint:
    path: /event/order.created
    method: GET
    data_selector: data.object
    params: {}
- name: source_created
  endpoint:
    path: /source/created
    method: GET
    data_selector: data.object
- name: order_payment_failed
  endpoint:
    path: /events/order.payment.failed
    method: POST
    data_selector: data.object
    params: {}
- name: source_expiring_event
  endpoint:
    path: /events/source/expiring
    method: GET
    data_selector: data.object
    params: {}
- name: order_payment_succeeded
  endpoint:
    path: /order/payment/succeeded
    method: GET
    data_selector: data.object
    params: {}
- name: product
  endpoint:
    path: /api/v1/products
    method: POST
    data_selector: data.object
    params: {}
- name: product
  endpoint:
    path: /product.updated
    method: POST
    data_selector: data.object
    params: {}
- name: product_deleted
  endpoint:
    path: /product/deleted
    method: GET
    data_selector: data.object
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data.object
    params: {}
- name: product_sku
  endpoint:
    path: /product_sku.created
    method: GET
    data_selector: data.object
- name: subscription
  endpoint:
    path: /api/subscription
    method: GET
- name: product_sku
  endpoint:
    path: /product_sku.updated
    method: POST
    data_selector: data.object
- name: subscription
  endpoint:
    path: /subscriptions/changed
    method: GET
    data_selector: data.object
- name: subscription
  endpoint:
    path: /subscription.created
    method: POST
- name: plan
  endpoint:
    path: /event/plan.created
    method: POST
    data_selector: data.object
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data.object
    params: {}
- name: plan
  endpoint:
    path: /plan.updated
    method: GET
    data_selector: data.object
- name: source_canceled_event
  endpoint:
    path: /event/source.canceled
    method: GET
    data_selector: data.object
    params: {}
- name: source_created
  endpoint:
    path: /event/source.created
    method: POST
    data_selector: data.object
    params: {}
- name: gift_notification
  endpoint:
    path: /subscription/gift_notification
    method: GET
    data_selector: data.object
    params: {}
- name: source
  endpoint:
    path: /source.expiring
    method: GET
    data_selector: data.object
    params: {}
- name: source_expired_event
  endpoint:
    path: /events/source.expired
    method: GET
    data_selector: data.object
- name: subscription
  endpoint:
    path: /subscription/renewed
    method: POST
    data_selector: data.object
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: subscription
  endpoint:
    path: /subscription/trial_will_end
    method: GET
    data_selector: data.object
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data.object
    params: {}
- name: subscription.changed
- name: subscription
  endpoint:
    path: /subscription/updated
    method: GET
    data_selector: data.object
    params: {}
- name: subscription
  endpoint:
    path: /docs/subscriptions#changing-a-subscription
    method: GET
    data_selector: data.object
    params: {}
- name: fraud_prevention
  endpoint:
    path: /fraud_prevention/triggered
    method: POST
    data_selector: data.object
    params: {}
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data.object
    params: {}
- name: site
  endpoint:
    path: /site
    method: GET
    data_selector: data
- name: user
  endpoint:
    path: /user/register
    method: POST
    data_selector: data
- name: subscription
  endpoint:
    path: /subscription/create
    method: POST
    data_selector: data
- name: subscription
  endpoint:
    path: /subscription/gift_notification
    method: GET
    data_selector: data.object
- name: subscription
  endpoint:
    path: /subscription/renewed
    method: POST
    data_selector: data.object
- name: customer
  endpoint:
    path: /customer
    method: POST
    data_selector: customer.created
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: subscription.created
    params: {}
- name: subscription
  endpoint:
    path: /subscription/trial_will_end
    method: GET
    data_selector: data.object
- name: newsletter_created
  endpoint:
    path: /newsletter/created
    method: POST
    data_selector: event
    params: {}
- name: newsletter_updated
  endpoint:
    path: /newsletter/updated
    method: POST
    data_selector: event
    params: {}
- name: source_created
  endpoint:
    path: /source/created
    method: POST
    data_selector: event
    params: {}
- name: source_updated
  endpoint:
    path: /source/updated
    method: POST
    data_selector: event
    params: {}
- name: source_canceled
  endpoint:
    path: /source/canceled
    method: POST
    data_selector: event
    params: {}
- name: source_expired
  endpoint:
    path: /source/expired
    method: POST
    data_selector: event
    params: {}
- name: customer_email_verification_request
  endpoint:
    path: /customer/email_verification_request
    method: POST
    data_selector: event
    params: {}
- name: customer_email_verification_succeeded
  endpoint:
    path: /customer/email_verification_succeeded
    method: POST
    data_selector: event
    params: {}
- name: subscription
  endpoint:
    path: /subscription.updated
    method: GET
    data_selector: data.object
    params: {}
- name: fraud_prevention
  endpoint:
    path: /fraud_prevention/triggered
    method: POST
    data_selector: data.object
    params: {}
- name: site
  endpoint:
    path: /api/site
    method: GET
    data_selector: data
- name: user
  endpoint:
    path: /api/user
    method: POST
    data_selector: data
- name: subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: data
- name: cancelled_refunds
  endpoint:
    path: /core/refunds/cancelled
    method: POST
    data_selector: object
    params:
      site_id: required
      cancelled: required
- name: cancelled_refunds
  endpoint:
    path: /core/refunds/cancelled
    method: POST
- name: list_refunds
  endpoint:
    path: /core/list/refunds
    method: GET
- name: site_info
  endpoint:
    path: /site
    method: GET
    data_selector: result
- name: user_registration
  endpoint:
    path: /user/register
    method: POST
    data_selector: result
- name: user_login
  endpoint:
    path: /user/login
    method: POST
    data_selector: result
- name: subscription_create
  endpoint:
    path: /subscription/create
    method: POST
    data_selector: result
- name: subscription_cancel
  endpoint:
    path: /subscription/cancel
    method: POST
    data_selector: result
- name: subscription_reactivate
  endpoint:
    path: /subscription/reactivate
    method: POST
    data_selector: result
- name: sku
  endpoint:
    path: /core/ecommerce/products/skus/{id}
    method: GET
    data_selector: data
- name: skus
  endpoint:
    path: /products/skus/id
    method: GET
- name: addresses
  endpoint:
    path: /api/v1/core/addresses
    method: GET
    data_selector: meta
    params:
      per_page: 10
- name: customer
  endpoint:
    path: /webhooks/customer.created
    method: POST
    data_selector: customer.created
    params: {}
- name: subscription
  endpoint:
    path: /webhooks/subscription.created
    method: POST
    data_selector: subscription.created
    params: {}
- name: invoice
  endpoint:
    path: /webhooks/invoice.created
    method: POST
    data_selector: invoice.created
    params: {}
- name: address
  endpoint:
    path: /webhooks/address.created
    method: POST
    data_selector: address.created
    params: {}
- name: member
  endpoint:
    path: /webhooks/member.created
    method: POST
    data_selector: member.created
    params: {}
- name: charge
  endpoint:
    path: /webhooks/charge.succeeded
    method: POST
    data_selector: charge.succeeded
    params: {}
- name: newsletter_created
  endpoint:
    path: /newsletter/created
    method: GET
    data_selector: records
- name: newsletter_updated
  endpoint:
    path: /newsletter/updated
    method: GET
    data_selector: records
- name: source_created
  endpoint:
    path: /source/created
    method: GET
    data_selector: records
- name: source_updated
  endpoint:
    path: /source/updated
    method: GET
    data_selector: records
- name: source_canceled
  endpoint:
    path: /source/canceled
    method: GET
    data_selector: records
- name: source_expired
  endpoint:
    path: /source/expired
    method: GET
    data_selector: records
- name: customer_email_verification_request
  endpoint:
    path: /customer/email_verification_request
    method: GET
    data_selector: records
- name: customer_email_verification_succeeded
  endpoint:
    path: /customer/email_verification_succeeded
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /api/v1/core/customers
    method: GET
    data_selector: records
    params: {}
- name: invoices
  endpoint:
    path: /api/v1/core/invoices
    method: GET
    data_selector: records
    params: {}
- name: memberships
  endpoint:
    path: /api/v1/core/memberships
    method: GET
    data_selector: records
    params: {}
- name: organizations
  endpoint:
    path: /api/v1/core/organizations
    method: GET
    data_selector: records
    params: {}
- name: skus
  endpoint:
    path: /api/v1/core/skus
    method: GET
    data_selector: records
    params: {}
- name: sources
  endpoint:
    path: /api/v1/core/payment-methods
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/api-open-subscription
    method: POST
- name: cancel_refunds
  endpoint:
    path: /core/refunds/cancelled
    method: POST
    data_selector: object
    params:
      site_id: int32
- name: subscriptions
  endpoint:
    path: /api/v1/core/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: cancelled_refunds
  endpoint:
    path: /core/refunds/cancelled
    method: POST
- name: list_refunds
  endpoint:
    path: /core/list/refunds
    method: GET
- name: Customer
  endpoint:
    path: /reference/api-core-list-customers
    method: List
- name: Invoices
  endpoint:
    path: /reference/api-core-list-invoices
    method: List
- name: Membership
  endpoint:
    path: /reference/api-core-list-memberships
    method: List, Get
- name: Order
  endpoint:
    path: /reference/api-core-list-ecommerce-orders
    method: List
- name: Refund
  endpoint:
    path: /reference/api-core-list-refunds
    method: List
- name: Subscription
  endpoint:
    path: /reference/api-core-list-subcriptions
    method: List, Get
- name: address
  endpoint:
    path: /reference/api-open-create-address
    method: POST
- name: addresses
  endpoint:
    path: /reference/api-core-list-addresses
    method: GET
    data_selector: addresses
- name: addresses
  endpoint:
    path: /reference/api-core-list-addresses
    method: GET
- name: customers
  endpoint:
    path: /reference/api-core-list-customers
    method: GET
- name: products
  endpoint:
    path: /reference/api-core-list-products
    method: GET
- name: sku
  endpoint:
    path: /core/ecommerce/products/skus/{id}
    method: GET
    data_selector: data
- name: skus
  endpoint:
    path: /products/skus/id
    method: GET
- name: addresses
  endpoint:
    path: /api/v1/core/addresses
    method: GET
    data_selector: Address objects
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    params:
      limit: '10'
      page: '1'
- name: address
  endpoint:
    path: /api/open/create/address
    method: POST
    data_selector: records
- name: create_address
  endpoint:
    path: /api/v1/core/addresses
    method: POST
    data_selector: data
    params: {}
- name: addresses
  endpoint:
    path: /core/addresses
    method: POST
    data_selector: null
    params: {}
- name: address
  endpoint:
    path: /core/addresses/{id}
    method: GET
    data_selector: data
    params:
      site_id: required
      customer_id: required
- name: addresses
  endpoint:
    path: /core/addresses/id
    method: GET
- name: customers
  endpoint:
    path: /api/v1/core/customers
    method: GET
    data_selector: ''
    params: {}
- name: invoices
  endpoint:
    path: /api/v1/core/invoices
    method: GET
    data_selector: ''
    params: {}
- name: members
  endpoint:
    path: /api/v1/core/memberships
    method: GET
    data_selector: ''
    params: {}
- name: organizations
  endpoint:
    path: /api/v1/core/organizations
    method: GET
    data_selector: ''
    params: {}
- name: skus
  endpoint:
    path: /api/v1/core/skus
    method: GET
    data_selector: ''
    params: {}
- name: sources
  endpoint:
    path: /api/v1/core/payment-methods
    method: GET
    data_selector: ''
    params: {}
- name: addresses
  endpoint:
    path: /api-open/create-address
    method: POST
- name: customers
  endpoint:
    path: /api-core-customers
    method: GET
- name: products
  endpoint:
    path: /api-open-ecommerce-list-products
    method: GET
- name: address
  endpoint:
    path: /core/addresses/{id}
    method: PUT
    data_selector: data
    params:
      site_id: required
      customer_id: required
- name: addresses
  endpoint:
    path: /addresses
    method: GET
- name: subscriptions
  endpoint:
    path: /api/v1/core/subscriptions
    method: GET
    data_selector: data
- name: customers
  endpoint:
    path: /api/v1/core/customers
    method: GET
    data_selector: data
- name: Customer
  endpoint:
    path: /reference/api-core-list-customers
    method: GET
- name: Invoices
  endpoint:
    path: /reference/api-core-list-invoices
    method: GET
- name: Membership
  endpoint:
    path: /reference/api-core-list-memberships
    method: GET
- name: Order
  endpoint:
    path: /reference/api-core-list-ecommerce-orders
    method: GET
- name: Refund
  endpoint:
    path: /reference/api-core-list-refunds
    method: GET
- name: Subscription
  endpoint:
    path: /reference/api-core-list-subcriptions
    method: GET
- name: delete_address
  endpoint:
    path: /core/addresses/{id}
    method: DELETE
    params:
      site_id: int32
      customer_id: int32
- name: list_addresses
  endpoint:
    path: /reference/api-core-list-addresses
    method: GET
- name: create_address
  endpoint:
    path: /reference/api-open-create-address
    method: POST
- name: get_address
  endpoint:
    path: /reference/api-core-get-address
    method: GET
- name: update_address
  endpoint:
    path: /reference/api-core-update-address
    method: PUT
- name: delete_address
  endpoint:
    path: /reference/api-core-delete-address
    method: DELETE
- name: campaign_run_report
  endpoint:
    path: /core/campaigns/{campaign_id}/runs/{campaign_run_id}/report/download
    method: GET
    params:
      site_id: int32
- name: addresses
  endpoint:
    path: /reference/api-core-list-addresses
    method: GET
    data_selector: records
- name: campaign_run_report
  endpoint:
    path: /core/campaigns/campaign_id/runs/campaign_run_id/report/download
    method: GET
- name: addresses
  endpoint:
    path: /api-core-list-addresses
    method: GET
- name: customers
  endpoint:
    path: /api-core-list-customers
    method: GET
- name: campaigns
  endpoint:
    path: /get-campaign-run-report
    method: GET
- name: invoices
  endpoint:
    path: /api-core-list-invoices
    method: GET
- name: list_charges
  endpoint:
    path: /reference/api-core-list-charges
    method: GET
    data_selector: records
- name: create_offline_charge
  endpoint:
    path: /reference/api-core-create-offline-charge
    method: POST
    data_selector: records
- name: get_charge
  endpoint:
    path: /reference/api-core-get-charge
    method: GET
    data_selector: records
- name: charges
  endpoint:
    path: /reference/api-core-list-charges
    method: GET
- name: addresses
  endpoint:
    path: /core/addresses
    method: GET
    data_selector: Address
    params:
      site_id: required
      limit: '10'
      page: '1'
- name: addresses
  endpoint:
    path: /addresses
    method: GET
    params:
      limit: 10
      page: 1
- name: charges
  endpoint:
    path: /core/charges
    method: GET
    data_selector: data
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: address
  endpoint:
    path: /reference/api-open-create-address
    method: POST
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: result
    params:
      limit: 10
      page: 1
- name: create_address
  endpoint:
    path: /addresses
    method: POST
    data_selector: data
    params: {}
- name: addresses
  endpoint:
    path: /core/addresses
    method: POST
- name: charges
  endpoint:
    path: /core/charges
    method: POST
    data_selector: data
    params:
      site_id: required
      customer_id: required
      amount: required
      reference: required
      currency: required
      payment_category: enum
      invoice_id: ''
      invoice_old_provider_id: ''
- name: address
  endpoint:
    path: /core/addresses/{id}
    method: GET
    data_selector: data
    params:
      site_id: required
      customer_id: required
- name: charges
  endpoint:
    path: /core/charges
    method: POST
- name: addresses
  endpoint:
    path: /core/addresses/id
    method: GET
- name: charge
  endpoint:
    path: /core/charges/{id}
    method: GET
    params:
      site_id: int32
- name: charges
  endpoint:
    path: /core/charges/id
    method: GET
- name: addresses
  endpoint:
    path: /api/open/create-address
    method: POST
    data_selector: address
    params: {}
- name: customers
  endpoint:
    path: /api/open/list-customers
    method: GET
    data_selector: customers
    params: {}
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/api-open-create-subscription
    method: POST
- name: update_address
  endpoint:
    path: /core/addresses/{id}
    method: PUT
    params:
      site_id: int32
      customer_id: int32
- name: coupons
  endpoint:
    path: /reference/api-core-coupons
    method: GET
- name: coupons
  endpoint:
    path: /core/coupons
    method: GET
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: delete_address
  endpoint:
    path: /core/addresses/{id}
    method: DELETE
    params:
      site_id: int32
      customer_id: int32
- name: coupons
  endpoint:
    path: /core/coupons
    method: GET
    params:
      limit: '10'
      page: '1'
- name: campaign_run_report
  endpoint:
    path: /core/campaigns/{campaign_id}/runs/{campaign_run_id}/report/download
    method: GET
    params:
      site_id: ''
- name: coupons
  endpoint:
    path: /core/coupons
    method: POST
    data_selector: data
    params:
      site_id: required
- name: coupons
  endpoint:
    path: /core/coupons
    method: GET
- name: campaign_run_report
  endpoint:
    path: /core/campaigns/campaign_id/runs/campaign_run_id/report/download
    method: GET
- name: charges
  endpoint:
    path: /api-core-charges
    method: GET
- name: coupon
  endpoint:
    path: /core/coupons/{id}
    method: GET
    data_selector: data
    params:
      site_id: ''
- name: charges
  endpoint:
    path: /reference/api-core-list-charges
    method: GET
    data_selector: charges
    params: {}
- name: coupons
  endpoint:
    path: /core/coupons
    method: GET
- name: coupons
  endpoint:
    path: /core/coupons/{id}
    method: PUT
    params:
      site_id: int32
- name: charges
  endpoint:
    path: /charges
    method: GET
    data_selector: data
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: charges
  endpoint:
    path: /charges
    method: GET
    params:
      limit: '10'
      page: '1'
- name: coupon
  endpoint:
    path: /core/coupons/id
    method: PUT
- name: get_coupon
  endpoint:
    path: /core/get-coupon
    method: GET
- name: delete_coupon
  endpoint:
    path: /core/delete-coupon
    method: DELETE
- name: charges
  endpoint:
    path: /core/charges
    method: POST
    data_selector: data
    params:
      site_id: required
- name: delete_coupon
  endpoint:
    path: /core/coupons/{id}
    method: DELETE
    data_selector: response
    params:
      site_id: required
- name: charges
  endpoint:
    path: /charges
    method: POST
- name: coupons
  endpoint:
    path: /core/coupons
    method: DELETE
- name: charge
  endpoint:
    path: /core/charges/{id}
    method: GET
    data_selector: data
    params:
      site_id: ''
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: customers
  endpoint:
    path: /reference/api-core-list-customers
    method: GET
- name: charges
  endpoint:
    path: /core/charges/id
    method: GET
- name: coupons
  endpoint:
    path: /reference/api-core-list-coupons
    method: GET
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    params:
      limit: '10'
      page: '1'
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: addresses
  endpoint:
    path: /reference/api-core-list-addresses
    method: GET
- name: campaigns
  endpoint:
    path: /reference/get-campaign-run-report
    method: GET
- name: charges
  endpoint:
    path: /reference/api-core-list-charges
    method: GET
- name: coupons
  endpoint:
    path: /reference/api-core-list-coupons
    method: GET
- name: ecommerce_orders
  endpoint:
    path: /reference/api-core-list-ecommerce-orders
    method: GET
- name: invoices
  endpoint:
    path: /reference/api-core-list-invoices
    method: GET
- name: memberships
  endpoint:
    path: /reference/api-core-list-memberships
    method: GET
- name: newsletters
  endpoint:
    path: /reference/api-core-list-newsletters
    method: GET
- name: organizations
  endpoint:
    path: /reference/api-core-list-organizations
    method: GET
- name: plans
  endpoint:
    path: /reference/api-core-list-plans
    method: GET
- name: products
  endpoint:
    path: /reference/api-core-list-products
    method: GET
- name: refunds
  endpoint:
    path: /reference/api-core-list-refunds
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/api-core-list-subcriptions
    method: GET
- name: webhooks
  endpoint:
    path: /reference/api-core-list-webhooks
    method: GET
- name: coupon
  endpoint:
    path: /core/coupons
    method: POST
    data_selector: data
    params:
      site_id: int32
- name: customers
  endpoint:
    path: /core/customers
    method: GET
    data_selector: data
    params:
      site_id: required
      limit: '10'
      page: '1'
      sort: id
- name: coupons
  endpoint:
    path: /core/coupons
    method: POST
- name: customers
  endpoint:
    path: /customers
    method: GET
    params:
      limit: 10
      page: 1
      sort: id
- name: coupon
  endpoint:
    path: /core/coupons/{id}
    method: GET
    data_selector: data
    params:
      site_id: required
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /reference/api-core-subscription
    method: POST
    data_selector: records
- name: coupons
  endpoint:
    path: /core/coupons
    method: GET
- name: customer
  endpoint:
    path: /core/customers
    method: POST
- name: coupons
  endpoint:
    path: /core/coupons/{id}
    method: PUT
    data_selector: data
    params:
      site_id: int32
- name: customers
  endpoint:
    path: /core/customers
    method: GET
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: coupons
  endpoint:
    path: /core/coupons
    method: GET
    data_selector: records
- name: customer
  endpoint:
    path: /core/customers/{id}
    method: GET
    data_selector: data
    params:
      site_id: required
- name: coupons
  endpoint:
    path: /core/coupons/{id}
    method: DELETE
    params:
      site_id: required
- name: customers
  endpoint:
    path: /core/customers/id
    method: GET
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/api-open-subscription
    method: POST
- name: customers
  endpoint:
    path: /reference/api-core-list-customers
    method: GET
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
    data_selector: customers
- name: customer
  endpoint:
    path: /core/customers/{id}
    method: PUT
    data_selector: Customer
    params:
      site_id: int32
- name: customers
  endpoint:
    path: /core/customers
    method: GET
    data_selector: results
- name: customers
  endpoint:
    path: /core/customers
    method: GET
    data_selector: data
    params:
      site_id: required
      limit: '10'
      page: '1'
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /reference/api-open-create-subscription
    method: POST
    data_selector: records
- name: customers
  endpoint:
    path: /core/customers
    method: GET
    data_selector: records
    params:
      limit: '10'
      page: '1'
      sort: id
- name: customer
  endpoint:
    path: /core/customers/{id}
    method: DELETE
    data_selector: empty
    params:
      site_id: required
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/api-open-create-subscription
    method: POST
- name: customers
  endpoint:
    path: /core/customers/id
    method: DELETE
- name: customer
  endpoint:
    path: /core/customers
    method: POST
    data_selector: data
    params:
      site_id: int32
- name: orders
  endpoint:
    path: /core/orders
    method: GET
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: customers
  endpoint:
    path: /core/customers
    method: GET
- name: orders
  endpoint:
    path: /core/orders
    method: GET
    params:
      limit: '10'
      page: '1'
- name: customer
  endpoint:
    path: /api-open/get-customer
    method: POST
- name: orders
  endpoint:
    path: /core/orders
    method: GET
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: customer
  endpoint:
    path: /core/customers/{id}
    method: GET
    data_selector: data
    params:
      site_id: required
- name: orders
  endpoint:
    path: /core/orders
    method: GET
    params:
      limit: '10'
      page: '1'
- name: customers
  endpoint:
    path: /core/customers/id
    method: GET
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/api-open-subscription
    method: POST
- name: orders
  endpoint:
    path: /core/orders
    method: POST
    data_selector: data
    params:
      site_id: int32
      user_id: int32
      source_id: int32
      items: array of objects
      coupon_code: string
      address_id: int32
      address: object
      campaign_key_id: int32
      campaign_key: string
- name: update_customer
  endpoint:
    path: /core/customers/{id}
    method: PUT
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: customers
  endpoint:
    path: /core/customers
    method: GET
    data_selector: records
- name: order
  endpoint:
    path: /core/orders/{id}
    method: GET
    data_selector: data
    params:
      site_id: int32
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /reference/api-core-product-object-attributes
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /orders/id
    method: GET
- name: customer
  endpoint:
    path: /core/customers/{id}
    method: DELETE
    params:
      site_id: int32
- name: update_order
  endpoint:
    path: /core/orders/{id}
    method: PUT
- name: order
  endpoint:
    path: /orders/id
    method: PUT
- name: orders
  endpoint:
    path: /orders
    method: GET
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/api-open-create-subscription
    method: POST
- name: sku
  endpoint:
    path: /reference/api-core-list-skus
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /core/orders
    method: GET
    data_selector: results
    params:
      limit: 10
      page: 1
- name: skus
  endpoint:
    path: /products/skus
    method: GET
    params:
      site_id: ''
      limit: 10
      page: 1
      sort: id
- name: orders
  endpoint:
    path: /core/orders
    method: GET
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: skus
  endpoint:
    path: /products/skus
    method: GET
    params:
      limit: '10'
      page: '1'
      sort: id
- name: sku
  endpoint:
    path: /core/ecommerce/products/skus
    method: POST
- name: orders
  endpoint:
    path: /core/orders
    method: GET
    params:
      limit: 10
      page: 1
- name: skus
  endpoint:
    path: /products/skus
    method: POST
- name: order
  endpoint:
    path: /orders
    method: POST
    data_selector: data
    params:
      site_id: required
      user_id: required
      source_id: ''
      items: ''
      coupon_code: ''
      address_id: ''
      address: ''
      campaign_key_id: ''
      campaign_key: ''
- name: update_sku
  endpoint:
    path: /core/ecommerce/products/skus/{id}
    method: PUT
- name: orders
  endpoint:
    path: /orders
    method: GET
- name: sku
  endpoint:
    path: /core/ecommerce/products/skus/id
    method: PUT
- name: delete_sku
  endpoint:
    path: /core/ecommerce/products/skus/{id}
    method: DELETE
- name: order
  endpoint:
    path: /core/orders/{id}
    method: GET
    data_selector: data
    params:
      site_id: ''
- name: products
  endpoint:
    path: /products/skus/id
    method: DELETE
- name: orders
  endpoint:
    path: /core/orders
    method: GET
- name: delete_product
  endpoint:
    path: /core/ecommerce/products/{id}
    method: DELETE
- name: update_order
  endpoint:
    path: /core/orders/{id}
    method: PUT
    params:
      site_id: required
      status: fulfilled, returned
- name: product
  endpoint:
    path: /products/id
    method: DELETE
- name: order
  endpoint:
    path: /orders/id
    method: PUT
- name: update_product
  endpoint:
    path: /core/ecommerce/products/{id}
    method: PUT
- name: products
  endpoint:
    path: /products
    method: GET
- name: products
  endpoint:
    path: /ecommerce/products
    method: POST
    params:
      site_id: int32
- name: skus
  endpoint:
    path: /reference/api-core-list-skus
    method: GET
    data_selector: sku
    params: {}
- name: orders
  endpoint:
    path: /reference/api-core-list-ecommerce-orders
    method: GET
    data_selector: order
    params: {}
- name: products
  endpoint:
    path: /ecommerce/products
    method: GET
    data_selector: data
- name: skus
  endpoint:
    path: /core/ecommerce/products/skus
    method: GET
    params:
      site_id: int32
      limit: int32
      page: int32
      sort: string
      filter[ATTRIBUTE]: array of strings
- name: products
  endpoint:
    path: /core/ecommerce/products
    method: GET
    params:
      site_id: required
      page: ''
      limit: ''
- name: skus
  endpoint:
    path: /core/ecommerce/products/skus
    method: GET
    params:
      limit: 10
      page: 1
      sort: id
- name: products
  endpoint:
    path: /api/v1/core/ecommerce/products
    method: GET
- name: sku
  endpoint:
    path: /core/ecommerce/products/skus
    method: POST
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/api-core-subscription
    method: POST
- name: exports
  endpoint:
    path: /reference/api-core-list-exports
    method: GET
- name: skus
  endpoint:
    path: /products/skus
    method: POST
    data_selector: null
    params: {}
- name: exports
  endpoint:
    path: /core/exports
    method: GET
    data_selector: data
    params:
      site_id: int32
- name: sku
  endpoint:
    path: /core/ecommerce/products/skus/{id}
    method: PUT
    data_selector: data
- name: sku
  endpoint:
    path: /core/ecommerce/products/skus/id
    method: PUT
- name: sku
  endpoint:
    path: /core/ecommerce/products/skus/{id}
    method: DELETE
- name: exports
  endpoint:
    path: /exports
    method: POST
    data_selector: object
    params:
      site_id: int32
      object: string
      date_from: date-time
      date_to: date-time
      mode: string
      month: date
      currency: string
      status: string
      id: int32
      product_id: int32
      plan_id: int32
      sku_id: int32
      collection_method: string
      type: string
      category: string
      destination: string
      reason: string
      country: string
      campaign_key: string
- name: products
  endpoint:
    path: /products/skus/id
    method: DELETE
- name: exports
  endpoint:
    path: /exports
    method: POST
    data_selector: object
    params: {}
- name: delete_product
  endpoint:
    path: /core/ecommerce/products/{id}
    method: DELETE
- name: export
  endpoint:
    path: /core/exports/{uuid}
    method: GET
    params:
      site_id: required
- name: product
  endpoint:
    path: /products/id
    method: DELETE
- name: products
  endpoint:
    path: /core/ecommerce/products/{id}
    method: PUT
    params:
      site_id: int32
- name: exports
  endpoint:
    path: /core/exports/uuid
    method: GET
- name: invoices
  endpoint:
    path: /core/invoice
    method: GET
- name: products
  endpoint:
    path: /ecommerce/products
    method: GET
- name: products
  endpoint:
    path: /core/ecommerce/products
    method: POST
    params:
      site_id: int32
- name: products
  endpoint:
    path: /ecommerce/products
    method: GET
- name: addresses
  endpoint:
    path: /api-core-list-addresses
    method: GET
- name: campaigns
  endpoint:
    path: /get-campaign-run-report
    method: GET
- name: customers
  endpoint:
    path: /api-core-list-customers
    method: GET
- name: ecommerce_orders
  endpoint:
    path: /api-core-list-ecommerce-orders
    method: GET
- name: invoices
  endpoint:
    path: /api-core-list-invoices
    method: GET
- name: memberships
  endpoint:
    path: /api-core-list-memberships
    method: GET
- name: newsletters
  endpoint:
    path: /api-core-list-newsletters
    method: GET
- name: organizations
  endpoint:
    path: /api-core-list-organizations
    method: GET
- name: plans
  endpoint:
    path: /api-core-list-plans
    method: GET
- name: products
  endpoint:
    path: /api-core-list-products
    method: GET
- name: subscriptions
  endpoint:
    path: /api-core-list-subcriptions
    method: GET
- name: webhooks
  endpoint:
    path: /api-core-list-webhooks
    method: GET
- name: invoices
  endpoint:
    path: /api-core-invoice
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /core/ecommerce/products
    method: GET
    params:
      site_id: required
- name: invoices
  endpoint:
    path: /core/invoices
    method: GET
    data_selector: data
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
      sort: Defaults to id
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: data
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    params:
      limit: '10'
      page: '1'
      sort: id
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: products
  endpoint:
    path: /reference/api-core-products
    method: GET
- name: invoice
  endpoint:
    path: /core/invoices/{id}
    method: GET
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: exports
  endpoint:
    path: /reference/api-core-list-exports
    method: GET
- name: attributes
  endpoint:
    path: /reference/api-core-export-attributes
    method: GET
- name: invoices
  endpoint:
    path: /invoices/id
    method: GET
    params:
      limit: 10
      page: 1
- name: pay_invoice
  endpoint:
    path: /core/invoices/{id}/pay_offline
    method: POST
    data_selector: data
    params:
      site_id: required
- name: exports
  endpoint:
    path: /exports
    method: GET
    data_selector: data
    params:
      site_id: int32
- name: invoice
  endpoint:
    path: /invoices/id/pay_offline
    method: POST
- name: exports
  endpoint:
    path: /exports
    method: GET
- name: void_invoice
  endpoint:
    path: /core/invoices/{id}/void
    method: POST
- name: invoices
  endpoint:
    path: /invoices/id/void
    method: POST
- name: exports
  endpoint:
    path: /core/exports
    method: POST
    data_selector: object
    params:
      site_id: required
      object: required
      date_from: required
      date_to: required
      mode: optional
      month: required
      currency: optional
      status: optional
      id: optional
      product_id: optional
      plan_id: optional
      sku_id: optional
      collection_method: optional
      type: optional
      category: optional
      destination: optional
      reason: optional
      country: optional
      campaign_key: optional
- name: invoice
  endpoint:
    path: /core/invoices/{id}
    method: PUT
    params:
      site_id: int32
- name: invoices
  endpoint:
    path: /invoices
    method: GET
- name: exports
  endpoint:
    path: /exports
    method: POST
    data_selector: result
    params: {}
- name: invoices
  endpoint:
    path: /api-core-list-invoices
    method: GET
    data_selector: invoices
- name: customers
  endpoint:
    path: /api-core-list-customers
    method: GET
    data_selector: customers
- name: export
  endpoint:
    path: /core/exports/{uuid}
    method: GET
    params:
      site_id: required
- name: mark_invoice_as_uncollectible
  endpoint:
    path: /core/invoices/{id}/uncollectible
    method: POST
    params:
      site_id: int32
- name: exports
  endpoint:
    path: /exports/uuid
    method: GET
- name: invoices
  endpoint:
    path: /invoices/id/uncollectible
    method: POST
- name: invoice
  endpoint:
    path: /api-core-invoice
    method: GET
    data_selector: records
- name: invoice
  endpoint:
    path: /core/invoices
    method: POST
    data_selector: data
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: POST
- name: invoices
  endpoint:
    path: /core/invoices
    method: GET
    data_selector: data
    params:
      site_id: int32
      limit: int32
      page: int32
      sort: string
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: invoices
  endpoint:
    path: /reference/api-core-invoices
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/api-open-subscription
    method: POST
- name: invoices
  endpoint:
    path: /core/invoices
    method: GET
    data_selector: results
    params:
      limit: 10
      page: 1
      sort: id
- name: members
  endpoint:
    path: /api-core-list-memberships
    method: GET
    data_selector: records
    params: {}
- name: invoices
  endpoint:
    path: /api-core-list-invoices
    method: GET
    data_selector: records
    params: {}
- name: invoice
  endpoint:
    path: /core/invoices/{id}
    method: GET
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: memberships
  endpoint:
    path: /core/memberships
    method: GET
    data_selector: data
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: invoices
  endpoint:
    path: /invoices/id
    method: GET
    params:
      limit: '10'
      page: '1'
- name: memberships
  endpoint:
    path: /core/memberships
    method: GET
    data_selector: members
    params: {}
- name: pay_invoice
  endpoint:
    path: /core/invoices/{id}/pay_offline
    method: POST
- name: member
  endpoint:
    path: /api-core-create-membership
    method: POST
- name: invoices
  endpoint:
    path: /invoices
    method: GET
- name: memberships
  endpoint:
    path: /memberships
    method: POST
    data_selector: data
    params:
      site_id: required
      customer_id: required
      subscription_id: required
      address_id: optional
      old_provider_id: optional
- name: void_invoice
  endpoint:
    path: /core/invoices/{id}/void
    method: POST
- name: memberships
  endpoint:
    path: /core/memberships
    method: POST
- name: list_members
  endpoint:
    path: /core/list-memberships
    method: GET
- name: invoices
  endpoint:
    path: /invoices/id/void
    method: POST
- name: members
  endpoint:
    path: /members
    method: GET
- name: invite_member
  endpoint:
    path: /members/invite
    method: POST
- name: invoice
  endpoint:
    path: /core/invoices/{id}
    method: PUT
- name: invite_member
  endpoint:
    path: /core/memberships/invite
    method: POST
    params:
      site_id: required
      email: required
      subscription_id: required
      old_provider_id: optional
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: records
- name: memberships
  endpoint:
    path: /core/memberships/invite
    method: POST
- name: get_member
  endpoint:
    path: /core/get-membership
    method: GET
- name: invoice
  endpoint:
    path: /api-core-mark-as-uncollectible-invoices
    method: POST
- name: membership
  endpoint:
    path: /core/memberships/{id}
    method: GET
    data_selector: data
    params:
      site_id: required
- name: mark_invoice_as_uncollectible
  endpoint:
    path: /core/invoices/{id}/uncollectible
    method: POST
- name: memberships
  endpoint:
    path: /core/memberships/id
    method: GET
- name: invoices
  endpoint:
    path: /invoices/id/uncollectible
    method: POST
- name: memberships
  endpoint:
    path: /core/memberships/{id}
    method: PUT
    params:
      site_id: int32
- name: invoices
  endpoint:
    path: /core/invoices
    method: POST
    data_selector: data
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: POST
- name: membership
  endpoint:
    path: /core/memberships/id
    method: PUT
- name: get_member
  endpoint:
    path: /core/get-membership
    method: GET
- name: delete_member
  endpoint:
    path: /core/delete-membership
    method: DELETE
- name: members
  endpoint:
    path: /api-core-list-memberships
    method: GET
- name: delete_member
  endpoint:
    path: /core/memberships/{id}
    method: DELETE
    params:
      site_id: required
- name: memberships
  endpoint:
    path: /core/memberships
    method: DELETE
- name: memberships
  endpoint:
    path: /core/memberships
    method: GET
    data_selector: data
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
    data_selector: records
- name: membership
  endpoint:
    path: /reference/api-core-memberships-attributes
    method: GET
    data_selector: records
- name: memberships
  endpoint:
    path: /core/memberships
    method: GET
    params:
      limit: '10'
      page: '1'
- name: ip_authorization
  endpoint:
    path: /core/memberships/ip/authorization
    method: POST
    data_selector: data
    params:
      site_id: required
- name: members
  endpoint:
    path: /api/core/members
    method: POST
    data_selector: membership
    params: {}
- name: attributes
  endpoint:
    path: /reference/api-core-coupon-object-attributes
    method: GET
    data_selector: records
- name: create_member
  endpoint:
    path: /memberships
    method: POST
    data_selector: data
    params:
      site_id: required
      customer_id: required
      subscription_id: required
      address_id: optional
      old_provider_id: optional
- name: memberships
  endpoint:
    path: /memberships
    method: POST
- name: members
  endpoint:
    path: /members
    method: GET
- name: newsletters
  endpoint:
    path: /core/newsletters
    method: GET
    params:
      site_id: required
      limit: '10'
      page: '1'
- name: invite_member
  endpoint:
    path: /api-core-invite-member
    method: POST
- name: newsletters
  endpoint:
    path: /newsletters
    method: GET
    params:
      limit: 10
      page: 1
- name: invite_member
  endpoint:
    path: /core/memberships/invite
    method: POST
    data_selector: data
    params:
      site_id: required
      email: required
      subscription_id: required
      old_provider_id: optional
- name: newsletter
  endpoint:
    path: /core/newsletters
    method: POST
    data_selector: ''
    params:
      site_id: int32
- name: memberships
  endpoint:
    path: /core/memberships/invite
    method: POST
- name: newsletters
  endpoint:
    path: /newsletters
    method: GET
- name: member
  endpoint:
    path: /core/memberships/{id}
    method: GET
    data_selector: data
    params:
      site_id: ''
- name: newsletter
  endpoint:
    path: /core/newsletters/{id}
    method: GET
    params:
      site_id: int32
- name: newsletter
  endpoint:
    path: /core/newsletters/id
    method: GET
- name: memberships
  endpoint:
    path: /core/memberships/{id}
    method: PUT
    params:
      site_id: int32
- name: newsletter
  endpoint:
    path: /core/newsletters/{id}
    method: PUT
    params:
      site_id: int32
- name: membership
  endpoint:
    path: /core/memberships
    method: GET
- name: newsletter
  endpoint:
    path: /core/newsletters/id
    method: PUT
- name: memberships
  endpoint:
    path: /core/memberships/{id}
    method: DELETE
    params:
      site_id: int32
- name: memberships
  endpoint:
    path: /core/memberships/id
    method: DELETE
- name: newsletter
  endpoint:
    path: /core/newsletters/{id}
    method: DELETE
    params:
      site_id: int32
- name: IP authorization
  endpoint:
    path: /api-core-member-ip-authorization
    method: POST
- name: newsletter
  endpoint:
    path: /core/newsletters/id
    method: DELETE
- name: organizations
  endpoint:
    path: /reference/api-core-organizations
    method: GET
    data_selector: organizations
- name: ip_authorization
  endpoint:
    path: /core/memberships/ip/authorization
    method: POST
    data_selector: data
    params:
      site_id: required
      ip_address: required
- name: organizations
  endpoint:
    path: /reference/api-core-organizations
    method: GET
- name: IP Authorization
  endpoint:
    path: /core/memberships/ip/authorization
    method: POST
- name: organizations
  endpoint:
    path: /reference/api-core-organizations
    method: GET
- name: attributes
  endpoint:
    path: /reference/api-core-coupon-object-attributes
    method: GET
- name: newsletters
  endpoint:
    path: /reference/api-core-list-newsletters
    method: GET
- name: memberships
  endpoint:
    path: /reference/api-core-list-memberships
    method: GET
- name: organizations
  endpoint:
    path: /reference/api-core-list-organizations
    method: GET
- name: products
  endpoint:
    path: /reference/list-e-commerce-products
    method: GET
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: data
    params:
      site_id: int32
      limit: int32
      page: int32
      sort: string
      filter[ATTRIBUTE]: array of strings
- name: newsletters
  endpoint:
    path: /core/newsletters
    method: GET
    params:
      site_id: required
      limit: '10'
      page: '1'
- name: organizations
  endpoint:
    path: /core/organizations
    method: GET
    params:
      limit: 10
      page: 1
      sort: id
- name: newsletters
  endpoint:
    path: /newsletters
    method: GET
    params:
      limit: 10
      page: 1
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: invoices
  endpoint:
    path: /reference/api-core-invoice-object-attributes
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/api-open-create-subscription
    method: POST
- name: newsletter
  endpoint:
    path: /core/newsletters
    method: POST
    data_selector: response
    params: {}
- name: organizations
  endpoint:
    path: /reference/api-core-list-organizations
    method: GET
    data_selector: records
    params: {}
- name: plans
  endpoint:
    path: /reference/api-core-list-plans
    method: GET
    data_selector: records
    params: {}
- name: newsletters
  endpoint:
    path: /core/newsletters
    method: POST
- name: plans
  endpoint:
    path: /core/plans
    method: GET
    data_selector: data
    params:
      site_id: required
- name: newsletter
  endpoint:
    path: /core/newsletters/{id}
    method: GET
    params:
      site_id: int32
- name: plans
  endpoint:
    path: /plans
    method: GET
    params:
      limit: '10'
      page: '1'
- name: newsletter
  endpoint:
    path: /core/newsletters/id
    method: GET
- name: plans
  endpoint:
    path: /plans
    method: POST
- name: newsletter
  endpoint:
    path: /core/newsletters/{id}
    method: PUT
- name: plans
  endpoint:
    path: /core/plans
    method: POST
    data_selector: results
- name: newsletter
  endpoint:
    path: /core/newsletters
    method: GET
- name: plan
  endpoint:
    path: /core/plans/{id}
    method: GET
    data_selector: data
- name: newsletter
  endpoint:
    path: /core/newsletters/{id}
    method: DELETE
    params:
      site_id: int32
- name: plans
  endpoint:
    path: /core/plans/id
    method: GET
- name: newsletter
  endpoint:
    path: /core/newsletters
    method: DELETE
- name: organizations
  endpoint:
    path: /reference/api-core-organizations
    method: GET
    data_selector: records
- name: plans
  endpoint:
    path: /core/plans/{id}
    method: PUT
    params:
      site_id: int32
- name: organizations
  endpoint:
    path: /reference/api-core-organizations
    method: GET
- name: plans
  endpoint:
    path: /core/plans
    method: GET
- name: organizations
  endpoint:
    path: /reference/api-core-organizations
    method: GET
    data_selector: organizations
- name: update_plan_legacy
  endpoint:
    path: /core/plans/{id}
    method: POST
- name: organizations
  endpoint:
    path: /core/organizations
    method: GET
    data_selector: data
    params:
      site_id: required
      limit: '10'
      page: '1'
      sort: id
- name: plans
  endpoint:
    path: /plans
    method: POST
- name: plans
  endpoint:
    path: /core/plans/{id}
    method: DELETE
    params:
      site_id: int32
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    params:
      limit: '10'
      page: '1'
      sort: id
- name: plans
  endpoint:
    path: /plans
    method: DELETE
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /reference/api-core-products
    method: GET
    data_selector: records
- name: organizations
  endpoint:
    path: /reference/api-core-list-organizations
    method: GET
- name: plans
  endpoint:
    path: /reference/api-core-list-plans
    method: GET
- name: list_products
  endpoint:
    path: /reference/api-core-list-products
    method: GET
    data_selector: products
- name: plans
  endpoint:
    path: /core/plans
    method: GET
    data_selector: data
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: data
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: plans
  endpoint:
    path: /plans
    method: GET
    data_selector: result
    params:
      limit: 10
      page: 1
- name: products
  endpoint:
    path: /core/products
    method: GET
    params:
      limit: '10'
      page: '1'
- name: plan
  endpoint:
    path: /core/plans
    method: POST
- name: products
  endpoint:
    path: /core/products
    method: POST
    data_selector: data
    params:
      site_id: int32
- name: plans
  endpoint:
    path: /plans
    method: POST
    data_selector: auto_renew
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
- name: plans
  endpoint:
    path: /core/plans/{id}
    method: GET
    data_selector: data
    params:
      site_id: required
- name: product
  endpoint:
    path: /core/products/{id}
    method: GET
    data_selector: data
    params:
      site_id: ''
- name: plans
  endpoint:
    path: /core/plans
    method: GET
- name: products
  endpoint:
    path: /products/id
    method: GET
- name: products
  endpoint:
    path: /core/products/{id}
    method: PUT
    params:
      site_id: int32
- name: plans
  endpoint:
    path: /core/plans/{id}
    method: PUT
    params:
      site_id: int32
- name: plans
  endpoint:
    path: /core/plans/id
    method: PUT
- name: product
  endpoint:
    path: /core/products/id
    method: PUT
- name: product
  endpoint:
    path: /core/products/{id}
    method: POST
    params:
      site_id: required
- name: Update plan (Legacy)
  endpoint:
    path: /core/plans/{id}
    method: POST
- name: products
  endpoint:
    path: /core/products
    method: GET
- name: products
  endpoint:
    path: /core/products/{id}
    method: DELETE
    params:
      site_id: int32
- name: plans
  endpoint:
    path: /core/plans/{id}
    method: delete
    params:
      site_id: int32
- name: products
  endpoint:
    path: /core/products
    method: DELETE
- name: plans
  endpoint:
    path: /plans/id
    method: DELETE
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: products
  endpoint:
    path: /reference/api-core-products
    method: GET
- name: refunds
  endpoint:
    path: /core/refunds
    method: GET
    params:
      limit: '10'
      page: '1'
- name: products
  endpoint:
    path: /reference/list-products
    method: GET
    data_selector: products
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: data
    params:
      site_id: ''
      limit: '10'
      page: '1'
- name: sources
  endpoint:
    path: /api/v1/core/sources
    method: GET
    data_selector: json
    params:
      site_id: int32
      limit: int32
      page: int32
- name: products
  endpoint:
    path: /core/products
    method: GET
    params:
      limit: 10
      page: 1
- name: sources
  endpoint:
    path: /sources
    method: GET
    data_selector: records
    params:
      limit: 10
      page: 1
- name: products
  endpoint:
    path: /core/products
    method: POST
    data_selector: data
    params:
      site_id: int32
- name: products
  endpoint:
    path: /core/products
    method: GET
- name: source
  endpoint:
    path: /sources/{id}
    method: GET
    params:
      site_id: required
- name: product
  endpoint:
    path: /core/products/{id}
    method: GET
    data_selector: data
    params:
      site_id: ''
- name: sources
  endpoint:
    path: /sources/id
    method: GET
    params:
      limit: '10'
      page: '1'
- name: products
  endpoint:
    path: /products/id
    method: GET
- name: create_payment_method
  endpoint:
    path: /api/v1/core/sources
    method: POST
    params:
      site_id: int32
      customer_id: int32
- name: products
  endpoint:
    path: /core/products/{id}
    method: PUT
    params:
      site_id: int32
- name: product
  endpoint:
    path: /products/id
    method: PUT
- name: sources
  endpoint:
    path: /core/sources/{id}
    method: delete
    params:
      site_id: int32
- name: sources
  endpoint:
    path: /sources/id
    method: DELETE
- name: update_product
  endpoint:
    path: /core/products/{id}
    method: POST
    params:
      site_id: int32
- name: product
  endpoint:
    path: /core/products/id
    method: POST
    data_selector: null
    params: {}
- name: subscriptions
  endpoint:
    path: /reference/api-core-subscription
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
    data_selector: records
- name: subscription
  endpoint:
    path: /api-core-subscription
    method: GET
    data_selector: records
    params: {}
- name: delete_product
  endpoint:
    path: /core/products/{id}
    method: DELETE
    params:
      site_id: required
- name: products
  endpoint:
    path: /core/products/id
    method: DELETE
- name: subscriptions
  endpoint:
    path: /reference/api-core-list-subcriptions
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params:
      site_id: ''
      limit: 10
      page: 1
- name: refunds
  endpoint:
    path: /core/refunds
    method: GET
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: refunds
  endpoint:
    path: /core/refunds
    method: GET
    params:
      limit: '10'
      page: '1'
- name: subscriptions
  endpoint:
    path: /core/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: POST
- name: attributes
  endpoint:
    path: /reference/api-core-coupon-object-attributes
    method: GET
    data_selector: records
    params: {}
- name: subscription
  endpoint:
    path: /core/subscriptions/{id}
    method: GET
    data_selector: data
    params:
      site_id: required
- name: sources
  endpoint:
    path: /sources
    method: GET
    params:
      site_id: int32
      limit: int32
      page: int32
- name: subscriptions
  endpoint:
    path: /core/subscriptions/id
    method: GET
- name: sources
  endpoint:
    path: /sources
    method: GET
    data_selector: results
    params:
      limit: 10
      page: 1
- name: subscriptions
  endpoint:
    path: /core/subscriptions/{id}
    method: PUT
    params:
      site_id: int32
- name: subscription
  endpoint:
    path: /subscriptions/id
    method: PUT
- name: source
  endpoint:
    path: /sources/{id}
    method: GET
    params:
      site_id: int32
- name: renew_subscription
  endpoint:
    path: /core/subscriptions/renew
    method: POST
    data_selector: data
    params:
      site_id: required
      user_id: required
      subscription_id: required
      plan_id: required
      address_id: optional
      source_id: optional
      auto_renew: optional
      campaign_key: optional
      collection_method: optional
      coupon_code: optional
      quantity: required
      source: required
- name: sources
  endpoint:
    path: /core/sources/id
    method: GET
    params:
      limit: 10
      page: 1
- name: subscriptions
  endpoint:
    path: /core/subscriptions/renew
    method: POST
    data_selector: object
- name: sources
  endpoint:
    path: /api/v1/core/sources
    method: POST
    data_selector: data
    params: {}
- name: delete_phase
  endpoint:
    path: /core/subscriptions/{id}/phases
    method: DELETE
    data_selector: object
    params:
      site_id: required
- name: subscriptions
  endpoint:
    path: /subscriptions/id/phases
    method: DELETE
- name: sources
  endpoint:
    path: /core/sources/{id}
    method: DELETE
    params:
      site_id: int32
- name: redeem_subscription
  endpoint:
    path: /core/subscriptions/redeem
    method: POST
    params:
      site_id: required
      gift_code: required
      user_id: required
      subscription_id: optional
      address_id: optional
- name: subscriptions
  endpoint:
    path: /core/subscriptions/redeem
    method: POST
- name: subscriptions
  endpoint:
    path: /reference/api-core-subscription
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /reference/api-core-products
    method: GET
    data_selector: records
- name: subscription
  endpoint:
    path: /api-core-subscription
    method: GET
    data_selector: records
    params: {}
- name: webhooks
  endpoint:
    path: /reference/api-core-webhook
    method: GET
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
    data_selector: records
    params: {}
- name: invoices
  endpoint:
    path: /reference/api-core-invoices
    method: GET
    data_selector: records
    params: {}
- name: webhook
  endpoint:
    path: /core/webhooks
    method: GET
    data_selector: data
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: subscriptions
  endpoint:
    path: /api-core-subscription
    method: GET
- name: list_subscriptions
  endpoint:
    path: /api-core-list-subcriptions
    method: GET
- name: webhook
  endpoint:
    path: /core/webhooks
    method: GET
    params:
      limit: '10'
      page: '1'
- name: subscriptions
  endpoint:
    path: /core/subscriptions
    method: GET
    data_selector: data
    params:
      site_id: required
      limit: '10'
      page: '1'
- name: webhook
  endpoint:
    path: /core/webhooks
    method: POST
    data_selector: data
    params:
      site_id: required
- name: subscriptions
  endpoint:
    path: /core/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
- name: webhook
  endpoint:
    path: /core/webhooks/{id}
    method: GET
    data_selector: data
    params:
      site_id: ''
- name: subscriptions
  endpoint:
    path: /core/subscriptions
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
- name: webhook
  endpoint:
    path: /core/webhooks/id
    method: GET
- name: webhook
  endpoint:
    path: /core/webhooks/{id}
    method: POST
    data_selector: data
    params:
      site_id: required
- name: subscription
  endpoint:
    path: /core/subscriptions/{id}
    method: GET
    params:
      site_id: int32
- name: webhook
  endpoint:
    path: /core/webhooks/id
    method: POST
- name: webhook
  endpoint:
    path: /core/webhooks/{id}
    method: DELETE
    params:
      site_id: int32
- name: subscriptions
  endpoint:
    path: /core/subscriptions/{id}
    method: PUT
- name: subscription
  endpoint:
    path: /core/subscriptions
    method: GET
- name: webhook
  endpoint:
    path: /core/webhooks/id
    method: DELETE
- name: subscriptions
  endpoint:
    path: /core/subscriptions/renew
    method: POST
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: products
  endpoint:
    path: /reference/api-core-product-object-attributes
    method: GET
- name: subscriptions
  endpoint:
    path: /core/subscriptions/renew
    method: POST
- name: customers
  endpoint:
    path: /api-open-customers
    method: GET
    data_selector: records
    params:
      site_id: ''
- name: delete_phase
  endpoint:
    path: /core/subscriptions/{id}/phases
    method: DELETE
    params:
      site_id: int32
      mode: string
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
    data_selector: customers
    params: {}
- name: subscriptions
  endpoint:
    path: /core/subscriptions
    method: DELETE
- name: payment_method
  endpoint:
    path: /api-open/payment-methods
    method: GET
    data_selector: data
- name: customer
  endpoint:
    path: /api-open/customer
    method: GET
    data_selector: data
- name: plan
  endpoint:
    path: /api-open/plan
    method: GET
    data_selector: data
- name: redeem_subscription
  endpoint:
    path: /core/subscriptions/redeem
    method: POST
- name: eligible_coupons
  endpoint:
    path: /eligible/coupons
    method: GET
    data_selector: data
- name: eligible_product_skus
  endpoint:
    path: /reference/api-open-segments-eligible-product-skus
    method: GET
    data_selector: data
    params: {}
- name: payment_method
  endpoint:
    path: /api-open-payment-methods
    method: GET
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
- name: invoices
  endpoint:
    path: /reference/api-core-invoices
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/api-open-create-subscription
    method: POST
- name: payment_method
  endpoint:
    path: /api-core/payment-methods
    method: GET
    data_selector: data
- name: webhooks
  endpoint:
    path: /api-core/webhook
    method: GET
    data_selector: webhooks
    params: {}
- name: webhooks
  endpoint:
    path: /core/webhooks
    method: GET
    data_selector: data
    params:
      site_id: required
      limit: Defaults to 10
      page: Defaults to 1
- name: webhooks
  endpoint:
    path: /list
    method: GET
    params:
      limit: '10'
      page: '1'
- name: addresses
  endpoint:
    path: /api/core/addresses
    method: GET
- name: campaigns
  endpoint:
    path: /api/core/campaigns
    method: GET
- name: charges
  endpoint:
    path: /api/core/charges
    method: GET
- name: customers
  endpoint:
    path: /api/core/customers
    method: GET
- name: invoices
  endpoint:
    path: /api/core/invoices
    method: GET
- name: memberships
  endpoint:
    path: /api/core/memberships
    method: GET
- name: newsletters
  endpoint:
    path: /api/core/newsletters
    method: GET
- name: organizations
  endpoint:
    path: /api/core/organizations
    method: GET
- name: plans
  endpoint:
    path: /api/core/plans
    method: GET
- name: products
  endpoint:
    path: /api/core/products
    method: GET
- name: subscriptions
  endpoint:
    path: /api/core/subscriptions
    method: GET
- name: webhooks
  endpoint:
    path: /api/core/webhooks
    method: GET
- name: webhook
  endpoint:
    path: /api/v1/core/webhooks
    method: POST
    data_selector: data
    params:
      site_id: int32
- name: site_configuration
  endpoint:
    path: /api-open-get-site-configuration
    method: GET
    data_selector: site
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
- name: site_configuration
  endpoint:
    path: /reference/api-open-get-site-configuration
    method: GET
    data_selector: configuration
    params: {}
- name: webhook
  endpoint:
    path: /core/webhooks/{id}
    method: GET
    data_selector: data
    params:
      site_id: required
- name: webhook
  endpoint:
    path: /core/webhooks/id
    method: GET
- name: webhook
  endpoint:
    path: /core/webhooks/{id}
    method: POST
    params:
      site_id: required
      url: required
      description: ''
      all_events_enabled: ''
      events_enabled: ''
- name: webhook
  endpoint:
    path: /core/webhooks/id
    method: POST
- name: webhook
  endpoint:
    path: /core/webhooks/{id}
    method: DELETE
    params:
      site_id: required
- name: webhook
  endpoint:
    path: /webhooks/id
    method: DELETE
- name: customers
  endpoint:
    path: /api/core/customers
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /api/core/ecommerce/orders
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /api/core/products
    method: GET
    data_selector: records
- name: site_id
  endpoint:
    path: /
    method: GET
    data_selector: site_id
    params: {}
- name: customers
  endpoint:
    path: /reference/api-core-customers
    method: GET
    data_selector: customers
- name: plan
  endpoint:
    path: /reference/api-open-segments-eligible-plans
    method: GET
    data_selector: data
    params: {}
- name: coupon
  endpoint:
    path: /eligible/coupons
    method: GET
    data_selector: data
    params: {}
- name: newsletter
  endpoint:
    path: /api-open-newsletter
    method: GET
- name: payment_method
  endpoint:
    path: /list/payment_methods
    method: GET
    data_selector: data
- name: site_configuration
  endpoint:
    path: /reference/api-open-get-site-configuration
    method: GET
- name: site_configuration
  endpoint:
    path: /reference/api-open-get-site-configuration
    method: GET
notes:
- API key is valid for a period of 2 years.
- Access token is only valid for 2 days.
- You can delete revoked API keys by choosing 'Delete' from the action menu next to
  the corresponding API key. When the API key is deleted, it will disappear from the
  list and cannot be reinstated.
- Uses OAuth2 — requires setup of connected app in Pelcro
- This simplifies SKU management and retrieval processes.
- Ensure to set up OAuth2 with the necessary scopes
- The access token is only valid for 2 days and will only be scoped to the account
  where the application credentials were created on.
- Skipping the payment gateway setup allows you to explore Pelcro immediately.
- However, you won’t be able to create online plans or eCommerce items with a price
  greater than 0 until a payment gateway is configured.
- Before launching with us, we recommend collecting the following information.
- Ensure to set up your OAuth2 credentials properly.
- Contact us at support@pelcro.com and we're happy to assist with any questions or
  concerns.
- There are important limitations to be aware of when migrating your data in Pelcro’s
  system.
- You cannot migrate expired or canceled subscriptions.
- For active subscriptions, a charge equal to the plan price will be attempted during
  the migration process.
- 'Gift subscriptions must have two records: one for the donor and one for the recipient.'
- Pelcro only supports specific password encryption mechanisms.
- Ensure you've tested and validated all relevant integrations which will be in-use
  with Pelcro.
- Shipping address is required for subscriptions if sales tax is enabled or if the
  payment gateway requires it.
- Follow our progress and upcoming features in our Public Roadmap
- You can submit an idea on the roadmap
- Pelcro Co-Pilot does not process or expose any of your data. All data interactions
  are scoped strictly to your own account.
- Auto-renewing unpaid subscriptions may generate an open invoice.
- Non-auto-renewing unpaid subscriptions will have their collection method forced
  to send_invoice.
- 'Gift subscriptions must be split into two records: gift donor and gift recipient.'
- Pelcro only supports specific password encryption mechanisms for migration.
- A sample of hashes with their respective passwords must be provided for password
  migration.
- 'No Fees: Keep Stripe or other processors for payments, but avoid the additional
  percentage-based fees charged by third-party billing vendors. You get predictable
  costs without sacrificing reliability.'
- 'Faster Processing: Eliminate delays caused by syncing data into Stripe Billing.
  With transactions processed directly in the billing engine, invoices, payments,
  and reports update instantly.'
- 'Full Control: Configure billing to match your accounting policies and customer
  agreements. Control how and when revenue is recognized, how credits and adjustments
  are applied, and ensure compliance with your internal rules and external standards.'
- 'Future-Ready: Leverage AI-powered billing, intelligent retry logic, and native
  integrations with CRMs, ESPs, and fulfillment systems. Stay ahead with a platform
  built to scale and adapt to new technologies.'
- We strongly recommend that you go through -at minimum- all of our Platform guides,
  relevant Integrations guides, as well as our Accounting & Taxes guides before you
  proceed with going live.
- Collaborators are only available for Professional and Enterprise plans.
- This Shipping Agent is in Beta, we recommend thorough testing on staging environments
  before enabling it on your live site.
- Automated emails are not customizable and are sent based on actions that took place
  on the platform.
- Logs track the majority of events and changes related to your account and sites,
  which can provide you with valuable information when something goes wrong.
- Emails will be required to be unique across each account.
- If a business has multiple sites that use the same top-level domain, the auth_token
  will be shared across the sub-domains.
- Invoices are generated and branded directly in Pelcro.
- Subscriptions are fully managed in Pelcro.
- Multi-account access functionality allows users to have better control and organization
  over various sites.
- The import tool can be used to bulk import both customers and subscriptions.
- The tool automatically validates the data provided during the upload process to
  ensure consistent and accurate results from the import.
- Automated emails are meant to notify your customers about their accounts.
- The default emails are not customizable and are sent as soon as an event takes place
  in the system.
- Pelcro maintains a strong GDPR compliance program and is committed to protecting
  and respecting the privacy rights of all of our users across the world.
- Platform activity logs track the majority of events and changes related to your
  account and sites.
- If a business has multiple sites with different top-level domains, it is possible
  to synchronize the cookie across the domains.
- Available for US addresses only
- Invalid addresses will return an error
- The maximum allowed rows count is 150 rows per file.
- There are currently no limits on the number of keys or the total storage size.
- Pelcro supports you in maintaining compliance efforts with international privacy
  regulations (e.g. GDPR).
- An address can either be of type shipping or type billing.
- A customer can have multiple addresses of the same type.
- Pelcro will automatically detect the language each user selects on the site and
  display all products, error messages, and paywalls in the selected language.
- Supported languages include French, English, Italian, Spanish, and Korean.
- Ensure to configure the paywalls correctly based on targeting criteria.
- Pelcro leverages a combination of technologies to enforce a stringent paywall.
- Content can partially be loaded from the server to circumvent AdBlockers.
- Membership feature allows management of enterprise, corporate, or group subscriptions.
- A membership owner gets billed instead of individual members.
- Products must be created before selling subscriptions.
- Address is required for products that need to be shipped.
- You would need consent for your customers to be subscribed to your newsletters.
- Authorization features allow you to determine whether your customer is authorized
  to receive a certain service or product from your business.
- We currently support French, English, Italian, Spanish and Korean.
- Pelcro enhances controlled circulation with seamless data collection and dynamic
  audience segmentation.
- Automation for bulk subscription management is available.
- Membership feature requires the management of membership owners and members.
- Entering emojis and special characters is not allowed in the gift message.
- A subscription will be created for the donor which will be marked as cancel at period
  end.
- An invoice will be generated and the donor will be required to pay the invoice.
- If the invoice is not paid by the donor, an error will be returned during the redemption
  process.
- You would need consent for your customers to be subscribed to your newsletters,
  which is why this is uneditable off the platform.
- Payment method expiration notifications can trigger webhook notifications for expiring
  payment methods.
- Consent is required for customers to be subscribed to newsletters.
- Pelcro enables publishers to implement a Controlled Circulation model, allowing
  them to provide free or targeted content access to qualified audiences while collecting
  valuable demographic data for future engagement.
- Invoices can be one-time or recurring.
- 'Invoices are categorized into six different tabs according to their status: All,
  Draft, Open, Past due, Paid, or Uncollectible.'
- Lists are static groups of objects that are organized under a single, identifiable
  label.
- Membership role is a multi-select dropdown for including or excluding Owners, Members,
  or both.
- Fulfillment lists are static and can only be used once.
- Pelcro provides various supported payment options and methods for different locations
  and business needs.
- Customer filters can be used to segment subscriptions based on data tied to the
  customers.
- You can include or exclude specific values as needed in multi-select dropdowns.
- You can create fulfillments for members that are part of your membership plan.
- The export will only include active members with an address tied to their membership.
- 3D-secure is required by some card issuers for authentication.
- Payment method expiration notifications can trigger webhook notifications.
- To enable USPS Mail Presorting on your account, please contact us at support@pelcro.com
- Uses OAuth2 with refresh token — requires setup of connected app in Pelcro
- Campaigns can trigger webhooks for various events like 'campaign.triggered' and
  'subscription.renewed'
- You cannot apply a customer balance to a specific invoice, the customer balance
  can only be used against an invoice that is created after the customer balance is
  created
- Customer balance will automatically be applied to the next invoice created for the
  customer
- The customer balance will always be in the same currency as the customer currency
- Ensure that your email service provider is integrated with Pelcro.
- Lists can only be created for subscriptions.
- Membership role - Multi-select dropdown for the 'membership roles' allows you to
  include or exclude Owners, Members, or both.
- Segments are dynamic and characteristic-driven.
- Can create segments based on various filters including location, product, and subscription
  criteria.
- In the subscription segments creation, customer filters can be used to segment subscriptions
  based on data tied to the customers.
- In the lists creation, Customer filters can be used to segment subscriptions based
  on data tied to the customers.
- To facilitate your segment creation process if you're working with high segmentation
  volumes, you can quickly create new segments based off of current segments.
- You will also be able to see the lists and fulfillment associated with each subscription
  by viewing any subscription that was included in the fulfillment and its associated
  lists.
- Associated lists and fulfillments are important in order to understand what customers
  should have received. Note that although a fulfillment is shown to a customer, it
  does not necessarily mean that the customer has received the shipment. Your support
  team should be aware of the different delays associated with a fulfillment.
- To enable USPS Mail Presorting on your account, please contact support@pelcro.com
- Each brand or publication may have different USPS templates and presort configurations.
- Campaigns are used to send advertisements & limited-time promotional offers.
- Automations can run one-time or on a fixed schedule.
- Campaign keys can either be static or auto-generated.
- Available for Professional & Enterprise Plans
- Subscription cancellations will immediately stop time-based revenue recognition,
  and recognize all remaining deferred revenue
- Data freshness depends on the specific type of data you're exporting.
- Export times vary based on the type of export, its complexity, server load, and
  the size of the data set.
- If you are planning to configure taxes to be enabled on your site, all of your offered
  products will require a customer address to ensure taxes are properly handled and
  processed.
- We typically monitor and update changes in tax rates in for supported countries
  and regions.
- Pelcro offers a variety of prebuilt reports to give you quick insights into your
  overall subscription and billing performance.
- 'Each of our standard reports has 2 views: Graph and List View.'
- Each ledger account represents a specific aspect of a business's finances.
- Transactions maintain an accurate record of the company's financial activity.
- Pelcro makes it easy to collect and remit all the required taxes.
- Enable automatic tax calculation from your Pelcro settings page > Taxes.
- Pelcro guarantees synchronization of online payments processed on Stripe and reflected
  on Pelcro.
- PayPal shipping addresses are not used within Pelcro.
- Invoices paid via PayPal are marked as 'paid offline.'
- This integration is designed for your default currency.
- Payments will not be processed if you do not do this correctly.
- Ensure the Merchant ID is linked to Pelcro for payments processing.
- Different environments (Sandbox, Pre-live, Post live, Production) must be specified.
- Supports US Dollar as the only currency.
- The recommended_plan_id attribute allows you to identify suggested plans for each
  subscriber.
- Pelcro integrates with Stripe to accept payments and manage your businesses online.
- It's important to migrate to Google Analytics 4 (GA4) to continue tracking website
  data since Universal Analytics has been deprecated.
- Ensure the gateway is activated by selecting Active.
- Multiple accounts are needed for multiple currencies.
- Integration requires configuration of Key ID, Merchant ID, and Secret key.
- This integration will automatically sync into Klaviyo in real-time all the user
  newsletters and the associated data.
- The integration will also automatically sync into Klaviyo in real-time all the user
  information and their associated events.
- Integration setup is quick, easy, and guaranteed to save your business valuable
  time.
- The request could generate an error from MailChimp if the length of an email exceeds
  1000 characters.
- Uses API Key for authentication
- MailChimp acquired Mandrill for transactional emails.
- API Key and shared secret are required for integration.
- Uses API key for authentication.
- Pelcro integrates with Omeda to automatically sync all of your Pelcro customer and
  newsletter data directly into your Omeda information elements.
- Your request must include the API secret key as a Bearer Authorization.
- Requires API Key with Full Access permissions
- You can fetch the Vimeo API public key from the provided link.
- Ensure to change the site ID in the webhook URL before saving.
- Disqus integration requires generating a script via JS that would include a parameter
  retrieved from the Pelcro APIs.
- You will need to ensure you are first adhering to the AMP structure.
- You have to choose the plan that you just linked a Vimeo's product with.
- This will create a paid invoice for this subscription with the status "Paid by Vimeo".
- To integrate Pelcro on Wordpress, log in to your Wordpress account and follow the
  steps to copy and paste the script in your integration page.
- Contact your Zinio support team to retrieve the following Zinio API keys in order
  to provide them to the Pelcro team.
- AvaTax is not supported yet for ecommerce orders and standalone invoices.
- Uses token-based (JWT) workflow.
- Pelcro does not implement Tecnavia’s MD5+seed password variant; use the token (JWT)
  approach.
- react-pelcro-js integrates with our JS-SDK to make it easier for you to use all
  our features in your react application.
- The sign-in configuration is the page the user will be re-directed to in order to
  login into his account
- The sign-out configuration is the end-point that will be used to log the user out
- The pelcro.user.auth.token cookie has a lifetime of 60 days and is extended every
  time the user reloads the page.
- The JWT (JSON Web Token) TTL is also 60 days, but it does not get extended on page
  reloads.
- Pelcro scopes all user interface under .pelcro-root.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Handles user authentication and profile management.
- Emits DOM events when responses are returned successfully.
- To protect the security and stability of our platform, we reserve the right to block
  traffic from outdated and unsupported versions of the SDK.
- Methods for retrieving your site's configuration, such as product settings, branding,
  and enabled features.
- Requires setup of user authentication token before making requests.
- These methods are considered legacy and will be removed in a future version.
- Creates a new user payment method using a stripe token.
- Updates a payment method's details using payment method id.
- Methods for retrieving individual subscription plans, either directly by ID or based
  on corporate access rules like IP address or email domain.
- Provides a method to generate a pre-purchase summary for a subscription order.
- Methods for retrieving marketing and promotional campaign data, either by ID or
  a unique key.
- You can only make this call if the user is authenticated.
- Open API is designed to be used in the context of a user-interface, whether it be
  web or mobile.
- Pelcro's Open API adheres to the REST architectural style.
- Endpoints must quickly return a successful status code (2xx) prior to processing
  the event.
- For added security, your integration should make sure the events it receives originate
  from Pelcro's infrastructure.
- Triggers when a new address record is created and added to an end user's record.
- Anytime an existing address record has been updated on an end user's record, the
  address.updated event is triggered confirming that the address has been updated
  on their account.
- Webhook data is sent as JSON in the POST request body.
- Triggered when the end-user's credit card has failed upon submitting a charge.
- Anytime a new address record is created and added to an end user's record, the address.created
  event is triggered confirming that the new address has been created/added to their
  account.
- Anytime an existing address record has been updated on an end user's record, the
  `address.updated` event is triggered confirming that the address has been updated
  on their account.
- Requires setup of connected app in your service
- Some objects may return nulls in deeply nested fields
- Requires setup of connected app in Pelcro
- Uses the event type charge.succeeded
- Uses OAuth2 for authentication.
- Data includes nested objects such as charge, customer, and invoice.
- Webhook gets triggered once a customer gets deleted from the platform.
- Triggered upon any successful password change
- Uses a standard API without authentication requirements.
- The customer.created event is triggered whenever a user registers via the Pelcro
  Platform.
- The invoice will remain in open status until paid.
- This webhook gets triggered when a customer is deleted from the platform.
- Triggers whenever a user's information gets updated via the Pelcro Platform.
- The customer.PasswordResetRequestSubmitted event gets triggered whenever the user
  requests a password reset.
- Triggered upon any successful password change.
- Ensure to pass API key in the header for authentication.
- Some fields may return null depending on their availability.
- The customer.email_verification_succeeded event is triggered when a user successfully
  verifies their email.
- Billing information is nested within the invoice object.
- The 'Customer passwordless login' setting must be enabled on the platform.
- This functionality is currently in Beta
- Billing reason may vary by invoice.
- Ensure proper permissions are set for OAuth.
- Uses OAuth2 with refresh token — requires setup of connected app in pelcro
- Some objects like Customer may return nulls in deeply nested fields
- The `newsletter.updated` event is triggered whenever a Newsletter record has been
  updated for the end-user on the Pelcro platform.
- Anytime a new e-commerce order record is created and added to an end user's record,
  the order.created event is triggered confirming that the new order has been created/added
  to their account.
- Once a user logs in/registers after they received an email invitation following
  a 'member.created' webhook, they will be added to the membership and the 'member.activated'
  webhook will be dispatch.
- If a user was invited via email address to a membership, then a 'member.created'
  webhook will be dispatched.
- If the domain or IP address of a user was added to the membership subscription,
  then once that user logs in/registers, you would receive both 'member.created' and
  'member.activated' webhooks.
- Triggered when a product SKU is updated.
- The `member.deleted` webhook gets triggered once a member is removed from a membership
  subscription.
- Event triggered from open_api
- Event triggered from Open API
- Triggering this event requires contacting Stripe's support to cancel/delete a source.
- The payload can vary based on the payment gateway tied to your account
- Triggered when a payment attempt for an e-commerce order fails.
- The event is triggered whenever a card or source will expire at the end of the month.
- The webhook event indicates a product was deleted.
- The event contains details about the product such as ID, type, and timestamps.
- Some fields may return null values.
- Uses OAuth2 for authentication
- Some objects like plan may return nulls in deeply nested fields
- The `susbcription.expired` event is triggered whenever a customer's subscription
  ends.
- The `source.expiring` event is triggered whenever a card or source will expire at
  the end of the month.
- The `source.expired` event is triggered whenever a card or source has expired.
- Triggered whenever the subscription is renewed and a new phase is added to the subscription.
- Triggered when a fraud rule is met and the chosen action was 'notify'.
- Some fields may return null for certain subscriptions
- The iOS SDK is outdated and is no longer supported.
- subscription.expired
- The Android SDK is outdated and is no longer supported.
- For enhanced security, you can choose to enable Multi-factor authentication or MFA.
- When relying on SMS as the OTP authentication method, Pelcro will send you an SMS
  with a 6 digit authentication code when prompted. SMS cannot be delivered in all
  countries, so you'll need to check that your country is supported before proceeding
  further.
- If you do not receive your OTP, you can click 'Resend Code' for Pelcro to attempt
  sending you the OTP again. Please note that you're allowed a maximum of 3 retries,
  after which you'll need to wait for 15 minutes before trying to resend the code
  again.
- This setting is enabled by default and locks out accounts after a certain number
  of unsuccessful login attempts for enhanced security. The default values are 10
  for the maximum number of failed attempts and 5 minutes for the lockout period.
- Triggered three days before the trial period ends.
- The subscription.updated event is triggered when a subscription transition from
  one status to another, gets renewed, is updated from the platform, it's billing
  cycle is changed.
- Both site and plan updates go live within minutes, and your visitors always get
  the fastest, freshest experience possible.
- Login tokens typically last for 60 days after you log in or sign up.
- The token itself doesn't refresh automatically by you using the app.
- Throttling Introduced on the IP Authorization Open API endpoint to protect stability
  and performance.
- Data is cached in the Pelcro SDK and might not be read from a virtual device's storage.
- MFA works by requiring additional verification 6 digit code. With OTPs, a new code
  is generated each time an authentication request is submitted.
- When relying on SMS as the OTP authentication method, Pelcro will send you an SMS
  with a 6 digit authentication code when prompted. SMS cannot be delivered in all
  countries.
- You will have to follow the steps carefully to activate risk assessment on your
  site.
- 10 objects per page will be returned by default.
- Maximum of 100 objects per page can be set using the limit attribute.
- Each account is allowed a maximum of 120 operations per minute.
- If you exceed your rate limit, you'll receive a standard 429 Too Many Requests HTTP
  status code.
- Queuing requests can help manage rate limits.
- For technical issues, questions, or anything related to the use of the platform,
  please contact our support team directly.
- All searches are case-insensitive
- When no operator is specified on any given filter, the default is always eq
- Filters must contain at least one primary operator. Primary operators are eq, like
  and has
- The has or orhas operators can only by used against metadata, only on top level-attributes
- For metadata search, like and orlike operators are not supported
- Multiple filters for the same attribute cannot be detected, hence is not supported
- When combining an or operator with any other primary operators, filters are independent
  of one another, meaning you will get the results of both filters
- Requires setup of connected app in api
- Throttling Introduced on IP Authorization Open API
- A customer can have only one default address of the same type set at all times.
- All list endpoints will always return special pagination attributes
- The `meta` attribute contains various information such as the current page, the
  total number of pages, the number of objects per page and the total number of objects
  in the result set.
- 'Queuing requests: For users who consistently reach the limit, storing requests
  in a queue and processing them at a controlled rate can be a helpful strategy.'
- By following these recommendations, you can effectively manage rate limits and optimize
  your API interactions.
- When no operator is specified on any given filter, the default is always `eq`
- Filters must contain at least one primary operator. Primary operators are `eq`,
  `like` and `has`
- The `has` or `orhas` operators can only by used against `metadata`, only on top
  level-attributes
- For metadata search, `like` and `orlike` operators are not supported
- When combining an `or` operator with any other primary operators, filters are independent
  of one another, meaning you will get the results of **both** filters
- You can include the expand query parameter to fetch related objects.
- API supports pagination and rate limits.
- Always required for accounts with an active `tap` payment gateway.
- Uses a header for authentication.
- Defaults to 0 for integer fields.
- Some fields like 'shippable' default to true.
- Some endpoints may have rate limits.
- Requires setup of connected app in pelcro
- Invoices can be created via the invoice editor.
- Finalized invoices may have null values in certain fields.
- API Reference is available for detailed endpoint information.
- Some API methods may require additional parameters.
- Mark invoice as uncollectible
- The invoice must be in an `open` or `past_due` status to be marked uncollectible.
- Some API responses may vary based on user permissions
- Authorization header is required and defaults to Bearer token.
- Some endpoints may require additional permissions.
- Defaults to Bearer eyJ***
- Headers require Authorization as Bearer token.
- 'URL Expired: The URL for this request expired after 30 days.'
- Authorization requires a Bearer token in the header.
- Some objects like Contact may return nulls in deeply nested fields
- The Authorization header is required and defaults to Bearer eyJ***
- API follows REST architecture.
- Site ID is required as a query parameter for all requests.
- Endpoints which are protected require context of the authenticated customer.
- Make sure to review the documentation for each endpoint, as required information
  may vary depending on the payment gateway you are using.
- The URL for this request expired after 30 days.
- API supports multiple versions, ensure to use the correct version for your requests.
- The site_id is required as a query parameter for all requests, regardless if the
  endpoint is public or protected.
- The site object contains all the configuration of the site on the platform.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check your token and permissions'
- '404 Not Found: Verify the endpoint path'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify your access token.'
- '404 Not Found: The requested resource could not be found.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Recheck OAuth tokens or scopes.'
- '404 Not Found: Ensure endpoint path is correct.'
- Maximum allowed rows count is 150 rows per file.
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'CANNOT_DELETE_PAYMENT_METHOD: Payment method is tied to active subscriptions or
  has outstanding invoices.'
- '400 Bad Request: Check submitted data for accuracy.'
- '401 Unauthorized: Ensure OAuth token is valid.'
- '404 Not Found: Requested resource does not exist.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '404 Not Found: Check the endpoint path and parameters.'
- '400 Bad Request: Ensure all required fields are included in the request.'
- '400 Bad Request: Check request parameters and ensure they are valid.'
- '401 Unauthorized: Verify API key or OAuth token.'
- '404 Not Found: Ensure the resource exists.'
- '400 Bad Request: Check the request parameters and format.'
- '401 Unauthorized: Verify API keys and permissions.'
- '404 Not Found: Ensure the endpoint is correct.'
- '400 Bad Request: Check the request parameters and data'
- '401 Unauthorized: Check your API key and permissions'
- '400 Bad Request: Verify the request payload'
- '400 Bad Request: Missing `token`.'
- '401 Unauthorized: Invalid/expired JWT.'
- '403 Forbidden: User lacks access to `site_id`.'
- '404 Not Found: User referenced by token not found.'
- '500 Server Error: Unhandled error during verification.'
- 'Invalid email or password: Recheck the user''s credentials'
- '403 Forbidden: Check API key permissions'
- '400: Bad Request - Missing `token`.'
- '401: Unauthorized - Invalid/expired JWT.'
- '403: Forbidden - User lacks access to `site_id`.'
- Invalid credentials! Please try again.
- '404'
- 'error: Recheck your input parameters'
- '401 Unauthorized: Recheck OAuth token validity.'
- '404 Not Found: Check the provided subscription ID.'
- 'error: Throttle API calls or reduce frequency'
- 'error: Break down filters or add selectivity'
- 'ERR - 3xx: The endpoint attempted to redirect the request to another location,
  which is not handled and thus is considered a failure.'
- 'ERR - 4xx: The endpoint can’t or won’t process the request.'
- 'ERR - 5xx: The endpoint encountered an error while processing the request.'
- 'ERR - TLS: A secure connection could not be established to the endpoint.'
- 'ERR - Unable to connect: A connection with the endpoint could not be established.'
- 'ERR - Timed out: The endpoint did not send back a successful status code (2xx)
  in a timely manner.'
- 'error: Indicates an issue with the request.'
- 'failed: The charge was unsuccessful.'
- 'failed: Credit card charge failed.'
- '400 Bad Request: Check your request parameters.'
- '400 Bad Request: Check the request parameters'
- '404 Not Found: Verify the resource ID'
- '500 Internal Server Error: Retry after some time'
- '401 Unauthorized: Check API key and permissions.'
- '400 Bad Request: Check the parameters sent in the API request.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '401 Unauthorized: Verify authorization details.'
- '404 Not Found: Check endpoint or resource ID.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '404 Not Found: Verify the subscription ID.'
- '500 Internal Server Error: Try again later.'
- 'Invalid request: Ensure all required fields are included.'
- '400 Bad Request: Check your request parameters'
- '404 Not Found: Ensure the subscription ID is correct'
- Allowed maximum of 3 retries for OTP sending, after which you'll need to wait for
  15 minutes.
- '429 Too Many Requests: Exceeded rate limit'
- '400 Bad Request: Validation errors detected.'
- '401 Unauthorized: Request is missing your API key or it has expired.'
- '403 Forbidden: API key prevents access to the endpoint or object.'
- '404 Not Found: The object you''re trying to access does not exist.'
- '405 Method Not Allowed: GET request on an endpoint which only supports POST.'
- '429 Too Many Requests: Rate limit exceeded, implement a retry mechanism.'
- '500 Internal Server Error: Unexpected error occurred while processing your request.'
- '503 Service Unavailable: Server temporarily overloaded or under maintenance.'
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- 405 Method Not Allowed
- 429 Too Many Requests
- 500 Internal Server Error
- 400 - Result
- '400: Invalid request'
- 'status: Defaults to 0'
- '429 Too Many Requests: Rate limit exceeded.'
- '400: Bad Request'
- '401: Unauthorized'
- '400 Bad Request: Validation errors detected in your request.'
- '403 Forbidden: API key prevents you from accessing the endpoint or object.'
- 401 - Result
- '503 Service Unavailable: This status will be returned if our server are temporarily
  overloaded, or when there is an ongoing maintenance.'
- 200 - Result
- 201 - Result
- '200: Successful response'
- '400: Error response with status and message'
- '400: Bad Request - Invalid request parameters'
- '400 Bad Request: Check the request parameters and body'
- 'URL Expired: The URL for this request expired after 30 days.'
- '400: error object'
- URL expired after 30 days
- '404: Not Found'
- '404 Not Found: Ensure the invoice ID is correct.'
- '400: customer_id'
- '400: total'
- '400: currency'
- '400: object error status integer Defaults to 0 message string'
- '400: error object with status integer Defaults to 0 and message string'
- '401 Unauthorized: Recheck Authorization token'
- '401 Unauthorized: Check your API key or access token.'
- '200: Successful Response'
- '201: Successful invitation'
- 500 - Result
- '401 Unauthorized: Check API key or token'
- '404 Not Found: Verify the requested resource exists'
- '201: Created'
- 'URL expired: The URL for this request expired after 30 days.'
- '404 Not Found: Check the endpoint and parameters.'
- 404 - Result
- 400 - Bad Request
- '400: gift_code'
- HTTP Status Code 200 - OK
- HTTP Status Code 301 - Permanent Redirect
- HTTP Status Code 302 - Temporary Redirect
- HTTP Status Code 404 - Not Found
- HTTP Status Code 500 - Internal Server Error
- HTTP Status Code 503 - Service Unavailable
- '401 Unauthorized: Check your API keys and permissions.'
- '404 Not Found: Verify the endpoint URL and resource ID.'
auth_info:
  mentioned_objects:
  - Application ID
  - Application Secret
  - OauthToken
  - AuthProvider
  - Customer
  - Invoice
  - Subscription
  - API Key
  - API secret key
  - NamedCredential
  - PelcroResult
  - PelcroSiteManager
  - PelcroUserManager
  - PelcroSubscriptionManager
  - auth_token
client:
  base_url: https://www.pelcro.com/api/v1
  paginator:
    type: page
source_metadata: null
