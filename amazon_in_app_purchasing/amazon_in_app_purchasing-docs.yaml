resources:
- name: BillingClient
  endpoint:
    path: /iap/appstore-billing-compatibility/api-reference/4.2.0/com/amazon/device/iap/billingclient/api/BillingClient.html
    method: GET
    data_selector: records
    params: {}
- name: purchase
  endpoint:
    path: /queryPurchasesAsync
    method: GET
    data_selector: purchases
    params: {}
- name: queryProductDetails
  endpoint:
    path: /queryProductDetailsAsync
    method: POST
    data_selector: productDetails
    params: {}
- name: querySkuDetails
  endpoint:
    path: /querySkuDetailsAsync
    method: POST
    data_selector: skuDetails
    params: {}
- name: developer_account
  endpoint:
    path: /ap/register
    method: GET
- name: Fire TV Stick 4K Max
  endpoint:
    path: /docs/fire-tv/device-specifications-fire-tv-streaming-media-player.html?v=ftvstick4kmax_gen2_16
    method: GET
- name: Fire TV Cube
  endpoint:
    path: /docs/fire-tv/device-specifications-fire-tv-cube.html?v=ftvcubegen3
    method: GET
- name: Fire TV Omni QLED Series
  endpoint:
    path: /docs/fire-tv/device-specifications-fire-tv-edition-smart-tv-na.html?v=omniseries2
    method: GET
- name: Smart TVs
  endpoint:
    path: /docs/fire-tv/device-specifications.html
    method: GET
- name: Automotive
  endpoint:
    path: /docs/fire-tv/device-specifications-automotive.html
    method: GET
- name: device_specifications
  endpoint:
    path: /fire-tv/device-specifications
    method: GET
    data_selector: devices
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: device_specifications
  endpoint:
    path: /device-specifications
    method: GET
    data_selector: devices
    params: {}
- name: device_specifications
  endpoint:
    path: /fire-tv/device-specifications
    method: GET
    data_selector: devices
    params: {}
- name: Fire Tablet App Development
  endpoint:
    path: /apps-and-games/fire-tablets
    method: GET
    data_selector: records
    params: {}
- name: In-App Purchasing API
  endpoint:
    path: /in-app-purchasing/iap-overview.html
    method: GET
    data_selector: records
    params: {}
- name: Fire Tablet Specifications
  endpoint:
    path: /docs/fire-tablets/ft-device-specifications.html
    method: GET
    data_selector: specifications
    params: {}
- name: Auto Backup
  endpoint:
    path: /autobackup
    method: GET
    data_selector: backupDetails
- name: Biometric Authentication
  endpoint:
    path: /biometric/auth
    method: POST
    data_selector: authenticationDetails
- name: controllers_overview
  endpoint:
    path: /docs/fire-tv/remote-input.html
    method: GET
    data_selector: controllers
    params: {}
- name: buttons
  endpoint:
    path: /docs/fire-tv/remote-input.html
    method: GET
    data_selector: buttons
    params: {}
- name: capturing_input
  endpoint:
    path: /docs/fire-tv/remote-input.html
    method: GET
    data_selector: capturing_input
    params: {}
- name: Entertainment Spotlight Ads
  endpoint:
    path: /devportal-digital-assets/cf/developer-portal/getDeXSearchData
    method: GET
- name: connect_adb
  endpoint:
    path: /docs/fire-tablets/connecting-adb-to-device.html
    method: GET
    data_selector: instructions
    params: {}
- name: Amazon Device Messaging
  endpoint:
    path: /adm
    method: POST
- name: performance_metrics
  endpoint:
    path: /docs/app-testing/app-performance-scripts.html
    method: GET
    data_selector: performance_metrics
    params: {}
- name: cool_app_launch_time
  endpoint:
    path: /logcat
    method: GET
    data_selector: Timer
    params: {}
- name: warm_app_warm_transition_launch_time
  endpoint:
    path: /logcat
    method: GET
    data_selector: Timer
    params: {}
- name: RTU_before_sign_in_cool_launch
  endpoint:
    path: /adb_commands/RTU_before_sign_in_cool_launch
    method: POST
    data_selector: steps
    params: {}
- name: RTU_before_sign_in_warm_launch
  endpoint:
    path: /adb_commands/RTU_before_sign_in_warm_launch
    method: POST
    data_selector: steps
    params: {}
- name: RTU_after_sign_in_cool_launch
  endpoint:
    path: /adb_commands/RTU_after_sign_in_cool_launch
    method: POST
    data_selector: steps
    params: {}
- name: RTU_after_sign_in_warm_launch
  endpoint:
    path: /adb_commands/RTU_after_sign_in_warm_launch
    method: POST
    data_selector: steps
    params: {}
- name: foreground_memory
  endpoint:
    path: /adb_commands/foreground_memory
    method: POST
    data_selector: steps
    params: {}
- name: background_memory
  endpoint:
    path: /adb_commands/background_memory
    method: POST
    data_selector: steps
    params: {}
- name: App Submission
  endpoint:
    path: /app-submission
    method: GET
    data_selector: submission_details
    params: {}
- name: DRM Overview
  endpoint:
    path: /in-app-purchasing/drm-overview
    method: GET
    data_selector: drm_details
    params: {}
- name: financial_reports
  endpoint:
    path: /reports-promo/earnings-reports.html
    method: GET
- name: sales_reports
  endpoint:
    path: /reports-promo/sales-reports.html
    method: GET
- name: user_reviews
  endpoint:
    path: /reports-promo/user-reviews.html
    method: GET
- name: developer_events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: App submission API
  endpoint:
    path: /app-submission-api/overview.html
    method: GET
- name: updatePlaybackStatus
  endpoint:
    path: /updatePlaybackStatus
    method: POST
    data_selector: metadata
    params: {}
- name: device_specifications
  endpoint:
    path: /docs/fire-tv/device-specifications-fire-tv-edition-smart-tv-na.html
    method: GET
    data_selector: device_specifications
- name: device_specifications
  endpoint:
    path: /api/device/specifications
    method: GET
    data_selector: specifications
    params: {}
- name: device_specifications
  endpoint:
    path: /api/device_specifications
    method: GET
    data_selector: specifications
    params: {}
- name: fire_tv_device
  endpoint:
    path: /api/v1/fire_tv_device
    method: GET
    data_selector: device_info
- name: Fire TV - TCL S4 Series 4K UHD HDR LED
  endpoint:
    path: /firetv/tclsseries_4K_2023
    method: GET
    data_selector: specifications
    params: {}
- name: Fire TV - TCL Q6 4K QLED HDR
  endpoint:
    path: /firetv/firetv_tckQ64k_2023
    method: GET
    data_selector: specifications
    params: {}
- name: Fire TV 2-Series
  endpoint:
    path: /firetv/fireTV_2series_40
    method: GET
    data_selector: specifications
    params: {}
- name: fire_tv_4_series
  endpoint:
    path: /devices/fire_tv_4_series
    method: GET
    data_selector: specifications
    params: {}
- name: Fire TV 4-Series
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: Toshiba 50-inch 50C350KU C350 Series LED 4K UHD Smart Fire TV
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: device_specifications
  endpoint:
    path: /services/data/vXX.X/sobjects/DeviceSpecifications
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Toshiba 4K - Fire TV (2018-2019)
  endpoint:
    path: /devices/toshiba/4k-fire-tv/2018-2019
    method: GET
    data_selector: specifications
    params: {}
- name: Toshiba HD - Fire TV (2018-2020)
  endpoint:
    path: /devices/toshiba/hd-fire-tv/2018-2020
    method: GET
    data_selector: specifications
    params: {}
- name: Insignia 4K - Fire TV (2018)
  endpoint:
    path: /devices/insignia/4k-fire-tv/2018
    method: GET
    data_selector: specifications
    params: {}
- name: device_specifications
  endpoint:
    path: /dp/B0874YZVWK
    method: GET
    data_selector: specifications
    params: {}
- name: specifications
  endpoint:
    path: /specifications
    method: GET
    data_selector: specs
    params: {}
- name: Xiaomi_TV
  endpoint:
    path: /services/data/vXX.X/sobjects/Xiaomi_TV
    method: GET
    data_selector: records
- name: TCL_4K_Smart_Fire_TV_QLED_Panels_2025
  endpoint:
    path: /services/data/vXX.X/sobjects/TCL_4K_Smart_Fire_TV_QLED_Panels_2025
    method: GET
    data_selector: records
- name: 4K_Fire_TV_QLED_Smart_TV_2024
  endpoint:
    path: /services/data/vXX.X/sobjects/4K_Fire_TV_QLED_Smart_TV_2024
    method: GET
    data_selector: records
- name: device_specifications
  endpoint:
    path: /services/data/vXX.X/sobjects/DeviceSpecifications
    method: GET
    data_selector: records
- name: device_specifications
  endpoint:
    path: /device/specifications
    method: GET
    data_selector: specifications
    params: {}
- name: technika_4k_fire_tv_2020
  endpoint:
    path: /device-specifications/technika-4k-fire-tv-2020
    method: GET
    data_selector: specifications
    params: {}
- name: grundig_vision_7
  endpoint:
    path: /devices/grundig_vision_7
    method: GET
    data_selector: device_specifications
- name: grundig_vision_6
  endpoint:
    path: /devices/grundig_vision_6
    method: GET
    data_selector: device_specifications
- name: jvc_fire_tv
  endpoint:
    path: /devices/jvc_fire_tv
    method: GET
    data_selector: device_specifications
- name: device_specifications
  endpoint:
    path: /docs/fire-tv/device-specifications-fire-tv-edition-smart-tv-apac.html
    method: GET
    data_selector: specifications
    params: {}
- name: Fire TV JVC - 4K UHD LCD TV
  endpoint:
    path: /devices/firetv/jvc/2025
    method: GET
    data_selector: features
    params: {}
- name: Fire TV Panasonic - W95B/W90B/W80B
  endpoint:
    path: /devices/firetv/panasonic/w95b-w90b-w80b/2025
    method: GET
    data_selector: features
    params: {}
- name: Fire TV Panasonic - Z95B/Z90B
  endpoint:
    path: /devices/firetv/panasonic/z95b-z90b/2025
    method: GET
    data_selector: features
    params: {}
- name: device_specifications
  endpoint:
    path: /devices/specifications
    method: GET
    data_selector: specs
- name: device_specifications
  endpoint:
    path: /device/specifications
    method: GET
    data_selector: specifications
    params: {}
- name: Fire TV Panasonic - W95A/W90A/W80A
  endpoint:
    path: /v1/devices/firetv/panasonic/w95a_w90a_w80a
    method: GET
    data_selector: deviceSpecifications
    params:
      release_year: '2024'
- name: Fire TV Panasonic - Z85A
  endpoint:
    path: /v1/devices/firetv/panasonic/z85a
    method: GET
    data_selector: deviceSpecifications
    params:
      release_year: '2024'
- name: Fire TV Panasonic - Z95A/Z93A/Z90A
  endpoint:
    path: /v1/devices/firetv/panasonic/z95a_z93a_z90a
    method: GET
    data_selector: deviceSpecifications
    params:
      release_year: '2024'
- name: device_specifications
  endpoint:
    path: /device/specifications
    method: GET
    data_selector: specifications
    params: {}
- name: fire_tv_2020
  endpoint:
    path: /fire-tv/2020
    method: GET
    data_selector: deviceSpecifications
- name: onida_fire_tv_2020
  endpoint:
    path: /onida/fire-tv/2020
    method: GET
    data_selector: deviceSpecifications
- name: onida_fire_tv_2019
  endpoint:
    path: /onida/fire-tv/2019
    method: GET
    data_selector: deviceSpecifications
- name: Device Specifications
  endpoint:
    path: /docs/fire-tv/device-specifications.html
    method: GET
    data_selector: specifications
    params: {}
- name: device_specifications
  endpoint:
    path: /docs/fire-tv/device-specifications-automotive.html
    method: GET
    data_selector: specifications
    params: {}
- name: automotive_device
  endpoint:
    path: /automotive_device
    method: GET
    data_selector: records
    params: {}
- name: device_specifications
  endpoint:
    path: /device/specifications
    method: GET
    data_selector: specifications
    params: {}
- name: device_specifications
  endpoint:
    path: /docs/fire-tv/device-specifications-fire-tv-streaming-media-player.html
    method: GET
    data_selector: device_specs
    params: {}
- name: device_specifications
  endpoint:
    path: /device/specifications
    method: GET
    data_selector: specifications
    params: {}
- name: Fire TV Stick HD
  endpoint:
    path: /dp/B0CQMRKRV5
    method: GET
    data_selector: deviceSpecifications
- name: Fire TV Stick 4K Max
  endpoint:
    path: /dp/B0BP9SNVH9
    method: GET
    data_selector: deviceSpecifications
- name: Fire TV Stick 4K
  endpoint:
    path: /dp/B0BP9MDCQZ
    method: GET
    data_selector: deviceSpecifications
- name: Fire TV Stick 4K
  endpoint:
    path: /devices/firetvstick4k
    method: GET
    data_selector: specifications
    params: {}
- name: Fire TV Stick - Basic Edition
  endpoint:
    path: /devices/firetvstickbasicedition
    method: GET
    data_selector: specifications
    params: {}
- name: fire_tv_device
  endpoint:
    path: /devices/fire_tv
    method: GET
    data_selector: device_specs
    params: {}
- name: fire_tv_basic_edition
  endpoint:
    path: /devices/fire_tv_basic_edition
    method: GET
    data_selector: specifications
    params: {}
- name: fire_tv_3rd_gen
  endpoint:
    path: /devices/fire_tv_3rd_gen
    method: GET
    data_selector: specifications
    params: {}
- name: fire_tv_2nd_gen
  endpoint:
    path: /devices/fire_tv_2nd_gen
    method: GET
    data_selector: specifications
    params: {}
- name: fire_tv_1st_gen
  endpoint:
    path: /devices/fire_tv_1st_gen
    method: GET
    data_selector: specifications
    params: {}
- name: Device Specifications
  endpoint:
    path: /docs/fire-tv/device-specifications-fire-tv-cube.html
    method: GET
    data_selector: specifications
- name: device_specifications
  endpoint:
    path: /fire-tv/device-specifications
    method: GET
    data_selector: specifications
    params: {}
- name: device_specifications
  endpoint:
    path: /device/specifications
    method: GET
    data_selector: specifications
    params: {}
- name: developer_portal
  endpoint:
    path: /devportal-digital-assets/cf/developer-portal/getDeXSearchData
    method: GET
    data_selector: settingsUrl
    params: {}
- name: install_app
  endpoint:
    path: /installing-your-app
    method: POST
    data_selector: response
    params: {}
- name: uninstall_app
  endpoint:
    path: /uninstalling-your-app
    method: DELETE
    data_selector: response
    params: {}
- name: Fire OS 5
  endpoint:
    path: /fire-os-5
    method: GET
- name: Fire OS 6
  endpoint:
    path: /fire-os-6
    method: GET
- name: Fire OS 7
  endpoint:
    path: /fire-os-7
    method: GET
- name: APK Signature Scheme
  endpoint:
    path: /security/apksigning/v2
    method: GET
    data_selector: resources
    params: {}
- name: One-time permissions
  endpoint:
    path: /training/permissions/requesting
    method: GET
    data_selector: permissions
    params: {}
- name: Package visibility
  endpoint:
    path: /about/versions/11/privacy/package-visibility
    method: GET
    data_selector: packageVisibility
    params: {}
- name: Foreground services for accessing camera and microphone
  endpoint:
    path: /training/foreground-services
    method: GET
    data_selector: foregroundServices
    params: {}
- name: Compressed resource files
  endpoint:
    path: /fire-tv/multimedia-app-requirements
    method: GET
    data_selector: compressedResources
    params: {}
- name: Dynamic Intent Filters
  endpoint:
    path: /about/versions/11/features#dynamic-intent-filters
    method: GET
    data_selector: dynamicIntentFilters
    params: {}
- name: Custom toasts from background are blocked
  endpoint:
    path: /reference/kotlin/android/widget/Toast
    method: GET
    data_selector: toasts
    params: {}
- name: input_events
  endpoint:
    path: /docs/fire-tv/game-controller-input.html
    method: GET
    data_selector: input_events
    params: {}
- name: Game Controller Events
  endpoint:
    path: /apps-and-games/documentation
    method: GET
    data_selector: events
    params: {}
- name: controller_buttons
  endpoint:
    path: /controller/buttons
    method: GET
    data_selector: buttons
    params: {}
- name: controller_names
  endpoint:
    path: /controller/names
    method: GET
    data_selector: names
    params: {}
- name: remote_control_input
  endpoint:
    path: /remote-control-input
    method: GET
    data_selector: remote_buttons
    params: {}
- name: game_controller_input
  endpoint:
    path: /game-controller-input
    method: GET
    data_selector: controller_buttons
    params: {}
- name: InputDevice
  endpoint:
    path: /api/input_device
    method: GET
    data_selector: devices
    params: {}
- name: Game Controller
  endpoint:
    path: /identify/game-controller
    method: GET
    data_selector: sources
    params: {}
- name: Remote
  endpoint:
    path: /identify/remote
    method: GET
    data_selector: sources
    params: {}
- name: Second Screen App
  endpoint:
    path: /identify/second-screen-app
    method: GET
    data_selector: sources
    params: {}
- name: media_playback
  endpoint:
    path: /media/playback
    method: GET
    data_selector: events
- name: volume_control
  endpoint:
    path: /volume/control
    method: GET
    data_selector: volume_events
- name: gameplay
  endpoint:
    path: /gameplay/actions
    method: GET
    data_selector: actions
- name: controller_image_assets
  endpoint:
    path: /apps-and-games/fire-tv/controller-image-assets
    method: GET
    data_selector: images
    params: {}
- name: App launching
  endpoint:
    path: /video-skills-kit/app-launching
    method: GET
    data_selector: launchDetails
- name: Quick play
  endpoint:
    path: /video-skills-kit/quick-play
    method: GET
    data_selector: playDetails
- name: Search
  endpoint:
    path: /video-skills-kit/search
    method: GET
    data_selector: searchResults
- name: Transport Controls
  endpoint:
    path: /video-skills-kit/transport-controls
    method: GET
    data_selector: controlDetails
- name: Channel Change
  endpoint:
    path: /video-skills-kit/channel-change
    method: GET
    data_selector: channelDetails
- name: voice_commands
  endpoint:
    path: /voice/commands
    method: GET
- name: AudioFocusRequesterService
  endpoint:
    path: /.AudioFocusRequesterService
    method: START
    data_selector: focus_request
    params: {}
- name: Four Ways to Play Dolby Audio
  endpoint:
    path: /fire-tv/dolby-integration-guidelines.html#four-ways-to-play-dolby-audio
    method: GET
    data_selector: content
    params: {}
- name: 'Option 1: Use ExoPlayer'
  endpoint:
    path: /fire-tv/dolby-integration-guidelines.html#exoplayer
    method: GET
    data_selector: content
    params: {}
- name: 'Option 2: Custom Media Player Approach'
  endpoint:
    path: /fire-tv/dolby-integration-guidelines.html#custom
    method: GET
    data_selector: content
    params: {}
- name: 'Option 3: Use Other Supported Media Players'
  endpoint:
    path: /fire-tv/dolby-integration-guidelines.html#supported
    method: GET
    data_selector: content
    params: {}
- name: 'Option 4: Use Android Media Player'
  endpoint:
    path: /fire-tv/dolby-integration-guidelines.html#androidmp
    method: GET
    data_selector: content
    params: {}
- name: ExoPlayer
  endpoint:
    path: /docs/fire-tv/audio-video-synchronization.html
    method: GET
    data_selector: ExoPlayer
    params: {}
- name: Custom-made Media Player
  endpoint:
    path: /docs/fire-tv/audio-video-synchronization.html
    method: GET
    data_selector: Custom-made Media Player
    params: {}
- name: Display Mode
  endpoint:
    path: /hdmi-mode-switch
    method: GET
    data_selector: modes
    params: {}
- name: UHDHelper
  endpoint:
    path: /setPreferredDisplayModeId
    method: POST
    data_selector: modeId
- name: UhdHelperListener
  endpoint:
    path: /onModeChanged
    method: POST
    data_selector: mode
- name: Display.Mode
  endpoint:
    path: /getSupportedModes
    method: GET
    data_selector: modes
- name: SDK
  endpoint:
    path: /apps-and-games/fire-tv-integration-sdk
    method: GET
    data_selector: resources
    params: {}
- name: AmazonPlaybackEvent
  endpoint:
    path: /services/data/vXX.X/sobjects/AmazonPlaybackEvent
    method: POST
    data_selector: records
    params: {}
- name: AmazonContentEntitlement
  endpoint:
    path: /services/data/vXX.X/sobjects/AmazonContentEntitlement
    method: POST
    data_selector: records
    params: {}
- name: AmazonCustomerList
  endpoint:
    path: /services/data/vXX.X/sobjects/AmazonCustomerList
    method: POST
    data_selector: records
    params: {}
- name: sample_reference_app
  endpoint:
    path: /download/sample/reference/app
    method: GET
    data_selector: app_data
- name: watch_activity
  endpoint:
    path: /watch-activity
    method: GET
    data_selector: records
    params: {}
- name: individual_entitlements
  endpoint:
    path: /individual-entitlements
    method: GET
    data_selector: records
    params: {}
- name: watchlist
  endpoint:
    path: /watchlist
    method: GET
    data_selector: records
    params: {}
- name: watch_activity
  endpoint:
    path: /watch-activity
    method: POST
    data_selector: event
    params: {}
- name: watchlist
  endpoint:
    path: /setCustomerList
    method: POST
    data_selector: listEntries
- name: watchlist
  endpoint:
    path: /watchlist
    method: POST
    data_selector: watchlist_items
    params: {}
- name: watch_activity
  endpoint:
    path: /watch_activity
    method: POST
    data_selector: records
- name: individual_content_entitlements
  endpoint:
    path: /individual_content_entitlements
    method: POST
    data_selector: records
- name: watchlist
  endpoint:
    path: /watchlist
    method: POST
    data_selector: records
- name: live_channel_entitlements
  endpoint:
    path: /live_channel_entitlements
    method: GET
    data_selector: entitlements
    params: {}
- name: programming_metadata
  endpoint:
    path: /programming_metadata
    method: GET
    data_selector: metadata
    params: {}
- name: channel_ordering
  endpoint:
    path: /channel/ordering
    method: GET
    data_selector: orderingOptions
    params: {}
- name: full_screen_playback
  endpoint:
    path: /full-screen/playback
    method: GET
    data_selector: playbackOptions
    params: {}
- name: parental_controls
  endpoint:
    path: /parental/controls
    method: GET
    data_selector: controlsOptions
    params: {}
- name: TIF Companion Library
  endpoint:
    path: /import-tif-companion-library
    method: GET
- name: Application ID
  endpoint:
    path: /get-an-application-id
    method: GET
- name: TIF Package Dependencies
  endpoint:
    path: /adding-tif-package-dependencies
    method: GET
- name: RichTvInputService
  endpoint:
    path: /tv/input/service
    method: GET
    data_selector: input
    params: {}
- name: insert_channel
  endpoint:
    path: /insert-your-first-channel
    method: GET
    data_selector: channel metadata
- name: channels
  endpoint:
    path: /channels
    method: POST
    data_selector: channels
    params: {}
- name: PreviewSession
  endpoint:
    path: /playback-in-fire-tv-ui
    method: POST
    data_selector: session
    params: {}
- name: channel
  endpoint:
    path: /tv/channels
    method: POST
    data_selector: channel_data
    params: {}
- name: live_event
  endpoint:
    path: /services/data/vXX.X/sobjects/PreviewProgram
    method: POST
    data_selector: ContentValues
    params: {}
- name: installation
  endpoint:
    path: /installation
    method: GET
    data_selector: test_steps
- name: playback
  endpoint:
    path: /playback
    method: GET
    data_selector: test_steps
- name: mouse_pointer_customization
  endpoint:
    path: /fire-tv/customize-mouse-pointer
    method: GET
    data_selector: resources
    params: {}
- name: Display and Layout
  endpoint:
    path: /fire-tv/display-and-layout
    method: GET
    data_selector: resources
    params: {}
- name: device_specifications
  endpoint:
    path: /fire-tv/device-specifications
    method: GET
    data_selector: devices
    params: {}
- name: fire_tv_device_specifications
  endpoint:
    path: /fire-tv/device-specifications
    method: GET
    data_selector: devices
    params: {}
- name: Fire TV Devices
  endpoint:
    path: /fire-tv/devices
    method: GET
    data_selector: devices
- name: fire_tv_device
  endpoint:
    path: /path/to/fire_tv_device/endpoint
    method: GET
    data_selector: records
    params: {}
- name: action_bar
  endpoint:
    path: /developer-tools/action-bar
    method: GET
    data_selector: action_bar_data
    params: {}
- name: M-SEARCH
  endpoint:
    path: /services/data/v2.2.1/M-SEARCH
    method: GET
    data_selector: USN
    params: {}
- name: App Status
  endpoint:
    path: /services/data/v2.2.1/app/status
    method: GET
    data_selector: state
    params: {}
- name: Launch App
  endpoint:
    path: /services/data/v2.2.1/app/launch
    method: POST
    data_selector: launch_result
    params: {}
- name: CastingPlayer
  endpoint:
    path: /services/data/vXX.X/sobjects/CastingPlayer
    method: GET
    data_selector: records
    params: {}
- name: ContentLauncherCluster
  endpoint:
    path: /services/data/vXX.X/sobjects/ContentLauncherCluster
    method: GET
    data_selector: records
    params: {}
- name: MediaPlaybackCluster
  endpoint:
    path: /services/data/vXX.X/sobjects/MediaPlaybackCluster
    method: GET
    data_selector: records
    params: {}
- name: device_attestation_credentials
  endpoint:
    path: /services/data/vXX.X/sobjects/DeviceAttestationCredentials
    method: GET
    data_selector: records
    params: {}
- name: Device Attestation Certificate
  endpoint:
    path: /device-attestation-certificate
    method: GET
    data_selector: certificate_info
- name: Certification Declaration
  endpoint:
    path: /certification-declaration
    method: GET
    data_selector: certification_info
- name: text_search
  endpoint:
    path: /implementing-search/text-search
    method: GET
- name: global_text_search
  endpoint:
    path: /implementing-search/global-text-search
    method: GET
- name: voice_search
  endpoint:
    path: /implementing-search/voice-search
    method: GET
- name: App Installation Location
  endpoint:
    path: /docs/fire-tv/specifying-installation-location.html
    method: GET
    data_selector: installLocation
    params: {}
- name: Deep Link Intent
  endpoint:
    path: /deep_link/intent
    method: GET
    data_selector: amazon_intent
    params: {}
- name: deep_link_intent
  endpoint:
    path: /apps-and-games/deep-linking-featured-content
    method: GET
    data_selector: content
    params: {}
- name: strings_resources
  endpoint:
    path: /strings/resources
    method: GET
    data_selector: resources
    params: {}
- name: drawable_resources
  endpoint:
    path: /drawable/resources
    method: GET
    data_selector: resources
    params: {}
- name: currency_resources
  endpoint:
    path: /currency/resources
    method: GET
    data_selector: resources
    params: {}
- name: movie
  endpoint:
    path: /setupMovies
    method: GET
    data_selector: list
    params: {}
- name: presenter
  endpoint:
    path: /fire-tv/presenter
    method: GET
    data_selector: presenters
    params: {}
- name: details_fragment
  endpoint:
    path: /providing-details-detailsfragment
    method: GET
    data_selector: content
    params: {}
- name: PlaybackOverlayFragment
  endpoint:
    path: /playback/overlay
    method: GET
    data_selector: content
    params: {}
- name: playback_controls
  endpoint:
    path: /playback_controls
    method: GET
    data_selector: controls
    params: {}
- name: System X-Ray
  endpoint:
    path: /fire-tv/system-xray
    method: GET
    data_selector: metrics
- name: Advanced Options
  endpoint:
    path: /fire-tv/advanced-options
    method: GET
    data_selector: multimedia_info
- name: custom_metrics
  endpoint:
    path: /system/xray/metrics
    method: POST
    data_selector: metrics
    params: {}
- name: metrics_update
  endpoint:
    path: /metrics/update
    method: POST
    data_selector: metrics
    params: {}
- name: event_logging
  endpoint:
    path: /event/logging
    method: POST
    data_selector: events
    params: {}
- name: Network Proxy
  endpoint:
    path: /fire-tv/network-proxy.html
    method: GET
    data_selector: requests
    params: {}
- name: VoiceView Implementation Checklist
  endpoint:
    path: /implementing-voiceview
    method: GET
    data_selector: checklist
    params: {}
- name: VoiceView Behavior Overview
  endpoint:
    path: /overview-of-voiceview-behavior
    method: GET
    data_selector: overview
    params: {}
- name: remote_control_input
  endpoint:
    path: /supporting-controllers-in-web-apps
    method: GET
    data_selector: keycode_mappings
    params: {}
- name: game_controller_input
  endpoint:
    path: /supporting-controllers-in-web-apps
    method: GET
    data_selector: keycode_mappings
    params: {}
- name: web_app_customization
  endpoint:
    path: /customizing-your-web-app
    method: GET
    data_selector: content
    params: {}
- name: User Agent Strings
  endpoint:
    path: /user-agent-strings
    method: GET
    data_selector: user_agent_strings
- name: Placeholders in User Agent Strings
  endpoint:
    path: /placeholders-in-user-agent-strings
    method: GET
    data_selector: placeholders
- name: web_app_migration_checklist
  endpoint:
    path: /migrating-your-web-app
    method: GET
    data_selector: checklist
- name: catalog_integration
  endpoint:
    path: /catalog/integration
    method: POST
    data_selector: results
- name: web_app_closing
  endpoint:
    path: /apps-and-games/fire-tv/web-app-faq.html
    method: GET
    data_selector: faq
    params: {}
- name: drm_support
  endpoint:
    path: /apps-and-games/fire-tv/web-app-faq.html
    method: GET
    data_selector: faq
    params: {}
- name: screen_saver_disabling
  endpoint:
    path: /apps-and-games/fire-tv/web-app-faq.html
    method: GET
    data_selector: faq
    params: {}
- name: hls_support
  endpoint:
    path: /apps-and-games/fire-tv/web-app-faq.html
    method: GET
    data_selector: faq
    params: {}
- name: blob_api_support
  endpoint:
    path: /apps-and-games/fire-tv/web-app-faq.html
    method: GET
    data_selector: faq
    params: {}
- name: duration_issue
  endpoint:
    path: /apps-and-games/fire-tv/web-app-faq.html
    method: GET
    data_selector: faq
    params: {}
- name: remote_control_playback
  endpoint:
    path: /apps-and-games/fire-tv/web-app-faq.html
    method: GET
    data_selector: faq
    params: {}
- name: virtual_keyboard
  endpoint:
    path: /apps-and-games/fire-tv/web-app-faq.html
    method: GET
    data_selector: faq
    params: {}
- name: third_party_authentication
  endpoint:
    path: /apps-and-games/fire-tv/web-app-faq.html
    method: GET
    data_selector: faq
    params: {}
- name: mov_file_support
  endpoint:
    path: /apps-and-games/fire-tv/web-app-faq.html
    method: GET
    data_selector: faq
    params: {}
- name: HTTPS on Amazon S3
  endpoint:
    path: /apps-and-games/documentation
    method: GET
    data_selector: instructions
    params: {}
- name: Generic HTTPS Instructions
  endpoint:
    path: /apps-and-games/documentation
    method: GET
    data_selector: instructions
    params: {}
- name: Debug APK
  endpoint:
    path: /webapp-use-debug-apk.html
    method: GET
    data_selector: apk
    params: {}
- name: HTML5 Hybrid Apps
  endpoint:
    path: /apps-and-games/hybrid-apps-overview.html
    method: GET
    data_selector: hybrid_apps
- name: Amazon WebView API
  endpoint:
    path: /docs/fire-tv/amazon-webview-api.html
    method: GET
    data_selector: resources
    params: {}
- name: Fire TV app
  endpoint:
    path: /docs/fire-tv/getting-started-developing-apps-and-games.html
    method: GET
    data_selector: content
- name: catalog_file
  endpoint:
    path: /catalog/file
    method: POST
    data_selector: data
    params: {}
- name: validation_report
  endpoint:
    path: /catalog/validate
    method: GET
    data_selector: report
    params: {}
- name: upload_catalog
  endpoint:
    path: /catalog/upload
    method: PUT
    data_selector: upload_status
    params: {}
- name: ingestion_report
  endpoint:
    path: /catalog/report
    method: GET
    data_selector: report_data
    params: {}
- name: iap_api
  endpoint:
    path: /in-app-purchasing/iap-api-for-webapps-overview.html
    method: GET
- name: iap_sdk
  endpoint:
    path: /in-app-purchasing/appstore-sdk-api-reference.html
    method: GET
- name: iap_batch_submission
  endpoint:
    path: /in-app-purchasing/iap-manage-bulk-items.html
    method: GET
- name: AWS Credits
  endpoint:
    path: /docs/reports-promo/small-business-accelerator.html
    method: GET
    data_selector: credits
    params: {}
- name: AWS Credits
  endpoint:
    path: /apps-and-games/small-business-program
    method: GET
    data_selector: credits
    params: {}
- name: Earnings & Payments
  endpoint:
    path: /apps-and-games/small-business-program
    method: GET
    data_selector: earnings
    params: {}
- name: Fire TV
  endpoint:
    path: /apps-and-games/fire-tv
    method: GET
    data_selector: devices
    params: {}
- name: Fire tablets
  endpoint:
    path: /apps-and-games/fire-tablets
    method: GET
    data_selector: devices
    params: {}
- name: app_submission
  endpoint:
    path: /docs/app-submission/device-filtering-and-compatibility.html
    method: GET
    data_selector: content
    params: {}
- name: Fire TV
  endpoint:
    path: /zh/apps-and-games/fire-tv
    method: GET
- name: Fire平板电脑
  endpoint:
    path: /zh/apps-and-games/fire-tablets
    method: GET
- name: Fire TV
  endpoint:
    path: /ja/apps-and-games/fire-tv
    method: GET
- name: Fireタブレット
  endpoint:
    path: /ja/apps-and-games/fire-tablets
    method: GET
- name: Adjust SDK
  endpoint:
    path: https://help.adjust.com/en/article/get-started-android-sdk
    method: GET
    data_selector: records
- name: AdX SDK
  endpoint:
    path: https://developers.google.com/ad-manager/mobile-ads-sdk
    method: GET
    data_selector: records
- name: Apache HttpCore SDK
  endpoint:
    path: https://hc.apache.org/httpcomponents-core-5.2.x/
    method: GET
    data_selector: records
- name: AppLovin Max
  endpoint:
    path: https://www.applovin.com/max/
    method: GET
    data_selector: records
- name: AppsFlyer SDK
  endpoint:
    path: https://www.appsflyer.com/
    method: GET
    data_selector: records
- name: Bolts Applinks SDK
  endpoint:
    path: https://developers.facebook.com/docs/applinks
    method: GET
    data_selector: records
- name: Bolts Task
  endpoint:
    path: https://github.com/BoltsFramework/Bolts-Android/tree/master
    method: GET
    data_selector: records
- name: Bugsnag
  endpoint:
    path: https://docs.bugsnag.com/platforms/android/
    method: GET
    data_selector: records
- name: ChartBoost
  endpoint:
    path: https://www.chartboost.com/
    method: GET
    data_selector: records
- name: DT Exchange
  endpoint:
    path: https://developer.digitalturbine.com/hc/en-us/articles/360010814637-Welcome-to-DT-Exchange
    method: GET
    data_selector: records
- name: EventBus
  endpoint:
    path: https://greenrobot.org/eventbus/
    method: GET
    data_selector: records
- name: EXOPLAYER SDK
  endpoint:
    path: https://exoplayer.dev/
    method: GET
    data_selector: records
- name: Facebook App Links
  endpoint:
    path: https://developers.facebook.com/docs/applinks/overview
    method: GET
    data_selector: records
- name: Facebook Core
  endpoint:
    path: https://github.com/facebook/facebook-android-sdk/tree/main/facebook-core/src/test/kotlin/com/facebook
    method: GET
    data_selector: records
- name: Facebook Fresco
  endpoint:
    path: https://frescolib.org/
    method: GET
    data_selector: records
- name: Facebook Login SDK
  endpoint:
    path: https://developers.facebook.com/docs/facebook-login/android/
    method: GET
    data_selector: records
- name: Facebook Messenger Share Kit SDK
  endpoint:
    path: https://developers.facebook.com/docs/sharing/messenger#android
    method: GET
    data_selector: records
- name: Facebook Sharing SDK
  endpoint:
    path: https://developers.facebook.com/docs/sharing/android
    method: GET
    data_selector: records
- name: Facebook Yoga SDK
  endpoint:
    path: https://42matters.com/sdks/android/facebook-yoga
    method: GET
    data_selector: records
- name: FasterXML Jackson
  endpoint:
    path: https://javadoc.io/doc/com.fasterxml.jackson.core
    method: GET
    data_selector: records
- name: Firebase Crash Reporting SDK
  endpoint:
    path: https://firebase.google.com/docs/crashlytics
    method: GET
    data_selector: records
- name: FMOD
  endpoint:
    path: https://www.fmod.com/unity
    method: GET
    data_selector: records
- name: Fyber FairBid
  endpoint:
    path: https://developer.fyber.com/hc/en-us/articles/360009975338-Fyber-FairBid
    method: GET
    data_selector: records
- name: Glide
  endpoint:
    path: https://bumptech.github.io/glide/
    method: GET
    data_selector: records
- name: Google Guava
  endpoint:
    path: https://guava.dev/
    method: GET
    data_selector: records
- name: GSON SDK
  endpoint:
    path: https://github.com/google/gson
    method: GET
    data_selector: records
- name: IAB Open Measurement SDK
  endpoint:
    path: https://iabtechlab.com/standards/open-measurement-sdk/
    method: GET
    data_selector: records
- name: Jackson
  endpoint:
    path: https://github.com/codehaus/jackson
    method: GET
    data_selector: records
- name: Joda-Time
  endpoint:
    path: https://www.joda.org/joda-time/
    method: GET
    data_selector: records
- name: libphoneNumber
  endpoint:
    path: https://libphonenumbers.js.org/docs/
    method: GET
    data_selector: records
- name: Moshi
  endpoint:
    path: https://square.github.io/moshi/1.x/moshi/
    method: GET
    data_selector: records
- name: OKHTTP SDK
  endpoint:
    path: https://github.com/square/okhttp
    method: GET
    data_selector: records
- name: Pangle SDK
  endpoint:
    path: https://www.pangleglobal.com/
    method: GET
    data_selector: records
- name: Protocol Buffers
  endpoint:
    path: https://developers.google.com/protocol-buffers
    method: GET
    data_selector: records
- name: ReactiveX
  endpoint:
    path: https://reactivex.io/languages.html
    method: GET
    data_selector: records
- name: ReLinker SDK
  endpoint:
    path: https://github.com/KeepSafe/ReLinker
    method: GET
    data_selector: records
- name: RxAndriod
  endpoint:
    path: https://github.com/ReactiveX/RxAndroid
    method: GET
    data_selector: records
- name: RxJava
  endpoint:
    path: https://developers.google.com/maps/documentation/android-sdk/rx
    method: GET
    data_selector: records
- name: Shimmer for Android
  endpoint:
    path: https://github.com/facebookarchive/shimmer-android
    method: GET
    data_selector: records
- name: SLF4J
  endpoint:
    path: https://www.slf4j.org/manual.html
    method: GET
    data_selector: records
- name: Square Retrofit
  endpoint:
    path: https://square.github.io/retrofit/
    method: GET
    data_selector: records
- name: Tapjoy SDK
  endpoint:
    path: https://dev.tapjoy.com/en/android-sdk/SDK
    method: GET
    data_selector: records
- name: Tink-android Google SDK
  endpoint:
    path: https://developers.google.com/tink
    method: GET
    data_selector: records
- name: Unity Engine SDK
  endpoint:
    path: https://unity.com/
    method: GET
    data_selector: records
- name: Volley
  endpoint:
    path: https://google.github.io/volley/
    method: GET
    data_selector: records
- name: Vungle Ad SDK
  endpoint:
    path: https://liftoff.io/monetize/vungle-sdk/
    method: GET
    data_selector: records
- name: ZXING SDK
  endpoint:
    path: https://github.com/zxing/zxing
    method: GET
    data_selector: records
- name: Appstore Billing Compatibility SDK
  endpoint:
    path: /in-app-purchasing/appstore-billing-compatibility.html
    method: GET
    data_selector: records
- name: A3L Authentication SDK
  endpoint:
    path: /a3l-authentication/get-started.html
    method: GET
    data_selector: records
- name: A3L Location SDK
  endpoint:
    path: /a3l-location/get-started.html
    method: GET
    data_selector: records
- name: A3L Messaging SDK
  endpoint:
    path: /a3l-messaging/get-started.html
    method: GET
    data_selector: records
- name: Amazon Appstore Easy Port
  endpoint:
    path: /app-porting/amazon-appstore-easy-port.html
    method: GET
    data_selector: records
- name: easy_port_plugin
  endpoint:
    path: /developer-portal/getDeXSearchData
    method: GET
    data_selector: data
    params: {}
- name: Appstore Billing Compatibility SDK
  endpoint:
    path: /in-app-purchasing/appstore-billing-compatibility.html#download
    method: GET
- name: Receipt Verification Service
  endpoint:
    path: /rvs
    method: GET
    data_selector: records
    params: {}
- name: subscription_plan
  endpoint:
    path: /in-app-purchasing/billing-compatibility-subscriptions
    method: GET
    data_selector: subscription_plans
    params: {}
- name: queryPurchasesAsync
  endpoint:
    path: /iap/appstore-billing-compatibility/api-reference/4.2.0/com/amazon/device/iap/billingclient/api/BillingClient.html#queryPurchasesAsync-com.amazon.device.iap.billingclient.api.QueryPurchasesParams-com.amazon.device.iap.billingclient.api.PurchasesResponseListener-
    method: GET
    data_selector: records
- name: RVS for Appstore SDK IAP
  endpoint:
    path: /iap/rvs-for-appstore-sdk
    method: POST
    data_selector: receiptValidation
    params: {}
- name: RVS for Appstore Billing Compatibility
  endpoint:
    path: /iap/billing-compatibility-rvs
    method: POST
    data_selector: receiptValidation
    params: {}
- name: purchases.products.get
  endpoint:
    path: /version/{operation-version-number}/get/developer/{shared-secret}/applications/{package-name}/purchases/products/{product-id}/tokens/{token}
    method: GET
    data_selector: response
    params: {}
- name: purchases.subscriptionsv2.get
  endpoint:
    path: /version/{operation-version-number}/developer/{shared-secret}/applications/{package-name}/purchases/subscriptionsv2/tokens/{token}
    method: GET
    data_selector: response
    params: {}
- name: verifyEntitlement
  endpoint:
    path: /version/1.0/developer/{developerSecret}/applications/{packageName}/purchases/subscriptionsv2/tokens/{token}
    method: GET
    data_selector: responseJson
    params: {}
- name: verifySubscription
  endpoint:
    path: /version/1.0/developer/{developerSecret}/applications/{packageName}/purchases/products/{productId}/tokens/{token}
    method: GET
    data_selector: responseJson
    params: {}
- name: consumable
  endpoint:
    path: /version/1.0/get/developer/2:smXBjZkWCxDMSBvQ8HBGsUS1PK3jvVc8tuTjLNfPHfYAga6WaDzXJPoWpfemXaHg:iEzHzPjJ-XwRdZ4b4e7Hxw==/applications/com.amazon.sample.iapv2/purchases/products/com.amazon.iapsamplev2.gold_medal/tokens/wE1EG1gsEZI9q9UnI5YoZ2OxeoVKPdR5bvPMqyKQq5Y=:1:11
    method: GET
    data_selector: records
- name: entitlement
  endpoint:
    path: /version/1.0/get/developer/2:smXBjZkWCxDMSBvQ8HBGsUS1PK3jvVc8tuTjLNfPHfYAga6WaDzXJPoWpfemXaHg:iEzHzPjJ-XwRdZ4b4e7Hxw==/applications/com.amazon.sample.iapv2/purchases/products/com.amazon.iapsamplev2.expansion_set_1/tokens/mINy5VRd1FqjVOz-WBtTqw9FBGWhnuVx07kzTBMR600=:2:11
    method: GET
    data_selector: records
- name: subscription
  endpoint:
    path: /version/1.0/developer/2:SPOkNr03vVx0_u04edvPTf5t6VC-HHS4535VkVviYJp7fCvSepKM5Ys-_ODYdtw8:Y-tOqaWFAXCHluaxssj9VQ==/applications/com.amazon.sample.iap/purchases/subscriptionsv2/tokens/JyGJ5iEtYgFu1ngnQovTqSIHQxR53GsMLqkR1tKLp5c=:3:11
    method: GET
    data_selector: records
- name: current_location
  endpoint:
    path: /getCurrentLocation
    method: GET
    data_selector: location
- name: last_known_location
  endpoint:
    path: /getLastLocation
    method: GET
    data_selector: location
- name: location_settings
  endpoint:
    path: /checkLocationSettings
    method: GET
    data_selector: locationSettings
    params: {}
- name: location_availability
  endpoint:
    path: /getLocationAvailability
    method: GET
    data_selector: locationAvailability
    params: {}
- name: request_location_updates
  endpoint:
    path: /requestLocationUpdates
    method: POST
    data_selector: locationUpdates
    params: {}
- name: stop_location_updates
  endpoint:
    path: /removeLocationUpdates
    method: POST
    data_selector: stopUpdates
    params: {}
- name: A3L Messaging
  endpoint:
    path: /a3l/messaging/api-reference
    method: GET
    data_selector: data
    params: {}
- name: topic_based_messaging
  endpoint:
    path: /a3l/messaging/topic-based
    method: POST
    data_selector: message
    params: {}
- name: api_key
  endpoint:
    path: /api_key.txt
    method: GET
    data_selector: device-side
    params: {}
- name: adm_server_configuration
  endpoint:
    path: /adm_server_configuration.json
    method: GET
    data_selector: server-side
    params: {}
- name: google_services
  endpoint:
    path: /google-services.json
    method: GET
    data_selector: device-side
    params: {}
- name: fcm_server_configuration
  endpoint:
    path: /fcm_server_configuration.json
    method: GET
    data_selector: server-side
    params: {}
- name: Appstore Developer Blog
  endpoint:
    path: /apps-and-games/blogs
    method: GET
- name: Technical Documentation
  endpoint:
    path: /apps-and-games/documentation
    method: GET
- name: Amazon Developer Huddle
  endpoint:
    path: /apps-and-games/devhuddle
    method: GET
- name: supported_intents
  endpoint:
    path: /fire-tablets/ft-supported-android-intents
    method: GET
    data_selector: intents
    params: {}
- name: ACTION_INSERT_OR_EDIT
  endpoint:
    path: android.intent.action.INSERT_OR_EDIT
    method: GET
    data_selector: content
    params: {}
- name: ACTION_INSTALL_PACKAGE
  endpoint:
    path: android.intent.action.INSTALL_PACKAGE
    method: GET
    data_selector: file
    params: {}
- name: ACTION_MANAGE_NETWORK_USAGE
  endpoint:
    path: android.intent.action.MANAGE_NETWORK_USAGE
    method: GET
    data_selector: network settings
    params: {}
- name: ACTION_MANAGE_PACKAGE_STORAGE
  endpoint:
    path: android.intent.action.MANAGE_PACKAGE_STORAGE
    method: GET
    data_selector: storage activity
    params: {}
- name: ACTION_PICK
  endpoint:
    path: android.intent.action.PICK
    method: GET
    data_selector: item selection
    params: {}
- name: ACTION_PICK_ACTIVITY
  endpoint:
    path: android.intent.action.PICK_ACTIVITY
    method: GET
    data_selector: app selection
    params: {}
- name: ACTION_POWER_USAGE_SUMMARY
  endpoint:
    path: android.intent.action.POWER_USAGE_SUMMARY
    method: GET
    data_selector: power usage
    params: {}
- name: ACTION_SEARCH
  endpoint:
    path: android.intent.action.SEARCH
    method: GET
    data_selector: data search
    params: {}
- name: ACTION_SEND
  endpoint:
    path: android.intent.action.SEND
    method: GET
    data_selector: data send
    params: {}
- name: ACTION_SEND_MULTIPLE
  endpoint:
    path: android.intent.action.SEND_MULTIPLE
    method: GET
    data_selector: multiple data send
    params: {}
- name: ACTION_VIEW
  endpoint:
    path: android.intent.action.VIEW
    method: GET
    data_selector: view activity
    params: {}
- name: ACTION_WEB_SEARCH
  endpoint:
    path: android.intent.action.WEB_SEARCH
    method: GET
    data_selector: web search
    params: {}
- name: ACTION_CALL
  endpoint:
    path: android.intent.action.CALL
    method: GET
    data_selector: voicemail number
    params: {}
- name: ACTION_CALL_BUTTON
  endpoint:
    path: android.intent.action.CALL_BUTTON
    method: GET
    data_selector: call button action
    params: {}
- name: ACTION_CHOOSER
  endpoint:
    path: android.intent.action.CHOOSER
    method: GET
    data_selector: app chooser
    params: {}
- name: ACTION_SET_WALLPAPER
  endpoint:
    path: android.intent.action.SET_WALLPAPER
    method: GET
    data_selector: set wallpaper
    params: {}
- name: Fire 7 (2019)
  endpoint:
    path: /fire/tablets/Fire_7_2019
    method: GET
    data_selector: screen_info
    params: {}
- name: Fire HD 8 (2018)
  endpoint:
    path: /fire/tablets/Fire_HD_8_2018
    method: GET
    data_selector: screen_info
    params: {}
- name: Fire HD 10 (2017)
  endpoint:
    path: /fire/tablets/Fire_HD_10_2017
    method: GET
    data_selector: screen_info
    params: {}
- name: Fire 7 (2017)
  endpoint:
    path: /fire/tablets/Fire_7_2017
    method: GET
    data_selector: screen_info
    params: {}
- name: Fire HD 8 (2017)
  endpoint:
    path: /fire/tablets/Fire_HD_8_2017
    method: GET
    data_selector: screen_info
    params: {}
- name: Fire HD 8 (2016)
  endpoint:
    path: /fire/tablets/Fire_HD_8_2016
    method: GET
    data_selector: screen_info
    params: {}
- name: Fire HD 10 (2015)
  endpoint:
    path: /fire/tablets/Fire_HD_10_2015
    method: GET
    data_selector: screen_info
    params: {}
- name: Fire HD 8 (2015)
  endpoint:
    path: /fire/tablets/Fire_HD_8_2015
    method: GET
    data_selector: screen_info
    params: {}
- name: Fire HD (2015)
  endpoint:
    path: /fire/tablets/Fire_HD_2015
    method: GET
    data_selector: screen_info
    params: {}
- name: Fire HDX 8.9 (2014)
  endpoint:
    path: /fire/tablets/Fire_HDX_8.9_2014
    method: GET
    data_selector: screen_info
    params: {}
- name: Fire HD 7 (2014)
  endpoint:
    path: /fire/tablets/Fire_HD_7_2014
    method: GET
    data_selector: screen_info
    params: {}
- name: Fire HD 6 (2014)
  endpoint:
    path: /fire/tablets/Fire_HD_6_2014
    method: GET
    data_selector: screen_info
    params: {}
- name: Kindle Fire HDX 8.9" (2013)
  endpoint:
    path: /fire/tablets/Kindle_Fire_HDX_8.9_2013
    method: GET
    data_selector: screen_info
    params: {}
- name: Kindle Fire HDX 7" (2013)
  endpoint:
    path: /fire/tablets/Kindle_Fire_HDX_7_2013
    method: GET
    data_selector: screen_info
    params: {}
- name: Kindle Fire HD 7" (2013)
  endpoint:
    path: /fire/tablets/Kindle_Fire_HD_7_2013
    method: GET
    data_selector: screen_info
    params: {}
- name: Kindle Fire HDX 8.9" (2012)
  endpoint:
    path: /fire/tablets/Kindle_Fire_HDX_8.9_2012
    method: GET
    data_selector: screen_info
    params: {}
- name: Kindle Fire HD 7" (2012)
  endpoint:
    path: /fire/tablets/Kindle_Fire_HD_7_2012
    method: GET
    data_selector: screen_info
    params: {}
- name: Kindle Fire (2012)
  endpoint:
    path: /fire/tablets/Kindle_Fire_2012
    method: GET
    data_selector: screen_info
    params: {}
- name: Kindle Fire (2011)
  endpoint:
    path: /fire/tablets/Kindle_Fire_2011
    method: GET
    data_selector: screen_info
    params: {}
- name: Fire TV Stick 4K Max
  endpoint:
    path: /zh/apps-and-games/fire-tv
    method: GET
    data_selector: devices
- name: Fire TV Cube
  endpoint:
    path: /zh/apps-and-games/fire-tv
    method: GET
    data_selector: devices
- name: Fire TV Omni QLED
  endpoint:
    path: /zh/apps-and-games/fire-tv
    method: GET
    data_selector: devices
- name: 智能电视
  endpoint:
    path: /zh/apps-and-games/fire-tv
    method: GET
    data_selector: devices
- name: Automotive
  endpoint:
    path: /zh/apps-and-games/fire-tv
    method: GET
    data_selector: devices
- name: 设备规格
  endpoint:
    path: /docs/fire-tablets/ft-device-specifications.html
    method: GET
    data_selector: records
- name: 应用开发工具
  endpoint:
    path: /docs/fire-tablets/ft-get-started.html
    method: GET
    data_selector: records
- name: Appstore SDK
  endpoint:
    path: /iap/sdk/Appstore_SDK_3.0.8.zip
    method: GET
- name: Appstore Billing Compatibility SDK
  endpoint:
    path: /iap/sdk/Appstore_Billing_Compatibility_SDK_4.1.0.zip
    method: GET
- name: Amazon Device Message SDK
  endpoint:
    path: /adm/sdk/AmazonDeviceMessaging.zip
    method: GET
- name: A3L SDK
  endpoint:
    path: /a3l/sdk/A3LAuthentication_SDK_1.1.0.zip
    method: GET
- name: Fire TV Integration SDK
  endpoint:
    path: /fire-tv/com.amazon.tv.developer.sdk.content.zip
    method: GET
- name: Login with Amazon SDK
  endpoint:
    path: /login-with-amazon/sdk/LoginWithAmazon-Android-3.1.6.zip
    method: GET
- name: developer_portal
  endpoint:
    path: /developer-portal/getDeXSearchData
    method: GET
    data_selector: settingsUrl
- name: Live App Testing
  endpoint:
    path: /app-testing/live-app-testing
    method: GET
- name: test_summary
  endpoint:
    path: /docs/app-testing/test-summary-results.html
    method: GET
    data_selector: test_runs
    params: {}
- name: remote_debug
  endpoint:
    path: /apps-and-games/documentation
    method: GET
    data_selector: resources
    params: {}
- name: Live Device Interaction
  endpoint:
    path: /docs/app-testing/live-device-interaction.html
    method: GET
- name: Appstore Quality Central
  endpoint:
    path: /apps-and-games/appstore-quality-central
    method: GET
    data_selector: faq
    params: {}
- name: Live Device Interaction
  endpoint:
    path: /apps-and-games/live-device-interaction
    method: GET
    data_selector: faq
    params: {}
- name: DevTest for IAP
  endpoint:
    path: /apps-and-games/devtest/iap
    method: GET
- name: tester_management
  endpoint:
    path: /apps-and-services/tester-management
    method: GET
    data_selector: testers
    params: {}
- name: manage_testers
  endpoint:
    path: /devtest/manage-testers
    method: GET
    data_selector: testers
    params: {}
- name: register_app
  endpoint:
    path: /{apiVersion}/applications/{appId}/devtest/register
    method: POST
- name: add_testers
  endpoint:
    path: /{apiVersion}/applications/{appId}/tracks/{trackId}/testers
    method: POST
- name: manage_testers
  endpoint:
    path: /docs/app-testing/manage-testers.html
    method: GET
    data_selector: content
    params: {}
- name: opt_in_tests
  endpoint:
    path: /settings/console/registration?return_to=/docs/app-testing/prepare-app-testers.html
    method: GET
- name: test_app_email_invitation
  endpoint:
    path: /docs/app-testing/test-criteria.html
    method: GET
- name: test_app_push_notification
  endpoint:
    path: /docs/app-testing/live-app-testing-getting-started.html
    method: GET
- name: Test new versions of published apps
  endpoint:
    path: /app-testing/test-new-versions
    method: GET
    data_selector: tests
    params: {}
- name: Submit your app directly from Live App Testing
  endpoint:
    path: /app-testing/submit-app-directly
    method: POST
    data_selector: submission
    params: {}
- name: submit_in_app_item
  endpoint:
    path: /iap/submit/item
    method: POST
    data_selector: item_details
- name: promote_in_app_item
  endpoint:
    path: /iap/promote/item
    method: POST
    data_selector: promotion_details
- name: import_multiple_in_app_items
  endpoint:
    path: /iap/import/multiple
    method: POST
    data_selector: import_details
- name: export_multiple_in_app_items
  endpoint:
    path: /iap/export/multiple
    method: GET
    data_selector: export_details
- name: live_app_testing
  endpoint:
    path: /live-app-testing
    method: GET
- name: iap_items
  endpoint:
    path: /iap/create-and-submit
    method: POST
    data_selector: iapItems
- name: in_app_items
  endpoint:
    path: /in-app-items
    method: GET
    data_selector: items
    params: {}
- name: types_of_purchases
  endpoint:
    path: /iap/purchase-types
    method: GET
    data_selector: purchasable_items
    params: {}
- name: refunds
  endpoint:
    path: /iap/refunds
    method: GET
    data_selector: refund_info
    params: {}
- name: User Interface (UI) Design Guidelines
  endpoint:
    path: /docs/in-app-purchasing/iap-ux-design-guidelines.html
    method: GET
- name: User Experience (UX) Design Guidelines
  endpoint:
    path: /docs/in-app-purchasing/iap-ux-design-guidelines.html
    method: GET
- name: iap
  endpoint:
    path: /in-app-purchasing
    method: GET
    data_selector: records
- name: CSV Template
  endpoint:
    path: /iap/csv-template
    method: GET
    data_selector: template
    params: {}
- name: Import IAPs
  endpoint:
    path: /iap/import
    method: POST
    data_selector: importStatus
    params: {}
- name: Export IAPs
  endpoint:
    path: /iap/export
    method: GET
    data_selector: exportData
    params: {}
- name: IAP Items
  endpoint:
    path: /iap/items
    method: POST
    data_selector: items
    params: {}
- name: promotional_pricing_terms
  endpoint:
    path: /docs/in-app-purchasing/promotional-pricing-terms.html
    method: GET
    data_selector: terms
    params: {}
- name: promotional_pricing_customer_segments
  endpoint:
    path: /docs/in-app-purchasing/promotional-pricing-customer-segments.html
    method: GET
    data_selector: customer_segments
    params: {}
- name: set_up_promotional_pricing
  endpoint:
    path: /docs/in-app-purchasing/set-up-promotional-pricing.html
    method: GET
    data_selector: setup
    params: {}
- name: change_promotional_prices
  endpoint:
    path: /docs/in-app-purchasing/change-promotional-prices.html
    method: GET
    data_selector: change_prices
    params: {}
- name: IAP Sample Apps
  endpoint:
    path: /iap/sample-apps
    method: GET
    data_selector: apps
    params: {}
- name: getPurchaseUpdates
  endpoint:
    path: /iap/getPurchaseUpdates
    method: GET
    data_selector: receipts
    params:
      reset: 'false'
- name: getProductData
  endpoint:
    path: /iap/getProductData
    method: GET
    data_selector: productData
    params: {}
- name: ResponseReceiver
  endpoint:
    path: /iap/appstore-sdk-api-reference/3.0.8/com/amazon/device/iap/ResponseReceiver.html
    method: GET
- name: PurchasingService
  endpoint:
    path: /iap/appstore-sdk-api-reference/3.0.8/com/amazon/device/iap/PurchasingService.html
    method: GET
- name: PurchasingListener
  endpoint:
    path: /iap/appstore-sdk-api-reference/3.0.8/com/amazon/device/iap/PurchasingListener.html
    method: GET
- name: iap
  endpoint:
    path: /iap
    method: GET
    data_selector: data
    params: {}
- name: purchase_validation
  endpoint:
    path: /validatePurchase
    method: POST
    data_selector: purchaseMetadataMap
- name: acknowledge_receipt
  endpoint:
    path: /acknowledgeReceipt
    method: PUT
    data_selector: response
    params: {}
- name: Get Access Token API
  endpoint:
    path: /get-access-token-api
    method: GET
- name: Get User Profile API
  endpoint:
    path: /get-user-profile-api
    method: GET
- name: user_profile
  endpoint:
    path: /version/1.0/user/profile
    method: GET
    data_selector: user_profile_data
    params:
      access_token: Atza|IQEBLjAsAhRmHjNgHpi0U-Dme37rR6CuUpSR...
- name: customer_subscription
  endpoint:
    path: /api/subscription
    method: POST
    data_selector: subscription_status
    params: {}
- name: Quick Subscribe Test Cases
  endpoint:
    path: /in-app-purchasing/quick-subscribe-test-cases
    method: GET
    data_selector: test_cases
- name: getPurchaseUpdates
  endpoint:
    path: /iap/appstore-sdk-api-reference/3.0.8/com/amazon/device/iap/PurchasingService.html#getPurchaseUpdates-boolean-
    method: GET
    data_selector: receipts
- name: modify_subscription
  endpoint:
    path: /modify_subscription
    method: POST
    data_selector: receipts
- name: RTN for tiered subscriptions
  endpoint:
    path: /in-app-purchasing/rtn-for-tiered-subscriptions
    method: GET
    data_selector: notifications
    params: {}
- name: RVS for tiered subscriptions
  endpoint:
    path: /in-app-purchasing/rvs-for-tiered-subscriptions
    method: GET
    data_selector: receipts
    params: {}
- name: rvs
  endpoint:
    path: /rvs/verify
    method: POST
    data_selector: receipt
    params: {}
- name: verifyReceipt
  endpoint:
    path: /version/1.0/verifyReceiptId/developer/{shared-secret}/user/{user-id}/receiptId/{receipt-id}
    method: POST
    data_selector: response
- name: verify_receipt
  endpoint:
    path: /version/{operation-version-number}/verifyReceiptId/developer/{shared-secret}/user/{user-id}/receiptId/{receipt-id}
    method: GET
    data_selector: response
- name: verify_receipt
  endpoint:
    path: /version/1.0/verifyReceiptId
    method: POST
    data_selector: response
- name: verify_receipt
  endpoint:
    path: /verifyReceiptId/developer/{developerId}/user/{userId}/receiptId/{receiptId}
    method: GET
    data_selector: autoRenewing
    params: {}
- name: verifyReceiptId
  endpoint:
    path: /version/1.0/verifyReceiptId
    method: GET
    data_selector: response
    params: {}
- name: real_time_notifications
  endpoint:
    path: /in-app-purchasing/real-time-notifications
    method: POST
    data_selector: Message
- name: Real-Time Notifications
  endpoint:
    path: /in-app-purchasing/real-time-notifications.html
    method: POST
    data_selector: notifications
    params: {}
- name: App Tester
  endpoint:
    path: /iap/install-and-configure-app-tester
    method: GET
    data_selector: api_responses
    params: {}
- name: purchase
  endpoint:
    path: /purchase
    method: GET
    data_selector: PurchaseRequestStatus
    params: {}
- name: getProductData
  endpoint:
    path: /getProductData
    method: GET
    data_selector: GetProductDataStatus
    params: {}
- name: getUserData
  endpoint:
    path: /getUserData
    method: GET
    data_selector: GetUserDataStatus
    params: {}
- name: getPurchaseUpdates
  endpoint:
    path: /getPurchaseUpdates
    method: GET
    data_selector: PurchaseUpdatesResponseStatus
    params: {}
- name: GetUserData
  endpoint:
    path: /getUserData
    method: POST
    data_selector: response
    params: {}
- name: GetProductData
  endpoint:
    path: /getProductData
    method: POST
    data_selector: response
    params: {}
- name: Purchase
  endpoint:
    path: /purchase
    method: POST
    data_selector: response
    params: {}
- name: GetPurchaseUpdates
  endpoint:
    path: /getPurchaseUpdates
    method: POST
    data_selector: response
    params: {}
- name: NotifyFulfillment
  endpoint:
    path: /notifyFulfillment
    method: POST
    data_selector: response
    params: {}
- name: SubscriptionCheck
  endpoint:
    path: /subscriptionCheck
    method: POST
    data_selector: response
    params: {}
- name: VerifyReceipts
  endpoint:
    path: /verifyReceipts
    method: POST
    data_selector: response
    params: {}
- name: Live App Test
  endpoint:
    path: /app-testing/live-app-testing
    method: GET
    data_selector: test
    params: {}
- name: Pending Purchases
  endpoint:
    path: /in-app-purchasing/implement-pending-purchases
    method: GET
    data_selector: pendingPurchases
    params: {}
- name: getItemData
  endpoint:
    path: /iap/getItemData
    method: POST
    data_selector: data.itemData
    params: {}
- name: getPurchaseUpdates
  endpoint:
    path: /iap/getPurchaseUpdates
    method: POST
    data_selector: data.receipts
    params: {}
- name: getUserId
  endpoint:
    path: /iap/getUserId
    method: POST
    data_selector: data.userId
    params: {}
- name: purchaseItem
  endpoint:
    path: /iap/purchaseItem
    method: POST
    data_selector: data.purchaseStatus
    params: {}
- name: registerObserver
  endpoint:
    path: /iap/registerObserver
    method: POST
    data_selector: data.observerStatus
    params: {}
- name: notifyFulfillment
  endpoint:
    path: /notifyFulfillment
    method: POST
- name: getPurchaseUpdates
  endpoint:
    path: /getPurchaseUpdates
    method: GET
- name: verifyReceiptId
  endpoint:
    path: /verifyReceiptId
    method: POST
- name: AmazonIapV2
  endpoint:
    path: /iap-api
    method: GET
    data_selector: response
    params: {}
- name: purchase_updates
  endpoint:
    path: /getPurchaseUpdates
    method: POST
    data_selector: receipts
- name: purchase_response
  endpoint:
    path: /purchaseResponse
    method: POST
    data_selector: response
notes:
- Amazon Appstore doesn't require connection maintenance.
- The Appstore Billing Compatibility SDK allows purchasing a consumable item again,
  even if it had already been purchased and not yet consumed.
- Registration is easy and free. Gain access to all of Amazon's APIs.
- These Amazon Music APIs are currently in a closed Beta.
- These Amazon Music documents are in preview status. Be aware that content may change.
- Fire OS is a fork of Android, so if your app runs on Android, it will most likely
  run on Amazon Fire devices too.
- This document assumes that you have an app or website ('Application') ready to add
  the Login With Amazon button.
- Secure delivery of gift cards, no claim code storage required
- Partner-controlled delivery and fulfillment of Gift Cards
- Requires setup of connected app in Amazon Developer Console
- Fire TV device specifications for all models are provided here. The specifications
  provide more detail than the product pages on Amazon.com, as they're intended for
  developers building apps rather than for consumers.
- Support 8-bit - 10-bit color depth (HEVC/AV1)
- 10-bit color input is supported by the codec, but the output does not support 10-bit
  output.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Supports various Fire TV devices and specifications
- Fire tablets support Android apps, HTML5 Web apps, and React Native apps.
- Specifications provide more detail than the product pages on Amazon.com, as they're
  intended for developers building apps rather than for consumers.
- API Level 30 - For Fire OS 8 (Android 11) feature compatibility, target API level
  30.
- Auto Backup is enabled for apps targeting API 23 or higher.
- Biometric authentication requires setting up a negative button.
- Television screens have a higher contrast than computer screens, which can make
  colors seem more saturated, brighter, and vibrant. The color gamut (the range of
  colors that can be displayed) is also less than that of a PC screen. In your app,
  use less saturated colors.
- Cool colors (blue, purple, gray) work better than warmer colors (red, orange).
- Because television screens must be read from across the room, use larger type sizes
  for body text (at least 14sp, which is approximately 19px on 720p, 28px on 1080p).
- Amazon uses Helvetica Neue Regular as the system font.
- Keep item descriptions or other blocks of text as short as possible, both in content
  and in line width. Use greater line spacing than you would use on a desktop or tablet
  screen. Separate text into paragraphs or chunks and write in short, declarative
  sentences.
- Navigation and user input on the Amazon Fire TV user interface are both accomplished
  with one of the Fire TV remotes (Amazon Fire TV Remote or Voice Remote), or with
  a game controller (either the Amazon Fire Game Controller, or other Bluetooth game
  controllers).
- The use of a physical controller instead of mouse, keyboard or touch input makes
  input and control methods for Fire TV apps less flexible than on other devices.
- The Left, Right, Up, and Down D-Pad buttons on one of the Amazon Fire TV remotes
  or on a game controller are used to navigate the user interface of your app.
- Your app should clearly indicate which on-screen element currently has the focus.
- When the user presses Select (or the A button on a game controller) while a UI element
  has the focus, that element should momentarily change to the selected state.
- When the user navigates the focus to a text field, a system keyboard automatically
  appears.
- Global search is provided system-wide and is not customizable for individual apps.
- Android Debug Bridge (ADB) is provided by the Android Open Source Project, not by
  Amazon.
- Make sure both Fire TV and your computer are using the same network.
- When connecting wireless with `adb connect <ipaddress>`, make sure you're typing
  the IP address correctly, with all the required dots `.`.
- Entertainment Spotlight Ads is supported only in the United States, Canada, Mexico,
  Brazil, Australia, the Netherlands, the United Kingdom, Germany, France, Italy,
  Spain, and Sweden.
- Fire tablets have a common user interface. However, the device specifications vary
  by tablet.
- Amazon recommends setting a minimum API level of 10 to ensure compatibility with
  all Fire tablets.
- Some features may not be supported by the Amazon Appstore.
- Registration is easy and free. Gain access to all of Amazon's APIs, and get your
  apps published across millions of devices in over 236 countries and territories
  worldwide.
- eMMC is a type of flash memory used in many consumer electronics devices to write
  and log data that is essential to the function of the device.
- Apps should sustain a high frame rate without dropping below 25 fps for an extended
  period of time.
- The app should not force close, crash, or hard lock while in use.
- Fire TV apps should restrict foreground memory (RAM) consumption to 400 MB for 4K
  video apps, and 300 MB for 1080P or lower resolution.
- Fire tablet apps should limit foreground memory consumption to less than 1600 MB
  on Fire HD 10 tablet (2023).
- Only accounts with administrator or developer roles have permission to create a
  live app test, end it, or promote it to upcoming.
- Sandbox Mode is not automatically detected with the Appstore SDK. You need to set
  your app in debug mode to run sandbox mode.
- Measures performance of app during cool and warm launches
- Make sure the app is not logged in for before sign in tests
- Make sure the app is logged in for after sign in tests
- Amazon Appstore no longer supports SFTP for uploading binary files greater than
  2.5 GB in size.
- Amazon wraps your app with code that enables the app to communicate with the Amazon
  Appstore client.
- Automatically-applied DRM is not tied to the key you used to sign your app.
- Amazon reserves the right to make the final determination on what apps are available
  in the Amazon Appstore.
- Some fields in the reports are not applicable to Twitch; these are identified in
  the detailed tables.
- For Appstore reports, the information for each sale reflects the local time zone
  of the associated marketplace.
- You must create an Amazon developer account in order to publish an app in the Appstore.
- The Developer Console acts as a configuration portal for different Appstore-related
  products.
- Some objects may return nulls in deeply nested fields
- Amazon Appstore API requires OAuth2 authentication.
- Amazon Fire TV uses the Amazon Appstore.
- Fire TV does not support Google Services (such as Google Maps or Google In-App Billing).
  Use the Amazon SDKs for equivalent services.
- Touch UI tips for automotive experience
- Focus state adjustments when switching between remote and touch modes
- Navigational Direction is a pre-requisite both for D-Pad Remote support and for
  touch interaction.
- Android-based applications for Fire TV should follow clear platform-level patterns
  for remote-based navigation.
- Ensure that Views which need interaction have an OnClickListener assigned to them
  and can receive the focus.
- Touch interaction is more than just clicking on items. Make sure to include ways
  to scroll through gestures by using ScrollViews and RecyclerViews where possible.
- Secondary application activities such as detail pages or playback UIs also need
  to be touch enabled. Use the patterns previously described to enable them.
- Some 3rd-party components may create layout items (checkboxes, buttons, etc.) outside
  of areas the user can access, or they may not trigger the D-Pad.
- When a user downloads an item in the app, pass along that information to the new
  Fire TV Downloader app via the Automotive SDK.
- When a user deletes a downloaded item in your app, pass along that information with
  Fire TV via the SDK.
- Some devices may have different specifications based on the model.
- Device specifications may vary by model and region.
- Supports Dolby Vision, HDR10, HDR10+, HLG
- Integrated Fire TV experience
- Available in sizes including 43”, 50”, and 55”
- This model was refreshed and enhanced in 2020.
- 'Several screen sizes are available: 24" (720p), 32" (720p), and 39" (1080p).'
- Supports HDR10 and Dolby Digital Audio
- Voice control available via Alexa
- Smart TV with Fire TV experience built-in
- Includes Voice Remote with Alexa
- Manufactured by Technika, supports 4K Ultra HD picture quality.
- All models support Dolby Vision and HDR10.
- Devices support various audio and video codecs including AAC, MPEG, Dolby, and more.
- Some features like Miracast are not supported on all devices.
- Device specifications for Smart TVs in APAC.
- Supported only through linked Echo device
- Supports HDMI 2.0, 2.1, CEC
- Compatible with various streaming services such as Netflix and Prime Video
- Supports Dolby Audio and DTS Tru Surround
- Supports HDR10+, HLG, and Dolby Vision IQ
- Bluetooth 5.3 supported
- Smart TV available in multiple screen sizes
- Supports various OTT streaming services
- Used to fetch specifications for Fire TV devices
- 'Last updated: Sep 15, 2022'
- No authentication required for accessing device specifications.
- Uses Android version 9
- Supports Bluetooth 5.0
- Storage is 128 GB
- Supports various audio and video codecs.
- Includes Alexa voice control features.
- Marketplaces available include multiple Amazon domains
- 'Last updated: Jul 21, 2025'
- Fire TV Stick (1st Gen) supports 1080p @ 30fps resolution and has a 1 Ghz CPU.
- Fire TV Stick (2nd Gen) supports resolutions up to 4K ultra HD.
- Fire TV Cube provides a hands-free TV experience, allowing users to control TV and
  search content with voice.
- Supports 4K Ultra HD streaming
- Compatible with Alexa for voice control
- Supports Miracast and Alexa control through linked devices
- Smart TVs refers to any TV with Amazon Fire OS built-in to the television hardware.
- 99.9% of Fire TV apps are expected to work on Smart TVs.
- Sideloaded apps appear in both the Recent row and in the My Library row in the Apps
  section.
- Most 2018 Fire TV devices run on Fire OS 6.
- You can't use Google services on Amazon Fire devices.
- Remove <uses-amzn-sdk> from App Manifest.
- Fire OS 7 has parity with Android 9 features implemented.
- All features implemented in Fire OS 8 are at feature parity with Android 11.
- Users might run your app on a Fire OS 5, Fire OS 6, Fire OS 7, or Fire OS 8 device.
- If planning to develop for the newest OS, make sure to update to the latest version
  of the Login with Amazon SDK.
- Amazon requires setting targetSdkVersion to 34.
- Users can't install apps that have a targetSdkVersion lower than 23.
- Do not capture or throw away input events for any buttons you do not use in your
  app.
- Allowing the system to handle unused events enables background behavior such as
  media playback and volume control.
- The input references in this document apply to Unity 4.3.x and higher, but are subject
  to change with future Unity releases.
- Connected input devices are represented by the Android InputDevice class.
- Sleeping or otherwise unavailable controllers are not considered connected.
- Identifies game controllers by testing for both InputDevice.SOURCE_GAMEPAD and InputDevice.SOURCE_JOYSTICK
  constants.
- Identifies Amazon Fire TV Remote or Voice Remote by testing InputDevice.SOURCE_DPAD
  and keyboard type.
- None of these guidelines are requirements for publishing an app for Amazon Fire
  TV.
- If your app does not play media or use the analog sticks or shoulder buttons (L1/R1),
  do not capture the events for those buttons.
- If your app uses a framework such as Unity, you can ignore this recommendation,
  since the ability to pass key events through to the system is not supported in those
  frameworks.
- You may freely use the controller images and button hints on this page in your app.
- Integrating your media catalog with Amazon allows your content to be discovered
  and launched from Amazon devices.
- Integrating the Video Skills Kit (VSK) into your Fire TV app makes it easier for
  customers to discover and play your content.
- To enable voice command and control to work with your application, add the permission
  com.amazon.permission.media.session.voicecommandcontrol to your application manifest.
- To opt-in to the Fire TV media session voice command implementation, add the permission
  com.amazon.voice.supports_background_media_session to your application manifest.
- Integrating Media Session into your Fire TV app gives your app a number of advantages
  including robust voice-enabled playback controls.
- Ensure your app allows navigation using D-pad keys for better voice experience.
- Test new app versions for compatibility with voice scrolling.
- Voice-driven scrolling and selection capabilities are supported across all screens
  in your app.
- For the most part, Fire TV follows the same best practices and techniques for managing
  audio focus as Android.
- 'Use Method 1: EXTRA_ENCODINGS to detect all capability changes including Dolby
  Atmos.'
- 'For Fire OS 6 devices, when streaming Dolby Atmos content, use Method 2: audio_platform_capabilities
  global settings to check Atmos capability.'
- All applications must adhere to multimedia requirements for harmonious interaction.
- If the customer hasn't interacted with an app that's in focus and awake within 4
  hours, they will receive a 'Are you still watching?' prompt and if not acknowledged,
  they will be taken back home.
- For any details not discussed here, refer to the Android Developer docs about Managing
  Audio Focus.
- Applications should implement both approaches from section 2.1 and 2.2. However,
  these two approaches should not be used at the same time.
- HDMI Mode Switch APIs are not available in Android Lollipop SDK.
- Mode switch requests might not be successful and must be verified.
- All Fire TV Streaming Media Players running Fire OS 6 or later support tunneled
  mode for VP9 and HEVC decoders with certain limitations.
- All Fire TVs support tunnel mode for popular video codecs such as h264, h265, and
  VP9 for both secure and non-secure playback with certain limitations.
- You must define android:required='false' or the app will only install on Fire TV
  devices where the library is present.
- Requires setup of connected service in AndroidManifest.xml
- Requires integration with the Content Personalization API for personalized experiences.
- Fire TV services are currently not using off-device activity to influence the Continue
  Watching Row.
- The Continue Watching Row is based on playback events recorded from the current
  active Fire TV profile.
- Watch activity consists of content playback events.
- Events are needed to update the UI.
- Send all watch list items with action=add on initial app install and sign-in or
  when asked to refresh.
- 'Last updated: Mar 13, 2024'
- Sensitive IDs including Content ID and Profile ID will not be printed out in logs.
- Playback position should be between 2% - 92% of the total duration for the tile
  to appear in the CWR.
- If content is not showing in CWR, wait for the row to refresh or force a refresh
  through settings.
- Get started developing apps and games
- Fire TV development versus Android TV development
- Linear TV integration for Fire TV is available to select partners only.
- The 'Live' tab is not available in all marketplaces.
- The preferred integration uses CDF Station ID because it's the most direct integration,
  which cuts latency and lets you enable future features more quickly.
- Using Gracenote requires that you have a Gracenote account.
- Customers can favorite channels using the context menu or channel manager.
- It should take a maximum of three seconds for the splash screen to initiate after
  the user focuses on a tile.
- The TIF Companion Library provides an extensible implementation of common TV input
  service features.
- The application ID will be the same as your package path.
- The application is not showing up in sync sources.
- If running and installing from Android Studio, an option for Fire TV should appear
  in the devices section.
- Each input service must have a resource XML file which defines common input attributes.
- Replace the package name in the provided code with your own.
- EPG stands for electronic program guide.
- Ensure that the input ID equals the full class path to TvInputService.
- If the channel being tuned to is the same channel as the one currently in playback,
  then `onTune()` won't be called again.
- After enabling parental controls (PCON), I don't see the preview playback nor the
  poster image. I only see a black background.
- These tests will not work until Amazon has completed its configuration work.
- No gray tiles are shown in your app’s row
- All channels are removed once user uninstalls the application
- It may take up to an hour from uninstalling your app before it is omitted from the
  search results.
- At this time, linear TV integration for Fire TV is available to select partners
  only.
- Null or invalid data will result in failed service match of metadata
- This should only be used to push ENTITLED channels onto the device after installation
- Make sure to test before publishing.
- Entitlement should result in one click to full-screen playback.
- Event metadata, including the event title, description, start/end time, and content-forward
  image, are mandatory.
- Amazon will enable the Events Integration on Fire TV only when the app has gone
  through the certification process and the app is live on the app store.
- The events feature must be enabled only in marketplaces that have been agreed upon
  with your Amazon contact.
- Fire TV will display events scheduled to air within 7 days and automatically remove
  them when their end time has passed.
- Currently airing events will receive a LIVE badge on the tile to inform user of
  the airing status.
- If valid start and end times are provided, a red progress bar will appear at the
  bottom of the event tile.
- Tests will not work until Amazon has completed their configuration work
- Although the Fire TV platform supports the use of a mouse, your Fire TV app must
  use a controller as the primary mode of navigation and user input to be accepted
  by the Amazon Appstore.
- TV apps are always landscape
- Any media player that uses the Android's media playback and encryption APIs will
  work on the Amazon Fire TV platform.
- For more robust media needs, the Amazon port of ExoPlayer (or one of the paid media
  player options) is recommended.
- Always target the highest API level your application is supposed to be running on.
- Smart TVs may choose not to notify the connected Fire TV device that a different
  input was selected, or even that the TV was turned off.
- When a notification about reconnection is received, applications playing encoded
  content must check if the audio capabilities have been changed.
- The action bar items do not appear on the screen and are displayed in a modal dialog
  box.
- DIAL functionality does not require any changes to your Amazon Fire TV app's code
  for launch-only.
- You need to modify your app's manifest and resources to indicate support for DIAL
  and to accept launch intents.
- As of DIAL 2.2.1, CORS authorization model has changed.
- Ensure not to be overly permissive with authorized origins.
- Matter Casting enables customers to cast content from iOS and Android apps to Fire
  TV, Echo Show, and other TVs that support Matter Casting.
- Commissioning occurs once when the customer casts to a player (Commissioner) for
  the first time.
- The passcode is an 8-digit numeric code required to establish a secure connection
  between the player and the client.
- You must connect with a casting player as described below to see the list of endpoints
  they support.
- You need a valid DAC for development purposes and deployment to production.
- Attestation information is contained in the manifest file.
- The TV verifies the DAC and CD from the phone app.
- Text search for your app is not available by default on Amazon Fire TV.
- To appear in global text search results, integrate your app's media into the Amazon
  Catalog.
- Alexa is used for voice interactivity on Amazon Fire TV instead of the Leanback
  library.
- Notifications are not Recommendations.
- Users can turn app notifications on or off on a device-by-device basis.
- More granular notification configurations are not possible.
- If your app uses installLocation="preferExternal" to install a 40MB APK onto external
  storage, but then stores a 1GB downloaded data file to internal storage because
  the app uses the ApplicationInfo dataDir path, this would defeat the purpose of
  using external storage and quickly fill up the device's internal storage, leading
  to customer frustration.
- Deferred deep linking works only if users do not navigate away from the app detail
  page before they finish downloading and opening the app.
- Deep links take users from the Fire TV OS into a specific destination within an
  app on Fire TV.
- Deep linking gives more immediacy and continuity to the featured content displayed
  on Fire TV.
- Make sure that the default directory includes all string references.
- If the system fails to find a reference after searching the default directory, the
  system forces your app to close.
- The Presenter class allows defining the look and feel of Leanback-enabled apps.
- The DetailsFragment is displayed when the user selects a specific piece of content
  on the BrowseFragment.
- Uses MediaSession to control remote actions
- Requires handling of KeyEvents for user interactions
- Record & Share feature is in experimental beta, may have issues if memory is too
  large.
- System X-Ray requires the app to be in the foreground to display metrics.
- Event logging is useful for tracking when an event last occurred.
- The Developer Tools Menu provides a Network Proxy option that allows you to inspect
  the HTTP traffic.
- The proxy host and your Fire TV must be on the same network.
- If your app works with sensitive information, it is likely that you rely on HTTPS
  connections to protect against eavesdropping and man-in-the-middle attacks.
- On Fire OS 5, simply installing the certificate on your device is sufficient, since
  all apps implicitly trust certificates installed at the device level.
- On Fire OS 6, each app must explicitly specify which certificates it trusts by listing
  them in `res/xml/network_security_config.xml`.
- Ensure accessibility events are handled properly by setting view importance in XML
  or programmatically.
- Do not send AccessibilityNodeInfo objects directly to VoiceView.
- Before you begin, read through the Android documentation on accessibility.
- This page discusses the concepts and terminology related to implementing accessibility
  features for Fire OS.
- VoiceView's Review Mode allows a user to explore the grid layout of an Amazon Fire
  TV screen in detail.
- VoiceView supports WebViews because they are frequently used by many apps in the
  Amazon Appstore.
- VoiceView provides two mechanisms to navigate static (non-focusable) content.
- VoiceView enables visually impaired users to navigate the Fire TV user interface.
- VoiceView reads content for items that gain focus.
- Including the Amazon API JavaScript library is necessary only if your app uses Amazon
  APIs.
- A requirement for applications submitted for Amazon Fire TV is that they stop or
  pause audio playback when the user presses the Voice Search button.
- Standard Android key event for Back button capture on Fire TV.
- Most key presses can be captured just as standard keyboard events in a browser.
- The Play/Pause button is a toggle.
- The resolution for Amazon Fire TV apps is 1080p (1920x1080).
- The responses may be inaccurate or incomplete.
- Do not rely on specific version numbers within the string that are subject to change
  when the software is updated.
- Supports HTML5 web apps.
- Ensure UI is proper when app regains focus.
- The viewport meta tag is technically unsupported for initial release and scales
  pages up on 1080p displays (potentially causing page distortion).
- As of Amazon Fire TV 1.5 and Fire TV Stick 1.1, these platforms no longer support
  the amazon_enhanced_hls attribute because the platform automatically chooses the
  best player depending on the video type.
- Development materials and tools referenced on this page are provided by third parties,
  not by Amazon.
- Amazon requires that web pages that use either In-App Purchasing or require authentication
  be hosted over SSL.
- Ensure that the page triggering the IAP transaction and all its associated resources
  are served using SSL/HTTPS.
- Bucket name should be DNS compliant per AWS Bucket Restrictions
- Enable bucket logging when creating the app hosting bucket
- APK is needed for distribution on the Amazon Appstore
- AWV is supported for Amazon FireTV and 3rd generation and later Fire tablets.
- AWV uses a custom build of Chromium that has been hardware-optimized and GPU-accelerated
  specifically for Fire OS devices.
- To support Amazon WebView you must install the API level 17 SDK package.
- React Native support for TVs is available through the react-native-tvos project.
- For new apps, use Expo for building and deploying.
- You can't use this package and the core `react-native` package simultaneously in
  a project.
- Catalog ingestion is not real time — data takes up to 24 hours to appear on devices.
- Submit your catalog content 72 hours before broadcast for best results.
- To prevent app crashes, app freezing, and IAP failures, make sure every 32-bit library
  in your 32-bit folder has a corresponding 64-bit library in your 64-bit folder.
- Amazon pays developers electronically.
- The Appstore SDK contains multiple features, including In-App Purchasing (IAP),
  Digital Rights Management (DRM), and Simple Sign-in (SSI).
- Paid apps and In-App Purchasing (IAP) have been suspended for apps in Poland and
  Sweden on specific Fire TV devices.
- Amazon Fling SDK will reach its end of standard support on March 5, 2026. To provide
  a screen sharing option for your customers, we recommend that you implement Matter
  Casting and resubmit before the Fling SDK is no longer supported.
- Amazon Developer Huddle is free. We only ask that members respond to the surveys
  or invitations to participate in interviews we send in a timely manner.
- Developers who earned less than 1 million USD in revenue in the Amazon Appstore
  across all geographies during the prior calendar year are eligible for the Small
  Business Accelerator Program.
- You will not receive AWS credits based on revenue earned from the Amazon Appstore
  on Windows 11 devices.
- The eligibility threshold of 1 million USD includes total annual revenue across
  all geographies and currencies.
- AWS credits are automatically applied to your AWS account and can be used for all
  the AWS services and products you use each month.
- Create price drops for your app and in-app items to create an incentive for your
  customers to purchase.
- Create retention offers for your app subscriptions to create an incentive for customers
  who are canceling to keep their subscriptions.
- You must comply with the Trademark Guidelines in your use of those trademarks, logos,
  badges, and trade dress.
- No Royalty is payable for Apps with a List Price of $0.00.
- Royalties for certain In-App Products are subject to additional restrictions in
  the In-App Products Schedule.
- You must comply with the Alexa Connect Kit Program Requirements.
- We may place limits on the use of certain ACK Materials.
- You may only use Sync to store data related to game play and game progress.
- You must ensure that data stored by your Apps using Sync does not include any name,
  password, other login information, or personally identifiable information or personal
  data of any end user.
- All sections of this Schedule will survive any termination of the Agreement.
- You will be solely responsible for, and bear all risk and liability for, Music Products.
- Any end user’s use of the Amazon Music Service will be subject to the terms and
  conditions we establish for end users from time to time.
- Amazon devices support a variety of engagement and monetization tools, making it
  easy to track usage and ROI.
- Remove uses-amzn-sdk from app manifest
- 适用于Fire TV和Fire平板电脑的亚马逊应用商店让您接触全球各地的客户
- Fire OS是亚马逊Fire TV和平板电脑设备上运行的操作系统
- Amazon Appstore Easy Port is currently in developer preview.
- Easy Port currently supports porting for Google Play Billing Library.
- App must not be already integrated with Amazon In-App Purchasing (IAP) APIs.
- The Appstore Billing Compatibility SDK supports consumable, entitlement, and subscription
  in-app purchases (IAP).
- The SDK is compatible with Google Play Billing Library versions 4.0, 5.0, 6.0, and
  7.0.
- Promotions aren't supported in the Appstore Billing Compatibility SDK.
- The Appstore Billing Compatibility SDK also contains the APIs provided by the Appstore
  SDK.
- Limit the number of SKUs to 100 in a queryPurchasesAsync() call.
- Use a JSON parser class for reading the JSON responses from the RVS server.
- The current purchases.subscriptionsv2.get version number is '1.0'.
- Amazon recommends calling RVS from a secure server because it hosts the shared secret.
- Don't call RVS from your app.
- This page describes RVS for the Appstore Billing Compatibility SDK.
- A3L SDKs are app store independent abstraction libraries.
- The SDKs can reduce the effort it takes to port and maintain your code.
- A3L Authentication is independent of Login with Amazon (LWA).
- Default solution for devices with Google Play services is Google Sign-In. Devices
  without Google Play services default to AppAuth.
- If you didn't request a particular scope, or if the user's profile doesn't include
  the requested information, the associated profile field will be null.
- The FOSAccountCredential object supports only Fire OS devices. For Google devices,
  use a GoogleAccountCredential object.
- A3L Authentication uses Androidx Security Crypto library internally for a more secure
  way of storing the necessary data. The minimum requirement for the library is API
  Level 21.
- Devices without Google Play services take A3LLastLocationRequest as a no-op. On
  these devices, the getLastLocation() method ignores the A3LLastLocationRequest object.
- Request only necessary permissions for location.
- On Android 12 and higher, user can choose to allow only access to coarse location.
- The A3L Messaging SDK has a dependency on Firebase Cloud Messaging (FCM) for Android
  devices, and Amazon Device Messaging (ADM) for Fire OS devices.
- Uses Firebase Cloud Messaging and Amazon Device Messaging for message delivery.
- Register your security profile for Topic Based Messaging through ADM.
- The sample app requires server-side credentials for push notifications.
- Device-side credentials are also required for cloud messaging to work.
- The recommended guidance provided via this workflow is subject to change.
- Guidance is categorized as Compatible, Partially Compatible and Currently Incompatible
  against Amazon Appstore SDK's.
- Fire tablets allow for rotation of the display.
- Your app needs to account for changes in device orientation.
- Some intents in combination with certain field values require permissions that are
  not available on Kindle Fire tablets.
- Some intents do not generate a system error but do not carry out the expected action.
- Kindle Fire (1st Generation) does not support certain intents.
- Currently, only supported on the Fire HD 10 (2021), and Fire HD 10 Plus (2021) tablets.
- This value defaults to “true” in Fire OS 7 (API 28) or higher, unless it has been
  purposely disabled.
- 创建一个免费的开发者账户，并将您的应用分发给全球受众。
- Fire OS is a fork of Android, so applications that run on Android are likely to
  run on Amazon devices.
- Appstore SDK supports in-app purchasing, digital rights management, and simple login.
- Login with Amazon is based on OAuth 2.0.
- 符合小企业加速器计划资格条件的开发者包括：上一个日历年中在亚马逊应用商店所有各个区域市场总收入低于100万美元的开发者，以及新入驻亚马逊应用商店的开发者。
- 符合资格条件的开发者包括：上一个日历年中在亚马逊应用商店所有各个区域市场总收入低于100万美元的开发者，以及新入驻亚马逊应用商店的开发者。
- AWS促销积分将在下个月的第15天发放。
- 如果某月在某一市场赚取的收入低于10美元，就没有资格获得相应的AWS促销积分。
- Amazon Developer Huddle is currently an invite only community.
- 利用和Amazon.com一样的身份验证（基于OAuth 2.0协议）来保护客户信息的安全
- Enable cash-preferring customers to add to their Amazon Balance in-store via Amazon
  Cash
- Activate physical stock of Amazon Gift Cards in bulk on demand eliminating the need
  to hold inventory of ‘live’ cards
- アカウントを作成して、今すぐ開発を始めよう
- Purchase receipts generated from Live App Testing IAP orders can be verified using
  Receipt Verification Service.
- App Testing Service (ATS) is deprecated.
- Live Device Interaction is available to select partners only.
- You can submit up to eight test runs per week. The weekly limit resets every Monday.
- Data contained in this tab can help you with analysis and troubleshooting.
- Live Device Interaction for Android 14 TV devices is available to select partners
  only.
- Make sure to click Get Started from the Android 14 TV devices section.
- There is currently no fee to use available Appstore Quality Central features.
- The Live Device Interaction feature is currently available as a developer preview.
- You can choose up to 50 testers to access DevTest for IAP on your app.
- You can upload a maximum of three certificates to register for DevTest.
- IAP testing with DevTest is not available for the India marketplace at this time.
- You can manage up to 50 testers per app.
- DevTest for IAP is free of charge.
- You must set up access and obtain an OAuth session token, which you'll include in
  the HTTP header of each API request.
- You can add up to a maximum of 300 tester groups and up to 1500 total testers.
- Testers receive notifications to perform app testing through an email invitation
  and a push notification to their device.
- If the test app contains any In-App Purchasing (IAP) items, the cost of those items
  is reduced to zero cost to the tester at the time of the transaction.
- Tests that have ended appear on the Live App Testing (LAT) dashboard under the Past
  Tests section.
- You cannot add accelerated subscriptions and keep other old subscriptions testing-enabled.
  For that reason, if you enable accelerated subscriptions, all old subscription testing
  is canceled.
- Purchase receipts generated from accelerated subscription IAP orders can be verified
  using Receipt Verification Service.
- Accelerated subscription is canceled after four renewals to avoid infinite renewals.
- Free Trial subscription is renewed in five minutes. The subscription is renewed
  only once.
- In-app purchases are free in Live App Testing.
- Items submitted only to LAT are labeled as TEST.
- Live App Testing allows you to quickly distribute your apps in the Amazon Appstore
  to a pre-defined set of testers before you go live.
- The system displays the list price to end users, which includes any VAT or similar
  taxes.
- Apps offering 'loot boxes' must disclose the odds of receiving each type of item.
- Maintain a cohesive look with Amazon, the parts of your app's UI that deal with
  IAP should use the same color palette and styles as the Amazon Appstore.
- Amazon IAP solutions require implementation of either Appstore SDK IAP or Appstore
  Billing Compatibility SDK.
- IAP must use Amazon's In-App Purchasing solutions for all eligible purchases.
- IAP v2.0 is on a deprecation path and not recommended for use.
- The 'Shared Secret' pins an IAP transaction to a particular vendor and validates
  that, as a developer, you have the right to validate the receipt for the transaction.
- CSV file must use UTF-8 encoding, to support localized strings.
- 'Warning: IAP Batch Submission does not support Pingyin.'
- The system provides a CSV template file that contains several example entries.
- Expect a delay before the total IAP count gets updated after import.
- Supports batch submission of Consumables and Entitlements using a CSV file.
- The Amazon Appstore will not test your app until both the app and the in-app items
  have been submitted.
- Promotional pricing cannot be combined with any other price discount.
- Promotional pricing is available worldwide except the IN marketplace.
- Dates use the UTC time zone.
- When submitting your actual app to the Amazon Appstore, an Amazon signature will
  be applied to your app.
- Implements methods for retrieving information, making purchases, and notifying fulfillment.
- Amazon strongly recommends that you verify your receipt's cancelDate in a RVS response
  to prevent refund fraud.
- Must call getPurchaseUpdates for app to sync purchases.
- Call getProductData to validate SKUs.
- 'The Pending Purchase feature is only available in the following marketplaces: amazon.com,
  amazon.ca, amazon.co.uk and amazon.de.'
- Subscriptions IAPs don't support the pending state.
- R8 is now compatible with IAP, so you no longer need to disable R8.
- IAP is compatible with Android Gradle plugin version 3.6.0 or higher.
- Use this guide to migrate your app from Google Play Billing to the Appstore SDK
  In-App Purchasing (IAP) API.
- Integrating the Appstore SDK in an app that uses the Cloudside VSK integration may
  impact voice functionality.
- The Developer Console no longer displays the option to apply Amazon DRM.
- Quick Subscribe is supported on Fire devices running Fire OS version 5 and above,
  and on your app's retail web page.
- 'Testing Quick Subscribe through LAT isn''t supported in the following cases: Using
  the App Only option on the website when you choose a specific device to deliver
  to, Using the App Only option on a device.'
- Turn off accelerated subscriptions while testing Quick Subscribe.
- Quick Subscribe is available to select partners only.
- Don't offer any subscriptions that are exclusively available to purchase through
  Quick Subscribe.
- To properly implement Quick Subscribe, it's mandatory to send a fulfillment result
  to Amazon.
- One-click account information sharing allows customers to share their Amazon account
  information with your app.
- Make sure to attach the correct security profile to your app.
- Receipt status should be `FULFILLED` after successful purchase.
- Receipt status should not be `FULFILLED` before the customer completes the sign-in
  flow.
- At this time, Quick Subscribe is available to select partners only.
- Quick Subscribe doesn't support 60-day free trials.
- Tiered subscriptions is available to select partners only.
- You must use the Developer Console to specify the period duration and pricing options.
- At this time, tiered subscriptions is available to select partners only.
- You can use only term SKUs in the modifySubscription() method.
- Promotions field is null if there is no promotion associated with the receipt.
- For RVS Cloud Sandbox, any non-empty string can be used as the shared secret.
- RVS Cloud Sandbox allows you to verify the receipts generated by App Tester but
  doesn't support every production scenario.
- Do not call the RVS service from your app.
- RVS Cloud Sandbox generates the termSku in its JSON response by appending _term
  to the subscription's parent or base SKU.
- Real-Time Notifications is designed to be a supplemental notification system in
  addition to RVS.
- Ensure you have a secure back-end server that meets the requirements for receiving
  RTN responses.
- You must validate the Amazon signature to verify the authenticity of the message.
- Generally, each Real-Time Notification is delivered to each specified endpoint once.
- App Tester does not support the Appstore Billing Compatibility SDK.
- Amazon App Tester is required to test the DRM functionality in your app.
- Users can't make additional in-app purchases until all previous purchases are marked
  as fulfilled or unavailable by the notifyFulfillment() call.
- App Tester tool is used to unit test your app before submission.
- Pending Purchases is only supported for entitlement and consumable in-app purchases.
- Pending Purchases is not available for subscriptions.
- Ensure to send the tester invitation to the Amazon Family parent account that is
  registered to your Fire tablet.
- Avoid blocking the UI from loading
- 'Important: To handle purchases, make sure to follow the steps listed in Integrate
  the IAP API with your app.'
- Monitor trends of the canceled receipts by creating a process to call the RVS within
  72 hours for each active receipt.
- Keep the rate of the polling below 10 Transactions Per Second (TPS) to avoid request
  throttling.
- Continuous polling of RVS for canceled receipts is not recommended because canceled
  receipts cannot be revived.
- You must register your observer prior to using this class
- Implement getPurchaseUpdates in the onStart or onResume method of the activity
- IAP v1.0 is now deprecated and has been replaced by IAP v2.0.
- This call is immutable.
- If you do not call `notifyFulfillment()` with the `FULFILLED` status after the item
  is fulfilled, the delivery remains pending.
- If your app calls the IAP API when the user is not authenticated with Amazon, the
  Amazon Services library will authenticate the user.
- Implement getPurchaseUpdates() in the onStart() or onResume() method of the activity
- Responses can come at any time; the web app could shut down prior to a receipt being
  delivered.
errors:
- 'Developer Error: Ensure correct implementation.'
- 'Error: General error response.'
- 'BillingResponseCode.ERROR: Handle the error response.'
- 'BillingResponseCode.DEVELOPER_ERROR: Handle the developer error response.'
- 'FEATURE_NOT_SUPPORTED: Multiple products in a single purchase'
- 'DEVELOPER_ERROR: Handle developer error response'
- 'ERROR: Handle error response'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Backup not allowed: Ensure Backup & Restore is ON.'
- 'Transport rejected: Check throttling limits.'
- 'unable to connect to <ipaddress>:<port>: Operation timed out'
- 'error: device offline'
- The user must be able to interact with the app's UI and features without any force
  closes.
- The user must be able to interact with the app's UI and features without any hard
  locks.
- The submitted APK does not appear to be zip-aligned. Please zip-align your APK and
  resubmit your application.
- '404 Not Found: Check the endpoint path'
- '500 Internal Server Error: Retry the request after some time'
- 'DEVICE_NOT_FOUND: Ensure the device ID is correct'
- 'INVALID_REQUEST: Check the request parameters'
- 'java.lang.SecurityException: Writable dex file is not allowed.'
- 'java.lang.IllegalStateException: Text provided for custom toast, remove previous
  setView() calls if you want a text toast instead.'
- 'java.lang.SecurityException: Permission Denial: startForeground from pid=1824,
  uid=10479 requires android.permission.FOREGROUND_SERVICE.'
- 'Device ID not found: Ensure device is connected and not in sleep mode.'
- 'InvalidButtonPress: Button not recognized or unsupported action'
- 'PlaybackError: Media playback failed due to unsupported format or state'
- App may be rejected if new version breaks voice scrolling experience.
- 'Focused Element Gets Reset: Ensure the focused element does not change when an
  overlay appears.'
- 'Screen Refreshes Make Navigation Inconsistent: Avoid screen refreshes during voice
  command responses.'
- 'RuntimeException: Ensure all required data is present and valid'
- 'I don''t see the `onTune()` callback being triggered when focusing on my channel
  card: Verify the input ID of that channel.'
- 'I can see `onTune()` being called, but the playback preview doesn''t start: Check
  if your player is correctly implemented for playing the feed.'
- 'After enabling parental controls (PCON), I see the preview playback still playing
  in the browse section: Verify you are implementing the Parental Control code correctly
  in your `TvInputService`.'
- Ensure views are tagged as important for accessibility.
- 'Uncaught WebAppBridgeError: Invalid use of IAP, calling page must be fully secure.'
- '400 Bad Request: Check your catalog file format or fields.'
- '404 Not Found: Ensure the catalog file exists in the specified S3 bucket.'
- '429 Too Many Requests: Reduce the frequency of uploads.'
- Aspect Compilation Warnings
- 'AUTH_TOKEN_VERIFICATION_FAILURE: Ensure the public key matches the one in the Developer
  Console.'
- '200: The purchase is valid.'
- '400: The purchase token or product ID is invalid.'
- '401: The developer secret is invalid or doesn''t match the given purchase token.'
- '404: The package name is invalid or doesn''t match the given purchase token.'
- '410: The transaction represented by this receiptId is no longer valid.'
- '429: The request was throttled.'
- '500: There was an Internal Server Error.'
- '400: The purchase token is invalid.'
- '400: Invalid purchase token or productId'
- '401: Invalid developerSecret'
- '404: Invalid packageName'
- '500: Internal Server Error'
- 'SESSION_EXPIRED: Try refreshing your browser to resolve the issue.'
- '400 Bad Request: Indicates that one or more properties in the request body aren''t
  valid or are absent.'
- '404 Not Found: Requested resource not found.'
- 'Invalid SKU: Check if the SKU is correct.'
- 'Unauthorized: Ensure you have the correct permissions.'
- 'unknown error: The app failed the Digital Rights Management (DRM) check against
  the Amazon client.'
- The system validates the CSV file for any formatting errors.
- The system identifies any post-submission errors, such as a duplicate Product ID.
- 'Error: IAP is getting published. You can update once it is Live'
- 'MISSING_IAP_ITEMS: Update your IAP items with all required information'
- 'UX_DESIGN_ISSUE: Update your application to remove all interstitial dialog boxes
  from the IAP workflow'
- 'IAP_WORKFLOW_ISSUE: Verify that the SKUs that your application is sending matches
  the SKUs that you included in your app submission'
- 'UNAVAILABLE: Notify Amazon that item can''t be fulfilled.'
- 'FAILED: Indicates an issue on the Appstore side.'
- 'NOT_SUPPORTED: Device doesn''t support IAP functionality.'
- 'HTTP 400: The transaction represented by this `receiptId` is invalid, or no transaction
  was found for this `receiptId`.'
- 'HTTP 410: The transaction represented by this `receiptId` is no longer valid.'
- 'HTTP 429: The request was throttled. Reduce your calling rate and retry after some
  time.'
- 'invalid_request: The request is missing a required parameter, has an invalid value,
  or is otherwise improperly formed.'
- 'invalid_client: The client authentication failed.'
- 'invalid_grant: The authorization code is invalid, expired, revoked, or was issued
  to a different client_id.'
- 'unauthorized_client: The client is not authorized to use authorization codes.'
- 'unsupported_grant_type: The client specified the wrong token_type.'
- 'ServerError: The server encountered a runtime error.'
- 'UNAVAILABLE: Customer has an existing subscription.'
- 'INVALID_SKU: Invalid SKU, should have already disabled the buy button.'
- 'FAILED: Remove purchase request from local storage.'
- 'cancelReason Code 4: The subscription is replaced with a new subscription.'
- 'HTTP 200: Success'
- 'HTTP 400: Invalid transaction or no transaction found'
- 'HTTP 410: Transaction no longer valid'
- 'HTTP 429: Request throttled'
- 'HTTP 496: Invalid shared secret'
- 'HTTP 497: Invalid user ID'
- 'HTTP 500: Internal Server Error'
- '400: Invalid receiptID'
- '496: Invalid developerSecret'
- '497: Invalid userId'
- 'INVALID_INPUT: Check the input parameters'
- 'SUCCESSFUL: Operation was successful'
- 'FAILED: Operation failed'
- '400 Bad Request: Check the request parameters for correctness'
- '401 Unauthorized: Ensure valid authentication credentials'
- '404 Not Found: Verify the endpoint URL'
- 'INVALID_SKU: Please make sure of SKUS configuration.'
- 'FAILED: Purchase request is interrupted. Please try again later.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AmazonIapV2
  - onSdkAvailable
  - onGetUserIdResponse
  - onItemDataResponse
  - onPurchaseResponse
  - onPurchaseUpdatesResponse
client:
  base_url: https://ds6yc8t7pnx74.cloudfront.net
  headers:
    Accept: application/json
source_metadata: null
