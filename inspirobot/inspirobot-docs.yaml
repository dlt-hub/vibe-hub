resources:
- name: inspirational_quote
  endpoint:
    path: /?generate=true
    method: GET
    params:
      api_key: your_api_key
- name: news
  endpoint:
    path: /v1/articles
    method: GET
    data_selector: articles
- name: domains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: active_buses
  endpoint:
    path: /active_buses
    method: GET
    data_selector: buses
- name: user
  endpoint:
    path: /users/{username}
    method: GET
    data_selector: data
- name: bus_locations
  endpoint:
    path: /bus/locations
    method: GET
    data_selector: locations
- name: bus_schedule
  endpoint:
    path: /bus/schedule
    method: GET
    data_selector: schedules
- name: search_news
  endpoint:
    path: /search-news
    method: GET
    data_selector: news
    params:
      language: en
      number: 10
- name: users
  endpoint:
    path: /users/octocat
    method: GET
    data_selector: data
- name: capture_screenshot
  endpoint:
    path: /capture
    method: GET
    data_selector: screenshot_url
    params:
      url: url
      format: png
      viewport: 1920x1080
- name: video_upload
  endpoint:
    path: /upload
    method: POST
    data_selector: result
- name: search-news
  endpoint:
    path: /search-news
    method: GET
    params:
      language: en
      number: 10
- name: screenshot_capture
  endpoint:
    path: /capture
    method: GET
    params:
      url: url
      format: png
      viewport: 1920x1080
- name: game
  endpoint:
    path: /games
    method: GET
- name: league
  endpoint:
    path: /leagues
    method: GET
- name: team
  endpoint:
    path: /teams
    method: GET
- name: player
  endpoint:
    path: /players
    method: GET
- name: top_headlines
  endpoint:
    path: /v1/top-headlines
    method: GET
    data_selector: articles
- name: everything
  endpoint:
    path: /v1/everything
    method: GET
    data_selector: articles
- name: nonprofit_check
  endpoint:
    path: /v1/nonprofit-check-plus
    method: GET
    data_selector: data
    params:
      ein: ein
- name: consult
  endpoint:
    path: /api/consult
    method: GET
    params: {}
- name: bin_lookup
  endpoint:
    path: /api/{binNumber}
    method: GET
    data_selector: data
- name: game
  endpoint:
    path: /fantasy-sports/game
    method: GET
    data_selector: records
    params: {}
- name: league
  endpoint:
    path: /fantasy-sports/league
    method: GET
    data_selector: records
    params: {}
- name: team
  endpoint:
    path: /fantasy-sports/team
    method: GET
    data_selector: records
    params: {}
- name: player
  endpoint:
    path: /fantasy-sports/player
    method: GET
    data_selector: records
    params: {}
- name: parse_user_agent
  endpoint:
    path: /api/v1/parse
    method: POST
    data_selector: data
- name: nonprofit_verification
  endpoint:
    path: /v1/nonprofit-check-plus
    method: GET
    data_selector: data
    params:
      ein: ein
- name: extract_text
  endpoint:
    path: /api/extract
    method: POST
    data_selector: data
- name: news
  endpoint:
    path: /news
    method: GET
    data_selector: data
    params:
      category: technology
      limit: 10
- name: consult
  endpoint:
    path: /api/consult
    method: GET
- name: IIN Lookup
  endpoint:
    path: /api/{binNumber}
    method: GET
- name: transform
  endpoint:
    path: /transform
    method: POST
    data_selector: result
    params: {}
- name: parse
  endpoint:
    path: /api/v1/parse
    method: POST
    data_selector: data
- name: data_extraction
  endpoint:
    path: /api/extract
    method: POST
    data_selector: data
    params: {}
- name: extract_text
  endpoint:
    path: /api/extract
    method: POST
    data_selector: data
- name: games_discover
  endpoint:
    path: /games/discover
    method: GET
    params:
      limit: 20
- name: news
  endpoint:
    path: /news
    method: GET
    data_selector: data
    params:
      category: technology
      limit: 10
- name: user
  endpoint:
    path: /users/<username>
    method: GET
    data_selector: ''
- name: transform_image
  endpoint:
    path: /transform
    method: POST
    data_selector: transformedUrl
- name: market_board_data
  endpoint:
    path: /WorldName/ItemID
    method: GET
    data_selector: data
- name: data_extraction
  endpoint:
    path: /api/extract
    method: POST
    data_selector: data
    params: {}
- name: player_profile
  endpoint:
    path: /v1/profile/{platform}/{epic-nickname}
    method: GET
- name: games_discover
  endpoint:
    path: /games/discover
    method: GET
    data_selector: games
    params:
      limit: 20
- name: PlayerSummaries
  endpoint:
    path: /ISteamUser/GetPlayerSummaries/v0002/
    method: GET
    params:
      key: YOUR_STEAM_API_KEY
      steamids: TARGET_STEAM_ID
- name: user
  endpoint:
    path: /users/<username>
    method: GET
    data_selector: response.body
    params: {}
- name: trivia_questions
  endpoint:
    path: /api.php
    method: GET
    data_selector: results
    params:
      amount: '10'
- name: market_data
  endpoint:
    path: /api/WorldName/ItemID
    method: GET
- name: character
  endpoint:
    path: /character/730968
    method: GET
    data_selector: data
- name: profile
  endpoint:
    path: /v1/profile/{platform}/{epic-nickname}
    method: GET
- name: player
  endpoint:
    path: /api/player/minecraft/{playerName}
    method: GET
- name: GetPlayerSummaries
  endpoint:
    path: /ISteamUser/GetPlayerSummaries/v0002/
    method: GET
    params:
      key: YOUR_STEAM_API_KEY
      steamids: TARGET_STEAM_ID
- name: characters_profile
  endpoint:
    path: /v1/characters/profile
    method: GET
- name: trivia_questions
  endpoint:
    path: /api.php
    method: GET
    data_selector: results
    params:
      amount: '10'
- name: player
  endpoint:
    path: /shards/steam/players
    method: GET
    data_selector: data
    params:
      filter[playerNames]: sample_player_name
- name: character
  endpoint:
    path: /character/730968
    method: GET
    data_selector: data
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data
    params:
      engine: google
      q: chatgpt
- name: player
  endpoint:
    path: /api/player/minecraft/{playerName}
    method: GET
    data_selector: data
- name: characters_profile
  endpoint:
    path: /v1/characters/profile
    method: GET
    data_selector: data
    params:
      region: us
      realm: illidan
      name: yourCharacterName
- name: user_licenses
  endpoint:
    path: /wp-json/lmfwc/v2/licenses/customer/user-licenses/
    method: GET
    data_selector: response.body
    params:
      consumer_key: '{CONSUMER_KEY}'
      consumer_secret: '{CONSUMER_SECRET}'
      proxy_format: '{HOST:PORT@USERNAME:PASSWORD}'
- name: player
  endpoint:
    path: /shards/steam/players
    method: GET
    data_selector: data
    params:
      filter[playerNames]: sample_player_name
- name: numlookup
  endpoint:
    path: /api/numlookup/:number
    method: GET
    data_selector: data
- name: carriers
  endpoint:
    path: /api/carriers/:country
    method: GET
    data_selector: data
- name: sunrise_sunset_data
  endpoint:
    path: /json
    method: GET
    data_selector: results
    params:
      lat: '38.907192'
      lng: '-77.036873'
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data
- name: packages
  endpoint:
    path: /packages/{package_manager}/{package_name}
    method: GET
- name: latest_release
  endpoint:
    path: /{package_manager}/{package_name}/versions/latest
    method: GET
- name: search
  endpoint:
    path: /search
    method: POST
- name: user_licenses
  endpoint:
    path: /wp-json/lmfwc/v2/licenses/customer/user-licenses/
    method: GET
    params:
      consumer_key: '{CONSUMER_KEY}'
      consumer_secret: '{CONSUMER_SECRET}'
      page: '{PAGE_NO}'
      proxy_format: '{HOST:PORT@USERNAME:PASSWORD}'
- name: datasets
  endpoint:
    path: /datasets/metadata
    method: GET
    params:
      api_key: <YOUR_API_KEY>
- name: datasets
  endpoint:
    path: /api/v3/datasets/WIKI/{stockSymbol}.json
    method: GET
    data_selector: data
- name: numlookup
  endpoint:
    path: /api/numlookup/:number
    method: GET
    data_selector: number
- name: carriers
  endpoint:
    path: /api/carriers/:country
    method: GET
    data_selector: carriers
- name: Active Marijuana Licenses
  endpoint:
    path: /resource/45a87e14-4a9e-4c83-a04a-4c6c3e67a3b7.json
    method: GET
    data_selector: records
    params: {}
- name: sunrise_sunset
  endpoint:
    path: /json
    method: GET
    data_selector: results
    params:
      lat: '38.907192'
      lng: '-77.036873'
- name: package
  endpoint:
    path: /packages/{package_manager}/{package_name}
    method: GET
    data_selector: data
- name: latest_release
  endpoint:
    path: /{package_manager}/{package_name}/versions/latest
    method: GET
    data_selector: data
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: data
- name: data
  endpoint:
    path: /data
    method: GET
    data_selector: data
    params: {}
- name: query
  endpoint:
    path: /data/query
    method: GET
    data_selector: data
    params: {}
- name: datasets
  endpoint:
    path: /metadata
    method: GET
    data_selector: data
- name: dataset
  endpoint:
    path: /api/3/action/package_show
    method: GET
    data_selector: result
- name: resource
  endpoint:
    path: /api/3/action/resource_show
    method: GET
    data_selector: result
- name: organization
  endpoint:
    path: /api/3/action/organization_list
    method: GET
    data_selector: result
- name: user_account
  endpoint:
    path: /api/3/action/user_list
    method: GET
    data_selector: result
- name: datasets
  endpoint:
    path: /api/v3/datasets/WIKI/{stockSymbol}.json
    method: GET
    data_selector: data
- name: active_marijuana_licenses
  endpoint:
    path: /resource/45a87e14-4a9e-4c83-a04a-4c6c3e67a3b7.json
    method: GET
    data_selector: records
    params:
      query: $select=name
- name: geolocation
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: lookup
  endpoint:
    path: /api/lookup/{ip}
    method: GET
- name: data
  endpoint:
    path: /data
    method: GET
    data_selector: records
    params: {}
- name: query
  endpoint:
    path: /data/query
    method: GET
    data_selector: records
    params: {}
- name: cities
  endpoint:
    path: /cities
    method: GET
    data_selector: data
    params:
      countryIds: US
- name: geolocation
  endpoint:
    path: /{ip_address}
    method: GET
    data_selector: data
- name: dataset
  endpoint:
    path: /api/3/action/package_show
    method: GET
    data_selector: result
    params:
      id: <dataset-id>
- name: resource
  endpoint:
    path: /api/3/action/resource_show
    method: GET
    data_selector: result
    params:
      id: <resource-id>
- name: organization
  endpoint:
    path: /api/3/action/organization_list
    method: GET
    data_selector: result
    params: {}
- name: user_account
  endpoint:
    path: /api/3/action/user_list
    method: GET
    data_selector: result
    params: {}
- name: geolocation
  endpoint:
    path: /
    method: GET
    data_selector: ''
- name: ip_address
  endpoint:
    path: /{ipAddress}
    method: GET
    data_selector: data
- name: lookup
  endpoint:
    path: /api/lookup/{ip}
    method: GET
    data_selector: data
    params: {}
- name: ip_detection
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      key: '{YOUR_API_KEY}'
      ip: 8.8.8.8
      package: PX1
- name: cities
  endpoint:
    path: /cities
    method: GET
    data_selector: data
    params:
      countryIds: US
- name: geocode
  endpoint:
    path: ''
    method: GET
    data_selector: response.GeoObjectCollection.featureMember
    params:
      format: json
- name: geolocation
  endpoint:
    path: /{ip_address}
    method: GET
    data_selector: data
    params:
      access_key: YOUR_ACCESS_KEY
- name: ip_lookup
  endpoint:
    path: /{ipAddress}
    method: GET
    data_selector: data
- name: geocoding
  endpoint:
    path: /geocoding/v1/address
    method: GET
    params:
      key: YOUR_KEY_HERE
      location: Washington,DC
- name: postcode
  endpoint:
    path: /postcode/
    method: GET
    data_selector: data
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: data
- name: ip_detection
  endpoint:
    path: /?key={YOUR_API_KEY}&ip=8.8.8.8&package=PX1
    method: GET
- name: geocode
  endpoint:
    path: ?format=json&geocode={address}
    method: GET
    data_selector: response.GeoObjectCollection.featureMember
    params: {}
- name: jobs
  endpoint:
    path: /api/v1/jobs
    method: GET
- name: geocoding
  endpoint:
    path: /geocoding/v1/address
    method: GET
    params:
      key: YOUR_KEY_HERE
- name: jobs
  endpoint:
    path: /job_feed.xml
    method: GET
    data_selector: data
- name: postcode_data
  endpoint:
    path: /
    method: GET
    data_selector: data
- name: job_listings
  endpoint:
    path: /api/YOUR_API_KEY/search
    method: GET
    data_selector: data
    params: {}
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    params:
      keyword: developer
      location: remote
- name: jobs
  endpoint:
    path: /
    method: POST
    data_selector: data.jobs
- name: jobs
  endpoint:
    path: /api/v1/jobs
    method: GET
- name: jobs
  endpoint:
    path: /api/jobs/
    method: GET
    data_selector: data
- name: job_feed
  endpoint:
    path: /job_feed.xml
    method: GET
    data_selector: data
- name: jobs
  endpoint:
    path: /v1/jobs
    method: GET
    params:
      search: query
- name: job_listings
  endpoint:
    path: /YOUR_API_KEY/search
    method: GET
    data_selector: data
- name: jobs
  endpoint:
    path: /
    method: POST
    data_selector: data.jobs
- name: job_search
  endpoint:
    path: /api/search.php
    method: GET
    data_selector: null
    params:
      k: <KEYWORD>
      l: <LOCATION>
      p: <PAGE>
      ip: <IP_ADDRESS>
      co: <CONFIDENCE>
      format: <FORMAT>
- name: company_search
  endpoint:
    path: /api/companies.php
    method: GET
    data_selector: null
    params:
      company: <COMPANY_NAME>
      format: <FORMAT>
- name: salary_estimation
  endpoint:
    path: /api/salary.php
    method: GET
    data_selector: null
    params:
      title: <JOB_TITLE>
      location: <LOCATION>
      format: <FORMAT>
- name: jobs
  endpoint:
    path: /api/jobs/
    method: GET
    data_selector: data
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: data
    params: {}
- name: jobs
  endpoint:
    path: /v1/jobs
    method: GET
    data_selector: data
- name: job_search
  endpoint:
    path: /api/search.php
    method: GET
    data_selector: results
    params:
      incremental: page
- name: company_search
  endpoint:
    path: /api/companies.php
    method: GET
    data_selector: results
    params: {}
- name: salary_estimation
  endpoint:
    path: /api/salary.php
    method: GET
    data_selector: results
    params: {}
- name: genomic_sequences
  endpoint:
    path: /api/sequence
    method: GET
    data_selector: data
- name: healthcare_providers
  endpoint:
    path: /healthcare_providers
    method: GET
    data_selector: data
    params: {}
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: data
    params: {}
- name: spreadsheet_data
  endpoint:
    path: /v1/YOUR_API_ID/YOUR_SHEET_NAME
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /api/v1/products.json
    method: GET
    data_selector: data
    params: {}
- name: genomic_sequences
  endpoint:
    path: /api/sequence
    method: GET
    data_selector: data
- name: health_data
  endpoint:
    path: /V1/healthdata
    method: GET
    data_selector: data
- name: medicare_data
  endpoint:
    path: /provider-data/api/your-endpoint-here
    method: GET
    data_selector: data
- name: products
  endpoint:
    path: /api/v1/products.json
    method: GET
    data_selector: ''
- name: package_list
  endpoint:
    path: /api/3/action/package_list
    method: GET
    data_selector: result
    params: {}
- name: healthdata
  endpoint:
    path: /V1/healthdata
    method: GET
    data_selector: ''
- name: medicare_data
  endpoint:
    path: /provider-data/api/your-endpoint-here
    method: GET
    data_selector: data
- name: search_food_item
  endpoint:
    path: /v1_1/search/apple
    method: GET
    data_selector: hits
    params:
      results: 0:20
      fields: item_name,item_id,brand_name,nf_calories,nf_total_fat
- name: retrieve_nutrition_info
  endpoint:
    path: /v1_1/item
    method: GET
    data_selector: ''
    params:
      id: 513fc9cb673c4fbc26004461
- name: package_list
  endpoint:
    path: /api/3/action/package_list
    method: GET
    data_selector: result
    params: {}
- name: food_search
  endpoint:
    path: /fdc/v1/foods/search
    method: GET
    data_selector: data
    params: {}
- name: food_details
  endpoint:
    path: /fdc/v1/foods/{fdcId}/nutrients
    method: GET
    data_selector: data
    params: {}
- name: search_food_item
  endpoint:
    path: /v1_1/search/apple
    method: GET
    data_selector: hits
- name: retrieve_nutrition_information
  endpoint:
    path: /v1_1/item
    method: GET
    data_selector: data
- name: FluTrackersDashboard
  endpoint:
    path: /FluTrackersDashboard.json
    method: GET
    data_selector: data
- name: FluTrackersMap
  endpoint:
    path: /FluTrackersMap.json
    method: GET
    data_selector: data
- name: FluTrackersStats
  endpoint:
    path: /FluTrackersStats.json
    method: GET
    data_selector: data
- name: FluTrackersChart
  endpoint:
    path: /FluTrackersChart.json
    method: GET
    data_selector: data
- name: food_search
  endpoint:
    path: /fdc/v1/foods/search
    method: GET
    data_selector: data
    params:
      api_key: YOUR_API_KEY
      query: chicken
- name: food_details
  endpoint:
    path: /fdc/v1/foods/{fdcId}/nutrients
    method: GET
    data_selector: data
    params:
      api_key: YOUR_API_KEY
      nutrients: '203'
- name: predict
  endpoint:
    path: /v1/predict
    method: POST
    data_selector: result
- name: update
  endpoint:
    path: /v1/update
    method: PUT
    data_selector: result
- name: delete
  endpoint:
    path: /v1/delete
    method: DELETE
    data_selector: result
- name: get
  endpoint:
    path: /v1/get
    method: POST
    data_selector: result
- name: FluTrackersDashboard
  endpoint:
    path: /FluTrackersDashboard.json
    method: GET
    data_selector: data
- name: FluTrackersMap
  endpoint:
    path: /FluTrackersMap.json
    method: GET
    data_selector: data
- name: FluTrackersStats
  endpoint:
    path: /FluTrackersStats.json
    method: GET
    data_selector: data
- name: FluTrackersChart
  endpoint:
    path: /FluTrackersChart.json
    method: GET
    data_selector: data
- name: pubticker
  endpoint:
    path: /pubticker/btcusd
    method: GET
    data_selector: data
- name: createOrder
  endpoint:
    path: /order/new
    method: POST
    data_selector: data
- name: predict
  endpoint:
    path: /v1/predict
    method: POST
- name: update
  endpoint:
    path: /v1/update
    method: PUT
- name: delete
  endpoint:
    path: /v1/delete
    method: DELETE
- name: get
  endpoint:
    path: /v1/get
    method: POST
- name: get_all_traded_assets
  endpoint:
    path: /public/get-all-traded-assets
    method: GET
    data_selector: data
- name: pubticker
  endpoint:
    path: /pubticker/btcusd
    method: GET
    data_selector: data
- name: createOrder
  endpoint:
    path: /order/new
    method: POST
    data_selector: data
- name: market_depth
  endpoint:
    path: /market/depth
    method: GET
    params:
      symbol: btcusdt
      type: step1
- name: traded_assets
  endpoint:
    path: /public/get-all-traded-assets
    method: GET
    data_selector: data
    params: {}
- name: tickers
  endpoint:
    path: /v2/public/tickers
    method: GET
    data_selector: data
    params: {}
- name: market_depth
  endpoint:
    path: /market/depth
    method: GET
    params:
      symbol: btcusdt
      type: step1
- name: tickers
  endpoint:
    path: /v2/public/tickers
    method: GET
    data_selector: data
    params: {}
- name: example
  endpoint:
    path: /api-docs/
    method: GET
- name: cryptocurrency_prices
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      symbol: BTC
      interval: 1h
- name: cryptocurrency_exchange
  endpoint:
    path: /v1/cryptocurrency/exchange
    method: GET
- name: api_docs
  endpoint:
    path: /api-docs/
    method: GET
- name: markets
  endpoint:
    path: /api/markets
    method: GET
- name: cryptocurrency_exchange
  endpoint:
    path: /v1/cryptocurrency/exchange
    method: GET
- name: markets
  endpoint:
    path: /markets
    method: GET
    data_selector: data
- name: markets
  endpoint:
    path: /api/markets
    method: GET
- name: markets
  endpoint:
    path: /markets
    method: GET
    data_selector: data
- name: products
  endpoint:
    path: /v1.2/products
    method: GET
    data_selector: data
- name: price_estimates
  endpoint:
    path: /v1.2/estimates/price
    method: GET
    data_selector: data
- name: routes
  endpoint:
    path: /routes
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /v1.2/products
    method: GET
    params:
      latitude: 37.7752315
      longitude: -122.418075
- name: price_estimates
  endpoint:
    path: /v1.2/estimates/price
    method: GET
    params:
      start_latitude: 37.7752315
      start_longitude: -122.418075
      end_latitude: 37.787654
      end_longitude: -122.4027605
- name: container_details
  endpoint:
    path: /container_details
    method: GET
    data_selector: data
- name: routes
  endpoint:
    path: /routes
    method: GET
    data_selector: info
    params: {}
- name: flights
  endpoint:
    path: /v1/flights
    method: GET
    params:
      access_key: YOUR_ACCESS_KEY
- name: container_details
  endpoint:
    path: /container_details
    method: GET
    data_selector: data
- name: train_schedules
  endpoint:
    path: /api/1/util/snippet/api_info.html
    method: GET
    data_selector: data
- name: states_all
  endpoint:
    path: /states/all
    method: GET
    data_selector: data
- name: flights
  endpoint:
    path: /v1/flights
    method: GET
    params:
      access_key: YOUR_ACCESS_KEY
- name: stationboard
  endpoint:
    path: /v1/stationboard
    method: GET
    params:
      station: Zurich
      limit: 5
- name: public_trains
  endpoint:
    path: /api_info.html?resource_id=a2368cff-1562-4dde-8466-9635ea3a572a
    method: GET
    data_selector: data
- name: states_all
  endpoint:
    path: /api/states/all
    method: GET
    data_selector: data
- name: real_time_data
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: stationboard
  endpoint:
    path: /v1/stationboard
    method: GET
    params:
      station: Zurich
      limit: 5
- name: predictions
  endpoint:
    path: /publicXMLFeed
    method: GET
    data_selector: prediction
    params:
      command: predictions
      a: YOUR_AGENCY_NAME
      r: YOUR_ROUTE_NAME
      s: YOUR_STOP_ID
- name: transport_data
  endpoint:
    path: /pages/opendata/OpenDataApi.html
    method: GET
    data_selector: data
    params: {}
- name: deliveries
  endpoint:
    path: /v1/deliveries/{deliveryId}
    method: GET
- name: predictions
  endpoint:
    path: /
    method: GET
    data_selector: predictions
    params:
      command: predictions
      a: YOUR_AGENCY_NAME
      r: YOUR_ROUTE_NAME
      s: YOUR_STOP_ID
- name: ticker
  endpoint:
    path: /api/v4/ticker/btc_br
    method: GET
    data_selector: tickers
- name: deliveries
  endpoint:
    path: /v1/deliveries/{deliveryId}
    method: GET
- name: ticker_btc_br
  endpoint:
    path: /v4/ticker/btc_br
    method: GET
    data_selector: tickers
- name: address_info
  endpoint:
    path: /address/info
    method: GET
    data_selector: data
- name: subnet_info
  endpoint:
    path: /subnet/info
    method: GET
    data_selector: data
- name: cidr_info
  endpoint:
    path: /cidr/info
    method: GET
    data_selector: data
- name: subnetting
  endpoint:
    path: /subnetting
    method: GET
    data_selector: data
- name: address_info
  endpoint:
    path: /address/info
    method: GET
    data_selector: data
- name: subnet_info
  endpoint:
    path: /subnet/info
    method: GET
    data_selector: data
- name: cidr_info
  endpoint:
    path: /cidr/info
    method: GET
    data_selector: data
- name: subnetting
  endpoint:
    path: /subnetting
    method: GET
    data_selector: data
- name: create_email
  endpoint:
    path: /v1/create
    method: POST
    data_selector: null
    params: {}
- name: get_messages
  endpoint:
    path: /v1/messages
    method: GET
    data_selector: null
    params:
      address: <address>
      source: <source>
- name: get_message_details
  endpoint:
    path: /v1/message/<id>
    method: GET
    data_selector: null
    params:
      source: <source>
- name: delete_message
  endpoint:
    path: /v1/message/<id>
    method: DELETE
    data_selector: null
    params:
      source: <source>
- name: get_attachments
  endpoint:
    path: /v1/attachments/<id>
    method: GET
    data_selector: null
    params:
      source: <source>
- name: create_temporary_email_address
  endpoint:
    path: /v1/create
    method: POST
    data_selector: ''
    params: {}
- name: get_email_messages
  endpoint:
    path: /v1/messages
    method: GET
    data_selector: ''
    params: {}
- name: get_message_details
  endpoint:
    path: /v1/message/<id>
    method: GET
    data_selector: ''
    params: {}
- name: delete_message
  endpoint:
    path: /v1/message/<id>
    method: DELETE
    data_selector: ''
    params: {}
- name: get_email_attachments
  endpoint:
    path: /v1/attachments/<id>
    method: GET
    data_selector: ''
    params: {}
- name: status
  endpoint:
    path: /api/v1/status
    method: GET
    data_selector: status
    params: {}
- name: performance
  endpoint:
    path: /api/v1/performance
    method: GET
    data_selector: performance
    params: {}
- name: uptime
  endpoint:
    path: /api/v1/uptime
    method: GET
    data_selector: uptime
    params: {}
- name: status
  endpoint:
    path: /api/v1/status
    method: GET
    data_selector: data
- name: performance
  endpoint:
    path: /api/v1/performance
    method: GET
    data_selector: data
- name: uptime
  endpoint:
    path: /api/v1/uptime
    method: GET
    data_selector: data
- name: uploadFile
  endpoint:
    path: /uploadFile
    method: POST
    data_selector: data
- name: uploadFile
  endpoint:
    path: /uploadFile
    method: POST
    data_selector: data
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: data
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: result.data
- name: files
  endpoint:
    path: /files/new
    method: POST
    data_selector: data
- name: files
  endpoint:
    path: /files/new
    method: POST
    data_selector: data
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: data
- name: upload_file
  endpoint:
    path: /upload
    method: POST
    data_selector: response.data
- name: pinFileToIPFS
  endpoint:
    path: /pinning/pinFileToIPFS
    method: POST
- name: pinFileToIPFS
  endpoint:
    path: /pinning/pinFileToIPFS
    method: POST
    data_selector: response.data
- name: upload_file
  endpoint:
    path: /
    method: POST
    data_selector: cid
- name: file_upload
  endpoint:
    path: /file/upload
    method: POST
    data_selector: data
- name: file_upload
  endpoint:
    path: /upload
    method: POST
    data_selector: data
- name: upload_image
  endpoint:
    path: /1/upload
    method: POST
- name: image_upload
  endpoint:
    path: /1/upload
    method: POST
    data_selector: data
    params: {}
- name: upload_url
  endpoint:
    path: /upload_url
    method: POST
    data_selector: upload_url
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: files
- name: download_file
  endpoint:
    path: /download/{file_id}
    method: GET
    data_selector: file
- name: upload_url
  endpoint:
    path: /upload_url
    method: POST
    data_selector: upload_url
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: files
- name: download
  endpoint:
    path: /download/{file_id}
    method: GET
    data_selector: file
- name: games
  endpoint:
    path: /v4/games
    method: POST
    data_selector: data
    params: {}
- name: games
  endpoint:
    path: /v4/games
    method: POST
    data_selector: data
    params: {}
- name: animals
  endpoint:
    path: /animals
    method: GET
    data_selector: data
- name: animals
  endpoint:
    path: /animals
    method: GET
    data_selector: data
- name: pets
  endpoint:
    path: /v1/pets
    method: GET
    data_selector: data
- name: pets
  endpoint:
    path: /v1/pets
    method: GET
    data_selector: data
- name: recordings
  endpoint:
    path: /api/2/recordings
    method: GET
    data_selector: recordings
- name: recordings
  endpoint:
    path: /api/2/recordings
    method: GET
    data_selector: recordings
- name: bear_image
  endpoint:
    path: /400/300
    method: GET
- name: bear_image
  endpoint:
    path: /{width}/{height}
    method: GET
    data_selector: image
- name: dog_facts
  endpoint:
    path: /api/facts
    method: GET
    data_selector: facts
- name: dog_facts
  endpoint:
    path: /api/facts
    method: GET
    data_selector: facts
- name: cat
  endpoint:
    path: /cat
    method: GET
- name: cat
  endpoint:
    path: /cat
    method: GET
- name: animals_random
  endpoint:
    path: /animals/rand
    method: GET
    data_selector: data
- name: animals_random
  endpoint:
    path: /animals/rand
    method: GET
    data_selector: data
- name: breeds
  endpoint:
    path: /v1/breeds
    method: GET
    data_selector: data
- name: breeds
  endpoint:
    path: /v1/breeds
    method: GET
    data_selector: data
- name: random_axolotl
  endpoint:
    path: /api/axolotls/random
    method: GET
    data_selector: data
- name: random_axolotl
  endpoint:
    path: /api/axolotls/random
    method: GET
    data_selector: data
- name: locations_nearby
  endpoint:
    path: /locations/nearby
    method: GET
    params:
      lat: '45.5231'
      lon: '-122.6765'
- name: locations_nearby
  endpoint:
    path: /locations/nearby
    method: GET
    params:
      lat: '45.5231'
      lon: '-122.6765'
- name: symptom_checker
  endpoint:
    path: /symptom-checker
    method: POST
    data_selector: response.body
    params: {}
- name: symptom_checker
  endpoint:
    path: /symptom-checker
    method: POST
    data_selector: response
    params: {}
- name: fixtures
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: results
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: predictions
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: fixtures_results_predictions
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: players
  endpoint:
    path: /api/v1/players
    method: GET
    data_selector: data
    params: {}
- name: players
  endpoint:
    path: /api/v1/players
    method: GET
    data_selector: data
- name: odds_history
  endpoint:
    path: /v1/odds/history
    method: GET
    params: {}
- name: odds_history
  endpoint:
    path: /v1/odds/history
    method: GET
    params: {}
- name: sports
  endpoint:
    path: /v1/sports
    method: GET
- name: sports
  endpoint:
    path: /v1/sports
    method: GET
    data_selector: data
- name: match_data
  endpoint:
    path: /api/getmatchdata/byleagueid/1
    method: GET
    data_selector: data
- name: match_data
  endpoint:
    path: /api/getmatchdata/byleagueid/1
    method: GET
    data_selector: ''
- name: activities
  endpoint:
    path: /activities
    method: GET
    data_selector: data
- name: sports_odds
  endpoint:
    path: /v1/sports/odds
    method: GET
- name: sports_odds
  endpoint:
    path: /v1/sports/odds
    method: GET
- name: monetary-account
  endpoint:
    path: /v1/user/{api_key}/monetary-account
    method: GET
    data_selector: data
- name: create-payment
  endpoint:
    path: /v1/user/{user_id}/monetary-account/{monetary_account_id}/payment
    method: POST
    data_selector: data
- name: monetary_account
  endpoint:
    path: /v1/user/{apiKey}/monetary-account
    method: GET
    data_selector: data
- name: payment
  endpoint:
    path: /v1/user/{user_id}/monetary-account/{monetary_account_id}/payment
    method: POST
    data_selector: data
- name: historical_data
  endpoint:
    path: /v1/historic/{symbol}
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /gcb/api/v1/accounts
    method: GET
- name: historical_data
  endpoint:
    path: /v1/historic/{symbol}
    method: GET
    data_selector: data
- name: accounts
  endpoint:
    path: /gcb/api/v1/accounts
    method: GET
- name: VAT Validation
  endpoint:
    path: /validate
    method: GET
    data_selector: data
    params: {}
- name: vat_validation
  endpoint:
    path: /validate
    method: GET
    data_selector: data
- name: ifsc
  endpoint:
    path: /ifsc/BANKBRANCHID
    method: GET
    data_selector: response.body
- name: ifsc
  endpoint:
    path: /ifsc/BANKBRANCHID
    method: GET
- name: eod
  endpoint:
    path: /eod
    method: GET
    params:
      access_key: YOUR_ACCESS_KEY
      symbols: AAPL
- name: eod
  endpoint:
    path: /eod
    method: GET
    data_selector: data
    params:
      access_key: YOUR_ACCESS_KEY
      symbols: AAPL
- name: budgets
  endpoint:
    path: /v1/budgets/{budget_id}
    method: GET
- name: portfolio
  endpoint:
    path: /api/portfolio
    method: POST
    data_selector: data
- name: budgets
  endpoint:
    path: /v1/budgets/{budget_id}
    method: GET
- name: financialdata
  endpoint:
    path: /financialdata
    method: GET
- name: portfolio
  endpoint:
    path: /api/portfolio
    method: POST
    data_selector: data
- name: financialdata
  endpoint:
    path: /financialdata
    method: GET
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: user_data
- name: update_user
  endpoint:
    path: /api/users/:id
    method: PUT
    data_selector: updated_user_data
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
- name: update_user
  endpoint:
    path: /api/users/:id
    method: PUT
    data_selector: data
- name: model_outputs
  endpoint:
    path: /v2/models/aaa03c23b3724a16a56b629203edc62c/outputs
    method: POST
    data_selector: body.inputs
- name: score
  endpoint:
    path: /v1alpha/score
    method: POST
    data_selector: data
- name: model_outputs
  endpoint:
    path: /v2/models/aaa03c23b3724a16a56b629203edc62c/outputs
    method: POST
    data_selector: outputs
- name: chat
  endpoint:
    path: /v1/chat
    method: POST
    data_selector: data
- name: score
  endpoint:
    path: /v1alpha/score
    method: POST
    data_selector: data
    params: {}
- name: classify_media
  endpoint:
    path: /v1/classify
    method: POST
    data_selector: data
- name: classify_media
  endpoint:
    path: /v1/classify
    method: POST
    data_selector: data
- name: filter_text
  endpoint:
    path: /filter
    method: POST
    data_selector: filteredText
    params: {}
- name: pre_trained_models
  endpoint:
    path: /your-model-endpoint
    method: POST
    data_selector: data
- name: query
  endpoint:
    path: /query
    method: GET
    data_selector: queryresult
- name: analyze_image
  endpoint:
    path: /analyze
    method: POST
    data_selector: data
    params: {}
- name: query
  endpoint:
    path: /query
    method: GET
    data_selector: queryresult
- name: moderate
  endpoint:
    path: /moderate
    method: POST
    data_selector: data
    params: {}
- name: analyze_image
  endpoint:
    path: /analyze
    method: POST
    data_selector: data
- name: moderate_image
  endpoint:
    path: /moderate
    method: POST
    data_selector: data
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: data
    params:
      period: 30_days
- name: mrr
  endpoint:
    path: /metrics/mrr
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: tinify
  endpoint:
    path: /compress
    method: POST
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: data
    params:
      period: 30_days
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: compress_image
  endpoint:
    path: /compress
    method: POST
    data_selector: data
- name: example_endpoint
  endpoint:
    path: /api/{endpoint}
    method: GET
    data_selector: info
- name: data
  endpoint:
    path: /data/en
    method: GET
    data_selector: data
- name: datastore_search
  endpoint:
    path: /api/3/action/datastore_search
    method: GET
    data_selector: data
    params:
      resource_id: '{resource_id}'
      limit: 5
- name: example_endpoint
  endpoint:
    path: /your-end-point/
    method: GET
- name: dataset_endpoint
  endpoint:
    path: /dataset_endpoint
    method: GET
    data_selector: data
- name: query
  endpoint:
    path: /api/v1/query
    method: GET
    params:
      date_from: '2020-01-01'
      date_to: '2020-12-31'
- name: query
  endpoint:
    path: /api/v1/query
    method: GET
    params:
      date_from: '2020-01-01'
      date_to: '2020-12-31'
- name: notices
  endpoint:
    path: /notices
    method: GET
    data_selector: data
    params: {}
- name: notices
  endpoint:
    path: /notices
    method: GET
    data_selector: data
- name: package_search
  endpoint:
    path: /api/3/action/package_search
    method: GET
    data_selector: data
- name: package_search
  endpoint:
    path: /api/3/action/package_search
    method: GET
    data_selector: data
- name: dataset
  endpoint:
    path: /api/3/action/package_show
    method: GET
    data_selector: data
- name: dataset
  endpoint:
    path: /api/3/action/package_show
    method: GET
    data_selector: data
- name: datasets
  endpoint:
    path: /v1/datasets
    method: GET
    data_selector: data
- name: datasets
  endpoint:
    path: /v1/datasets
    method: GET
    data_selector: data
- name: records
  endpoint:
    path: /data/api/v1/records.json
    method: GET
    params:
      resource_id: your_resource_id
      apikey: your_api_key
- name: records
  endpoint:
    path: /data/api/v1/records.json
    method: GET
    data_selector: data
- name: product_search
  endpoint:
    path: /v1/productsearch
    method: GET
    params: {}
- name: products
  endpoint:
    path: /v1/products
    method: GET
    params: {}
- name: product_details
  endpoint:
    path: /v1/products/{partNumber}
    method: GET
    params: {}
- name: product_search
  endpoint:
    path: /v1/productsearch
    method: GET
    data_selector: data
- name: products
  endpoint:
    path: /v1/products
    method: GET
    data_selector: data
- name: product_details
  endpoint:
    path: /v1/products/{partNumber}
    method: GET
    data_selector: data
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
    params: {}
- name: product_ratings
  endpoint:
    path: /product/ratings
    method: GET
    params:
      product_id: your_product_id_here
      seller_id: your_seller_id_here
- name: product_ratings
  endpoint:
    path: /product/ratings
    method: GET
    data_selector: data
- name: item_summary
  endpoint:
    path: /buy/browse/v1/item_summary/search
    method: GET
- name: item_summary
  endpoint:
    path: /buy/browse/v1/item_summary/search
    method: GET
    data_selector: data
- name: parts_search
  endpoint:
    path: /parts/search
    method: GET
    data_selector: data
- name: parts_search
  endpoint:
    path: /parts/search
    method: GET
    data_selector: data
- name: listings
  endpoint:
    path: /listings/active
    method: GET
    params:
      limit: '10'
- name: shops
  endpoint:
    path: /shops/:shop_id
    method: GET
    params: {}
- name: listings
  endpoint:
    path: /listings/active
    method: GET
    params:
      api_key: YOUR_API_KEY
      limit: 10
- name: shops
  endpoint:
    path: /shops/:shop_id
    method: GET
    params:
      api_key: YOUR_API_KEY
- name: orders
  endpoint:
    path: /sellers/v3/orders/list
    method: GET
- name: products
  endpoint:
    path: /sellers/v3/products
    method: POST
- name: orders
  endpoint:
    path: /sellers/v3/orders/list
    method: GET
- name: products
  endpoint:
    path: /sellers/v3/products
    method: POST
- name: products
  endpoint:
    path: products
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: products
    method: GET
    data_selector: data
- name: package_search
  endpoint:
    path: /action/package_search
    method: GET
    data_selector: result
    params:
      rows: 10
- name: package_list
  endpoint:
    path: /3/action/package_list
    method: GET
    data_selector: result
    params: {}
- name: package_show
  endpoint:
    path: /3/action/package_show
    method: GET
    data_selector: result
    params: {}
- name: search
  endpoint:
    path: /action/package_search
    method: GET
    data_selector: result
    params: {}
- name: catalogue
  endpoint:
    path: /3/action/package_list
    method: GET
    data_selector: result
    params: {}
- name: resource
  endpoint:
    path: /3/action/package_show
    method: GET
    data_selector: result.resources
    params: {}
- name: weather
  endpoint:
    path: /weather
    method: GET
    params:
      apiKey: YOUR_API_KEY
      location: New York, NY USA
- name: image_resize
  endpoint:
    path: /image/resize
    method: GET
    params:
      apiKey: YOUR_API_KEY
      imageUrl: https://example.com/image.png
      width: 500
      height: 500
- name: web_scraper
  endpoint:
    path: /webscraper
    method: GET
    params:
      apiKey: YOUR_API_KEY
      url: https://example.com
      selector: h1
- name: weather
  endpoint:
    path: /weather
    method: GET
    params:
      apiKey: YOUR_API_KEY
      location: New York, NY USA
- name: image_resize
  endpoint:
    path: /image/resize
    method: GET
    params:
      apiKey: YOUR_API_KEY
      imageUrl: https://example.com/image.png
      width: 500
      height: 500
- name: webscraper
  endpoint:
    path: /webscraper
    method: GET
    params:
      apiKey: YOUR_API_KEY
      url: https://example.com
      selector: h1
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: event
    params: {}
- name: queries
  endpoint:
    path: /queries
    method: POST
    data_selector: result
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: result
- name: query
  endpoint:
    path: /queries
    method: POST
    data_selector: result
- name: counts
  endpoint:
    path: /v1.0/counts
    method: GET
    data_selector: data
- name: multiple
  endpoint:
    path: /v1.0/multiple
    method: GET
    data_selector: data
- name: bulk
  endpoint:
    path: /v1.0/bulk
    method: GET
    data_selector: data
- name: domain
  endpoint:
    path: /v1.0/domain
    method: GET
    data_selector: data
- name: counts
  endpoint:
    path: /v1.0/counts
    method: GET
    data_selector: share_count_data
    params:
      url: https://www.example.com
- name: multiple_counts
  endpoint:
    path: /v1.0/multiple
    method: GET
    data_selector: share_count_data
    params:
      urls: https://www.example.com,https://www.anotherexample.com
- name: bulk_counts
  endpoint:
    path: /v1.0/bulk
    method: GET
    data_selector: share_count_data
- name: domain_counts
  endpoint:
    path: /v1.0/domain
    method: GET
    data_selector: share_count_data
- name: server
  endpoint:
    path: /server/<serverId>
    method: GET
- name: person_enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: data
- name: server
  endpoint:
    path: /server/<serverId>
    method: GET
- name: person_enrich
  endpoint:
    path: /person.enrich
    method: POST
    data_selector: data
    params: {}
- name: horoscope
  endpoint:
    path: /
    method: POST
    data_selector: horoscope
    params:
      sign: aries
      day: today
- name: send_message
  endpoint:
    path: /messages/send
    method: POST
    data_selector: response.data
- name: horoscope
  endpoint:
    path: /
    method: POST
    data_selector: ''
    params:
      sign: aries
      day: today
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    params:
      user_id: userId
- name: send_message
  endpoint:
    path: /messages/send
    method: POST
    data_selector: response.data
- name: popular_artworks
  endpoint:
    path: /browse/popular/
    method: GET
    data_selector: results
- name: user_search
  endpoint:
    path: /user/search
    method: GET
    data_selector: results
    params:
      q: john
      category: member
- name: random_artworks
  endpoint:
    path: /browse/random/
    method: GET
    data_selector: results
- name: transactions
  endpoint:
    path: /v1/transactions
    method: GET
    params:
      user_id: userId
- name: fbi_wanted
  endpoint:
    path: /services/data/vXX.X/wanted
    method: GET
    data_selector: records
    params: {}
- name: popular_artworks
  endpoint:
    path: /browse/popular/
    method: GET
    data_selector: results
- name: user_search
  endpoint:
    path: /user/search
    method: GET
    data_selector: results
    params:
      q: john
      category: member
- name: random_artworks
  endpoint:
    path: /browse/random/
    method: GET
    data_selector: results
- name: wbgetentities
  endpoint:
    path: /action/wbgetentities
    method: GET
    data_selector: entities
- name: help
  endpoint:
    path: /action/help
    method: GET
    data_selector: help
- name: content
  endpoint:
    path: /api/content
    method: GET
- name: wbgetentities
  endpoint:
    path: /action/wbgetentities
    method: GET
    data_selector: data
    params:
      ids: Q42
      format: json
- name: help
  endpoint:
    path: /action/help
    method: GET
    data_selector: data
    params: {}
- name: public_data
  endpoint:
    path: /data
    method: GET
- name: content
  endpoint:
    path: /api/content
    method: GET
- name: datasets_list
  endpoint:
    path: /datasets/list
    method: GET
- name: companies_search
  endpoint:
    path: /v0.4/companies/search
    method: GET
    data_selector: results
    params: {}
- name: datasets
  endpoint:
    path: /api/v1/datasets/list
    method: GET
- name: laureate
  endpoint:
    path: /laureate
    method: GET
    data_selector: records
- name: companies
  endpoint:
    path: /v0.4/companies/search
    method: GET
    data_selector: results
    params:
      q: companyName
- name: sanction_data
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: package_show
  endpoint:
    path: /api/3/action/package_show
    method: GET
    data_selector: data
    params:
      id: '{dataset_id}'
- name: laureate
  endpoint:
    path: /v1/laureate
    method: GET
    data_selector: data
- name: data_endpoint
  endpoint:
    path: /data-endpoint
    method: GET
    data_selector: data
- name: sanction_data
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: product
  endpoint:
    path: /api/v0/product
    method: GET
    data_selector: data
- name: package_show
  endpoint:
    path: /api/3/action/package_show
    method: GET
    data_selector: data
    params:
      id: '{dataset_id}'
- name: bacon_image
  endpoint:
    path: /api/
    method: GET
    data_selector: data
    params:
      type: bacon
      width: 500
      height: 500
- name: product
  endpoint:
    path: /api/v0/product/{barcode}.json
    method: GET
    data_selector: data
    params: {}
- name: random_coffee_picture
  endpoint:
    path: /random.json
    method: GET
    data_selector: file
- name: products
  endpoint:
    path: /v1/products
    method: GET
- name: bacon_image
  endpoint:
    path: /api/
    method: GET
    data_selector: data
    params:
      type: bacon
- name: random_coffee_picture
  endpoint:
    path: /random.json
    method: GET
    data_selector: file
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    params:
      access_key: YOUR_ACCESS_KEY
- name: products
  endpoint:
    path: /v1/products
    method: GET
- name: products
  endpoint:
    path: /v1/products
    method: GET
    data_selector: data
    params:
      filter.term: organic
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: data
- name: brew_calculator
  endpoint:
    path: /api/brew_calculator
    method: GET
    data_selector: ''
- name: products
  endpoint:
    path: /v1/products
    method: GET
- name: products
  endpoint:
    path: /v1/products
    method: GET
    params:
      filter.term: organic
- name: past_auctions
  endpoint:
    path: /past-auctions
    method: GET
    data_selector: ''
- name: brew_calculator
  endpoint:
    path: /api/brew_calculator
    method: GET
- name: user_checkins
  endpoint:
    path: /user/checkins
    method: GET
    data_selector: data
    params:
      incremental: user
- name: products
  endpoint:
    path: /v1/products
    method: GET
    data_selector: data
- name: past_auctions
  endpoint:
    path: /past-auctions
    method: GET
    data_selector: data
- name: quote
  endpoint:
    path: /quote
    method: GET
    data_selector: data
    params:
      symbol: AAPL
      token: '{{ dlt.secrets[''api_key''] }}'
- name: financials
  endpoint:
    path: /stock/financials
    method: GET
    data_selector: data
    params:
      symbol: AAPL
      statement: income
      freq: quarterly
      token: '{{ dlt.secrets[''api_key''] }}'
- name: news
  endpoint:
    path: /news
    method: GET
    data_selector: data
    params:
      category: general
      token: '{{ dlt.secrets[''api_key''] }}'
- name: user_checkins
  endpoint:
    path: /user/checkins
    method: GET
    params: {}
- name: diagram
  endpoint:
    path: /diagram
    method: POST
    data_selector: data
- name: items
  endpoint:
    path: /api/data/items
    method: GET
    data_selector: data
- name: quote
  endpoint:
    path: /quote
    method: GET
    data_selector: data
- name: financials
  endpoint:
    path: /stock/financials
    method: GET
    data_selector: data
- name: news
  endpoint:
    path: /news
    method: GET
    data_selector: data
- name: example_endpoint
  endpoint:
    path: /api/your-endpoint
    method: GET
    data_selector: data
- name: diagram
  endpoint:
    path: /diagram
    method: POST
    data_selector: data
    params: {}
- name: bng_to_latlong
  endpoint:
    path: /bng2latlong
    method: GET
    data_selector: response.data
    params: {}
- name: items
  endpoint:
    path: /api/data/items
    method: GET
    data_selector: data
- name: geolocation
  endpoint:
    path: /v2.0
    method: GET
    data_selector: data
    params:
      ip: 8.8.8.8
      key: YOUR_API_KEY
      package: WS25
- name: convert_coordinates
  endpoint:
    path: /bng2latlong
    method: GET
    data_selector: response
    params: {}
- name: cards
  endpoint:
    path: /api/v2/cards
    method: GET
    data_selector: data
    params: {}
- name: geolocation
  endpoint:
    path: /
    method: GET
    data_selector: data
    params:
      ip: example_ip_address
      key: YOUR_API_KEY
      package: WS25
- name: courses
  endpoint:
    path: /courses/
    method: GET
    data_selector: ''
- name: cards
  endpoint:
    path: /cards
    method: GET
    data_selector: data
    params: {}
- name: random_quote
  endpoint:
    path: /api/random
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: data
- name: courses
  endpoint:
    path: /courses/
    method: GET
    data_selector: data
    params: {}
- name: quotes
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: random_quote
  endpoint:
    path: /api/random
    method: GET
    data_selector: data
    params: {}
- name: quotes
  endpoint:
    path: /api/quotes/random
    method: GET
    data_selector: quote
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: data
- name: getRandomImage
  endpoint:
    path: /api/getRandomImage
    method: GET
    data_selector: image
    params: {}
- name: http_codes
  endpoint:
    path: /http-codes
    method: GET
    data_selector: ''
- name: quote_of_the_day
  endpoint:
    path: /qod
    method: GET
    data_selector: contents.quotes
    params: {}
- name: quotes
  endpoint:
    path: /api/quotes/random
    method: GET
    data_selector: quote
- name: quotes
  endpoint:
    path: /api/v3/quotes/random
    method: GET
    data_selector: data
- name: random_biriyani_image
  endpoint:
    path: /api/getRandomImage
    method: GET
    data_selector: image
- name: random_quote
  endpoint:
    path: /wp-json/wp/v2/posts/
    method: GET
    data_selector: ''
    params:
      orderby: rand
- name: quote_by_id
  endpoint:
    path: /wp-json/wp/v2/posts/{quoteId}
    method: GET
    data_selector: ''
    params: {}
- name: multiple_quotes
  endpoint:
    path: /wp-json/wp/v2/posts/
    method: GET
    data_selector: ''
    params:
      orderby: rand
      per_page: '10'
- name: http_codes
  endpoint:
    path: /http-codes
    method: GET
    data_selector: ''
- name: assessments
  endpoint:
    path: /v1/assessments
    method: GET
    data_selector: data
- name: career_matches
  endpoint:
    path: /v1/assessments/{assessment_id}/careers
    method: GET
    data_selector: data
- name: random_quote
  endpoint:
    path: /api/v3/quotes/random
    method: GET
    data_selector: data
- name: analyze
  endpoint:
    path: /v1/analyze
    method: POST
    data_selector: ''
    params:
      version: '2021-03-25'
- name: random_quote
  endpoint:
    path: /wp-json/wp/v2/posts/?orderby=rand
    method: GET
    data_selector: '[0]'
    params: {}
- name: quote_by_id
  endpoint:
    path: /wp-json/wp/v2/posts/{quoteId}
    method: GET
    data_selector: content.rendered
    params: {}
- name: multiple_quotes
  endpoint:
    path: /wp-json/wp/v2/posts/?orderby=rand&per_page={numQuotes}
    method: GET
    data_selector: '[]'
    params: {}
- name: text_analysis
  endpoint:
    path: /parse/text/
    method: POST
    data_selector: result
- name: assessments
  endpoint:
    path: /v1/assessments
    method: GET
    data_selector: data
- name: career_matches
  endpoint:
    path: /v1/assessments/{assessment_id}/careers
    method: GET
    data_selector: data
- name: detect_code
  endpoint:
    path: /detect
    method: POST
    data_selector: data
- name: analyze_text
  endpoint:
    path: /v1.0/analyze
    method: POST
    data_selector: data
- name: analyze
  endpoint:
    path: /v1/analyze
    method: POST
    data_selector: results
- name: sentiment_analysis
  endpoint:
    path: /sentiment-2.1
    method: POST
    data_selector: data
    params:
      key: YOUR_API_KEY
      txt: text
      lang: en
- name: text_analysis
  endpoint:
    path: /parse/text/
    method: POST
    data_selector: results
- name: translate
  endpoint:
    path: /translate
    method: POST
    data_selector: translatedText
- name: detect
  endpoint:
    path: /detect
    method: POST
    data_selector: data
- name: analyze_sentiment
  endpoint:
    path: /analyzeSentiment
    method: POST
    data_selector: result.documentSentiment
- name: analyze_entities
  endpoint:
    path: /analyzeEntities
    method: POST
    data_selector: result.entities
- name: analyze_syntax
  endpoint:
    path: /analyzeSyntax
    method: POST
    data_selector: result.tokens
- name: analyze_text
  endpoint:
    path: /v1.0/analyze
    method: POST
    data_selector: data
    params: {}
- name: document_analysis
  endpoint:
    path: /createDocument
    method: POST
    data_selector: res
    params: {}
- name: batch_document_analysis
  endpoint:
    path: /createBatchDocuments
    method: POST
    data_selector: res
    params: {}
- name: sentiment_analysis
  endpoint:
    path: /sentiment-2.1
    method: POST
    params:
      key: YOUR_API_KEY
      txt: text
      lang: en
- name: translate
  endpoint:
    path: /translate
    method: POST
    data_selector: translatedText
- name: Sentiment Analysis
  endpoint:
    path: /sentiment-analysis
    method: GET
- name: Entity Extraction
  endpoint:
    path: /entity-extraction
    method: GET
- name: Concept Extraction
  endpoint:
    path: /concept-extraction
    method: GET
- name: language_detection
  endpoint:
    path: /0.2/detect
    method: POST
    data_selector: data.detections
- name: analyze_sentiment
  endpoint:
    path: /analyzeSentiment
    method: POST
    data_selector: result.documentSentiment
- name: analyze_entities
  endpoint:
    path: /analyzeEntities
    method: POST
    data_selector: result.entities
- name: analyze_syntax
  endpoint:
    path: /analyzeSyntax
    method: POST
    data_selector: result.tokens
- name: document
  endpoint:
    path: /createDocument
    method: POST
    data_selector: response
- name: batch_documents
  endpoint:
    path: /createBatchDocuments
    method: POST
    data_selector: response
- name: Sentiment Analysis
  endpoint:
    path: /v1/sentiment
    method: POST
    data_selector: response
    params: {}
- name: Entity Extraction
  endpoint:
    path: /v1/entities
    method: POST
    data_selector: response
    params: {}
- name: Concept Extraction
  endpoint:
    path: /v1/concepts
    method: POST
    data_selector: response
    params: {}
- name: language_detection
  endpoint:
    path: /0.2/detect
    method: POST
    data_selector: data.detections
notes:
- To use Inspirobot API, you need an API key.
- API key is required for authentication.
- Scraping is hard, scraping at scale can be very challenging.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Many News APIs offer free tiers for testing or small projects.
- API provides real-time web scraping capabilities.
- Music APIs let developers integrate music features into apps using simple HTTP requests
  and JSON responses.
- Many Music APIs offer free tiers for testing or small projects.
- Media APIs let developers integrate media features into apps using simple HTTP requests
  and JSON responses.
- Many Media APIs offer free tiers for testing or small projects.
- Cloudinary's Video API provides a comprehensive solution for video management, offering
  developers powerful tools to upload, store, encode, and deliver video content with
  optimizations for web and mobile platforms.
- API calls are rate limited.
- Ensure to check for null values in some responses.
- Real-time IRS Compliance Check
- Free Tier Available
- Easy-to-use API with quick implementation and reliable performance.
- 'Real-Time Updates: Access the latest breaking news as it happens.'
- 'Extensive Historical Data: Tap into over 20 years of news archives.'
- API provides a fast and reliable solution for parsing user agents.
- Uses API key for authentication
- Requires API key for authentication
- An API key is required for all API requests.
- API Key required for access.
- You need to create a free account and get an API key to access the API.
- Obtain an API key by creating a new app in Developer Settings.
- Make sure to replace 'YOUR_ACCESS_KEY' with your actual access key obtained from
  ipapi.com.
- 'No registration required: It''s free, unlimited, and doesn''t require any sign-up.'
- Regularly updated to maintain accuracy in identifying proxies and VPNs.
- Make sure to replace YOUR_ACCESS_KEY with your actual access key obtained from ipapi.com.
- API provides a structured and efficient approach to access job listings.
- The API allows for a constant stream of up-to-date job postings.
- Real-time updates on job postings to ensure users have the latest information.
- Access to a vast database of job listings from multiple sources
- Real-time updates on job availability
- Customizable search filters to meet specific user requirements
- Multilingual support to cater to diverse job seekers
- Easy integration for a seamless user experience
- Access to up-to-date health statistics and medical reference data.
- Access to a vast array of datasets relevant to various humanitarian crises.
- Improved collaboration between organizations working in the humanitarian space.
- Promotes transparency and encourages data-driven decision-making
- Supports public and private health sector research initiatives
- Users must create an account to obtain an API key.
- API Key and Secret must be generated on the Gemini website.
- API Key and Secret required for requests.
- Nonce must be unique for each request to prevent replay attacks.
- API provides an unmatched user experience, utilizing the high-level performance
  capabilities native to Seychelles' technological infrastructure.
- Please replace 'YOUR_ACCESS_KEY' with your actual API access key from Aviation Stack.
- Remember to replace 'YOUR_API_TOKEN' with your actual API token for the request
  to work.
- Real-time access to train schedules, routes, and stoppages
- Provides historical data for efficient analysis and decision making
- The API is designed in compliance with open data principles.
- Remember to replace placeholder text with actual parameters for the request.
- Streamline your logistics and payment processes with real-time tracking.
- Keep customers informed about their delivery status and ride fares.
- Uses OAuth2 for authentication
- 'Generous Free Storage: 1TB of complimentary space'
- 'High Availability: Access your files from anywhere at any time'
- 'Generous Free Storage: Get started with a substantial 1TB of complimentary space.'
- 'High Availability: Access your files from anywhere at any time with minimal downtime.'
- 'Robust Security: Protect your data with cutting-edge encryption and secure sharing
  options.'
- 'Easy Integration: Simple API calls enable seamless integration with your applications
  and services.'
- 'Scalable Solution: Effortlessly expand your storage needs as your business grows.'
- Access to a vast database of video game information.
- Simplified data retrieval through a well-documented API.
- Access to a vast library of bird audio recordings for research and educational purposes.
- Ability to filter recordings by species, location, and other parameters.
- No email required.
- No API key required.
- This is an open source project.
- The API offers access to all this data for free.
- Clear and detailed documentation makes it easier for developers to understand and
  implement.
- Uses API Key for authentication
- Enhances user engagement through personalized insights and recommendations.
- Unlock the full potential of your application with our powerful API that allows
  you to seamlessly get and set activities, health data, and much more.
- Ensure compliance with international tax obligations.
- Replace 'YOUR_ACCESS_KEY' with your actual API key.
- Real-time and historical market data allows tracking market changes and trends.
- Immediate access to comprehensive data reduces the need for manual data collection.
- High-quality and consistent data feeds, ideal for trading algorithms and financial
  modeling.
- Comprehensive API documentation provides easy navigation for developers.
- Enhanced decision making due to access to precise and up-to-date financial market
  information.
- Replace {YOUR_API_KEY} with your actual API key.
- NLP API to return probability that if text is toxic, obscene, insulting or threatening.
- Authorization requires an API key
- Requires an App ID for access
- Utilizes complex algorithms and an extensive database to provide accurate answers.
- Access to real-time and historic data from numerous sectors of the Finnish government.
- Facilitates data-driven decision making in businesses or policy-making.
- API key required for making requests.
- Uses RESTful design principles and supports various data formats such as JSON and
  XML.
- Efficient rate limits in place to handle a large volume of requests.
- The New Zealand Government Open Data API provides a wealth of data that promotes
  transparency and innovation across various sectors.
- Access to a diverse range of datasets for comprehensive research and analysis
- Support for open data initiatives, promoting transparency and accountability
- Access to a diverse range of datasets that empower informed decision-making.
- Real-time data updates that support timely and relevant applications.
- Make sure you read the official documentation for comprehensive instructions.
- You need to create API keys first.
- Simplified user authentication through Instagram Login.
- Enhanced user engagement with easy content sharing features.
- Effortless bot creation with built-in features.
- Ability to integrate Discord functionalities into non-Discord platforms.
- Enhanced user engagement with interactive and responsive bots.
- Support for reliable and scalable bot operations.
- Access to a vast array of documentation and community resources for troubleshooting
  and enhancement.
- Uses OAuth2 for user authentication.
- Secure and easy access to a wide range of transactional data.
- Support for multiple bank integrations across the African continent.
- Real-time updates that keep financial information current and accurate.
- Ensure to replace 'YOUR_API_KEY' with your actual OpenCorporates API key before
  running the code.
- Uses API key for authorization.
- Make sure to replace 'YOUR_API_KEY' with your actual OpenCorporates API key before
  running the code.
- Uses HTTPS
- 'Not Supported SSL Grade: T'
- Unofficial US Federal Government API Development
- The Untappd API facilitates a unique social beer-sharing experience, allowing developers
  to integrate beer tracking, rating, and discovering functionalities into their applications.
- Access to a wealth of datasets curated by the government, ensuring reliability and
  accuracy.
- Promotion of transparency and accountability within public sectors by facilitating
  the public’s access to governmental information.
- Opportunity to foster innovation by enabling the creation of new services and products
  based on real-time and historical data.
- API for instructors on Udemy
- Free and open for developers, allowing for experimentation and creative applications.
- The API is built with complex natural language processing algorithms which can effectively
  identify and flag offensive and abusive content in text across a wide range of languages.
- The service cleans HTML content before analysis by default, so the results can ignore
  most advertisements and other unwanted content.
- Uses API key in headers for authentication
- Utilizing this API brings numerous advantages including accurate processing of Thai
  language nuances and grammar.
- Get an API key by creating an account on the Semantria website.
- Requires a Google Cloud account and service account for authentication.
- Requires API key from Semantira website.
errors:
- Network response was not ok
- '401 Unauthorized: Invalid API key'
- '404 Not Found: The requested resource could not be found.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your API key.'
- '429 Too Many Requests: Rate limit exceeded.'
- Error verifying nonprofit
- 'Unauthorized: Check access key'
- 'Error: Bad Request'
- 'Error: Unauthorized'
- '400 Bad Request: Check request parameters.'
- '403 Forbidden: Ensure API key and secret are valid.'
- '404 Not Found: Verify endpoint path.'
- '401 Unauthorized: Recheck API token.'
- '401 Unauthorized: Recheck API key'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://worldnewsapi.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
