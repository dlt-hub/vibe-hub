resources:
- name: TransactionEvent
  endpoint:
    path: /v1/scsp/evse/{evse_uid}/events/{payload-protocol}/TransactionEvent/
    method: POST
    data_selector: TransactionEvent
- name: MeterValues
  endpoint:
    path: /v1/scsp/evse/{evse_uid}/events/ocpp2.0.1/MeterValues
    method: POST
    data_selector: MeterValue
- name: TransactionEvent
  endpoint:
    path: /v1/scsp/evse/{evse_uid}/events/{payload-protocol}/TransactionEvent/
    method: POST
- name: MeterValues
  endpoint:
    path: /v1/scsp/evse/{evse_uid}/events/ocpp2.0.1/MeterValues
    method: POST
- name: charging_locations
  endpoint:
    path: /api/v2/charging-locations
    method: GET
    params:
      pageSize: 20
      pageIndex: 1
- name: charging_locations
  endpoint:
    path: /api/v2/charging-locations
    method: GET
    data_selector: ''
    params:
      pageSize: 20
      pageIndex: 1
- name: charging_locations
  endpoint:
    path: /api/v2/users/{userId}/charging-locations
    method: GET
    data_selector: items
- name: user_charging_locations
  endpoint:
    path: /api/v2/users/{userId}/charging-locations
    method: GET
    data_selector: items
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: users
  endpoint:
    path: /api/v1/users
    method: POST
    data_selector: id
- name: charging_locations
  endpoint:
    path: /api/v1/users/{userId}/charging-locations
    method: POST
    data_selector: chargingLocationId
- name: electricity_tariffs
  endpoint:
    path: /reference/createtariffs
    method: POST
    data_selector: tariff
- name: user
  endpoint:
    path: /api/v1/users
    method: POST
    data_selector: id
    params: {}
- name: charging_location
  endpoint:
    path: /api/v1/users/{userId}/charging-locations
    method: POST
    data_selector: chargingLocationId
    params: {}
- name: electricity_tariff
  endpoint:
    path: /api/v1/users/{userId}/charging-locations/{chargingLocationId}/tariffs
    method: POST
    data_selector: tariffId
    params: {}
- name: solar_settings
  endpoint:
    path: /api/v1/users/D/charging-locations/{chargingLocationId}/solar-settings
    method: POST
    data_selector: solarSettings
    params: {}
- name: solar_settings
  endpoint:
    path: /api/v1/users/D/charging-locations/{chargingLocationId}/solar-settings
    method: POST
    data_selector: solarSettings
    params: {}
- name: connect_session
  endpoint:
    path: /connect/session
    method: POST
- name: user
  endpoint:
    path: /api/v2/users/D
    method: DELETE
    data_selector: null
    params: {}
- name: delete_user
  endpoint:
    path: /api/v2/users/D
    method: DELETE
- name: connect_session
  endpoint:
    path: /api/v2/users/{USERID}/vehicles/connect-sessions
    method: POST
    data_selector: startUrl
    params: {}
- name: check_session
  endpoint:
    path: /api/v2/users/{USER_ID}/connect-sessions/{CONNECT_SESSION_ID}
    method: GET
    data_selector: vehicleId
    params: {}
- name: vehicle_details
  endpoint:
    path: /api/v2/users/{USER_ID}/vehicles
    method: GET
    data_selector: isConnected
    params: {}
- name: connect_session
  endpoint:
    path: /api/v2/users/{USERID}/vehicles/connect-sessions
    method: POST
    data_selector: null
    params: {}
- name: check_session
  endpoint:
    path: /api/v2/users/{USER_ID}/connect-sessions/{CONNECT_SESSION_ID}
    method: GET
    data_selector: null
    params: {}
- name: vehicle_details
  endpoint:
    path: /api/v2/users/{USER_ID}/vehicles
    method: GET
    data_selector: null
    params: {}
- name: account
  endpoint:
    path: /api/v2/accounts
    method: GET
    data_selector: accountDetails
- name: cars
  endpoint:
    path: /api/v2/cars
    method: GET
    data_selector: carsList
- name: Test Car Account
  endpoint:
    path: /reference/getaccount
    method: GET
- name: Create a Test Car Account
  endpoint:
    path: /reference/createaccount
    method: POST
- name: Create a test car
  endpoint:
    path: /reference/createcar
    method: POST
- name: Retrieve a list of vehicles for a user
  endpoint:
    path: /api/v2/cars
    method: GET
- name: Update your test car
  endpoint:
    path: /reference/updatecar
    method: POST
- name: charger
  endpoint:
    path: /api/v2/users/D/charging-locations/{chargingLocationId}/chargers
    method: POST
    data_selector: externalId
- name: charger
  endpoint:
    path: /api/v2/users/D/charging-locations/{chargingLocationId}/chargers
    method: POST
    data_selector: externalId
    params: {}
- name: unpair_charger
  endpoint:
    path: /v1/cpo/unpair
    method: POST
    data_selector: message
    params: {}
- name: unpair_charger
  endpoint:
    path: /v1/cpo/unpair
    method: POST
    data_selector: message
    params: {}
- name: pair
  endpoint:
    path: /v1/scsp/pair
    method: POST
    data_selector: message
- name: unpair
  endpoint:
    path: /v1/cpo/unpair
    method: POST
    data_selector: message
- name: pair
  endpoint:
    path: /v1/scsp/pair
    method: POST
    data_selector: ''
    params: {}
- name: unpair
  endpoint:
    path: /v1/cpo/unpair
    method: POST
    data_selector: ''
    params: {}
- name: session
  endpoint:
    path: /api/ocpi/emsp/2.2.1/sessions/{COUNTRY_ID}/{PARTY_ID}/{SESSION_ID}
    method: PUT
    data_selector: records
    params: {}
- name: update_session
  endpoint:
    path: /api/ocpi/emsp/2.2.1/sessions/{COUNTRY_ID}/{PARTY_ID}/{SESSION_ID}
    method: PATCH
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /api/ocpi/emsp/2.2.1/sessions/{COUNTRY_ID}/{PARTY_ID}/{SESSION_ID}
    method: PUT
    data_selector: ''
    params: {}
- name: charging_profiles
  endpoint:
    path: /ocpi/2.2.1/chargingprofiles
    method: GET
    data_selector: charging_profile
    params: {}
- name: charging_profiles
  endpoint:
    path: /ocpi/2.2.1/chargingprofiles
    method: PUT
    data_selector: charging_profile
    params: {}
- name: active_charging_profile
  endpoint:
    path: /ocpi/2.2.1/chargingprofiles/{id}
    method: GET
    data_selector: ActiveChargingProfile
    params: {}
- name: SetChargingProfile
  endpoint:
    path: /v1/cpo/chargingstation/{uid}/events/{payload-protocol}/SetChargingProfile
    method: POST
    data_selector: chargingProfile
    params: {}
- name: create
  endpoint:
    path: /reference/createusercharginglocations
    method: POST
- name: delete
  endpoint:
    path: /reference/deleteusercharginglocations
    method: DELETE
- name: update
  endpoint:
    path: /reference/modifyusercharginglocations
    method: PUT
- name: retrieve
  endpoint:
    path: /reference/getusercharginglocation
    method: GET
- name: list_user_locations
  endpoint:
    path: /reference/getusercharginglocations
    method: GET
- name: list_tenant_locations
  endpoint:
    path: /reference/getallcharginglocations
    method: GET
- name: Set Charging Profile
  endpoint:
    path: /v1/cpo/chargingstation/{uid}/events/{payload-protocol}/SetChargingProfile
    method: POST
    data_selector: chargingProfile
    params: {}
- name: create_tariffs
  endpoint:
    path: /reference/createtariffs
    method: POST
    data_selector: tariffs
- name: retrieve_tariffs
  endpoint:
    path: /reference/gettariffs
    method: GET
    data_selector: tariffs
- name: create_user_charging_locations
  endpoint:
    path: /reference/createusercharginglocations
    method: POST
- name: delete_user_charging_locations
  endpoint:
    path: /reference/deleteusercharginglocations
    method: DELETE
- name: update_user_charging_locations
  endpoint:
    path: /reference/modifyusercharginglocations
    method: PATCH
- name: retrieve_charging_location
  endpoint:
    path: /reference/getusercharginglocation
    method: GET
- name: list_user_charging_locations
  endpoint:
    path: /reference/getusercharginglocations
    method: GET
- name: list_tenant_charging_locations
  endpoint:
    path: /reference/getallcharginglocations
    method: GET
- name: Create Tariffs
  endpoint:
    path: /reference/createtariffs
    method: POST
    data_selector: tariffs
- name: Retrieve tariffs for time period
  endpoint:
    path: /reference/gettariffs
    method: GET
    data_selector: tariffs
- name: update_active_session_settings
  endpoint:
    path: /reference/updateactivesessionsettings
    method: POST
    data_selector: ''
    params: {}
- name: modify_charge_settings
  endpoint:
    path: /reference/modifychargesettings
    method: POST
    data_selector: ''
    params: {}
- name: session
  endpoint:
    path: /charge-sessions
    method: GET
- name: update_active_session_settings
  endpoint:
    path: /reference/updateactivesessionsettings
    method: POST
    data_selector: null
    params: {}
- name: modify_charge_settings
  endpoint:
    path: /reference/modifychargesettings
    method: POST
    data_selector: null
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: records
- name: reward_level
  endpoint:
    path: /docs/setting-the-reward-level-for-users
    method: GET
    data_selector: reward_levels
    params: {}
- name: payout
  endpoint:
    path: /users/D/payout
    method: POST
- name: webhook_subscriptions
  endpoint:
    path: /api/v2/webhooks/subscriptions
    method: POST
    data_selector: null
    params: {}
- name: ManagedSessionStart
  endpoint:
    path: /notifications/ManagedSessionStart
    method: GET
- name: ManagedSessionEnd
  endpoint:
    path: /notifications/ManagedSessionEnd
    method: GET
- name: UnmanagedSessionStart
  endpoint:
    path: /notifications/UnmanagedSessionStart
    method: GET
- name: UnmanagedSessionEnd
  endpoint:
    path: /notifications/UnmanagedSessionEnd
    method: GET
- name: CarNotFound
  endpoint:
    path: /notifications/CarNotFound
    method: GET
- name: CarNotReachable
  endpoint:
    path: /notifications/CarNotReachable
    method: GET
- name: InvalidCredentials
  endpoint:
    path: /notifications/InvalidCredentials
    method: GET
- name: ZeInteractiveToBeActivated
  endpoint:
    path: /notifications/ZeInteractiveToBeActivated
    method: GET
- name: ZeInteractiveCannotBeActivated
  endpoint:
    path: /notifications/ZeInteractiveCannotBeActivated
    method: GET
- name: ZeInteractiveExpiresSoon
  endpoint:
    path: /notifications/ZeInteractiveExpiresSoon
    method: GET
- name: ReadyForPairing
  endpoint:
    path: /notifications/ReadyForPairing
    method: GET
- name: SessionImpossible
  endpoint:
    path: /notifications/SessionImpossible
    method: GET
- name: PayoutReceipt
  endpoint:
    path: /notifications/PayoutReceipt
    method: GET
- name: CheckCarActivation
  endpoint:
    path: /notifications/CheckCarActivation
    method: GET
- name: ReceivedNoPower
  endpoint:
    path: /notifications/ReceivedNoPower
    method: GET
- name: ChargingCostReimbursement
  endpoint:
    path: /notifications/ChargingCostReimbursement
    method: GET
- name: ElexentChargingCostsOverview
  endpoint:
    path: /notifications/ElexentChargingCostsOverview
    method: GET
- name: GeoLocationDisabled
  endpoint:
    path: /notifications/GeoLocationDisabled
    method: GET
- name: AudiNotPaired
  endpoint:
    path: /notifications/AudiNotPaired
    method: GET
- name: AudiPairingNotComplete
  endpoint:
    path: /notifications/AudiPairingNotComplete
    method: GET
- name: InvalidUtilityContract
  endpoint:
    path: /notifications/InvalidUtilityContract
    method: GET
- name: ReconnectUtilityContract
  endpoint:
    path: /notifications/ReconnectUtilityContract
    method: GET
- name: InvalidCredentialsBanner
  endpoint:
    path: /notifications/InvalidCredentialsBanner
    method: GET
- name: MyRenaultAccessRevoked
  endpoint:
    path: /notifications/MyRenaultAccessRevoked
    method: GET
- name: AudiRemoteAccessDisabled
  endpoint:
    path: /notifications/AudiRemoteAccessDisabled
    method: GET
- name: AudiRemoteAccessDisabledBanner
  endpoint:
    path: /notifications/AudiRemoteAccessDisabledBanner
    method: GET
- name: RenaultWaitingForServiceActivation
  endpoint:
    path: /notifications/RenaultWaitingForServiceActivation
    method: GET
- name: RenaultReadyForPairingEmail
  endpoint:
    path: /notifications/RenaultReadyForPairingEmail
    method: GET
- name: RenaultReadyForPairingBanner
  endpoint:
    path: /notifications/RenaultReadyForPairingBanner
    method: GET
- name: VolkswagenIdGeolocationCapabilitiesAvailable
  endpoint:
    path: /notifications/VolkswagenIdGeolocationCapabilitiesAvailable
    method: GET
- name: BMWSmartChargingUnlockedBanner
  endpoint:
    path: /notifications/BMWSmartChargingUnlockedBanner
    method: GET
- name: MiniSmartChargingUnlockedBanner
  endpoint:
    path: /notifications/MiniSmartChargingUnlockedBanner
    method: GET
- name: ImportantUpdateAppv416Banner
  endpoint:
    path: /notifications/ImportantUpdateAppv416Banner
    method: GET
- name: InformationMobilizePdlBenefitBanner
  endpoint:
    path: /notifications/InformationMobilizePdlBenefitBanner
    method: GET
- name: AcceptPdlAgreementBanner
  endpoint:
    path: /notifications/AcceptPdlAgreementBanner
    method: GET
- name: RemovedGreenchoiceContractBanner
  endpoint:
    path: /notifications/RemovedGreenchoiceContractBanner
    method: GET
- name: ReferralCompletedForReferrerBanner
  endpoint:
    path: /notifications/ReferralCompletedForReferrerBanner
    method: GET
- name: ReferralCompletedForInviteeBanner
  endpoint:
    path: /notifications/ReferralCompletedForInviteeBanner
    method: GET
- name: payout
  endpoint:
    path: /users/D/payout
    method: POST
- name: webhook_subscriptions
  endpoint:
    path: /api/v2/webhooks/subscriptions
    method: POST
    data_selector: null
    params: {}
notes:
- The Developer portal offers interactive API documentation, code examples, guides,
  and SDKs
- Its easy to set up and comes with a fully functioning demo account and vehicle simulator
- API Key required for access
- Include the API key in every interaction with the Smart Charging API.
- Management resources are only accessible for subscribers to the Starter or Enterprise
  plan.
- Your management access token is valid for 14 days and should be cached until it
  expires.
- All API requests must use HTTPS, and calls made over plain HTTP will fail.
- Expired tokens are not accepted, so the Smart Charging API will check the exp claim
  with each call.
- The maximum page size is 100. If this limit is increased, pageSize will be set to
  100 on v1 endpoints and will trigger a BadRequest on v2 and later versions.
- Requires ApiKey and management access token for authentication.
- Supports dynamic tariff types for optimizing charging costs.
- You need to obtain an access token for the desired environment (QA or Production).
- Parameters solarOrientation, solarTiltAngle, solarEfficiency, and solarProductionThreshold
  are optional.
- The maximum capacity of the solar PV installation in kWp is required.
- Demo user functionality is similar to a real user, with the exception that it is
  limited to one user account and it's interacting within a test environment.
- Demo user is created upon signup, limited to one user account in a test environment.
- Deleting a user is a critical operation that removes all personal data associated
  with the user, disconnects all assets linked to the account, and cannot be undone.
- Deleting a user removes all personal data associated with the user and cannot be
  undone.
- The platform allows a single vehicle to be connected to a user account.
- Test Car Account automatically provided upon sign-up to the developer portal.
- The brand name Jedlix and the test car are only available on the QA environment.
- QA environment only
- Renault requires a manufacturer‑side subscription step before vehicle data becomes
  available.
- This asynchronous process can last anywhere from a few minutes to several days (mean
  ~1.5 h).
- The vehicle may take up to 1 week (mean ~1.5 h) to be subscribed.
- API Key is required for authentication.
- To preserve the uniqueness of an EVSE’s uid within a CPO’s platform and to guarantee
  that EVSEs are never removed, a CPO must refrain from employing identifiers of the
  physical hardware for uid property.
- Access tokens are valid for 14 days.
- Use API Key for an extra layer of security.
- Frequent updates are recommended at intervals not exceeding 5 minutes during charging/discharging.
- CPO must set up Sessions module according to the provided guide
- CPO must setup the Sessions module for integration.
- The Jedlix platform does not store GPS data from the car to respect end-user privacy.
- Actual energy represents the volumes over time for charging sessions as they occurred.
- Baseline energy charged provides a reconstruction of the volumes over time that
  would have been charged if no optimization was applied.
- Allows disabling of Smart Charging service temporarily
- 'Charging at unknown locations: The Jedlix platform does not store GPS data from
  the car to respect end-user privacy.'
- Sessions that take place at unknown charge locations are unmanaged by default.
- When smart charging is disabled while a smart charging session is active, Jedlix
  will force-end the session and create a new unmanaged one upon receiving the next
  telemetry.
- We maintain a 7-day history of events, which serves as a valuable resource for troubleshooting
  and event retrying.
- Reward levels can be configured based on country, managed or unmanaged volumes,
  and energy supplier.
- We maintain a 7-day history of events.
- Test messages have the isTest property set to true.
errors:
- '400: Bad Request'
- '401: Unauthorized'
- '500: Internal Server Error'
- 401 Unauthorized
- 403 Forbidden
- 504 Internal api timeout
- 'HTTPS required: All API requests must use HTTPS.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '400 Bad Request: Ensure that the request has the correct syntax and all required
  parameters are provided.'
- '401 Unauthorized: Check that your API key is valid and has the appropriate permissions
  for the requested resource.'
- '403 Forbidden: You do not have the necessary permissions to access the requested
  resource.'
- '404 Not Found: The requested resource could not be found on the server.'
- '409 Conflict: The request could not be completed due to a conflict with the current
  state of the resource.'
- '404 Not Found: The specified Charger is not valid or does not exist.'
- '404 Not Found: Incorrect or Expired Code, please check the code and try again.'
- '409 Conflict: This charger is already paired to another account.'
- '400 Bad Request: Invalid EVSE UID or Invalid charging profile'
- '401 Unauthorized: Unauthorized access to set charging profiles for this EVSE'
- '404 Not Found: The specified charger UID does not exist'
- '500 Internal Server Error: An error occurred while processing the request'
- '503 Service Unavailable: The specified charger is currently offline'
- '400 Bad Request: Invalid EVSE UID or Invalid charging profile.'
- '401 Unauthorized: Unauthorized access to set charging profiles for this EVSE.'
- '404 Not Found: The specified charger UID does not exist.'
- '500 Internal Server Error: An error occurred while processing the request.'
- '503 Service Unavailable: The specified charger is currently offline.'
- '400 Bad Request: Registration fails if the endpoint is not accessible.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://demo-smartcharging.jedlix.com
  auth:
    type: oauth2
  headers:
    Jedlix-ClientName: string
    Jedlix-ClientVersion: string
  paginator:
    page_size_param: pageSize
    default_page_size: 20
source_metadata: null
