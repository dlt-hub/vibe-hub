resources:
- name: Export Environment Configuration
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
    params: {}
- name: applications
  endpoint:
    path: /api/v1/applications
    method: GET
    data_selector: applications
- name: event_types
  endpoint:
    path: /api/v1/event-types
    method: GET
    data_selector: event_types
- name: stats_usage_app_eu
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: null
    params: {}
- name: stats_usage_app_us
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: null
    params: {}
- name: stats_usage_app
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
    params: {}
- name: endpoint_stats
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
    params: {}
- name: poller_consumer_seek
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: ''
    params: {}
- name: attempted_messages
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
    params:
      limit: 250
- name: message_attempts_by_endpoint
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
    params: {}
- name: message_attempts_by_msg
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
    params: {}
- name: List Attempted Destinations
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
- name: Get Attempt
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
- name: Delete Attempt
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
- name: Resend Webhook
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
- name: List Integrations
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
- name: Create Integration
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
- name: Get Integration
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
- name: Update Integration
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
- name: Delete Integration
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
- name: Ingest Endpoint
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
- name: Rotate Integration Key
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
- name: List Ingest Sources
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
- name: Create Ingest Source
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
- name: Get Ingest Source
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
- name: Update Source
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
- name: Delete Ingest Source
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
- name: Rotate Ingest Token
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
- name: Ingest Source Consumer Portal
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
- name: List Ingest Endpoints
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
- name: operational_webhook_endpoint
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
- name: app_stats
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
- name: aggregate_event_types
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: unresolvedAppIds
- name: create_invite
  endpoint:
    path: /dashboard/invite
    method: POST
    data_selector: InviteOut
- name: list_org_group_invites
  endpoint:
    path: /dashboard/invite/org-group
    method: GET
    data_selector: ListResponse_InviteOut_
- name: respond_to_invite
  endpoint:
    path: /dashboard/invite/respond/{org_group_invite_id}
    method: POST
    data_selector: InviteOut
- name: delete_invite
  endpoint:
    path: /dashboard/invite/{org_group_invite_id}
    method: DELETE
- name: search_applications
  endpoint:
    path: /dashboard/search
    method: POST
    data_selector: ListResponse_SearchResultOut_
- name: get_audit_log
  endpoint:
    path: /dashboard/audit-log/{env_id}
    method: GET
    data_selector: ListResponse_DashboardAuditLogRecordOut_
- name: find_invite
  endpoint:
    path: /dashboard/invite/find
    method: POST
    data_selector: InviteOut
- name: get_event_catalog
  endpoint:
    path: /dashboard/event-types/{env_id}
    method: GET
- name: rotate_token
  endpoint:
    path: /ingest/api/v1/source/{source_id}/token/rotate
    method: POST
- name: dashboard
  endpoint:
    path: /ingest/api/v1/source/{source_id}/dashboard
    method: POST
- name: list_ingest_endpoints
  endpoint:
    path: /ingest/api/v1/source/{source_id}/endpoint
    method: GET
- name: create_ingest_endpoint
  endpoint:
    path: /ingest/api/v1/source/{source_id}/endpoint
    method: POST
- name: ingest_endpoint
  endpoint:
    path: /ingest/api/v1/source/{source_id}/endpoint/{endpoint_id}
    method: GET
- name: ingest_endpoint_secret
  endpoint:
    path: /ingest/api/v1/source/{source_id}/endpoint/{endpoint_id}/secret
    method: GET
- name: rotate_ingest_endpoint_secret
  endpoint:
    path: /ingest/api/v1/source/{source_id}/endpoint/{endpoint_id}/secret/rotate
    method: POST
- name: application
  endpoint:
    path: /api/v1/app
    method: GET
    data_selector: ListResponse_ApplicationOut_
    params: {}
- name: endpoint
  endpoint:
    path: /api/v1/app/{app_id}/endpoint
    method: GET
- name: application
  endpoint:
    path: /api/v1/app
    method: POST
    data_selector: application/json
- name: get_application
  endpoint:
    path: /api/v1/app/{app_id}
    method: GET
    data_selector: application/json
- name: update_application
  endpoint:
    path: /api/v1/app/{app_id}
    method: PUT
    data_selector: application/json
- name: delete_application
  endpoint:
    path: /api/v1/app/{app_id}
    method: DELETE
    data_selector: application/json
- name: patch_application
  endpoint:
    path: /api/v1/app/{app_id}
    method: PATCH
    data_selector: application/json
- name: endpoint
  endpoint:
    path: /webhook/
    method: POST
    data_selector: records
- name: endpoint
  endpoint:
    path: /api/v1/app/{app_id}/endpoint
    method: POST
- name: get_endpoint
  endpoint:
    path: /api/v1/app/{app_id}/endpoint/{endpoint_id}
    method: GET
- name: update_endpoint
  endpoint:
    path: /api/v1/app/{app_id}/endpoint/{endpoint_id}
    method: PUT
- name: delete_endpoint
  endpoint:
    path: /api/v1/app/{app_id}/endpoint/{endpoint_id}
    method: DELETE
- name: endpoint_secret
  endpoint:
    path: /api/v1/app/{app_id}/endpoint/{endpoint_id}/secret
    method: GET
- name: rotate_endpoint_secret
  endpoint:
    path: /api/v1/app/{app_id}/endpoint/{endpoint_id}/secret/rotate
    method: POST
- name: get_endpoint_headers
  endpoint:
    path: /api/v1/app/{app_id}/endpoint/{endpoint_id}/headers
    method: GET
- name: update_endpoint_headers
  endpoint:
    path: /api/v1/app/{app_id}/endpoint/{endpoint_id}/headers
    method: PUT
- name: endpoint
  endpoint:
    path: /api/v1/app/{app_id}/endpoint/{endpoint_id}/headers
    method: PATCH
- name: replay_missing
  endpoint:
    path: /api/v1/app/{app_id}/endpoint/{endpoint_id}/replay-missing
    method: POST
    data_selector: message
    params: {}
- name: get_stats
  endpoint:
    path: /api/v1/app/{app_id}/endpoint/{endpoint_id}/stats
    method: GET
    data_selector: stats
    params: {}
- name: recover
  endpoint:
    path: /api/v1/app/{app_id}/endpoint/{endpoint_id}/recover
    method: POST
    data_selector: recover
    params: {}
- name: send_example
  endpoint:
    path: /api/v1/app/{app_id}/endpoint/{endpoint_id}/send-example
    method: POST
    data_selector: message
    params: {}
- name: event_type
  endpoint:
    path: /api/v1/event-type
    method: POST
    data_selector: eventTypeImportOpenApiOut
- name: event_type
  endpoint:
    path: /api/v1/event-type/{event_type_name}
    method: GET
    data_selector: application/json
    params: {}
- name: event_type_update
  endpoint:
    path: /api/v1/event-type/{event_type_name}
    method: PUT
    data_selector: application/json
    params: {}
- name: event_type_delete
  endpoint:
    path: /api/v1/event-type/{event_type_name}
    method: DELETE
    data_selector: application/json
    params: {}
- name: message
  endpoint:
    path: /api/v1/app/{app_id}/msg
    method: GET
    data_selector: ListResponse_MessageOut_
    params: {}
- name: create_message
  endpoint:
    path: /api/v1/app/{app_id}/msg
    method: POST
    data_selector: MessageOut
    params: {}
- name: message
  endpoint:
    path: /api/v1/app/{app_id}/msg
    method: POST
    data_selector: msg
    params: {}
- name: poller
  endpoint:
    path: /api/v1/app/{app_id}/poller/{sink_id}
    method: GET
    data_selector: poller
    params: {}
- name: message_attempt
  endpoint:
    path: /api/v1/app/{app_id}/attempt/endpoint/{endpoint_id}
    method: GET
    params: {}
- name: message_attempt_by_msg
  endpoint:
    path: /api/v1/app/{app_id}/attempt/msg/{msg_id}
    method: GET
    params: {}
- name: message_attempt
  endpoint:
    path: /api/v1/app/{app_id}/msg/{msg_id}/attempt/{attempt_id}/content
    method: DELETE
- name: resend_webhook
  endpoint:
    path: /api/v1/app/{app_id}/msg/{msg_id}/endpoint/{endpoint_id}/resend
    method: POST
- name: attempted_messages
  endpoint:
    path: /api/v1/app/{app_id}/endpoint/{endpoint_id}/msg
    method: GET
    data_selector: messages
    params:
      limit: limit
      iterator: iterator
      channel: channel
      tag: tag
      status: status
      before: before
      after: after
      with_content: with_content
      event_types: event_types
- name: attempted_destinations
  endpoint:
    path: /api/v1/app/{app_id}/msg/{msg_id}/endpoint
    method: GET
    data_selector: endpoints
    params:
      limit: limit
      iterator: iterator
- name: get_attempt
  endpoint:
    path: /api/v1/app/{app_id}/msg/{msg_id}/attempt/{attempt_id}
    method: GET
    data_selector: attempt
    params: {}
- name: expunge_content
  endpoint:
    path: /api/v1/app/{app_id}/msg/{msg_id}/attempt/{attempt_id}/content
    method: DELETE
    data_selector: content
    params: {}
- name: aggregate_app_stats
  endpoint:
    path: /api/v1/stats/usage/app
    method: POST
    data_selector: appUsageStatsOut
- name: list_integration
  endpoint:
    path: /api/v1/app/{app_id}/integration
    method: GET
    data_selector: listResponseIntegrationOut
- name: create_integration
  endpoint:
    path: /api/v1/app/{app_id}/integration
    method: POST
    data_selector: integrationOut
- name: get_integration
  endpoint:
    path: /api/v1/app/{app_id}/integration/{integ_id}
    method: GET
    data_selector: integrationOut
- name: update_integration
  endpoint:
    path: /api/v1/app/{app_id}/integration/{integ_id}
    method: PUT
    data_selector: integrationOut
- name: integration
  endpoint:
    path: /api/v1/app/{app_id}/integration/{integ_id}
    method: PUT
    data_selector: null
    params: {}
- name: delete_integration
  endpoint:
    path: /api/v1/app/{app_id}/integration/{integ_id}
    method: DELETE
    data_selector: null
    params: {}
- name: integration_key
  endpoint:
    path: /api/v1/app/{app_id}/integration/{integ_id}/key
    method: POST
- name: background_task
  endpoint:
    path: /api/v1/background-task
    method: GET
- name: operational_webhook_endpoint
  endpoint:
    path: /api/v1/operational-webhook/endpoint
    method: GET
- name: operational_webhook_endpoint
  endpoint:
    path: /api/v1/operational-webhook/endpoint
    method: POST
    data_selector: content
    params: {}
- name: get_operational_webhook_endpoint
  endpoint:
    path: /api/v1/operational-webhook/endpoint/{endpoint_id}
    method: GET
    data_selector: content
    params: {}
- name: update_operational_webhook_endpoint
  endpoint:
    path: /api/v1/operational-webhook/endpoint/{endpoint_id}
    method: PUT
    data_selector: content
    params: {}
- name: delete_operational_webhook_endpoint
  endpoint:
    path: /api/v1/operational-webhook/endpoint/{endpoint_id}
    method: DELETE
    data_selector: content
    params: {}
- name: operational_webhook_endpoint
  endpoint:
    path: /api/v1/operational-webhook/endpoint/{endpoint_id}/secret
    method: GET
    data_selector: OperationalWebhookEndpointSecretOut
- name: operational_webhook_endpoint_rotate_secret
  endpoint:
    path: /api/v1/operational-webhook/endpoint/{endpoint_id}/secret/rotate
    method: POST
    data_selector: no content
- name: operational_webhook_endpoint_headers
  endpoint:
    path: /api/v1/operational-webhook/endpoint/{endpoint_id}/headers
    method: GET
    data_selector: OperationalWebhookEndpointHeadersOut
- name: health
  endpoint:
    path: /api/v1/health
    method: GET
    data_selector: no content
- name: MessageAttemptFailingEventData
  endpoint:
    path: /components/schemas/MessageAttemptFailingEventData
    method: GET
    data_selector: data
    params: {}
- name: MessageAttemptRecoveredEventData
  endpoint:
    path: /components/schemas/MessageAttemptRecoveredEventData
    method: GET
    data_selector: data
    params: {}
- name: BackgroundTaskFinishedEvent2
  endpoint:
    path: /components/schemas/BackgroundTaskFinishedEvent2
    method: GET
    data_selector: data
    params: {}
- name: EventTypeImportOpenApiOutData
  endpoint:
    path: /EventTypeImportOpenApiOutData
    method: GET
    data_selector: data
    params: {}
- name: EventTypeUpdate
  endpoint:
    path: /EventTypeUpdate
    method: GET
    data_selector: description
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: message
  endpoint:
    path: /messages
    method: GET
    data_selector: records
- name: StreamSinkIn
  endpoint:
    path: /path/to/StreamSinkIn
    method: POST
    data_selector: events
- name: ingest_source
  endpoint:
    path: /services/data/vXX.X/sobjects/IngestSource
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: eventStream
  endpoint:
    path: /eventStream
    method: GET
- name: poller
  endpoint:
    path: /poller
    method: GET
- name: StreamSinkIn_azureBlobStorage
  endpoint:
    type: azureBlobStorage
    status: enabled
    batchSize: 100
    maxWaitSecs: 0
- name: StreamSinkIn_otelTracing
  endpoint:
    type: otelTracing
    status: enabled
    batchSize: 100
    maxWaitSecs: 0
- name: StreamSinkIn_http
  endpoint:
    type: http
    status: enabled
    batchSize: 100
    maxWaitSecs: 0
- name: StreamSinkIn_amazonS3
  endpoint:
    type: amazonS3
    status: enabled
    batchSize: 100
    maxWaitSecs: 0
- name: StreamSinkIn_googleCloudStorage
  endpoint:
    type: googleCloudStorage
    status: enabled
    batchSize: 100
    maxWaitSecs: 0
- name: background_task
  endpoint:
    path: /background_task
    method: POST
    data_selector: data
    params: {}
- name: endpoint
  endpoint:
    path: /endpoint
    method: POST
    data_selector: data
    params: {}
- name: message
  endpoint:
    path: /message
    method: POST
    data_selector: data
    params: {}
notes:
- Uses HTTP Bearer token for authorization.
- Payload sizes of up to 1MiB are supported, though it's generally a good idea to
  keep webhook payloads small, probably no larger than 40kb.
- Get your authentication token (AUTH_TOKEN) from the Svix dashboard and use it as
  part of the Authorization header.
- Previous tokens will remain valid for 48 hours after rotation.
- Trying to log out other tokens will fail.
- The importer will convert all webhooks found in the either the `webhooks` or `x-webhooks`
  top-level.
- Sent when a message delivery has failed (all of the retry attempts have been exhausted).
- Sent on a successful dispatch after an earlier failure op webhook has already been
  sent.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Payload retention period is optional and defaults to 90 days.
- Configuration for a Google Cloud Storage sink.
- Write stream events into the named bucket using the supplied Google Cloud credentials.
- Uses OAuth2 with refresh token - requires setup of connected app in api
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
errors:
- 400 Bad request
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- 409 Conflict
- 422 Validation Error
- 429 Too Many Requests
- '400: Bad request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '409: Conflict'
- '422: Validation Error'
- '429: Too Many Requests'
- '400 Bad request: Check the request parameters'
- '401 Unauthorized: Check token or credentials'
- '403 Forbidden: Check permissions'
- '404 Not Found: Verify endpoint or resource'
- '409 Conflict: Resource already exists or request conflict'
- '422 Validation Error: Check request data validity'
- '429 Too Many Requests: Rate limit exceeded'
- '400 Bad Request: Sending neither or both spec and specRaw is invalid.'
- '401 Unauthorized: Check authentication credentials.'
- '403 Forbidden: Access denied.'
- '404 Not Found: Resource not found.'
- '409 Conflict: Resource conflict.'
- '422 Validation Error: Request validation failed.'
- '429 Too Many Requests: Rate limit exceeded.'
- Validation errors have their own schema to provide context for invalid requests.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check request parameters for validity.'
- '404 Not Found: Ensure the endpoint URL is correct.'
auth_info:
  mentioned_objects:
  - HTTPBearer
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.eu.svix.com
  auth:
    type: HTTPBearer
source_metadata: null
