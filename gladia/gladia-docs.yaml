resources:
- name: upload
  endpoint:
    path: /v2/upload
    method: POST
    data_selector: audio_url
- name: pre_recorded
  endpoint:
    path: /v2/pre-recorded
    method: POST
    data_selector: id
- name: pre-recorded
  endpoint:
    path: /v2/pre-recorded
    method: POST
    data_selector: transcription
    params: {}
- name: diarization
  endpoint:
    path: /diarization
    method: POST
    data_selector: transcription
    params: {}
- name: upload
  endpoint:
    path: /v2/upload
    method: POST
    data_selector: audio_url
- name: transcription
  endpoint:
    path: /v2/pre-recorded
    method: POST
    data_selector: id
- name: live_session
  endpoint:
    path: /v2/live
    method: POST
    data_selector: id
    params: {}
- name: final_results
  endpoint:
    path: /v2/live/:id
    method: GET
    data_selector: result
    params: {}
- name: live
  endpoint:
    path: /v2/live
    method: POST
- name: live
  endpoint:
    path: /v2/live
    method: POST
    data_selector: url
- name: translation
  endpoint:
    path: /
    method: POST
    data_selector: translation
- name: translation
  endpoint:
    path: /translation
    method: POST
    data_selector: translation
    params: {}
- name: transcription
  endpoint:
    path: /v2/transcription
    method: GET
    data_selector: records
    params: {}
- name: upload
  endpoint:
    path: /v2/upload
    method: POST
    data_selector: audio_url
- name: init_transcription
  endpoint:
    path: /v2/pre-recorded
    method: POST
    data_selector: id
- name: get_result
  endpoint:
    path: /v2/pre-recorded/get
    method: GET
- name: list_transcriptions
  endpoint:
    path: /v2/pre-recorded/list
    method: GET
- name: delete_transcription
  endpoint:
    path: /v2/pre-recorded/delete
    method: DEL
- name: upload
  endpoint:
    path: /v2/upload
    method: POST
    data_selector: ''
    params: {}
- name: init_transcription
  endpoint:
    path: /v2/pre-recorded
    method: POST
    data_selector: ''
    params: {}
- name: get_transcription_result
  endpoint:
    path: /v2/pre-recorded/get
    method: GET
    data_selector: ''
    params: {}
- name: list_transcriptions
  endpoint:
    path: /v2/pre-recorded/list
    method: GET
    data_selector: ''
    params: {}
- name: delete_transcription
  endpoint:
    path: /v2/pre-recorded/delete
    method: DEL
    data_selector: ''
    params: {}
- name: live_transcription
  endpoint:
    path: /v2/live
    method: POST
    data_selector: ''
    params: {}
- name: get_result
  endpoint:
    path: /v2/live/:id
    method: GET
    data_selector: ''
    params: {}
- name: live_transcription
  endpoint:
    path: /v2/live
    method: POST
    data_selector: id
    params: {}
- name: get_result
  endpoint:
    path: /v2/live/:id
    method: GET
    data_selector: result
    params: {}
notes:
- Gladia offers 10 Hours of free audio transcription per month if you want to test
  the service!
- Endpoint for uploading files requires multipart/form-data content-type.
- Endpoint for transcribing only accepts application/json as Content-Type.
- Diarization is enabled by sending the diarization parameter in the transcription
  request.
- In V2, the HTTP connection is not kept open; results are accessed via a transcription
  ID and result URL.
- Ensure to specify the correct audio properties for real-time sessions.
- custom_metadata cannot be longer than 2000 characters when stringified.
- V2 offers more features and has significant improvements in latency compared to
  V1.
- Configuration properties have changed from V1 to V2.
- Uses OAuth2 authentication
- The maximum length of audio that can be transcribed in a single request is currently
  135 minutes.
- Direct YouTube links are limited to 120 minutes instead of 135 minutes.
- Audio files must not exceed 1000 MB in size.
- This feature is on Beta state.
- You can translate your transcription to multiples languages in a single API call.
- Translation feature is in Beta state.
- With your API key, youâ€™re now ready to use Gladia APIs.
- Use 'application/json' as Content-Type for POST requests to /v2/pre-recorded.
- Specify the number of channels in your API configuration.
- Specify encoding, sample_rate, bit_depth, and channels for audio stream.
errors:
- '401 Unauthorized: Check if the API key is valid.'
- 'Invalid API Key: Check your API key'
- 'Rate limit exceeded: Throttle API calls'
- '401 Unauthorized: Check your API key.'
- '400 Bad Request: Check your request payload.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.gladia.io
  auth:
    type: apikey
    location: header
    header_name: x-gladia-key
source_metadata: null
