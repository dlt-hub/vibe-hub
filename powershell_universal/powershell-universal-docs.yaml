resources:
- name: user
  endpoint:
    path: /api/users
    method: GET
    data_selector: users
- name: announcements
  endpoint:
    path: /api/announcements
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: data
    params: {}
- name: Test
  endpoint:
    path: /Test
    method: GET
    data_selector: Data
    params: {}
- name: lsass
  endpoint:
    path: /lsass
    method: GET
    data_selector: Content
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: $Body
    params: {}
- name: LAPSLookup
  endpoint:
    path: /LAPSLookup
    method: GET
- name: Home
  endpoint:
    path: /Home
    method: GET
- name: Administrators
  endpoint:
    path: /Administrators
    method: GET
- name: Operators
  endpoint:
    path: /Operators
    method: GET
- name: User
  endpoint:
    path: /api/user
    method: GET
    data_selector: user
    params: {}
- name: signin
  endpoint:
    path: /api/v1/signin
    method: POST
    data_selector: null
    params: {}
- name: variable
  endpoint:
    path: /api/v1/variable
    method: POST
    data_selector: null
    params: {}
- name: signin
  endpoint:
    path: /api/v1/signin
    method: POST
    data_selector: ''
    params: {}
- name: variable
  endpoint:
    path: /api/v1/variable
    method: POST
    data_selector: ''
    params: {}
- name: feedback
  endpoint:
    path: /invoke-udredirect
    method: POST
    data_selector: response
- name: Protect Section
  endpoint:
    path: /apps/components/utilities/protect-section
    method: GET
    data_selector: content
    params: {}
- name: UDNivoChart
  endpoint:
    path: /api/udnivochart
    method: POST
    data_selector: chartData
    params: {}
- name: jwt
  endpoint:
    path: /api/jwt
    method: POST
    data_selector: token
    params: {}
- name: Protect Section
  endpoint:
    path: /apps/components/utilities/protect-section
    method: GET
    data_selector: content
- name: eptest_one
  endpoint:
    path: /api/eptest/one
    method: GET
- name: eptest_two
  endpoint:
    path: /api/eptest/two
    method: GET
- name: UDNivoChart
  endpoint:
    path: /UDNivoChart
    method: POST
    data_selector: records
- name: appsettings
  endpoint:
    path: /api/appsettings
    method: GET
    data_selector: settings
    params: {}
- name: eptest
  endpoint:
    path: /api/eptest/one
    method: GET
- name: eptest
  endpoint:
    path: /api/eptest/two
    method: GET
- name: onedrive_sharepoint
  endpoint:
    path: /t/alternative-options-to-publish-files-instead-of-assets-folder/13000
    method: GET
    data_selector: views
    params: {}
- name: Universal.Server
  endpoint:
    path: /services/data/vXX.X/sobjects/Universal.Server
    method: GET
    data_selector: records
    params: {}
- name: test_endpoint
  endpoint:
    path: /test
    method: GET
- name: ssh_session
  endpoint:
    path: /ssh/session
    method: POST
    data_selector: output
    params: {}
- name: job_status
  endpoint:
    path: /t/job-status-error-event-trigger
    method: GET
    data_selector: status
    params: {}
- name: custom_module
  endpoint:
    path: /api/custom_module
    method: POST
    data_selector: data
    params: {}
- name: Show-CBLModalPasswordReset
  endpoint:
    path: /functions/Show-CBLModalPasswordReset
    method: POST
    data_selector: results
- name: script_folders
  endpoint:
    path: /t/vs-code-powershell-universal-extension-script-subfolders-not-respected/12268
    method: GET
    data_selector: views
    params: {}
- name: grid_layout
  endpoint:
    path: /api/grid-layout
    method: POST
    data_selector: layout
    params: {}
- name: CustomAction
  endpoint:
    path: /path/to/customaction
    method: GET
    data_selector: customActions
    params: {}
- name: grid_layout
  endpoint:
    path: /api/grid_layout
    method: POST
    data_selector: content
    params: {}
- name: Claims
  endpoint:
    path: /t/azure-small-subpage-to-view-claims
    method: GET
    data_selector: claims
    params: {}
- name: ud_button
  endpoint:
    path: /t/ud-button-to-refresh-the-page
    method: GET
    data_selector: posts
    params: {}
- name: button
  endpoint:
    path: /api/button
    method: GET
    data_selector: buttons
- name: vMon services
  endpoint:
    path: /rest/appliance/vmon/service
    method: GET
    data_selector: value
- name: Service Status
  endpoint:
    path: /rest/appliance/vmon/service
    method: GET
    data_selector: value
- name: HealthcheckData
  endpoint:
    path: /HealthcheckData
    method: GET
    data_selector: RiskRules
    params: {}
- name: dynamic_input_fields
  endpoint:
    path: /t/create-dynamic-input-select-fields/11195
    method: GET
    data_selector: posts
- name: UDSweetAlert
  endpoint:
    path: /packages/UniversalDashboard.UDSweetAlert
    method: GET
    data_selector: records
    params: {}
- name: calendar
  endpoint:
    path: /Install-module/UniversalDashboard.UD-Calendar
    method: GET
    data_selector: records
    params: {}
- name: UDSweetAlert
  endpoint:
    path: /UniversalDashboard/UDSweetAlert
    method: POST
    data_selector: response
    params: {}
- name: calendar
  endpoint:
    path: /api/calendar
    method: GET
    data_selector: data
    params: {}
- name: dashboard
  endpoint:
    path: /pass-in-query-string-parameter
    method: GET
    data_selector: posts
    params: {}
- name: New Component
  endpoint:
    path: /t/new-multi-or-single-select-component-for-universaldashboard/1902
    method: GET
    data_selector: ''
    params: {}
- name: PackageTest
  endpoint:
    path: /PackageTest.ps1
    method: POST
    data_selector: output
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Network
  endpoint:
    path: /scripts/PingHostV2.1.ps1
    method: GET
    data_selector: records
- name: Launchers
  endpoint:
    path: /scripts/PackageTest.ps1
    method: GET
    data_selector: records
- name: PythonScriptError
  endpoint:
    path: /t/python-cant-find-file/10638
    method: GET
    data_selector: posts
    params: {}
- name: job_output
  endpoint:
    path: /jobs
    method: GET
    data_selector: JobOutput
    params: {}
- name: lockout
  endpoint:
    path: /lockout
    method: GET
    data_selector: null
    params: {}
- name: form
  endpoint:
    path: /api/forms
    method: GET
    data_selector: forms
    params:
      incremental: updated_at
- name: confirm_modal
  endpoint:
    path: /create/confirm_modal
    method: POST
    data_selector: result
    params:
      text: Are you sure?
- name: Invoke-PSUScript
  endpoint:
    path: /invoke-psuscript
    method: POST
    data_selector: output
    params: {}
- name: Get-PSUJob
  endpoint:
    path: /get-psu-job
    method: GET
    data_selector: job
    params: {}
- name: lockout
  endpoint:
    path: /lockout
    method: GET
    data_selector: records
- name: New-UDConfirm
  endpoint:
    path: /New-UDConfirm
    method: POST
    data_selector: result
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: MemoryMappedFile
  endpoint:
    path: /using-memorymappedfile
    method: POST
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Contact Us page
  endpoint:
    path: /contact-us
    method: GET
- name: feature_request_section
  endpoint:
    path: /t/feature-request-section/133
    method: GET
    data_selector: posts
    params: {}
- name: about_feature_requests_category
  endpoint:
    path: /t/about-the-feature-requests-category/135
    method: GET
    data_selector: posts
    params: {}
- name: solved_plugin_for_forums
  endpoint:
    path: /t/solved-plugin-for-forums/4593
    method: GET
    data_selector: posts
    params: {}
- name: about_announcements_category
  endpoint:
    path: /t/about-the-announcements-category/22
    method: GET
    data_selector: posts
    params: {}
- name: about_universal_dashboard_help_category
  endpoint:
    path: /t/about-the-universal-dashboard-help-category/12
    method: GET
    data_selector: posts
    params: {}
- name: malware_analysis
  endpoint:
    path: /api/malware_analysis
    method: POST
    data_selector: results
    params: {}
- name: test_endpoint
  endpoint:
    path: /test/:Param1/:Param2
    method: POST
- name: broken
  endpoint:
    path: /broken
    method: GET
    data_selector: null
    params: {}
- name: params
  endpoint:
    path: /params/:test
    method: GET
    data_selector: null
    params: {}
- name: noparams
  endpoint:
    path: /noparams/:test
    method: GET
    data_selector: null
    params: {}
- name: dns_cname
  endpoint:
    path: /dns/cname
    method: PUT
    data_selector: null
    params: {}
- name: dns_cnameswap
  endpoint:
    path: /dns/cnameswap
    method: POST
    data_selector: null
    params: {}
- name: user
  endpoint:
    path: /user
    method: POST
    data_selector: null
    params:
      mandatory: userName
- name: test_endpoint
  endpoint:
    path: /test/:Param1/:Param2
    method: POST
    data_selector: body
    params:
      required: 'true'
- name: broken
  endpoint:
    path: /broken
    method: GET
    data_selector: records
    params: {}
- name: params
  endpoint:
    path: /params/:test
    method: GET
    data_selector: records
    params: {}
- name: noparams
  endpoint:
    path: /noparams/:test
    method: GET
    data_selector: records
    params: {}
- name: MyObject
  endpoint:
    path: /external-endpoint-content
    method: POST
    data_selector: MyObject
    params:
      Required: 'true'
      Description: UserAccount to exit
      Content: 'application/json: MyObject'
- name: user
  endpoint:
    path: /user
    method: POST
    data_selector: null
    params:
      Mandatory: userName
- name: MyObject
  endpoint:
    path: ''
    method: POST
    data_selector: ''
    params: {}
- name: PropertyTest
  endpoint:
    path: PropertyTest
    method: GET
    data_selector: '200'
    params: {}
- name: MyReturnType
  endpoint:
    path: /
    method: GET
    data_selector: application/json
    params: {}
notes:
- Requires setup of connected app in PowerShell Universal
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in PowerShell Universal
- Requires OAuth2 authentication setup.
- When I call the API like this on my laptop, I see lsass steady on about 14% usage.
- Same here. I do not have HTTPS configured.
- New-UDUpload control not working if I put it in one of the pages in an App.
- Hosted IIS environment
- Capture the User who is logged in to create an audit log.
- Frequent database locked errors.
- Issues with scheduled tasks not running according to schedules.
- Seeing frequent database locked errors.
- Scheduled tasks not running according to the schedules.
- Some objects like Contact may return nulls in deeply nested fields
- Different automations and integrations have access to different things, and not
  everyone should see everything.
- Most of that is addressed with the new ‘Strict’ mode in v5.
- It appears it is not possible to create variables in a One-Way Git Sync environment
  even via Api.
- When using the Invoke-UDRedirect code on iPhone, tapping on the link does not do
  anything.
- Allows for proper token-based authentication from AzureAD resources.
- When using the Invoke-UDRedirect command on iPhone, tapping on the link does not
  do anything.
- Protect sections based on roles.
- New-UDform does not have a -trustedCertificate parameter.
- You can use the -height parameter to control the size of the pie chart.
- JWT Validation built in
- 'Example: Protect-UDSection -Role @(''admin'',''poweruser'') -Content { any UI elements
  here }'
- I just wanted to document that this is happening on this version, if it is in fact
  some sort of bug.
- Try to make a connect-psuserver before using the New-UDForm.
- If your script is in a folder, make sure you have the full path, not just the script
  name.
- 'Faulting application name: Universal.Server.exe, version: 1.0.0.0'
- 'Faulting module name: coreclr.dll, version: 9.0.925.41916'
- It’s not impacting me in any way currently, and there’s still plenty of free memory
  available on the box but it is curious that it’s consistently higher on one node
  since the update.
- Getting the following error when trying to access Automation > Scripts.
- You can check the PSU logs in %ProgramData%\PowerShellUniversal.
- I wouldn’t advise any type of application install on a domain controller.
- There is a -silent param you can pass to wait-psujob
- You can save your credentials in variables within PSU.
- Security is very strict at our place.
- Uses Integrated Windows Authentication — does not manage locally stored credentials.
- 'Fatal error starting PowerShell Universal. System.ArgumentNullException: Value
  cannot be null. (Parameter ‘s’)'
- Scripts can be set to trigger notifications on error status.
- Requires understanding of PowerShell modules and scoping issues.
- 5.4 introduces a least busy load balancer to evenly distribute.
- RunOnInstall and RunOnUninstall have different command structures
- Changes in group membership aren’t instantly replicated to all domain controllers.
- Consider displaying the timestamp of when the membership expires.
- Functions defined within other functions may cause scoping issues.
- This is usually a permission or security thing. Antivirus programs can cause this
  that use stuff like ASMI or Windows will do it if the script files are not unblocked.
- Folders aren’t displayed and files with the same names are both visible without
  a way to differentiate them.
- Content is the content of the page. It should be a script block.
- Running a different type of command for RunOnInstall vs RunOnUninstall may indicate
  a bug.
- We should also have sorting options for that page.
- This forum is primarily for PowerShell Universal and PowerShell Pro Tools questions,
  so you likely won’t get much C# help.
- PSU does not return secret values out of the platform
- The local VS PowerShell extension doesn’t know about all the PSU configuration,
  so it just executes the script like any other local script.
- Currently, PowerShell Universal does not allow uploading or storing certificates
  as variables. This forces administrators to store certificates externally and inject
  them at runtime, which adds complexity and increases the risk of inconsistent deployments.
- 'Don’t forget to set the following key / value in your app. manifest: "groupMembershipClaims":
  "SecurityGroup" if you don’t see your claims membership right way in the Azure Active
  Directory / App Registration / Your app / Manifest blade.'
- PSU does not return secret values out of the platform.
- You'd have to use that workaround.
- In version 5.5.2 PSU gives me the path /x:/folder/repository/dashboards/main/licenses/changexxlicenses
  which breaks the functionality in pages where we use the old relative paths.
- Requires setup of connected app in api
- Currently still using PSUv4, migration to v5 is planned in the coming weeks.
- Currently, PowerShell Universal does not allow uploading or storing certificates
  as variables.
- This forces administrators to store certificates externally and inject them at runtime,
  which adds complexity and increases the risk of inconsistent deployments.
- Inside a Modal, a UDSelect with loads of data will show all the data in front of
  the modal, so it can expand way past it.
- An auto complete however, doesn’t go infront of the modal and the modal doesn’t
  expand.
- 'Don’t forget to set the following key / value in your app. manifest ''groupMembershipClaims'':
  ''SecurityGroup'''
- The isDev constant does not work, it’s not reading the env variable correctly.
- Updating the example component to have a valid React-Icon could be helpful.
- You can’t execute Javascript from these OnClick scriptpoint handler.
- In PSU capitalization matters.
- The build function doesn’t delete the public folder, so if you don’t manually delete
  it you have to track which one is the current.
- The admin console sometimes gives an Unauthorized error, possibly due to CSRF protection.
- Using a CustomAction in the MSI may help warn users about older major versions.
- Hover effect added to the card.
- Uses OpenId with Access Token
- The problem I have with MSFT modules is dependencies and frequent breaking changes.
- On digging deeper im seeing this is in the changelog notes for the VSCode Extension,
  so this request is moot - checking why I don’t have that
- Uses OAuth2 — requires setup of API credentials
- FilterType ‘select’ only has options for the partial dataset.
- Static Options for Select Filters
- The Universal Dashboard web server will become its own executable.
- There will be a smaller performance hit so we hope to introduce some request caching
  and performance improvements.
- Uses REST API to communicate with Azure services.
- Supports OpenId with Access Token.
- The output of the REST call includes keys for services and their states.
- 'Never mind: I found the solution here: https://docs.powershelluniversal.com/v4-beta/userinterfaces/components/data-display/table
  §Static Options for Select Filters'
- PingCastle is an open source Active directory Risk analyzer/Audit tool.
- Reports can be parsed for data storage.
- Dynamic input-select fields can be created using New-UDTextbox and New-UDSelect.
- User can add or remove fields dynamically.
- This is a much wanted module - I have been using Modal’s for this same function
  but this is nicely wrapped.
- This calendar should be able to have time-ranges, and show icons for events etc.
- Upgrading to the latest release resolved the issue.
- Try put this code in your UDTheme file
- '''div#app.app'' = @{ BackgroundColor = ''#333333'' ''align-items'' = ''center''
  }'
- UDDashboard = @{ BackgroundColor = '#333333' FontColor = '#FFFFF' width = '1080px'
  }
- Powershell Universal is a completly different product and you cannot upgrade from
  Universal Dashboard to PSU.
- You either need to roll back your powershell version to a working version or try
  to debug the root cause of the issue.
- This component can be used for single selection as well as multi-selection.
- Timezone troubleshooting is necessary.
- Try put this code in your UDTheme file 'div#app.app' = @{ BackgroundColor = '#333333'
  'align-items' = 'center' } UDDashboard = @{ BackgroundColor = '#333333' FontColor
  = '#FFFFF' width =  '1080px' }.
- Ensure that you are calling this from an endpoint. Content is executed when you
  start the dashboard. Endpoint is executed when the user visits the page.
- The component is responsive and can load a large number of items quickly.
- Dot-sourced subscripts must be included for packaging.
- Uses Azure Log Analytics to store logs
- You’ll need to ensure that you are calling this from an endpoint. Content is executed
  when you start the dashboard. Endpoint is executed when the user visits the page.
- Currently not possible to access query string values directly; values are accessed
  via a $Query dictionary.
- You must manually configure the Package.psd1 file for each script you want to convert
  to exe.
- The bundle setting needs to be selected in order to include multiple PS1s in a single
  executable.
- In PSU, hover your user name and click tokens.
- Click create new token and set the identity and role.
- PSScriptPad was replaced with a more basic Forms Designer.
- Some scripts may not package correctly due to dot-sourcing
- The original PowerShell script itself is clean and does not trigger any malware
  warnings when uploaded or scanned. The issue seems to arise only after converting
  it to an EXE.
- The packager uses the package.psd1 file to construct the exe.
- Out-GridView may fail when run from within packaged EXE Form application.
- Can generate a token in PSU by hovering over user name and clicking tokens.
- In VS Code, you need to paste your app token in the App Token field.
- PSScriptPad does not integrate with VS Code as previously documented.
- 'This was also reported here: PowerShell Pro Tools is still starting.'
- Occurs on current extension and rolled back to 2023.12
- Rolling back to 2023.09 and it works. Tested a few versions prior to 2023.09 and
  all worked, all versions from 2023.12.0 fail.
- Some objects may return nulls in deeply nested fields
- It appears to be an issue with the path in the environment not expecting a full
  path.
- It may be better to just launch the Python script from inside of a PowerShell script
  and avoid this issue altogether.
- I’ve seen this problem when persistent terminals were enabled.
- Failed to start external PowerShell process to determine modules. The system cannot
  find the file specified
- You can create your own themes by adding JSON files to the theme folder.
- It works by copying my custom json file to Modules\Universal\themes, my new theme
  then appears.
- Rolling back to 2023.09 and it works.
- Tested a few versions prior to 2023.09 and all worked, all versions from 2023.12.0
  fail.
- An error occurred trying to start process 'python' with working directory C:\ProgramData\UniversalAutomation\Repository'.
- Invoke-PSUScript might not return output as expected.
- Get-PSUJob provides the status of the job.
- Ensure the API key is kept secure
- Be aware of rate limits on API calls
- The Az PowerShell module is based on the .NET Standard library and works with PowerShell
  7.2 and later on all platforms including Windows, Linux, and macOS.
- It's also compatible with Windows PowerShell 5.1.
- The function New-UDConfirm uses a session variable to store the result.
- Show-UDModal does not block execution, which can lead to null results on the first
  call.
- Collecting user input/scenarios as to the challenges of not having PowerShell 7
  ship in Windows and reasons why or why not PowerShell 7.x should ship in Windows.
- Instability (through regressions and not quite implemented features) detracts from
  the success that we all can have using Universal.
- Invoke-PSUScript may not provide output directly.
- Get-PSUJob can be used to check job status.
- Using MemoryMappedFile with PowerShell Core.
- When running from a powershell prompt I get output in a tabular format.
- When I run it from the API endpoint, I get output in JSON format.
- It’s also compatible with Windows PowerShell 5.1.
- Shows a confirm object in a modal, returns either true or false.
- Self updating script may not load module changes on the first run after update.
- PowerShell Universal is a fantastic platform and a game-changer for users.
- Instability through regressions and not quite implemented features detracts from
  success.
- This is a draft. I will pull this down until finished.
- Download page may show version as a date instead of version number
- Refreshing the page usually fixes version display issues
- The installer will not allow to agree with the EULA.
- Some users are experiencing issues when upgrading.
- Some SSL issues may occur when accessing the site without the www subdomain.
- There is a 525 error when attempting to access without the www subdomain.
- Downloads page highlights the 1.5 version, makes it seem like the one to download
- Only affects the powershell universal DL page, the general download page is fine
- When the Forgot Password form is submitted for an account not found within the Auth0
  authentication provider, it does not send an email.
- Added support for finding and installing prerelease modules
- Added MaxSize to avoid missing event log records if their message sizes too big
- Changed event log IDs according to the event type
- Downloads page only shows betas, and has the v3 beta labeled LTS
- The blocking procedure is all based on static script analysis so we will need to
  update the rule to improve this particular case.
- During troubleshooting, it will be helpful to know the details of all of the rules
  that were installed so they can be verified.
- When the Forgot Password form is submitted without an existing account, it does
  not send an email.
- The FastSpring store link is broken here
- Gives an SSL error for the certificate NET::ERR_CERT_COMMON_NAME_INVALID
- Changed event log IDs
- The help in 2.4 is messed up and that's why you don't see it for many cmdlets.
- 2.5 will have MUCH improved help. It's in the process.
- The ability to generate docs is enabled but there currently isn’t a place to put
  that information.
- The Universal Dashboard software documentation is better than most in this regard.
- 2.5 will have MUCH improved help.
- The API does not work if the content is not in the main .endpoints.ps1 script.
- 'Expected behavior: output definition appears under the endpoint on the swagger
  docs.'
- 'Current behavior: output definition appears under ''schemas'' on the swagger docs.'
- In 3.7, we're adding no-touch regions to PSU config files so that you can put whatever
  you want in them.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Invalid token or insufficient scope.'
- 'Error creating contact: No provisioning handler is installed.'
- Role match issue in if else statement
- 'SQLite Error 5: ''database is locked''.'
- Failed to report progress.
- 'SQLite Error 5: ''database is locked'''
- Failed to report progress
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- gRPC errors when there’s some sort of permission problem.
- '400 Bad Request: The remote server returned an error'
- '400 Bad Request: The remote server returned an error.'
- 'DbUpdateConcurrencyException: The database operation was expected to affect 1 row(s),
  but actually affected 0 row(s);'
- The SSL connection could not be established, see inner exception.
- The remote certificate was rejected by the provided RemoteCertificateValidationCallback.
- 'APPCRASH: Universal.Server.exe stopped working'
- 'ERR_TOO_MANY_REDIRECTS: This error indicates that too many redirects occurred.'
- '414 URI Too Long: The request URI is too long.'
- 'DbUpdateConcurrencyException: The database operation was expected to affect 1 row(s),
  but actually affected 0 row(s)'
- groom job health check failure
- '403 Forbidden: Access denied'
- 'ERR_TOO_MANY_REDIRECTS: Check for infinite redirect loops'
- '414 URI Too Long: Ensure the URL is not excessively long'
- 'No active requests allowed: If a second user tries to use the app in the interim,
  it should ask them to try again later.'
- 'FATAL: Fatal error starting PowerShell Universal.'
- 'Error: Job status returns as ''error'' instead of ''failed''.'
- The term is not recognized as a name of a cmdlet, function etc.
- 'System.Management.Automation.PSSecurityException: File cannot be loaded because
  you opted not to run this software now.'
- 'System.UnauthorizedAccessException: File cannot be loaded because you opted not
  to run this software now.'
- 'Something went wrong and in the bottom right of my IDE, I get this message:'
- 'PSSecurityException: File cannot be loaded because you opted not to run this software
  now.'
- Get-PSUScript is not recognized as a known function.
- Get-PSUScript is not recognized as a known function
- 'Minified React error #130: Element type is invalid: expected a string (for built-in
  components) or a class/function (for composite components) but got: undefined.'
- '401 Unauthorized: Check API authentication details.'
- 'Error rendering component (mu-transfer-list) TypeError: e.item.filter is not a
  function'
- Self referencing loop detected for property ‘Value’ with type ‘System.Management.Automation.PSParameterizedProperty’.
  Path ‘content[0].options[0].Item’.
- You will have to re code your pages because the cmdlts in PSU is not the same as
  Universal Dashboard 2.9.0.
- Self referencing loop detected for property ‘Value’ with type ‘System.Management.Automation.PSParameterizedProperty’.
  Path ‘content[0].options[0].Item’
- 'Script not found: OK'
- Missing '=' operator after key in hash literal.
- 'SCRIPT_NOT_FOUND: Ensure the script path is correct'
- 'PACKAGING_FAILED: Check the configuration in package.psd1'
- Attempt by method ‘Microsoft.Management.UI.Internal.InnerListColumn…ctor(Microsoft.Management.UI.Internal.UIPropertyGroupDescription,
  Boolean, Boolean)’ to access method ‘System.Management.Automation.Internal.GraphicalHostReflectionWrapper.EscapeBinding(System.String)’
  failed.
- Failed to start external PowerShell process to determine modules. The system cannot
  find the file specified
- System.BadImageFormatException
- An error occurred trying to start process 'python' with working directory C:\ProgramData\UniversalAutomation\Repository'.
  The system cannot find the file specified.
- 'System.BadImageFormatException: The process was terminated due to an unhandled
  exception.'
- 'can''t open file ''C:\ProgramData\UniversalAutomation\Repository\{scriptPath}'':
  [Errno 2] No such file or directory'
- No output from Invoke-PSUScript.
- Job status may not reflect until completion.
- '400 Bad Request: Check request format and parameters'
- '403 Forbidden: Verify API key and permissions'
- '404 Not Found: Endpoint may have changed or does not exist'
- 'Method not found: ''Void Azure.Data.Tables.TableServiceClient..ctor(System.Uri,
  Azure.Core.TokenCredential, Azure.Data.Tables.TableClientOptions)'''
- Returns null on the first call due to non-blocking modal.
- Output may not be available until job completion.
- SystemHealth process may not terminate as expected.
- '525: SSL handshake failed'
- 'CmdletInvocationException: AuthorizationManager check failed'
- Unfortunately, I don’t think the built-in rules will show up in Get-PSPConfiguration
  like that.
- 'SSL_ERROR: Check the certificate configuration'
- '404: Not Found'
- '500: Internal Server Error'
- A parameter cannot be found that matches parameter name 'body'.
- '400: The user account is null or empty or failed to invoke the pending exit script'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://powershelluniversal.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
