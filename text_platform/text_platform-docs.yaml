resources:
- name: customer_token
  endpoint:
    path: /v2/customer/token
    method: POST
    data_selector: access_token
    params:
      grant_type: cookie
- name: identity_transfer
  endpoint:
    path: /v2/customer/identity_transfer
    method: POST
    data_selector: identity_transfer_token
- name: chats
  endpoint:
    path: /agent/action/list_chats
    method: POST
- name: threads
  endpoint:
    path: /agent/action/list_threads
    method: POST
- name: chat
  endpoint:
    path: /agent/action/get_chat
    method: POST
- name: archives
  endpoint:
    path: /agent/action/list_archives
    method: POST
- name: start_chat
  endpoint:
    path: /agent/action/start_chat
    method: POST
- name: resume_chat
  endpoint:
    path: /agent/action/resume_chat
    method: POST
- name: deactivate_chat
  endpoint:
    path: /agent/action/deactivate_chat
    method: POST
- name: follow_chat
  endpoint:
    path: /agent/action/follow_chat
    method: POST
- name: unfollow_chat
  endpoint:
    path: /agent/action/unfollow_chat
    method: POST
- name: list_chats
  endpoint:
    path: /agent/action/list_chats
    method: POST
    data_selector: chats_summary
    params:
      filters: {}
- name: list_threads
  endpoint:
    path: /agent/action/list_threads
    method: POST
    data_selector: threads
    params:
      chat_id: required
- name: get_chat
  endpoint:
    path: /agent/action/get_chat
    method: POST
    data_selector: thread
    params:
      chat_id: required
- name: list_archives
  endpoint:
    path: /agent/action/list_archives
    method: POST
    data_selector: archives
    params: {}
- name: list_archives
  endpoint:
    path: /v3.6/agent/action/list_archives
    method: POST
    data_selector: chats
    params: {}
- name: start_chat
  endpoint:
    path: /v3.6/agent/action/start_chat
    method: POST
    data_selector: chat_id
    params: {}
- name: resume_chat
  endpoint:
    path: /v3.6/agent/action/resume_chat
    method: POST
    data_selector: thread_id
    params: {}
- name: deactivate_chat
  endpoint:
    path: /v3.6/agent/action/deactivate_chat
    method: POST
    data_selector: ''
    params: {}
- name: follow_chat
  endpoint:
    path: /v3.6/agent/action/follow_chat
    method: POST
    data_selector: ''
    params: {}
- name: unfollow_chat
  endpoint:
    path: /v3.6/agent/action/unfollow_chat
    method: POST
    data_selector: ''
    params: {}
- name: transfer_chat
  endpoint:
    path: /v3.6/agent/action/transfer_chat
    method: POST
    data_selector: null
    params: {}
- name: add_user_to_chat
  endpoint:
    path: /v3.6/agent/action/add_user_to_chat
    method: POST
    data_selector: null
    params: {}
- name: remove_user_from_chat
  endpoint:
    path: /v3.6/agent/action/remove_user_from_chat
    method: POST
    data_selector: null
    params: {}
- name: send_event_preview
  endpoint:
    path: /v3.6/agent/action/send_event_preview
    method: POST
    data_selector: null
    params: {}
- name: send_event
  endpoint:
    path: /v3.6/agent/action/send_event
    method: POST
    data_selector: null
    params: {}
- name: upload_file
  endpoint:
    path: /v3.6/agent/action/upload_file
    method: POST
    data_selector: null
    params: {}
- name: send_rich_message_postback
  endpoint:
    path: /v3.6/agent/action/send_rich_message_postback
    method: POST
    data_selector: null
    params: {}
- name: update_chat_properties
  endpoint:
    path: /v3.6/agent/action/update_chat_properties
    method: POST
- name: delete_chat_properties
  endpoint:
    path: /v3.6/agent/action/delete_chat_properties
    method: POST
- name: update_thread_properties
  endpoint:
    path: /v3.6/agent/action/update_thread_properties
    method: POST
- name: delete_thread_properties
  endpoint:
    path: /v3.6/agent/action/delete_thread_properties
    method: POST
- name: update_event_properties
  endpoint:
    path: /v3.6/agent/action/update_event_properties
    method: POST
- name: delete_event_properties
  endpoint:
    path: /v3.6/agent/action/delete_event_properties
    method: POST
- name: tag_thread
  endpoint:
    path: /v3.6/agent/action/tag_thread
    method: POST
- name: untag_thread
  endpoint:
    path: /v3.6/agent/action/untag_thread
    method: POST
- name: get_customer
  endpoint:
    path: /agent/action/get_customer
    method: POST
    data_selector: id
    params: {}
- name: update_customer
  endpoint:
    path: /agent/action/update_customer
    method: POST
    data_selector: id
    params: {}
- name: ban_customer
  endpoint:
    path: /agent/action/ban_customer
    method: POST
    data_selector: id
    params: {}
- name: follow_customer
  endpoint:
    path: /agent/action/follow_customer
    method: POST
    data_selector: id
    params: {}
- name: unfollow_customer
  endpoint:
    path: /agent/action/unfollow_customer
    method: POST
    data_selector: id
    params: {}
- name: set_routing_status
  endpoint:
    path: /agent/action/set_routing_status
    method: POST
    data_selector: status
    params: {}
- name: list_routing_statuses
  endpoint:
    path: /agent/action/list_routing_statuses
    method: POST
    data_selector: filters
    params: {}
- name: mark_events_as_seen
  endpoint:
    path: /agent/action/mark_events_as_seen
    method: POST
    data_selector: ''
    params: {}
- name: send_thinking_indicator
  endpoint:
    path: /agent/action/send_thinking_indicator
    method: POST
    data_selector: ''
    params: {}
- name: send_typing_indicator
  endpoint:
    path: /agent/action/send_typing_indicator
    method: POST
    data_selector: ''
    params: {}
- name: multicast
  endpoint:
    path: /agent/action/multicast
    method: POST
    data_selector: ''
    params: {}
- name: list_agents_for_transfer
  endpoint:
    path: /agent/action/list_agents_for_transfer
    method: POST
    data_selector: ''
    params: {}
- name: List License Properties
  endpoint:
    path: /list_license_properties
    method: GET
    data_selector: records
    params:
      organization_id: string
- name: List Group Properties
  endpoint:
    path: /list_group_properties
    method: GET
    data_selector: records
    params:
      organization_id: string
- name: Get Dynamic Configuration
  endpoint:
    path: /get_dynamic_configuration
    method: GET
    data_selector: records
    params:
      organization_id: string
- name: Get Configuration
  endpoint:
    path: /get_configuration
    method: GET
    data_selector: records
    params:
      organization_id: string
- name: Get Localization
  endpoint:
    path: /get_localization
    method: GET
    data_selector: records
    params:
      organization_id: string
- name: list_chats
  endpoint:
    path: /customer/action/list_chats
    method: POST
    data_selector: chats_summary
    params:
      limit: 10
- name: list_threads
  endpoint:
    path: /customer/action/list_threads
    method: POST
    data_selector: threads
    params:
      limit: 3
- name: get_chat
  endpoint:
    path: /customer/action/get_chat
    method: POST
    data_selector: thread
    params: {}
- name: start_chat
  endpoint:
    path: /customer/action/start_chat
    method: POST
    data_selector: chat_id
    params: {}
- name: resume_chat
  endpoint:
    path: /customer/action/resume_chat
    method: POST
    data_selector: thread_id
    params: {}
- name: deactivate_chat
  endpoint:
    path: /customer/action/deactivate_chat
    method: POST
    data_selector: ''
    params: {}
- name: get_dynamic_configuration
  endpoint:
    path: /customer/action/get_dynamic_configuration
    method: GET
- name: get_configuration
  endpoint:
    path: /customer/action/get_configuration
    method: GET
- name: send_event
  endpoint:
    path: /customer/action/send_event
    method: POST
- name: delete_event
  endpoint:
    path: /customer/action/delete_event
    method: POST
- name: upload_file
  endpoint:
    path: /customer/action/upload_file
    method: POST
- name: send_rich_message_postback
  endpoint:
    path: /customer/action/send_rich_message_postback
    method: POST
- name: send_sneak_peek
  endpoint:
    path: /customer/action/send_sneak_peek
    method: POST
- name: get_localization
  endpoint:
    path: /customer/action/get_localization
    method: GET
- name: update_chat_properties
  endpoint:
    path: /customer/action/update_chat_properties
    method: POST
    data_selector: null
    params:
      organization_id: <organization_id>
- name: delete_chat_properties
  endpoint:
    path: /customer/action/delete_chat_properties
    method: POST
    data_selector: null
    params:
      organization_id: <organization_id>
- name: update_thread_properties
  endpoint:
    path: /customer/action/update_thread_properties
    method: POST
    data_selector: null
    params:
      organization_id: <organization_id>
- name: delete_thread_properties
  endpoint:
    path: /customer/action/delete_thread_properties
    method: POST
    data_selector: null
    params:
      organization_id: <organization_id>
- name: update_event_properties
  endpoint:
    path: /customer/action/update_event_properties
    method: POST
    data_selector: null
    params:
      organization_id: <organization_id>
- name: delete_event_properties
  endpoint:
    path: /customer/action/delete_event_properties
    method: POST
    data_selector: null
    params:
      organization_id: <organization_id>
- name: list_license_properties
  endpoint:
    path: /customer/action/list_license_properties
    method: GET
    data_selector: null
    params:
      organization_id: <organization_id>
- name: list_group_properties
  endpoint:
    path: /customer/action/list_group_properties
    method: GET
    data_selector: null
    params:
      organization_id: <organization_id>
- name: update_customer
  endpoint:
    path: /customer/action/update_customer
    method: POST
    data_selector: null
    params:
      organization_id: <organization_id>
- name: set_customer_session_fields
  endpoint:
    path: /customer/action/set_customer_session_fields
    method: POST
    data_selector: null
    params:
      organization_id: <organization_id>
- name: get_customer
  endpoint:
    path: /customer/action/get_customer
    method: POST
    data_selector: null
    params:
      organization_id: <organization_id>
- name: list_group_statuses
  endpoint:
    path: /customer/action/list_group_statuses
    method: POST
    data_selector: null
    params:
      organization_id: <organization_id>
- name: check_goals
  endpoint:
    path: /v3.6/customer/action/check_goals
    method: POST
    data_selector: null
    params: {}
- name: get_form
  endpoint:
    path: /v3.6/customer/action/get_form
    method: POST
    data_selector: null
    params: {}
- name: get_predicted_agent
  endpoint:
    path: /v3.6/customer/action/get_predicted_agent
    method: POST
    data_selector: null
    params: {}
- name: get_url_info
  endpoint:
    path: /v3.6/customer/action/get_url_info
    method: POST
    data_selector: null
    params: {}
- name: mark_events_as_seen
  endpoint:
    path: /v3.6/customer/action/mark_events_as_seen
    method: POST
    data_selector: null
    params: {}
- name: accept_greeting
  endpoint:
    path: /v3.6/customer/action/accept_greeting
    method: POST
    data_selector: null
    params: {}
- name: cancel_greeting
  endpoint:
    path: /v3.6/customer/action/cancel_greeting
    method: POST
    data_selector: null
    params: {}
- name: send_greeting_postback
  endpoint:
    path: /v3.6/customer/action/send_greeting_postback
    method: POST
    data_selector: null
    params: {}
- name: request_email_verification
  endpoint:
    path: /v3.6/customer/action/request_email_verification
    method: POST
    data_selector: null
    params: {}
- name: Agent Chat API
  endpoint:
    path: /agent-chat-api
    method: GET
- name: Customer Chat API
  endpoint:
    path: /customer-chat-api
    method: GET
- name: Agent Chat API
  endpoint:
    path: /docs/messaging/agent-chat-api/rtm-reference
    method: GET
- name: incoming_chat
  endpoint:
    path: /docs/management/webhooks#incoming_chat
    method: POST
    data_selector: payload.chat
    params: {}
- name: chat_deactivated
  endpoint:
    path: /docs/management/webhooks#chat_deactivated
    method: POST
    data_selector: payload.chat_id
    params: {}
- name: chat_access_updated
  endpoint:
    path: /docs/management/webhooks#chat_access_updated
    method: POST
    data_selector: payload.access
    params: {}
- name: chat_transferred
  endpoint:
    path: /docs/management/webhooks#chat_transferred
    method: POST
    data_selector: payload.transferred_to
    params: {}
- name: user_added_to_chat
  endpoint:
    path: /docs/management/webhooks#user_added_to_chat
    method: POST
    data_selector: payload.user
    params: {}
- name: user_removed_from_chat
  endpoint:
    path: /docs/management/webhooks#user_removed_from_chat
    method: POST
    data_selector: payload.user_id
    params: {}
- name: incoming_event
  endpoint:
    path: /docs/management/webhooks#incoming_event
    method: POST
    data_selector: payload.event
    params: {}
- name: event_deleted
  endpoint:
    path: /docs/management/webhooks#event_deleted
    method: POST
    data_selector: payload.event_id
    params: {}
- name: event_updated
  endpoint:
    path: /docs/management/webhooks#event_updated
    method: POST
    data_selector: payload.event
    params: {}
- name: incoming_rich_message_postback
  endpoint:
    path: /docs/management/webhooks#incoming_rich_message_postback
    method: POST
    data_selector: payload.postback
    params: {}
- name: chat_properties_updated
  endpoint:
    path: /docs/messaging/agent-chat-api/v3.6/rtm-pushes#chat_properties_updated
    method: POST
    data_selector: payload.properties
- name: chat_properties_deleted
  endpoint:
    path: /docs/messaging/agent-chat-api/v3.6/rtm-pushes#chat_properties_deleted
    method: POST
    data_selector: payload.properties
- name: thread_properties_updated
  endpoint:
    path: /docs/messaging/agent-chat-api/v3.6/rtm-pushes#thread_properties_updated
    method: POST
    data_selector: payload.properties
- name: thread_properties_deleted
  endpoint:
    path: /docs/messaging/agent-chat-api/v3.6/rtm-pushes#thread_properties_deleted
    method: POST
    data_selector: payload.properties
- name: event_properties_updated
  endpoint:
    path: /docs/messaging/agent-chat-api/v3.6/rtm-pushes#event_properties_updated
    method: POST
    data_selector: payload.properties
- name: event_properties_deleted
  endpoint:
    path: /docs/messaging/agent-chat-api/v3.6/rtm-pushes#event_properties_deleted
    method: POST
    data_selector: payload.properties
- name: thread_tagged
  endpoint:
    path: /docs/messaging/agent-chat-api/v3.6/rtm-pushes#thread_tagged
    method: POST
    data_selector: payload.tag
- name: thread_untagged
  endpoint:
    path: /docs/messaging/agent-chat-api/v3.6/rtm-pushes#thread_untagged
    method: POST
    data_selector: payload.tag
- name: routing_status_set
  endpoint:
    path: /docs/messaging/agent-chat-api/v3.6/rtm-pushes#routing_status_set
    method: POST
    data_selector: payload.status
- name: customer_session_fields_updated
  endpoint:
    path: /docs/messaging/agent-chat-api/v3.6/rtm-pushes#customer_session_fields_updated
    method: POST
    data_selector: payload.session_fields
- name: agent_created
  endpoint:
    path: /agent_created
    method: POST
    data_selector: payload
- name: agent_approved
  endpoint:
    path: /agent_approved
    method: POST
    data_selector: payload
- name: agent_updated
  endpoint:
    path: /agent_updated
    method: POST
    data_selector: payload
- name: agent_suspended
  endpoint:
    path: /agent_suspended
    method: POST
    data_selector: payload
- name: agent_unsuspended
  endpoint:
    path: /agent_unsuspended
    method: POST
    data_selector: payload
- name: agent_deleted
  endpoint:
    path: /agent_deleted
    method: POST
    data_selector: payload
- name: auto_accesses_updated
  endpoint:
    path: /auto_accesses_updated
    method: POST
    data_selector: payload
- name: bot_created
  endpoint:
    path: /bot_created
    method: POST
    data_selector: payload
- name: bot_updated
  endpoint:
    path: /bot_updated
    method: POST
    data_selector: payload
- name: bot_deleted
  endpoint:
    path: /bot_deleted
    method: POST
    data_selector: payload
- name: group_created
  endpoint:
    path: /group_created
    method: POST
    data_selector: payload
- name: group_deleted
  endpoint:
    path: /group_deleted
    method: POST
    data_selector: payload
- name: group_updated
  endpoint:
    path: /group_updated
    method: POST
    data_selector: payload
- name: tag_created
  endpoint:
    path: /docs/messaging/agent-chat-api/v3.6/rtm-pushes#tag_created
    method: POST
    data_selector: payload
    params: {}
- name: tag_deleted
  endpoint:
    path: /docs/messaging/agent-chat-api/v3.6/rtm-pushes#tag_deleted
    method: POST
    data_selector: payload
    params: {}
- name: tag_updated
  endpoint:
    path: /docs/messaging/agent-chat-api/v3.6/rtm-pushes#tag_updated
    method: POST
    data_selector: payload
    params: {}
- name: events_marked_as_seen
  endpoint:
    path: /events_marked_as_seen
    method: POST
    data_selector: payload
    params: {}
- name: Agent Chat API
  endpoint:
    path: /agent-chat-api
    method: GET
- name: Customer Chat API
  endpoint:
    path: /customer-chat-api
    method: GET
- name: Chats
  endpoint:
    path: /reports/Chats
    method: GET
- name: Agents
  endpoint:
    path: /reports/Agents
    method: GET
- name: Customers
  endpoint:
    path: /reports/Customers
    method: GET
- name: Tags
  endpoint:
    path: /reports/Tags
    method: GET
- name: duration
  endpoint:
    path: /v3.6/reports/chats/duration
    method: POST
    data_selector: records
- name: tags
  endpoint:
    path: /v3.6/reports/chats/tags
    method: POST
    data_selector: records
- name: total_chats
  endpoint:
    path: /v3.6/reports/chats/total_chats
    method: POST
    data_selector: records
- name: ratings
  endpoint:
    path: /v3.6/reports/chats/ratings
    method: POST
    data_selector: records
- name: ranking
  endpoint:
    path: /v3.6/reports/chats/ranking
    method: POST
    data_selector: records
- name: engagement
  endpoint:
    path: /v3.6/reports/chats/engagement
    method: POST
    data_selector: records
- name: greetings_conversion
  endpoint:
    path: /v3.6/reports/chats/greetings_conversion
    method: POST
    data_selector: records
- name: forms
  endpoint:
    path: /v3.6/reports/chats/forms
    method: POST
    data_selector: records
- name: form-report
  endpoint:
    path: /reports/chats/forms
    method: POST
    data_selector: records
- name: response-time-report
  endpoint:
    path: /reports/chats/response_time
    method: POST
    data_selector: records
- name: first-response-time-report
  endpoint:
    path: /reports/chats/first_response_time
    method: POST
    data_selector: records
- name: groups-report
  endpoint:
    path: /reports/chats/groups
    method: POST
    data_selector: records
- name: agents_availability
  endpoint:
    path: /v3.6/reports/agents/availability
    method: POST
    data_selector: records
- name: agents_performance
  endpoint:
    path: /v3.6/reports/agents/performance
    method: POST
    data_selector: records
- name: customers_unique_visitors
  endpoint:
    path: /v3.6/reports/customers/unique_visitors
    method: POST
    data_selector: summary
- name: customers_queued_visitors
  endpoint:
    path: /v3.6/reports/chats/queued_visitors
    method: POST
    data_selector: records
- name: customers_queued_visitors_left
  endpoint:
    path: /v3.6/reports/chats/queued_visitors_left
    method: POST
    data_selector: records
- name: tags_chat_usage
  endpoint:
    path: /v3.6/reports/tags/chat_usage
    method: POST
    data_selector: records
notes:
- The API requires the newest version of the code snippet (≥2.0).
- Asynchronous initialization is an optional feature available for Chat Widget via
  JavaScript API.
- Uses OAuth 2.1 protocol for authentication and authorization.
- 'Your app can extend several areas of the HelpDesk App interface: Ticket Details,
  Fullscreen, App Settings.'
- There's a limit of 25 access tokens per client per user account. When the limit
  is reached, the oldest token is automatically revoked.
- There's a limit of 25 refresh tokens per client per user account. When the limit
  is reached, the oldest token is automatically revoked.
- There's a limit of 3 redirects in 30 seconds to the Livechat OAuth 2.1 server per
  client per user account. When the limit is reached, the server redirects to the
  error page with the `too_many_redirects` error details.
- The authorization code grant flow is recommended for server-side apps.
- Ensure that the redirect_uri matches the one defined in the Developer Console.
- Cookies are valid for 2 years and can be extended.
- Recommended for frontend apps that support cookies.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- 'Use `prompt: "consent"` to force the consent prompt in a popup and the redirect
  flows.'
- Web API requires authorization every time you make a request.
- Requires setup of OAuth2 scopes for accessing chats.
- The default visibility of both the events and users is set to all and cannot be
  changed.
- Uses OAuth2 — requires setup of connected app in LiveChat
- The transferred chat must be active and the requester must be present on the list
  of chat users.
- Requires setup of OAuth2 access token.
- Customer authentication is handled with access tokens.
- The maximum duration of the page_id parameter before it expires is one month.
- Maximum number of records returned on each page is configurable.
- The webhook will be sent only if the customer has active chats.
- By default, you'll be connected to a data center in the United States.
- 'To change the data center to Europe, specify region: europe in the configuration
  object.'
- 'To change the API version, set apiVersion: 3.5 in the configuration object.'
- Ensure that your app meets the necessary standards for functionality, user experience,
  and overall quality.
- Only owner and administrators can create and manage apps.
- 'The Messaging APIs support two forms of transport: Web APIs and Real-time APIs
  (RTM APIs).'
- 'Required scopes: reports_read'
- 'Requires scopes: reports_read for all endpoints.'
errors:
- 'invalid_request: The request is missing a required parameter, includes an invalid
  parameter value, includes a parameter more than once, or is otherwise malformed.'
- 'unauthorized_client: The client is not authorized to request a token using this
  method. Possible reasons: missing client ID, client ID not found, refresh token
  not found, invalid client secret, invalid redirect URI.'
- 'access_denied: The resource owner or authorization server denied the request. Possible
  reasons: the requested scopes include a scope that wasn''t originally granted by
  the resource owner.'
- '400 Bad Request: Ensure all required parameters are included.'
- '401 Unauthorized: Check client_id and client_secret.'
- '403 Forbidden: Insufficient permissions for the requested resource.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'unauthorized: The resource owner identity is unknown or the consent is missing.'
- 'unauthorized_client: The client is not authorized to request a token using this
  method.'
- 'access_denied: The resource owner or authorization server denied the request.'
- 'unsupported_response_type: The authorization server doesn''t support acquiring
  a token using this method.'
- 'Too many requests: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Check your access token.'
- '400 Bad Request: Ensure all required parameters are provided.'
- 'agent_offline: Agent offline'
- 'authentication: Authentication error'
- 'authorization: Authorization error'
- 'chat_inactive: Chat is inactive'
- 'entity_too_large: Upload limit exceeded (10MB).'
- 'internal: Internal server error'
- 'license_expired: License expired'
- 'license_not_found: License not found'
- 'limit_reached: Limit reached'
- 'misdirected_request: Wrong region'
- 'missing_access: Missing access'
- 'not_found: Not found'
- 'request_timeout: Request timed out'
- 'service_unavailable: Service unavailable'
- 'too_many_requests: Too many requests'
- 'unsupported_version: Cannot call unsupported API versions.'
- 'validation: Wrong format of request'
- 'wrong_product_version: Wrong product version'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '200 OK: Indicates successful deactivation of chat.'
auth_info:
  mentioned_objects:
  - Accounts SDK
  - Global Accounts service
  - Client Id
  - Client Secret
  - access_token
  - customer_access_token
  - entity_id
  - organization_id
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AccountsSDK
  - Popup
  - Redirect
  - customers:ro
  - customers:rw
  - customers.ban:rw
client:
  base_url: https://api.livechatinc.com/v3.6
  auth:
    type: oauth2
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
