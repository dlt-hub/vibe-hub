resources:
- name: orders
  endpoint:
    path: /orders
    method: POST
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: __strm:myapp.orders.{partition_number}
    method: GET
    data_selector: records
    params: {}
- name: worker
  endpoint:
    path: /runnel/cli/worker
    method: GET
    data_selector: records
    params: {}
- name: send
  endpoint:
    path: /runnel/cli/send
    method: POST
    data_selector: records
    params: {}
- name: sendmany
  endpoint:
    path: /runnel/cli/sendmany
    method: POST
    data_selector: records
    params: {}
- name: reset
  endpoint:
    path: /runnel/cli/reset
    method: POST
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /stream/orders
    method: POST
    data_selector: records
notes:
- This is the main abstraction provided by Runnel.
- Apps will be run by workers via the CLI.
- This class should not be used directly, but acts as a container for application
  settings, configured via environment variables or as kwargs to the App object.
- Runnel is a distributed event processing framework for Python based on Redis Streams.
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: redis://127.0.0.1
source_metadata: null
