resources:
- name: Get Journey Result
  endpoint:
    path: /journey/v2/get/{JOURNEY_ID}
    method: GET
- name: selfie_model
  endpoint:
    path: /selfie-model
    method: GET
    data_selector: selfie_data
- name: rule_result_model
  endpoint:
    path: /rule-result-model
    method: GET
    data_selector: rule_results
- name: aml_field_model
  endpoint:
    path: /aml-field-model
    method: GET
    data_selector: aml_data
- name: device_intelligence
  endpoint:
    path: /device-intelligence
    method: GET
    data_selector: device_signals
- name: proof_of_address
  endpoint:
    path: /api/proof-of-address
    method: POST
    data_selector: data
    params: {}
- name: face_match
  endpoint:
    path: /reference/process-custom-journey-step
    method: POST
- name: updated_journey
  endpoint:
    path: /webhooks/updated-journey
    method: POST
    data_selector: payload
    params: {}
- name: Android Setup
  endpoint:
    path: /projectRoot/android/app/build.gradle
    method: GET
    data_selector: build.gradle
    params: {}
- name: iOS Setup
  endpoint:
    path: /cordova/plugin/add/idwise-cordova-sdk
    method: GET
    data_selector: npm
    params: {}
- name: step_result
  endpoint:
    path: /step/result
    method: GET
- name: document_recognition
  endpoint:
    path: /document/recognition
    method: GET
- name: nfc_result
  endpoint:
    path: /nfc/result
    method: GET
- name: resumeJourney
  endpoint:
    path: /resumeJourney
    method: POST
- name: journey_summary
  endpoint:
    path: /journey/summary
    method: GET
    data_selector: journeySummary
- name: journey_builder
  endpoint:
    path: /api/journey-builder
    method: GET
    data_selector: data
    params: {}
- name: result_retrieval
  endpoint:
    path: /api/result-retrieval
    method: GET
    data_selector: data
    params: {}
- name: journey
  endpoint:
    path: /api/journey
    method: POST
    data_selector: data
    params: {}
- name: journeyCallbacks
  endpoint:
    path: /journey/callbacks
    method: GET
    data_selector: callbacks
    params: {}
- name: stepCallbacks
  endpoint:
    path: /step/callbacks
    method: GET
    data_selector: callbacks
    params: {}
- name: delete_journey
  endpoint:
    path: /delete/:JOURNEY_ID
    method: DELETE
- name: manual_journey_review
  endpoint:
    path: /v2/manual-review/:JOURNEY_ID
    method: GET
- name: webhook_payload
  endpoint:
    path: /webhook/finished-journey
    method: POST
    data_selector: body
    params: {}
- name: webhook_payload
  endpoint:
    path: /manually-reviewed
    method: POST
    data_selector: body
- name: webhook_payload
  endpoint:
    path: /finished_user_steps_webhook
    method: POST
    data_selector: body
    params: {}
- name: finished_step_webhook
  endpoint:
    path: /finished-step-webhook
    method: POST
    data_selector: body
    params: {}
- name: aml_monitor_update
  endpoint:
    path: /aml-monitor-update
    method: POST
    data_selector: body
    params: {}
- name: Updated Journey
  endpoint:
    path: /webhooks/updated-journey
    method: POST
    data_selector: body
    params: {}
- name: Finished Spot Check
  endpoint:
    path: /finished-spot-check
    method: POST
    data_selector: body
- name: Get Journey Result
  endpoint:
    path: /reference/get-journey-result
    method: GET
- name: Get Image
  endpoint:
    path: /reference/get-image
    method: GET
- name: Get Video
  endpoint:
    path: /reference/get-video
    method: GET
- name: Generate Journey PDF
  endpoint:
    path: /reference/generate-journey-pdf
    method: GET
- name: Get Spot Check Result
  endpoint:
    path: /reference/get-spot-check-result
    method: GET
- name: Standalone Journey API
  endpoint:
    path: /reference/standalone-process-journey
    method: POST
- name: Aml Check
  endpoint:
    path: /reference/aml-check
    method: POST
- name: Get Aml Result
  endpoint:
    path: /reference/get-aml-result
    method: GET
- name: Set Journey's AML Ongoing Monitoring
  endpoint:
    path: /reference/set-ongoing-monitoring
    method: POST
- name: Update AML Whitelist Status
  endpoint:
    path: /reference/update-aml-whitelist-status
    method: PATCH
- name: Get AML History
  endpoint:
    path: /reference/get-aml-history
    method: GET
- name: Amend AML search
  endpoint:
    path: /reference/amend-aml-search
    method: PUT
- name: Delete Journey
  endpoint:
    path: /reference/delete-journey
    method: DELETE
- name: Manual Journey Review
  endpoint:
    path: /reference/manual-review-journey
    method: POST
- name: Process Journey Step
  endpoint:
    path: /reference/process-journey-step
    method: POST
- name: Start Journey
  endpoint:
    path: /reference/start-journey
    method: POST
- name: Get Journey Summary
  endpoint:
    path: /reference/get-journey-summary
    method: GET
- name: Complete Journey
  endpoint:
    path: /reference/complete-journey
    method: POST
- name: Create Verification Link
  endpoint:
    path: /reference/create-verification-link
    method: POST
- name: Process Custom Journey Step
  endpoint:
    path: /reference/process-custom-journey-step
    method: POST
- name: Process Government Database Check
  endpoint:
    path: /reference/process-government-database-check
    method: POST
- name: Complete Custom Step
  endpoint:
    path: /reference/complete-custom-step
    method: POST
- name: Get Journey Audit Logs
  endpoint:
    path: /reference/get-journey-audit-logs
    method: GET
- name: Get Journey Result
  endpoint:
    path: /reference/get-journey-result
    method: GET
- name: Get Image
  endpoint:
    path: /reference/get-image
    method: GET
- name: Get Video
  endpoint:
    path: /reference/get-video
    method: GET
- name: Generate Journey PDF
  endpoint:
    path: /reference/generate-journey-pdf
    method: GET
- name: Get Spot Check Result
  endpoint:
    path: /reference/get-spot-check-result
    method: GET
- name: Standalone Journey API
  endpoint:
    path: /reference/standalone-process-journey
    method: POST
- name: Aml Check
  endpoint:
    path: /reference/aml-check
    method: POST
- name: Get Aml Result
  endpoint:
    path: /reference/get-aml-result
    method: GET
- name: Set Journey's AML Ongoing Monitoring
  endpoint:
    path: /reference/set-ongoing-monitoring
    method: POST
- name: Update AML Whitelist Status
  endpoint:
    path: /reference/update-aml-whitelist-status
    method: PATCH
- name: Get AML History
  endpoint:
    path: /reference/get-aml-history
    method: GET
- name: Amend AML search
  endpoint:
    path: /reference/amend-aml-search
    method: PUT
- name: Delete Journey
  endpoint:
    path: /reference/delete-journey
    method: DELETE
- name: Manual Journey Review
  endpoint:
    path: /reference/manual-review-journey
    method: POST
- name: Process Journey Step
  endpoint:
    path: /reference/process-journey-step
    method: POST
- name: Start Journey
  endpoint:
    path: /reference/start-journey
    method: POST
- name: Get Journey Summary
  endpoint:
    path: /reference/get-journey-summary
    method: GET
- name: Complete Journey
  endpoint:
    path: /reference/complete-journey
    method: POST
- name: Create Verification Link
  endpoint:
    path: /reference/create-verification-link
    method: POST
- name: Process Custom Journey Step
  endpoint:
    path: /reference/process-custom-journey-step
    method: POST
- name: Process Government Database Check
  endpoint:
    path: /reference/process-government-database-check
    method: POST
- name: Complete Custom Step
  endpoint:
    path: /reference/complete-custom-step
    method: POST
- name: Get Journey Audit Logs
  endpoint:
    path: /reference/get-journey-audit-logs
    method: GET
notes:
- Treat the server key like a password. Do not expose it in your codebase or share
  it publicly.
- Includes device intelligence checks for onboarding.
- Images must not exceed a file size of 4.4 MB
- 'Minimum Resolution Requirement: 1,280x720 pixels; Maximum dimension: 10,000x10,000
  pixels'
- Images should be compressed using a single pass at a JPEG quality of 70 or higher
- IDWise's passive liveness detection is a NIST-certified solution, adhering to U.S.
  standards, ensuring high levels of accuracy and security in identity verification.
- IDWise conducts several checks to ensure the accuracy and reliability of the address
  information provided.
- Auto-block requires SDK support. Ensure you're using a compatible version of the
  IDWise SDK.
- The spot check will be performed on the latest successful onboarding journeys where
  its final_decision is either Complete or Approved.
- Behavioral detection marks a significant advancement in digital fraud prevention.
- Supports multi-tenancy, allowing organizations to analyse verification data specific
  to each business unit, geography, or product line.
- Each step within the journey flow is customisable, allowing for specific rules and
  options such as allowed document types, document sides to be captured, selfie instructions,
  and face match thresholds.
- It's recommended to have file upload disabled as allowing file upload increases
  the probability of end-user fraud.
- Session Recording is disabled by default.
- Mandatory selfie verification step is enabled by default.
- Allow File Upload is disabled by default.
- This block is tailored to configure the Proof of Address step.
- Ensure that each section is carefully reviewed and appropriately configured to align
  with your verification process's requirements.
- The default threshold for face matching is set at 80%, but you can adjust this level
  to increase or decrease the strictness of the match.
- Enables users to exit the onboarding session and return to complete it later.
- Defines the maximum number of retries a user is allowed to fix errors encountered
  during a specific step.
- Enabling the AML step may incur additional charges
- Some settings are controlled by IDWise support due to their complexity or licensing
  requirements
- The Manual Review module incorporates human validation in the onboarding process.
- Webhook integration and systematic reasons help manage edge cases efficiently.
- The client key is necessary for any client-side API interaction.
- Ensure you store the key securely, as you won’t be able to retrieve it later.
- Ensure your development environment is properly set up for the platform you are
  working on.
- Make sure you are using the latest versions of tools and libraries as outlined in
  the specific platform guide.
- IDWise Android SDK is hosted on Private Maven Repository
- 'Minimum deployment target: iOS 13.0 or higher.'
- Xcode and CocoaPods must be installed on your development machine.
- Supports both Intel and M1 (Apple Silicon) based machines.
- IDWise SDK only supports portrait orientation for its screens.
- NFCReaderUsageDescription permission is needed to access the NFC hardware
- Declare com.apple.developer.nfc.readersession.iso7816.select-identifiers a list
  of application identifiers that the app must be able to read according to ISO7816
- 'Minimum version for React Native: TBA'
- minSdkVersion is 21 and targetSdkVersion is set to 34
- 'Minimum deployment target: iOS 13.0 or higher'
- 'Minimum version for Cordova: TBA'
- minSdkVersion is 21 and targetSdkVersion is set to 31
- 'Minimum deployment target: iOS 12.0 or higher'
- 'Minimum version for Capacitor: TBA'
- Triggered when a user’s journey begins (after calling `startJourney` and the journey
  is created). At this point, the UI control is transferred to the IDWise SDK. Your
  app should hide any loading indicators and pause showing any UI until the SDK returns
  control.
- Triggered when a journey is resumed (after calling `resumeJourney` and the journey
  is ready). The UI control is now with the IDWise SDK, and your app should hide spinners
  and UI elements until control is returned.
- Triggered when the user finishes all steps in the journey. Control is returned to
  your application and the SDK UI is dismissed. The journey may still be processing
  on the backend (e.g., fraud checks), so expect a delay before receiving the final
  webhook.
- Triggered when the user presses the cancel button or system back button or when
  the session expires. The SDK UI is hidden, and control is returned to your app.
  You may prompt the user to resume and complete the journey later.
- Triggered when an error occurs during the journey. Your app should handle this by
  responding to known error cases. Unexpected errors should be logged along with the
  error code and message for IDWise Support.
- Minimum SDK Version that supports this feature is 5.4.0
- The IDWise Dynamic SDK is designed for advanced integrations, giving hosting apps
  full control over ID verification steps.
- Triggered when a user's journey started. It's recommended to save the journey ID
  in your system under the user's profile.
- Triggered when the user completes all steps (e.g., Document and Selfie). Your backend
  should call the IDWise backend to retrieve the final journey results.
- Retries are essential for improving the user experience in the ID verification process.
- Each step in the verification journey allows users a certain number of attempts
  to correct errors and successfully complete the verification step.
- By default, users are granted two attempts for each verification step.
- The locale parameter should be a 2-letter ISO code (e.g., en for English, ar for
  Arabic, etc.)
- Once a journey is marked as complete, it cannot be modified.
- The Web SDK does not currently support advanced Smart Capture features, such as
  automatic document capture and automatic selfie capture.
- The Dynamic SDK feature is not available in the web version.
- Web SDK requires permission to use camera which works well when we run the Web SDK
  in a browser.
- It's important to test the created build on a physical device since the emulator
  doesn't replicate the functionality of the camera.
- Uses OAuth2 with refresh token — requires setup of connected app in IDWise
- Fix for requesting camera permission before starting a step
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Looking for an Older version? Please refer to this page for 4.x.x and earlier release
  notes.
- General improvements to enhance the performance of the SDK.
- We strongly recommend using the latest version of IDWise SDK. This ensures you always
  have access to the latest improvements, bug fixes, and security updates.
- Some endpoints may require specific permissions to access
- if you have multiple flows they will use the same theme
- Custom fonts are supported on Web SDK but the font size adjustment is not currently
  supported.
- 'Caution for Integration: Backend Use Only'
- It's imperative to restrict the usage of this API to the backend environment exclusively.
- Exposing these credentials to public access should never be done.
- IDWise supports basic authentication, bearer token authorization, or custom keys
  set in the headers for authorization purposes.
- Customers can configure their webhooks to accept requests only from specific IP
  ranges provided by IDWise.
- This object might be extended with extra elements.
- This object might be extended with extra elements. Ensure your code can accommodate
  any extra elements introduced to this payload object.
- The webhook payload may be extended with extra elements.
- This webhook triggers whenever an AML match is updated as part of Ongoing Monitoring.
- Payload structure may be extended in the future. Ensure your webhook handler can
  safely ignore unknown fields to maintain compatibility.
- Webhooks deliver data in JSON format.
- Webhooks operate asynchronously, delivering data immediately after each validation
  stage is finished.
errors:
- 'invalid_spot_check_request: No valid onboarding journey.'
- 'onError: Error occurred during the journey.'
- 'block_reason_vpn: VPN or proxy detected'
- 'block_reason_rooted_device: Rooted or jailbroken device'
- 'block_reason_browser_tampering: Suspicious browser environment'
- 'block_reason_browser_incognito: Incognito/private browsing detected'
- 'block_reason_developer_tools: Developer/debugging tools are active'
- 'block_reason_emulator: Emulator environment detected'
- 'block_reason_high_device_usage: Device has excessive journey attempts'
- 'block_reason_ip_restriction: IP address outside allowed range'
- 'block_reason_location_not_supported: Unsupported geolocation'
- 'block_reason_ip_block_list: IP address on blocklist'
- 'block_reason_cloned_app: Application clone detected'
- 'block_reason_location_spoofing: Fake GPS or geolocation masking tools'
- 'block_reason_privacy_settings: Device privacy settings prevent evaluation'
- 'block_reason_remote_control_tools: Remote control or remote access tools found'
- 'block_reason_cross_device_usage: Suspicious cross-device journey behavior'
- 'block_reason_frida: Frida (dynamic instrumentation) detected'
- 'block_reason_virtual_machine: Virtual machine detected'
- 'block_reason_assistance_required: User/device flagged for manual assistance'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'empty_parameters: clientKey is invalid or empty.'
- 'sdk_not_Initialized: Either You haven’t Called the IDWise.initialize or you haven’t
  waited for a callback'
- 'wrong_credentials: clientKey is incorrect'
- 'empty_journeyId: Internal Error occurred while processing the request'
- 'file_too_large: Provided file is too large to upload'
- 'step_not_found: Provided stepId doesn''t exist for the flow'
- 'wrong_stepId: Provided stepId is wrong'
- 'internal_server_error: Some Internal server error'
- 'network_error: Some error related to network i.e Internet connection'
- 'action_not_supported: If you call unsupported action in simple journey mode'
- 'step_not_started: step with provided stepId has not started yet'
- 'journey_not_completed: Journey is not completed yet ,i.e not all steps are concluded'
- 'journey_not_found: A journey with the provided journey id could not be found'
- 'invalid_flowId: Provided flowId is Invalid'
- 'no_active_journey: No active journey exists'
- 'journey_not_started: Journey has not started yet'
- 'step_concluded: Step has already concluded and cannot be started again'
- 'no_journey_to_resume: There is no journey to resume and journey is already concluded
  or the journeyId is Invalid'
- 'cannot_resume_completed_journey: If you try to resume an already completed journey,
  you will get this error.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Error Handling Enhancements
- '404 Not Found: Check the endpoint path'
- '500 Internal Server Error: Retry the request after some time'
- 'missing_authorization_header: The request does not include an Authorization header,
  which is required for authentication.'
- 'invalid_credentials: The credentials provided in the request are invalid.'
- 'invalid_authentication_format: The authentication information provided in the request
  is improperly formatted.'
- 'unauthorized: The credentials provided in the request belong to a different environment
  or tenant.'
- 'not_allowed_ip_address: The request has been denied because the IP address of the
  client is not on the allowed whitelist.'
- 'missing_requested_resource: This error typically occurs if the request resource
  does not exist in the system, or has been deleted.'
- 'invalid_request: The request is not valid for the current state of the resource
  or operation.'
- 'missing_parameter: This error occurs when mandatory fields are not included in
  the payload, query string, or headers.'
- 'invalid_flow_definition: The flow definition provided in the request is invalid.'
- 'invalid_step_id: This error occurs when the step ID is either missing or not defined
  as part of the flow.'
- 'invalid_image: This error is triggered when the uploaded file is not an image or
  is a corrupted image file.'
- 'invalid_image_format: This error occurs when the provided image is not in an acceptable
  format.'
- 'invalid_image_dimensions: The uploaded image does not meet the required height
  and width specifications.'
- 'invalid_pdf_password: This error occurs when the provided password for the PDF
  file is incorrect or missing.'
- 'invalid_spot_check_request: The spot check request is invalid because there is
  no accepted associated onboarding journey.'
- 'invalid_aml_configuration: The Anti-Money Laundering (AML) configuration provided
  in the request is invalid.'
- 'ogm_error_no_aml_record: The operation could not be completed because no AML record
  exists for the specified entity.'
- 'ogm_error_no_successful_aml: The operation could not be completed because there
  is no successful AML check for the specified entity.'
- 'ogm_error_incomplete_journey: This error occurs when the journey required for enabling
  ongoing monitoring is incomplete.'
- 'update_not_supported: This error occurs the AML record is old or doesn''t support
  OGM or whitelist feature.'
- 'internal_server_error: This error indicates that an unexpected internal server
  error occurred while processing the request.'
- 'generic_error: Indicates a generic or unexpected error.'
- '503: Indicates that the IDWise API is temporarily unavailable due to high server
  load.'
- 'feedback_not_physical_document: Image not accepted'
- 'feedback_document_cropped: Document Cropped'
- 'feedback_document_face_missing: Face not clear'
- 'feedback_failed_document: Image not Clear'
- 'feedback_unrecognised_document: Image not Clear'
- 'feedback_document_expired: Document Expired'
- 'feedback_document_near_expired: Near Expired Document'
- 'feedback_proof_policy_failed: Wrong Document'
- 'feedback_duplicated_document_found: Duplicate Document'
- 'feedback_wrong_side: Wrong Side'
- 'feedback_duplicate_side: Duplicate Side'
- 'feedback_missing_side: Missing Side'
- 'feedback_outdated_proof_of_address: Outdated Document'
- 'feedback_missing_mandatory_fields: Required Information Missing'
- 'feedback_document_quality_failed: Image not Clear'
- 'feedback_selfie_liveness_failed: Selfie not Clear'
- 'feedback_proof_of_address_mismatch: Name Mismatch'
- 'feedback_same_person_id_mismatch: Unclear ID Face'
- 'feedback_same_person_selfie_mismatch: Selfie Mismatch'
- 'feedback_default: Image not Clear'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://idwise.studio
  auth:
    type: oauth2
source_metadata: null
