resources:
- name: categories
  endpoint:
    path: /v2/categories
    method: GET
    data_selector: categories
- name: tax_for_order
  endpoint:
    path: /taxes
    method: POST
    data_selector: tax
    params: {}
- name: categories
  endpoint:
    path: /categories
    method: GET
- name: taxes
  endpoint:
    path: /taxes
    method: POST
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: rates
  endpoint:
    path: /rates
    method: GET
- name: nexus
  endpoint:
    path: /nexus
    method: GET
- name: validations
  endpoint:
    path: /validations
    method: POST
- name: summarized_rates
  endpoint:
    path: /summarized_rates
    method: GET
- name: taxes
  endpoint:
    path: /taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax_for_order
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
- name: tax
  endpoint:
    path: /tax
    method: GET
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /tax
    method: GET
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params:
      to_country: ''
      to_zip: ''
      to_state: ''
      shipping: ''
- name: transactions
  endpoint:
    path: /v2/transactions/orders
    method: GET
    data_selector: orders
    params:
      from_transaction_date: 2015/05/01
      to_transaction_date: 2015/05/31
- name: order_transaction
  endpoint:
    path: /v2/transactions/orders/:transaction_id
    method: GET
    data_selector: order
    params:
      transaction_id: required
- name: order_transaction
  endpoint:
    path: /v2/transactions/orders
    method: POST
    data_selector: order
    params:
      transaction_id: string
      transaction_date: datetime
      to_country: string
      to_zip: string
      to_state: string
      to_city: string
      to_street: string
      amount: float
      shipping: float
      sales_tax: float
      line_items:
      - quantity: integer
        product_identifier: string
        description: string
        unit_price: float
        sales_tax: float
- name: update_order
  endpoint:
    path: /v2/transactions/orders/:transaction_id
    method: PUT
    data_selector: order
    params:
      transaction_id: transaction_id
- name: delete_order
  endpoint:
    path: /v2/transactions/orders/:transaction_id
    method: DELETE
- name: list_refunds
  endpoint:
    path: /v2/transactions/refunds
    method: GET
- name: show_refund
  endpoint:
    path: /v2/transactions/refunds/:transaction_id
    method: GET
- name: refund_transaction
  endpoint:
    path: /transactions/refunds
    method: POST
    data_selector: refund
    params:
      transaction_id: required
      transaction_reference_id: required
      transaction_date: required
      to_country: required
      to_zip: required
      to_state: required
      amount: required
      shipping: required
      sales_tax: required
- name: refund_transaction
  endpoint:
    path: /v2/transactions/refunds/:transaction_id
    method: PUT
    data_selector: refund
    params: {}
- name: customer
  endpoint:
    path: /v2/customers
    method: POST
    data_selector: customer
- name: refund
  endpoint:
    path: /v2/transactions/refunds/:transaction_id
    method: DELETE
    data_selector: refund
    params:
      transaction_id: string
- name: customers
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: customers
    params: {}
- name: customer
  endpoint:
    path: /v2/customers/:customer_id
    method: GET
    data_selector: customer
    params:
      customer_id: string
- name: rates
  endpoint:
    path: /rates/:zip
    method: GET
    data_selector: rate
    params:
      country: optional
      zip: required
      state: optional
      city: optional
      street: optional
- name: customer
  endpoint:
    path: /v2/customers/:customer_id
    method: PUT
    data_selector: customer
    params: {}
- name: rates
  endpoint:
    path: /v2/rates/:zip
    method: GET
    data_selector: rates
    params: {}
- name: nexus_regions
  endpoint:
    path: /v2/nexus/regions
    method: GET
    data_selector: regions
    params: {}
- name: validate_address
  endpoint:
    path: /addresses/validate
    method: POST
    data_selector: addresses
    params: {}
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: categories
    params: {}
- name: summary_rates
  endpoint:
    path: /summary_rates
    method: GET
    data_selector: summary_rates
- name: tax_for_order
  endpoint:
    path: /taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax_for_order
  endpoint:
    path: /taxes
    method: POST
    data_selector: tax
    params: {}
- name: taxes
  endpoint:
    path: /taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /tax
    method: GET
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: list_orders
  endpoint:
    path: /transactions/orders
    method: GET
    data_selector: orders
    params: {}
- name: show_order
  endpoint:
    path: /transactions/orders/:transaction_id
    method: GET
    data_selector: order
    params:
      transaction_id: string
- name: create_order
  endpoint:
    path: /transactions/orders
    method: POST
    data_selector: order
    params: {}
- name: orders
  endpoint:
    path: /transactions/orders/:transaction_id
    method: PUT
    data_selector: order
    params: {}
- name: refunds
  endpoint:
    path: /transactions/refunds
    method: GET
    data_selector: refunds
    params:
      from_transaction_date: 2015/05/01
      to_transaction_date: 2015/05/31
- name: orders
  endpoint:
    path: /transactions/orders
    method: POST
    data_selector: order
- name: refund
  endpoint:
    path: /transactions/refunds/:transaction_id
    method: GET
    data_selector: refund
    params:
      transaction_id: string
- name: create_refund
  endpoint:
    path: /transactions/refunds
    method: POST
    data_selector: refund
    params: {}
- name: refund
  endpoint:
    path: /v2/transactions/refunds
    method: POST
    data_selector: refund
    params: {}
- name: update_refund
  endpoint:
    path: /v2/transactions/refunds/:transaction_id
    method: PUT
    data_selector: refund
    params: {}
- name: customer
  endpoint:
    path: /v2/customers
    method: POST
    data_selector: customer
    params: {}
- name: update_customer
  endpoint:
    path: /v2/customers/:customer_id
    method: PUT
    data_selector: customer
    params: {}
- name: delete_customer
  endpoint:
    path: /v2/customers/:customer_id
    method: DELETE
    data_selector: customer
    params: {}
- name: refund
  endpoint:
    path: /v2/transactions/refunds/:transaction_id
    method: DELETE
    data_selector: refund
    params: {}
- name: customers
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: customers
    params: {}
- name: customer
  endpoint:
    path: /v2/customers/:customer_id
    method: GET
    data_selector: customer
    params: {}
- name: nexus_regions
  endpoint:
    path: /v2/nexus/regions
    method: GET
    data_selector: regions
- name: validate_address
  endpoint:
    path: /v2/addresses/validate
    method: POST
    data_selector: addresses
- name: summary_rates
  endpoint:
    path: /v2/summary_rates
    method: GET
    data_selector: summary_rates
- name: customer
  endpoint:
    path: /v2/customers/:customer_id
    method: DELETE
    data_selector: customer
    params:
      customer_id: string
- name: rates
  endpoint:
    path: /v2/rates/:zip
    method: GET
    data_selector: rate
    params:
      zip: string
      city: string
      state: string
      street: string
      country: string
- name: nexus_regions
  endpoint:
    path: /v2/nexus/regions
    method: GET
    data_selector: regions
    params: {}
- name: summary_rates
  endpoint:
    path: /v2/summary_rates
    method: GET
    data_selector: summary_rates
- name: tax_for_order
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: categories
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: categories
- name: taxes
  endpoint:
    path: /taxes
    method: POST
    data_selector: tax
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: rates
  endpoint:
    path: /rates
    method: GET
    data_selector: rates
- name: nexus
  endpoint:
    path: /nexus
    method: GET
    data_selector: nexus
- name: tax_for_order
  endpoint:
    path: /taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax_for_order
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: taxes
  endpoint:
    path: /taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /tax
    method: GET
    data_selector: tax
- name: tax
  endpoint:
    path: /tax
    method: GET
    data_selector: tax
    params: {}
- name: orders
  endpoint:
    path: /v2/transactions/orders
    method: GET
    data_selector: orders
    params:
      from_transaction_date: 2015/05/01
      to_transaction_date: 2015/05/31
- name: show_order
  endpoint:
    path: /v2/transactions/orders/:transaction_id
    method: GET
    data_selector: order
    params:
      transaction_id: required
- name: order_transaction
  endpoint:
    path: /transactions/orders
    method: POST
    data_selector: order
    params:
      transaction_id: required
      transaction_date: required
      to_country: required
      to_zip: required
      to_state: required
      amount: required
      shipping: required
      sales_tax: required
- name: tax
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: update_order
  endpoint:
    path: /v2/transactions/orders/:transaction_id
    method: PUT
    data_selector: order
    params:
      transaction_id: string
- name: delete_order
  endpoint:
    path: /v2/transactions/orders/:transaction_id
    method: DELETE
    data_selector: order
    params:
      transaction_id: required
- name: list_refunds
  endpoint:
    path: /v2/transactions/refunds
    method: GET
    data_selector: refunds
    params: {}
- name: show_refund
  endpoint:
    path: /v2/transactions/refunds/:transaction_id
    method: GET
    data_selector: refund
    params:
      transaction_id: required
- name: refund_transaction
  endpoint:
    path: /v2/transactions/refunds/:transaction_id
    method: PUT
    data_selector: refund
    params:
      transaction_id: required
- name: refund
  endpoint:
    path: /transactions/refunds
    method: POST
    data_selector: refund
    params: {}
- name: customer
  endpoint:
    path: /v2/customers
    method: POST
    data_selector: customer
    params: {}
- name: refund
  endpoint:
    path: /v2/transactions/refunds/:transaction_id
    method: DELETE
- name: customers
  endpoint:
    path: /v2/customers
    method: GET
- name: customer
  endpoint:
    path: /v2/customers/:customer_id
    method: GET
- name: rates
  endpoint:
    path: /rates/:zip
    method: GET
    data_selector: rate
    params: {}
- name: nexus_regions
  endpoint:
    path: /v2/nexus/regions
    method: GET
    data_selector: regions
- name: update_customer
  endpoint:
    path: /v2/customers/:customer_id
    method: PUT
    data_selector: customer
    params:
      customer_id: string
      exemption_type: string
      name: string
      exempt_regions[][country]: string
      exempt_regions[][state]: string
      country: string
      state: string
      zip: string
      city: string
      street: string
- name: delete_customer
  endpoint:
    path: /v2/customers/:customer_id
    method: DELETE
    data_selector: customer
    params:
      customer_id: string
- name: rates_for_location
  endpoint:
    path: /v2/rates/:zip
    method: GET
    data_selector: rates
- name: validate_address
  endpoint:
    path: /addresses/validate
    method: POST
    data_selector: addresses
- name: summary_rates
  endpoint:
    path: /summary_rates
    method: GET
    data_selector: summary_rates
- name: categories
  endpoint:
    path: /categories
    method: GET
    data_selector: categories
    params: {}
- name: tax_for_order
  endpoint:
    path: /taxes
    method: POST
    data_selector: tax
    params: {}
- name: taxes
  endpoint:
    path: /taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax_for_order
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /taxes
    method: GET
    data_selector: tax
- name: transactions_orders
  endpoint:
    path: /v2/transactions/orders
    method: GET
    data_selector: orders
    params:
      from_transaction_date: 2015/05/01
      to_transaction_date: 2015/05/31
- name: taxes
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: orders
  endpoint:
    path: /v2/transactions/orders
    method: GET
    data_selector: orders
    params: {}
- name: show_order
  endpoint:
    path: /v2/transactions/orders/:transaction_id
    method: GET
    data_selector: order
    params:
      transaction_id: required
- name: create_order
  endpoint:
    path: /v2/transactions/orders
    method: POST
    data_selector: order
    params: {}
- name: orders
  endpoint:
    path: /v2/transactions/orders
    method: POST
    data_selector: order
    params:
      transaction_id: string
      transaction_date: datetime
      provider: string
      from_country: string
      from_zip: string
      from_state: string
      from_city: string
      from_street: string
      to_country: string
      to_zip: string
      to_state: string
      to_city: string
      to_street: string
      amount: float
      shipping: float
      sales_tax: float
- name: update_order
  endpoint:
    path: /v2/transactions/orders/:transaction_id
    method: PUT
    data_selector: order
    params:
      transaction_id: string
      amount: float
      shipping: float
      line_items:
      - id: string
        quantity: integer
        product_identifier: string
        description: string
        unit_price: float
        discount: float
        sales_tax: float
- name: order
  endpoint:
    path: /transactions/orders/:transaction_id
    method: DELETE
    data_selector: order
    params: {}
- name: refunds
  endpoint:
    path: /transactions/refunds
    method: GET
    data_selector: refunds
    params:
      from_transaction_date: 2015/05/01
      to_transaction_date: 2015/05/31
- name: refund
  endpoint:
    path: /transactions/refunds/:transaction_id
    method: GET
    data_selector: refund
    params: {}
- name: refund
  endpoint:
    path: /transactions/refunds/:transaction_id
    method: GET
    data_selector: refund
    params: {}
- name: create_refund
  endpoint:
    path: /transactions/refunds
    method: POST
    data_selector: refund
    params: {}
- name: refund
  endpoint:
    path: /transactions/refunds/:transaction_id
    method: PUT
    data_selector: refund
- name: refund
  endpoint:
    path: /v2/transactions/refunds/:transaction_id
    method: DELETE
    data_selector: refund
    params:
      transaction_id: string
- name: customers
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: customers
    params: {}
- name: customer
  endpoint:
    path: /v2/customers/:customer_id
    method: GET
    data_selector: customer
    params:
      customer_id: string
- name: create_customer
  endpoint:
    path: /v2/customers
    method: POST
    data_selector: customer
    params: {}
- name: customers
  endpoint:
    path: /v2/customers
    method: POST
    data_selector: customer
    params: {}
- name: update_customers
  endpoint:
    path: /v2/customers/:customer_id
    method: PUT
    data_selector: customer
    params: {}
- name: delete_customers
  endpoint:
    path: /v2/customers/:customer_id
    method: DELETE
    data_selector: customer
    params: {}
- name: rates_for_location
  endpoint:
    path: /v2/rates/:zip
    method: GET
    data_selector: rate
    params: {}
- name: validate_address
  endpoint:
    path: /v2/addresses/validate
    method: POST
    data_selector: addresses
- name: summary_rates
  endpoint:
    path: /v2/summary_rates
    method: GET
    data_selector: summary_rates
- name: ratesForLocation
  endpoint:
    path: /rates/:zip
    method: GET
    data_selector: rate
    params: {}
- name: nexusRegions
  endpoint:
    path: /nexus/regions
    method: GET
    data_selector: regions
    params: {}
- name: validateAddress
  endpoint:
    path: /addresses/validate
    method: POST
    data_selector: addresses
    params: {}
- name: create_order
  endpoint:
    path: /v2/transactions/orders
    method: POST
    data_selector: order
    params: {}
- name: taxes
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: taxes
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: categories
  endpoint:
    path: /v2/categories
    method: GET
    data_selector: categories
    params: {}
- name: tax
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: categories
  endpoint:
    path: /v2/categories
    method: GET
    data_selector: categories
    params: {}
- name: categories
  endpoint:
    path: /v2/categories
    method: GET
    data_selector: categories
- name: tax_for_order
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax_categories
  endpoint:
    path: /categories
    method: GET
- name: sales_tax_calculation
  endpoint:
    path: /taxes
    method: POST
- name: order_transactions
  endpoint:
    path: /transactions/orders
    method: GET
- name: refund_transactions
  endpoint:
    path: /transactions/refunds
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: tax_rates
  endpoint:
    path: /rates
    method: GET
- name: nexus_regions
  endpoint:
    path: /nexus
    method: GET
- name: address_validation
  endpoint:
    path: /validations/address
    method: POST
- name: summarized_rates
  endpoint:
    path: /rates/summarized
    method: GET
- name: taxes
  endpoint:
    path: /taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax_for_order
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
- name: tax
  endpoint:
    path: /tax
    method: GET
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /tax
    method: POST
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /v2/taxes
    method: POST
    params:
      to_country: required
      to_zip: required
      to_state: required
      shipping: required
- name: orders
  endpoint:
    path: /v2/transactions/orders
    method: GET
    data_selector: orders
    params:
      from_transaction_date: 2015/05/01
      to_transaction_date: 2015/05/31
- name: order
  endpoint:
    path: /v2/transactions/orders/:transaction_id
    method: GET
    data_selector: order
    params:
      transaction_id: required
- name: transactions_orders
  endpoint:
    path: /transactions/orders
    method: POST
    data_selector: order
    params:
      transaction_id: transaction_id
      transaction_date: transaction_date
      to_country: to_country
      to_zip: to_zip
      to_state: to_state
      to_city: to_city
      to_street: to_street
      amount: amount
      shipping: shipping
      sales_tax: sales_tax
      line_items: line_items
- name: update_order
  endpoint:
    path: /v2/transactions/orders/:transaction_id
    method: PUT
    data_selector: order
- name: delete_order
  endpoint:
    path: /v2/transactions/orders/:transaction_id
    method: DELETE
- name: list_refunds
  endpoint:
    path: /v2/transactions/refunds
    method: GET
- name: show_refund
  endpoint:
    path: /v2/transactions/refunds/:transaction_id
    method: GET
- name: refund_transaction
  endpoint:
    path: /v2/transactions/refunds/:transaction_id
    method: PUT
    data_selector: refund
    params: {}
- name: refund_transaction
  endpoint:
    path: /transactions/refunds
    method: POST
    data_selector: refund
- name: customer
  endpoint:
    path: /v2/customers
    method: POST
    data_selector: customer
    params: {}
- name: customer
  endpoint:
    path: /v2/customers/:customer_id
    method: PUT
    data_selector: customer
    params: {}
- name: tax_rates
  endpoint:
    path: /v2/rates/:zip
    method: GET
    data_selector: rates
    params: {}
- name: delete_refund
  endpoint:
    path: /v2/transactions/refunds/:transaction_id
    method: DELETE
- name: list_customers
  endpoint:
    path: /v2/customers
    method: GET
- name: show_customer
  endpoint:
    path: /v2/customers/:customer_id
    method: GET
- name: nexus_regions
  endpoint:
    path: /nexus/regions
    method: GET
    data_selector: regions
- name: rates
  endpoint:
    path: /rates/:zip
    method: GET
    data_selector: rate
    params: {}
- name: validate_address
  endpoint:
    path: /addresses/validate
    method: POST
    data_selector: addresses
- name: summary_rates
  endpoint:
    path: /summary_rates
    method: GET
    data_selector: summary_rates
- name: categories
  endpoint:
    path: /v2/categories
    method: GET
    data_selector: categories
    params: {}
- name: tax
  endpoint:
    path: /taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /tax
    method: GET
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: tax
  endpoint:
    path: /v2/taxes
    method: POST
    data_selector: tax
    params: {}
- name: order_transactions
  endpoint:
    path: /v2/transactions/orders
    method: GET
    data_selector: orders
    params: {}
- name: show_order_transaction
  endpoint:
    path: /v2/transactions/orders/:transaction_id
    method: GET
    data_selector: order
    params: {}
- name: create_order_transaction
  endpoint:
    path: /v2/transactions/orders
    method: POST
    data_selector: order
    params: {}
- name: orders
  endpoint:
    path: /transactions/orders
    method: POST
    data_selector: order
    params:
      transaction_id: transaction_id
      transaction_date: transaction_date
      to_country: to_country
      to_zip: to_zip
      to_state: to_state
      to_city: to_city
      to_street: to_street
      amount: amount
      shipping: shipping
      sales_tax: sales_tax
      line_items: line_items
- name: orders
  endpoint:
    path: /transactions/orders/:transaction_id
    method: PUT
    data_selector: order
    params:
      transaction_id: transaction_id
- name: refunds
  endpoint:
    path: /transactions/refunds
    method: GET
    data_selector: refunds
    params:
      from_transaction_date: from_transaction_date
      to_transaction_date: to_transaction_date
- name: refund
  endpoint:
    path: /v2/transactions/refunds/:transaction_id
    method: GET
    data_selector: refund
    params: {}
- name: create_refund
  endpoint:
    path: /v2/transactions/refunds
    method: POST
    data_selector: refund
    params: {}
- name: refund
  endpoint:
    path: /v2/transactions/refunds/:transaction_id
    method: DELETE
    data_selector: refund
    params: {}
- name: customers
  endpoint:
    path: /v2/customers
    method: GET
    data_selector: customers
    params: {}
- name: customer
  endpoint:
    path: /v2/customers/:customer_id
    method: GET
    data_selector: customer
    params: {}
- name: refund
  endpoint:
    path: /v2/transactions/refunds
    method: POST
    data_selector: refund
    params:
      transaction_id: string
      transaction_reference_id: string
      transaction_date: datetime
      provider: string
      from_country: string
      from_zip: string
      from_state: string
      from_city: string
      from_street: string
      to_country: string
      to_zip: string
      to_state: string
      to_city: string
      to_street: string
      amount: float
      shipping: float
      sales_tax: float
      line_items[][id]: string
      line_items[][quantity]: integer
      line_items[][product_identifier]: string
      line_items[][description]: string
      line_items[][product_tax_code]: string
      line_items[][unit_price]: float
      line_items[][discount]: float
      line_items[][sales_tax]: float
- name: customer
  endpoint:
    path: /v2/customers
    method: POST
    data_selector: customer
    params: {}
- name: update_customer
  endpoint:
    path: /v2/customers/:customer_id
    method: PUT
    data_selector: customer
    params: {}
- name: delete_customer
  endpoint:
    path: /v2/customers/:customer_id
    method: DELETE
    data_selector: customer
    params: {}
- name: delete_customer
  endpoint:
    path: /v2/customers/:customer_id
    method: DELETE
    data_selector: customer
    params: {}
- name: rates_for_location
  endpoint:
    path: /v2/rates/:zip
    method: GET
    data_selector: rate
    params: {}
- name: nexus_regions
  endpoint:
    path: /v2/nexus/regions
    method: GET
    data_selector: regions
    params: {}
- name: nexus_regions
  endpoint:
    path: /v2/nexus/regions
    method: GET
    data_selector: regions
- name: validate_address
  endpoint:
    path: /v2/addresses/validate
    method: POST
    data_selector: addresses
- name: summary_rates
  endpoint:
    path: /v2/summary_rates
    method: GET
    data_selector: summary_rates
- name: summary_rates
  endpoint:
    path: /v2/summary_rates
    method: GET
    data_selector: summary_rates
notes:
- Food and grocery items are exempt from all sales tax in states such as California,
  New York, and Texas.
- For interstate transactions, nexus won’t trigger for the destination state unless
  you provide the destination state via nexus_addresses[] or have the destination
  state on file in your TaxJar account.
- Supports multiple response scenarios including origin-based sourcing and shipping
  exemptions.
- Uses tax calculation based on location and exemptions.
- Either `amount` or `line_items` parameters are required to perform tax calculations.
- The `to_zip` parameter is required when `to_country` is ‘US’.
- The `to_state` parameter is required when `to_country` is ‘US’ or ‘CA’.
- Either an address on file, `nexus_addresses` parameter, or `from_` parameters are
  required to perform tax calculations.
- Either an address on file or from_ parameters are required to create order transactions.
- The transaction_id should only include alphanumeric characters, underscores, and
  dashes.
- The transaction_date may be a date ‘2015-05-25’, an ISO UTC date/time ‘2015-05-25T13:05:45’,
  or an ISO date/time with zone offset ‘2015-05-25T13:05:45-05:00’.
- Either an address on file or `from_` parameters are required to update order transactions.
- The `transaction_date` may be a date ‘2015-05-25’, an ISO UTC date/time ‘2015-05-25T13:05:45’,
  or an ISO date/time with zone offset ‘2015-05-25T13:05:45-05:00’.
- Either an address on file or from_ parameters are required to create refund transactions.
- We recommend passing negative values for monetary amounts when creating or updating
  refund transactions.
- Either an address on file or from_ parameters are required to update refund transactions.
- Requires API key for authorization
- This endpoint only returns the full combined rate for a given location.
- It does not support nexus determination, sourcing based on a ship from and ship
  to address, shipping taxability, product exemptions, customer exemptions, or sales
  tax holidays.
- Lists existing nexus locations for an existing TaxJar account.
- Returns a regions JSON object with an array of nexus regions sorted alphabetically.
- Address validation requires a TaxJar Professional or higher subscription.
- At this time only US addresses can be validated.
- Uses API key for authentication
- Supports tax calculation based on origin and destination addresses.
- Freight is taxable depending on the jurisdiction
- Requires proper setup for jurisdiction data
- '`to_zip` parameter is required when `to_country` is ‘US’.'
- '`to_state` parameter is required when `to_country` is ‘US’ or ‘CA’.'
- Endpoints only affect orders and refunds created specifically through the API.
- We recommend passing positive values for monetary amounts when creating or updating
  order transactions.
- Either an address on file or `from_` parameters are required to update refund transactions.
- This API does not support nexus determination, sourcing based on a ship from and
  ship to address, shipping taxability, product exemptions, customer exemptions, or
  sales tax holidays.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some products are exempt in certain states, but not others.
- Returns a `categories` JSON object with an array of product categories and corresponding
  tax codes.
- Uses API key for authentication.
- Order amount may vary based on location and taxable items.
- Tax calculations can vary based on exemptions.
- Supports various tax scenarios including clothing exemptions and food & grocery
  exemptions.
- Use `transaction_date` to list transactions for a specific date. Otherwise, use
  `from_transaction_date` and `to_transaction_date` for a range of dates.
- Either an address on file, `nexus_addresses` parameter, or `from_` parameters are
  required to perform tax calculations. Providing `nexus_addresses` in API calls will
  override TaxJar Account ‘State Settings’ configurations.
- Either an address on file or from_ parameters are required to update order transactions.
- Either an address on file or `from_` parameters are required to create refund transactions.
- The `transaction_id` should only include alphanumeric characters, underscores, and
  dashes.
- We recommend passing **negative** values for monetary amounts when creating or updating
  refund transactions.
- API Key is required for authentication.
- Calculate sales tax for origin-based states
- Ensure that your account is set up with the correct API key
- Ensure proper API key setup.
- Requires API key for authentication
- Uses destination as the tax source
- Freight taxable status may vary by jurisdiction
- Use `transaction_date` to list transactions for a specific date.
- The 'provider' parameter defaults to 'api' if not provided.
- Sandbox environment available for testing.
- Does not support nexus determination or product exemptions.
- Platform Updated DNS records. The TaxJar API will now redirect traffic from HTTP
  to HTTPS via 301 redirect.
- Certain products may be exempted from sales tax or taxed at different rates depending
  on the jurisdiction.
- If no `product_tax_code` is submitted with a `line_item`, then that item is deemed
  to be fully taxable.
- If no product_tax_code is submitted with a line_item, then that item is deemed to
  be fully taxable.
- TLS 1.2 is required for all requests to TaxJar as of July 1, 2020.
- TLS protocol is used to encrypt your servers’ communications with TaxJar.
- Uses origin-based sourcing for some calculations
- Some jurisdictions may have specific tax rules
- Supports clothing exemptions based on jurisdiction.
- Food and grocery taxes may be exempt based on location.
- Creates a new customer.
- Deletes an existing refund transaction created through the API.
- Manage your exempt customers (wholesale, government, etc) for sales tax calculations,
  reporting, and filing in TaxJar.
- Data should always be JSON-encoded.
- TaxJar has introduced API versioning to deliver enhanced validations and features.
- Shipping charges are not taxable in certain states
- Clothing exemptions apply in specific states
- Shipping is taxable in some jurisdictions and exempt in others.
- Requires valid API key for authorization.
- API key required for authentication
errors:
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 406 Not Acceptable
- 422 Unprocessable Entity
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or token expiration'
- amount param does not equal sum of line_items + shipping
- line_items[][description] param exceeds limit of 255 characters
- '400 Bad Request: Check if required fields are present and correctly formatted.'
- '401 Unauthorized: Check API key and permissions'
- '401 Unauthorized: Check API key validity'
- '400 Bad Request: Check required parameters'
- '404 Not Found: If no addresses are found'
- '400: Bad Request – Your request format is bad.'
- '401: Unauthorized – Your API key is wrong.'
- '403: Forbidden – The resource requested is not authorized for use.'
- '404: Not Found – The specified resource could not be found.'
- '405: Method Not Allowed – You tried to access a resource with an invalid method.'
- '406: Not Acceptable – Your request is not acceptable.'
- '410: Gone – The resource requested has been removed from our servers.'
- '422: Unprocessable Entity – Your request could not be processed.'
- '429: Too Many Requests – You’re requesting too many resources! Slow down!'
- '500: Internal Server Error – We had a problem with our server. Try again later.'
- '503: Service Unavailable – We’re temporarily offline for maintenance. Try again
  later.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Validate your API key.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check API key'
- '400 Bad Request: Check request parameters'
- 'INVALID_REQUEST: Check your request parameters'
- 'NOT_FOUND: The requested resource could not be found'
- '400 Bad Request: Check input parameters'
- '401 Unauthorized: Verify API key validity'
- '404 Not Found: Endpoint does not exist'
- '401 Unauthorized: Recheck API key validity'
- No matching categories found.
- '401 Unauthorized: Check API key.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check the request parameters for validity.'
- '401 Unauthorized: Ensure the API key is correct.'
- '404 Not Found: Verify the transaction_id exists.'
- 'Invalid transaction_id: Ensure it contains only alphanumeric characters, underscores,
  and dashes.'
- 'Invalid request format: Check the required fields in the request.'
- '404 Not Found: Customer ID does not exist.'
- '400 Bad Request: Invalid parameters provided.'
- '401 Unauthorized: API key is invalid or missing.'
- '404: No addresses found'
- 400 Bad Request – Your request format is bad.
- 401 Unauthorized – Your API key is wrong.
- 403 Forbidden – The resource requested is not authorized for use.
- 404 Not Found – The specified resource could not be found.
- 405 Method Not Allowed – You tried to access a resource with an invalid method.
- 406 Not Acceptable – Your request is not acceptable.
- 410 Gone – The resource requested has been removed from our servers.
- 422 Unprocessable Entity – Your request could not be processed.
- 429 Too Many Requests – You’re requesting too many resources! Slow down!
- 500 Internal Server Error – We had a problem with our server. Try again later.
- 503 Service Unavailable – We’re temporarily offline for maintenance. Try again later.
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your API key'
- '422 Unprocessable Entity: Review the request data format'
- '401 Unauthorized: Check your API key.'
- '422 Unprocessable Entity: Verify input data.'
- '422 Unprocessable Entity: Verify input parameters'
- '404 Not Found: Verify the endpoint and parameters'
- '400 Bad Request: Check required parameters for the request'
- '401 Unauthorized: Recheck API key or permissions'
- '404 Not Found: Check the transaction ID'
- '400 Bad Request: Check required parameters and their formats.'
- '401 Unauthorized: Ensure the API key is valid.'
- '404 Not Found: Verify the transaction ID.'
- '429 Too Many Requests: Exceeded rate limit.'
- '406 Not Acceptable: transaction_id is missing'
- 'Unauthorized: Invalid API token'
- '401 Unauthorized: Recheck API token or scopes'
- '401 Unauthorized: Recheck API token or permissions'
- '422 Unprocessable Entity: Check request parameters'
- 'INVALID_REQUEST: Check the request parameters'
- 'UNAUTHORIZED: Ensure API key is valid'
- 'RATE_LIMIT_EXCEEDED: Reduce the number of requests'
- '400 Bad Request: Check the request parameters and values.'
- '400 Bad Request: Check if required fields are missing or invalid.'
- '401 Unauthorized: Check API key or permissions.'
- '401 Unauthorized: Recheck API key'
- 'transaction_id: Unique identifier of the given refund transaction.'
- 'transaction_reference_id: Unique identifier of the corresponding order transaction
  for the refund.'
- 'transaction_date: The date/time the transaction was originally recorded.'
- 'to_country: Two-letter ISO country code of the country where the order shipped
  to.'
- 'to_zip: Postal code where the order shipped to (5-Digit ZIP or ZIP+4).'
- 'to_state: Two-letter ISO state code where the order shipped to.'
- 'amount: Total amount of the refunded order with shipping, excluding sales tax in
  dollars.'
- 'shipping: Total amount of shipping for the refunded order in dollars.'
- 'sales_tax: Total amount of sales tax collected for the refunded order in dollars.'
- '401 Unauthorized: Recheck API key or token'
- '404 Not Found: No addresses were found.'
- '401 Unauthorized: Invalid API key'
- '422 Unprocessable Entity: Validation errors in request'
- 'INVALID_REQUEST: Verify the request format and parameters.'
- 'UNAUTHORIZED: Check API key or authentication method.'
- '403 Forbidden: Check API key permissions.'
- '404 Not Found: Verify endpoint URL.'
- '400 Bad Request: Ensure all required fields are filled.'
- 'Invalid request: Check the parameters and their values.'
- 'Missing required parameters: Ensure all required fields are included.'
- '404 Not Found: Verify transaction_id'
- '400 Bad Request: Invalid input or missing required fields'
auth_info:
  mentioned_objects:
  - TaxJarTax
  - TaxJarBreakdown
  - TaxJarJurisdictions
  - Taxjar::Client
  - TaxjarClient
client:
  base_url: https://api.taxjar.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
