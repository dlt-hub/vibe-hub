resources:
- name: transaction
  endpoint:
    path: /TerminalTransaction
    method: GET
    data_selector: response
    params: {}
- name: tip_adjustment
  endpoint:
    path: /TerminalTransaction
    method: POST
    data_selector: response
    params:
      RegisterId: '3'
      TPN: '123456789123'
      TransType: TipAdjust
      Amount: '100.00'
      Tip: '10.00'
      RefId: '2'
      MerchantId: '123124125134'
- name: void_transaction
  endpoint:
    path: /TerminalTransaction
    method: POST
    data_selector: response
    params:
      RegisterId: '1'
      TPN: '123456789123'
      MerchantId: '123124125126'
      PaymentType: Credit
      TransType: Void
      Amount: '11.00'
      RefId: '3'
- name: transaction_status
  endpoint:
    path: /TerminalTransaction
    method: POST
    data_selector: response
    params:
      RegisterId: '3'
      TPN: '123456789123'
      MerchantId: '123456789123'
      PaymentType: Credit
      TransType: Status
      RefId: '3'
      PrintReceipt: Merchant
- name: settlement_request
  endpoint:
    path: /TerminalTransaction
    method: POST
    data_selector: response
    params:
      RegisterId: '3'
      TPN: '123456789123'
      MerchantId: '123124125126'
      RefId: '2'
      TransType: Settle
      Param: Close
- name: printout_request
  endpoint:
    path: /TerminalTransaction
    method: POST
    data_selector: response
    params:
      RegisterId: '3'
      TPN: '123456789123'
      AuthKey: 234123-74653252-663525223
      RefId: '2'
- name: Get Card Request
  endpoint:
    path: /TerminalTransaction
    method: POST
- name: User Choice Request
  endpoint:
    path: /TerminalTransaction
    method: POST
- name: User Input Request
  endpoint:
    path: /TerminalTransaction
    method: POST
- name: Batch Report Request
  endpoint:
    path: /TerminalTransaction
    method: POST
- name: Level 2 & Level 3 Data
  endpoint:
    path: /TerminalTransaction
    method: POST
- name: display_cart_items
  endpoint:
    path: /SPIn/cgi.html
    method: GET
    data_selector: response
    params: {}
- name: customer_signature
  endpoint:
    path: /TerminalTransaction
    method: POST
    data_selector: request
    params: {}
- name: hsa_fsa_transaction
  endpoint:
    path: /TerminalTransaction
    method: POST
    data_selector: request
    params: {}
- name: ACH Payment
  endpoint:
    path: /v1/ipospays-ftd-ach.js
    method: GET
    data_selector: achData
- name: Card Payment
  endpoint:
    path: /v1/freedomtodesign.js
    method: GET
    data_selector: payment_token_id
- name: Google Pay
  endpoint:
    path: /v1/gpay-ftd.js
    method: GET
    data_selector: paymentData
- name: Apple Pay
  endpoint:
    path: /v1/ipospays-apple-pay-ftd.js
    method: GET
    data_selector: paymentData
- name: getHostedPaymentPage
  endpoint:
    path: /api/v1/external-payment-transaction
    method: POST
    data_selector: message
- name: queryPaymentStatus
  endpoint:
    path: /api/v1/payment-status
    method: POST
    data_selector: status
- name: queryPaymentStatus
  endpoint:
    path: /v1/queryPaymentStatus
    method: GET
    data_selector: response
    params:
      TPN: TPN number
      transactionReferenceId: Merchant unique transaction reference id
- name: queryPaymentStatus
  endpoint:
    path: /queryPaymentStatus
    method: GET
    data_selector: iposHPResponse
    params: {}
- name: payment
  endpoint:
    path: /api/payment
    method: POST
    data_selector: transaction
    params: {}
- name: Device Register
  endpoint:
    path: /device/register
    method: POST
    data_selector: onTerminalAdded
    params: {}
- name: Perform Transaction
  endpoint:
    path: /transaction/perform
    method: POST
    data_selector: transactionResult
    params: {}
- name: Batch Settlement
  endpoint:
    path: /batch/settle
    method: POST
    data_selector: message
    params: {}
- name: Tip Adjust
  endpoint:
    path: /transaction/tip-adjust
    method: POST
    data_selector: transactionResult
    params: {}
- name: Get TPN
  endpoint:
    path: /terminal/get-tpn
    method: POST
    data_selector: TPN
    params: {}
- name: Device Detail
  endpoint:
    path: /device/detail
    method: POST
    data_selector: model
    params: {}
- name: Status Check
  endpoint:
    path: /transaction/status
    method: POST
    data_selector: transactionResult
    params: {}
- name: Administrative Txn
  endpoint:
    path: /transaction/administrative
    method: POST
    data_selector: transactionResult
    params: {}
- name: device_register
  endpoint:
    path: /device/register
    method: POST
    data_selector: transactionResult
    params: {}
- name: perform_transaction
  endpoint:
    path: /transaction/perform
    method: POST
    data_selector: transactionResult
    params: {}
- name: batch_settlement
  endpoint:
    path: /transaction/batch_settle
    method: POST
    data_selector: transactionResult
    params: {}
- name: tip_adjust
  endpoint:
    path: /transaction/tip_adjust
    method: POST
    data_selector: transactionResult
    params: {}
- name: get_tpn
  endpoint:
    path: /device/getTPN
    method: POST
    data_selector: transactionResult
    params: {}
- name: device_detail
  endpoint:
    path: /device/detail
    method: POST
    data_selector: transactionResult
    params: {}
- name: status_check
  endpoint:
    path: /transaction/status
    method: POST
    data_selector: transactionResult
    params: {}
- name: administrative_txn
  endpoint:
    path: /transaction/admin
    method: POST
    data_selector: transactionResult
    params: {}
- name: device_register
  endpoint:
    path: /device/register
    method: POST
    data_selector: registration
    params: {}
- name: perform_transaction
  endpoint:
    path: /transaction/perform
    method: POST
    data_selector: transaction
    params: {}
- name: batch_settlement
  endpoint:
    path: /batch/settle
    method: POST
    data_selector: batch
    params: {}
- name: tip_adjustment
  endpoint:
    path: /tip/adjust
    method: POST
    data_selector: tip
    params: {}
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
    params: {}
- name: transaction_response
  endpoint:
    path: /transaction/response
    method: POST
    data_selector: transactionData
- name: batch_settlement
  endpoint:
    path: /batch/settlement
    method: POST
    data_selector: settlements
- name: transaction
  endpoint:
    path: /performTransaction
    method: POST
    data_selector: transactionResponse
    params: {}
- name: transaction
  endpoint:
    path: /startTransaction
    method: POST
    data_selector: Spin_Response
    params: {}
- name: ticket_transaction
  endpoint:
    path: /startTicket
    method: POST
    data_selector: Spin_Response
    params: {}
- name: void_transaction
  endpoint:
    path: /startVoid
    method: POST
    data_selector: Spin_Response
    params: {}
- name: external_payment_transaction
  endpoint:
    path: /startTransactionExternalPayment
    method: POST
    data_selector: Spin_Response
    params: {}
- name: batch_settlement
  endpoint:
    path: /startBatchSettlement
    method: POST
    data_selector: transaction_title
    params: {}
- name: status_check
  endpoint:
    path: /startStatusCheckforTXN
    method: POST
    data_selector: Spin_Response
    params: {}
- name: send_receipt
  endpoint:
    path: /sendReceipt
    method: POST
    data_selector: Spin_Response
    params: {}
- name: Sale
  endpoint:
    path: /transactions/sale
    method: POST
    data_selector: transaction
    params: {}
- name: Pre Auth
  endpoint:
    path: /transactions/pre-auth
    method: POST
    data_selector: transaction
    params: {}
- name: Void
  endpoint:
    path: /transactions/void
    method: POST
    data_selector: transaction
    params: {}
- name: Refund
  endpoint:
    path: /transactions/refund
    method: POST
    data_selector: transaction
    params: {}
- name: Ticket
  endpoint:
    path: /transactions/ticket
    method: POST
    data_selector: transaction
    params: {}
- name: Tip Adjust
  endpoint:
    path: /transactions/tip-adjust
    method: POST
    data_selector: transaction
    params: {}
- name: Incremental Auth
  endpoint:
    path: /transactions/incremental-auth
    method: POST
    data_selector: transaction
    params: {}
- name: Open Batch
  endpoint:
    path: /transactions/open-batch
    method: GET
    data_selector: batch
    params: {}
- name: Batch Settlement
  endpoint:
    path: /transactions/batch-settlement
    method: POST
    data_selector: settlement
    params: {}
- name: Gift
  endpoint:
    path: /transactions/gift
    method: POST
    data_selector: transaction
    params: {}
- name: transact
  endpoint:
    path: /api/v3/iposTransact
    method: POST
    data_selector: response
    params: {}
- name: iPOS-TransactResponse
  endpoint:
    path: /iPOS-TransactResponse
    method: GET
    data_selector: response
    params: {}
- name: sale_cardToken
  endpoint:
    path: /sale/cardToken
    method: POST
    data_selector: iposTransactResponse
    params: {}
- name: sale_paymentTokenId
  endpoint:
    path: /sale/paymentTokenId
    method: POST
    data_selector: iposTransactResponse
    params: {}
- name: sale_encryptedCardData
  endpoint:
    path: /sale/encryptedCardData
    method: POST
    data_selector: iposTransactResponse
    params: {}
- name: pre_auth_cardToken
  endpoint:
    path: /pre_auth/cardToken
    method: POST
    data_selector: iposTransactResponse
    params: {}
- name: pre_auth_paymentTokenId
  endpoint:
    path: /pre_auth/paymentTokenId
    method: POST
    data_selector: iposTransactResponse
    params: {}
- name: pre_auth_encryptedCardData
  endpoint:
    path: /pre_auth/encryptedCardData
    method: POST
    data_selector: iposTransactResponse
    params: {}
- name: void
  endpoint:
    path: /void
    method: POST
    data_selector: iposTransactResponse
    params: {}
- name: refund
  endpoint:
    path: /refund
    method: POST
    data_selector: iposTransactResponse
    params: {}
- name: ticket
  endpoint:
    path: /ticket
    method: POST
    data_selector: iposTransactResponse
    params: {}
- name: tip_adjust
  endpoint:
    path: /tipAdjust
    method: POST
- name: zero_dollar_tip_adjust
  endpoint:
    path: /zeroDollarTipAdjust
    method: POST
- name: incremental_auth
  endpoint:
    path: /incrementalAuth
    method: POST
- name: open_batch
  endpoint:
    path: /openBatch
    method: POST
- name: batch_settlement
  endpoint:
    path: /batchSettlement
    method: POST
- name: gift_transaction
  endpoint:
    path: /giftTransaction
    method: POST
- name: sale
  endpoint:
    path: /sale
    method: POST
    data_selector: iposhpresponse
    params: {}
- name: void
  endpoint:
    path: /void
    method: POST
    data_selector: iposhpresponse
    params: {}
- name: refund
  endpoint:
    path: /refund
    method: POST
    data_selector: iposhpresponse
    params: {}
- name: hsa_fsa
  endpoint:
    path: /hsa_fsa
    method: POST
    data_selector: iposhpresponse
    params: {}
- name: transaction_event
  endpoint:
    path: /transaction/event
    method: POST
    data_selector: data
- name: settlement_event
  endpoint:
    path: /settlement/event
    method: POST
    data_selector: settlementTxnDetails
- name: merchant
  endpoint:
    path: /onboardmerchant
    method: POST
    data_selector: data
    params: {}
- name: store_onboarding
  endpoint:
    path: /create/store
    method: POST
    data_selector: data
    params: {}
- name: tpn_creation
  endpoint:
    path: /create/tpn
    method: POST
    data_selector: data
    params: {}
- name: batch_report
  endpoint:
    path: /api/v1/batch-report
    method: POST
    data_selector: data
    params:
      merchantId: your_merchant_id_here
      batchDate: YYYY-MM-DD
      batchNo: your_batch_number_here
- name: batches
  endpoint:
    path: /batch/report
    method: GET
    data_selector: batch_profiles
    params:
      merchantId: '254525842756'
- name: batch_profiles
  endpoint:
    path: /batch_profiles
    method: GET
    data_selector: batch_profiles
    params: {}
- name: cash_payment
  endpoint:
    path: /cash_payment
    method: GET
    data_selector: cash_payment
    params: {}
- name: alter_payments
  endpoint:
    path: /alter_payments
    method: GET
    data_selector: alter_payments
    params: {}
- name: iposTransactStatus
  endpoint:
    path: /iposTransactStatus
    method: POST
    data_selector: iposhpresponse.Response
    params: {}
- name: generate_auth_token
  endpoint:
    path: /v1/authenticate-token
    method: POST
    data_selector: token
- name: refresh_auth_token
  endpoint:
    path: /v1/refresh-token
    method: POST
    data_selector: token
notes:
- Users must be onboarded on the iPOSpays sandbox (UAT) environment as a merchant.
- Users must be onboarded on the iPOSpays production environment as a merchant.
- Users should be onboarded on iPOSpays sandbox(UAT) environment as a merchant and
  have a valid TPN.
- Users should be onboarded on iPOSpays production environment as a merchant and have
  a valid TPN.
- Default timeout is 120 seconds. Custom timeout can be set with OperationalTimeout
  tag.
- Terminal remains in listening mode when sending line item requests.
- notifyCustomer can be set to true to alert the customer with a tone.
- This system focuses on data collection and tokenization.
- It's not a complete payments API. To process transactions, you'll need to use this
  in conjunction with the iPOS Transact API.
- The payment token can only be used once and will expire after 24 hours if it is
  not used at all.
- The URL will be different for production.
- All of our payment applications included in this page comply with PCI DSS (Payment
  Card Industry Data Security Standard).
- Ensure the DvPayLite application is installed on the payment terminal. If it is
  not installed, complete the installation before proceeding with the integration.
- Users should be onboarded as a merchant to access the APIs.
- Ensure session key is valid before making API requests.
- All of our payment applications included in this page comply with PCI DSS.
- Merchants must install both the third-party application and iPOSgo! to enable payment
  processing.
- The device region must be set to the US (United States).
- Users should be onboarded on the iPOSpays sandbox(UAT) environment as a merchant
  and have a valid TPN.
- Users should be onboarded on the iPOSpays production environment as a merchant and
  have a valid TPN.
- Always perform a parameter update in the iPOSgo! app after making any changes to
  parameter settings on the iPOSpays portal to ensure the latest configurations are
  applied.
- Merchants must purchase the entitlement for using Dejavoo as their PSP (Payment
  Service Provider). Without this entitlement, transactions through Dejavoo devices
  will not be supported.
- Receipt can be sent via SMS or Email but not both.
- Uses API key for authentication.
- Token required for all transactions.
- Always use the appropriate version based on your transaction and data security requirements.
- Subscriptions must be recreated separately and cannot be imported.
- Each unique customer in the transferred data file will be created as a Customer
  in iPOSpays, along with their associated cards as Card or Source objects.
- Requires setup of connected app in api
- Tokens generated in UAT will not work in production and vice versa.
- Returns a single batch object when TPN, batch number, and a date are provided.
- Returns all batches for the specified date when TPN and a date are provided.
- Returns all recent batch records when only TPN is provided.
- Batch profiles contain transaction data and summaries.
- Cash payments and alter payments details are also included.
- The field TxnSettleStatus indicates whether the transaction has been settled or
  is still pending.
- The response structure varies slightly based on whether it is a card or an alternate
  payment method.
- Ensure that the transactionReferenceId used is the same one provided at the time
  of initiating the transaction.
errors:
- Connection has failed. For failed connections, contact support at support@dejavoosystems.com.
- 'ResultCode 0: Success'
- 'ResultCode 1: Failed'
- 'ResultCode 2: Canceled'
- <ResultCode>2</ResultCode> — error from SPIn Proxy
- <ResultCode>1</ResultCode> — error from Terminal
- '400 Bad Request: Check the input data for correctness'
- '401 Unauthorized: Ensure correct security key is provided'
- '404 Not Found: Verify endpoint URL'
- Invalid Merchant Id
- Invalid Transaction Type
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Invalid TPN: Ensure the TPN is correct.'
- 'Session key expired: Re-initiate device registration.'
- 'Invalid Access code: Verify the access code provided.'
- Account not allowed.
- Background request not allowed.
- Unsupported hardware or a problem with the device
- Please update your app to the latest iOS version.
- Current device doesn't support NFC.
- Please check your network settings and try again.
- An authentication error occurred during the server connection.
- Internal service is unavailable.
- Please try the session again to resolve the issue.
- The token is empty, making it invalid.
- Please reinitiate the session to try again
- Token Expired.
- The card reader is busy.
- Accept the Terms and Conditions using a valid Apple ID.
- Terms and Conditions have already been accepted.
- The system couldn't link or relink the merchant using the provided Apple ID.
- Please accept the Terms and Conditions on your device while signed into iCloud
- The linking or relinking operation has been canceled.
- The merchant is blocked
- The merchant is invalid or unknown
- 'invalid reader token: If the JWT token has expired, it throws an error.'
- Error message alerting users to incorrect merchant code entry.
- 'INVALID_API_KEY: Ensure that the API key is correct.'
- 'TRANSACTION_FAILED: Check transaction details and try again.'
- 'UNAUTHORIZED_ACCESS: Verify your API key and permissions.'
- Invalid RRN number
- no open batch for this TPN
- 'error_code: error_message'
- 'already_exists: Given merchant dba name input is already exists'
- 'already_exists: Given store dba name input is already exists'
- 'mandatory_field: Device model input is mandatory'
- '401: Access denied, invalid authorization token!'
- '401 Unauthorized: Recheck API key or secret key'
- 'IPOSTRANCT_001: No Transaction Registered with This TransactionRefId. Please try
  with valid details.'
- '05: NO EXISTING HOST - The host system does not exist or is unreachable.'
- '05: FEES N/A PROFILE - Fee settings are missing or misconfigured in the merchant
  profile.'
- '05: STMT/TXN INPRGRS - A settlement or transaction is still being processed.'
- '05: NO ORIGINAL TXN - The original transaction reference is missing or invalid.'
- '05: INCAUTH N/A AMEX - Incomplete or unavailable AMEX authorization.'
- '14: INVALID YEAR - The card''s expiration year is incorrect or not accepted.'
- '14: INVALID MONTH - The card''s expiration month is incorrect or not accepted.'
- '91: HOST NO RESPONSE - The acquiring host did not respond.'
- '35: GATEWAY KEY ERR - Error with the encryption key used for secure gateway communication.'
- 'R02: R02 RISK FLAGGED - Too many transactions or declines using cards that share
  the same BIN within a short time. BIN is blocked to prevent abuse.'
- 'R03: R03 RISK FLAGGED - High number and percentage of declined transactions within
  a short time — TPN is deactivated due to suspicious activity.'
- 'R04: R04 RISK FLAGGED - Transaction volume for the current open batch has reached
  its daily limit. No new sales are allowed until the batch is closed.'
- 'R05: R05 RISK FLAGGED - The daily limit for manual refunds was exceeded — either
  in total amount or number of refunds.'
- 'R06: R06 RISK FLAGGED - A sale transaction exceeded the maximum amount allowed
  for this terminal.'
- 'R07: R07 RISK FLAGGED - A manual refund exceeded the allowed limit for this terminal.'
- 'R08: R08 RISK FLAGGED - Daily EMV fallback limit reached. Further fallback transactions
  are blocked to prevent fraud.'
- 'R09: R09 RISK FLAGGED - International card transactions are not allowed for this
  terminal.'
- 'R10: R10 RISK FLAGGED - Too many transactions attempted using any cards (not limited
  to a BIN) in a short time. TPN is blocked to prevent bot-based attacks.'
- 'R11: R11 RISK FLAGGED - Refunds to international cards are restricted. Only domestic
  card refunds are allowed on this terminal.'
- 'R12: R12: INVALID CVV - The CVV code didn’t match the card. The transaction was
  declined and automatically voided.'
- 'R12: R12: INVALID ZIP - The ZIP code didn’t match the billing address. The transaction
  was declined and automatically voided.'
- '00: APPROVAL: Approved and completed'
- '01: CALL: Refer to issuer'
- '02: CALL: Refer to issuer-Special condition'
- '03: TERM ID ERROR: Invalid Merchant ID'
- '04: HOLD-CALL: Pick up card (no fraud)'
- '05: DECLINE: Do not honor'
- '06: ERROR: General error'
- '07: HOLD-CALL: Pick up card, special condition (fraud account)'
- '08: APPROVAL: Honor Mastercard with ID'
- '10: PARTIAL APPROVAL: Partial approval for the authorized amount returned in Group
  III version 022'
- '11: APPROVAL: VIP approval'
- '12: INVALID TRANS: Invalid transaction'
- '13: AMOUNT ERROR: Invalid amount'
- '14: CARD NO. ERROR: Invalid card number'
- '15: NO SUCH ISSUER: No such issuer'
- '19: RE ENTER: Re-enter transaction'
- '21: NO ACTION TAKEN: Unable to back out transaction'
- '25: NO CARD NUMBER: Unable to locate the account number'
- '28: NO REPLY: File is temporarily unavailable'
- '30: MSG FORMAT ERROR: Transaction was improperly formatted'
- '39: NO CREDIT ACCT: No credit account'
- '41: HOLD-CALL: Lost card, pick up (fraud account)'
- '43: HOLD-CALL: Stolen card, pick up (fraud account)'
- '46: CLOSED ACCOUNT: Closed account'
- '51: DECLINE: Insufficient funds'
- '52: NO CHECK ACCOUNT: No checking account'
- '53: NO SAVE ACCOUNT: No savings account'
- '54: EXPIRED CARD: Expired card'
- '55: WRONG PIN: Incorrect PIN'
- '57: SERV NOT ALLOWED: Transaction not permitted-Card'
- '58: SERV NOT ALLOWED: Transaction not permitted-Terminal'
- '59: SUSPECTED FRAUD: Suspected fraud'
- '61: EXC APPR AMT LIM: Exceeds approval amount limit'
- '62: DECLINE: Invalid service code, restricted'
- '63: SEC VIOLATION: Security violation'
- '65: EXC W/D FREQ LIM: Exceeds withdrawal frequency limit'
- '6P: VERIF DATA FAILD: Verification data failed'
- '75: PIN EXCEEDED: Allowable number of PIN-entry tries exceeded'
- '76: UNSOLIC REVERSAL: Unable to locate, no match'
- '77: NO ACTION TAKEN: Inconsistent, reversed, or repeat data'
- '78: NO ACCOUNT: Blocked, first used transaction from new cardholder, and card not
  properly unblocked'
- '79: ALREADY REVERSED: Already reversed at switch'
- '80: NO IMPACT: No Financial impact'
- '81: ENCRYPTION ERROR: Cryptographic error'
- '82: INCORRECT CVV: CVV data is not correct'
- '83: CANT VERIFY PIN: Cannot verify PIN'
- '85: CARD OK: No reason to decline'
- '86: CANT VERIFY PIN: Cannot verify PIN'
- '91: NO REPLY: Issuer or switch is unavailable'
- '92: INVALID ROUTING: Destination not found'
- '93: DECLINE: Violation, cannot complete'
- '94: DUPLICATE TRANS: Unable to locate, no match'
- '96: SYSTEM ERROR: System malfunction'
- 'A1: ACTIVATED: POS device authentication successful'
- 'A2: NOT ACTIVATED: POS device authentication not successful'
- 'A3: DEACTIVATED: POS device deactivation successful'
- 'A8: INVALID REGION CODE: Region code not valid'
- 'A9: INVALID COUNTRY CODE: Country code not valid'
- 'B1: SRCHG NOT ALLOWD: Surcharge amount not permitted'
- 'B2: SRCHG NOT ALLOWD: Surcharge amount not supported by debit network issuer'
- 'CV: FAILURE CV: Card Type Verification Error'
- 'D3: SECUR CRYPT FAIL: Transaction failure due to missing or invalid 3D-Secure cryptogram'
- 'E1: ENCR NOT CONFIGD: Encryption is not configured'
- 'E2: TERM NOT AUTHENT: Terminal is not authenticated'
- 'E3: DECRYPT FAILURE: Data could not be decrypted'
- 'EA: ACCT LENGTH ERR: Verification error'
- 'EB: CHECK DIGIT ERR: Verification error'
- 'EC: CID FORMAT ERROR: Verification error'
- 'H1: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'H2: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'H3: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'H4: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'H5: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'H6: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'H7: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'H8: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'H9: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'HV: FAILURE HV: Hierarchy Verification Error'
- 'K0: TOKEN RESPONSE: Token request was processed'
- 'K1: TOKEN NOT CONFIG: Tokenization is not configured'
- 'K2: TERM NOT AUTHENT: Terminal is not authenticated'
- 'K3: TOKEN FAILURE: Data could not be de-tokenized'
- 'M0: DOM DBT NOT ALWD: Mastercard: Canada region-issued Domestic Debit Transaction
  not allowed'
- 'N3: CACHBACK NOT AVL: Cash back service not available'
- 'N4: DECLINE: Exceeds issuer withdrawal limit'
- 'N7: CVV2 MISMATCH CVV2: Value supplied is invalid'
- 'P0: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'P1: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'P2: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'P3: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'P4: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'P5: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'P6: SERV NOT ALLOWED: Contact Merchant Services/Technical Support'
- 'P7: MISSING SERIAL NUM: The terminal has not yet completed the boarding process.'
- 'Q1: CARD AUTH FAIL: Card authentication failed'
- 'R0: STOP RECURRING: Customer requested stop of specific recurring payment'
- 'R1: STOP RECURRING: Customer requested stop of all recurring payments from specific
  merchant'
- 'R3: STOP ALL RECUR: All recurring payments have been canceled for the card number
  in the request'
- 'S0: INACTIVE CARD: The PAN used in the transaction is inactive.'
- 'S1: MOD 10 FAIL: The Mod-10 check failed.'
- 'S5: DCLN NO PRE AUTH: Decline – no preauthorization found.'
- 'S9: MAX BALANCE: Maximum working balance exceeded.'
- 'SA: SHUT DOWN: The Authorization Server is shut down.'
- 'SB: INVALID STATUS: Invalid card status – status is other than active'
- 'SC: UNKNOWN STORE: Unknown dealer/store code – special edit.'
- 'SD: TOO MANY RCHRGS: Maximum number of recharges is exceeded.'
- 'SE: ALREADY USED: Card was already used.'
- 'SF: NOT MANUAL: Manual transactions not allowed.'
- 'SH: TYPE UNKNOWN: Transaction type was unknown.'
- 'SJ: INVALID TENDER: An invalid tender type was submitted.'
- 'SK: CUSTOMER TYPE: An invalid customer type was submitted.'
- 'SL: PIN LOCKED: PIN was locked.'
- 'SM: MAX REDEMPTS: The maximum number of redemptions was exceeded.'
- 'SP: MAX PAN TRIES: The maximum number of PAN tries was exceeded.'
- 'SR: ALREADY ISSUED: The card was already issued.'
- 'SS: NOT ISSUED: The card was not issued.'
- 'T0: APPROVAL: First check is okay and has been converted.'
- 'T1: CANNOT CONVERT: The check is okay but cannot be converted.'
- 'T2: INVALIDABA: Invalid ABA number, not an ACH participant.'
- 'T3: AMOUNT ERROR: Amount greater than the limit.'
- 'V1: FAILURE VM: Daily threshold exceeded.'
- 'Z6: FIX INVALID MCC: Invalid use of MCC - correct and reattempt.'
- '400: Bad Request: The server could not understand the request due to invalid syntax'
- '401: Unauthorized: Authentication is required to access the requested resource'
- '403: Forbidden: Valid credentials, but access is explicitly denied'
- '404: Not Found: The server cannot find the requested resource'
- '405: Method Not Allowed: The HTTP method used is not supported for the requested
  resource'
- '408: Request Timeout: The server timed out waiting for the complete request from
  the client'
- '429: Too Many Requests: The user has sent too many requests in a given amount of
  time'
- '500: Internal Server Error: The server encountered an unexpected condition'
- '502: Bad Gateway: Error occurred between gateway/proxy and the backend server'
- '503: Service Unavailable: The server is currently unable to handle the request'
- '504: Gateway Timeout: The server did not receive a timely response from the upstream
  server'
- '505: HTTP Version Not Supported: The HTTP version used in the request is not supported
  by the server'
- 'IPOS_BATCH_001: Authentication token required.'
- 'IPOS_BATCH_002: Invalid Request'
- 'IPOS_BATCH_003: TPN Required'
- 'IPOS_BATCH_004: Invalid Batch Request'
- 'IPOS_BATCH_005: Invalid Batch Request'
- 'IPOS_BATCH_006: Invalid Batch Request.'
- 'IPOS_BATCH_007: Invalid Request'
- 'IPOS_BATCH_008: Invalid TPN'
- 'IPOS_BATCH_009: TPN suspended. Please contact the support team'
- 'IPOS_BATCH_010: TPN inactive. Please contact the support team'
- 'IPOS_BATCH_011: Invalid Token'
- 'IPOS_BATCH_012: Token not supported with BatchReport API.'
- 'IPOS_BATCH_013: ISO not authorized to access the BatchReport API.'
- 'IPOS_BATCH_014: Merchant not authorized to access the BatchReport API.'
- 'IPOS_BATCH_015: Store is not authorized to access the BatchReport API.'
- 'MTERR_004: Re-authentication required. Please authenticate again with a valid token.'
- 'MTERR_005: Token has expired'
- 'MTERR_006: Invalid token. Please provide a valid token.'
- 'MTERR_007: Token must include encrypted scope and unique identifier.'
- 'mandatory_field: If input field is mandatory'
- 'invalid_characters_or_length: If input field characters or length are not as specified'
- 'invalid_data: If input field data given is invalid'
- 'already_exists: If input given is already exists in our database'
- 'Methodinvalid_dependent_data: If dependent input given is invalid'
- 'invalid_object_name: If the payload has invalid object or not as specified'
- 'invalid_email: Merchant e-mail address should be valid and check email address
  is properly formatted'
- 'invalid_characters_or_length: Merchant e-mail address length cannot be exceed 255
  chars'
- 'invalid_data: Merchant first name input is invalid'
- 'invalid_characters_or_length: Merchant first name input should have min 2 & upto
  50 characters'
- 'invalid_data: Merchant last name input is invalid'
- 'invalid_characters_or_length: Merchant last name input should have min 2 & upto
  50 characters'
- 'invalid_data: Merchant address line 1 input is invalid'
- 'invalid_characters_or_length: Merchant address line 1 input should have min 2 &
  upto 35 characters'
- 'invalid_data: Merchant address line 2 input is invalid'
- 'invalid_characters_or_length: Merchant address line 2 should have min 2 and upto
  35 characters'
- 'invalid_data: Merchant zip code input is invalid'
- 'invalid_data: Merchant ISD code input is invalid (eg., input format is +1)'
- 'invalid_data: Merchant phone number input is invalid'
- 'invalid_characters_or_length: Merchant phone number input must have 10 characters'
- 'invalid_data: Merchant ebt data input is invalid, must be alphanumeric value'
- 'invalid_characters_or_length: Merchant ebt data input must have 7 characters'
- 'invalid_data: ISO agent reference input is invalid, must have alphanumeric value'
- 'invalid_characters_or_length: ISO agent reference input should have min 2 & upto
  15 characters'
- 'invalid_data: ISO merchant input is invalid, must have alphanumeric value'
- 'invalid_characters_or_length: ISO merchant input should have min 1 & upto 6 characters'
- 'invalid_data: Merchant Logo URL input is invalid (Ex: https://example.com/image.png)'
- 'invalid_characters_or_length: Merchant Logo URL input value should not exceed 2000
  characters'
- 'invalid_data: Store email address should be valid and check email address is properly
  formatted'
- 'invalid_characters_or_length: Store email address length cannot be exceed 255 chars'
- 'invalid_data: Store first name input is invalid'
- 'invalid_characters_or_length: Store first name input should have min 2 & upto 50
  characters'
- 'invalid_data: Store last name input is invalid'
- 'invalid_characters_or_length: Store last name input should have min 2 & upto 50
  characters'
- 'invalid_data: Store address line 1 input is invalid'
- 'invalid_characters_or_length: Store address line 1 input should have min 2 & upto
  35 characters'
- 'invalid_data: Store address line 2 input is invalid'
- 'invalid_characters_or_length: Store address line 2 should have min 2 and upto 35
  characters'
- 'invalid_data: Store zip code input is invalid'
- 'invalid_data: Store ISD code input is invalid (eg., input format is +1)'
- 'invalid_data: Store phone number input is invalid'
- 'invalid_characters_or_length: Store phone number input must have 10 characters'
- 'invalid_data: MCC code input is invalid'
- 'invalid_characters_or_length: MCC code input must have 4 characters'
- 'invalid_data: Device manufacturer input is invalid'
- 'invalid_data: Device model input is invalid'
- 'invalid_data: Application sign input is invalid'
- 'invalid_data: Routing type is invalid'
- 'invalid_data: Bin number input is invalid'
- 'invalid_characters_or_length: Bin number input must have 6 characters'
- 'invalid_data: Default label input is invalid'
- 'invalid_characters_or_length: Default label input should have min 1 and upto 18
  characters'
- 'invalid_data: Assign template input is invalid, must be alphanumeric value'
- 'invalid_characters_or_length: Assign template input should have min 2 and upto
  28 characters'
- 'invalid_data: TPN profile input is invalid, must have 2 profiles'
- 'invalid_data: TPN profile id input should not be same to both profiles'
- 'invalid_data: MID input must be in number'
- 'invalid_characters_or_length: MID input must have 12 characters'
- 'invalid_data: Agent input must be in number'
- 'invalid_characters_or_length: Agent input number must hae 6 digits'
- 'invalid_data: Chain input must be in number'
- 'invalid_characters_or_length: Chain input number must have 6 digits'
- 'invalid_data: Store input must be in number'
- 'invalid_characters_or_length: Store input number must have 4 digits'
- 'invalid_data: TermNo input must be in number'
- 'invalid_characters_or_length: TermNo input must have 4 digits'
- 'invalid_data: TermId input must be in alphanumeric'
- 'invalid_characters_or_length: TermId input must have 8 characters'
- 'invalid_data: ABA_No input must be number'
- 'invalid_characters_or_length: ABA_No input must have 9 digits'
- 'invalid_data: Agent_FIID must be in alphanumeric'
- 'invalid_characters_or_length: Agent_FIID must have 4 characters'
- 'invalid_data: dsGroup input must be alphanumeric'
- 'invalid_characters_or_length: dsGroup must contain between 1 and 30 characters'
- 'invalid_data: AccessTokenUser input must be alphanumeric'
- 'invalid_characters_or_length: AccessTokenUser must have min 25 characters and should
  not exceed 56 characters'
- 'invalid_data: AccessTokenPassword must be in alphanumeric'
- 'invalid_characters_or_length: AccessTokenPassword must have min 25 characters and
  should not exceed 50 characters'
- 'invalid_data: TerminalNumber input must be number'
- 'invalid_characters_or_length: TerminalNumber must have min 10 characters and should
  not exceed 16 characters'
- 'invalid_data: Password input must be alphanumeric'
- 'invalid_characters_or_length: Password must have min 6 characters and should not
  exceed 16 characters'
- 'invalid_data: Track2 input must be alphanumeric'
- 'invalid_characters_or_length: Track2 must have min 8 characters and should not
  exceed 18 characters'
- 'invalid_data: ApiKey input can have alphanumeric and following special characters
  _@.,/#&+’-'
- 'invalid_characters_or_length: ApiKey must have 45 characters'
- 'invalid_data: MID input can have alphanumeric and following special characters
  _@.,/#&+’-'
- 'invalid_characters_or_length: MID must have 15 characters'
- 'invalid_data: TermID input must be number'
- 'invalid_characters_or_length: TermID must have 8 characters'
- 'invalid_data: GroupID input must be number'
- 'invalid_characters_or_length: GroupID must have 5 characters'
- 'invalid_data: DID input must be number'
- 'invalid_characters_or_length: DID must have 5 characters'
- 'invalid_data: RegStatus input can have alphanumeric and following special characters
  _@.,/#&+’-'
- 'invalid_characters_or_length: RegStatus must have min 2 characters and should not
  exceed 3 characters'
- 'invalid_data: Merchant Id input is invalid'
- 'invalid_characters_or_length: Merchant Id input must have alphanumeric'
- 'invalid_data: Store Id input is invalid'
- 'invalid_characters_or_length: Store Id input must have alphanumeric'
- 'AUTH_ERR_001: API Key is required.'
- 'AUTH_ERR_002: Secret Key is required.'
- 'AUTH_ERR_003: Scope is required.'
- 'AUTH_ERR_004: Invalid Credentials, Please Contact Support Team.'
- 'AUTH_ERR_005: Invalid scope provided. Please use a valid scope.'
- 'AUTH_ERR_006: Invalid Token, Please try with a Valid Token.'
- 'AUTH_ERR_007: Invalid Token, Please try with a Valid Token.'
- 'AUTH_ERR_008: Invalid Signature.'
- 'AUTH_ERR_009: Refresh Token needs to be true in the Header.'
auth_info:
  mentioned_objects:
  - TPN
  - Merchant Code
  - Auth Token
  - apiKey
  - secretKey
  - scope
client:
  base_url: https://payment.ipospays.com/api/v3/iposTransact
  headers:
    Content-Type: application/json
source_metadata: null
