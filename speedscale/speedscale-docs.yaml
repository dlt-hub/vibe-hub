resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: root
  endpoint:
    path: /
    method: GET
- name: rockets
  endpoint:
    path: /api/rockets
    method: GET
- name: rocket
  endpoint:
    path: /api/rocket
    method: GET
- name: numbers
  endpoint:
    path: /api/numbers
    method: GET
- name: latest-launch
  endpoint:
    path: /api/latest-launch
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: generator
  endpoint:
    path: /reference/api-first/
    method: GET
    data_selector: generator
    params: {}
- name: load_test
  endpoint:
    path: /reference/generator-sizing-guide/
    method: GET
    data_selector: load_tests
    params: {}
- name: speedscale-operator
  endpoint:
    path: /speedscale/speedscale-operator
    method: POST
- name: apiKey
  endpoint:
    path: /api/v1/keys
    method: POST
    data_selector: apiKey
- name: clusterName
  endpoint:
    path: /api/v1/clusters
    method: POST
    data_selector: clusterName
- name: speedscale_operator
  endpoint:
    path: /api/v1/speedscale_operator
    method: GET
    data_selector: data
    params: {}
- name: operator
  endpoint:
    path: /api/v1/operator
    method: GET
    data_selector: records
    params: {}
- name: kubernetes_annotations
  endpoint:
    path: /reference/kubernetes-annotations/
    method: GET
    data_selector: annotations
- name: extra-container-env-vars
  endpoint:
    path: sidecar.speedscale.com/extra-container-env-vars
    method: POST
    data_selector: environment_variables
    params: {}
- name: mount-known-ca
  endpoint:
    path: sidecar.speedscale.com/mount-known-ca
    method: POST
    data_selector: mount_ca
    params: {}
- name: cognito_identities
  endpoint:
    path: /identities
    method: GET
    data_selector: Identities
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: env_variables
  endpoint:
    path: /reference/proxy_config/
    method: GET
    data_selector: env
    params: {}
- name: TrafficReplay
  endpoint:
    path: /trafficreplays
    method: GET
    data_selector: items
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: reports
    params: {}
- name: prometheus_metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: metrics
    params:
      prometheus.port: '4145'
- name: argo_rollout
  endpoint:
    path: /argo/rollouts
    method: GET
    data_selector: rollouts
    params: {}
- name: snapshot
  endpoint:
    path: /create_snapshot
    method: POST
    data_selector: snapshot
    params:
      service: MY_SERVICE
      raw: ~/Downloads/raw.jsonl
- name: snapshot
  endpoint:
    path: /snapshot
    method: PUT
    data_selector: snapshotId
    params: {}
- name: capture_session
  endpoint:
    path: /capture/session
    method: POST
    data_selector: session_data
- name: replay_service_mocks
  endpoint:
    path: /replay/mocks
    method: POST
    data_selector: mock_data
- name: replay_test_cases
  endpoint:
    path: /replay/test_cases
    method: POST
    data_selector: test_case_data
- name: ingress-nginx-controller
  endpoint:
    path: /ingress-nginx-controller
    method: PATCH
    data_selector: annotations
    params: {}
- name: Constant Load
  endpoint:
    path: /guides/load-patterns/constant-load
    method: GET
    data_selector: load_patterns
    params: {}
- name: Ramp-Up Load
  endpoint:
    path: /guides/load-patterns/ramp-up-load
    method: GET
    data_selector: load_patterns
    params: {}
- name: Peak Load
  endpoint:
    path: /guides/load-patterns/peak-load
    method: GET
    data_selector: load_patterns
    params: {}
- name: Soak Load
  endpoint:
    path: /guides/load-patterns/soak-load
    method: GET
    data_selector: load_patterns
    params: {}
- name: Stress Load
  endpoint:
    path: /guides/load-patterns/stress-load
    method: GET
    data_selector: load_patterns
    params: {}
- name: Spike Load
  endpoint:
    path: /guides/load-patterns/spike-load
    method: GET
    data_selector: load_patterns
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- You will need to get your personal API key from your Profile Page.
- Create a New entry in the list with the Speedscale directory.
- 'If you are unsure of the exact path run this command from PowerShell: echo $env:userprofile\.speedscale.'
- Installing via helm install is preferred as different GitOps engines treat Helm
  charts differently and Helm guarantees an order of operations during the install.
- ProxyMock is automatically available in the outerspace-go Codespace.
- proxymock provides a terminal UI for viewing request/response pairs
- If this is your first time using speedctl you may need to add the Speedscale directory
  to your Path environment variable so it is accessible without knowing the full path.
- 'If you are unsure of the exact path run this command from PowerShell: echo $env:userprofile\.speedscale'
- Installing via helm install is preferred as different GitOps engines treat Helm
  charts differently.
- proxymock defaults to passthrough mode which means it will reach out to the real
  system and return the response.
- Filters can be created in the Speedscale app but the UI does not provide access
  to the full expressiveness of the filters.
- Uses OAuth2 with refresh token — requires setup of connected app in Speedscale
- SPD-10172 newline after CLI version
- 'SPD-10172 proxymock: make version check faster'
- SPD-10170 Make sure responder rrpairs for postgres have updated timestamp
- SPD-10142 Fix agent update query and add missing enum
- SPD-10142 Fix insert queries and add tests
- SPD-10162 Only upload traffic replay CR on init and end
- 'SPD-10164 proxymock: files convert command'
- 'SPD-10160 proxymock: flag to specify RRPair file format'
- SPD-10156 add p90 to proxymock latency summary
- 'SPD-10152 proxymock: decompress RRPair when calling send-one'
- SPD-10142 Add agent reconciler and modify rpcs to support it
- 'SPD-10143 proxymock MCP: serve prompts as tools for clients that cannot read prompts'
- 'SPD-10147 proxymock MCP: support install for gemini-cli'
- SPD-10151 ensure proxymock installation is atomic
- SPD-10146 properly handle ctrl-c in ui prompts
- SPD-10128 Setup reporter correctly
- SPD-10129 Add json path validation to database calls
- SPD-10132 Remove unused responder RPCs and sync job
- Uses API key for authentication
- SPD-8602 don't try to get service ingest when period 0
- SPD-8600 Use scratch image with transformer lambda
- SPD-8598 reduce alert noise when ctx cancelled
- SPD-8598 reduce alert noise when report deleted
- SPD-8584 add `RetrieveRRPairSubjectFilterValuesV2` to support `time_range`
- SPD-8572 Push single tag during autopush to avoid conflicts
- SPD-8591 don't test removed cookie field
- SPD-8586 Set top level status in generator rrpairs
- SPD-8585 Don't rehydrate rrpairs that are already in the db
- SPD-8578 Better handling of SSO connections
- SPD-8543 Remove deprecated fields and add loading status for rrpair list
- SPD-8561 remove cookies from http changes
- SPD-8476 update transform tests created during debugging
- SPD-8543 Let user choose source for test report rrpairs
- SPD-8543 Make throughput and service summary honor source filter
- SPD-8569 send full passthrough payload
- SPD-8537-0 fix generator source `ToDBSource()`
- SPD-8543 Handle source filter in database filtering
- SPD-8549 Explicitly add defaults to test configs and make passthrough default
- SPD-8564 add recommendations rpc
- SPD-8562 improve transform log messages
- SPD-8190-3 fix time ranges for ServiceAnalyze graphs
- SPD-8068 ensure non-http rrpairs are uploaded via speedctl push
- SPD-8190-2 fix ServiceAalyze queries
- SPD-8130-2 include build_tag in InitReplay
- SPD-8193 add timeRange to cluster and namespace RPCs
- SPD-8190 fix time truncation for AnalyzeServices rpc
- SPD-8182 Make uuid consistent between responder and matches files
- SPD-8188 add new entitlements checking
- SPD-8160 add RetrieveTestConfigListV2 rpc
- SPD-5415 add run now to cronjobs
- SPD-8187 Make sure signatures are populated on raw file
- SPD-8120 add follow (stream) option to RetrieveLogs RPC
- SPD-8037 Return snapshot id after merge
- SPD-7240 support multiple sources for replay defaults
- SPD-8175 add buildTag to snapshot search
- SPD-8143 add Namesapces/Clusters filter RPCs
- Mock Pilot transforms the complex task of creating effective API mocks from a manual
  craft into an automated, intelligent process—letting you focus on testing strategy
  rather than data transformation mechanics.
- Speedscale provides various usage metrics for visibility, but only data ingest is
  relevant for pricing.
- Speedscale practices api first development which means that every capability available
  via the UI is available programmatically.
- All connections to Speedscale Cloud are initiated outbound from your cluster.
- Speedscale does not require listener ports to be opened.
- telemetry and control are very low bandwidth connections.
- data typically utilizes more bandwidth depending on your traffic ingest.
- For trial customers, Speedscale makes no guarantees regarding data retention.
- For paid users the data retention period is variable but is generally between seven
  days and three months.
- After traffic ages out of the Traffic Viewer it is stored in the Speedscale cloud
  data warehouse in slower long term storage.
- Snapshots, Replay Results and Configuration are never deleted.
- Speedscale can be configured to adhere to Pod Security Policy.
- Manually deleting the speedscale namespace will cause your cluster to stop accepting
  deployments due to a dangling mutating webhook.
- Deleting the control plane does not automatically delete sidecars already attached
  to your workloads.
- Load tests should always set the test config to run with low data mode enabled to
  avoid sending thousands or millions of RRPairs to the Speedscale cloud.
- Required API key to connect to Speedscale cloud.
- Requires setup of connected app in Speedscale.
- API key must be obtained from support if not provided.
- Requires setup of Kubernetes and Helm for deployment.
- These annotations are common across workloads and Speedscale's Custom Resources.
- The only supported value for sidecar.capture-mode is proxy.
- Requires setup of Cognito User Pool for authentication
- Ensure to handle token expiration correctly
- API key required for access
- These hosts are subject to change and security via TLS is recommended as opposed
  to IP whitelisting.
- Golang supports HTTP_PROXY and HTTPS_PROXY environment variables to configure outbound
  http or https requests.
- Python supports HTTP_PROXY and HTTPS_PROXY as well as the lowercase alternatives
  http_proxy and https_proxy.
- Node requires setting proxy-protocol to http or tcp:http and configuring with global-agent.
- Java requires -D system properties for configuring the socks proxy server.
- .NET supports HTTP_PROXY and HTTPS_PROXY environment variables.
- Ruby supports HTTP_PROXY and HTTPS_PROXY environment variables.
- TrafficReplay enables traffic replay functionality within Kubernetes clusters managed
  by the Speedscale operator.
- Some filters like HTTP Headers are available in the Filter Rule editor but not in
  the traffic viewer.
- Follow the instructions in the wizard to select inbound traffic, the requests to
  be replayed against your service
- And finally select where the replay will run in your environment. Choose a cluster,
  namespace, and workload where a copy of your service is running.
- Reports are created for every replay and detail the success of the replay.
- Custom built service mocks tend to fall out of date quickly because the data or
  the API contract changes.
- Schedules provide a way to run Speedscale actions on a regular basis.
- prometheus.enable - toggle switch for all Prometheus metrics in goproxy
- prometheus.enableScrapeAnnotations - set to true if you want Prometheus annotations
  added to the goproxy workload
- If your app already produces Prometheus metrics then the new goproxy port will be
  added to the existing list.
- If your app uses a different path than /metrics then you should set different scrape
  points in your central Prometheus configuration file.
- TLS configuration depends heavily on the programming language your app uses.
- Diagnosing a pod that never becomes ready requires a systematic approach.
- Common Errors to Look For in Logs include application configuration issues, failed
  dependency connections, permission or security errors, and missing files or incorrect
  environment variables.
- speedctl capture is not natively supported on Windows. Use WSL to get capture support.
- Uses speedctl CLI for capturing and simulating traffic.
- 'Inspector Restart Required: If you install Argo Rollouts after Speedscale is already
  running in your cluster, you must restart the Speedscale inspector pod for it to
  detect and watch Argo Rollouts resources.'
- The create command will automatically synchronize with Speedscale cloud.
- Uses speedctl CLI to create snapshots based on traffic criteria.
- Uses Speedctl CLI for capturing and replaying traffic
- Requires manual proxy configuration in Firefox
- Bulk Data Extraction provides a flexible, scalable way to manipulate test data at
  scale.
- Load tests can look a lot like a Denial of Service (DDOS) to your CDN.
- Testers may be used to thinking in terms of vUsers as representing user flows or
  sessions.
- Make sure your desired scenario is not already covered by the default test configs.
- Speedscale requires a SaaS agreement for production deployment support.
- Redaction of sensitive data can be configured through DLP features.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'INVALID_API_KEY: Check your API key.'
- 'CLUSTER_NOT_FOUND: Ensure the cluster name is correct.'
- '401 Unauthorized: Check your API key.'
- '403 Forbidden: Ensure you have the necessary permissions.'
- 'INSTALLATION_FAILED: Check pre-install job logs.'
- 'API_KEY_INVALID: Ensure your API key is valid and active.'
- 'AccessDeniedException: Check permissions for the identity'
- 'NotAuthorizedException: Verify user credentials and status'
- '401 Unauthorized: Check your API key'
- '429 Too Many Requests: Rate limit exceeded'
- 'No such file or directory: Ensure certificates are created'
- 'Snapshot already exists, overwrite? [Y/n]: Confirm overwrite when pushing snapshot'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - CognitoUserPool
  - CognitoIdentity
client:
  base_url: https://app.speedscale.com
  headers:
    Accept: application/json
source_metadata: null
