resources:
- name: datacenter_ip_information
  endpoint:
    path: /datacenter/ip_information
    method: GET
    data_selector: datacenters
    params: {}
- name: doBusinessCoder
  endpoint:
    path: /WEB/BusinessCoder/doBusinessCoder
    method: GET
    data_selector: records
    params: {}
- name: doBusinessCoder
  endpoint:
    path: /WEB/BusinessCoder/doBusinessCoder
    method: GET
    data_selector: records
    params: {}
- name: doBusinessCoderUS
  endpoint:
    path: /WEB/BusinessCoder/doBusinessCoderUS
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
- name: doBusinessCoderUS_POST
  endpoint:
    path: /WEB/BusinessCoder/doBusinessCoderUS
    method: POST
    data_selector: Records
    params:
      id: '{{customerId}}'
- name: doBusinessCoderUS
  endpoint:
    path: /WEB/BusinessCoder/doBusinessCoderUS
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      t: Test
- name: doBusinessCoderUS_post
  endpoint:
    path: /WEB/BusinessCoder/doBusinessCoderUS
    method: POST
    data_selector: Records
    params:
      id: '{{customerId}}'
      t: Test
- name: firmographics
  endpoint:
    path: /firmographics
    method: POST
    data_selector: results
    params: {}
- name: official
  endpoint:
    path: /official/
    method: GET
    data_selector: records
    params:
      district_type: NATIONAL_LOWER
- name: officials_by_region
  endpoint:
    path: /officials_by_region/
    method: GET
    data_selector: records
    params:
      district_type: NATIONAL_LOWER
- name: legislative_district
  endpoint:
    path: /legislative_district/
    method: GET
    data_selector: records
    params:
      district_type: NATIONAL_LOWER
- name: nonlegislative_district
  endpoint:
    path: /nonlegislative_district/
    method: GET
    data_selector: records
    params:
      district_type: NATIONAL_LOWER
- name: map
  endpoint:
    path: /map/
    method: GET
    data_selector: records
    params:
      district_type: NATIONAL_LOWER
- name: election_event
  endpoint:
    path: /election_event/
    method: GET
    data_selector: records
    params: {}
- name: redistricting_event
  endpoint:
    path: /redistricting_event/
    method: GET
    data_selector: records
    params: {}
- name: coverage
  endpoint:
    path: /coverage/
    method: GET
    data_selector: records
    params: {}
- name: credits_remaining
  endpoint:
    path: /account/credits_remaining/
    method: GET
    data_selector: records
    params: {}
- name: district_type
  endpoint:
    path: /district_type/
    method: GET
    data_selector: records
    params: {}
- name: version
  endpoint:
    path: /version/
    method: GET
    data_selector: records
    params: {}
- name: official
  endpoint:
    path: /official
    method: GET
    data_selector: records
    params:
      district_type: NATIONAL_LOWER
- name: legislative_district
  endpoint:
    path: /legislative_district
    method: GET
    data_selector: records
    params: {}
- name: nonlegislative_district
  endpoint:
    path: /nonlegislative_district
    method: GET
    data_selector: records
    params: {}
- name: map
  endpoint:
    path: /map
    method: GET
    data_selector: records
    params: {}
- name: election_event
  endpoint:
    path: /election_event
    method: GET
    data_selector: records
    params: {}
- name: redistricting_event
  endpoint:
    path: /redistricting_event
    method: GET
    data_selector: records
    params: {}
- name: coverage
  endpoint:
    path: /coverage
    method: GET
    data_selector: records
    params: {}
- name: credits_remaining
  endpoint:
    path: /account/credits_remaining
    method: GET
    data_selector: records
    params: {}
- name: district_type
  endpoint:
    path: /district_type
    method: GET
    data_selector: records
    params: {}
- name: version
  endpoint:
    path: /version
    method: GET
    data_selector: records
    params: {}
- name: official
  endpoint:
    path: /official
    method: GET
- name: officials_by_region
  endpoint:
    path: /officials_by_region
    method: GET
- name: legislative_district
  endpoint:
    path: /legislative_district
    method: GET
- name: nonlegislative_district
  endpoint:
    path: /nonlegislative_district
    method: GET
- name: map
  endpoint:
    path: /map
    method: GET
- name: election_event
  endpoint:
    path: /election_event
    method: GET
- name: redistricting_event
  endpoint:
    path: /redistricting_event
    method: GET
- name: coverage
  endpoint:
    path: /coverage
    method: GET
- name: account_credits_remaining
  endpoint:
    path: /account/credits_remaining
    method: GET
- name: district_type
  endpoint:
    path: /district_type
    method: GET
- name: version
  endpoint:
    path: /version
    method: GET
- name: official
  endpoint:
    path: /v3.1/official/
    method: GET
    data_selector: results.officials
    params:
      lat: '33.63756710910554'
      lon: '-117.60695049134513'
      district_type: NATIONAL_LOWER
      format: json
      key: '{{customerId}}'
- name: officials
  endpoint:
    path: /response/results/officials
    method: GET
    data_selector: official
    params: {}
- name: official
  endpoint:
    path: /official
    method: GET
- name: officials_by_region
  endpoint:
    path: /officials_by_region
    method: GET
- name: legislative_district
  endpoint:
    path: /legislative_district
    method: GET
- name: nonlegislative_district
  endpoint:
    path: /nonlegislative_district
    method: GET
- name: map
  endpoint:
    path: /map
    method: GET
- name: election_event
  endpoint:
    path: /election_event
    method: GET
- name: redistricting_event
  endpoint:
    path: /redistricting_event
    method: GET
- name: coverage
  endpoint:
    path: /coverage
    method: GET
- name: account_credits_remaining
  endpoint:
    path: /account/credits_remaining
    method: GET
- name: district_type
  endpoint:
    path: /district_type
    method: GET
- name: version
  endpoint:
    path: /version
    method: GET
- name: officials_by_region
  endpoint:
    path: /officials_by_region
    method: GET
    data_selector: results.officials
    params:
      district_type: NATIONAL_LOWER
      country: US
      state: CA
      format: json
      key: '{{customerId}}'
- name: official
  endpoint:
    path: /official/
    method: GET
    params:
      lat: '33.63756710910554'
      lon: '-117.60695049134513'
      district_type: NATIONAL_LOWER
      format: json
      key: '{{customerId}}'
- name: official
  endpoint:
    path: /officials
    method: GET
    data_selector: officials
    params: {}
- name: legislative_district
  endpoint:
    path: /legislative_district
    method: GET
    data_selector: districts
    params:
      key: '{{customerId}}'
      lat: '33.63756710910554'
      lon: '-117.60695049134513'
      format: json
- name: officials_by_region
  endpoint:
    path: /officials_by_region
    method: GET
    data_selector: results.officials
    params:
      district_type: NATIONAL_LOWER
      country: US
      state: CA
      format: json
      key: '{{customerId}}'
- name: nonlegislative_district
  endpoint:
    path: /nonlegislative_district
    method: GET
    data_selector: results.districts
    params:
      key: '{{customerId}}'
      district_type: SCHOOL
      lat: '33.637562'
      lon: '-117.606887'
      format: json
- name: legislative_district
  endpoint:
    path: /legislative_district
    method: GET
    data_selector: districts
    params:
      key: '{{customerId}}'
      lat: '33.63756710910554'
      lon: '-117.60695049134513'
      format: json
- name: map
  endpoint:
    path: /map/{{district_id}}
    method: GET
    data_selector: image
    params:
      format: json
      key: '{{customerId}}'
- name: map_state_exec
  endpoint:
    path: /map/STATE_EXEC/{{country}}/{{state}}
    method: GET
    data_selector: image
    params:
      format: json
      key: '{{customerId}}'
- name: nonlegislative_district
  endpoint:
    path: /nonlegislative_district
    method: GET
    data_selector: districts
    params:
      key: '{{customerId}}'
      district_type: SCHOOL
      lat: '33.637562'
      lon: '-117.606887'
      format: json
- name: maps
  endpoint:
    path: /maps
    method: GET
    data_selector: results.maps
    params: {}
- name: map
  endpoint:
    path: /map/{{district_id}}
    method: GET
    data_selector: image
    params:
      format: json
      key: '{{customerId}}'
- name: state_execution_map
  endpoint:
    path: /map/STATE_EXEC/{{country}}/{{state}}
    method: GET
    data_selector: image
    params:
      format: json
      key: '{{customerId}}'
- name: election_event
  endpoint:
    path: /election_event
    method: GET
    data_selector: results.election_events
    params:
      key: '{{customerId}}'
- name: maps
  endpoint:
    path: /response/results/maps
    method: GET
    data_selector: maps
    params: {}
- name: redistricting_event
  endpoint:
    path: /redistricting_event
    method: GET
    data_selector: results.redistricting_events
    params:
      key: '{{customerId}}'
- name: coverage
  endpoint:
    path: /coverage
    method: GET
    data_selector: results.coverage
    params:
      key: '{{customerId}}'
- name: credits_remaining
  endpoint:
    path: /account/credits_remaining
    method: GET
    data_selector: results
    params:
      key: '{{customerId}}'
- name: election_event
  endpoint:
    path: /election_event
    method: GET
    data_selector: results.election_events
    params:
      key: '{{customerId}}'
      election_expire_date_on_or_after: today
      election_expire_date_before: '2024-04-01'
      format: json
- name: district_type
  endpoint:
    path: /v3.1/district_type
    method: GET
    data_selector: results.district_types
    params: {}
- name: redistricting_event
  endpoint:
    path: /redistricting_event
    method: GET
    data_selector: redistricting_events
    params:
      key: '{{customerId}}'
- name: coverage
  endpoint:
    path: /coverage
    method: GET
    data_selector: coverage
    params:
      key: '{{customerId}}'
- name: credits_remaining
  endpoint:
    path: /account/credits_remaining
    method: GET
    data_selector: credit_balance
    params:
      key: '{{customerId}}'
- name: official
  endpoint:
    path: /official
    method: GET
    data_selector: records
- name: district_type
  endpoint:
    path: /v3.1/district_type
    method: GET
    data_selector: district_types
    params: {}
- name: official
  endpoint:
    path: /official
    method: GET
- name: election_event
  endpoint:
    path: /election_event
    method: GET
- name: redistricting_event
  endpoint:
    path: /redistricting_event
    method: GET
- name: district_type
  endpoint:
    path: /district_type
    method: GET
- name: official
  endpoint:
    path: /official
    method: GET
    data_selector: records
- name: official_by_region
  endpoint:
    path: /official/byRegion
    method: GET
    data_selector: records
- name: official
  endpoint:
    path: /official
    method: GET
- name: election_event
  endpoint:
    path: /election_event
    method: GET
- name: redistricting_event
  endpoint:
    path: /redistricting_event
    method: GET
- name: district_type
  endpoint:
    path: /district_type
    method: GET
- name: addMAK
  endpoint:
    path: /V4/WEB/addMAK
    method: POST
    data_selector: CustomerID
    params: {}
- name: addMIK
  endpoint:
    path: /V4/WEB/addMIK
    method: POST
    data_selector: CustomerID
    params: {}
- name: changeGeoPoint
  endpoint:
    path: /V4/WEB/changeGeoPoint
    method: POST
    data_selector: CustomerID
    params: {}
- name: changeMAK
  endpoint:
    path: /V4/WEB/changeMAK
    method: POST
    data_selector: CustomerID
    params: {}
- name: changeMIK
  endpoint:
    path: /V4/WEB/changeMIK
    method: POST
    data_selector: CustomerID
    params: {}
- name: removeMAK
  endpoint:
    path: /V4/WEB/removeMAK
    method: POST
    data_selector: CustomerID
    params: {}
- name: removeMIK
  endpoint:
    path: /V4/WEB/removeMIK
    method: POST
    data_selector: CustomerID
    params: {}
- name: addMAK
  endpoint:
    path: /V4/WEB/addMAK
    method: POST
    data_selector: ''
    params: {}
- name: addMIK
  endpoint:
    path: /V4/WEB/addMIK
    method: POST
    data_selector: ''
    params: {}
- name: changeGeoPoint
  endpoint:
    path: /V4/WEB/changeGeoPoint
    method: POST
    data_selector: ''
    params: {}
- name: changeMAK
  endpoint:
    path: /V4/WEB/changeMAK
    method: POST
    data_selector: ''
    params: {}
- name: changeMIK
  endpoint:
    path: /V4/WEB/changeMIK
    method: POST
    data_selector: ''
    params: {}
- name: removeMAK
  endpoint:
    path: /V4/WEB/removeMAK
    method: POST
    data_selector: ''
    params: {}
- name: removeMIK
  endpoint:
    path: /V4/WEB/removeMIK
    method: POST
    data_selector: ''
    params: {}
- name: addMAK
  endpoint:
    path: /V4/WEB/addMAK
    method: POST
    data_selector: ''
    params:
      CustomerID: '{{customerId}}'
      TransmissionReference: Test
      AddressLine1: 22382 Avenida Empresa
      City: Rancho Stanta Margarita
      Country: US
      Latitude: '33.637562'
      Longitude: '-117.606887'
      Reason: Add a MAK
      RespondToEmail: youremail@melissadata.com
- name: addMIK
  endpoint:
    path: /V4/WEB/addMIK
    method: POST
    data_selector: ''
    params:
      CustomerID: '{{customerId}}'
      TransmissionReference: Test
      Add:
      - Key: AddressLine1
        Value: 22382 Avenida Empresa
      - Key: City
        Value: Rancho Stanta Margarita
      - Key: State
        Value: CA
      - Key: Country
        Value: US
      - Key: Latitude
        Value: '33.637562'
      - Key: Longitude
        Value: '-117.606887'
      Reason: Add a MAK
      RespondToEmail: youremail@melissadata.com
- name: changeGeoPoint
  endpoint:
    path: /V4/WEB/changeGeoPoint
    method: POST
    data_selector: ''
    params:
      CustomerID: '{{customerId}}'
      TransmissionReference: Test
      Latitude: '33.637562'
      Longitude: '-117.606887'
      MelissaAddressKey: '8008006245'
      Reason: GeoPoint Change needed
      RespondToEmail: youremail@melissadata.com
- name: changeMAK
  endpoint:
    path: /V4/WEB/changeMAK
    method: POST
    data_selector: Results
    params:
      CustomerID: '{{customerId}}'
      TransmissionReference: Test
- name: changeMIK
  endpoint:
    path: /V4/WEB/changeMIK
    method: POST
    data_selector: Results
    params:
      CustomerID: '{{customerId}}'
      TransmissionReference: Test
- name: removeMAK
  endpoint:
    path: /V4/WEB/removeMAK
    method: POST
    data_selector: Results
    params:
      CustomerID: '{{customerId}}'
      TransmissionReference: Test
      Action: delete
- name: removeMIK
  endpoint:
    path: /V4/WEB/removeMIK
    method: POST
    data_selector: Results
    params:
      CustomerID: '{{customerId}}'
      TransmissionReference: Test
      Action: delete
- name: addMAK
  endpoint:
    path: /V4/WEB/addMAK
    method: POST
    data_selector: ''
    params:
      CustomerID: '{{customerId}}'
      TransmissionReference: Test
      AddressLine1: 22382 Avenida Empresa
      City: Rancho Stanta Margarita
      Country: US
      Latitude: '33.637562'
      Longitude: '-117.606887'
      Reason: Add a MAK
      RespondToEmail: youremail@melissadata.com
- name: addMIK
  endpoint:
    path: /V4/WEB/addMIK
    method: POST
    data_selector: ''
    params:
      CustomerID: '{{customerId}}'
      TransmissionReference: Test
      Add:
      - Key: AddressLine1
        Value: 22382 Avenida Empresa
      - Key: City
        Value: Rancho Stanta Margarita
      - Key: State
        Value: CA
      - Key: Country
        Value: US
      - Key: Latitude
        Value: '33.637562'
      - Key: Longitude
        Value: '-117.606887'
      Reason: Add a MAK
      RespondToEmail: youremail@melissadata.com
- name: changeGeoPoint
  endpoint:
    path: /V4/WEB/changeGeoPoint
    method: POST
    data_selector: ''
    params:
      CustomerID: '{{customerId}}'
      TransmissionReference: Test
      Latitude: '33.637562'
      Longitude: '-117.606887'
      MelissaAddressKey: '8008006245'
      Reason: GeoPoint Change needed
      RespondToEmail: youremail@melissadata.com
- name: GlobalAddress
  endpoint:
    path: /V3/WEB/GlobalAddress/doGlobalAddress
    method: GET
    data_selector: Records
    params: {}
- name: changeMAK
  endpoint:
    path: /V4/WEB/changeMAK
    method: POST
    data_selector: TransmissionResults
    params:
      CustomerID: '{{customerId}}'
      TransmissionReference: Test
- name: changeMIK
  endpoint:
    path: /V4/WEB/changeMIK
    method: POST
    data_selector: TransmissionResults
    params:
      CustomerID: '{{customerId}}'
      TransmissionReference: Test
- name: removeMAK
  endpoint:
    path: /V4/WEB/removeMAK
    method: POST
    data_selector: TransmissionResults
    params:
      CustomerID: '{{customerId}}'
      TransmissionReference: Test
      Action: delete
      MelissaAddressKey: '8008006245'
- name: removeMIK
  endpoint:
    path: /V4/WEB/removeMIK
    method: POST
    data_selector: TransmissionResults
    params:
      CustomerID: '{{customerId}}'
      TransmissionReference: Test
      Action: delete
      MelissaIdentityKey: '8008006245'
- name: doGlobalAddress
  endpoint:
    path: /V3/WEB/GlobalAddress/doGlobalAddress
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      admarea: CA
      ctry: US
      loc: Rancho Santa Margarita
      postal: '92688'
- name: doGlobalAddressPOST
  endpoint:
    path: /V3/WEB/GlobalAddress/doGlobalAddress
    method: POST
    data_selector: Records
    params:
      CustomerID: '{{customerId}}'
- name: GlobalAddress
  endpoint:
    path: /V3/WEB/GlobalAddress/doGlobalAddress
    method: GET
    data_selector: records
    params: {}
- name: address
  endpoint:
    path: /address
    method: GET
    data_selector: Records
    params: {}
- name: doGlobalAddress
  endpoint:
    path: /V3/WEB/GlobalAddress/doGlobalAddress
    method: GET
- name: ResponseRecord
  endpoint:
    data_selector: Records
- name: CBSA Outputs
  endpoint:
    path: /CBSACode
    method: GET
    data_selector: CBSACode
    params: {}
- name: CBSA Division Code
  endpoint:
    path: /CBSADivisionCode
    method: GET
    data_selector: CBSADivisionCode
    params: {}
- name: CBSA Division Level
  endpoint:
    path: /CBSADivisionLevel
    method: GET
    data_selector: CBSADivisionLevel
    params: {}
- name: doGlobalAddress
  endpoint:
    path: /doGlobalAddress
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      opt: USPreferredCityNames:ON,OutputGeo:ON
      admarea: CA
      ctry: US
      loc: Rancho Santa Margarita
      postal: '92688'
- name: doGlobalAddressPost
  endpoint:
    path: /doGlobalAddress
    method: POST
    data_selector: Records
    params:
      CustomerID: '{{customerId}}'
      Options: USPreferredCityNames:ON,OutputGeo:ON
      TransmissionReference: Test
- name: address
  endpoint:
    path: /api/v1/address
    method: GET
    data_selector: Records
    params: {}
- name: doGlobalAddress
  endpoint:
    path: /V3/WEB/GlobalAddress/doGlobalAddress
    method: GET
- name: ResponseRecord
  endpoint:
    data_selector: Records
- name: CBSACode
  endpoint:
    path: /CBSACode
    method: GET
- name: CBSADivisionCode
  endpoint:
    path: /CBSADivisionCode
    method: GET
- name: CBSADivisionLevel
  endpoint:
    path: /CBSADivisionLevel
    method: GET
- name: GlobalAddressVerification
  endpoint:
    method: GET
- name: GlobalAddressVerificationRecordRequest
  endpoint:
    method: POST
- name: doGlobalEmail
  endpoint:
    path: /v4/WEB/GlobalEmail/doGlobalEmail
    method: GET
    data_selector: records
    params: {}
- name: check_email
  endpoint:
    path: /v4/WEB/GlobalEmail/doGlobalEmail
    method: GET
    data_selector: results
    params: {}
- name: verify_mailbox_delivery
  endpoint:
    path: /v4/WEB/GlobalEmail/doGlobalEmail
    method: GET
    data_selector: results
    params: {}
- name: verify_only_domains
  endpoint:
    path: /v4/WEB/GlobalEmail/doGlobalEmail
    method: GET
    data_selector: results
    params: {}
- name: doGlobalEmail
  endpoint:
    path: /v4/WEB/GlobalEmail/doGlobalEmail
    method: GET
    data_selector: Records
    params:
      format: JSON
      id: '{{customerId}}'
      opt: VerifyMailbox:Express,DomainCorrection:OFF,TimeToWait:25
      t: Test
      email: info@melissa.com
- name: getVersion
  endpoint:
    path: /v4/WEB/GlobalEmail/getVersion
    method: GET
    data_selector: ServiceName
- name: doGlobalEmail
  endpoint:
    path: /v4/WEB/GlobalEmail/doGlobalEmail
    method: GET
    data_selector: Records
    params:
      format: JSON
      id: '{{customerId}}'
      opt: VerifyMailbox:Express,DomainCorrection:OFF,TimeToWait:25
      t: Test
      email: info@melissa.com
- name: email_validation
  endpoint:
    path: /validate_email
    method: POST
    data_selector: result
    params:
      CustomerID: required
      Email: required
- name: getVersion
  endpoint:
    path: /v4/WEB/GlobalEmail/getVersion
    method: GET
    data_selector: ServiceName
- name: email_validation
  endpoint:
    path: /email/validation
    method: POST
    data_selector: results
    params:
      CustomerID: true
      Email: true
- name: GlobalEmail
  endpoint:
    path: /global-email
    method: GET
- name: GlobalEmail
  endpoint:
    path: /global-email
    method: GET
- name: GlobalExpressFreeForm
  endpoint:
    path: /web/GlobalExpressFreeForm
    method: GET
    data_selector: records
    params:
      maxrecords: 10
      country: US
- name: GlobalExpressAddress
  endpoint:
    path: /web/GlobalExpressAddress
    method: GET
    data_selector: records
    params:
      maxrecords: 10
      country: US
- name: GlobalExpressLocalityAdministrativeArea
  endpoint:
    path: /web/GlobalExpressLocalityAdministrativeArea
    method: GET
    data_selector: records
    params:
      maxrecords: 10
      country: US
- name: GlobalExpressPostalCode
  endpoint:
    path: /web/GlobalExpressPostalCode
    method: GET
    data_selector: records
    params:
      maxrecords: 10
      country: US
- name: GlobalExpressThoroughfare
  endpoint:
    path: /web/GlobalExpressThoroughfare
    method: GET
    data_selector: records
    params:
      maxrecords: 10
      country: US
- name: GlobalExpressCountry
  endpoint:
    path: /web/GlobalExpressCountry
    method: GET
    data_selector: records
    params:
      country: US
- name: global_express_free_form
  endpoint:
    path: /web/GlobalExpressFreeForm
    method: GET
    data_selector: Results
    params:
      country: US
      maxrecords: 10
- name: GlobalExpressFreeForm
  endpoint:
    path: /web/GlobalExpressFreeForm
    method: GET
    data_selector: ''
    params:
      country: US
      maxrecords: 10
- name: GlobalExpressAddress
  endpoint:
    path: /web/GlobalExpressAddress
    method: GET
    data_selector: ''
    params:
      country: US
      maxrecords: 10
- name: GlobalExpressLocalityAdministrativeArea
  endpoint:
    path: /web/GlobalExpressLocalityAdministrativeArea
    method: GET
    data_selector: ''
    params:
      country: US
      maxrecords: 10
- name: GlobalExpressPostalCode
  endpoint:
    path: /web/GlobalExpressPostalCode
    method: GET
    data_selector: ''
    params:
      country: US
      maxrecords: 10
- name: GlobalExpressThoroughfare
  endpoint:
    path: /web/GlobalExpressThoroughfare
    method: GET
    data_selector: ''
    params:
      country: US
      maxrecords: 10
- name: GlobalExpressCountry
  endpoint:
    path: /web/GlobalExpressCountry
    method: GET
    data_selector: ''
    params:
      country: US
- name: GlobalExpressAddress
  endpoint:
    path: /web/GlobalExpressAddress
    method: GET
    data_selector: Results
    params:
      maxrecords: '10'
- name: GlobalExpressFreeForm
  endpoint:
    path: /web/GlobalExpressFreeForm
    method: GET
    data_selector: Results
    params:
      country: US
      maxrecords: '10'
- name: address
  endpoint:
    path: /address
    method: GET
    data_selector: Results
- name: GlobalExpressAddress
  endpoint:
    path: /web/GlobalExpressAddress
    method: GET
    data_selector: Results
    params:
      format: json
      maxrecords: '10'
      administrativearea: CA
      country: US
      locality: Rancho Santa Margarita
      postalcode: '92688'
- name: GlobalExpressLocalityAdministrativeArea
  endpoint:
    path: /web/GlobalExpressLocalityAdministrativeArea
    method: GET
    data_selector: Results
    params:
      id: '{{customerId}}'
      maxrecords: '10'
      nativecharset: 'true'
      country: US
      locality: Rancho Santa Margarita
      administrativearea: CA
      postalcode: '92688'
- name: address
  endpoint:
    path: /globalexpressaddress
    method: GET
    data_selector: Results
    params: {}
- name: GlobalExpressPostalCode
  endpoint:
    path: /web/GlobalExpressPostalCode
    method: GET
    data_selector: Results
    params:
      country: US
      maxrecords: 10
- name: GlobalExpressLocalityAdministrativeArea
  endpoint:
    path: /web/GlobalExpressLocalityAdministrativeArea
    method: GET
    data_selector: Results
    params:
      id: '{{customerId}}'
      maxrecords: '10'
      nativecharset: 'true'
      country: US
      locality: Rancho Santa Margarita
      administrativearea: CA
      postalcode: '92688'
- name: GlobalExpressThoroughfare
  endpoint:
    path: /web/GlobalExpressThoroughfare
    method: GET
    data_selector: Results
    params:
      country: US
      postalcode: '92688'
      maxrecords: 10
- name: GlobalExpressPostalCode
  endpoint:
    path: /web/GlobalExpressPostalCode
    method: GET
    data_selector: Results
    params:
      id: '{{customerId}}'
      maxrecords: 10
      country: US
      postalcode: '92688'
- name: GlobalExpressThoroughfare
  endpoint:
    path: /web/GlobalExpressThoroughfare
    method: GET
    data_selector: Results
    params:
      id: '{{customerId}}'
      maxrecords: 10
      country: US
      postalcode: '92688'
      thoroughfare: Avenida Empresa
- name: GlobalExpressCountry
  endpoint:
    path: /web/GlobalExpressCountry
    method: GET
    data_selector: Results
    params:
      id: '{{customerId}}'
      country: US
      format: json
- name: global_express_country
  endpoint:
    path: /web/GlobalExpressCountry
    method: GET
    data_selector: Results
    params:
      format: json
      id: '{{customerId}}'
      country: US
- name: GlobalExpressFreeForm
  endpoint:
    path: /web/GlobalExpressFreeForm
    method: GET
    data_selector: Results
    params:
      format: jsonp
      country: GB
- name: GlobalExpressAddress
  endpoint:
    path: /web/GlobalExpressAddress
    method: GET
    data_selector: Results
    params:
      format: jsonp
- name: GlobalExpressFreeForm
  endpoint:
    path: /web/GlobalExpressFreeForm
    method: GET
    data_selector: results
    params: {}
- name: GlobalExpressFreeForm
  endpoint:
    path: /jsonp/GlobalExpressFreeForm
    method: GET
    data_selector: Results
- name: ExpressAddress
  endpoint:
    path: /web/ExpressAddress
    method: GET
    data_selector: Results
- name: GlobalExpressAddress
  endpoint:
    path: /web/GlobalExpressAddress
    method: GET
- name: GlobalExpressLocalityAdministrativeArea
  endpoint:
    path: /web/GlobalExpressLocalityAdministrativeArea
    method: GET
- name: GlobalExpressCountry
  endpoint:
    path: /web/GlobalExpressCountry
    method: GET
- name: GlobalExpressFreeForm
  endpoint:
    path: /web/GlobalExpressFreeForm
    method: GET
- name: GlobalExpressPostalCode
  endpoint:
    path: /web/GlobalExpressPostalCode
    method: GET
- name: GlobalExpressThoroughfare
  endpoint:
    path: /web/GlobalExpressThoroughfare
    method: GET
- name: GlobalExpressFreeForm
  endpoint:
    path: /web/GlobalExpressFreeForm
    method: GET
    data_selector: results
- name: ip_location
  endpoint:
    path: /v4/WEB/iplocation/doiplocation
    method: GET
    data_selector: records
    params: {}
- name: GlobalExpressAddress
  endpoint:
    path: /web/GlobalExpressAddress
    method: GET
- name: GlobalExpressLocalityAdministrativeArea
  endpoint:
    path: /web/GlobalExpressLocalityAdministrativeArea
    method: GET
- name: GlobalExpressCountry
  endpoint:
    path: /web/GlobalExpressCountry
    method: GET
- name: GlobalExpressFreeForm
  endpoint:
    path: /web/GlobalExpressFreeForm
    method: GET
- name: GlobalExpressPostalCode
  endpoint:
    path: /web/GlobalExpressPostalCode
    method: GET
- name: GlobalExpressThoroughfare
  endpoint:
    path: /web/GlobalExpressThoroughfare
    method: GET
- name: doIPLocation
  endpoint:
    path: /v4/WEB/iplocation/doiplocation
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      ip: ''
- name: ip_location
  endpoint:
    path: /v4/WEB/iplocation/doiplocation
    method: GET
    data_selector: records
    params: {}
- name: doIPLocation
  endpoint:
    path: /v4/WEB/iplocation/doiplocation
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      ip: ''
- name: Global Name
  endpoint:
    path: /V3/WEB/GlobalName/doGlobalName
    method: GET
    data_selector: records
    params: {}
- name: doGlobalName
  endpoint:
    path: /V3/WEB/GlobalName/doGlobalName
    method: GET
    data_selector: Records
- name: response_record
  endpoint:
    path: /response/records
    method: GET
    data_selector: Records.ResponseRecord
    params: {}
- name: doGlobalName
  endpoint:
    path: /V3/WEB/GlobalName/doGlobalName
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
      full: Doktor Enna Schäfer
      ctry: DE
      format: json
- name: Global Name
  endpoint:
    method: POST
    params:
      input: Name
      country: Country
- name: doGlobalName
  endpoint:
    path: /V3/WEB/GlobalName/doGlobalName
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      full: Doktor Enna Schäfer
      ctry: DE
      format: json
      t: Global Name CurlExample
- name: ResponseRecord
  endpoint:
    path: /Records/ResponseRecord
    method: GET
    data_selector: Records
    params: {}
- name: Global Name
  endpoint:
    path: /global-name/api
    method: POST
    data_selector: result
    params:
      input: name
      country: country
- name: doGlobalPhone
  endpoint:
    path: /V4/WEB/GlobalPhone/doGlobalPhone
    method: GET
    data_selector: records
    params: {}
- name: doGlobalPhone
  endpoint:
    path: /V4/WEB/GlobalPhone/doGlobalPhone
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      phone: 1-800-635-4772
      ctry: US
- name: doGlobalPhone
  endpoint:
    path: /V4/WEB/GlobalPhone/doGlobalPhone
    method: POST
    data_selector: Records
    params: {}
- name: GlobalName
  endpoint:
    path: /global-name
    method: GET
    data_selector: records
- name: country_networks
  endpoint:
    path: /api/country_networks
    method: GET
    data_selector: networks
- name: doGlobalPhone
  endpoint:
    path: /V4/WEB/GlobalPhone/doGlobalPhone
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
      phone: 1-800-635-4772
      ctry: US
      ctryOrg: ''
- name: doGlobalPhone
  endpoint:
    path: /V4/WEB/GlobalPhone/doGlobalPhone
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      phone: 1-800-635-4772
      ctry: US
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: example_resource
  endpoint:
    path: /v1/example
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: coverage
  endpoint:
    path: /coverage
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Browse
  endpoint:
    path: /Browse
    method: GET
- name: Download Binary File
  endpoint:
    path: /Download/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
- name: Download Data File
  endpoint:
    path: /Download/Data/{{release}}/{{filename}}
    method: GET
- name: Download Language Interface File
  endpoint:
    path: /Download/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
- name: Download Product File
  endpoint:
    path: /Download/Product/{{release}}/{{productname}}
    method: GET
- name: Retrieve Available Release Version Numbers for Binary File
  endpoint:
    path: /Releases/Library/{{os}}/{{compiler}}/{{architecture}}/{{filename}}
    method: GET
- name: Retrieve Available Release Version Numbers for Data File
  endpoint:
    path: /Releases/Data/{{filename}}
    method: GET
- name: Retrieve Available Release Version Numbers for Language Interface File
  endpoint:
    path: /Releases/Interface/{{os}}/{{language}}/{{architecture}}/{{filename}}
    method: GET
- name: Retrieve Available Release Version Numbers for Manifest
  endpoint:
    path: /ManifestReleases/{{manifest}}
    method: GET
- name: Retrieve Available Release Version Numbers for Product File
  endpoint:
    path: /Releases/Product/{{productname}}
    method: GET
- name: Retrieve a List of Files from a Specific Manifest
  endpoint:
    path: /Manifest/{{release}}/{{manifest}}
    method: GET
- name: Retrieve a List of Manifests from a Specific Release Version Number
  endpoint:
    path: /ManifestList/{{release}}
    method: GET
- name: countries
  endpoint:
    path: /api/v1/countries
    method: GET
    data_selector: data
    params: {}
- name: operators
  endpoint:
    path: /api/v1/operators
    method: GET
    data_selector: data
    params: {}
- name: mvno_data
  endpoint:
    path: /mvno-data
    method: GET
    data_selector: records
    params: {}
- name: global_phone_package
  endpoint:
    path: /api/global-phone/packages
    method: GET
    data_selector: records
- name: binary_file_metadata
  endpoint:
    path: /Metadata/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: json
- name: data_file_metadata
  endpoint:
    path: /Metadata/Data/{{release}}/{{filename}}
    method: GET
    data_selector: json
- name: language_interface_file_metadata
  endpoint:
    path: /Metadata/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: json
- name: product_file_metadata
  endpoint:
    path: /Metadata/Product/{{release}}/{{productname}}
    method: GET
    data_selector: json
- name: binary_file_hash
  endpoint:
    path: /{{hashtype}}/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: json
- name: data_file_hash
  endpoint:
    path: /{{hashtype}}/Data/{{release}}/{{filename}}
    method: GET
    data_selector: json
- name: language_interface_file_hash
  endpoint:
    path: /{{hashtype}}/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: json
- name: product_file_hash
  endpoint:
    path: /{{hashtype}}/Product/{{release}}/{{productname}}
    method: GET
    data_selector: json
- name: Browse
  endpoint:
    path: /Browse
    method: GET
    data_selector: null
    params:
      id: '{{customerId}}'
      mft: dq_data
      release: latest
      sort: dsize
- name: download_binary_file
  endpoint:
    path: /Download/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
- name: download_data_file
  endpoint:
    path: /Download/Data/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
- name: download_language_interface_file
  endpoint:
    path: /Download/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
- name: download_product_file
  endpoint:
    path: /Download/Product/{{release}}/{{productname}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
- name: download_binary_file
  endpoint:
    path: /Download/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
- name: download_data_file
  endpoint:
    path: /Download/Data/{{release}}/{{filename}}
    method: GET
- name: download_language_interface_file
  endpoint:
    path: /Download/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
- name: download_product_file
  endpoint:
    path: /Download/Product/{{release}}/{{productname}}
    method: GET
- name: retrieve_available_release_version_numbers_for_binary_file
  endpoint:
    path: /Releases/Library/{{os}}/{{compiler}}/{{architecture}}/{{filename}}
    method: GET
- name: retrieve_available_release_version_numbers_for_data_file
  endpoint:
    path: /Releases/Data/{{filename}}
    method: GET
- name: retrieve_available_release_version_numbers_for_language_interface_file
  endpoint:
    path: /Releases/Interface/{{os}}/{{language}}/{{architecture}}/{{filename}}
    method: GET
- name: retrieve_available_release_version_numbers_for_manifest
  endpoint:
    path: /ManifestReleases/{{manifest}}
    method: GET
- name: retrieve_available_release_version_numbers_for_product_file
  endpoint:
    path: /Releases/Product/{{productname}}
    method: GET
- name: retrieve_files_from_manifest
  endpoint:
    path: /Manifest/{{release}}/{{manifest}}
    method: GET
- name: retrieve_manifests_from_release
  endpoint:
    path: /ManifestList/{{release}}
    method: GET
- name: manifest_list
  endpoint:
    path: /ManifestList/{{release}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
      format: json
- name: metadata_library
  endpoint:
    path: /Metadata/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
- name: metadata_data
  endpoint:
    path: /Metadata/Data/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
- name: metadata_interface
  endpoint:
    path: /Metadata/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
- name: metadata_product
  endpoint:
    path: /Metadata/Product/{{release}}/{{productname}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
- name: binary_file_metadata
  endpoint:
    path: /Metadata/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params: {}
- name: data_file_metadata
  endpoint:
    path: /Metadata/Data/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params: {}
- name: language_interface_file_metadata
  endpoint:
    path: /Metadata/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params: {}
- name: product_file_metadata
  endpoint:
    path: /Metadata/Product/{{release}}/{{productname}}
    method: GET
    data_selector: records
    params: {}
- name: binary_file_hash
  endpoint:
    path: /{{hashtype}}/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params: {}
- name: data_file_hash
  endpoint:
    path: /{{hashtype}}/Data/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params: {}
- name: language_interface_file_hash
  endpoint:
    path: /{{hashtype}}/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params: {}
- name: product_file_hash
  endpoint:
    path: /{{hashtype}}/Product/{{release}}/{{productname}}
    method: GET
    data_selector: records
    params: {}
- name: browse
  endpoint:
    path: /Browse
    method: GET
    data_selector: files
    params:
      id: '{{customerId}}'
      mft: dq_data
      release: latest
      sort: dsize
- name: retrieve_hash_value_for_binary_file
  endpoint:
    path: /{{hashtype}}/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
      format: json
- name: retrieve_hash_value_for_data_file
  endpoint:
    path: /{{hashtype}}/Data/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
      format: json
- name: retrieve_hash_value_for_language_interface_file
  endpoint:
    path: /{{hashtype}}/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
- name: retrieve_hash_value_for_product_file
  endpoint:
    path: /{{hashtype}}/Product/{{release}}/{{productname}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
- name: download_binary_file
  endpoint:
    path: /Download/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: response
    params:
      id: '{{customerId}}'
- name: download_data_file
  endpoint:
    path: /Download/Data/{{release}}/{{filename}}
    method: GET
    data_selector: response
    params:
      id: '{{customerId}}'
- name: download_language_interface_file
  endpoint:
    path: /Download/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: response
    params:
      id: '{{customerId}}'
- name: download_product_file
  endpoint:
    path: /Download/Product/{{release}}/{{productname}}
    method: GET
    data_selector: response
    params:
      id: '{{customerId}}'
- name: available_release_versions
  endpoint:
    path: /Releases/Library/{{os}}/{{compiler}}/{{architecture}}/{{filename}}
    method: GET
- name: available_data_file_releases
  endpoint:
    path: /Releases/Data/{{filename}}
    method: GET
- name: available_language_interface_file_releases
  endpoint:
    path: /Releases/Interface/{{os}}/{{language}}/{{architecture}}/{{filename}}
    method: GET
- name: available_manifest_releases
  endpoint:
    path: /ManifestReleases/{{manifest}}
    method: GET
- name: available_product_file_releases
  endpoint:
    path: /Releases/Product/{{productname}}
    method: GET
- name: files_from_manifest
  endpoint:
    path: /Manifest/{{release}}/{{manifest}}
    method: GET
- name: Download Binary File
  endpoint:
    path: /Download/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
- name: Download Data File
  endpoint:
    path: /Download/Data/{{release}}/{{filename}}
    method: GET
- name: Download Language Interface File
  endpoint:
    path: /Download/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
- name: Download Product File
  endpoint:
    path: /Download/Product/{{release}}/{{productname}}
    method: GET
- name: Retrieve Available Release Version Numbers for Binary File
  endpoint:
    path: /Releases/Library/{{os}}/{{compiler}}/{{architecture}}/{{filename}}
    method: GET
- name: Retrieve Available Release Version Numbers for Data File
  endpoint:
    path: /Releases/Data/{{filename}}
    method: GET
- name: Retrieve Available Release Version Numbers for Language Interface File
  endpoint:
    path: /Releases/Interface/{{os}}/{{language}}/{{architecture}}/{{filename}}
    method: GET
- name: Retrieve Available Release Version Numbers for Manifest
  endpoint:
    path: /ManifestReleases/{{manifest}}
    method: GET
- name: Retrieve Available Release Version Numbers for Product File
  endpoint:
    path: /Releases/Product/{{productname}}
    method: GET
- name: Retrieve a List of Files from a Specific Manifest
  endpoint:
    path: /Manifest/{{release}}/{{manifest}}
    method: GET
- name: Retrieve a List of Manifests from a Specific Release Version Number
  endpoint:
    path: /ManifestList/{{release}}
    method: GET
- name: Retrieve Metadata for a Specific File
  endpoint:
    path: /Metadata/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
- name: Retrieve Metadata for Data File
  endpoint:
    path: /Metadata/Data/{{release}}/{{filename}}
    method: GET
- name: Retrieve Metadata for Language Interface File
  endpoint:
    path: /Metadata/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
- name: Retrieve Metadata for Product File
  endpoint:
    path: /Metadata/Product/{{release}}/{{productname}}
    method: GET
- name: Retrieve Hash Value for Binary File
  endpoint:
    path: /{{hashtype}}/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
- name: Retrieve Hash Value for Data File
  endpoint:
    path: /{{hashtype}}/Data/{{release}}/{{filename}}
    method: GET
- name: Retrieve Hash Value for Language Interface File
  endpoint:
    path: /{{hashtype}}/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
- name: Retrieve Hash Value for Product File
  endpoint:
    path: /{{hashtype}}/Product/{{release}}/{{productname}}
    method: GET
- name: manifest_list
  endpoint:
    path: /ManifestList/{{release}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
      format: json
- name: metadata_library
  endpoint:
    path: /Metadata/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
- name: metadata_data
  endpoint:
    path: /Metadata/Data/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
- name: metadata_interface
  endpoint:
    path: /Metadata/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
- name: metadata_product
  endpoint:
    path: /Metadata/Product/{{release}}/{{productname}}
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
- name: release_versions
  endpoint:
    path: /manifestReleases/dq_addr_bins
    method: GET
    data_selector: releases
    params:
      format: json
- name: manifest_links_bins
  endpoint:
    path: /Manifest/LATEST/dq_addr_bins
    method: GET
    data_selector: links
    params:
      format: json
- name: manifest_links_data
  endpoint:
    path: /Manifest/LATEST/dq_addr_data
    method: GET
    data_selector: links
    params:
      format: json
- name: hash_value_binary_file
  endpoint:
    path: /{{hashtype}}/Library/{{os}}/{{compiler}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: hash_value
    params:
      id: '{{customerId}}'
      format: json
- name: hash_value_data_file
  endpoint:
    path: /{{hashtype}}/Data/{{release}}/{{filename}}
    method: GET
    data_selector: hash_value
    params:
      id: '{{customerId}}'
      format: json
- name: hash_value_language_interface_file
  endpoint:
    path: /{{hashtype}}/Interface/{{os}}/{{language}}/{{architecture}}/{{release}}/{{filename}}
    method: GET
    data_selector: hash_value
    params:
      id: '{{customerId}}'
- name: hash_value_product_file
  endpoint:
    path: /{{hashtype}}/Product/{{release}}/{{productname}}
    method: GET
    data_selector: hash_value
    params:
      id: '{{customerId}}'
- name: contact_search
  endpoint:
    path: /v5/web/contactsearch/docontactSearch
    method: GET
    data_selector: records
    params:
      maxrecords: '10'
      matchlevel: '10'
- name: contact_search
  endpoint:
    path: /v5/web/contactsearch/docontactSearch
    method: GET
    data_selector: Results
    params:
      id: '{{customerId}}'
      maxrecords: '10'
      matchlevel: '10'
- name: Download Binary File
  endpoint:
    path: /Download/Binary
    method: GET
- name: Download Data File
  endpoint:
    path: /Download/Data
    method: GET
- name: Download Language Interface File
  endpoint:
    path: /Download/Interface
    method: GET
- name: Download Product File
  endpoint:
    path: /Download/Product
    method: GET
- name: Retrieve Available Release Version Numbers
  endpoint:
    path: /Releases
    method: GET
- name: Retrieve Metadata for a Specific File
  endpoint:
    path: /Metadata
    method: GET
- name: Retrieve Hashes for a Specific File
  endpoint:
    path: /Hashes
    method: GET
- name: people_business_search
  endpoint:
    path: /people-business-search
    method: GET
    data_selector: records
- name: Available Release Version Numbers for Manifest
  endpoint:
    path: /manifestReleases/dq_addr_bins
    method: GET
    data_selector: releases
- name: Files from a Specific Manifest
  endpoint:
    path: /Manifest/LATEST/dq_addr_bins
    method: GET
    data_selector: links
- name: Download Data File
  endpoint:
    path: /Download/Data/LATEST/mdAddr.dat
    method: GET
    data_selector: file
- name: ContactVerify
  endpoint:
    path: /V3/WEB/ContactVerify/doContactVerify
    method: GET
    data_selector: records
    params: {}
- name: contact_search
  endpoint:
    path: /v5/web/contactsearch/docontactSearch
    method: GET
    data_selector: records
    params:
      maxrecords: '10'
      matchlevel: '10'
- name: contact_verify
  endpoint:
    path: /V3/WEB/ContactVerify/doContactVerify
    method: GET
    params:
      phone: '8006354772'
      t: '{{customerId}}'
      act: Verify
      opt: CentricHint:phone
      comp: Melissa
      format: JSON
- name: contact_search
  endpoint:
    path: /v5/web/contactsearch/docontactSearch
    method: GET
    data_selector: Results
    params:
      id: '{{customerId}}'
      maxrecords: '10'
      matchlevel: '10'
- name: ContactVerify
  endpoint:
    path: /v3/WEB/ContactVerify/doContactVerify
    method: GET
    data_selector: records
    params:
      act: Append
      cols: ''
      id: '{{customerId}}'
      opt: Append:blank
      t: Test
      a1: 22382 Avenida Empresa
      city: Rancho Santa Margarita
      state: California
- name: PeopleBusinessSearch
  endpoint:
    path: /people-business-search
    method: GET
- name: Response
  endpoint:
    path: /api/v1/response
    method: GET
    data_selector: Records
    params: {}
- name: ContactVerify
  endpoint:
    path: /V3/WEB/ContactVerify/doContactVerify
    method: GET
    data_selector: records
    params: {}
- name: ContactVerify
  endpoint:
    path: /V3/WEB/ContactVerify/doContactVerify
    method: GET
    data_selector: response
    params:
      phone: '8006354772'
      t: '{{customerId}}'
      act: Verify
      opt: CentricHint:phone
      comp: Melissa
      format: JSON
- name: contact_verify
  endpoint:
    path: /v3/WEB/ContactVerify/doContactVerify
    method: GET
    data_selector: ''
    params: {}
- name: GrpAddressDetails
  endpoint:
    path: /personator/grpaddressdetails
    method: GET
    data_selector: records
- name: GrpCensus
  endpoint:
    path: /personator/grpcensus
    method: GET
    data_selector: records
- name: GrpDemographicBasic
  endpoint:
    path: /personator/grpdemographicbasic
    method: GET
    data_selector: records
- name: GrpIPAddress
  endpoint:
    path: /personator/grpipaddress
    method: GET
    data_selector: records
- name: GrpNameDetails
  endpoint:
    path: /personator/grpnamedetails
    method: GET
    data_selector: records
- name: GrpParsedAddress
  endpoint:
    path: /personator/grpparsedaddress
    method: GET
    data_selector: records
- name: actions
  endpoint:
    path: /actions
    method: GET
    data_selector: actions
    params: {}
- name: columns
  endpoint:
    path: /columns
    method: GET
    data_selector: columns
    params: {}
- name: AddressDetails
  endpoint:
    path: /api/address/details
    method: GET
    data_selector: Results
- name: Demographics
  endpoint:
    path: /api/demographics
    method: GET
    data_selector: DemographicsResults
- name: GeocodeDetails
  endpoint:
    path: /api/geocode
    method: GET
    data_selector: GeocodeResults
- name: Check(Name)
  endpoint:
    path: /Check(Name)
    method: GET
    data_selector: Records
- name: SalutationFormat
  endpoint:
    path: /SalutationFormat
    method: GET
    data_selector: Records
- name: StandardizeCasing
  endpoint:
    path: /StandardizeCasing
    method: GET
    data_selector: Records
- name: StandardizeCompany
  endpoint:
    path: /StandardizeCompany
    method: GET
    data_selector: Records
- name: UpdateDomain
  endpoint:
    path: /UpdateDomain
    method: GET
    data_selector: Records
- name: UsePreferredCity
  endpoint:
    path: /UsePreferredCity
    method: GET
    data_selector: Records
- name: AddressDeliveryInstallation
  endpoint:
    path: /AddressDeliveryInstallation
    method: GET
    data_selector: parsed_delivery_installation
    params: {}
- name: AddressHouseNumber
  endpoint:
    path: /AddressHouseNumber
    method: GET
    data_selector: parsed_house_number
    params: {}
- name: AddressLockBox
  endpoint:
    path: /AddressLockBox
    method: GET
    data_selector: parsed_lock_box
    params: {}
- name: AddressPostDirection
  endpoint:
    path: /AddressPostDirection
    method: GET
    data_selector: parsed_post_direction
    params: {}
- name: AddressPreDirection
  endpoint:
    path: /AddressPreDirection
    method: GET
    data_selector: parsed_pre_direction
    params: {}
- name: AddressPrivateMailboxName
  endpoint:
    path: /AddressPrivateMailboxName
    method: GET
    data_selector: parsed_private_mailbox_name
    params: {}
- name: AddressPrivateMailboxRange
  endpoint:
    path: /AddressPrivateMailboxRange
    method: GET
    data_selector: parsed_private_mailbox_range
    params: {}
- name: AddressRouteService
  endpoint:
    path: /AddressRouteService
    method: GET
    data_selector: parsed_route_service
    params: {}
- name: AddressStreetName
  endpoint:
    path: /AddressStreetName
    method: GET
    data_selector: parsed_street_name
    params: {}
- name: AddressStreetSuffix
  endpoint:
    path: /AddressStreetSuffix
    method: GET
    data_selector: parsed_street_suffix
    params: {}
- name: AddressSuiteName
  endpoint:
    path: /AddressSuiteName
    method: GET
    data_selector: parsed_suite_name
    params: {}
- name: AddressSuiteNumber
  endpoint:
    path: /AddressSuiteNumber
    method: GET
    data_selector: parsed_suite_number
    params: {}
- name: DomainName
  endpoint:
    path: /DomainName
    method: GET
    data_selector: parsed_domain_name
    params: {}
- name: MailboxName
  endpoint:
    path: /MailboxName
    method: GET
    data_selector: parsed_mailbox_name
    params: {}
- name: TopLevelDomain
  endpoint:
    path: /TopLevelDomain
    method: GET
    data_selector: parsed_top_level_domain
    params: {}
- name: AreaCode
  endpoint:
    path: /AreaCode
    method: GET
    data_selector: parsed_area_code
    params: {}
- name: NewAreaCode
  endpoint:
    path: /NewAreaCode
    method: GET
    data_selector: parsed_new_area_code
    params: {}
- name: PhoneExtension
  endpoint:
    path: /PhoneExtension
    method: GET
    data_selector: parsed_extension
    params: {}
- name: PhonePrefix
  endpoint:
    path: /PhonePrefix
    method: GET
    data_selector: parsed_prefix
    params: {}
- name: PhoneSuffix
  endpoint:
    path: /PhoneSuffix
    method: GET
    data_selector: parsed_suffix
    params: {}
- name: AddressDeliveryInstallation
  endpoint:
    path: /AddressDeliveryInstallation
    method: GET
    data_selector: parsed_delivery_installation
- name: AddressHouseNumber
  endpoint:
    path: /AddressHouseNumber
    method: GET
    data_selector: parsed_house_number
- name: AddressLockBox
  endpoint:
    path: /AddressLockBox
    method: GET
    data_selector: parsed_lock_box
- name: AddressPostDirection
  endpoint:
    path: /AddressPostDirection
    method: GET
    data_selector: parsed_post_direction
- name: AddressPreDirection
  endpoint:
    path: /AddressPreDirection
    method: GET
    data_selector: parsed_pre_direction
- name: AddressPrivateMailboxName
  endpoint:
    path: /AddressPrivateMailboxName
    method: GET
    data_selector: parsed_private_mailbox_name
- name: AddressPrivateMailboxRange
  endpoint:
    path: /AddressPrivateMailboxRange
    method: GET
    data_selector: parsed_private_mailbox_range
- name: AddressRouteService
  endpoint:
    path: /AddressRouteService
    method: GET
    data_selector: parsed_route_service
- name: AddressStreetName
  endpoint:
    path: /AddressStreetName
    method: GET
    data_selector: parsed_street_name
- name: AddressStreetSuffix
  endpoint:
    path: /AddressStreetSuffix
    method: GET
    data_selector: parsed_street_suffix
- name: AddressSuiteName
  endpoint:
    path: /AddressSuiteName
    method: GET
    data_selector: parsed_suite_name
- name: AddressSuiteNumber
  endpoint:
    path: /AddressSuiteNumber
    method: GET
    data_selector: parsed_suite_number
- name: DomainName
  endpoint:
    path: /DomainName
    method: GET
    data_selector: parsed_domain_name
- name: MailboxName
  endpoint:
    path: /MailboxName
    method: GET
    data_selector: parsed_mailbox_name
- name: TopLevelDomain
  endpoint:
    path: /TopLevelDomain
    method: GET
    data_selector: parsed_top_level_domain
- name: AreaCode
  endpoint:
    path: /AreaCode
    method: GET
    data_selector: parsed_area_code
- name: NewAreaCode
  endpoint:
    path: /NewAreaCode
    method: GET
    data_selector: parsed_new_area_code
- name: PhoneExtension
  endpoint:
    path: /PhoneExtension
    method: GET
    data_selector: parsed_extension
- name: PhonePrefix
  endpoint:
    path: /PhonePrefix
    method: GET
    data_selector: parsed_prefix
- name: PhoneSuffix
  endpoint:
    path: /PhoneSuffix
    method: GET
    data_selector: parsed_suffix
- name: doContactVerify
  endpoint:
    path: /v1/doContactVerify
    method: GET
    data_selector: records
    params: {}
- name: doContactVerify
  endpoint:
    path: /v1/doContactVerify
    method: GET
    data_selector: records
    params: {}
- name: demographics_gender
- name: geo_code_status
- name: geo_code_error
- name: household_income
- name: length_of_residence
- name: marital_status
- name: name_error
- name: name_status
- name: phone_error
- name: phone_status
- name: own_rent
- name: verify_results
- name: verify_status
- name: occupation
- name: address_type_us
- name: address_type_canada
- name: address_type_default
- name: children_age_range
- name: delivery_indicator
- name: demographics_gender
- name: education
- name: ethnic_code
- name: ethnic_group
- name: household_size
- name: ip_connection_speed
- name: ip_connection_type
- name: ip_proxy_description
- name: address
  endpoint:
    path: /address
    method: GET
    data_selector: records
- name: email
  endpoint:
    path: /email
    method: GET
    data_selector: records
- name: identity
  endpoint:
    path: /identity
    method: GET
    data_selector: records
- name: name
  endpoint:
    path: /name
    method: GET
    data_selector: records
- name: phone
  endpoint:
    path: /phone
    method: GET
    data_selector: records
- name: doContactVerify
  endpoint:
    path: /v1/doContactVerify
    method: GET
    data_selector: records
    params: {}
- name: testContactVerify
  endpoint:
    path: /v1/testContactVerify
    method: GET
    data_selector: results
- name: doContactVerify
  endpoint:
    path: /v1/doContactVerify
    method: GET
    data_selector: null
    params: {}
- name: check_person_identity
  endpoint:
    path: /check
    method: GET
    data_selector: results
    params: {}
- name: post_person_identity
  endpoint:
    path: /post
    method: POST
    data_selector: results
    params: {}
- name: email
  endpoint:
    path: /email/validate
    method: POST
    data_selector: results
- name: identity
  endpoint:
    path: /identity/verify
    method: POST
    data_selector: results
- name: phone
  endpoint:
    path: /phone/validate
    method: POST
    data_selector: results
- name: name
  endpoint:
    path: /name/parse
    method: POST
    data_selector: results
- name: address
  endpoint:
    path: /address/validate
    method: POST
    data_selector: results
- name: doPersonatorSearch
  endpoint:
    path: /WEB/doPersonatorSearch
    method: GET
    data_selector: records
    params: {}
- name: doPersonatorSearch
  endpoint:
    path: /WEB/doPersonatorSearch
    method: GET
- name: personator_search
  endpoint:
    path: /personator/search
    method: GET
    data_selector: results
- name: LookupDeeds
  endpoint:
    path: /v4/WEB/LookupDeeds
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
      format: JSON
- name: LookupHomesByOwner
  endpoint:
    path: /v4/WEB/LookupHomesByOwner
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
      format: JSON
- name: LookupProperty
  endpoint:
    path: /v4/WEB/LookupProperty
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
      format: JSON
- name: LookupDeeds
  endpoint:
    path: /v4/WEB/LookupDeeds
    method: GET
- name: LookupHomesByOwner
  endpoint:
    path: /v4/WEB/LookupHomesByOwner
    method: GET
- name: LookupProperty
  endpoint:
    path: /v4/WEB/LookupProperty
    method: GET
- name: test_contact_verify
  endpoint:
    path: /v1/testContactVerify
    method: GET
    data_selector: results
    params: {}
- name: PersonatorIdentity
  endpoint:
    path: /personator/identity
    method: GET
    data_selector: response
- name: lookup_deeds
  endpoint:
    path: /v4/WEB/LookupDeeds
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      opt: page:1
      ff: 710 Winston Ln Sugar Land TX
      format: json
- name: deed_records
  endpoint:
    path: /LookupDeeds
    method: GET
    data_selector: Records
    params: {}
- name: doPersonatorSearch
  endpoint:
    path: /WEB/doPersonatorSearch
    method: GET
    data_selector: records
    params: {}
- name: personator_search
  endpoint:
    path: /WEB/doPersonatorSearch
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
- name: LookupHomesByOwner
  endpoint:
    path: /v4/WEB/LookupHomesByOwner
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      mak: '9005381555'
      ff: ''
      format: json
- name: LookupProperty
  endpoint:
    path: /v4/WEB/LookupProperty
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
      format: json
- name: Parcel
  endpoint:
    path: /property/parcel
    method: GET
    data_selector: Records
    params: {}
- name: Records
  endpoint:
    path: /LookupProperty
    method: GET
    data_selector: Records
    params: {}
- name: property_info
  endpoint:
    path: /api/v1/properties
    method: GET
    data_selector: properties
    params: {}
- name: LookupDeeds
  endpoint:
    path: /v4/WEB/LookupDeeds
    method: GET
    data_selector: ''
    params: {}
- name: LookupHomesByOwner
  endpoint:
    path: /v4/WEB/LookupHomesByOwner
    method: GET
    data_selector: ''
    params: {}
- name: LookupProperty
  endpoint:
    path: /v4/WEB/LookupProperty
    method: GET
    data_selector: ''
    params: {}
- name: GrpIntRoomInfo
  endpoint:
    path: /GrpIntRoomInfo
    method: GET
    data_selector: records
- name: GrpIntAmenities
  endpoint:
    path: /GrpIntAmenities
    method: GET
    data_selector: records
- name: GrpExtStructInfo
  endpoint:
    path: /GrpExtStructInfo
    method: GET
    data_selector: records
- name: GrpExtAmenities
  endpoint:
    path: /GrpExtAmenities
    method: GET
    data_selector: records
- name: GrpExtBuildings
  endpoint:
    path: /GrpExtBuildings
    method: GET
    data_selector: records
- name: GrpUtilities
  endpoint:
    path: /GrpUtilities
    method: GET
    data_selector: records
- name: GrpParking
  endpoint:
    path: /GrpParking
    method: GET
    data_selector: records
- name: GrpYardGardenInfo
  endpoint:
    path: /GrpYardGardenInfo
    method: GET
    data_selector: records
- name: GrpEstimatedValue
  endpoint:
    path: /GrpEstimatedValue
    method: GET
    data_selector: records
- name: GrpShape
  endpoint:
    path: /GrpShape
    method: GET
    data_selector: records
- name: LookupDeeds
  endpoint:
    path: /v4/WEB/LookupDeeds
    method: GET
- name: LookupHomesByOwner
  endpoint:
    path: /v4/WEB/LookupHomesByOwner
    method: GET
- name: LookupProperty
  endpoint:
    path: /v4/WEB/LookupProperty
    method: GET
- name: LookupDeeds
  endpoint:
    path: /v4/WEB/LookupDeeds
    method: GET
- name: LookupHomesByOwner
  endpoint:
    path: /v4/WEB/LookupHomesByOwner
    method: GET
- name: LookupProperty
  endpoint:
    path: /v4/WEB/LookupProperty
    method: GET
- name: LookupDeeds
  endpoint:
    path: /v4/WEB/LookupDeeds
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      format: json
- name: Record
  endpoint:
    path: /LookupDeeds
    method: GET
    data_selector: Records
    params: {}
- name: LookupHomesByOwner
  endpoint:
    path: /v4/WEB/LookupHomesByOwner
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      mak: '9005381555'
      ff: ''
      format: JSON
- name: LookupProperty
  endpoint:
    path: /v4/WEB/LookupProperty
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
      format: json
- name: property
  endpoint:
    path: /property
    method: GET
    data_selector: Records
    params: {}
- name: doLookup
  endpoint:
    path: /V3/WEB/ReverseGeoCode/doLookup
    method: GET
    data_selector: ''
    params: {}
- name: doLookupPostalCodes
  endpoint:
    path: /V3/WEB/ReverseGeoCode/doLookupPostalCodes
    method: GET
    data_selector: ''
    params: {}
- name: doLookupFromList
  endpoint:
    path: /V3/WEB/ReverseGeoCode/doLookupFromList
    method: POST
    data_selector: ''
    params: {}
- name: Records
  endpoint:
    path: /LookupProperty
    method: GET
    data_selector: Records
    params: {}
- name: doLookup
  endpoint:
    path: /V3/WEB/ReverseGeoCode/doLookup
    method: GET
    data_selector: Records
    params:
      dist: '10'
      id: '{{customerId}}'
      format: json
      lat: '33.63756710910554'
      long: '-117.60695049134513'
      recs: '100'
      t: Test
- name: Construction
  endpoint:
    path: /grpintstructinfo/construction
    method: GET
- name: ConstructionFireResistanceClass
  endpoint:
    path: /grpintstructinfo/constructionfireResistanceClass
    method: GET
- name: FlooringMaterialPrimary
  endpoint:
    path: /grpintstructinfo/flooringMaterialPrimary
    method: GET
- name: Foundation
  endpoint:
    path: /grpintstructinfo/foundation
    method: GET
- name: InteriorStructure
  endpoint:
    path: /grpintstructinfo/interiorStructure
    method: GET
- name: PlumbingFixturesCount
  endpoint:
    path: /grpintstructinfo/plumbingFixturesCount
    method: GET
- name: SafetyFireSprinklersFlag
  endpoint:
    path: /grpintstructinfo/safetyFireSprinklersFlag
    method: GET
- name: doLookupPostalCodes
  endpoint:
    path: /V3/WEB/ReverseGeoCode/doLookupPostalCodes
    method: GET
    data_selector: Records
    params:
      dist: '10'
      id: '{{customerId}}'
      format: json
      lat: '33.63756710910554'
      long: '-117.60695049134513'
      t: Test
- name: doLookupFromList
  endpoint:
    path: /V3/WEB/ReverseGeoCode/doLookupFromList
    method: POST
    data_selector: Records
    params:
      CustomerId: '{{customerId}}'
      Latitude: '33.63756710910554'
      Longitude: '-117.60695049134513'
      MaxDistance: '10'
      TransmissionReference: Reverse Geo LookupFromList Test
- name: Reverse GeoCoder
  endpoint:
    path: /reversegeocoder
    method: GET
    data_selector: results
    params:
      MaxRecords: 100
      MaxDistance: 10
- name: GrpIntRoomInfo
  endpoint:
    path: /api/GrpIntRoomInfo
    method: GET
    data_selector: records
- name: GrpIntAmenities
  endpoint:
    path: /api/GrpIntAmenities
    method: GET
    data_selector: records
- name: GrpExtStructInfo
  endpoint:
    path: /api/GrpExtStructInfo
    method: GET
    data_selector: records
- name: GrpExtAmenities
  endpoint:
    path: /api/GrpExtAmenities
    method: GET
    data_selector: records
- name: GrpExtBuildings
  endpoint:
    path: /api/GrpExtBuildings
    method: GET
    data_selector: records
- name: GrpUtilities
  endpoint:
    path: /api/GrpUtilities
    method: GET
    data_selector: records
- name: GrpParking
  endpoint:
    path: /api/GrpParking
    method: GET
    data_selector: records
- name: GrpYardGardenInfo
  endpoint:
    path: /api/GrpYardGardenInfo
    method: GET
    data_selector: records
- name: GrpEstimatedValue
  endpoint:
    path: /api/GrpEstimatedValue
    method: GET
    data_selector: records
- name: GrpShape
  endpoint:
    path: /api/GrpShape
    method: GET
    data_selector: records
- name: LookupDeeds
  endpoint:
    path: /v4/WEB/LookupDeeds
    method: GET
- name: LookupHomesByOwner
  endpoint:
    path: /v4/WEB/LookupHomesByOwner
    method: GET
- name: LookupProperty
  endpoint:
    path: /v4/WEB/LookupProperty
    method: GET
- name: ReverseGeoCoder
  endpoint:
    path: /reverse-geocoder
    method: GET
- name: do_lookup
  endpoint:
    path: /v3/web/ReverseGeoCode/doLookup
    method: GET
    data_selector: response
- name: do_lookup_postal_codes
  endpoint:
    path: /v3/web/ReverseGeoCode/doLookupPostalCodes
    method: GET
    data_selector: response
- name: US Address
  endpoint:
    path: /V3/WEB/SmartMover/doSmartMover
    method: GET
    data_selector: records
    params: {}
- name: Canadian Address
  endpoint:
    path: /V3/WEB/SmartMover/doSmartMover
    method: GET
    data_selector: records
    params: {}
- name: doSmartMover
  endpoint:
    path: /doSmartMover
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      pafid: '{{pafId}}'
      t: Test
      a1: 22382 Avenida Empresa
      city: Rancho Santa Margarita
      comp: Melissa
      ctry: US
      full: Ray Melissa
      postal: '92688'
      state: CA
- name: doSmartMover
  endpoint:
    path: /doSmartMover
    method: POST
    data_selector: Records
    params:
      Actions: NCOA
      CustomerID: '{{customerId}}'
      ExecutionID: Batch_1
      Format: json
      PAFId: '{{pafId}}'
      TransmissionReference: Test
- name: records
  endpoint:
    path: /Records
    method: GET
    data_selector: Records
    params: {}
- name: lookup_addresses
  endpoint:
    path: /V3/WEB/ReverseGeoCode/doLookup
    method: GET
    data_selector: ''
    params:
      dist: '10'
      format: JSON
      id: '{{customerId}}'
      lat: '33.63756710910554'
      long: '-117.60695049134513'
      opt: ''
      recs: ''
      t: Test
- name: lookup_postal_codes
  endpoint:
    path: /V3/WEB/ReverseGeoCode/doLookupPostalCodes
    method: GET
    data_selector: ''
    params:
      dist: '10'
      format: json
      id: '{{customerId}}'
      lat: '33.63756710910554'
      long: '-117.60695049134513'
      opt: ''
      recs: ''
      t: Test
- name: lookup_from_list
  endpoint:
    path: /V3/WEB/ReverseGeoCode/doLookupFromList
    method: POST
    data_selector: ''
    params:
      CustomerId: '{{customerId}}'
      Latitude: '33.63756710910554'
      Longitude: '-117.60695049134513'
      MaxDistance: '10'
      MaxRecords: ''
      Options: ''
      TransmissionReference: Reverse Geo LookupFromList Test
- name: doSmartMover
  endpoint:
    path: /doSmartMover
    method: GET
    data_selector: Records
    params:
      act: CCOA
      format: json
      id: '{{customerId}}'
      jobid: '001'
      city: Ottawa
      state: 'ON'
      ctry: CA
      full: Prime Minister of Canada
      postal: K1P 5K9
- name: doLookup
  endpoint:
    path: /V3/WEB/ReverseGeoCode/doLookup
    method: GET
    data_selector: Records
    params:
      dist: '10'
      id: '{{customerId}}'
      format: json
      lat: '33.63756710910554'
      long: '-117.60695049134513'
      recs: '100'
      t: Test
- name: doLookupPostalCodes
  endpoint:
    path: /V3/WEB/ReverseGeoCode/doLookupPostalCodes
    method: GET
    data_selector: Records
    params: {}
- name: doLookupFromList
  endpoint:
    path: /V3/WEB/ReverseGeoCode/doLookupFromList
    method: GET
    data_selector: Records
    params: {}
- name: default
  endpoint:
    path: /default
    method: GET
    data_selector: Records
- name: name_details
  endpoint:
    path: /name_details
    method: GET
    data_selector: Records
- name: original_address_details
  endpoint:
    path: /original_address_details
    method: GET
    data_selector: Records
- name: parsed_address_details
  endpoint:
    path: /parsed_address_details
    method: GET
    data_selector: Records
- name: standardized_address_details
  endpoint:
    path: /standardized_address_details
    method: GET
    data_selector: Records
- name: doLookupPostalCodes
  endpoint:
    path: /V3/WEB/ReverseGeoCode/doLookupPostalCodes
    method: GET
    data_selector: Records
    params:
      dist: '10'
      id: '{{customerId}}'
      format: json
- name: doLookupFromList
  endpoint:
    path: /V3/WEB/ReverseGeoCode/doLookupFromList
    method: POST
    data_selector: Records
    params:
      CustomerID: '{{customerId}}'
      Latitude: '33.63756710910554'
      Longitude: '-117.60695049134513'
      MaxDistance: '10'
      TransmissionReference: Reverse Geo LookupFromList Test
- name: ReverseGeoCoder
  endpoint:
    path: /reversegeocoder
    method: GET
- name: do_lookup
  endpoint:
    path: /doLookup
    method: GET
- name: do_lookup_postal_codes
  endpoint:
    path: /doLookupPostalCodes
    method: GET
- name: ssn_lookup
  endpoint:
    path: /v4/web/SSN/doLookup
    method: GET
    data_selector: records
- name: US Address Validation
  endpoint:
    path: /doSmartMover
    method: GET
    data_selector: ''
    params: {}
- name: Canadian Address Validation
  endpoint:
    path: /doSmartMover
    method: GET
    data_selector: ''
    params: {}
- name: doLookup
  endpoint:
    path: /v4/web/SSN/doLookup
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      first: John
      full: John Doe
      last: Doe
      ssn: '111222333'
- name: doSmartMover
  endpoint:
    path: /doSmartMover
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      pafid: '{{pafId}}'
- name: doSmartMover_post
  endpoint:
    path: /doSmartMover
    method: POST
    data_selector: Records
- name: SSNNameMatch
  endpoint:
    path: /ssn-name-match
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /
    method: GET
    data_selector: Records
    params: {}
- name: doSmartMover
  endpoint:
    path: /doSmartMover
    method: GET
    data_selector: Records
    params:
      id: '{{customerId}}'
      jobid: '001'
      format: json
- name: getDistance
  endpoint:
    path: /v1/WEB/StreetRoute/getDistance
    method: GET
- name: getDistanceMultipoint
  endpoint:
    path: /v1/WEB/StreetRoute/getDistanceMultipoint
    method: GET
- name: DEFAULT
  endpoint:
    path: /
    method: GET
    data_selector: Records
- name: getDistance
  endpoint:
    path: /v1/WEB/StreetRoute/getDistance
    method: GET
    data_selector: Results
    params:
      id: '{{customerId}}'
      opt: avoid:tunnels,routeType:shortest
      t: Test
      units: ''
      endLatitude: '33.649870'
      endLongitude: '-117.582960'
      startLatitude: '33.637520'
      startLongitude: '-117.606920'
- name: getDistanceMultipoint
  endpoint:
    path: /v1/WEB/StreetRoute/getDistanceMultipoint
    method: GET
    data_selector: Results
    params:
      id: '{{customerId}}'
      opt: avoid:tunnels
      t: Test
      units: mi
      points: 42.211479,-70.999908:42.201926,-71.007090:42.211848,-71.019438:42.214976,-71.0045472
- name: record_level_result_codes
  endpoint:
    path: /result_codes
    method: GET
    data_selector: records
- name: record_level_product_codes
  endpoint:
    path: /product_codes
    method: GET
    data_selector: records
- name: doLookup
  endpoint:
    path: /v4/web/SSN/doLookup
    method: GET
- name: upload_file
  endpoint:
    path: /V5/API/File/UploadFile
    method: POST
    data_selector: undefined
    params: {}
- name: insert_records_ftp
  endpoint:
    path: /V5/API/Record/InsertRecordsFTP/{tableName}
    method: POST
    data_selector: undefined
    params: {}
- name: select_records
  endpoint:
    path: /V5/API/Record/SelectRecords/{tableName}/{primaryKey}
    method: GET
    data_selector: undefined
    params: {}
- name: add_alert
  endpoint:
    path: /V5/API/Alert/SelectRecords/{tableName}/{alertName}/{primaryKey}
    method: GET
    data_selector: undefined
    params: {}
- name: doLookup
  endpoint:
    path: /v4/web/SSN/doLookup
    method: GET
    data_selector: Records
    params: {}
- name: Alert
  endpoint:
    path: /V5/API/Alert/GetAlertInfo/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
- name: Message
  endpoint:
    path: /V5/API/Message/GetMessages
    method: GET
- name: Record
  endpoint:
    path: /V5/API/Record/SelectRecords/{{tableName}}/{{primaryKey}}
    method: GET
- name: File
  endpoint:
    path: /V5/API/File/ListFiles/{{fileName}}
    method: GET
- name: Table
  endpoint:
    path: /V5/API/Table/AlterTable/{{tableName}}
    method: POST
- name: SSNNameMatch
  endpoint:
    path: /ssn-name-match
    method: GET
    data_selector: records
- name: DeleteTable
  endpoint:
    path: /V5/API/Table/DeleteTable/{{tableName}}
    method: GET
- name: GetTableInfo
  endpoint:
    path: /V5/API/Table/GetTableInfo/{{tableName}}
    method: GET
- name: GetTableTags
  endpoint:
    path: /V5/API/Table/GetTableTags/{{tableName}}
    method: GET
- name: RenameTable
  endpoint:
    path: /V5/API/Table/RenameTable/{{tableName}}
    method: GET
- name: TestNotification
  endpoint:
    path: /V5/API/Table/TestNotification/{{tableName}}
    method: GET
- name: TruncateTable
  endpoint:
    path: /V5/API/Table/TruncateTable/{{tableName}}
    method: GET
- name: TransactionRecords
  endpoint:
    path: /V5/API/Transaction/TransactionRecords/{{tableName}}/{{primaryKey}}
    method: GET
- name: TransactionRecordsFTP
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTP/{{tableName}}/{{primaryKey}}
    method: GET
- name: TransactionRecordsFTPAsync
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTPAsync/{{tableName}}/{{primaryKey}}
    method: GET
- name: Alert
  endpoint:
    path: /V5/API/Alert/GetAlertInfo/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
- name: Async
  endpoint:
    path: /V5/API/Async/GetProcessStatus/{{processId}}
    method: GET
- name: File
  endpoint:
    path: /V5/API/File/GetFileInfo/{{fileName}}
    method: GET
- name: Message
  endpoint:
    path: /V5/API/Message/GetMessages
    method: GET
- name: Record
  endpoint:
    path: /V5/API/Record/SelectRecords/{{tableName}}/{{primaryKey}}
    method: GET
- name: Table
  endpoint:
    path: /V5/API/Table/GetTableInfo/{{tableName}}
    method: GET
- name: getDistance
  endpoint:
    path: /v1/WEB/StreetRoute/getDistance
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
      t: Test
      opt: avoid:tunnels,routeType:shortest
      format: JSON
- name: getDistanceMultipoint
  endpoint:
    path: /v1/WEB/StreetRoute/getDistanceMultipoint
    method: GET
    data_selector: records
    params:
      id: '{{customerId}}'
      opt: avoid:tunnels
      t: Test
      units: mi
- name: TransactionRecords
  endpoint:
    path: /V5/API/Transaction/TransactionRecords/{{tableName}}/{{primaryKey}}
    method: GET
- name: TransactionRecordsFTP
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTP/{{tableName}}/{{primaryKey}}
    method: GET
- name: TransactionRecordsFTPAsync
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTPAsync/{{tableName}}/{{primaryKey}}
    method: GET
- name: getDistance
  endpoint:
    path: /v1/WEB/StreetRoute/getDistance
    method: GET
    data_selector: Results
    params:
      id: '{{customerId}}'
      opt: avoid:tunnels,routeType:shortest
      t: Test
      units: ''
      endLatitude: '33.649870'
      endLongitude: '-117.582960'
      startLatitude: '33.637520'
      startLongitude: '-117.606920'
- name: getDistanceMultipoint
  endpoint:
    path: /v1/WEB/StreetRoute/getDistanceMultipoint
    method: GET
    data_selector: Results
    params:
      id: '{{customerId}}'
      opt: avoid:tunnels
      t: Test
      units: mi
      points: 42.211479,-70.999908:42.201926,-71.007090:42.211848,-71.019438:42.214976,-71.0045472
- name: GetAlertInfo
  endpoint:
    path: /V5/API/Alert/GetAlertInfo/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
- name: SelectRecords
  endpoint:
    path: /V5/API/Alert/SelectRecords/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
- name: SelectRecordsFTP
  endpoint:
    path: /V5/API/Alert/SelectRecordsFTP/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
- name: SelectRecordsFTPAsync
  endpoint:
    path: /V5/API/Alert/SelectRecordsFTPAsync/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
    data_selector: TransmissionResults
    params: {}
- name: GetProcessStatus
  endpoint:
    path: /V5/API/Async/GetProcessStatus/{{processId}}
    method: GET
- name: ClearProcessStatus
  endpoint:
    path: /V5/API/Async/ClearProcessStatus/{{processId}}
    method: PUT
- name: DeleteFile
  endpoint:
    path: /V5/API/File/DeleteFile/{{fileName}}
    method: DELETE
- name: DownloadFile
  endpoint:
    path: /V5/API/File/DownloadFile/{{fileName}}
    method: GET
- name: GetFileInfo
  endpoint:
    path: /V5/API/File/GetFileInfo/{{fileName}}
    method: GET
- name: ListFiles
  endpoint:
    path: /V5/API/File/ListFiles/{{fileName}}
    method: GET
- name: UploadFile
  endpoint:
    path: /V5/API/File/UploadFile/{{fileName}}
    method: POST
- name: messages
  endpoint:
    path: /V5/API/Message/GetMessages
    method: GET
    data_selector: Messages
    params: {}
- name: set_message_status
  endpoint:
    path: /V5/API/Message/SetMessageStatus
    method: PATCH
    data_selector: TransmissionResults
    params: {}
- name: delete_records
  endpoint:
    path: /V5/API/Record/DeleteRecords/{{tableName}}/{{primaryKey}}
    method: DELETE
- name: insert_records
  endpoint:
    path: /V5/API/Record/InsertRecords/{{tableName}}
    method: POST
- name: search_records
  endpoint:
    path: /V5/API/Record/SearchRecords/{{tableName}}
    method: GET
- name: select_records
  endpoint:
    path: /V5/API/Record/SelectRecords/{{tableName}}/{{primaryKey}}
    method: GET
- name: update_records
  endpoint:
    path: /V5/API/Record/UpdateRecords/{{tableName}}
    method: PATCH
- name: file_upload
  endpoint:
    path: /V5/API/File/UploadFile/{{fileName}}
    method: POST
    data_selector: null
    params: {}
- name: insert_records_ftp
  endpoint:
    path: /V5/API/Record/InsertRecordsFTP/{tableName}
    method: POST
    data_selector: null
    params: {}
- name: select_records
  endpoint:
    path: /V5/API/Record/SelectRecords/{{tableName}}/{{primaryKey}}
    method: GET
    data_selector: null
    params: {}
- name: add_alert
  endpoint:
    path: /V5/API/Alert/SelectRecords/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
    data_selector: null
    params: {}
- name: DeleteRecordsFTP
  endpoint:
    path: /V5/API/Record/DeleteRecordsFTP/{{tableName}}
    method: DELETE
- name: InsertRecordsFTP
  endpoint:
    path: /V5/API/Record/InsertRecordsFTP/{{tableName}}
    method: POST
- name: SearchRecordsFTP
  endpoint:
    path: /V5/API/Record/SearchRecordsFTP/{{tableName}}
    method: GET
- name: DeleteTable
  endpoint:
    path: /V5/API/Table/DeleteTable/{{tableName}}
    method: DELETE
- name: GetTableInfo
  endpoint:
    path: /V5/API/Table/GetTableInfo/{{tableName}}
    method: GET
- name: GetTableTags
  endpoint:
    path: /V5/API/Table/GetTableTags/{{tableName}}
    method: GET
- name: RenameTable
  endpoint:
    path: /V5/API/Table/RenameTable/{{tableName}}
    method: PUT
- name: TestNotification
  endpoint:
    path: /V5/API/Table/TestNotification/{{tableName}}
    method: POST
- name: TruncateTable
  endpoint:
    path: /V5/API/Table/TruncateTable/{{tableName}}
    method: POST
- name: TransactionRecords
  endpoint:
    path: /V5/API/Transaction/TransactionRecords/{{tableName}}/{{primaryKey}}
    method: GET
- name: TransactionRecordsFTP
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTP/{{tableName}}/{{primaryKey}}
    method: GET
- name: TransactionRecordsFTPAsync
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTPAsync/{{tableName}}/{{primaryKey}}
    method: GET
- name: SelectRecordsFTP
  endpoint:
    path: /V5/API/Record/SelectRecordsFTP/{{tableName}}/{{primaryKey}}
    method: GET
- name: UpdateRecordsFTP
  endpoint:
    path: /V5/API/Record/UpdateRecordsFTP/{{tableName}}
    method: PATCH
- name: DeleteRecordsFTPAsync
  endpoint:
    path: /V5/API/Record/DeleteRecordsFTPAsync/{{tableName}}
    method: DELETE
- name: InsertRecordsFTPAsync
  endpoint:
    path: /V5/API/Record/InsertRecordsFTPAsync/{{tableName}}
    method: POST
- name: SearchRecordsFTPAsync
  endpoint:
    path: /V5/API/Record/SearchRecordsFTPAsync/{{tableName}}
    method: GET
- name: Alert
  endpoint:
    path: /V5/API/Alert/GetAlertInfo/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
- name: Async
  endpoint:
    path: /V5/API/Async/GetProcessStatus/{{processId}}
    method: GET
- name: File
  endpoint:
    path: /V5/API/File/GetFileInfo/{{fileName}}
    method: GET
- name: Message
  endpoint:
    path: /V5/API/Message/GetMessages
    method: GET
- name: Record
  endpoint:
    path: /V5/API/Record/SelectRecords/{{tableName}}/{{primaryKey}}
    method: GET
- name: Table
  endpoint:
    path: /V5/API/Table/GetTableInfo/{{tableName}}
    method: GET
- name: SelectRecordsFTPAsync
  endpoint:
    path: /V5/API/Record/SelectRecordsFTPAsync/{{tableName}}/{{primaryKey}}
    method: GET
- name: UpdateRecordsFTPAsync
  endpoint:
    path: /V5/API/Record/UpdateRecordsFTPAsync/{{tableName}}
    method: PATCH
- name: TransactionRecords
  endpoint:
    path: /V5/API/Transaction/TransactionRecords/{{tableName}}/{{primaryKey}}
    method: GET
- name: TransactionRecordsFTP
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTP/{{tableName}}/{{primaryKey}}
    method: GET
- name: TransactionRecordsFTPAsync
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTPAsync/{{tableName}}/{{primaryKey}}
    method: GET
- name: alter_table
  endpoint:
    path: /V5/API/Table/AlterTable/{{tableName}}
    method: PATCH
- name: create_table
  endpoint:
    path: /V5/API/Table/CreateTable/{{tableName}}
    method: POST
- name: delete_table
  endpoint:
    path: /V5/API/Table/DeleteTable/{{tableName}}
    method: DELETE
- name: get_table_info
  endpoint:
    path: /V5/API/Table/GetTableInfo/{{tableName}}
    method: GET
- name: GetAlertInfo
  endpoint:
    path: /V5/API/Alert/GetAlertInfo/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
- name: SelectRecords
  endpoint:
    path: /V5/API/Alert/SelectRecords/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
- name: SelectRecordsFTP
  endpoint:
    path: /V5/API/Alert/SelectRecordsFTP/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
- name: GetTableTags
  endpoint:
    path: /V5/API/Table/GetTableTags/{{tableName}}
    method: GET
- name: RenameTable
  endpoint:
    path: /V5/API/Table/RenameTable/{{tableName}}
    method: PUT
- name: TestNotification
  endpoint:
    path: /V5/API/Table/TestNotification/{{tableName}}
    method: GET
- name: TruncateTable
  endpoint:
    path: /V5/API/Table/TruncateTable/{{tableName}}
    method: DELETE
- name: SelectRecordsFTPAsync
  endpoint:
    path: /V5/API/Alert/SelectRecordsFTPAsync/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
    data_selector: ''
    params: {}
- name: TransactionRecords
  endpoint:
    path: /V5/API/Transaction/TransactionRecords/{{tableName}}/{{primaryKey}}
    method: GET
    data_selector: Records
    params: {}
- name: TransactionRecordsFTP
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTP/{{tableName}}/{{primaryKey}}
    method: GET
    data_selector: TransmissionResults
    params: {}
- name: TransactionRecordsFTPAsync
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTPAsync/{{tableName}}/{{primaryKey}}
    method: GET
    data_selector: ''
- name: GetProcessStatus
  endpoint:
    path: /V5/API/Async/GetProcessStatus/{{processId}}
    method: GET
- name: ClearProcessStatus
  endpoint:
    path: /V5/API/Async/ClearProcessStatus/{{processId}}
    method: PUT
- name: DeleteFile
  endpoint:
    path: /V5/API/File/DeleteFile/{{fileName}}
    method: DELETE
- name: DownloadFile
  endpoint:
    path: /V5/API/File/DownloadFile/{{fileName}}
    method: GET
- name: GetFileInfo
  endpoint:
    path: /V5/API/File/GetFileInfo/{{fileName}}
    method: GET
- name: ListFiles
  endpoint:
    path: /V5/API/File/ListFiles/{{fileName}}
    method: GET
- name: UploadFile
  endpoint:
    path: /V5/API/File/UploadFile/{{fileName}}
    method: POST
- name: get_messages
  endpoint:
    path: /V5/API/Message/GetMessages
    method: GET
    data_selector: Messages
    params: {}
- name: set_message_status
  endpoint:
    path: /V5/API/Message/SetMessageStatus
    method: PATCH
    data_selector: TransmissionResults
    params: {}
- name: Alert
  endpoint:
    path: /V5/API/Alert/GetAlertInfo/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
- name: Async
  endpoint:
    path: /V5/API/Async/GetProcessStatus/{{processId}}
    method: GET
- name: File
  endpoint:
    path: /V5/API/File/ListFiles/{{fileName}}
    method: GET
- name: Message
  endpoint:
    path: /V5/API/Message/GetMessages
    method: GET
- name: Record
  endpoint:
    path: /V5/API/Record/SelectRecords/{{tableName}}/{{primaryKey}}
    method: GET
- name: delete_records
  endpoint:
    path: /V5/API/Record/DeleteRecords/{{tableName}}/{{primaryKey}}
    method: DELETE
    data_selector: TransmissionResults
- name: insert_records
  endpoint:
    path: /V5/API/Record/InsertRecords/{{tableName}}
    method: POST
    data_selector: TransmissionResults
- name: search_records
  endpoint:
    path: /V5/API/Record/SearchRecords/{{tableName}}
    method: GET
    data_selector: Records
- name: select_records
  endpoint:
    path: /V5/API/Record/SelectRecords/{{tableName}}/{{primaryKey}}
    method: GET
    data_selector: Records
- name: update_records
  endpoint:
    path: /V5/API/Record/UpdateRecords/{{tableName}}
    method: PATCH
    data_selector: TransmissionResults
- name: DeleteTable
  endpoint:
    path: /V5/API/Table/DeleteTable/{{tableName}}
    method: DELETE
- name: GetTableInfo
  endpoint:
    path: /V5/API/Table/GetTableInfo/{{tableName}}
    method: GET
- name: GetTableTags
  endpoint:
    path: /V5/API/Table/GetTableTags/{{tableName}}
    method: GET
- name: RenameTable
  endpoint:
    path: /V5/API/Table/RenameTable/{{tableName}}
    method: POST
- name: TestNotification
  endpoint:
    path: /V5/API/Table/TestNotification/{{tableName}}
    method: POST
- name: TruncateTable
  endpoint:
    path: /V5/API/Table/TruncateTable/{{tableName}}
    method: POST
- name: TransactionRecords
  endpoint:
    path: /V5/API/Transaction/TransactionRecords/{{tableName}}/{{primaryKey}}
    method: GET
- name: TransactionRecordsFTP
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTP/{{tableName}}/{{primaryKey}}
    method: GET
- name: TransactionRecordsFTPAsync
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTPAsync/{{tableName}}/{{primaryKey}}
    method: GET
- name: DeleteRecordsFTP
  endpoint:
    path: /V5/API/Record/DeleteRecordsFTP/{{tableName}}
    method: DELETE
- name: InsertRecordsFTP
  endpoint:
    path: /V5/API/Record/InsertRecordsFTP/{{tableName}}
    method: POST
- name: SearchRecordsFTP
  endpoint:
    path: /V5/API/Record/SearchRecordsFTP/{{tableName}}
    method: GET
- name: SelectRecordsFTP
  endpoint:
    path: /V5/API/Record/SelectRecordsFTP/{{tableName}}/{{primaryKey}}
    method: GET
- name: UpdateRecordsFTP
  endpoint:
    path: /V5/API/Record/UpdateRecordsFTP/{{tableName}}
    method: PATCH
- name: DeleteRecordsFTPAsync
  endpoint:
    path: /V5/API/Record/DeleteRecordsFTPAsync/{{tableName}}
    method: DELETE
- name: InsertRecordsFTPAsync
  endpoint:
    path: /V5/API/Record/InsertRecordsFTPAsync/{{tableName}}
    method: POST
- name: SearchRecordsFTPAsync
  endpoint:
    path: /V5/API/Record/SearchRecordsFTPAsync/{{tableName}}
    method: GET
- name: address_verification
  endpoint:
    path: /services/address/verify
    method: POST
    data_selector: results
- name: geocoding
  endpoint:
    path: /services/geocode
    method: POST
    data_selector: results
- name: SelectRecordsFTPAsync
  endpoint:
    path: /V5/API/Record/SelectRecordsFTPAsync/{{tableName}}/{{primaryKey}}
    method: GET
- name: UpdateRecordsFTPAsync
  endpoint:
    path: /V5/API/Record/UpdateRecordsFTPAsync/{{tableName}}
    method: PATCH
- name: AlterTable
  endpoint:
    path: /V5/API/Table/AlterTable/{{tableName}}
    method: PATCH
- name: CreateTable
  endpoint:
    path: /V5/API/Table/CreateTable/{{tableName}}
    method: POST
- name: DeleteTable
  endpoint:
    path: /V5/API/Table/DeleteTable/{{tableName}}
    method: DELETE
- name: GetTableInfo
  endpoint:
    path: /V5/API/Table/GetTableInfo/{{tableName}}
    method: GET
- name: DQS-Address
  endpoint:
    path: /DQS-Address
    method: GET
- name: DQS-Email
  endpoint:
    path: /DQS-Email
    method: GET
- name: DQS-Name
  endpoint:
    path: /DQS-Name
    method: GET
- name: DQS-Phone
  endpoint:
    path: /DQS-Phone
    method: GET
- name: Geo Coder
  endpoint:
    path: /Geo-Coder
    method: GET
- name: Profiler
  endpoint:
    path: /Profiler
    method: GET
- name: RightFielder
  endpoint:
    path: /RightFielder
    method: GET
- name: GetTableTags
  endpoint:
    path: /V5/API/Table/GetTableTags/{{tableName}}
    method: GET
    data_selector: Tags
    params: {}
- name: RenameTable
  endpoint:
    path: /V5/API/Table/RenameTable/{{tableName}}
    method: PUT
    data_selector: ''
    params: {}
- name: TestNotification
  endpoint:
    path: /V5/API/Table/TestNotification/{{tableName}}
    method: GET
    data_selector: ''
    params: {}
- name: TruncateTable
  endpoint:
    path: /V5/API/Table/TruncateTable/{{tableName}}
    method: DELETE
    data_selector: ''
    params: {}
- name: TransactionRecords
  endpoint:
    path: /V5/API/Transaction/TransactionRecords/{{tableName}}/{{primaryKey}}
    method: GET
    data_selector: Records
    params: {}
- name: TransactionRecordsFTP
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTP/{{tableName}}/{{primaryKey}}
    method: GET
    data_selector: TransmissionResults
    params: {}
- name: result_codes
  endpoint:
    path: /GetResults
    method: GET
    data_selector: resultCodes
    params: {}
- name: TransactionRecordsFTPAsync
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTPAsync/{{tableName}}/{{primaryKey}}
    method: GET
    data_selector: TransmissionResults
    params: {}
- name: address_object
  endpoint:
    path: /address/object
    method: GET
    data_selector: records
    params: {}
- name: address
  endpoint:
    path: /address
    method: GET
    data_selector: result
    params: {}
- name: alert_info
  endpoint:
    path: /V5/API/Alert/GetAlertInfo/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
- name: select_records
  endpoint:
    path: /V5/API/Alert/SelectRecords/{{tableName}}/{{alertName}}/{{primaryKey}}
    method: GET
- name: delete_file
  endpoint:
    path: /V5/API/File/DeleteFile/{{fileName}}
    method: DELETE
- name: download_file
  endpoint:
    path: /V5/API/File/DownloadFile/{{fileName}}
    method: GET
- name: get_file_info
  endpoint:
    path: /V5/API/File/GetFileInfo/{{fileName}}
    method: GET
- name: list_files
  endpoint:
    path: /V5/API/File/ListFiles/{{fileName}}
    method: GET
- name: upload_file
  endpoint:
    path: /V5/API/File/UploadFile/{{fileName}}
    method: POST
- name: Verify Address
  endpoint:
    path: /verifyaddress
    method: GET
    data_selector: results
- name: Find Suggestion
  endpoint:
    path: /findsuggestion
    method: GET
    data_selector: suggestions
- name: DeleteTable
  endpoint:
    path: /V5/API/Table/DeleteTable/{{tableName}}
    method: DELETE
- name: GetTableInfo
  endpoint:
    path: /V5/API/Table/GetTableInfo/{{tableName}}
    method: GET
- name: GetTableTags
  endpoint:
    path: /V5/API/Table/GetTableTags/{{tableName}}
    method: GET
- name: RenameTable
  endpoint:
    path: /V5/API/Table/RenameTable/{{tableName}}
    method: PUT
- name: TestNotification
  endpoint:
    path: /V5/API/Table/TestNotification/{{tableName}}
    method: POST
- name: TruncateTable
  endpoint:
    path: /V5/API/Table/TruncateTable/{{tableName}}
    method: POST
- name: TransactionRecords
  endpoint:
    path: /V5/API/Transaction/TransactionRecords/{{tableName}}/{{primaryKey}}
    method: GET
- name: TransactionRecordsFTP
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTP/{{tableName}}/{{primaryKey}}
    method: GET
- name: TransactionRecordsFTPAsync
  endpoint:
    path: /V5/API/Transaction/TransactionRecordsFTPAsync/{{tableName}}/{{primaryKey}}
    method: GET
- name: GetAddress
  endpoint:
    path: /GetAddress
    method: GET
    data_selector: Address
- name: GetAddress2
  endpoint:
    path: /GetAddress2
    method: GET
    data_selector: Address
- name: GetCity
  endpoint:
    path: /GetCity
    method: GET
    data_selector: City
- name: GetCompany
  endpoint:
    path: /GetCompany
    method: GET
    data_selector: Company
- name: GetCountryCode
  endpoint:
    path: /GetCountryCode
    method: GET
    data_selector: Country Code
- name: GetPlus4
  endpoint:
    path: /GetPlus4
    method: GET
    data_selector: Zip Plus4
- name: GetState
  endpoint:
    path: /GetState
    method: GET
    data_selector: State
- name: GetSuite
  endpoint:
    path: /GetSuite
    method: GET
    data_selector: Suite
- name: GetUrbanization
  endpoint:
    path: /GetUrbanization
    method: GET
    data_selector: Urbanization Name
- name: GetZip
  endpoint:
    path: /GetZip
    method: GET
    data_selector: Zip
- name: Address Object
  endpoint:
    path: /services/data/vXX.X/sobjects/Address
    method: GET
    data_selector: records
    params: {}
- name: Email Object
  endpoint:
    path: /services/data/vXX.X/sobjects/Email
    method: GET
    data_selector: records
    params: {}
- name: Name Object
  endpoint:
    path: /services/data/vXX.X/sobjects/Name
    method: GET
    data_selector: records
    params: {}
- name: Phone Object
  endpoint:
    path: /services/data/vXX.X/sobjects/Phone
    method: GET
    data_selector: records
    params: {}
- name: Address
  endpoint:
    path: /address
    method: GET
    data_selector: address_info
- name: address
  endpoint:
    path: /address
    method: GET
    data_selector: records
- name: GetCity
  endpoint:
    path: /GetCity
    method: GET
- name: GetCMRA
  endpoint:
    path: /GetCMRA
    method: GET
- name: GetCongressionalDistrict
  endpoint:
    path: /GetCongressionalDistrict
    method: GET
- name: GetCountyFips
  endpoint:
    path: /GetCountyFips
    method: GET
- name: GetCountyName
  endpoint:
    path: /GetCountyName
    method: GET
- name: GetPrivateMailbox
  endpoint:
    path: /GetPrivateMailbox
    method: GET
- name: GetTimeZone
  endpoint:
    path: /GetTimeZone
    method: GET
- name: GetTimeZoneCode
  endpoint:
    path: /GetTimeZoneCode
    method: GET
- name: GetZipType
  endpoint:
    path: /GetZipType
    method: GET
- name: GetAddressKey
  endpoint:
    path: /GetAddressKey
    method: GET
- name: GetCarrierRoute
  endpoint:
    path: /GetCarrierRoute
    method: GET
- name: GetDeliveryPointCheckDigit
  endpoint:
    path: /GetDeliveryPointCheckDigit
    method: GET
- name: GetDeliveryPointCode
  endpoint:
    path: /GetDeliveryPointCode
    method: GET
- name: GetELotNumber
  endpoint:
    path: /GetELotNumber
    method: GET
- name: GetELotOrder
  endpoint:
    path: /GetELotOrder
    method: GET
- name: GetMelissaAddressKey
  endpoint:
    path: /GetMelissaAddressKey
    method: GET
- name: GetMelissaAddressKeyBase
  endpoint:
    path: /GetMelissaAddressKeyBase
    method: GET
- name: FindSuggestion
  endpoint:
    path: /FindSuggestion
    method: GET
- name: FindSuggestionNext
  endpoint:
    path: /FindSuggestionNext
    method: GET
- name: GetFormPS3553
  endpoint:
    path: /GetFormPS3553
    method: GET
- name: SaveFormPS3553
  endpoint:
    path: /SaveFormPS3553
    method: POST
- name: ResetFormPS3553
  endpoint:
    path: /ResetFormPS3553
    method: POST
- name: GetPS3553_B6_TotalRecords
  endpoint:
    path: /GetPS3553_B6_TotalRecords
    method: GET
- name: address_object
  endpoint:
    path: /services/data/vXX.X/sobjects/AddressObject
    method: GET
    data_selector: records
- name: address_object
  endpoint:
    path: /address-object
    method: GET
    data_selector: records
- name: InitializeDataFiles
  endpoint:
    path: /InitializeDataFiles
    method: POST
    data_selector: Initialization Status
- name: SetLicenseString
  endpoint:
    path: /SetLicenseString
    method: POST
    data_selector: Is License Valid
- name: GetInitializeErrorString
  endpoint:
    path: /GetInitializeErrorString
    method: GET
    data_selector: Error Description
- name: GetBuildNumber
  endpoint:
    path: /GetBuildNumber
    method: GET
    data_selector: Build Number
- name: GetPS3553_C1a_4Coded
  endpoint:
    path: /GetPS3553_C1a_4Coded
    method: GET
    data_selector: Total Records ZIP4
- name: GetPS3553_C1d_FiveDigitCoded
  endpoint:
    path: /GetPS3553_C1d_FiveDigitCoded
    method: GET
    data_selector: Total Records Five Digit Coded
- name: GetPS3553_C1e_CRRTCoded
  endpoint:
    path: /GetPS3553_C1e_CRRTCoded
    method: GET
    data_selector: Total Records Carrier Route Coded
- name: GetPS3553_C1f_eLOTAssigned
  endpoint:
    path: /GetPS3553_C1f_eLOTAssigned
    method: GET
    data_selector: Total Records Assigned Enhanced LOT Number
- name: GetPS3553_E_EWSCount
  endpoint:
    path: /GetPS3553_E_EWSCount
    method: GET
    data_selector: Total Records Assigned Enhanced LOT Number
- name: GetPS3553_E_HighRiseDefault
  endpoint:
    path: /GetPS3553_E_HighRiseDefault
    method: GET
    data_selector: Total Records High-Rise Default Matched
- name: GetPS3553_E_HighRiseExact
  endpoint:
    path: /GetPS3553_E_HighRiseExact
    method: GET
    data_selector: Total Records High-Rise Exact Matched
- name: GetPS3553_E_LACSCount
  endpoint:
    path: /GetPS3553_E_LACSCount
    method: GET
    data_selector: Total Records LACS
- name: GetPS3553_E_RuralRouteDefault
  endpoint:
    path: /GetPS3553_E_RuralRouteDefault
    method: GET
    data_selector: Total Rural Route Records Default Matched
- name: GetPS3553_E_RuralRouteExact
  endpoint:
    path: /GetPS3553_E_RuralRouteExact
    method: GET
    data_selector: Total Rural Route Records Exact Matched
- name: GetPS3553_X_SuiteLinkCodeACount
  endpoint:
    path: /GetPS3553_X_SuiteLinkCodeACount
    method: GET
    data_selector: Total Records With Suite Link
- name: GetFormSOA
  endpoint:
    path: /GetFormSOA
    method: GET
    data_selector: Summary of Addresses Form
- name: SaveFormSOA
  endpoint:
    path: /SaveFormSOA
    method: POST
    data_selector: Void
- name: ResetFormSOA
  endpoint:
    path: /ResetFormSOA
    method: POST
    data_selector: Void
- name: GetSOAAAExpiryDate
  endpoint:
    path: /GetSOAAAExpiryDate
    method: GET
    data_selector: SOAAA Expiry Date
- name: GetSOAAAPercentage
  endpoint:
    path: /GetSOAAAPercentage
    method: GET
    data_selector: Percentage of Accurate Canadian Records
- name: GetSOAErrorString
  endpoint:
    path: /GetSOAErrorString
    method: GET
    data_selector: SOA Error String
- name: GetSOASoftwareInfo
  endpoint:
    path: /GetSOASoftwareInfo
    method: GET
    data_selector: SOA Software Info
- name: GetSOATotalRecords
  endpoint:
    path: /GetSOATotalRecords
    method: GET
    data_selector: SOA Total Records
- name: GetPostDirection
  endpoint:
    path: /GetPostDirection
    method: GET
    data_selector: Following Direction
- name: GetPreDirection
  endpoint:
    path: /GetPreDirection
    method: GET
    data_selector: Preceeding Directional
- name: GetPrimaryRangeHigh
  endpoint:
    path: /GetPrimaryRangeHigh
    method: GET
    data_selector: Primary High Range
- name: GetPrimaryRangeLow
  endpoint:
    path: /GetPrimaryRangeLow
    method: GET
    data_selector: Primary Low Range
- name: GetPrimaryRangeOddEven
  endpoint:
    path: /GetPrimaryRangeOddEven
    method: GET
    data_selector: Primary Odd Even or Both
- name: GetStreetName
  endpoint:
    path: /GetStreetName
    method: GET
    data_selector: Street Name
- name: GetSuffix
  endpoint:
    path: /GetSuffix
    method: GET
    data_selector: Suffix
- name: GetSuiteName
  endpoint:
    path: /GetSuiteName
    method: GET
    data_selector: Suite Name
- name: GetSuiteRangeHigh
  endpoint:
    path: /GetSuiteRangeHigh
    method: GET
    data_selector: Suite High Range
- name: GetSuiteRangeLow
  endpoint:
    path: /GetSuiteRangeLow
    method: GET
    data_selector: Suite Low Range
- name: GetSuiteRangeOddEven
  endpoint:
    path: /GetSuiteRangeOddEven
    method: GET
    data_selector: Suite Odd Even or Both
- name: GetPlus4High
  endpoint:
    path: /GetPlus4High
    method: GET
    data_selector: Plus4 Highest
- name: SetUseUSPSPreferredCityNames
  endpoint:
    path: /SetUseUSPSPreferredCityNames
    method: POST
- name: SetPS3553_D3_Address
  endpoint:
    path: /SetPS3553_D3_Address
    method: POST
- name: SetPS3553_D3_City
  endpoint:
    path: /SetPS3553_D3_City
    method: POST
- name: SetPS3553_D3_Company
  endpoint:
    path: /SetPS3553_D3_Company
    method: POST
- name: SetPS3553_B4_ListName
  endpoint:
    path: /SetPS3553_B4_ListName
    method: POST
- name: SetPS3553_D3_Name
  endpoint:
    path: /SetPS3553_D3_Name
    method: POST
- name: SetPS3553_B1_ProcessorName
  endpoint:
    path: /SetPS3553_B1_ProcessorName
    method: POST
- name: SetPS3553_D3_State
  endpoint:
    path: /SetPS3553_D3_State
    method: POST
- name: SetPS3553_D3_ZIP
  endpoint:
    path: /SetPS3553_D3_ZIP
    method: POST
- name: SetSOACustomerInfo
  endpoint:
    path: /SetSOACustomerInfo
    method: POST
- name: SetSOACPCNumber
  endpoint:
    path: /SetSOACPCNumber
    method: POST
- name: ClearProperties
  endpoint:
    path: /ClearProperties
    method: POST
- name: SetAddress
  endpoint:
    path: /SetAddress
    method: POST
- name: SetAddress2
  endpoint:
    path: /SetAddress2
    method: POST
- name: SetCity
  endpoint:
    path: /SetCity
    method: POST
- name: SetCompany
  endpoint:
    path: /SetCompany
    method: POST
- name: SetCountryCode
  endpoint:
    path: /SetCountryCode
    method: POST
- name: SetLastLine
  endpoint:
    path: /SetLastLine
    method: POST
- name: SetLastName
  endpoint:
    path: /SetLastName
    method: POST
- name: SetPlus4
  endpoint:
    path: /SetPlus4
    method: POST
- name: SetState
  endpoint:
    path: /SetState
    method: POST
- name: SetSuite
  endpoint:
    path: /SetSuite
    method: POST
- name: SetUrbanization
  endpoint:
    path: /SetUrbanization
    method: POST
- name: SetZip
  endpoint:
    path: /SetZip
    method: POST
- name: VerifyAddress
  endpoint:
    path: /verifyaddress
    method: GET
    data_selector: results
- name: GetResults
  endpoint:
    path: /getresults
    method: GET
    data_selector: results
- name: GetDPVFootnotes
  endpoint:
    path: /getdpvfootnotes
    method: GET
    data_selector: footnotes
- name: GetEWSCount
  endpoint:
    path: /getewscount
    method: GET
    data_selector: ewsCount
- name: GetEWSFlag
  endpoint:
    path: /getewsflag
    method: GET
    data_selector: ewsFlag
- name: GetLACS
  endpoint:
    path: /getlacs
    method: GET
    data_selector: lacsStatus
- name: GetLACSLinkIndicator
  endpoint:
    path: /getlacslinkindicator
    method: GET
    data_selector: lacsLinkIndicator
- name: GetLACSLinkReturnCode
  endpoint:
    path: /getlacslinkreturncode
    method: GET
    data_selector: lacsLinkReturnCode
- name: GetRBDI
  endpoint:
    path: /getrbdi
    method: GET
    data_selector: rbdi
- name: GetSuiteLinkReturnCode
  endpoint:
    path: /getsuitelinkreturncode
    method: GET
    data_selector: suiteLinkReturnCode
- name: GetAddress
  endpoint:
    path: /getaddress
    method: GET
    data_selector: Address
- name: GetAddress2
  endpoint:
    path: /getaddress2
    method: GET
    data_selector: Address
- name: GetCity
  endpoint:
    path: /getcity
    method: GET
    data_selector: City
- name: GetCompany
  endpoint:
    path: /getcompany
    method: GET
    data_selector: Company
- name: GetCountryCode
  endpoint:
    path: /getcountrycode
    method: GET
    data_selector: Country Code
- name: GetPlus4
  endpoint:
    path: /getplus4
    method: GET
    data_selector: Zip Plus4
- name: GetState
  endpoint:
    path: /getstate
    method: GET
    data_selector: State
- name: GetSuite
  endpoint:
    path: /getsuite
    method: GET
    data_selector: Suite
- name: GetZip
  endpoint:
    path: /getzip
    method: GET
    data_selector: Zip
- name: GetAddressTypeCode
  endpoint:
    path: /getaddresstypecode
    method: GET
    data_selector: Address Type Code
- name: GetAddressTypeString
  endpoint:
    path: /getaddresstypestring
    method: GET
    data_selector: Address Type Description
- name: GetCityAbbreviation
  endpoint:
    path: /getcityabbreviation
    method: GET
    data_selector: City Abbreviation
- name: GetPS3553_C1a_4Coded
  endpoint:
    path: /GetPS3553_C1a_4Coded
    method: GET
    data_selector: Total Records ZIP4
- name: GetPS3553_C1d_FiveDigitCoded
  endpoint:
    path: /GetPS3553_C1d_FiveDigitCoded
    method: GET
    data_selector: Total Records Five Digit Coded
- name: GetPS3553_C1e_CRRTCoded
  endpoint:
    path: /GetPS3553_C1e_CRRTCoded
    method: GET
    data_selector: Total Records Carrier Route Coded
- name: GetPS3553_C1f_eLOTAssigned
  endpoint:
    path: /GetPS3553_C1f_eLOTAssigned
    method: GET
    data_selector: Total Records Assigned Enhanced LOT Number
- name: GetPS3553_E_EWSCount
  endpoint:
    path: /GetPS3553_E_EWSCount
    method: GET
    data_selector: Total Records Assigned Enhanced LOT Number
- name: GetPS3553_E_HighRiseDefault
  endpoint:
    path: /GetPS3553_E_HighRiseDefault
    method: GET
    data_selector: Total Records High-Rise Default Matched
- name: GetPS3553_E_HighRiseExact
  endpoint:
    path: /GetPS3553_E_HighRiseExact
    method: GET
    data_selector: Total Records High-Rise Exact Matched
- name: GetPS3553_E_LACSCount
  endpoint:
    path: /GetPS3553_E_LACSCount
    method: GET
    data_selector: Total Records LACS
- name: GetPS3553_E_RuralRouteDefault
  endpoint:
    path: /GetPS3553_E_RuralRouteDefault
    method: GET
    data_selector: Total Rural Route Records Default Matched
- name: GetPS3553_E_RuralRouteExact
  endpoint:
    path: /GetPS3553_E_RuralRouteExact
    method: GET
    data_selector: Total Rural Route Records Exact Matched
- name: GetPS3553_X_SuiteLinkCodeACount
  endpoint:
    path: /GetPS3553_X_SuiteLinkCodeACount
    method: GET
    data_selector: Total Records With Suite Link
- name: GetFormSOA
  endpoint:
    path: /GetFormSOA
    method: GET
    data_selector: Summary of Addresses Form
- name: SaveFormSOA
  endpoint:
    path: /SaveFormSOA
    method: POST
    data_selector: Void
- name: ResetFormSOA
  endpoint:
    path: /ResetFormSOA
    method: POST
    data_selector: Void
- name: GetSOAAAExpiryDate
  endpoint:
    path: /GetSOAAAExpiryDate
    method: GET
    data_selector: SOAAA Expiry Date
- name: GetSOAAAPercentage
  endpoint:
    path: /GetSOAAAPercentage
    method: GET
    data_selector: Percentage of Accurate Canadian Records
- name: GetSOAErrorString
  endpoint:
    path: /GetSOAErrorString
    method: GET
    data_selector: SOA Error String
- name: GetSOASoftwareInfo
  endpoint:
    path: /GetSOASoftwareInfo
    method: GET
    data_selector: SOA Software Info
- name: GetSOATotalRecords
  endpoint:
    path: /GetSOATotalRecords
    method: GET
    data_selector: SOA Total Records
- name: FindStreet
  endpoint:
    path: /FindStreet
    method: GET
    data_selector: Found Street
- name: FindStreetNext
  endpoint:
    path: /FindStreetNext
    method: GET
    data_selector: Found Next Street
- name: GetPostDirection
  endpoint:
    path: /GetPostDirection
    method: GET
    data_selector: Following Direction
- name: GetPreDirection
  endpoint:
    path: /GetPreDirection
    method: GET
    data_selector: Preceeding Directional
- name: GetPrimaryRangeHigh
  endpoint:
    path: /GetPrimaryRangeHigh
    method: GET
    data_selector: Primary High Range
- name: GetPrimaryRangeLow
  endpoint:
    path: /GetPrimaryRangeLow
    method: GET
    data_selector: Primary Low Range
- name: GetPrimaryRangeOddEven
  endpoint:
    path: /GetPrimaryRangeOddEven
    method: GET
    data_selector: Primary Odd Even or Both
- name: GetStreetName
  endpoint:
    path: /GetStreetName
    method: GET
    data_selector: Street Name
- name: GetSuffix
  endpoint:
    path: /GetSuffix
    method: GET
    data_selector: Suffix
- name: GetSuiteName
  endpoint:
    path: /GetSuiteName
    method: GET
    data_selector: Suite Name
- name: GetSuiteRangeHigh
  endpoint:
    path: /GetSuiteRangeHigh
    method: GET
    data_selector: Suite High Range
- name: GetSuiteRangeLow
  endpoint:
    path: /GetSuiteRangeLow
    method: GET
    data_selector: Suite Low Range
- name: GetSuiteRangeOddEven
  endpoint:
    path: /GetSuiteRangeOddEven
    method: GET
    data_selector: Suite Odd Even or Both
- name: GetPlus4High
  endpoint:
    path: /GetPlus4High
    method: GET
    data_selector: Plus4 Highest
- name: GetPlus4Low
  endpoint:
    path: /GetPlus4Low
    method: GET
    data_selector: Plus4 Lowest
- name: GetZip
  endpoint:
    path: /GetZip
    method: GET
    data_selector: Zip
- name: GetAddressType
  endpoint:
    path: /GetAddressType
    method: GET
    data_selector: Plus4 Highest
- name: GetBaseAlternateIndicator
  endpoint:
    path: /GetBaseAlternateIndicator
    method: GET
    data_selector: Base Alternate Indicator
- name: GetCarrierRoute
  endpoint:
    path: /GetCarrierRoute
    method: GET
    data_selector: Carrier Route
- name: GetCompany
  endpoint:
    path: /GetCompany
    method: GET
    data_selector: Company
- name: GetCongressionalDistrict
  endpoint:
    path: /GetCongressionalDistrict
    method: GET
    data_selector: Congressional District
- name: GetCountyFips
  endpoint:
    path: /GetCountyFips
    method: GET
    data_selector: County FIPS Code
- name: GetDeliveryInstallation
  endpoint:
    path: /GetDeliveryInstallation
    method: GET
    data_selector: Delivery Installation
- name: GetLACSIndicator
  endpoint:
    path: /GetLACSIndicator
    method: GET
    data_selector: LACS Indicator
- name: GetLastLineNumber
  endpoint:
    path: /GetLastLineNumber
    method: GET
    data_selector: Last Line Number
- name: GetUrbanizationCode
  endpoint:
    path: /GetUrbanizationCode
    method: GET
    data_selector: Urbanization Code
- name: GetUrbanizationName
  endpoint:
    path: /GetUrbanizationName
    method: GET
    data_selector: Urbanization Name
- name: FindCityInState
  endpoint:
    path: /FindCityInState
    method: GET
    data_selector: Found City In State
- name: FindCityInStateNext
  endpoint:
    path: /FindCityInStateNext
    method: GET
    data_selector: Found Next City In State
- name: FindZip
  endpoint:
    path: /FindZip
    method: GET
    data_selector: Found Zip
- name: FindZipNext
  endpoint:
    path: /FindZipNext
    method: GET
    data_selector: Found Next Zip
- name: FindZipInCity
  endpoint:
    path: /FindZipInCity
    method: GET
    data_selector: Found Zip Code For City
- name: FindZipInCityNext
  endpoint:
    path: /FindZipInCityNext
    method: GET
    data_selector: Found Next Zip For City
- name: GetPlus4Low
  endpoint:
    path: /GetPlus4Low
    method: GET
    data_selector: Plus4 Lowest
- name: GetZip
  endpoint:
    path: /GetZip
    method: GET
    data_selector: Zip
- name: GetAddressType
  endpoint:
    path: /GetAddressType
    method: GET
    data_selector: Plus4 Highest
- name: GetBaseAlternateIndicator
  endpoint:
    path: /GetBaseAlternateIndicator
    method: GET
    data_selector: Base Alternate Indicator
- name: GetCarrierRoute
  endpoint:
    path: /GetCarrierRoute
    method: GET
    data_selector: Carrier Route
- name: GetCompany
  endpoint:
    path: /GetCompany
    method: GET
    data_selector: Company
- name: GetCongressionalDistrict
  endpoint:
    path: /GetCongressionalDistrict
    method: GET
    data_selector: Congressional District
- name: GetCountyFips
  endpoint:
    path: /GetCountyFips
    method: GET
    data_selector: County FIPS Code
- name: GetDeliveryInstallation
  endpoint:
    path: /GetDeliveryInstallation
    method: GET
    data_selector: Delivery Installation
- name: GetLACSIndicator
  endpoint:
    path: /GetLACSIndicator
    method: GET
    data_selector: LACS Indicator
- name: GetLastLineNumber
  endpoint:
    path: /GetLastLineNumber
    method: GET
    data_selector: Last Line Number
- name: GetUrbanizationCode
  endpoint:
    path: /GetUrbanizationCode
    method: GET
    data_selector: Urbanization Code
- name: GetUrbanizationName
  endpoint:
    path: /GetUrbanizationName
    method: GET
    data_selector: Urbanization Name
- name: IsAddressInRange2
  endpoint:
    path: /IsAddressInRange2
    method: GET
    data_selector: Is In Range
- name: GetAutoCompletion
  endpoint:
    path: /GetAutoCompletion
    method: GET
    data_selector: Suggested Address
- name: ResetAutoCompletion
  endpoint:
    path: /ResetAutoCompletion
    method: GET
    data_selector: Void
- name: GetPreferredLastLineNumber
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: GetState
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: GetTimeZone
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: GetTimeZoneCode
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: GetZip
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: GetZipType
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: ComputeBearing
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: ComputeDistance
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: FindCityInState
  endpoint:
    path: /FindCityInState
    method: GET
    data_selector: Found City In State
- name: FindZip
  endpoint:
    path: /FindZip
    method: GET
    data_selector: Found Zip
- name: FindZipInCity
  endpoint:
    path: /FindZipInCity
    method: GET
    data_selector: Found Zip Code For City
- name: GetBuildNumber
  endpoint:
    path: /GetBuildNumber
    method: GET
    data_selector: Build Number
    params: {}
- name: Parse
  endpoint:
    path: /Parse
    method: POST
    data_selector: Success
    params:
      AddressToParse: string
- name: ParseCanadian
  endpoint:
    path: /ParseCanadian
    method: POST
    data_selector: Success
    params:
      AddressToParse: string
- name: GetLongitude
  endpoint:
    path: /GetLongitude
    method: GET
- name: GetPreferredLastLineNumber
  endpoint:
    path: /GetPreferredLastLineNumber
    method: GET
- name: GetState
  endpoint:
    path: /GetState
    method: GET
- name: GetTimeZone
  endpoint:
    path: /GetTimeZone
    method: GET
- name: GetTimeZoneCode
  endpoint:
    path: /GetTimeZoneCode
    method: GET
- name: GetZip
  endpoint:
    path: /GetZip
    method: GET
- name: GetZipType
  endpoint:
    path: /GetZipType
    method: GET
- name: ComputeBearing
  endpoint:
    path: /ComputeBearing
    method: GET
- name: ComputeDistance
  endpoint:
    path: /ComputeDistance
    method: GET
- name: address_verification
  endpoint:
    path: /address/verify
    method: POST
    data_selector: results
- name: GetBuildNumber
  endpoint:
    path: /GetBuildNumber
    method: GET
    data_selector: Build Number
- name: Parse
  endpoint:
    path: /Parse
    method: POST
    data_selector: Success
- name: ParseCanadian
  endpoint:
    path: /ParseCanadian
    method: POST
    data_selector: Success
- name: Find Suggestions
  endpoint:
    path: /FindSuggestions
    method: POST
    data_selector: results
    params: {}
- name: Address Check
  endpoint:
    path: /AddressCheck
    method: POST
    data_selector: results
    params: {}
- name: Parse
  endpoint:
    path: /Parse
    method: POST
    data_selector: results
    params: {}
- name: StreetData
  endpoint:
    path: /StreetData
    method: GET
    data_selector: results
    params: {}
- name: ZIPData
  endpoint:
    path: /ZIPData
    method: GET
    data_selector: results
    params: {}
- name: AddressCheck
  endpoint:
    path: /AddressCheck
    method: POST
    data_selector: results
- name: Parse
  endpoint:
    path: /Parse
    method: POST
    data_selector: results
- name: StreetData
  endpoint:
    path: /StreetData
    method: POST
    data_selector: results
- name: ZIPData
  endpoint:
    path: /ZIPData
    method: POST
    data_selector: results
- name: check_version
  endpoint:
    path: /V3/WEB/ContactVerify/GetVersion
    method: GET
- name: check_address
  endpoint:
    path: /V3/WEB/ContactVerify/doContactVerify
    method: GET
- name: version_check
  endpoint:
    path: /V3/WEB/ContactVerify/GetVersion
    method: GET
    data_selector: version
    params: {}
- name: address_verification
  endpoint:
    path: /V3/WEB/ContactVerify/doContactVerify
    method: GET
    data_selector: records
    params:
      id: '{{license_key}}'
      ctry: US
- name: GetVersion
  endpoint:
    path: /V3/WEB/ContactVerify/GetVersion
    method: GET
    data_selector: records
    params: {}
- name: GetVersion
  endpoint:
    path: /V3/WEB/ContactVerify/GetVersion
    method: GET
    data_selector: records
    params: {}
- name: doContactVerify
  endpoint:
    path: /V3/WEB/ContactVerify/doContactVerify
    method: GET
    data_selector: Records
    params:
      t: test
      ctry: US
      comp: Melissa
      format: json
- name: doContactVerify
  endpoint:
    path: /V3/WEB/ContactVerify/doContactVerify
    method: POST
    data_selector: Records
    params:
      customerId: '{{license_key}}'
      transmissionReference: test
- name: doContactVerify
  endpoint:
    path: /V3/WEB/ContactVerify/doContactVerify
    method: GET
    data_selector: Records
    params:
      t: test
      id: '{{license_key}}'
      ctry: US
      a1: 22382 Avenida Empresa
      city: Rancho Santa Margarita
      state: CA
      postal: '92688'
      comp: Melissa
      format: json
- name: doContactVerify
  endpoint:
    path: /V3/WEB/ContactVerify/doContactVerify
    method: POST
    data_selector: Records
    params:
      customerId: '{{license_key}}'
      transmissionReference: test
      records:
      - recordID: '1'
        addressLine1: 22382 Avenida Empresa
        city: Rancho Santa Margarita
        state: CA
        postalCode: '92688'
        company: Melissa
        country: US
- name: dq_email_data
  endpoint:
    path: /dq_email_data
    method: GET
- name: dq_email_data
  endpoint:
    path: /dq_email_data
    method: GET
- name: dq_email_data
  endpoint:
    path: /path/to/email/object
    method: GET
    data_selector: data
    params: {}
- name: GetEmailAddress
  endpoint:
    path: /GetEmailAddress
    method: GET
    data_selector: null
    params: {}
- name: GetMailBoxName
  endpoint:
    path: /GetMailBoxName
    method: GET
    data_selector: null
    params: {}
- name: GetDomainName
  endpoint:
    path: /GetDomainName
    method: GET
    data_selector: null
    params: {}
- name: GetTopLevelDomain
  endpoint:
    path: /GetTopLevelDomain
    method: GET
    data_selector: null
    params: {}
- name: GetTopLevelDomainDescription
  endpoint:
    path: /GetTopLevelDomainDescription
    method: GET
    data_selector: null
    params: {}
- name: Email Object
  endpoint:
    path: /email-object
    method: GET
    data_selector: records
- name: email_object
  endpoint:
    path: /email-object
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /email
    method: POST
    data_selector: results
    params: {}
- name: email_verification
  endpoint:
    path: /verify/email
    method: POST
    data_selector: result
    params: {}
- name: Email Validation
  endpoint:
    method: POST
    data_selector: result
    params:
      SetCorrectSyntax: true
      SetDatabaseLookup: true
      SetFuzzyLookup: false
      SetStandardizeCasing: true
- name: email_object
  endpoint:
    path: /email/object
    method: GET
    data_selector: results
- name: email_verification
  endpoint:
    path: /verifyEmail
    method: POST
    data_selector: result
    params: {}
- name: email_object_info
  endpoint:
    path: /email/object/information
    method: GET
    data_selector: records
- name: result_codes
  endpoint:
    path: /email/result/codes
    method: GET
    data_selector: records
- name: GetDomainName
  endpoint:
    path: /GetDomainName
    method: GET
    data_selector: Domain Name
- name: GetEmailAddress
  endpoint:
    path: /GetEmailAddress
    method: GET
    data_selector: Email Address
- name: GetMailBoxName
  endpoint:
    path: /GetMailBoxName
    method: GET
    data_selector: Mailbox Name
- name: GetTopLevelDomain
  endpoint:
    path: /GetTopLevelDomain
    method: GET
    data_selector: Top Level Domain
- name: GetTopLevelDomainDescription
  endpoint:
    path: /GetTopLevelDomainDescription
    method: GET
    data_selector: Top Level Domain Description
- name: GetDomainName
  endpoint:
    path: /GetDomainName
    method: GET
    data_selector: Domain Name
- name: GetEmailAddress
  endpoint:
    path: /GetEmailAddress
    method: GET
    data_selector: Email Address
- name: GetMailBoxName
  endpoint:
    path: /GetMailBoxName
    method: GET
    data_selector: Mailbox Name
- name: GetTopLevelDomain
  endpoint:
    path: /GetTopLevelDomain
    method: GET
    data_selector: Top Level Domain
- name: GetTopLevelDomainDescription
  endpoint:
    path: /GetTopLevelDomainDescription
    method: GET
    data_selector: Top Level Domain Description
- name: mdDomain
  endpoint:
    path: /data/mdDomain.dat
    method: GET
- name: mdEmail
  endpoint:
    path: /data/mdEmail.ini
    method: GET
- name: mdEmailConfig
  endpoint:
    path: /data/mdEmailConfig.ini
    method: GET
- name: mdDomain
  endpoint:
    path: /mdDomain.dat
- name: mdEmail
  endpoint:
    path: /mdEmail.ini
- name: mdEmailConfig
  endpoint:
    path: /mdEmailConfig.ini
- name: geocoder_data
  endpoint:
    path: /geocoder_data
    method: GET
    data_selector: records
- name: geocoder_data
  endpoint:
    path: /geocoder_data
    method: GET
    data_selector: records
- name: geocoder_data
  endpoint:
    path: /geocoder_data
    method: GET
    data_selector: records
- name: geocoder_data
  endpoint:
    path: /geocoder_data
    method: GET
    data_selector: records
- name: geocode
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
    params: {}
- name: geographic_data
  endpoint:
    path: /geographic/data
    method: GET
- name: geographic_data
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
    params:
      input: Zip
- name: GetPlaceName
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: GetCountyName
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: GetCountySubdivisionName
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: GetTimeZone
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: GetLatitude
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: GetLongitude
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: GetResults
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: GetResultCodeDescription
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: geographic_data
  endpoint:
    path: /geocoder/lookup
    method: POST
    data_selector: result
    params:
      input: Zip
- name: GetPlaceName
  endpoint:
    path: /geocoder/getplacename
    method: GET
    data_selector: results
- name: GetCountyName
  endpoint:
    path: /geocoder/getcountyname
    method: GET
    data_selector: results
- name: GetCountySubdivisionName
  endpoint:
    path: /geocoder/getcountysubdivisionname
    method: GET
    data_selector: results
- name: GetTimeZone
  endpoint:
    path: /geocoder/gettimezone
    method: GET
    data_selector: results
- name: GetLatitude
  endpoint:
    path: /geocoder/getlatitude
    method: GET
    data_selector: results
- name: GetLongitude
  endpoint:
    path: /geocoder/getlongitude
    method: GET
    data_selector: results
- name: GetResults
  endpoint:
    path: /geocoder/getresults
    method: GET
    data_selector: results
- name: GetResultCodeDescription
  endpoint:
    path: /geocoder/getresultcodedescription
    method: GET
    data_selector: results
- name: GetResults
  endpoint:
    path: /GetResults
    method: GET
    data_selector: Result Codes
- name: GetResultCodeDescription
  endpoint:
    path: /GetResultCodeDescription
    method: GET
    data_selector: Result Code Description
- name: GetOutputParameter
  endpoint:
    path: /GetOutputParameter
    method: GET
    data_selector: Result Code Description
- name: geographic_data
  endpoint:
    path: /geocode
    method: POST
    data_selector: results
    params:
      Zip: ZIP_STRING
- name: GetResults
  endpoint:
    path: /GetResults
    method: GET
- name: GetResultCodeDescription
  endpoint:
    path: /GetResultCodeDescription
    method: GET
- name: GetOutputParameter
  endpoint:
    path: /GetOutputParameter
    method: GET
- name: GeoCode
  endpoint:
    path: /geocode
    method: GET
    data_selector: Status
    params:
      Zip: String
      Plus4: String
- name: GeoPoint
  endpoint:
    path: /geopoint
    method: GET
    data_selector: Status
    params:
      AddressKey: String
      Zip: String
      Plus4: String
      DeliveryPoint: String
- name: GetCBSACode
  endpoint:
    path: /getcbsacode
    method: GET
    data_selector: CBSA Code
    params: {}
- name: GetCountyFips
  endpoint:
    path: /getcountyfips
    method: GET
    data_selector: County FIPS Code
    params: {}
- name: GetCountyName
  endpoint:
    path: /getcountyname
    method: GET
    data_selector: County Name
    params: {}
- name: GeoCode
  endpoint:
    path: /geocode
    method: GET
    data_selector: Status
- name: GeoPoint
  endpoint:
    path: /geopoint
    method: GET
    data_selector: Status
- name: GetCBSACode
  endpoint:
    path: /getcbsacode
    method: GET
    data_selector: CBSA Code
- name: GetCBSADivisionCode
  endpoint:
    path: /getcbsadivisioncode
    method: GET
    data_selector: CBSA Division Code
- name: GetCBSADivisionLevel
  endpoint:
    path: /getcbsadivisionlevel
    method: GET
    data_selector: CBSA Division Level
- name: GetCBSADivisionTitle
  endpoint:
    path: /getcbsadivisiontitle
    method: GET
    data_selector: CBSA Division Title
- name: GetCBSALevel
  endpoint:
    path: /getcbsalevel
    method: GET
    data_selector: CBSA Level
- name: GetCBSATitle
  endpoint:
    path: /getcbsatitle
    method: GET
    data_selector: CBSA Title
- name: GetCensusBlock
  endpoint:
    path: /getcensusblock
    method: GET
    data_selector: Census Block
- name: GetCensusTract
  endpoint:
    path: /getcensustract
    method: GET
    data_selector: Census Tract
- name: GetCountyFips
  endpoint:
    path: /getcountyfips
    method: GET
    data_selector: County FIPS Code
- name: GetCountyName
  endpoint:
    path: /getcountyname
    method: GET
    data_selector: County Name
- name: GetErrorCode
  endpoint:
    path: /geterrorcode
    method: GET
    data_selector: Error Code
- name: GetLatitude
  endpoint:
    path: /getlatitude
    method: GET
    data_selector: Latitude
- name: GetLongitude
  endpoint:
    path: /getlongitude
    method: GET
    data_selector: Longitude
- name: GetPlaceCode
  endpoint:
    path: /getplacecode
    method: GET
    data_selector: Place Code
- name: GetPlaceName
  endpoint:
    path: /getplacename
    method: GET
    data_selector: Place Name
- name: GeoCoder
  endpoint:
    path: /geocoder
    method: GET
    data_selector: results
    params: {}
- name: GeoCoder
  endpoint:
    path: /GeoCoder
    method: POST
    data_selector: results
- name: GetVersion
  endpoint:
    path: /V4/WEB/Geo/GetVersion
    method: GET
- name: DoGeoCode by MAK
  endpoint:
    path: /V4/WEB/Geo/DoGeoCode
    method: GET
- name: DoGeoCode by Addresskey
  endpoint:
    path: /V4/WEB/Geo/DoGeoCode
    method: GET
- name: GetVersion
  endpoint:
    path: /V4/WEB/Geo/GetVersion
    method: GET
    data_selector: records
- name: DoGeoCodeByMAK
  endpoint:
    path: /V4/WEB/Geo/DoGeoCode
    method: GET
    data_selector: records
    params:
      id: '{{license_key}}'
      mak: '8008006245'
- name: DoGeoCodeByAddresskey
  endpoint:
    path: /V4/WEB/Geo/DoGeoCode
    method: GET
    data_selector: records
    params:
      id: '{{license_key}}'
      zip: '92688'
      plus4: '2112'
      dp: '82'
- name: GetVersion
  endpoint:
    path: /v4/WEB/Geo/GetVersion
    method: GET
    data_selector: Version_0
    params: {}
- name: DoGeoCode (by MAK)
  endpoint:
    path: /V4/WEB/Geo/DoGeoCode
    method: GET
    data_selector: Records
    params:
      t: test
      id: '{{license_key}}'
      mak: '8008006245'
- name: DoGeoCode (by Addresskey)
  endpoint:
    path: /V4/WEB/Geo/DoGeoCode
    method: GET
    data_selector: Records
    params:
      t: test
      id: '{{license_key}}'
      zip: '92688'
      dp: '82'
- name: GetVersion
  endpoint:
    path: /v4/WEB/Geo/GetVersion
    method: GET
    data_selector: ''
    params: {}
- name: DoGeoCodeByMAK
  endpoint:
    path: /V4/WEB/Geo/DoGeoCode
    method: GET
    data_selector: ''
    params:
      t: test
- name: DoGeoCodeByAddresskey
  endpoint:
    path: /V4/WEB/Geo/DoGeoCode
    method: GET
    data_selector: ''
    params:
      t: test
      zip: '92688'
      dp: '82'
- name: check_version
  endpoint:
    path: /V3/WEB/GlobalAddress/GetVersion
    method: GET
- name: verify_address
  endpoint:
    path: /V3/WEB/GlobalAddress/doGlobalAddress
    method: GET
- name: version
  endpoint:
    path: /V3/WEB/GlobalAddress/GetVersion
    method: GET
- name: verify_address
  endpoint:
    path: /V3/WEB/GlobalAddress/doGlobalAddress
    method: GET
- name: GetVersion
  endpoint:
    path: /V3/WEB/GlobalAddress/GetVersion
    method: GET
    data_selector: ''
    params: {}
- name: GetVersion
  endpoint:
    path: /V3/WEB/GlobalAddress/GetVersion
    method: GET
    data_selector: ''
- name: doGlobalAddress
  endpoint:
    path: /V3/WEB/GlobalAddress/doGlobalAddress
    method: GET
    data_selector: ''
- name: GlobalAddress
  endpoint:
    path: /V3/WEB/GlobalAddress/doGlobalAddress
    method: GET
    data_selector: Records
    params: {}
- name: doGlobalAddress
  endpoint:
    path: /doGlobalAddress
    method: GET
    data_selector: Records
    params:
      t: Test
      org: Melissa
      a1: 22382 Avenida Empresa
      loc: Rancho Santa Margarita
      admarea: CA
      postal: '92688'
      ctry: US
      format: JSON
- name: record
  endpoint:
    path: /
    method: GET
    data_selector: Records
    params: {}
- name: address
  endpoint:
    path: /your-endpoint-path
    method: GET
    data_selector: Records
- name: GetVersion
  endpoint:
    path: /GetVersion
    method: GET
    data_selector: response
- name: doGlobalAddress
  endpoint:
    path: /doGlobalAddress
    method: GET
    data_selector: results
- name: GetVersion
  endpoint:
    path: /GetVersion
    method: GET
    data_selector: response
- name: doGlobalAddress
  endpoint:
    path: /doGlobalAddress
    method: GET
    data_selector: response
- name: global_dq_data
  endpoint:
    path: /global_dq_data
    method: GET
- name: dq_addr_data
  endpoint:
    path: /dq_addr_data
    method: GET
- name: geocoder_data
  endpoint:
    path: /geocoder_data
    method: GET
- name: rf_data
  endpoint:
    path: /rf_data
    method: GET
- name: result_codes
  endpoint:
    path: /GetOutputParameter
    method: GET
    data_selector: resultCodes
    params: {}
- name: global_dq_data
  endpoint:
    path: /global_dq_data
    method: GET
- name: dq_addr_data
  endpoint:
    path: /dq_addr_data
    method: GET
- name: geocoder_data
  endpoint:
    path: /geocoder_data
    method: GET
- name: rf_data
  endpoint:
    path: /rf_data
    method: GET
- name: result_codes
  endpoint:
    path: /global-address-object-reference-guide/getoutputparameter
    method: GET
    data_selector: resultCodes
    params:
      parameter: resultCodes
- name: database_info
  endpoint:
    path: /global-address-object-reference-guide/getoutputparameter
    method: GET
    data_selector: databaseInfo
    params:
      parameter: databaseDate
- name: global_dq_data
  endpoint:
    path: /global_dq_data
    method: GET
- name: dq_addr_data
  endpoint:
    path: /dq_addr_data
    method: GET
- name: geocoder_data
  endpoint:
    path: /geocoder_data
    method: GET
- name: rf_data
  endpoint:
    path: /rf_data
    method: GET
- name: address_lookup
  endpoint:
    path: /lookup/global-address
    method: POST
    data_selector: result
    params: {}
- name: address_verification
  endpoint:
    path: /verify/global-address
    method: POST
    data_selector: result
    params: {}
- name: address_output
  endpoint:
    path: /output/global-address
    method: GET
    data_selector: output
    params: {}
- name: address_input
  endpoint:
    path: /setInputParameter
    method: POST
- name: address_output
  endpoint:
    path: /getOutputParameter
    method: GET
- name: global_dq_data
  endpoint:
    path: /global_dq_data
    method: GET
- name: dq_addr_data
  endpoint:
    path: /dq_addr_data
    method: GET
- name: geocoder_data
  endpoint:
    path: /geocoder_data
    method: GET
- name: rf_data
  endpoint:
    path: /rf_data
    method: GET
- name: result_codes
  endpoint:
    path: /GetOutputParameter
    method: GET
    data_selector: resultCodes
    params:
      parameter: resultCodes
- name: global_dq_data
  endpoint:
    path: /global_dq_data
    method: GET
- name: dq_addr_data
  endpoint:
    path: /dq_addr_data
    method: GET
- name: geocoder_data
  endpoint:
    path: /geocoder_data
    method: GET
- name: rf_data
  endpoint:
    path: /rf_data
    method: GET
- name: global_dq_data
  endpoint:
    path: /global_dq_data
    method: GET
    data_selector: data
    params: {}
- name: dq_addr_data
  endpoint:
    path: /dq_addr_data
    method: GET
    data_selector: data
    params: {}
- name: geocoder_data
  endpoint:
    path: /geocoder_data
    method: GET
    data_selector: data
    params: {}
- name: rf_data
  endpoint:
    path: /rf_data
    method: GET
    data_selector: data
    params: {}
- name: global_address_lookup
  endpoint:
    path: /global-address/lookup
    method: POST
    data_selector: result
    params: {}
- name: global_address_verification
  endpoint:
    path: /global-address/verify
    method: POST
    data_selector: result
    params: {}
- name: Input Address Data
  endpoint:
    path: /setInputParameter
    method: POST
    data_selector: input
- name: Output Address Data
  endpoint:
    path: /getOutputParameter
    method: GET
    data_selector: output
- name: inputAddress
  endpoint:
    path: /setInputParameter
    method: POST
    data_selector: inputParameters
- name: verifyAddress
  endpoint:
    path: /verifyAddress
    method: POST
    data_selector: verificationResult
- name: getOutputParameter
  endpoint:
    path: /getOutputParameter
    method: GET
    data_selector: outputParameters
- name: organization
  endpoint:
    path: /organization
    method: GET
- name: addressLine1
  endpoint:
    path: /addressLine1
    method: GET
- name: addressLine2
  endpoint:
    path: /addressLine2
    method: GET
- name: addressLine3
  endpoint:
    path: /addressLine3
    method: GET
- name: addressLine4
  endpoint:
    path: /addressLine4
    method: GET
- name: addressLine5
  endpoint:
    path: /addressLine5
    method: GET
- name: addressLine6
  endpoint:
    path: /addressLine6
    method: GET
- name: addressLine7
  endpoint:
    path: /addressLine7
    method: GET
- name: addressLine8
  endpoint:
    path: /addressLine8
    method: GET
- name: deliveryLine
  endpoint:
    path: /deliveryLine
    method: GET
- name: localityLine
  endpoint:
    path: /localityLine
    method: GET
- name: formattedAddress
  endpoint:
    path: /formattedAddress
    method: GET
- name: DeliveryPointSuffix
  endpoint:
    path: /DeliveryPointSuffix
    method: GET
- name: AddressTypeCode
  endpoint:
    path: /AddressTypeCode
    method: GET
- name: AddressKey
  endpoint:
    path: /AddressKey
    method: GET
- name: MelissaAddressKey
  endpoint:
    path: /MelissaAddressKey
    method: GET
- name: MelissaAddressKeyBase
  endpoint:
    path: /MelissaAddressKeyBase
    method: GET
- name: building
  endpoint:
    path: /building
    method: GET
- name: subBuilding
  endpoint:
    path: /subBuilding
    method: GET
- name: subBuildingNumber
  endpoint:
    path: /subBuildingNumber
    method: GET
- name: subBuildingType
  endpoint:
    path: /subBuildingType
    method: GET
- name: subPremises
  endpoint:
    path: /subPremises
    method: GET
- name: subPremisesNumber
  endpoint:
    path: /subPremisesNumber
    method: GET
- name: subPremisesType
  endpoint:
    path: /subPremisesType
    method: GET
- name: subPremisesLevel
  endpoint:
    path: /subPremisesLevel
    method: GET
- name: subPremisesLevelNumber
  endpoint:
    path: /subPremisesLevelNumber
    method: GET
- name: subPremisesLevelType
  endpoint:
    path: /subPremisesLevelType
    method: GET
- name: premises
  endpoint:
    path: /premises
    method: GET
- name: premisesNumber
  endpoint:
    path: /premisesNumber
    method: GET
- name: premisesType
  endpoint:
    path: /premisesType
    method: GET
- name: thoroughfare
  endpoint:
    path: /thoroughfare
    method: GET
- name: thoroughfareLeadingType
  endpoint:
    path: /thoroughfareLeadingType
    method: GET
- name: thoroughfareName
  endpoint:
    path: /thoroughfareName
    method: GET
- name: thoroughfarePostDirection
  endpoint:
    path: /thoroughfarePostDirection
    method: GET
- name: thoroughfarePreDirection
  endpoint:
    path: /thoroughfarePreDirection
    method: GET
- name: thoroughfareTrailingType
  endpoint:
    path: /thoroughfareTrailingType
    method: GET
- name: thoroughfareTypeAttached
  endpoint:
    path: /thoroughfareTypeAttached
    method: GET
- name: dependentThoroughfare
  endpoint:
    path: /dependentThoroughfare
    method: GET
- name: dependentThoroughfareLeadingType
  endpoint:
    path: /dependentThoroughfareLeadingType
    method: GET
- name: dependentThoroughfareName
  endpoint:
    path: /dependentThoroughfareName
    method: GET
- name: dependentThoroughfarePostDirection
  endpoint:
    path: /dependentThoroughfarePostDirection
    method: GET
- name: dependentThoroughfarePreDirection
  endpoint:
    path: /dependentThoroughfarePreDirection
    method: GET
- name: dependentThoroughfareTrailingType
  endpoint:
    path: /dependentThoroughfareTrailingType
    method: GET
- name: dependentThoroughfareTypeAttached
  endpoint:
    path: /dependentThoroughfareTypeAttached
    method: GET
- name: postBox
  endpoint:
    path: /postBox
    method: GET
- name: postalCode
  endpoint:
    path: /postalCode
    method: GET
- name: postOfficeLocation
  endpoint:
    path: /postOfficeLocation
    method: GET
- name: administrativeArea
  endpoint:
    path: /administrativeArea
    method: GET
- name: countyName
  endpoint:
    path: /countyName
    method: GET
- name: dependentLocality
  endpoint:
    path: /dependentLocality
    method: GET
- name: doubleDependentLocality
  endpoint:
    path: /doubleDependentLocality
    method: GET
- name: locality
  endpoint:
    path: /locality
    method: GET
- name: subAdministrativeArea
  endpoint:
    path: /subAdministrativeArea
    method: GET
- name: subNationalArea
  endpoint:
    path: /subNationalArea
    method: GET
- name: latitude
  endpoint:
    path: /latitude
    method: GET
- name: longitude
  endpoint:
    path: /longitude
    method: GET
- name: countryName
  endpoint:
    path: /countryName
    method: GET
- name: iso2Code
  endpoint:
    path: /iso2Code
    method: GET
- name: iso3Code
  endpoint:
    path: /iso3Code
    method: GET
- name: isoCountryNumber
  endpoint:
    path: /isoCountryNumber
    method: GET
- name: CountrySubdivisionCode
  endpoint:
    path: /CountrySubdivisionCode
    method: GET
- name: formalCountryName
  endpoint:
    path: /formalCountryName
    method: GET
- name: organization
- name: addressLine1
- name: addressLine2
- name: addressLine3
- name: addressLine4
- name: addressLine5
- name: addressLine6
- name: addressLine7
- name: addressLine8
- name: deliveryLine
- name: localityLine
- name: formattedAddress
- name: DeliveryPointSuffix
- name: AddressTypeCode
- name: AddressKey
- name: MelissaAddressKey
- name: MelissaAddressKeyBase
- name: building
- name: subBuilding
- name: subBuildingNumber
- name: subBuildingType
- name: subPremises
- name: subPremisesNumber
- name: subPremisesType
- name: subPremisesLevel
- name: subPremisesLevelNumber
- name: subPremisesLevelType
- name: premises
- name: premisesNumber
- name: premisesType
- name: thoroughfare
- name: thoroughfareLeadingType
- name: thoroughfareName
- name: thoroughfarePostDirection
- name: thoroughfarePreDirection
- name: thoroughfareTrailingType
- name: thoroughfareTypeAttached
- name: dependentThoroughfare
- name: dependentThoroughfareLeadingType
- name: dependentThoroughfareName
- name: dependentThoroughfarePostDirection
- name: dependentThoroughfarePreDirection
- name: dependentThoroughfareTrailingType
- name: dependentThoroughfareTypeAttached
- name: postBox
- name: postalCode
- name: postOfficeLocation
- name: administrativeArea
- name: countyName
- name: dependentLocality
- name: doubleDependentLocality
- name: locality
- name: subAdministrativeArea
- name: subNationalArea
- name: latitude
- name: longitude
- name: countryName
- name: iso2Code
- name: iso3Code
- name: isoCountryNumber
- name: CountrySubdivisionCode
- name: formalCountryName
- name: version
  endpoint:
    path: /V3/WEB/GlobalName/GetVersion
    method: GET
    data_selector: version
- name: check_name
  endpoint:
    path: /V3/WEB/GlobalName/doGlobalName
    method: GET
    data_selector: results
- name: GetVersion
  endpoint:
    path: /V3/WEB/GlobalName/GetVersion
    method: GET
    data_selector: ''
- name: address_verification
  endpoint:
    path: /verify/address
    method: POST
    data_selector: verificationResults
- name: doGlobalName
  endpoint:
    path: /V3/WEB/GlobalName/doGlobalName
    method: GET
    data_selector: Records
    params:
      format: json
      t: Test
      ctry: DE
      full: Doktor Enna Schäfer
- name: check_version
  endpoint:
    path: /V3/WEB/GlobalName/GetVersion
    method: GET
- name: check_name
  endpoint:
    path: /V3/WEB/GlobalName/doGlobalName
    method: GET
- name: Database Date
  endpoint:
    path: GetDatabaseDate
    method: GET
- name: Build Number
  endpoint:
    path: GetBuildNumber
    method: GET
- name: global_mu_data
  endpoint:
    path: /path/to/global_mu_data
    method: GET
    data_selector: data_records
- name: GetVersion
  endpoint:
    path: /V3/WEB/GlobalName/GetVersion
    method: GET
    data_selector: records
- name: doGlobalName
  endpoint:
    path: /V3/WEB/GlobalName/doGlobalName
    method: GET
    data_selector: Records
    params:
      format: json
      t: Test
      ctry: DE
      full: Doktor Enna Schäfer
- name: Database Expiration Date
  endpoint:
    path: /GetDatabaseExpirationDate
    method: GET
    data_selector: Database Expiration Date
- name: License Expiration Date
  endpoint:
    path: /GetLicenseExpirationDate
    method: GET
    data_selector: License Expiration Date
- name: Initialize Error String
  endpoint:
    path: /GetInitializeErrorString
    method: GET
    data_selector: Initialize Status
- name: data_files
  endpoint:
    path: /global_mu_data
    method: GET
    data_selector: data_records
- name: matchcode_creation
  endpoint:
    path: /matchcode/create
    method: POST
    data_selector: CreatedMatchcode
    params: {}
- name: matchcode_retrieval
  endpoint:
    path: /matchcode/retrieve
    method: GET
    data_selector: MatchcodeDetails
    params: {}
- name: MatchcodeDescription
  endpoint:
    path: /matchcode/getDescription
    method: GET
    data_selector: description
- name: MatchcodeNGram
  endpoint:
    path: /matchcode/getNGram
    method: GET
    data_selector: nGram
- name: MatchcodeItem
  endpoint:
    path: /matchcode/getMatchcodeItem
    method: GET
    data_selector: matchcodeItem
- name: MatchcodeItemCount
  endpoint:
    path: /matchcode/getMatchcodeItemCount
    method: GET
    data_selector: itemCount
- name: MappingItemCount
  endpoint:
    path: /matchcode/getMappingItemCount
    method: GET
    data_selector: mappingCount
- name: MappingItemLabel
  endpoint:
    path: /matchcode/getMappingItemLabel
    method: GET
    data_selector: mappingItemLabel
- name: MappingItemType
  endpoint:
    path: /matchcode/getMappingItemType
    method: GET
    data_selector: mappingItemType
- name: DatabaseExpirationDate
  endpoint:
    path: /getDatabaseExpirationDate
    method: GET
    data_selector: Database Expiration Date
- name: LicenseExpirationDate
  endpoint:
    path: /getLicenseExpirationDate
    method: GET
    data_selector: License Expiration Date
- name: InitializeErrorString
  endpoint:
    path: /getInitializeErrorString
    method: GET
    data_selector: Initialize Status
- name: GetStartPos
  endpoint:
    path: /matchup/getstartpos
    method: GET
    data_selector: Character position or word used as the starting point
- name: GetSwap
  endpoint:
    path: /matchup/getswap
    method: GET
    data_selector: MatchcodeSwap value
- name: GetTrim
  endpoint:
    path: /matchup/gettrim
    method: GET
    data_selector: MatchcodeTrim value
- name: GetWordCount
  endpoint:
    path: /matchup/getwordcount
    method: GET
    data_selector: Maximum number of words
- name: AddMatchcodeItem
  endpoint:
    path: /matchup/addmatchcodeitem
    method: POST
    data_selector: MatchcodeStatus value
- name: ChangeMatchcodeItem
  endpoint:
    path: /matchup/changematchcodeitem
    method: POST
    data_selector: MatchcodeStatus value
- name: DeleteMatchcodeItem
  endpoint:
    path: /matchup/deletematchcodeitem
    method: DELETE
    data_selector: MatchcodeStatus value
- name: InsertMatchcodeItem
  endpoint:
    path: /matchup/insertmatchcodeitem
    method: POST
    data_selector: MatchcodeStatus value
- name: DeleteMatchcode
  endpoint:
    path: /matchup/deletematchcode
    method: DELETE
    data_selector: 0 if there's error
- name: RenameMatchcode
  endpoint:
    path: /matchup/renamematchcode
    method: POST
    data_selector: 0 if there's error
- name: Save
  endpoint:
    path: /matchup/save
    method: POST
    data_selector: Void
- name: SaveToFile
  endpoint:
    path: /matchup/savetofile
    method: POST
    data_selector: Void
- name: AddField
  endpoint:
    path: /id211
    method: GET
    data_selector: Void
- name: BuildKey
  endpoint:
    path: /id212
    method: GET
    data_selector: Void
- name: ClearFields
  endpoint:
    path: /id213
    method: GET
    data_selector: Void
- name: GetKey
  endpoint:
    path: /id214
    method: GET
    data_selector: Void
- name: CompareKeys
  endpoint:
    path: /id216
    method: GET
    data_selector: Long
- name: GetClusterSize
  endpoint:
    path: /id217
    method: GET
    data_selector: Integer
- name: GetKeySize
  endpoint:
    path: /id218
    method: GET
    data_selector: Integer
- name: GetResults
  endpoint:
    path: /id219
    method: GET
    data_selector: String
- name: mdMatchUp.dat
  endpoint:
    path: mdMatchUp.dat
    method: GET
- name: mdMatchUp.mc
  endpoint:
    path: mdMatchUp.mc
    method: GET
- name: mdMatchup.sac
  endpoint:
    path: mdMatchup.sac
    method: GET
- name: icudt74l.dat
  endpoint:
    path: icudt74l.dat
    method: GET
- name: GetDescription
  endpoint:
    path: /mdMUMatchcodeGetDescription
    method: GET
    data_selector: Matchcode description
- name: GetNGram
  endpoint:
    path: /mdMUMatchcodeGetNGram
    method: GET
    data_selector: N-gram setting value
- name: GetMatchcodeItem
  endpoint:
    path: /mdMUMatchcodeGetMatchcodeItem
    method: GET
    data_selector: MatchcodeComponent object
- name: GetMatchcodeItemCount
  endpoint:
    path: /mdMUMatchcodeGetMatchcodeItemCount
    method: GET
    data_selector: Number of MatchcodeComponent objects
- name: GetMappingItemCount
  endpoint:
    path: /mdMUMatchcodeGetMappingItemCount
    method: GET
    data_selector: Number of mappings
- name: GetMappingItemLabel
  endpoint:
    path: /mdMUMatchcodeGetMappingItemLabel
    method: GET
    data_selector: Label of mapping item
- name: GetMappingItemType
  endpoint:
    path: /mdMUMatchcodeGetMappingItemType
    method: GET
    data_selector: MatchcodeMappingTarget value
- name: GetCombination
  endpoint:
    path: /mdMUMatchcodeComponentGetCombination
    method: GET
    data_selector: MatchcodeCombination value
- name: GetComponentType
  endpoint:
    path: /mdMUMatchcodeComponentGetComponentType
    method: GET
    data_selector: Type of MatchcodeComponent object
- name: GetFieldMatch
  endpoint:
    path: /mdMUMatchcodeComponentGetFieldMatch
    method: GET
    data_selector: MatchcodeFieldMatch value
- name: GetFuzzy
  endpoint:
    path: /mdMUMatchcodeComponentGetFuzzy
    method: GET
    data_selector: MatchcodeFuzzy value
- name: GetLabel
  endpoint:
    path: /mdMUMatchcodeComponentGetLabel
    method: GET
    data_selector: Label of MatchcodeComponent object
- name: GetNear
  endpoint:
    path: /mdMUMatchcodeComponentGetNear
    method: GET
    data_selector: Degree of precision, value from 1 to 4
- name: GetNearDbl
  endpoint:
    path: /mdMUMatchcodeComponentGetNearDbl
    method: GET
    data_selector: Minimum percentage of similarity, value from 100 to 0
- name: GetSize
  endpoint:
    path: /mdMUMatchcodeComponentGetSize
    method: GET
    data_selector: The number of characters used from the related field
- name: GetStart
  endpoint:
    path: /mdMUMatchcodeComponentGetStart
    method: GET
    data_selector: Starting point used by the current MatchcodeComponent object
- name: GetStartPos
  endpoint:
    path: /GetStartPos
    method: GET
    data_selector: Character position or word used as the starting point
- name: GetSwap
  endpoint:
    path: /GetSwap
    method: GET
    data_selector: MatchcodeSwap value
- name: GetTrim
  endpoint:
    path: /GetTrim
    method: GET
    data_selector: MatchcodeTrim value
- name: GetWordCount
  endpoint:
    path: /GetWordCount
    method: GET
    data_selector: Maximum number of words
- name: AddMatchcodeItem
  endpoint:
    path: /AddMatchcodeItem
    method: POST
    data_selector: MatchcodeStatus value
- name: ChangeMatchcodeItem
  endpoint:
    path: /ChangeMatchcodeItem
    method: POST
    data_selector: MatchcodeStatus value
- name: DeleteMatchcodeItem
  endpoint:
    path: /DeleteMatchcodeItem
    method: DELETE
    data_selector: MatchcodeStatus value
- name: InsertMatchcodeItem
  endpoint:
    path: /InsertMatchcodeItem
    method: POST
    data_selector: MatchcodeStatus value
- name: DeleteMatchcode
  endpoint:
    path: /DeleteMatchcode
    method: DELETE
    data_selector: 0 if there's error
- name: RenameMatchcode
  endpoint:
    path: /RenameMatchcode
    method: POST
    data_selector: 0 if there's error
- name: Save
  endpoint:
    path: /Save
    method: POST
    data_selector: Void
- name: SaveToFile
  endpoint:
    path: /SaveToFile
    method: POST
    data_selector: Void
- name: Jaccard Similarity Coefficient
  endpoint:
    path: /jaccard
    method: GET
    data_selector: similarity
    params: {}
- name: Jaro
  endpoint:
    path: /jaro
    method: GET
    data_selector: similarity
    params: {}
- name: Jaro-Winkler
  endpoint:
    path: /jaro-winkler
    method: GET
    data_selector: similarity
    params: {}
- name: Longest Common Substring (LCS)
  endpoint:
    path: /lcs
    method: GET
    data_selector: similarity
    params: {}
- name: MD Keyboard
  endpoint:
    path: /md-keyboard
    method: GET
    data_selector: similarity
    params: {}
- name: Needleman-Wunsch
  endpoint:
    path: /needleman-wunsch
    method: GET
    data_selector: match
    params: {}
- name: N-Gram
  endpoint:
    path: /n-gram
    method: GET
    data_selector: similarity
    params: {}
- name: Numeric
  endpoint:
    path: /numeric
    method: GET
    data_selector: match
    params: {}
- name: Overlap Coefficient
  endpoint:
    path: /overlap-coefficient
    method: GET
    data_selector: similarity
    params: {}
- name: Phonetex
  endpoint:
    path: /phonetex
    method: GET
    data_selector: match
    params: {}
- name: mdMatchUp
  endpoint:
    path: /mdMatchUp
    method: GET
    data_selector: records
    params: {}
- name: Name Object
  endpoint:
    path: /services/data/vXX.X/sobjects/NameObject
    method: POST
    data_selector: records
- name: Name Object
  endpoint:
    path: /name-object
    method: POST
    data_selector: result
    params: {}
- name: matchcode_components
  endpoint:
    path: /matchcode/components
    method: GET
    data_selector: components
    params: {}
- name: component_properties
  endpoint:
    path: /component/properties
    method: GET
    data_selector: properties
    params: {}
- name: component_combinations
  endpoint:
    path: /component/combinations
    method: GET
    data_selector: combinations
    params: {}
- name: blank_field_matching
  endpoint:
    path: /blank/field/matching
    method: GET
    data_selector: blankMatching
    params: {}
- name: Initialize Name Object
  endpoint:
    path: /initialize
    method: POST
    data_selector: result
    params: {}
- name: Set License
  endpoint:
    path: /set_license
    method: POST
    data_selector: result
    params: {}
- name: Initialize Data Files
  endpoint:
    path: /initialize_data_files
    method: POST
    data_selector: result
    params: {}
- name: Lookup Name
  endpoint:
    path: /lookup_name
    method: POST
    data_selector: result
    params: {}
- name: name_processing
  endpoint:
    path: /api/name_processing
    method: POST
    data_selector: result
    params: {}
- name: dq_name_data
  endpoint:
    path: /data/dq_name_data
    method: GET
- name: dq_name_data
  endpoint:
    path: /dq_name_data
    method: GET
    data_selector: data
    params: {}
- name: Name Object
  endpoint:
    path: /name-object
    method: POST
    data_selector: result
    params: {}
- name: Name Object
  endpoint:
    path: /name-object
    method: GET
    data_selector: records
- name: name_object_information
  endpoint:
    path: /name-object/reference
    method: GET
    data_selector: results
- name: result_codes
  endpoint:
    path: /result-codes
    method: GET
    data_selector: results
- name: name_object
  endpoint:
    path: /services/data/vXX.X/sobjects/NameObject
    method: GET
    data_selector: records
- name: Name Object
  endpoint:
    path: /services/data/vXX.X/sobjects/NameObject
    method: POST
- name: name_data
  endpoint:
    path: /dq_name_data
    method: GET
    data_selector: data
    params: {}
- name: InitializeDataFiles
  endpoint:
    path: /initialize/data/files
    method: GET
    data_selector: Initialization Status
- name: SetLicenseString
  endpoint:
    path: /set/license/string
    method: POST
    data_selector: Is License Valid
- name: SetPathToNameFiles
  endpoint:
    path: /set/path/to/name/files
    method: POST
    data_selector: Void
- name: GetBuildNumber
  endpoint:
    path: /get/build/number
    method: GET
    data_selector: Build Number
- name: GetDatabaseDate
  endpoint:
    path: /get/database/date
    method: GET
    data_selector: Database Date
- name: GetDatabaseExpirationDate
  endpoint:
    path: /get/database/expiration/date
    method: GET
    data_selector: Database Expiration Date
- name: GetInitializeErrorString
  endpoint:
    path: /get/initialize/error/string
    method: GET
    data_selector: Error Description
- name: GetLicenseExpirationDate
  endpoint:
    path: /get/license/expiration/date
    method: GET
    data_selector: License Expiration Date
- name: name_object
  endpoint:
    path: /lookup
    method: POST
    data_selector: result
    params: {}
- name: Genderize
  endpoint:
    path: /genderize
    method: GET
    data_selector: Is Successful
- name: Parse
  endpoint:
    path: /parse
    method: GET
    data_selector: Is Successful
- name: Salutate
  endpoint:
    path: /salutate
    method: GET
    data_selector: Is Successful
- name: StandardizeCompany
  endpoint:
    path: /standardizecompany
    method: GET
    data_selector: Standardized Company Name
- name: name_object_information
  endpoint:
    path: /GetNameObjectInformation
    method: GET
    data_selector: results
    params: {}
- name: result_codes
  endpoint:
    path: /GetResults
    method: GET
    data_selector: results
    params: {}
- name: Name Object
  endpoint:
    path: /services/data/vXX.X/sobjects/NameObject
    method: GET
    data_selector: records
    params: {}
- name: samples
  endpoint:
    path: /c/pasdk/samples
    method: GET
- name: address_check
  endpoint:
    path: /unzdll32.dll
    method: POST
    data_selector: result
    params: {}
- name: standardized_address
  endpoint:
    path: /unzdll32.dll
    method: GET
    data_selector: standardized_address
    params: {}
- name: matching_addresses
  endpoint:
    path: /unzdll32.dll
    method: GET
    data_selector: matching_addresses
    params: {}
- name: AddSalutation
  endpoint:
    path: /AddSalutation
    method: POST
    data_selector: Void
    params: {}
- name: ClearProperties
  endpoint:
    path: /ClearProperties
    method: POST
    data_selector: Void
    params: {}
- name: SetFirstNameSpellingCorrection
  endpoint:
    path: /SetFirstNameSpellingCorrection
    method: POST
    data_selector: Void
    params: {}
- name: SetGenderAggression
  endpoint:
    path: /SetGenderAggression
    method: POST
    data_selector: Void
    params: {}
- name: SetGenderPopulation
  endpoint:
    path: /SetGenderPopulation
    method: POST
    data_selector: Void
    params: {}
- name: SetMiddleNameLogic
  endpoint:
    path: /SetMiddleNameLogic
    method: POST
    data_selector: Void
    params: {}
- name: SetPrimaryNameHint
  endpoint:
    path: /SetPrimaryNameHint
    method: POST
    data_selector: Void
    params: {}
- name: SetSalutationPrefix
  endpoint:
    path: /SetSalutationPrefix
    method: POST
    data_selector: Void
    params: {}
- name: SetSalutationSlug
  endpoint:
    path: /SetSalutationSlug
    method: POST
    data_selector: Void
    params: {}
- name: SetSalutationSuffix
  endpoint:
    path: /SetSalutationSuffix
    method: POST
    data_selector: Void
    params: {}
- name: SetFirstName
  endpoint:
    path: /SetFirstName
    method: POST
    data_selector: Void
    params: {}
- name: SetFirstName2
  endpoint:
    path: /SetFirstName2
    method: POST
    data_selector: Void
    params: {}
- name: SetFullName
  endpoint:
    path: /SetFullName
    method: POST
    data_selector: Void
    params: {}
- name: SetLastName
  endpoint:
    path: /SetLastName
    method: POST
    data_selector: Void
    params: {}
- name: SetPrefix
  endpoint:
    path: /SetPrefix
    method: POST
    data_selector: Void
    params: {}
- name: SetPrefix2
  endpoint:
    path: /SetPrefix2
    method: POST
    data_selector: Void
    params: {}
- name: SetSuffix
  endpoint:
    path: /SetSuffix
    method: POST
    data_selector: Void
    params: {}
- name: SetSuffix2
  endpoint:
    path: /SetSuffix2
    method: POST
    data_selector: Void
    params: {}
- name: Genderize
  endpoint:
    path: /genderize
    method: GET
    data_selector: Is Successful
    params: {}
- name: Parse
  endpoint:
    path: /parse
    method: GET
    data_selector: Is Successful
    params: {}
- name: Salutate
  endpoint:
    path: /salutate
    method: GET
    data_selector: Is Successful
    params: {}
- name: StandardizeCompany
  endpoint:
    path: /standardizeCompany
    method: GET
    data_selector: Standardized Company Name
    params: {}
- name: GetResults
  endpoint:
    path: /getResults
    method: GET
    data_selector: Result Codes
    params: {}
- name: street_parts
  endpoint:
    path: /UNZ_GETSTREETPARTS
    method: GET
    data_selector: No direct result; delivery line address components copied into
      string buffers
- name: street_number
  endpoint:
    path: /UNZ_GETSTREETNUMBER
    method: GET
    data_selector: No direct result; the street number components copied into the
      string buffer
- name: street_name
  endpoint:
    path: /UNZ_GETSTREETNAME
    method: GET
    data_selector: No direct result; the street name components copied into the string
      buffer
- name: secondary_address
  endpoint:
    path: /UNZ_GETSECONDARY
    method: GET
    data_selector: No direct result; secondary address components copied into the
      string buffer
- name: city_state_zip
  endpoint:
    path: /UNZ_GETCITYSTZIP
    method: GET
    data_selector: No direct result; last line address components copied into string
      buffers
- name: city
  endpoint:
    path: /UNZ_GETCITY
    method: GET
    data_selector: No direct result; the city name copied into the string buffer
- name: state
  endpoint:
    path: /UNZ_GETSTATE
    method: GET
    data_selector: No direct result; the state code copied into the string buffer
- name: zip
  endpoint:
    path: /UNZ_GETZIP
    method: GET
    data_selector: No direct result; the ZIP+4 copied into the string buffer
- name: dpbc
  endpoint:
    path: /UNZ_GETDPBC
    method: GET
    data_selector: No direct result; three DPBC digits copied into the string buffer
- name: cong_dist
  endpoint:
    path: /UNZ_GETCONGDIST
    method: GET
    data_selector: No direct result; two congressional district characters copied
      into the string buffer
- name: county
  endpoint:
    path: /UNZ_GETCOUNTY
    method: GET
    data_selector: No direct result; county name characters copied into the string
      buffer
- name: county_fips
  endpoint:
    path: /UNZ_GETCNTYFIPS
    method: GET
    data_selector: No direct result; county FIPS code characters copied into the string
      buffer
- name: area_code
  endpoint:
    path: /UNZ_GETAREACODE
    method: GET
    data_selector: No direct result; area code copied into the string buffer
- name: timezone
  endpoint:
    path: /UNZ_GETTIMEZONE
    method: GET
    data_selector: No direct result; time zone copied into the string buffer
- name: addr_range
  endpoint:
    path: /UNZ_GETADDRRANGE
    method: GET
    data_selector: No direct result; address range characters copied into the string
      buffer
- name: address_verification
  endpoint:
    path: /address/verification
    method: POST
    data_selector: results
- name: standardized_address
  endpoint:
    path: /address/standardized
    method: GET
    data_selector: standardizedAddress
- name: street_information
  endpoint:
    path: /street/information
    method: GET
    data_selector: streetInfo
- name: address_flags
  endpoint:
    path: /UNZ_GETADDRESSFLAGS
    method: GET
    data_selector: address_flags
    params: {}
- name: address_stats
  endpoint:
    path: /UNZ_GETSTATS
    method: GET
    data_selector: address_stats
    params: {}
- name: match_count
  endpoint:
    path: /UNZ_GETMATCHCOUNT
    method: GET
    data_selector: match_count
    params: {}
- name: match_address
  endpoint:
    path: /UNZ_GETMATCHADDR
    method: GET
    data_selector: match_address
    params: {}
- name: address_components
  endpoint:
    path: /UNZ_GETADDRCOMP
    method: GET
    data_selector: address_components
    params: {}
- name: street_count
  endpoint:
    path: /UNZ_GETSTREETCOUNT
    method: GET
    data_selector: street_count
    params: {}
- name: street_item
  endpoint:
    path: /UNZ_GETSTREETITEM
    method: GET
    data_selector: street_item
    params: {}
- name: error_text
  endpoint:
    path: /UNZ_GETERRORTEXT
    method: GET
    data_selector: error_text
    params: {}
- name: address_type
  endpoint:
    path: /UNZ_GETADDRESSTYPE
    method: GET
    data_selector: address_type
    params: {}
- name: zip_type
  endpoint:
    path: /UNZ_GETZIPTYPE
    method: GET
    data_selector: zip_type
    params: {}
- name: first_city_name
  endpoint:
    path: /UNZ_GETFIRSTCITYNAME
    method: GET
    data_selector: first_city_name
    params: {}
- name: UNZ_INIT_EX
  endpoint:
    path: /zipinfoperfectaddresssdk/unz_init_ex
    method: GET
    data_selector: handle
- name: UNZ_CHECKADDRESS
  endpoint:
    path: /zipinfoperfectaddresssdk/unz_checkaddress
    method: GET
    data_selector: verification_result
- name: UNZ_CHECKZIP
  endpoint:
    path: /zipinfoperfectaddresssdk/unz_checkzip
    method: GET
    data_selector: zip_verification_result
- name: UNZ_GETSTDADDRESS
  endpoint:
    path: /zipinfoperfectaddresssdk/unz_getstdaddress
    method: GET
    data_selector: standardized_address
- name: get_next_city_name
  endpoint:
    path: /UNZ_GETNEXTCITYNAME
    method: GET
    data_selector: result
    params: {}
- name: get_first_addr
  endpoint:
    path: /UNZ_GETFIRSTADDR
    method: GET
    data_selector: result
    params: {}
- name: get_next_addr
  endpoint:
    path: /UNZ_GETNEXTADDR
    method: GET
    data_selector: result
    params: {}
- name: get_zip_count
  endpoint:
    path: /UNZ_GETZIPCOUNT
    method: GET
    data_selector: result
    params: {}
- name: get_zip_item
  endpoint:
    path: /UNZ_GETZIPITEM
    method: GET
    data_selector: result
    params: {}
- name: get_zip_city_count
  endpoint:
    path: /UNZ_GETZIPCITYCOUNT
    method: GET
    data_selector: result
    params: {}
- name: get_zip_city_item
  endpoint:
    path: /UNZ_GETZIPCITYITEM
    method: GET
    data_selector: result
    params: {}
- name: get_city_state_count
  endpoint:
    path: /UNZ_GETCITYSTATECOUNT
    method: GET
    data_selector: result
    params: {}
- name: get_city_state_item
  endpoint:
    path: /UNZ_GETCITYSTATEITEM
    method: GET
    data_selector: result
    params: {}
- name: error_check
  endpoint:
    path: /UNZ_ERROR
    method: GET
    data_selector: result
    params: {}
- name: address_verification
  endpoint:
    path: /address/verification
    method: POST
    data_selector: results
- name: get_street_parts
  endpoint:
    path: /UNZ_GETSTREETPARTS
    method: GET
    data_selector: components
- name: get_street_number
  endpoint:
    path: /UNZ_GETSTREETNUMBER
    method: GET
    data_selector: number
- name: get_street_name
  endpoint:
    path: /UNZ_GETSTREETNAME
    method: GET
    data_selector: name
- name: get_secondary
  endpoint:
    path: /UNZ_GETSECONDARY
    method: GET
    data_selector: secondary
- name: get_city_state_zip
  endpoint:
    path: /UNZ_GETCITYSTZIP
    method: GET
    data_selector: city_state_zip
- name: get_city
  endpoint:
    path: /UNZ_GETCITY
    method: GET
    data_selector: city
- name: get_state
  endpoint:
    path: /UNZ_GETSTATE
    method: GET
    data_selector: state
- name: get_zip
  endpoint:
    path: /UNZ_GETZIP
    method: GET
    data_selector: zip
- name: get_dpbc
  endpoint:
    path: /UNZ_GETDPBC
    method: GET
    data_selector: dpbc
- name: get_cong_dist
  endpoint:
    path: /UNZ_GETCONGDIST
    method: GET
    data_selector: cong_dist
- name: get_county
  endpoint:
    path: /UNZ_GETCOUNTY
    method: GET
    data_selector: county
- name: get_cnty_fips
  endpoint:
    path: /UNZ_GETCNTYFIPS
    method: GET
    data_selector: cnty_fips
- name: get_area_code
  endpoint:
    path: /UNZ_GETAREACODE
    method: GET
    data_selector: area_code
- name: get_time_zone
  endpoint:
    path: /UNZ_GETTIMEZONE
    method: GET
    data_selector: time_zone
- name: get_addr_range
  endpoint:
    path: /UNZ_GETADDRRANGE
    method: GET
    data_selector: addr_range
- name: phone_object
  endpoint:
    path: /services/data/vXX.X/sobjects/PhoneObject
    method: GET
    data_selector: records
    params: {}
- name: address_flags
  endpoint:
    path: /UNZ_GETADDRESSFLAGS
    method: GET
    data_selector: flags
- name: stats
  endpoint:
    path: /UNZ_GETSTATS
    method: GET
    data_selector: statistics
- name: match_count
  endpoint:
    path: /UNZ_GETMATCHCOUNT
    method: GET
    data_selector: count
- name: match_address
  endpoint:
    path: /UNZ_GETMATCHADDR
    method: GET
    data_selector: address
- name: address_components
  endpoint:
    path: /UNZ_GETADDRCOMP
    method: GET
    data_selector: components
- name: street_count
  endpoint:
    path: /UNZ_GETSTREETCOUNT
    method: GET
    data_selector: count
- name: street_item
  endpoint:
    path: /UNZ_GETSTREETITEM
    method: GET
    data_selector: street_name
- name: error_text
  endpoint:
    path: /UNZ_GETERRORTEXT
    method: GET
    data_selector: error_text
- name: address_type
  endpoint:
    path: /UNZ_GETADDRESSTYPE
    method: GET
    data_selector: address_type
- name: zip_type
  endpoint:
    path: /UNZ_GETZIPTYPE
    method: GET
    data_selector: zip_type
- name: first_city_name
  endpoint:
    path: /UNZ_GETFIRSTCITYNAME
    method: GET
    data_selector: first_city
- name: phone_object
  endpoint:
    path: /phone-object
    method: GET
    data_selector: records
    params: {}
- name: phone_object
  endpoint:
    path: /phone-object/lookup
    method: POST
    data_selector: result
    params: {}
- name: phone_object
  endpoint:
    path: /services/data/vXX.X/sobjects/PhoneObject
    method: GET
    data_selector: records
    params: {}
- name: GETNEXTCITYNAME
  endpoint:
    path: /UNZ_GETNEXTCITYNAME
    method: GET
- name: GETFIRSTADDR
  endpoint:
    path: /UNZ_GETFIRSTADDR
    method: GET
- name: GETNEXTADDR
  endpoint:
    path: /UNZ_GETNEXTADDR
    method: GET
- name: GETZIPCOUNT
  endpoint:
    path: /UNZ_GETZIPCOUNT
    method: GET
- name: GETZIPITEM
  endpoint:
    path: /UNZ_GETZIPITEM
    method: GET
- name: GETZIPCITYCOUNT
  endpoint:
    path: /UNZ_GETZIPCITYCOUNT
    method: GET
- name: GETZIPCITYITEM
  endpoint:
    path: /UNZ_GETZIPCITYITEM
    method: GET
- name: GETCITYSTATECOUNT
  endpoint:
    path: /UNZ_GETCITYSTATECOUNT
    method: GET
- name: GETCITYSTATEITEM
  endpoint:
    path: /UNZ_GETCITYSTATEITEM
    method: GET
- name: ERROR
  endpoint:
    path: /UNZ_ERROR
    method: GET
- name: GetAreaCode
  endpoint:
    path: /GetAreaCode
    method: GET
- name: GetPrefix
  endpoint:
    path: /GetPrefix
    method: GET
- name: GetSuffix
  endpoint:
    path: /GetSuffix
    method: GET
- name: GetCity
  endpoint:
    path: /GetCity
    method: GET
- name: GetState
  endpoint:
    path: /GetState
    method: GET
- name: GetLatitude
  endpoint:
    path: /GetLatitude
    method: GET
- name: GetLongitude
  endpoint:
    path: /GetLongitude
    method: GET
- name: GetTimeZone
  endpoint:
    path: /GetTimeZone
    method: GET
- name: GetResults
  endpoint:
    path: /GetResults
    method: GET
- name: GetResultCodeDescription
  endpoint:
    path: /GetResultCodeDescription
    method: GET
- name: Phone Object
  endpoint:
    path: /phone-object
    method: GET
    data_selector: resultCodes
- name: phone_number
  endpoint:
    path: /phone/lookup
    method: GET
    data_selector: results
- name: address_verification
  endpoint:
    path: /address/verification
    method: POST
    data_selector: results
- name: GetCity
  endpoint:
    path: /GetCity
    method: GET
    data_selector: City
- name: GetCountryCode
  endpoint:
    path: /GetCountryCode
    method: GET
    data_selector: Country Code
- name: GetCountyName
  endpoint:
    path: /GetCountyName
    method: GET
    data_selector: Country Name
- name: GetCountyFips
  endpoint:
    path: /GetCountyFips
    method: GET
    data_selector: Country FIPS
- name: GetDistance
  endpoint:
    path: /GetDistance
    method: GET
    data_selector: Distance
- name: GetLatitude
  endpoint:
    path: /GetLatitude
    method: GET
    data_selector: Latitude
- name: GetLongitude
  endpoint:
    path: /GetLongitude
    method: GET
    data_selector: Longitude
- name: GetMSA
  endpoint:
    path: /GetMSA
    method: GET
    data_selector: Metropolitan Statistical Area
- name: GetPMSA
  endpoint:
    path: /GetPMSA
    method: GET
    data_selector: Primary Metropolitan Statistical Area
- name: GetState
  endpoint:
    path: /GetState
    method: GET
    data_selector: State
- name: GetTimeZone
  endpoint:
    path: /GetTimeZone
    method: GET
    data_selector: Time Zone
- name: GetTimeZoneCode
  endpoint:
    path: /GetTimeZoneCode
    method: GET
    data_selector: Time Zone Code
- name: address_matching
  endpoint:
    path: /api/address/matching
    method: GET
    data_selector: matches
    params: {}
- name: dq_phone_data
  endpoint:
    path: /dq_phone_data
    method: GET
- name: phone_object
  endpoint:
    path: /phone-object
    method: POST
    data_selector: results
- name: phone_object
  endpoint:
    path: /path/to/phone/object
    method: GET
    data_selector: records
- name: Phone Object
  endpoint:
    path: /phone-object
    method: GET
- name: profiling
  endpoint:
    path: /profile/data
    method: POST
- name: profiler
  endpoint:
    path: /profiler
    method: POST
    data_selector: records
    params: {}
- name: profiling
  endpoint:
    path: /profile/data
    method: POST
    data_selector: records
    params: {}
- name: GetAreaCode
  endpoint:
    path: /GetAreaCode
    method: GET
- name: GetPrefix
  endpoint:
    path: /GetPrefix
    method: GET
- name: GetSuffix
  endpoint:
    path: /GetSuffix
    method: GET
- name: GetCity
  endpoint:
    path: /GetCity
    method: GET
- name: GetState
  endpoint:
    path: /GetState
    method: GET
- name: GetLatitude
  endpoint:
    path: /GetLatitude
    method: GET
- name: GetLongitude
  endpoint:
    path: /GetLongitude
    method: GET
- name: GetTimeZone
  endpoint:
    path: /GetTimeZone
    method: GET
- name: GetResults
  endpoint:
    path: /GetResults
    method: GET
- name: GetResultCodeDescription
  endpoint:
    path: /GetResultCodeDescription
    method: GET
- name: profiler_data
  endpoint:
    path: /profiler_data
    method: GET
- name: phone_lookup
  endpoint:
    path: /phone/lookup
    method: POST
    data_selector: result
    params: {}
- name: profiler_data
  endpoint:
    path: /profiler_data
    method: GET
    data_selector: data
    params: {}
- name: profiler_data
  endpoint:
    path: /profiler_data
    method: GET
    data_selector: data
    params: {}
- name: profiler
  endpoint:
    path: /profiler
    method: POST
    data_selector: results
- name: profiler_object
  endpoint:
    path: /profiler/start
    method: POST
    data_selector: results
- name: Initialize
  endpoint:
    path: /initialize
    method: POST
    data_selector: Initialization Status
    params: {}
- name: SetLicenseString
  endpoint:
    path: /setLicenseString
    method: POST
    data_selector: Is License Valid
    params: {}
- name: GetBuildNumber
  endpoint:
    path: /getBuildNumber
    method: GET
    data_selector: Build Number
    params: {}
- name: GetDatabaseDate
  endpoint:
    path: /getDatabaseDate
    method: GET
    data_selector: Database Date
    params: {}
- name: GetInitializeErrorString
  endpoint:
    path: /getInitializeErrorString
    method: GET
    data_selector: Error Description
    params: {}
- name: GetLicenseExpirationDate
  endpoint:
    path: /getLicenseExpirationDate
    method: GET
    data_selector: License Expiration Date
    params: {}
- name: CorrectAreaCode
  endpoint:
    path: /correctAreaCode
    method: POST
    data_selector: Is Correction Successful
    params: {}
- name: Lookup
  endpoint:
    path: /lookup
    method: POST
    data_selector: Is Number Valid
    params: {}
- name: GetResults
  endpoint:
    path: /getResults
    method: GET
    data_selector: Result Codes
    params: {}
- name: GetAreaCode
  endpoint:
    path: /getAreaCode
    method: GET
    data_selector: Area Code
    params: {}
- name: GetExtension
  endpoint:
    path: /getExtension
    method: GET
    data_selector: Extension
    params: {}
- name: GetNewAreaCode
  endpoint:
    path: /getNewAreaCode
    method: GET
    data_selector: Modified Area Code
    params: {}
- name: GetPrefix
  endpoint:
    path: /getPrefix
    method: GET
    data_selector: Prefix
    params: {}
- name: GetSuffix
  endpoint:
    path: /getSuffix
    method: GET
    data_selector: Suffix
    params: {}
- name: profiler_data
  endpoint:
    path: /services/data/profiler_data
    method: GET
    data_selector: records
    params: {}
- name: md_profiler
  endpoint:
    path: /profiler/data
    method: POST
    data_selector: records
- name: InitializeDataFiles
  endpoint:
    path: /initializeDataFiles
    method: GET
    data_selector: Initialization Status
    params: {}
- name: SetLicenseString
  endpoint:
    path: /setLicenseString
    method: POST
    data_selector: Is License Valid
    params: {}
- name: SetPathToProfilerDataFiles
  endpoint:
    path: /setPathToProfilerDataFiles
    method: POST
    data_selector: Void
    params: {}
- name: GetCity
  endpoint:
    path: /GetCity
    method: GET
    data_selector: City
- name: GetCountryCode
  endpoint:
    path: /GetCountryCode
    method: GET
    data_selector: Country Code
- name: GetCountyName
  endpoint:
    path: /GetCountyName
    method: GET
    data_selector: Country Name
- name: GetCountyFips
  endpoint:
    path: /GetCountyFips
    method: GET
    data_selector: Country FIPS
- name: GetDistance
  endpoint:
    path: /GetDistance
    method: GET
    data_selector: Distance
- name: GetLatitude
  endpoint:
    path: /GetLatitude
    method: GET
    data_selector: Latitude
- name: GetLongitude
  endpoint:
    path: /GetLongitude
    method: GET
    data_selector: Longitude
- name: GetMSA
  endpoint:
    path: /GetMSA
    method: GET
    data_selector: Metropolitan Statistical Area
- name: GetPMSA
  endpoint:
    path: /GetPMSA
    method: GET
    data_selector: Primary Metropolitan Statistical Area
- name: GetState
  endpoint:
    path: /GetState
    method: GET
    data_selector: State
- name: GetTimeZone
  endpoint:
    path: /GetTimeZone
    method: GET
    data_selector: Time Zone
- name: GetTimeZoneCode
  endpoint:
    path: /GetTimeZoneCode
    method: GET
    data_selector: Time Zone Code
- name: AddColumn
  endpoint:
    path: /profiler/addcolumn
    method: POST
- name: SetColumnCustomPattern
  endpoint:
    path: /profiler/setcolumncustompattern
    method: POST
- name: SetColumnValueRange
  endpoint:
    path: /profiler/setcolumnvaluerange
    method: POST
- name: SetColumnDefaultValue
  endpoint:
    path: /profiler/setcolumndefaultvalue
    method: POST
- name: SetColumnSize
  endpoint:
    path: /profiler/setcolumnsize
    method: POST
- name: SetColumnPrecision
  endpoint:
    path: /profiler/setcolumnprecision
    method: POST
- name: SetColumnScale
  endpoint:
    path: /profiler/setcolumnscale
    method: POST
- name: GetColumnCount
  endpoint:
    path: /profiler/getcolumncount
    method: GET
- name: GetColumnName
  endpoint:
    path: /profiler/getcolumnname
    method: GET
- name: GetColumnColumnType
  endpoint:
    path: /profiler/getcolumncolumntype
    method: GET
- name: GetColumnDataType
  endpoint:
    path: /profiler/getcolumndatatype
    method: GET
- name: GetColumnSize
  endpoint:
    path: /profiler/getcolumnsize
    method: GET
- name: GetColumnPrecision
  endpoint:
    path: /profiler/getcolumnprecision
    method: GET
- name: GetColumnScale
  endpoint:
    path: /profiler/getcolumnscale
    method: GET
- name: GetColumnValueRangeFrom
  endpoint:
    path: /profiler/getcolumnvaluerangefrom
    method: GET
- name: GetColumnValueRangeTo
  endpoint:
    path: /profiler/getcolumnvaluerangeto
    method: GET
- name: GetColumnDefaultValue
  endpoint:
    path: /profiler/getcolumndefaultvalue
    method: GET
- name: GetColumnCustomPatterns
  endpoint:
    path: /profiler/getcolumncustompatterns
    method: GET
- name: StartProfiling
  endpoint:
    path: /profiler/startprofiling
    method: POST
- name: AddRecord
  endpoint:
    path: /profiler/addrecord
    method: POST
- name: AddDelimitedRecord
  endpoint:
    path: /profiler/adddelimitedrecord
    method: POST
- name: GetColumnValue
  endpoint:
    path: /profiler/getcolumnvalue
    method: GET
- name: SetColumnDelimiter
  endpoint:
    path: /profiler/setcolumndelimiter
    method: POST
- name: SetRowDelimiter
  endpoint:
    path: /profiler/setrowdelimiter
    method: POST
- name: SetTextQualifier
  endpoint:
    path: /profiler/settextqualifier
    method: POST
- name: GetResults
  endpoint:
    path: /profiler/getresults
    method: GET
- name: ProfileData
  endpoint:
    path: /profiler/profiledata
    method: POST
- name: profiler_data
  endpoint:
    path: /profiler_data
    method: GET
    data_selector: data
    params: {}
- name: profiler_data
  endpoint:
    path: /profiler_data
    method: GET
    data_selector: records
    params: {}
- name: profiling
  endpoint:
    path: /profiledata
    method: POST
    data_selector: records
- name: profiler_data
  endpoint:
    path: /profiler_data
    method: GET
    data_selector: data
    params: {}
- name: profiler_data
  endpoint:
    path: /services/data/vXX.X/profiler_data
    method: GET
    data_selector: records
- name: profiling
  endpoint:
    path: /profile_data
    method: POST
    data_selector: records
    params: {}
- name: profiler_data
  endpoint:
    path: /profiler_data
    method: GET
    data_selector: data
    params: {}
- name: profiler_data
  endpoint:
    path: /profiler_data
    method: GET
    data_selector: records
- name: profiler_data
  endpoint:
    path: /profiler_data
    method: GET
    data_selector: data
    params: {}
- name: profiler_object
  endpoint:
    path: /profiler_object
    method: GET
    data_selector: records
- name: profiler
  endpoint:
    path: /profiler/start
    method: POST
    data_selector: profiling_data
- name: GetColumnInferredDataType
  endpoint:
    path: /GetColumnInferredDataType
    method: GET
    data_selector: string
    params: {}
- name: GetColumnInferredColumnType
  endpoint:
    path: /GetColumnInferredColumnType
    method: GET
    data_selector: string
    params: {}
- name: GetColumnSortation
  endpoint:
    path: /GetColumnSortation
    method: GET
    data_selector: string
    params: {}
- name: GetColumnSortationPercent
  endpoint:
    path: /GetColumnSortationPercent
    method: GET
    data_selector: string
    params: {}
- name: GetColumnMostPopularCount
  endpoint:
    path: /GetColumnMostPopularCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDistinctCount
  endpoint:
    path: /GetColumnDistinctCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnUniqueCount
  endpoint:
    path: /GetColumnUniqueCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDefaultValueCount
  endpoint:
    path: /GetColumnDefaultValueCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnBelowRangeCount
  endpoint:
    path: /GetColumnBelowRangeCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnAboveRangeCount
  endpoint:
    path: /GetColumnAboveRangeCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnAboveSizeCount
  endpoint:
    path: /GetColumnAboveSizeCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnAbovePrecisionCount
  endpoint:
    path: /GetColumnAbovePrecisionCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnAboveScaleCount
  endpoint:
    path: /GetColumnAboveScaleCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnInvalidRegExCount
  endpoint:
    path: /GetColumnInvalidRegExCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnEmptyCount
  endpoint:
    path: /GetColumnEmptyCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnNullCount
  endpoint:
    path: /GetColumnNullCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnInvalidDataCount
  endpoint:
    path: /GetColumnInvalidDataCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnInvalidUTF8Count
  endpoint:
    path: /GetColumnInvalidUTF8Count
    method: GET
    data_selector: string
    params: {}
- name: GetColumnNonPrintingCharCount
  endpoint:
    path: /GetColumnNonPrintingCharCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDiacriticCharCount
  endpoint:
    path: /GetColumnDiacriticCharCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnForeignCharCount
  endpoint:
    path: /GetColumnForeignCharCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnAlphaOnlyCount
  endpoint:
    path: /GetColumnAlphaOnlyCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnNumericOnlyCount
  endpoint:
    path: /GetColumnNumericOnlyCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnAlphaNumericCount
  endpoint:
    path: /GetColumnAlphaNumericCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnUpperCaseOnlyCount
  endpoint:
    path: /GetColumnUpperCaseOnlyCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnLowerCaseOnlyCount
  endpoint:
    path: /GetColumnLowerCaseOnlyCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnMixedCaseCount
  endpoint:
    path: /GetColumnMixedCaseCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnSingleSpaceCount
  endpoint:
    path: /GetColumnSingleSpaceCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnMultiSpaceCount
  endpoint:
    path: /GetColumnMultiSpaceCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnLeadingSpaceCount
  endpoint:
    path: /GetColumnLeadingSpaceCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTrailingSpaceCount
  endpoint:
    path: /GetColumnTrailingSpaceCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnMaxSpaces
  endpoint:
    path: /GetColumnMaxSpaces
    method: GET
    data_selector: string
    params: {}
- name: GetColumnMinSpaces
  endpoint:
    path: /GetColumnMinSpaces
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTotalSpaces
  endpoint:
    path: /GetColumnTotalSpaces
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTotalWordBreaks
  endpoint:
    path: /GetColumnTotalWordBreaks
    method: GET
    data_selector: string
    params: {}
- name: GetColumnAvgSpaces
  endpoint:
    path: /GetColumnAvgSpaces
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDecorationCharCount
  endpoint:
    path: /GetColumnDecorationCharCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnProfanityCount
  endpoint:
    path: /GetColumnProfanityCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnInconsistentDataCount
  endpoint:
    path: /GetColumnInconsistentDataCount
    method: GET
    data_selector: string
    params: {}
- name: table_record_count
  endpoint:
    path: /profiler/object/tableRecordCount
    method: GET
    data_selector: ''
    params: {}
- name: column_count
  endpoint:
    path: /profiler/object/columnCount
    method: GET
    data_selector: ''
    params: {}
- name: exact_match_distinct_count
  endpoint:
    path: /profiler/object/exactMatchDistinctCount
    method: GET
    data_selector: ''
    params: {}
- name: exact_match_dupes_count
  endpoint:
    path: /profiler/object/exactMatchDupesCount
    method: GET
    data_selector: ''
    params: {}
- name: largest_group
  endpoint:
    path: /profiler/object/largestGroup
    method: GET
    data_selector: ''
    params: {}
- name: result_codes
  endpoint:
    path: /profiler/object/results
    method: GET
    data_selector: ''
    params: {}
- name: result_code_description
  endpoint:
    path: /profiler/object/resultCodeDescription
    method: GET
    data_selector: ''
    params: {}
- name: profiler_data
  endpoint:
    path: /profiler_data
    method: GET
    data_selector: records
    params: {}
- name: profile_data
  endpoint:
    path: /profile/data
    method: POST
- name: GetColumnStringMaxValue
  endpoint:
    path: /GetColumnStringMaxValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnStringMinValue
  endpoint:
    path: /GetColumnStringMinValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnStringQ1Value
  endpoint:
    path: /GetColumnStringQ1Value
    method: GET
    data_selector: string
    params: {}
- name: GetColumnStringMedValue
  endpoint:
    path: /GetColumnStringMedValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnStringQ3Value
  endpoint:
    path: /GetColumnStringQ3Value
    method: GET
    data_selector: string
    params: {}
- name: GetColumnNumericMaxValue
  endpoint:
    path: /GetColumnNumericMaxValue
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericMinValue
  endpoint:
    path: /GetColumnNumericMinValue
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericAverageValue
  endpoint:
    path: /GetColumnNumericAverageValue
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericQ1Value
  endpoint:
    path: /GetColumnNumericQ1Value
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericMedValue
  endpoint:
    path: /GetColumnNumericMedValue
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericQ3Value
  endpoint:
    path: /GetColumnNumericQ3Value
    method: GET
    data_selector: double
    params: {}
- name: GetColumnStringMaxValue
  endpoint:
    path: /GetColumnStringMaxValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnStringMinValue
  endpoint:
    path: /GetColumnStringMinValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnStringQ1Value
  endpoint:
    path: /GetColumnStringQ1Value
    method: GET
    data_selector: string
    params: {}
- name: GetColumnStringMedValue
  endpoint:
    path: /GetColumnStringMedValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnStringQ3Value
  endpoint:
    path: /GetColumnStringQ3Value
    method: GET
    data_selector: string
    params: {}
- name: GetColumnStringMaxLength
  endpoint:
    path: /GetColumnStringMaxLength
    method: GET
    data_selector: int
    params: {}
- name: GetColumnStringMinLength
  endpoint:
    path: /GetColumnStringMinLength
    method: GET
    data_selector: int
    params: {}
- name: GetColumnStringAvgLength
  endpoint:
    path: /GetColumnStringAvgLength
    method: GET
    data_selector: double
    params: {}
- name: GetColumnStringQ1Length
  endpoint:
    path: /GetColumnStringQ1Length
    method: GET
    data_selector: int
    params: {}
- name: GetColumnStringMedLength
  endpoint:
    path: /GetColumnStringMedLength
    method: GET
    data_selector: int
    params: {}
- name: GetColumnStringQ3Length
  endpoint:
    path: /GetColumnStringQ3Length
    method: GET
    data_selector: int
    params: {}
- name: GetColumnWordMaxValue
  endpoint:
    path: /GetColumnWordMaxValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnWordMinValue
  endpoint:
    path: /GetColumnWordMinValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnWordQ1Value
  endpoint:
    path: /GetColumnWordQ1Value
    method: GET
    data_selector: string
    params: {}
- name: GetColumnWordMedValue
  endpoint:
    path: /GetColumnWordMedValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnWordQ3Value
  endpoint:
    path: /GetColumnWordQ3Value
    method: GET
    data_selector: string
    params: {}
- name: GetColumnWordMaxLength
  endpoint:
    path: /GetColumnWordMaxLength
    method: GET
    data_selector: int
    params: {}
- name: GetColumnWordMinLength
  endpoint:
    path: /GetColumnWordMinLength
    method: GET
    data_selector: int
    params: {}
- name: GetColumnWordAvgLength
  endpoint:
    path: /GetColumnWordAvgLength
    method: GET
    data_selector: double
    params: {}
- name: GetColumnWordQ1Length
  endpoint:
    path: /GetColumnWordQ1Length
    method: GET
    data_selector: int
    params: {}
- name: GetColumnWordMedLength
  endpoint:
    path: /GetColumnWordMedLength
    method: GET
    data_selector: int
    params: {}
- name: GetColumnWordQ3Length
  endpoint:
    path: /GetColumnWordQ3Length
    method: GET
    data_selector: int
    params: {}
- name: GetColumnMaxWords
  endpoint:
    path: /GetColumnMaxWords
    method: GET
    data_selector: int
    params: {}
- name: GetColumnMinWords
  endpoint:
    path: /GetColumnMinWords
    method: GET
    data_selector: int
    params: {}
- name: GetColumnAvgWords
  endpoint:
    path: /GetColumnAvgWords
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericMaxValue
  endpoint:
    path: /GetColumnNumericMaxValue
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericMinValue
  endpoint:
    path: /GetColumnNumericMinValue
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericAverageValue
  endpoint:
    path: /GetColumnNumericAverageValue
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericQ1Value
  endpoint:
    path: /GetColumnNumericQ1Value
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericQ1IntValue
  endpoint:
    path: /GetColumnNumericQ1IntValue
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericMedValue
  endpoint:
    path: /GetColumnNumericMedValue
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericMedIntValue
  endpoint:
    path: /GetColumnNumericMedIntValue
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericQ3Value
  endpoint:
    path: /GetColumnNumericQ3Value
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericQ3IntValue
  endpoint:
    path: /GetColumnNumericQ3IntValue
    method: GET
    data_selector: double
    params: {}
- name: GetColumnNumericStdDevValue
  endpoint:
    path: /GetColumnNumericStdDevValue
    method: GET
    data_selector: double
    params: {}
- name: GetColumnDateMaxValue
  endpoint:
    path: /GetColumnDateMaxValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDateMinValue
  endpoint:
    path: /GetColumnDateMinValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDateAvgValue
  endpoint:
    path: /GetColumnDateAvgValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDateQ1Value
  endpoint:
    path: /GetColumnDateQ1Value
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDateMedValue
  endpoint:
    path: /GetColumnDateMedValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDateQ3Value
  endpoint:
    path: /GetColumnDateQ3Value
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTimeMaxValue
  endpoint:
    path: /GetColumnTimeMaxValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTimeMinValue
  endpoint:
    path: /GetColumnTimeMinValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTimeAvgValue
  endpoint:
    path: /GetColumnTimeAvgValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTimeQ1Value
  endpoint:
    path: /GetColumnTimeQ1Value
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTimeMedValue
  endpoint:
    path: /GetColumnTimeMedValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTimeQ3Value
  endpoint:
    path: /GetColumnTimeQ3Value
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDateNoCenturyCount
  endpoint:
    path: /GetColumnDateNoCenturyCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnNameInconsistentOrderCount
  endpoint:
    path: /GetColumnNameInconsistentOrderCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnNameMultipleNameCount
  endpoint:
    path: /GetColumnNameMultipleNameCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnNameSuspiciousNameCount
  endpoint:
    path: /GetColumnNameSuspiciousNameCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnStateCount
  endpoint:
    path: /GetColumnStateCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnProvinceCount
  endpoint:
    path: /GetColumnProvinceCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnStateProvinceNonStandardCount
  endpoint:
    path: /GetColumnStateProvinceNonStandardCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnStateProvinceInvalidCount
  endpoint:
    path: /GetColumnStateProvinceInvalidCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnStateZipCodeMismatchCount
  endpoint:
    path: /GetColumnStateZipCodeMismatchCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnProvincePostalCodeMismatchCount
  endpoint:
    path: /GetColumnProvincePostalCodeMismatchCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnZipCodeCount
  endpoint:
    path: /GetColumnZipCodeCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnPlus4Count
  endpoint:
    path: /GetColumnPlus4Count
    method: GET
    data_selector: int
    params: {}
- name: GetColumnZipCodeInvalidCount
  endpoint:
    path: /GetColumnZipCodeInvalidCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnPostalCodeCount
  endpoint:
    path: /GetColumnPostalCodeCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnPostalCodeInvalidCount
  endpoint:
    path: /GetColumnPostalCodeInvalidCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnZipCodePostalCodeInvalidCount
  endpoint:
    path: /GetColumnZipCodePostalCodeInvalidCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnDateMaxValue
  endpoint:
    path: /GetColumnDateMaxValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDateMinValue
  endpoint:
    path: /GetColumnDateMinValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDateAvgValue
  endpoint:
    path: /GetColumnDateAvgValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDateQ1Value
  endpoint:
    path: /GetColumnDateQ1Value
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDateMedValue
  endpoint:
    path: /GetColumnDateMedValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDateQ3Value
  endpoint:
    path: /GetColumnDateQ3Value
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTimeMaxValue
  endpoint:
    path: /GetColumnTimeMaxValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTimeMinValue
  endpoint:
    path: /GetColumnTimeMinValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTimeAvgValue
  endpoint:
    path: /GetColumnTimeAvgValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTimeQ1Value
  endpoint:
    path: /GetColumnTimeQ1Value
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTimeMedValue
  endpoint:
    path: /GetColumnTimeMedValue
    method: GET
    data_selector: string
    params: {}
- name: GetColumnTimeQ3Value
  endpoint:
    path: /GetColumnTimeQ3Value
    method: GET
    data_selector: string
    params: {}
- name: GetColumnDateNoCenturyCount
  endpoint:
    path: /GetColumnDateNoCenturyCount
    method: GET
    data_selector: string
    params: {}
- name: GetColumnNameInconsistentOrderCount
  endpoint:
    path: /GetColumnNameInconsistentOrderCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnNameMultipleNameCount
  endpoint:
    path: /GetColumnNameMultipleNameCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnNameSuspiciousNameCount
  endpoint:
    path: /GetColumnNameSuspiciousNameCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnStateCount
  endpoint:
    path: /GetColumnStateCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnProvinceCount
  endpoint:
    path: /GetColumnProvinceCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnStateProvinceNonStandardCount
  endpoint:
    path: /GetColumnStateProvinceNonStandardCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnStateProvinceInvalidCount
  endpoint:
    path: /GetColumnStateProvinceInvalidCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnStateZipCodeMismatchCount
  endpoint:
    path: /GetColumnStateZipCodeMismatchCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnProvincePostalCodeMismatchCount
  endpoint:
    path: /GetColumnProvincePostalCodeMismatchCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnZipCodeCount
  endpoint:
    path: /GetColumnZipCodeCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnPlus4Count
  endpoint:
    path: /GetColumnPlus4Count
    method: GET
    data_selector: int
    params: {}
- name: GetColumnZipCodeInvalidCount
  endpoint:
    path: /GetColumnZipCodeInvalidCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnPostalCodeCount
  endpoint:
    path: /GetColumnPostalCodeCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnPostalCodeInvalidCount
  endpoint:
    path: /GetColumnPostalCodeInvalidCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnZipCodePostalCodeInvalidCount
  endpoint:
    path: /GetColumnZipCodePostalCodeInvalidCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnStateZipCodeMismatchCount
  endpoint:
    path: /GetColumnStateZipCodeMismatchCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnProvincePostalCodeMismatchCount
  endpoint:
    path: /GetColumnProvincePostalCodeMismatchCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnCountryNonStandardCount
  endpoint:
    path: /GetColumnCountryNonStandardCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnCountryInvalidCount
  endpoint:
    path: /GetColumnCountryInvalidCount
    method: GET
    data_selector: int
    params: {}
- name: GetColumnEmailSyntaxCount
  endpoint:
    path: /GetColumnEmailSyntaxCount
    method: GET
- name: GetColumnEmailMobileDomainCount
  endpoint:
    path: /GetColumnEmailMobileDomainCount
    method: GET
- name: GetColumnEmailMisspelledDomainCount
  endpoint:
    path: /GetColumnEmailMisspelledDomainCount
    method: GET
- name: GetColumnEmailSpamtrapDomainCount
  endpoint:
    path: /GetColumnEmailSpamtrapDomainCount
    method: GET
- name: GetColumnEmailDisposableDomainCount
  endpoint:
    path: /GetColumnEmailDisposableDomainCount
    method: GET
- name: StartDataFrequency
  endpoint:
    path: /StartDataFrequency
    method: GET
- name: GetDataFrequencyValue
  endpoint:
    path: /GetDataFrequencyValue
    method: GET
- name: GetDataFrequencyCount
  endpoint:
    path: /GetDataFrequencyCount
    method: GET
- name: GetNextDataFrequency
  endpoint:
    path: /GetNextDataFrequency
    method: GET
- name: StartLengthFrequency
  endpoint:
    path: /StartLengthFrequency
    method: GET
- name: GetLengthFrequencyValue
  endpoint:
    path: /GetLengthFrequencyValue
    method: GET
- name: GetLengthFrequencyCount
  endpoint:
    path: /GetLengthFrequencyCount
    method: GET
- name: GetNextLengthFrequency
  endpoint:
    path: /GetNextLengthFrequency
    method: GET
- name: StartPatternFrequency
  endpoint:
    path: /StartPatternFrequency
    method: GET
- name: GetPatternFrequencyValue
  endpoint:
    path: /GetPatternFrequencyValue
    method: GET
- name: GetPatternFrequencyRegEx
  endpoint:
    path: /GetPatternFrequencyRegEx
    method: GET
- name: GetPatternFrequencyExample
  endpoint:
    path: /GetPatternFrequencyExample
    method: GET
- name: GetPatternFrequencyCount
  endpoint:
    path: /GetPatternFrequencyCount
    method: GET
- name: GetNextPatternFrequency
  endpoint:
    path: /GetNextPatternFrequency
    method: GET
- name: StartDateFrequency
  endpoint:
    path: /StartDateFrequency
    method: GET
- name: GetDateFrequencyValue
  endpoint:
    path: /GetDateFrequencyValue
    method: GET
- name: GetDateFrequencyCount
  endpoint:
    path: /GetDateFrequencyCount
    method: GET
- name: GetNextDateFrequency
  endpoint:
    path: /GetNextDateFrequency
    method: GET
- name: StartSoundExFrequency
  endpoint:
    path: /StartSoundExFrequency
    method: GET
- name: GetSoundExFrequencyValue
  endpoint:
    path: /GetSoundExFrequencyValue
    method: GET
- name: GetSoundExFrequencyExample
  endpoint:
    path: /GetSoundExFrequencyExample
    method: GET
- name: GetSoundExFrequencyCount
  endpoint:
    path: /GetSoundExFrequencyCount
    method: GET
- name: GetNextSoundExFrequency
  endpoint:
    path: /GetNextSoundExFrequency
    method: GET
- name: StartWordFrequency
  endpoint:
    path: /StartWordFrequency
    method: GET
- name: GetWordFrequencyValue
  endpoint:
    path: /GetWordFrequencyValue
    method: GET
- name: GetWordFrequencyCount
  endpoint:
    path: /GetWordFrequencyCount
    method: GET
- name: GetNextWordFrequency
  endpoint:
    path: /GetNextWordFrequency
    method: GET
- name: StartWordLengthFrequency
  endpoint:
    path: /StartWordLengthFrequency
    method: GET
- name: GetWordLengthFrequencyValue
  endpoint:
    path: /GetWordLengthFrequencyValue
    method: GET
- name: GetWordLengthFrequencyCount
  endpoint:
    path: /GetWordLengthFrequencyCount
    method: GET
- name: GetNextWordLengthFrequency
  endpoint:
    path: /GetNextWordLengthFrequency
    method: GET
- name: GetColumnEmailSyntaxCount
  endpoint:
    path: /GetColumnEmailSyntaxCount
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: GetColumnEmailMobileDomainCount
  endpoint:
    path: /GetColumnEmailMobileDomainCount
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: GetColumnEmailMisspelledDomainCount
  endpoint:
    path: /GetColumnEmailMisspelledDomainCount
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: GetColumnEmailSpamtrapDomainCount
  endpoint:
    path: /GetColumnEmailSpamtrapDomainCount
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: GetColumnEmailDisposableDomainCount
  endpoint:
    path: /GetColumnEmailDisposableDomainCount
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: StartDataFrequency
  endpoint:
    path: /StartDataFrequency
    method: GET
    data_selector: int
    params:
      ColumnName: string
      Order: Order
- name: GetDataFrequencyValue
  endpoint:
    path: /GetDataFrequencyValue
    method: GET
    data_selector: string
    params:
      ColumnName: string
- name: GetDataFrequencyCount
  endpoint:
    path: /GetDataFrequencyCount
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: GetNextDataFrequency
  endpoint:
    path: /GetNextDataFrequency
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: StartLengthFrequency
  endpoint:
    path: /StartLengthFrequency
    method: GET
    data_selector: int
    params:
      ColumnName: string
      Order: Order
- name: GetLengthFrequencyValue
  endpoint:
    path: /GetLengthFrequencyValue
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: GetLengthFrequencyCount
  endpoint:
    path: /GetLengthFrequencyCount
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: GetNextLengthFrequency
  endpoint:
    path: /GetNextLengthFrequency
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: StartPatternFrequency
  endpoint:
    path: /StartPatternFrequency
    method: GET
    data_selector: int
    params:
      ColumnName: string
      Order: Order
- name: GetPatternFrequencyValue
  endpoint:
    path: /GetPatternFrequencyValue
    method: GET
    data_selector: string
    params:
      ColumnName: string
- name: GetPatternFrequencyRegEx
  endpoint:
    path: /GetPatternFrequencyRegEx
    method: GET
    data_selector: string
    params:
      ColumnName: string
- name: GetPatternFrequencyExample
  endpoint:
    path: /GetPatternFrequencyExample
    method: GET
    data_selector: string
    params:
      ColumnName: string
- name: GetPatternFrequencyCount
  endpoint:
    path: /GetPatternFrequencyCount
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: GetNextPatternFrequency
  endpoint:
    path: /GetNextPatternFrequency
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: StartDateFrequency
  endpoint:
    path: /StartDateFrequency
    method: GET
    data_selector: int
    params:
      ColumnName: string
      Order: Order
      DateSpan: DateSpan
- name: GetDateFrequencyValue
  endpoint:
    path: /GetDateFrequencyValue
    method: GET
    data_selector: string
    params:
      ColumnName: string
- name: GetDateFrequencyCount
  endpoint:
    path: /GetDateFrequencyCount
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: GetNextDateFrequency
  endpoint:
    path: /GetNextDateFrequency
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: StartSoundExFrequency
  endpoint:
    path: /StartSoundExFrequency
    method: GET
    data_selector: int
    params:
      ColumnName: string
      Order: Order
- name: GetSoundExFrequencyValue
  endpoint:
    path: /GetSoundExFrequencyValue
    method: GET
    data_selector: string
    params:
      ColumnName: string
- name: GetSoundExFrequencyExample
  endpoint:
    path: /GetSoundExFrequencyExample
    method: GET
    data_selector: string
    params:
      ColumnName: string
- name: GetSoundExFrequencyCount
  endpoint:
    path: /GetSoundExFrequencyCount
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: GetNextSoundExFrequency
  endpoint:
    path: /GetNextSoundExFrequency
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: StartWordFrequency
  endpoint:
    path: /StartWordFrequency
    method: GET
    data_selector: int
    params:
      ColumnName: string
      Order: Order
- name: GetWordFrequencyValue
  endpoint:
    path: /GetWordFrequencyValue
    method: GET
    data_selector: string
    params:
      ColumnName: string
- name: GetWordFrequencyCount
  endpoint:
    path: /GetWordFrequencyCount
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: GetNextWordFrequency
  endpoint:
    path: /GetNextWordFrequency
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: StartWordLengthFrequency
  endpoint:
    path: /StartWordLengthFrequency
    method: GET
    data_selector: int
    params:
      ColumnName: string
      Order: Order
- name: GetWordLengthFrequencyValue
  endpoint:
    path: /GetWordLengthFrequencyValue
    method: GET
    data_selector: string
    params:
      ColumnName: string
- name: GetWordLengthFrequencyCount
  endpoint:
    path: /GetWordLengthFrequencyCount
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: GetNextWordLengthFrequency
  endpoint:
    path: /GetNextWordLengthFrequency
    method: GET
    data_selector: int
    params:
      ColumnName: string
- name: rf_data
  endpoint:
    path: /rf_data
    method: GET
- name: RightFielder
  endpoint:
    path: /initialize
    method: POST
    data_selector: object
    params: {}
- name: Set License
  endpoint:
    path: /setLicense
    method: POST
    data_selector: result
    params: {}
- name: OrderEnumerations
  endpoint:
    path: /order/enumerations
    method: GET
    data_selector: values
- name: DateSpanEnumerations
  endpoint:
    path: /datespan/enumerations
    method: GET
    data_selector: values
- name: DataCoverageByCountry
  endpoint:
    path: /data/coverage/country
    method: GET
    data_selector: coverage
- name: ReleaseSchedule
  endpoint:
    path: /release/schedule
    method: GET
    data_selector: releases
- name: data_files
  endpoint:
    path: /initialize-data-files
    method: POST
    data_selector: status
    params: {}
- name: license
  endpoint:
    path: /set-license
    method: POST
    data_selector: status
    params: {}
- name: sanitized_fields
  endpoint:
    path: /get_sanitized_fields
    method: GET
    data_selector: fields
    params: {}
- name: result_codes
  endpoint:
    path: /get_results
    method: GET
    data_selector: resultCodes
    params: {}
- name: RightFielder
  endpoint:
    path: /rightfielder
    method: POST
    data_selector: result
    params: {}
- name: RightFielder Initialization
  endpoint:
    path: /initialize/rightfielder
    method: POST
    data_selector: initialization_data
- name: Set License
  endpoint:
    path: /set/license
    method: POST
    data_selector: license_data
- name: Initialize Data Files
  endpoint:
    path: /initialize/data/files
    method: POST
    data_selector: file_initialization_data
- name: sanitized_fields
  endpoint:
    path: /get-sanitized-fields
    method: GET
    data_selector: fields
- name: result_codes
  endpoint:
    path: /get-result-codes
    method: GET
    data_selector: resultCodes
- name: GetFullName
  endpoint:
    path: /GetFullName
    method: GET
    data_selector: Full Name
- name: GetCity
  endpoint:
    path: /GetCity
    method: GET
    data_selector: City
- name: GetCountry
  endpoint:
    path: /GetCountry
    method: GET
    data_selector: Country
- name: GetLastLine
  endpoint:
    path: /GetLastLine
    method: GET
    data_selector: Last Line
- name: GetPostalCode
  endpoint:
    path: /GetPostalCode
    method: GET
    data_selector: Postal Code
- name: GetState
  endpoint:
    path: /GetState
    method: GET
    data_selector: State
- name: GetCompany
  endpoint:
    path: /GetCompany
    method: GET
    data_selector: Company
- name: GetDepartment
  endpoint:
    path: /GetDepartment
    method: GET
    data_selector: Department
- name: GetEmail
  endpoint:
    path: /GetEmail
    method: GET
    data_selector: Email
- name: GetPhone
  endpoint:
    path: /GetPhone
    method: GET
    data_selector: Phone
- name: GetURL
  endpoint:
    path: /GetURL
    method: GET
    data_selector: URL
- name: GetUnrecognized
  endpoint:
    path: /GetUnrecognized
    method: GET
    data_selector: Unrecognized Portion
- name: GetUserField
  endpoint:
    path: /GetUserField
    method: GET
    data_selector: User Field
- name: zip_to_district
  endpoint:
    path: /data/zip_to_district
    method: GET
    data_selector: records
- name: GetFullName
  endpoint:
    path: /getfullname
    method: GET
    data_selector: Full Name
- name: GetFullNameNext
  endpoint:
    path: /getfullnameNext
    method: GET
    data_selector: Next Full Name
- name: GetCity
  endpoint:
    path: /getcity
    method: GET
    data_selector: City
- name: GetCountry
  endpoint:
    path: /getcountry
    method: GET
    data_selector: Country
- name: GetLastLine
  endpoint:
    path: /getlastline
    method: GET
    data_selector: Last Line
- name: GetPostalCode
  endpoint:
    path: /getpostalcode
    method: GET
    data_selector: Postal Code
- name: GetState
  endpoint:
    path: /getstate
    method: GET
    data_selector: State
- name: GetCompany
  endpoint:
    path: /getcompany
    method: GET
    data_selector: Company
- name: GetCompanyNext
  endpoint:
    path: /getcompanyNext
    method: GET
    data_selector: Next Company
- name: GetDepartment
  endpoint:
    path: /getdepartment
    method: GET
    data_selector: Department
- name: GetDepartmentNext
  endpoint:
    path: /getdepartmentNext
    method: GET
    data_selector: Next Department
- name: GetEmail
  endpoint:
    path: /getemail
    method: GET
    data_selector: Email
- name: GetEmailNext
  endpoint:
    path: /getemailNext
    method: GET
    data_selector: Next Email
- name: GetPhone
  endpoint:
    path: /getphone
    method: GET
    data_selector: Phone
- name: GetPhoneNext
  endpoint:
    path: /getphoneNext
    method: GET
    data_selector: Next Phone
- name: GetPhoneType
  endpoint:
    path: /getphonetype
    method: GET
    data_selector: Phone Type
- name: GetPhoneTypeNext
  endpoint:
    path: /getphonetypeNext
    method: GET
    data_selector: Next Phone Type
- name: GetURL
  endpoint:
    path: /geturl
    method: GET
    data_selector: URL
- name: GetURLNext
  endpoint:
    path: /geturlNext
    method: GET
    data_selector: Next URL
- name: GetUnrecognized
  endpoint:
    path: /getunrecognized
    method: GET
    data_selector: Unrecognized Portion
- name: GetUnrecognizedNext
  endpoint:
    path: /getunrecognizedNext
    method: GET
    data_selector: Next Unrecognized Portion
- name: GetUserField
  endpoint:
    path: /getuserfield
    method: GET
    data_selector: User Field
- name: GetUserFieldNext
  endpoint:
    path: /getuserfieldNext
    method: GET
    data_selector: Next User Field
- name: Personator
  endpoint:
    path: /services/data/vXX.X/Personator
    method: GET
    data_selector: response
    params: {}
- name: Global Address Verification
  endpoint:
    path: /services/data/vXX.X/GlobalAddress
    method: GET
    data_selector: response
    params: {}
- name: Global Email
  endpoint:
    path: /services/data/vXX.X/GlobalEmail
    method: GET
    data_selector: response
    params: {}
- name: Global Phone
  endpoint:
    path: /services/data/vXX.X/GlobalPhone
    method: GET
    data_selector: response
    params: {}
- name: Property
  endpoint:
    path: /services/data/vXX.X/Property
    method: GET
    data_selector: response
    params: {}
- name: data_types
  endpoint:
    path: /data/types
    method: GET
    data_selector: data
    params: {}
- name: Result Status Indicator
  endpoint:
    path: /result/status/indicator
    method: GET
    data_selector: results
    params: {}
- name: contacts
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: leads
  endpoint:
    path: /services/data/vXX.X/sobjects/Lead
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
    data_selector: records
    params: {}
- name: geocoded_results
  endpoint:
    path: /geocoded/results
    method: GET
    data_selector: results
- name: district_information
  endpoint:
    path: /district/information
    method: GET
    data_selector: districts
- name: zip_code_data
  endpoint:
    path: /zip_code_data
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: personator
  endpoint:
    path: /services/data/vXX.X/sobjects/Personator
    method: GET
    data_selector: records
- name: global_address
  endpoint:
    path: /services/data/vXX.X/sobjects/GlobalAddress
    method: GET
    data_selector: records
- name: global_email
  endpoint:
    path: /services/data/vXX.X/sobjects/GlobalEmail
    method: GET
    data_selector: records
- name: global_phone
  endpoint:
    path: /services/data/vXX.X/sobjects/GlobalPhone
    method: GET
    data_selector: records
- name: Contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: Leads
  endpoint:
    path: /leads
    method: GET
    data_selector: records
    params: {}
- name: Accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
    params: {}
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: Business Coder
  endpoint:
    path: /business-coder
    method: GET
    data_selector: data
- name: Contact Verify
  endpoint:
    path: /contact-verify
    method: GET
    data_selector: data
- name: Fuzzy Match
  endpoint:
    path: /fuzzy-match
    method: GET
    data_selector: data
- name: Generalized Cleanser
  endpoint:
    path: /generalized-cleanser
    method: GET
    data_selector: data
- name: Global Verify
  endpoint:
    path: /global-verify
    method: GET
    data_selector: data
- name: IP Locator
  endpoint:
    path: /ip-locator
    method: GET
    data_selector: data
- name: MatchUp
  endpoint:
    path: /matchup
    method: GET
    data_selector: data
- name: Personator
  endpoint:
    path: /personator
    method: GET
    data_selector: data
- name: Personator World
  endpoint:
    path: /personator-world
    method: GET
    data_selector: data
- name: Property
  endpoint:
    path: /property
    method: GET
    data_selector: data
- name: Profiler
  endpoint:
    path: /profiler
    method: GET
    data_selector: data
- name: SmartMover
  endpoint:
    path: /smartmover
    method: GET
    data_selector: data
- name: Contact Verify
  endpoint:
    path: /object-data-files
    method: POST
    data_selector: data
    params: {}
- name: Profiler
  endpoint:
    path: /object-data-files
    method: POST
    data_selector: data
    params: {}
- name: Generalized Cleanser
  endpoint:
    path: /object-data-files
    method: POST
    data_selector: data
    params: {}
- name: MatchUp
  endpoint:
    path: /matchup-data-files
    method: POST
    data_selector: data
    params: {}
- name: Business Coder
  endpoint:
    path: /businesscoder
    method: GET
- name: Contact Verify
  endpoint:
    path: /contactverify
    method: GET
- name: Fuzzy Match
  endpoint:
    path: /fuzzymatch
    method: GET
- name: Generalized Cleanser
  endpoint:
    path: /generalizedcleanser
    method: GET
- name: Global Verify
  endpoint:
    path: /globalverify
    method: GET
- name: IP Locator
  endpoint:
    path: /iplocator
    method: GET
- name: MatchUp
  endpoint:
    path: /matchup
    method: GET
- name: Personator
  endpoint:
    path: /personator
    method: GET
- name: Personator World
  endpoint:
    path: /personatorworld
    method: GET
- name: Property
  endpoint:
    path: /property
    method: GET
- name: Profiler
  endpoint:
    path: /profiler
    method: GET
- name: SmartMover
  endpoint:
    path: /smartmover
    method: GET
- name: Contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Name Parse
  endpoint:
    path: /api/contact/verify/name
    method: POST
    data_selector: output
    params: {}
- name: Address Verify
  endpoint:
    path: /api/contact/verify/address
    method: POST
    data_selector: output
    params: {}
- name: Address Verify Options
  endpoint:
    path: /address/verify
    method: POST
    data_selector: results
    params: {}
- name: Email Standardization Options
  endpoint:
    path: /email/standardization/options
    method: GET
    data_selector: options
    params: {}
- name: Output Columns
  endpoint:
    path: /email/output/columns
    method: GET
    data_selector: columns
    params: {}
- name: Result Codes
  endpoint:
    path: /email/result/codes
    method: GET
    data_selector: result_codes
    params: {}
- name: Business Coder
  endpoint:
    path: /dqc-ssis-components/businesscoder
    method: GET
    data_selector: component
    params: {}
- name: Contact Verify
  endpoint:
    path: /dqc-ssis-components/contactverify
    method: GET
    data_selector: component
    params: {}
- name: Fuzzy Match
  endpoint:
    path: /dqc-ssis-components/fuzzymatch
    method: GET
    data_selector: component
    params: {}
- name: Generalized Cleanser
  endpoint:
    path: /dqc-ssis-components/generalizedcleanser
    method: GET
    data_selector: component
    params: {}
- name: Global Verify
  endpoint:
    path: /dqc-ssis-components/globalverify
    method: GET
    data_selector: component
    params: {}
- name: IP Locator
  endpoint:
    path: /dqc-ssis-components/iplocator
    method: GET
    data_selector: component
    params: {}
- name: MatchUp
  endpoint:
    path: /dqc-ssis-components/matchup
    method: GET
    data_selector: component
    params: {}
- name: Personator
  endpoint:
    path: /dqc-ssis-components/personator
    method: GET
    data_selector: component
    params: {}
- name: Personator World
  endpoint:
    path: /dqc-ssis-components/personatorworld
    method: GET
    data_selector: component
    params: {}
- name: Property
  endpoint:
    path: /dqc-ssis-components/property
    method: GET
    data_selector: component
    params: {}
- name: Profiler
  endpoint:
    path: /dqc-ssis-components/profiler
    method: GET
    data_selector: component
    params: {}
- name: SmartMover
  endpoint:
    path: /dqc-ssis-components/smartmover
    method: GET
    data_selector: component
    params: {}
- name: Input Columns
  endpoint:
    path: /global-verify/input-columns
    method: GET
    data_selector: records
- name: Output Columns
  endpoint:
    path: /global-verify/output-columns
    method: GET
    data_selector: records
- name: phone_verification
  endpoint:
    path: /verify/phone
    method: POST
    data_selector: results
    params: {}
- name: email_verification
  endpoint:
    path: /verify/email
    method: POST
    data_selector: results
    params: {}
- name: domain_verification
  endpoint:
    path: /verify/domain
    method: POST
    data_selector: results
    params: {}
- name: Contact Verify - Cloud API version
  endpoint:
    path: /ContactVerify
    method: GET
    data_selector: records
    params: {}
- name: Business Coder
  endpoint:
    path: /BusinessCoder
    method: GET
    data_selector: records
    params: {}
- name: Global Verify
  endpoint:
    path: /GlobalVerify
    method: GET
    data_selector: records
    params: {}
- name: IP Locator
  endpoint:
    path: /IPLocator
    method: GET
    data_selector: records
    params: {}
- name: Personator Consumer
  endpoint:
    path: /PersonatorConsumer
    method: GET
    data_selector: records
    params: {}
- name: Property
  endpoint:
    path: /Property
    method: GET
    data_selector: records
    params: {}
- name: Smart Mover
  endpoint:
    path: /SmartMover
    method: GET
    data_selector: records
    params: {}
- name: On-Premise Settings
  endpoint:
    path: /on-premise/settings
    method: GET
- name: Test Configuration
  endpoint:
    path: /test/configuration
    method: GET
- name: DependenciesADF
  endpoint:
    path: /Download/Interface/WINDOWS/ADF/ANY/2025.Q1/DependenciesADF.zip
    method: GET
    data_selector: records
    params:
      LicenseKey: '{{LicenseKey}}'
- name: MelissaUpdater
  endpoint:
    path: /Download/Library/WINDOWS/NET/ANY/latest/MelissaUpdater.exe
    method: GET
    data_selector: records
    params: {}
- name: BlobStorage
  endpoint:
    path: /<your_storage_account>.blob.core.windows.net/<your_container_name>?<your_sas_token>
    method: GET
    data_selector: records
    params: {}
- name: matchcode_combinations
  endpoint:
    path: /matchcodes/combinations
    method: GET
    data_selector: combinations
- name: matching_algorithms
  endpoint:
    path: /matchcodes/algorithms
    method: GET
    data_selector: algorithms
- name: Name Parse
  endpoint:
    path: /contact-verify/name-parse
    method: GET
    data_selector: fields
    params: {}
- name: Address Verify
  endpoint:
    path: /contact-verify/address-verify
    method: GET
    data_selector: fields
    params: {}
- name: address_verification
  endpoint:
    path: /address/verify
    method: POST
    data_selector: results
    params: {}
- name: phone
  endpoint:
    path: /phone
    method: GET
    data_selector: Phone Number
- name: email
  endpoint:
    path: /email
    method: GET
    data_selector: Email Domain
- name: EmailStandardization
  endpoint:
    path: /email/standardization
    method: POST
    data_selector: results
    params: {}
- name: email_validation
  endpoint:
    path: /email/validate
    method: POST
    data_selector: results
    params: {}
- name: Fuzzy Match Component
  endpoint:
    path: /fuzzy-match
    method: GET
    data_selector: results
- name: Input Field
  endpoint:
    path: /inputField
    method: GET
- name: Analysis Options
  endpoint:
    path: /analysisOptions
    method: GET
- name: Output
  endpoint:
    path: /output
    method: GET
- name: Phone Verification
  endpoint:
    path: /verify/phone
    method: POST
    data_selector: results
- name: Email Verification
  endpoint:
    path: /verify/email
    method: POST
    data_selector: results
- name: Input Columns
  endpoint:
    path: /InputColumns
    method: GET
- name: Output Columns
  endpoint:
    path: /OutputColumns
    method: GET
- name: Processing Options
  endpoint:
    path: /ProcessingOptions
    method: GET
- name: Output Filter
  endpoint:
    path: /OutputFilter
    method: GET
- name: Source Mapping
  endpoint:
    path: /matchup/source_mapping
    method: GET
- name: Lookup Mapping
  endpoint:
    path: /matchup/lookup_mapping
    method: GET
- name: Matchcode Data
  endpoint:
    path: /matchup/matchcode_data
    method: GET
- name: Golden Record Selection
  endpoint:
    path: /matchup/golden_record_selection
    method: GET
- name: swap_pair
  endpoint:
    path: /swap_pair
    method: GET
    data_selector: swap_pairs
    params: {}
- name: matching_algorithms
  endpoint:
    path: /matching_algorithms
    method: GET
    data_selector: algorithms
    params: {}
- name: contact_verify
  endpoint:
    path: /api/v1/contact_verify
    method: POST
    data_selector: records
- name: fuzzy_matching
  endpoint:
    path: /api/v1/fuzzy_matching
    method: POST
    data_selector: results
- name: Phone
  endpoint:
    path: /phone/verify
    method: POST
    data_selector: results
- name: Email
  endpoint:
    path: /email/verify
    method: POST
    data_selector: results
- name: Address
  endpoint:
    path: /address/verify
    method: POST
    data_selector: results
- name: Data Analysis Summary
  endpoint:
    path: /data/analysis/summary
    method: GET
    data_selector: records
- name: Input Field
  endpoint:
    path: /profiler/input_field
    method: GET
    data_selector: records
- name: Analysis Options
  endpoint:
    path: /profiler/analysis_options
    method: GET
    data_selector: records
- name: Output
  endpoint:
    path: /profiler/output
    method: GET
    data_selector: records
- name: Advanced Settings
  endpoint:
    path: /profiler/advanced_settings
    method: GET
    data_selector: records
- name: RecordCount
  endpoint:
    path: /profiler/recordcount
    method: GET
    data_selector: records
- name: EmptyCount
  endpoint:
    path: /profiler/emptycount
    method: GET
    data_selector: records
- name: NullCount
  endpoint:
    path: /profiler/nullcount
    method: GET
    data_selector: records
- name: ExactMatchDistinctCount
  endpoint:
    path: /profiler/exactmatchdistinctcount
    method: GET
    data_selector: records
- name: ExactMatchDupesCount
  endpoint:
    path: /profiler/exactmatchdupescount
    method: GET
    data_selector: records
- name: ExactMatchLargestGroup
  endpoint:
    path: /profiler/exactmatchlargestgroup
    method: GET
    data_selector: records
- name: ContactMatchDistinctCount
  endpoint:
    path: /profiler/contactmatchdistinctcount
    method: GET
    data_selector: records
- name: ContactMatchDupesCount
  endpoint:
    path: /profiler/contactmatchdupescount
    method: GET
    data_selector: records
- name: ContactMatchLargestGroup
  endpoint:
    path: /profiler/contactmatchlargestgroup
    method: GET
    data_selector: records
- name: HoueholdMatchDistinctCount
  endpoint:
    path: /profiler/houeholdmatchdistinctcount
    method: GET
    data_selector: records
- name: HoueholdMatchDupesCount
  endpoint:
    path: /profiler/houeholdmatchdupescount
    method: GET
    data_selector: records
- name: HoueholdMatchLargestGroup
  endpoint:
    path: /profiler/houeholdmatchlargestgroup
    method: GET
    data_selector: records
- name: AddressMatchDistinctCount
  endpoint:
    path: /profiler/addressmatchdistinctcount
    method: GET
    data_selector: records
- name: AddressMatchDupesCount
  endpoint:
    path: /profiler/addressmatchdupescount
    method: GET
    data_selector: records
- name: AddressMatchLargestGroup
  endpoint:
    path: /profiler/addressmatchlargestgroup
    method: GET
    data_selector: records
- name: Input Columns
  endpoint:
    path: /api/smartmover/input_columns
    method: GET
    data_selector: fields
    params: {}
- name: Output Columns
  endpoint:
    path: /api/smartmover/output_columns
    method: GET
    data_selector: fields
    params: {}
- name: Processing Options
  endpoint:
    path: /api/smartmover/processing_options
    method: GET
    data_selector: options
    params: {}
- name: Output Filter
  endpoint:
    path: /api/smartmover/output_filter
    method: GET
    data_selector: filters
    params: {}
- name: input_columns
  endpoint:
    path: /input_columns
    method: GET
    data_selector: columns
    params: {}
- name: output_columns
  endpoint:
    path: /output_columns
    method: GET
    data_selector: columns
    params: {}
- name: SSIS Best Practices
  endpoint:
    path: /ssis/best-practices
    method: GET
    data_selector: records
- name: Melissa’s SSIS 2012 Platform Deprecation FAQ
  endpoint:
    path: /ssis/2012-platform-deprecation-faq
    method: GET
    data_selector: records
- name: landing_page
  endpoint:
    path: /landing-pages
    method: POST
    data_selector: response
    params: {}
- name: form_submission
  endpoint:
    path: /form-submissions
    method: POST
    data_selector: response
    params: {}
- name: report
  endpoint:
    path: /create/report
    method: POST
    data_selector: report_data
    params: {}
- name: NCOA
  endpoint:
    path: /smartmover/ncoa
    method: POST
    data_selector: results
    params: {}
- name: outputs
  endpoint:
    path: /ncoa/outputs
    method: GET
    data_selector: outputs
- name: mapping
  endpoint:
    path: /ncoa/mapping
    method: GET
    data_selector: mapping
- name: upload
  endpoint:
    path: /ncoa/upload
    method: POST
    data_selector: upload
- name: phone_details
  endpoint:
    path: /api/v1/phone/details
    method: GET
    data_selector: records
- name: outputs
  endpoint:
    path: /outputs
    method: GET
    data_selector: columns
    params: {}
- name: Address Check
  endpoint:
    path: /address/check
    method: GET
    data_selector: results
    params: {}
- name: Duplicate Check
  endpoint:
    path: /duplicate/check
    method: GET
    data_selector: duplicates
    params: {}
- name: Mailers Scorecard
  endpoint:
    path: /access/mailers/scorecard
    method: GET
    data_selector: scorecardData
    params: {}
- name: Qualification Report
  endpoint:
    path: /reports/qualification
    method: GET
    data_selector: qualificationData
    params: {}
- name: address_check
  endpoint:
    path: /address-check
    method: POST
    data_selector: records
- name: ncoa_update
  endpoint:
    path: /ncoa-update
    method: POST
    data_selector: records
- name: download_file
  endpoint:
    path: /Download/Library/WINDOWS/NET/ANY/latest/MelissaUpdater.exe
    method: GET
    data_selector: null
    params: {}
- name: download_manifest
  endpoint:
    path: /Download/Library/WINDOWS/NET/ANY/latest/MelissaUpdater
    method: GET
    data_selector: null
    params: {}
- name: download_product
  endpoint:
    path: /Download/Library/WINDOWS/NET/ANY/latest/MelissaUpdater
    method: GET
    data_selector: null
    params: {}
- name: verify_file_or_folder_path
  endpoint:
    path: /Download/Library/WINDOWS/NET/ANY/latest/MelissaUpdater
    method: GET
    data_selector: null
    params: {}
- name: download_file
  endpoint:
    path: /download/file
    method: GET
    data_selector: file
    params: {}
- name: download_manifest
  endpoint:
    path: /download/manifest
    method: GET
    data_selector: manifest
    params: {}
- name: download_product
  endpoint:
    path: /download/product
    method: GET
    data_selector: product
    params: {}
- name: verify
  endpoint:
    path: /verify
    method: GET
    data_selector: verification
    params: {}
- name: file
  endpoint:
    path: /file
    method: GET
    data_selector: files
    params: {}
- name: manifest
  endpoint:
    path: /manifest
    method: GET
    data_selector: manifests
    params: {}
- name: product
  endpoint:
    path: /product
    method: GET
    data_selector: products
    params: {}
- name: file
  endpoint:
    path: /file
    method: GET
    data_selector: records
- name: manifest
  endpoint:
    path: /manifest
    method: GET
    data_selector: records
- name: product
  endpoint:
    path: /product
    method: GET
    data_selector: records
- name: download_product
  endpoint:
    path: /product
    method: GET
    data_selector: product
    params: {}
- name: verify_path
  endpoint:
    path: /verify
    method: GET
    data_selector: path
    params: {}
- name: download_product
  endpoint:
    path: /download/product
    method: POST
    data_selector: results
    params: {}
- name: verify_path
  endpoint:
    path: /verify/path
    method: POST
    data_selector: results
    params: {}
- name: Single Verification Form
  endpoint:
    path: /single-verification
    method: POST
    data_selector: results
- name: Report Generator
  endpoint:
    path: /report-generator
    method: GET
    data_selector: reports
- name: VERIFY_SINGLE_ADDRESS
  endpoint:
    path: /global-address-verification/verify-single-address
    method: POST
- name: VERIFY_SINGLE_ADDRESS
  endpoint:
    path: /VERIFY_SINGLE_ADDRESS
    method: CALL
    data_selector: results
- name: VERIFY_MULTIPLE_ADDRESSES
  endpoint:
    path: /VERIFY_MULTIPLE_ADDRESSES
    method: CALL
    data_selector: results
- name: VERIFY_MULTIPLE_ADDRESSES
  endpoint:
    path: /verify/multiple/addresses
    method: CALL
    data_selector: results
    params:
      LICENSE: <REPLACE_WITH_YOUR_LICENSE_KEY>
      INPUT_TABLE_NAME: <INPUT_DATABASE>.<INPUT_SCHEMA>.<INPUT_TABLE>
      OUTPUT_TABLE_NAME: <OUTPUT_TABLE_NAME>
      OUTPUT_TABLE_FIELDS: <Field_1,Field_2>
- name: VERIFY_MULTIPLE_ADDRESSES
  endpoint:
    path: /verify_multiple_addresses
    method: CALL
    data_selector: records
- name: input_records
  endpoint:
    path: /IDENTIFIER($INPUT_TABLE_NAME)
    method: SELECT
    data_selector: '*'
    params: {}
- name: output_records
  endpoint:
    path: /IDENTIFIER($OUTPUT_TABLE_NAME)
    method: SELECT
    data_selector: '*'
    params: {}
- name: input_records
  endpoint:
    path: /IDENTIFIER($INPUT_TABLE_NAME)
    method: SELECT
    data_selector: '*'
    params: {}
- name: output_table
  endpoint:
    path: /IDENTIFIER($OUTPUT_TABLE_NAME)
    method: SELECT
    data_selector: '*'
    params: {}
- name: default_output_fields
  endpoint:
    path: /default/output/fields
    method: GET
    data_selector: fields
    params: {}
notes:
- We highly recommend first time users of our Cloud APIs to review our Using Melissa
  Cloud APIs section.
- When interacting with Melissa’s Cloud APIs, requests may occasionally fail due to
  network instability, temporary server issues, or rate limits. Integrating a robust
  retry mechanism into your request handling ensures that processes can continue smoothly
  despite intermittent disruptions.
- The following Melissa datacenter and IP information is intended to be used solely
  for firewall access.
- Melissa’s services are designed with data privacy principles in mind and comply
  with applicable regulations such as GDPR, CCPA, HITECH, and more.
- Make sure to replace {{customerId}} with your license key.
- Result codes yield more granular information about a given business.
- The SE## and GE## codes are used to signify more general errors.
- It is important to understand these result codes in order for you to make a determination
  of good vs bad data.
- The Business Coder Database is compiled from several sources and industries. The
  final combined database merges the data to about 15 million records of business
  information.
- Dynamic scaling utilized to improve throughput speeds during peak usage periods.
- Rate limiting enforced based on request volume and frequency.
- The Service Level result codes apply to the service as a whole.
- The Record Level result codes apply to the individual request records.
- The License Key is a software key required to use the Cloud API.
- 'Cost: 50 credits'
- 'Permission: Please contact the Cicero Team to request access to this resource.'
- Uses location queries on this resource.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- We ask that you limit API calls to 200 per minute.
- The service returns a unique request identifier.
- Total number of records is provided in the response.
- Default Address Lines return the entire address.
- Additional detailed results are available for US and CA addresses.
- TotalRecords field indicates the total number of records returned.
- Global Address uses UTF-8 Unicode encoding.
- Ensure data is in UTF-8 when sending to the service.
- Ensure data is in UTF-8 to avoid encoding issues.
- MELISSA_LICENSE_KEY is replaced with your license.
- 'Get your license key here: https://docs.melissa.com/melissa/license/license-information.html'
- Global Email will not support any wrongly-encoded special characters or non-Latin
  characters.
- Service expects UTF-8 encoding.
- Service Availability is 99.99%
- Recommended Timeout is 13 seconds
- Recommended Timeout is 13s
- Mailbox validation will only occur if the email passes our domain level and syntax
  level checks.
- The ES37 result code enhances both internal and client security by identifying potentially
  compromised email accounts.
- Emails marked with an ES37 code should not be dismissed as fraudulent solely based
  on this flag.
- License Key is required to use the Cloud API.
- A maximum of 10 records can be sent per POST request.
- Lists error codes from any errors caused by the most recent request.
- Make sure to replace `{{customerId}}` with your license key.
- Express Entry does not support batched requests.
- Your code will need to support the entry of the full address if it is not found
  in the database.
- Supports filtering of results by various criteria including postal code, state,
  and distance from a point.
- Results sorted by distance from a point with a maximum of 50 miles.
- Not every address will be found in Express Entry.
- More addresses will be added in future versions including new and rural addresses.
- Results sorted by distance from a point with a maximum of 50 miles
- Only results that are valid and deliverable according to USPS CASS processing
- Global IP only supports the JSON format for requests and responses.
- Melissa Cloud APIs are capable of both single record real-time processing and batch
  processing.
- Due to the nature of our business and our commitment to improving our services,
  there may be changes to the API.
- Global IP supports IPv6 Lookups.
- Melissa Cloud APIs are authenticated using a License Key.
- Global Name Cloud API is updated on a monthly basis.
- License Key is required to use the Cloud API
- A maximum of 100 records can be sent per request
- Global Name is a Cloud API used to split full names, assign genders and create salutations.
- You can send a single REST or batches of 100 records in XML or JSON format in a
  single request.
- This service can deal with multiple languages and scripts. It expects UTF-8 encoding.
- Premium phone verification is not made for batch processing and is meant for real-time
  checking of phone numbers for single record verification purposes.
- The License Key is required to use the Cloud API.
- A maximum of 100 records can be sent per request.
- Some objects like Contact may return nulls in deeply nested fields
- Global Phone is 90% accurate when identifying disconnected and invalid numbers for
  US and Canada.
- For countries outside US and Canada, the accuracy rate of the API is about 80%.
- Some carriers may stop supporting coverage for our premium services, and thus certain
  countries or carriers of countries can stop returning results.
- Requires OAuth setup
- Check for null values in response
- 'Required Subdomain Whitelist: https://md-datadownload.s3.amazonaws.com'
- 'When using Melissa Releases you will be redirected to a CDN. You will need to whitelist
  this subdomain: https://md-datadownload.s3.amazonaws.com'
- It is recommended to schedule regular calls to the endpoints to check for updates.
- Use the hash value endpoints to verify the integrity of downloaded files.
- It is recommended to schedule a call to check for updates on a regular basis (e.g.
  daily).
- Ensure to use the correct customer ID when accessing endpoints.
- Use %20 for any spaces in your request!
- phone is required.
- Default response includes TotalRecords, TransmissionReference, TransmissionResults,
  and Version.
- Some fields will return a GE29 error code when using credit licenses.
- The API supports multiple address formats.
- Results may vary based on the completeness of input data.
- Default settings may apply for parameters unless specified.
- Some objects may return nulls in deeply nested fields
- The server currently does not have a limit the amount of threads that you submit
  to it.
- Personator has a result code that specifically indicates that an address is vacant
  (AS16). Addresses marked with the AS16 result code should not be sent any mail at
  this time.
- Your License Key is your key to the service. As long as you put this ID in each
  request you will have access to all of the features you qualify for.
- Be on the lookout for question marks (?), squares (▖) or other unwanted characters
  like �. They may be an indication of encoding issues and may result in data loss.
- The location of the client server can affect speed.
- Real-time processing sends one record at a time, while batch processing sends up
  to 100 records.
- Addresses marked with the AS16 result code should not be sent any mail at this time.
- Requires API key for access.
- For specific countries, Personator Identity can also indicate if an individual has
  deceased.
- Responses will only be returned for the sample records, and require the exact input
  values.
- Default timeout is set to 2 seconds.
- Make sure to replace {{customerId}} with your license!
- License key is required to use the Cloud API.
- The Record Level product codes are unique to Personator Identity.
- Ensure to replace {{customerId}} with your license key.
- TransmissionReference is optional and serves as a unique request identifier.
- New to Melissa Cloud APIs?
- Default mode returns values as codes, can optionally return descriptions.
- Without a license key, Personator Search will not function.
- Melissa utilizes dynamic scaling to improve throughput speeds during peak usage
  periods.
- To maintain service stability and prevent excessive load, Melissa enforces rate
  limiting based on request volume and frequency.
- Uses a REST API to retrieve property data.
- Reverse Geo is updated on a scheduled quarterly basis.
- License key is required to use the API.
- Data is updated weekly with whatever updates we receive.
- Make sure to replace {{pafId}} with your paf id!
- JobId required to generate summary report links...
- Service supports only Canada and the United States.
- Change of Address data is sensitive as it contains PII data for millions of people.
- Proper rate limiting recommended.
- Currently only Canada and the United States are supported.
- Change of Address data is licensed directly from the USPS or CanadaPost agencies
  and we are required to keep track of all users.
- StreetRoute Cloud API allows optional request configurations to avoid road restrictions.
- Some endpoints may require specific parameters for execution.
- License key is required for API access
- StreetRoute Cloud API now allows the user to add ‘optional’ request configurations
  to avoid road restrictions, fixed links such as bridges and tunnels, marine links
  such as ferries, or request routeTypes such as shortest or fastest route.
- Currently, the travel time is calculated solely based on point A to point B using
  any known traffic conditions and route restrictions.
- For our services that allow GZip compression, turning it on can have up to a 10%
  increase in speed.
- Update records are identified by the primary key, which must be specified for each
  record in Records.
- If the table does not have a primary key, the records’ @record value should be used.
- If both are present in Records, @record will be used.
- Options available include CountAllRecords, IncludeNulls, JoinCondition, KeysAre@Records,
  and TransactionOrder.
- Table names must satisfy the regular expression “^[p{L}d_][p{L}ds_]{0,79}$”
- Column names must satisfy the regular expression “^[p{L}d_][p{L}ds_]{0,79}$”
- If PGSIZE and/or PGNO are not specified, the default page size is 1000 and the default
  page number is 0.
- Technical support is always free, as are the frequent updates, and many online resources
  found on our website.
- Ensure that the token is valid before making requests.
- The API has usage limits that should be monitored.
- Melissa APIs ship with native libraries for Linux, AIX, HPUX, Solaris, and Windows
  Operating Systems both 32/64 bit and with multiple compiler versions offered.
- Address Object corrects, verifies and enhances U.S. and Canadian addresses.
- Use the Melissa Updater to download the data files using the manifest named dq_addr_data.
- If you see a different date than expected, check your license string and either
  download the new data files or use the Melissa Updater program to update your data
  files.
- Requires setup of connected app in API
- The license string is included with the documentation you received.
- If a valid license string function is not set, Address Object will not operate.
- This function accepts a four-character maximum string value containing the name
  portion of a secondary address.
- Melissa APIs ship with native libraries for Linux, AIX, HPUX, Solaris, and Windows
  Operating Systems both 32/64 bit.
- Native 64-Bit width is the recommended architecture for using the libraries.
- We no longer generate wrapper libraries for DotNet and DotNetCore.
- We no longer generate a wrapper library for Python.
- Deprecated and Frozen. Removal from image on 2022-12-31
- To set a license, either configure the environmental variable for the license or
  use the method SetLicenseString.
- If an issue occurred while initializing the data files, this will throw
- This function must be called before the InitializeDataFiles function is called.
- U.S. Only functions return data related to addresses in the United States.
- Address Object accepts ASCII format only.
- No batch mode in Address Object; verifies one address at a time.
- Requires initialization with specified data files for functionality
- Make sure to replace {{license_key}} with your license key.
- License key required for service functionality.
- Ensure correct port number, license key, and data path.
- Record Level result codes apply to the individual request records.
- Email Object allows your Web sites and custom applications to update email addresses
  in your database files while verifying and correcting misspelled domain names.
- Uses Melissa Updater to download the data files using the manifest named dq_email_data.
- 'Default Values: SetCorrectSyntax - true, SetDatabaseLookup - true, SetFuzzyLookup
  - false, SetStandardizeCasing - true'
- ResultsCodes explain any issues Email Object has with the object.
- 'Default values for configuration methods include: SetCorrectSyntax - true, SetDatabaseLookup
  - true, SetFuzzyLookup - false, SetStandardizeCasing - true.'
- Email Object allows for easy customization of domain changes, common misspellings,
  and suppression of bad domains.
- The CorrectSyntax feature is enabled by default.
- The Database Lookup feature is enabled by default.
- The Standardize Casing feature is enabled by default.
- The Update Domain feature is enabled by default.
- Email Object allows for customization of domain changes, common misspellings, and
  suppression of bad domains.
- 'The Email Object has only 3 required data files: mdDomain.dat, mdEmail.ini, mdEmailConfig.ini.'
- See Data Coverage by Country.
- Known issues can be found at the provided link.
- GeoCoder Object enables access to geographic data using ZIP Code.
- To set a license, configure the environmental variable for the license or use the
  method SetLicenseString.
- Replace `PATH_TO_DATA_FILES` with your data file path.
- Handle potential issues while initializing the data files
- Uses Melissa Updater to download the data files
- MELISSA_LICENSE_STRING is replaced with your license.
- Replace PATH_TO_DATA_FILES with your data file path.
- Replace ZIP_STRING with a ZIP value or variable.
- If TEST appears with the build number, there may be a license key issue.
- Uses Melissa GeoCoder Object to access geographic data using ZIP Code.
- To use the GeoCoder Object, you can give it a license, data path, and ZIP code.
- Uses Melissa GeoCoder Object to access geographic data based on ZIP code.
- GeoCoder Object uses WGS 84 standard
- Census data changes and updates are made on a regular basis
- GeoCoder data expires nine months after the GeoCoder Object database date.
- GeoCoder is released as quarterly updates (Spring, Summer, Winter, Fall) and is
  valid for 9 months after its release.
- Service Level result codes apply to the service as a whole.
- Make sure to replace `{{license_key}}` with your license key.
- License Key required for API access.
- The License Key is a software key required to use the service.
- Without a license key this service will not function.
- Ensure Docker commands are free of typos and formatting issues before execution.
- The AddressKey is not guaranteed to be unique to an individual address.
- Some addresses may return nulls in deeply nested fields
- No authentication required for accessing the endpoints.
- Global Address Object corrects, verifies, and enhances Global addresses from over
  240 countries.
- International address data quality is a challenge for organizations of all sizes.
- Global Address Object can accept all address data for input through a set/get paradigm.
- Ensure that input parameters are set correctly before calling VerifyAddress.
- The output parameters can be retrieved only after a successful call to VerifyAddress.
- Global Address is designed to take full standard addresses.
- The only field that is really required is the country input.
- The only required field is the country input.
- Defaults to XML if format is not specified.
- Check that you have the correct port number, license key and data path!
- Self-hosting ensures compliance with data sovereignty requirements while providing
  better performance for low-latency or high-volume workloads.
- Default format is XML unless specified.
- Read/Write deduping is not usually the choice for ongoing or online processes.
- The Matchcode interface does not require a License Key.
- Fast processing, about 10-50 million records per hour
- Extremely flexible and customizable
- 22 powerful matching algorithms
- The key file does not persist beyond the deduping session.
- The Incremental interface relies heavily on a historical database that it maintains.
- 'Multi-User/Multi-Thread Considerations: The Incremental interface is unique in
  that multiple users or multiple processes can access the same historical database
  simultaneously.'
- The Hybrid interface does not maintain a key file of its own.
- The developer must maintain a list of match keys for deduping operations.
- Using the Matchcode interface does not require a License Key.
- Creating matchcodes programmatically is more complicated and advanced than using
  the Windows GUI editor.
- MatchUp Object Global is updated on a quarterly basis.
- The expected throughput is approximately 3,000,000 - 40,000,000 records per hour.
- MatchUp processes US, Canadian, and addresses from other countries.
- This algorithm was ported to MatchUp with the assumption that a character equals
  one byte, and therefore results may not be accurate if the data contains multi-byte
  characters.
- Frequently these components don’t match exactly because of ‘noise words’ such as
  “the,” “and,” “agency,” and so on. MatchUp strips these words from these components.
- MatchUp Object converts any multi-word company name into an acronym(for example,
  “International Business Machines” is squeezed into “IBM”). Single-word company names
  are left as they are. This conversion is done after noise words are removed.
- The seven street address components (Street Number, Street Pre-Directional, Street
  Name, Street Suffix, Street Post-Directional, PO Box, Street Secondary) are obtained
  by splitting up to three address lines. Note that PO Box and/or Street Secondary
  do not have to appear on their own line, or in a particular field. MatchUp’s proprietary
  “street smart” splitter does all of the work.
- When using the Full Address component, you are at the mercy of every little deviation
  in data entry. Because MatchUp Object’s street splitter is so powerful, it is preferable
  to use street address components instead of the Full Address in nearly all cases.
  The only exception may be when processing foreign addresses that don’t conform very
  well to US, Canadian or UK addressing formats.
- MatchUp Object removes dashes and spaces from ZIP codes. When processing a mix of
  Canadian Postal Codes and US ZIP codes, use the Zip9 component.
- MatchUp Object removes non-numeric characters from phone numbers. Leading ‘1-’ and
  trailing extensions are stripped if present. Numbers lacking an area code are right
  justified so that the local dialing code and number are aligned with numbers having
  area codes. If a data table often has missing or inaccurate area codes (i.e., after
  a recent area code split), start at the 4th position of the phone number component.
  Do not use the right most 7 positions, as badly formatted extensions can sometimes
  cause the phone number to get coded improperly.
- MatchUp Object removes illegal characters from e-mail addresses. Incomplete, changed,
  and commonly misspelled domain names are corrected using the Email Address data
  table.
- MatchUp Object allows you to specify a number of days for which a match will be
  possible if the records being compared fall within the set number of days apart.
- This allows you to specify an integer number for which a match will be possible
  if the record’s unit difference falls within the set number.
- The proximity component requires you to map in Latitude / Longitude coordinates(Not
  determined by MatchUp. Can be determined by a product such as GeoCoder or Contact
  Verify) allowing you to match addresses within a maximum distance setting for this
  component.
- MatchUp requires specific component orders when calling AddMappings methods.
- Back up your matchcode database occasionally to prevent data loss.
- Users should avoid overriding the default work file location unless necessary.
- Users who do not update to MatchUp build 2628 will experience an expired database
  (actual expiration date is 2015-12-29).
- 'IMPORTANT: because of the nature of International Data (different characters, encoding,
  etc) some of the domestic fuzzy algorithms may not return accurate results, and
  therefore should not be used in Global MatchUp.'
- Large or enterprise level batch runs where using this algorithm will not prevent
  efficient clustering.
- Databases created via real-time data entry where audio likeness errors are introduced.
- Databases of US and English language origin.
- Name Object automates the handling of name data.
- Use the Melissa Updater to download the data files using the manifest named dq_name_data.
- Uses the Melissa Updater to download data files using the manifest named dq_name_data.
- To use the Name Object, you can give it a first and last name.
- Uses method calls to process the input name and generate result codes
- Uses Melissa Updater to download data files using the manifest named dq_name_data.
- ResultsCodes explain any issues Name Object has with the object.
- This number should match with file properties of the Melissa Object binary file.
  If TEST appears with the build number, there may be a license key issue.
- Name Object automates the handling of name data, making it simple to send personalized
  business mail.
- Replace `NAME_STRING` with a full name value or variable.
- If a valid license string function is not set, Name Object will not operate.
- The SDK must be used with the same version of database files and DLL.
- If you do not run as administrator, you may receive an error during install.
- Initialization error 117 indicates a version mismatch between the DLL and the address
  database.
- The SDK requires address components to be passed for verification.
- Addresses not found cannot be standardized.
- If an address match WAS NOT FOUND, then these functions return ambiguous results.
- WARNING - YOU MUST ALWAYS USE THE DATABASE FILES AND DLL FROM THE SAME VERSION OF
  THE SDK.
- The SDK consists of a set of eight database files and a DLL search engine.
- The SDK can find exact county names, FIPS codes, and congressional districts for
  every address.
- The SDK is not CASS-certified by the US Postal Service (USPS), and therefore cannot
  be used to obtain postal discounts.
- Phone Object allows websites and custom applications to verify phone numbers down
  to 7 and 10 digits, update area codes, and append data about the phone number.
- To setup the data files, use the method Initialize with the data path as the parameter.
- To check at what date the database was updated, use the method GetDatabaseDate.
- The method GetBuildNumber gives the development build number of Phone Object.
- Replace PHONE_NUMBER_STRING with a phone number value or variable.
- Replace ZIP_CODE_STRING with a ZIP code value or variable.
- The Phone Object allows verification of phone numbers down to 7 and 10 digits.
- Can return result codes based on the validity of the phone number.
- Phone Object will operate in demonstration mode if the license string is not provided
- License string is necessary for full functionality
- The SDK processes only one address at any time.
- The Perfect Address SDK is not CASS-certified by the US Postal Service (USPS).
- Uses USPS address matching rules.
- Rejects addresses with multiple potential matches.
- Use the method ProfileData to initiate profiling
- Profiler Object is a data quality tool that provides statistical analysis and assessment
  of your data quality needs for consistency, uniqueness and correctness.
- The Profiler Object provides statistical analysis and assessment of data quality
  needs.
- 'Default Values: SetAppendMode - overwrite, SetSortAnalysis - true, SetMatchupAnalysis
  - true, SetRightFielderAnalysis - true, SetDataAggregationAnalysis - true'
- Phone Object allows verification of phone numbers down to 7 and 10 digits.
- Result codes can be generated based on the validity of the phone number.
- Profiler Object is a data quality tool for statistical analysis.
- Use the Melissa Updater for downloading data files.
- You must call StartProfiling before you start specifying column and row content.
- ResultsCodes explain any issues Profiler Object has with the object.
- Uses Melissa Updater to download the data files using the manifest named profiler_data.
- You must call the SetLicenseString function if you don’t have the MD_LICENSE environmental
  variable set prior to calling InitializeDataFiles.
- See Data Coverage by Country
- Known Issues are documented at https://wiki.melissadata.com/index.php?title=Issues:Phone_Object
- To use the Profiler Object, you can give it a license, data path, and input data.
- The Profiler Object is a data quality tool that provides statistical analysis and
  assessment of your data quality needs for consistency, uniqueness and correctness.
- Profiler Object is a data quality tool that provides statistical analysis and assessment
  of data quality needs.
- RightFielder Object will identify, parse and reorganize input data into usable data
  types, assuring that even the most inconsistent data entry will be properly validated
  and stored.
- Use the Melissa Updater to download the data files using the manifest named rf_data.
- RightFielder Object's powerful entity recognition and identification algorithms
  allow extraction of contact information from freeform or unfielded textual data.
- It can parse a single line of input text containing many datatypes - whether or
  not it contains a delimiter.
- The Melissa Updater program should be used to update data files.
- Result codes are returned as a single string separated by commas.
- RightFielder will have a much easier time with data already separated by table fields
  or columns.
- RightFielder does an excellent job with domestic US and Canadian data, recognizing
  the data types of other countries is beyond the scope of this program.
- Quick actions allow CleanSuite users to quickly process single records on demand.
- RightFielder will recognize various data types and re-field them appropriately.
- Melissa’s products use a result code system to indicate data quality; the status
  and any errors.
- This is an advanced topic, with descriptions and syntax for overriding the default
  tables are in the actual mdRightFielder.cfg. Please contact Melissa support with
  questions or advice before editing these tables, as any changes can significantly
  change the default behavior of the processor.
- Listware can work with any type of object including custom objects.
- Uses Lightning components for integration into Salesforce
- Melissa’s Data Quality Components for SSIS/ADF are a collection of data cleansing
  services.
- Folder names must match exactly as shown in the documentation for successful deployment.
- Folder names must match exactly as shown above.
- Do not rename or move files from the repo before uploading.
- You must have an account with Melissa in order to use the full features of Melissa’s
  Data Quality Components for SSIS.
- The following items should only be altered if directed by Melissa’s support staff.
- The Community Edition of Contact Verify allows you to explore the full capabilities
  of this component (with some limitations).
- Processing will be performed on this machine using local data files. This method
  is the fastest and most secure option as no data leaves your premises.
- Processing will be performed on Melissa’s servers using Cloud API protocols over
  the internet. This method is slower but no maintenance is required.
- Processing will be performed on a dedicated Contact Verification Server using Cloud
  API protocols.
- The Name Parse tab requires data from a single field for name parsing.
- Address verification requires mapping fields for street address, city, and state,
  or street address and ZIP Code.
- DPV processing is required to generate a CASS Form 3553.
- LACSLink processing is required to generate a CASS Form 3553.
- SuiteLink processing is required to generate a CASS Form 3553.
- AddressPlus requires a last name.
- SuiteLink requires a Company input column.
- The Fuzzy Match Component leverages a toolbox of state-of-the-art fuzzy matching
  algorithms and allows user-specified granular control on match thresholds.
- Melissa’s SSIS components must be installed to the same drive as the SQL Server
  Integration Services instance.
- There is a known issue with Windows 10 with SQL2012 + VS2010, if you have data viewer
  enabled it will hang the process.
- The License Key must be issued by your sales representative.
- The SSIS-IR deployment setup script relies on these precise folder names to deploy
  successfully.
- Global Address Object 32bit mdGlobalAddr.dll file was deprecated on April 24th 2023.
- SSIS Global Verify Cloud users will not be affected by this change.
- Supports verification of phone numbers, emails, and domains.
- The Community Edition of IP Locator allows you to explore the full capabilities
  of this component (with some limitations). Contact a Melissa sales representative
  for licensing information to unlock this component’s full functionality.
- Your License Key will activate the product for use.
- Path to the folder where MatchUp component will create temporary files must be provided.
- Requires setup of connected app in Melissa
- 'SAS Token should be generated with permissions: Read, Add, Create, Write, Delete,
  and List'
- 'Caution: The following items should only be altered if directed by Melissa’s support
  staff.'
- The Name Parse tab requires data from a single field in order to populate its output
  fields.
- For address verification, you must map fields for street address, city, and state,
  or street address and ZIP Code™.
- The License Key issued by your sales representative is required for processing.
- The Component will standardize and correct email addresses based on selected options.
- Component will output records in up to four streams.
- Filters are evaluated from the top down.
- The Fuzzy Match Component allows user-specified granular control on match thresholds.
- The component can use various fuzzy matching algorithms.
- The License Key issued by your sales representative is required for Melissa Cloud
  processing.
- The other settings on the Advanced Configuration screen should not be changed unless
  directed by Melissa Technical Support.
- The Global Address Object 32bit mdGlobalAddr.dll file was deprecated on April 24th
  2023.
- Existing SSIS Global Verify Address On Premise clients are encouraged to transition
  over to Melissa’s other Global Address Verification platforms.
- For Melissa Cloud processing, you need the License Key issued to you by your sales
  representative.
- The other settings on this part of the Advanced Configuration screen should not
  be changed unless you are specifically directed to do so by Melissa Technical Support.
- The Community Edition of IP Locator allows you to explore the full capabilities
  of this component (with some limitations). Contact a Melissa sales representative
  (call 1-800-MELISSA) for licensing information to unlock this component’s full functionality.
- Custom rules are an advanced subject.
- The default path should work unless you install the component to a different folder.
- These files will be deleted automatically once the process is finished.
- USPS regulations state we cannot process NCOA for files less than 100 records.
- Melissa SSIS includes the feature that you can save currents settings for future
  use.
- Requires setup of connected app in Melissa API
- Some components may have specific version requirements
- The following items should only be altered if directed by Melissa support staff.
- The SSIS package must be built for SQL Server 2017, as SSIS-IR in Azure Data Factory
  currently only supports SQL 2017 packages.
- The SSIS Integration Runtime (SSIS-IR) instance linked to this Azure SQL Server
  must be running at the time of package deployment.
- The Community Edition of SSIS has limited functionality.
- Melissa plans on supporting SSIS 2022 in the near future, pending the release of
  SQL Server Integration Services from Microsoft.
- Melissa recommends SSIS 2016+ platforms.
- HubSpot does not natively support the integration of external APIs within its forms.
- Community Edition has limited functionality
- Backup your configuration files for each project made in SSIS
- Melissa recommends SSIS 2016+ platforms. While SSIS 2014 is supported by Melissa,
  we plan to deprecate the SSIS 2014 platform next, in early 2025.
- Integration requires setup of HubSpot landing pages and forms.
- Test extensively after configuration to confirm form functionalities.
- Listware can only process 50,000 or fewer rows per run.
- Listware uses HTTPS - a secure version of the HTTP Protocol using SSL 128 Bit encryption.
  No personal information is ever kept or stored on the Melissa web servers.
- Check this options if you use a Proxy Server.
- Listware does not replace columns it appends new columns to the processed sheet.
- The input structure does not have to be any particular order.
- The service will try to match the columns automatically, but you may need to do
  some fine tuning.
- This application is not intended as a long-term or production/enterprise solution.
- This free software is provided as-is with no guarantees and is not intended as a
  long-term solution or production application.
- A CASS certificate is good for 90 days for a Carrier Route based mailing, 180 days
  for an Automation mailing and 1 year on a Non-Automation mailing.
- Only Automation pieces need to be CASS certified.
- CASS is automatically done when updating your file through NCOA/Listware.
- The maximum amount of records you can submit through Listware is 1 million records.
- Multiple files can only be opened when using the 'Duplicate Check' feature of MAILERS+4.
- The new functions of CASS Cycle M should not cause any delay in processing time.
- Mail Merge is a working feature of MAILERS+4 in the Professional version only.
- Requires a Mailers Identification (MID) and CRID from USPS Business Customer Gateway.
- NCOALink processing requires a completed Processing Acknowledgement Form (PAF).
- CASS certification is automatically done when updating your file through NCOA/Listware.
- NCOALink processing requires a completed PAF (Processing Acknowledgement Form) before
  running Mailers Online/Mailers Online PRO
- Easy access to Melissa’s powerful address verification to ensure better address
  accuracy.
- 'Known Issue: In some cases, you might get an error message at the API key validation
  step.'
- You cannot activate more than one trial on the same Dataverse organization without
  submitting a request to support.
- In some cases, you might get an error message when validating the API key.
- All data files and binaries should be from the same release.
- Be wary that downloading individual files could cause data conflicts.
- EU users will need to submit a valid license and modify the Actions to obtain verification
  results.
- For all other users, the license will be automatically detected with your login.
- No additional integration or development is required to gain access to the Single
  Verification Form.
- Trial accounts are not eligible for our key features.
- The Native Apps have a built-in timer that automatically stops the Streamlit interface
  after 5 minutes of inactivity.
- Trial accounts are not eligible for key features.
- For optimal performance, use a dedicated warehouse for Native Apps. A warehouse
  size of X-Small is typically sufficient.
- Native Apps are especially designed to process data in batches.
- Snowflake does not guarantee generating sequence numbers without gaps. The generated
  numbers are not necessarily contiguous.
- The stored procedures of the application only have owner’s rights within the application
  context, which limits the ability to make cross-schema calls.
- Currently, Snowflake does not support multi-threading for Native Apps directly.
- Some latency can be expected due to Snowflake’s security mechanisms, which may result
  in slightly slower performance compared to direct API requests.
- Melissa Native Apps are accessible for AWS, Microsoft Azure PrivateLink with some
  Known Limitations.
- The Native Apps utilize Snowflake’s infrastructure to process input data and manage
  output data seamlessly within the Snowflake platform.
- A trial account would not be able to use this application at the moment.
- You will need to do this step again after upgrading to a newer version.
- To get started, please contact a sales representative at Snowflakemarketplace@Melissa.com
  for your License Key.
- To get started, please contact a sales representative for your License Key.
- Input table must have all the *Required* columns. Otherwise, you will get a **“NoneType”**
  error.
- Output table will have a default schema if OUTPUT_TABLE_FIELDS is an empty string
  or not provided.
- Only tables created by the procedure call can be dropped.
errors:
- '429 Too Many Requests: Please see our Rate Limiting page'
- '400 Bad Request: This usually means that the JSON or XML request is not valid or
  does not contain data that the Cloud API expects'
- '404 Not Found: This means the expect website or web application was not found'
- '408 Request Timeout: If this error occurs, we recommend retrying the request up
  to 3 times'
- '429 Too Many Requests: Wait a second and re-send'
- '401 Unauthorized: Verify license string and expiration'
- 'FS01: A match was found in the data.'
- 'FS02: A match was found for the company.'
- 'FS03: A match was found for the input MAK.'
- 'FS04: A match was found for the input address.'
- 'FS05: A match was found for the input phone.'
- 'FS06: A match was found for the input stock ticker.'
- 'FS07: A match was found for the input web address.'
- 'FS08: A match was found for the input MEK.'
- 'FE01: No match was found.'
- 'FE02: The minimum input requirements were not met.'
- 'FE03: Multiple matches were found.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'GE04: Empty License Key - The License Key is empty.'
- 'GE05: Invalid License Key - The License Key is invalid.'
- 'GE06: Disabled License Key - The License Key is disabled.'
- 'GE09: Customer Does Not Exist - The Customer ID is not in our system.'
- 'GE10: Customer License Disabled - The encrypted license is on the ban list.'
- 'GE11: Customer Disabled - The Customer ID is disabled.'
- 'GE12: IP Blacklisted - The IP Address is on the global ban list.'
- 'GE13: IP Not Whitelisted - The IP Address is not on the customer’s whitelist.'
- 'GE14: Out of Credits - The account has ran out of credits. Add more credits to
  continue using the service.'
- 'GE25: No License For Business Demographic - The License Key is not subscribed/licensed
  for the requested business demographic(s).'
- 'GW01: Expiring License - Your License Key is expiring soon. Please contact your
  sales representative for a new License Key.'
- 'SE01: Cloud API Internal Error - The Cloud API experienced an internal error.'
- 'GE04: Empty License Key'
- 'GE05: Invalid License Key'
- 'GE06: Disabled License Key'
- 'GE09: Customer Does Not Exist'
- 'GE10: Customer License Disabled'
- 'GE11: Customer Disabled'
- 'GE12: IP Blacklisted'
- 'GE13: IP Not Whitelisted'
- 'GE14: Out of Credits'
- 'GE25: No License For Business Demographic'
- 'GW01: Expiring License'
- 'SE01: Cloud API Internal Error'
- 'AE01: General Error'
- 'AE02: Unknown Street'
- 'AE03: Component Mismatch Error'
- 'AE05: Multiple Match'
- 'AE08: Sub Premise Number Invalid'
- 'AE09: Sub Premise Number Missing'
- 'AE10: Premise Number Invalid'
- 'AE11: Premise Number Missing'
- 'AE12: Box Number Invalid'
- 'AE13: Box Number Missing'
- 'AE14: PMB Number Missing'
- 'AS01: Address Fully Verified'
- 'AS02: Valid Building Address'
- 'AS03: Non USPS Address Match'
- 'AS04: Proprietary Address Format'
- 'AS09: Foreign Address'
- 'AS10: CMRA Address'
- 'AS11: PBSA Address'
- 'AS12: Record Move'
- 'AS13: Address Updated By LACS'
- 'AS14: Suite Appended'
- 'AS15: Apartment Appended'
- 'AS16: Vacant Address'
- 'AS17: No USPS Mail Delivery'
- 'AS18: DPV Locked Out'
- 'AS20: Deliverable only by USPS'
- 'AS23: Extraneous Suite Information'
- 'AS24: USPS Door Not Accessible'
- 'AS25: Unique ZIP code'
- 'AS26: Unknown Data Moved to ParsedGarbage'
- 'AS27: Phantom Route address'
- 'DA00: Address Appended'
- 'DA20: Company Appended'
- 'DA30: Phone Appended'
- 'DA40: Email Appended'
- 'DA50: Web Address Appended'
- 'DA60: Stock Ticker Appended'
- 'FE01: No Match'
- 'FE02: Minimum Input Not Met'
- 'FE03: Multiple Matches'
- 'FS01: Data Match'
- 'FS02: Company Match'
- 'FS03: MAK Match'
- 'FS04: Address Match'
- 'FS05: Phone Match'
- 'FS06: Stock Ticker Match'
- 'FS07: Web Address Match'
- 'FS08: MEK Match'
- 'GE01: Regional Geocode Not Found'
- 'GE02: No Geocode for Input Address'
- 'GS01: Geocoded to Street Level'
- 'GS02: Geocoded to the Neighborhood Level'
- 'GS03: Geocoded to Community Level'
- 'GS05: Geocoded to Rooftop Level'
- 'GS06: Geocoded to Interpolated Rooftop Level'
- 'PE01: Invalid Phone'
- 'PE02: Blank Phone'
- 'PE03: Bad Phone'
- 'PE04: Multiple Match'
- 'PE05: Bad Prefix/Prefix +1'
- 'PS01: Valid Phone'
- 'PS02: 7-Digit Match'
- 'PS03: Corrected Area Code'
- 'PS06: Updated Area Code'
- 'PS07: Cellular Line'
- 'PS08: Land Line'
- 'PS09: VOIP Line'
- 'PS10: Residential Number'
- 'PS11: Business Number'
- 'PS12: SOHO Number'
- 'ME01: Invalid MAK'
- 'ME02: Invalid Lat/Long'
- 'ME03: Invalid Action Parameter'
- 'MS01: Unique Record'
- 'TransmissionResults: Lists error codes from any errors caused by the most recent
  request as a whole.'
- '401 Unauthorized: Check your CustomerID'
- 'AS09: The address is in a non-supported country.'
- 'AV25: The address has been verified to the SubPremise (Suite) or PO Box Level,
  which is the highest level possible with the reference data.'
- 'AV24: The address has been verified to the Premise (House or Building) Level, which
  is the highest level possible with the reference data.'
- 'AV23: The address has been verified to the Thoroughfare (Street) Level, which is
  the highest level possible with the reference data.'
- 'AV22: The address has been verified to the Locality (City) Level, which is the
  highest level possible with the reference data.'
- 'AV14: The address has been partially verified to the Premise (House or Building)
  Level, which is NOT the highest level possible with the reference data.'
- 'AV13: The address has been partially verified to the Thoroughfare (Street) Level,
  which is NOT the highest level possible with the reference data.'
- 'AV12: The address has been partially verified to the Locality (City) Level, which
  is NOT the highest level possible with the reference data.'
- 'AV11: The address has been partially verified to the Administrative Area (State)
  Level, which is NOT the highest level possible with the reference data.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- 'GE02: Empty Request Record Structure'
- 'GE03: Records Per Request Exceeded'
- 'GE08: Product/Level Not Enabled'
- 'AC01: Postal Code Change'
- 'AC02: Administrative Area Change'
- 'AC03: Locality Change'
- 'AC09: Dependent Locality Change'
- 'AC10: Thoroughfare Name Change'
- 'AC11: Thoroughfare Type Change'
- 'AC12: Thoroughfare Directional Change'
- 'AC13: Sub Premise Type Change'
- 'AC14: Sub Premise Number Change'
- 'AC15: Double Dependent Locality Change'
- 'AC16: SubAdministrative Area Change'
- 'AC17: SubNational Area Change'
- 'AC18: PO Box Change'
- 'AC19: Premise Type Change'
- 'AC20: House Number Change'
- 'AC22: Organization Change'
- 'AV11: Administrative Area Partial'
- 'AV12: Locality Partial'
- 'AV13: Thoroughfare Partial'
- 'AV14: Premise Partial'
- 'AV21: Administrative Area Full'
- 'AV22: Locality Full'
- 'AV23: Thoroughfare Full'
- 'AV24: Premises Full'
- 'AV25: SubPremises Full'
- 'GS04: Geocoded to State Level'
- 'SG01: Suggestions Found'
- 'SG02: No Suggestions Found'
- 'SG99: Suggestions Not Available'
- 'EE01: Email Syntax Error'
- 'EE02: Email Domain Not Found'
- 'EE03: Email Server Not Found'
- 'EE04: Invalid Email'
- 'GE01: Empty Request Structure'
- 'GE07: Invalid Request'
- 'DE03: Domain Not Found'
- 'DV01: Domain Found'
- 'ES01: Valid Email'
- 'ES03: Unknown Email'
- 'ES04: Mobile Email Address'
- 'ES05: Disposable Domain'
- 'ES06: Spamtrap Domain'
- 'ES07: Accept All Server'
- 'ES08: Role Address'
- 'ES09: Protected Mailbox Caution'
- 'ES10: Syntax Changed'
- 'ES11: Top Level Domain Changed'
- 'ES12: Domain Changed (Spelling)'
- 'ES13: Domain Changed (Update)'
- 'ES20: Verify (Precision: Domain Result)'
- 'ES21: Verify (Precision: Cached Mailbox Result)'
- 'ES22: Verify (Precision: Real-time Mailbox Result)'
- 'ES23: Verify (Precision: Unicode Result)'
- 'ES24: Verify (Precision: Pending Mailbox Result)'
- 'ES30: Privacy Flag (TLD)'
- 'ES31: Suspicious Characters'
- 'ES32: Phishing Domain'
- 'ES33: Scam Domain'
- 'ES34: Malware Domain'
- 'ES35: Malicious Domain'
- 'ES36: Spamtrap Mailbox'
- 'ES37: Breach Flag'
- 'ES03: Unknown email, validation call could not be completed.'
- 'EE01: Email Syntax Error: Reject'
- 'EE02: Email Domain Not Found: Reject'
- 'EE03: Email Server Not Found: Reject'
- 'EE04: Invalid Email: Reject'
- 'SE01: Cloud API Internal Error: Reject'
- 'GE01: Empty Request Structure: Reject'
- 'GE02: Empty Request Record Structure: Reject'
- 'GE03: Records Per Request Exceeded: Reject'
- 'GE04: Empty License Key: Reject'
- 'GE05: Invalid License Key: Reject'
- 'GE06: Disabled License Key: Reject'
- 'GE07: Invalid Request: Reject'
- 'GE08: Product/Level Not Enabled: Reject'
- 'GE09: Customer Does Not Exist: Reject'
- 'GE10: Customer License Disabled: Reject'
- 'GE11: Customer Disabled: Reject'
- 'GE12: IP Blacklisted: Reject'
- 'GE13: IP Not Whitelisted: Reject'
- 'ErrorString: Lists error codes from any errors caused by the most recent request.'
- 'ResultCode: Lists result codes for the most recent request.'
- 'XS01: The search was completed and the complete result set was returned.'
- 'XS02: The search was completed and a partial result set was returned.'
- 'XS03: The search was completed and no results were found.'
- 'GW10: Unrecognized Column Input'
- 'GW11: Option Name Error'
- 'GW12: Option Value Error'
- 'GW15: Both SortType and Preferred List Sort Requested'
- 'AE17: Sub Premise Not Required (Deprecated - See AS23)'
- 'XS01: Complete Result Set Returned'
- 'XS02: Partial Result Set Returned'
- 'XS03: No Results Returned'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Ensure the API key is valid.'
- '404 Not Found: Verify the endpoint path.'
- 'IS01: The IP Address was found in the database.'
- 'IS02: The IP Address not found in the database.'
- 'IS03: The IP Address is a proxy.'
- 'IS04: The IP Address entered is in the IPv6 Format.'
- 'IC01: White Space Removed'
- 'IE01: Empty or Malformed'
- 'IS01: IP Address Found'
- 'IS02: IP Address Not Found'
- 'IS03: Proxy IP Address'
- 'IS04: IPv6 Found'
- 'DE: Data Field Error'
- 'NE01: Unrecognized Format'
- 'NE02: Multiple First Names Detected'
- 'NE03: Vulgarity Detected'
- 'NE04: Suspicious Word Detected'
- 'NE05: Company Name Detected'
- 'NE06: Non-Alphabetic Character Detected'
- 'NE07: Multiple Names Split Detected'
- 'NE08: Unicode/Non-Latin Name Input'
- 'NE09: Multiple Formats Detected'
- 'NE10: Missing Minimum Name'
- 'NE11: Non-Name Word Detected'
- 'NE99: Company Standardization Not Needed'
- 'NS01: Parsing Successful'
- 'NS02: Error Parsing'
- 'NS03: First Name Spelling Corrected'
- 'NS04: First Name 2 Spelling Corrected'
- 'NS05: First Name 1 Found'
- 'NS06: Last Name 1 Found'
- 'NS07: First Name 2 Found'
- 'NS08: Last Name 2 Found'
- 'NS09: Dual-name Parsed'
- 'NS99: Company Name Standardized'
- 'NS02: An error was detected. Please check for a name error code.'
- 'NE03: A vulgarity was detected in the name.'
- 'NE04: The name contained words found on the list of nuisance names, such as “Mickey
  Mouse.”'
- 'GE26: CallerID Not Enabled'
- 'PE11: Disconnected Phone'
- 'PS18: Do Not Call'
- 'PS19: Disposable Phone Number'
- 'PS20: Low Confidence'
- 'PS22: High Confidence'
- 'PS30: Premium Timeout'
- 'PS31: CallerID Timeout'
- '401 Unauthorized: Check your credentials'
- '404 Not Found: Verify endpoint path'
- 'GE01: Empty Request Structure - The SOAP, JSON, or XML request structure is empty.'
- 'GE02: Empty Request Record Structure - The SOAP, JSON, or XML request record structure
  is empty.'
- 'GE03: Records Per Request Exceeded - The counted records sent more than the number
  of records allowed per request.'
- 'GE07: Invalid Request - The SOAP, JSON, or XML request is invalid.'
- 'GE08: Product/Level Not Enabled - The License Key is invalid for this product or
  level.'
- 'GE14: Out of Credits - The account has ran out of credits.'
- 'GE26: CallerID Not Enabled - The license key or ID does not have CallerID enabled.'
- 'PE01: Invalid Phone - The area code/phone number does not exist in our database
  or contains non-numbers.'
- 'PE02: Blank Phone - The phone number is blank.'
- 'PE03: Bad Phone - The phone number has too many or too few digits.'
- 'PE04: Multiple Match - Two or more possible area codes are available as a fix.'
- 'PE05: Bad Prefix/Prefix +1 - The phone prefix or first 7-digits do not exist in
  our database.'
- 'PE11: Disconnected Phone - Phone number has been disconnected.'
- 'PS01: Valid Phone - The phone number has been verified as valid.'
- 'PS07: Cellular Line - On activation, the exchange type of the phone number was
  designated as a cellular number.'
- 'PS08: Land Line - On activation, the exchange type of the phone number was designated
  as a land line.'
- 'PS18: Do Not Call - The phone number was found in Melissa’s proprietary Do Not
  Call list.'
- 'PS19: Disposable Phone Number - The phone number submitted was identified as a
  temporary number.'
- 'PS20: Low Confidence - Number exists within a block of registered phone numbers.'
- 'PS22: High Confidence - Number was verified against current dialing equipment.'
- 'PS30: Premium Timeout - Querying Premium has timed out.'
- 'PS31: CallerID Timeout - Querying CallerID has timed out.'
- 'ResultCode: Comma delimited status, error codes, and change codes for the request.'
- 'UE01: No Match: No match was found.'
- 'US01: Match Found: A match was found in the data.'
- '401 Unauthorized: Recheck license key or token expiration'
- 'GE29: Fields not available for credit licenses.'
- 'GE29: Action not allowed for a credit license'
- '404 Not Found: The requested resource could not be found.'
- '500 Internal Server Error: Try again later.'
- 'GE29: The requested field will not return for credit licenses'
- 'GE29: Fields labelled with this badge will not return for credit licenses.'
- 'GE20: Verify Not Activated'
- 'GE21: Append Not Activated'
- 'GE22: Move Not Activated'
- 'GE23: No Valid Action Requested'
- 'GE24: Demographics Not Activated'
- 'GE27: IP Columns Not Activated'
- 'GE29: Not Available for Credit License'
- 'SP01: No Action'
- 'AS16: Address marked as vacant.'
- 'INVALID_API_KEY: Check API key validity'
- 'RATE_LIMIT_EXCEEDED: Reduce the number of requests'
- 'TRANSACTION_LIMIT_EXCEEDED: Reduce the number of transactions in a single request.'
- 'INVALID_PARAMETER: Check the parameters being sent.'
- 'GE15: Unacceptable License Key'
- 'GE28: SSN Verification Not Activated'
- 'GE50: Job ID Not Found'
- 'GE51: Job Not Ready'
- 'GE52: No Record in Job'
- 'GE53: Record Total Mismatch'
- 'GE54: Job in Queue'
- 'GE55: Job Processing'
- 'GE56: Job Complete'
- 'GE57: Cloud API Internal Error'
- 'GE59: DataFrame Not Found'
- 'UE01: No Match'
- 'UE02: Record Limit Exceeded'
- 'UE03: Invalid Page Number'
- 'UE04: No Exact Matches'
- 'UE05: Invalid State or Zip'
- 'UE06: Name Character Limit Exceeded'
- 'US01: Match Found'
- 'US02: No Exact Match Found'
- 'US03: Too Many Matches'
- 'VS01: Historical Address Match'
- 'VS02: Partial Address Match'
- 'VS12: Last Name Match'
- 'VS13: First Name Match'
- 'AN01: Valid Account Number'
- 'AN02: Country Matched'
- 'AN10: IBAN'
- 'AN11: SWIFT'
- 'AN30: Invalid Account Number'
- 'AN31: Country Mismatched'
- 'DD00: Not Deceased'
- 'DD01: Deceased'
- 'ES02: Invalid Email'
- 'KE01-Personator: Timeout'
- 'KE02-Personator: Data Provider Unavailable'
- 'KV01: Address matched'
- 'KV10: Postal code matched'
- 'KV11: Administrative area (state/province) matched'
- 'KV12: Locality matched'
- 'KV13: Thoroughfare/street matched'
- 'KV14: Premise/house number matched'
- 'KV15: Subpremise matched'
- 'KV02: National ID matched'
- 'KV03: First/given/forename matched'
- 'KV31: First Initial Matched'
- 'KV32: Partial First Name Match'
- 'KV04: Last/surname matched'
- 'KV41: Partial Last Name Match'
- 'KV05: Phone number matched'
- 'KV50: Last 4 digits of phone matched'
- 'KV06: Email matched'
- 'KV07: Date of birth matched'
- 'KV70: Day of birth matched'
- 'KV71: Month of birth matched'
- 'KV72: Year of birth matched'
- 'KV08: Organization matched'
- 'KV91: First and last name swap match'
- 'KV92: Middle and first name swap match'
- 'KV93: Middle and last name swap match'
- 'KV94: Middle and first name swap partial match'
- 'KV95: Middle and last name swap partial match'
- 'Invalid LicenseKey: Check the LicenseKey provided in the request'
- 'Missing required fields: Ensure all required fields are included in the request'
- 'YS02: An Address match was found.'
- 'YS04: The detailed information was returned.'
- 'YS05: More than one match was found.'
- 'YS06: A match was made based on the APN number submitted.'
- 'YS07: A match was made based on the Melissa Address Key (MAK) number submitted.'
- 'YE01: No FIPS, APN, or AddressKey was provided.'
- 'YE02: Property data not available.'
- 'YE03: The FIPS, APN, or AddressKey provided was invalid.'
- 'GE15: Unacceptable License Key - License key not accepted, please request an encrypted
  license key from your sales representative.'
- 'GS##: Result codes yield more granular information about a given address.'
- 'GE54: Service timed out during processing.'
- 'GE50: Invalid Latitude/Longitude'
- 'GE51: No Points Found'
- 'GE52: Out of Region'
- 'GE53: Invalid LookUpList'
- 'GE54: Long Running Query'
- 'GS07: Records Found'
- 'AE04: Non-Deliverable Address'
- 'AE06: Early Warning System'
- 'AE07: Missing Minimum Address'
- 'AE21: MAK Not Found'
- 'YCXX: Count Reporting'
- 'YE01: No Address'
- 'YE02: No Property Data'
- 'YE03: Invalid Address'
- 'YS01: APN Match'
- 'YS02: Address Match'
- 'YS03: Basic Information'
- 'YS04: Detailed Information'
- 'YS05: Multiple Matches'
- 'YS06: APN Match'
- 'YS07: MAK Match'
- 'YS08: Transaction ID Match'
- 'GS07: Successful request'
- 'GS## and GE## Codes: Error codes and messages.'
- 'GS07: Address found.'
- 'GE01: Address not found.'
- 'GE54: Service could not perform all searches and computations necessary.'
- 'SN01: The SSN had too many or too few digits.'
- 'SN02: The SSN was not found in the reference database.'
- 'SN03: The SSN was found on the deceased list.'
- 'SN01: Invalid SSN Format or Number'
- 'SN02: SSN Not Found in our Records'
- 'SN03: SSN is on the DECEASED List'
- 'SN04: SSN and FULL Name Match our Records'
- 'SN05: SSN and LAST Name Match our Records'
- 'SN06: SSN and FIRST Name Match our Records'
- 'SN07: SSN and NAME do NOT Match our Records'
- 'SN08: SSN and LAST Name, First Name Initial Match our Records'
- 'AE**: Associated Error with input address'
- 'AC**: A change was made to an input address property'
- 'SR01: Distance Calculated'
- 'SR11: Input Error'
- 'SR12: Distance Not Calculated'
- 'SE00: Unexpected Error'
- 'SE10: Record Number Mismatch'
- 'SE11: Month Range Exceeded'
- 'SE12: Records Array Error'
- 'SE13: Requesting Record Range Exceeded'
- 'SE14: No Summary Reports'
- 'SE15: ProcessingType Error'
- 'SE16: FreqProcessing Range Exceeded'
- 'SE17: ListName Character Limit'
- 'SE18: ListName Invalid Character'
- 'SE19: Invalid Link'
- 'SE20: License Key Error'
- 'SE21: SmartMover Service Disabled'
- 'SE22: Long JobID'
- 'SE23: JobID Invalid Character'
- 'SE24: No JobID'
- 'SE25: Customer PAF Expired'
- 'SE26: Broker PAF Expired'
- 'SE27: NO PAFID Match'
- 'SE28: No PAFID'
- 'SE29: Unconfirmed PAFID'
- 'SE30: Empty XML'
- 'SE31: Empty Record Structure'
- 'SE32: Incorrect Action'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check your credentials and token expiration'
- '0: No error - initialization was successful.'
- '1: Could not open the mdAddr.dat file.'
- '2: Could not open the mdAddr.nat or mdAddr.str file.'
- '4: The internal database date of the mdAddr.dat and mdAddr.nat files do not match.'
- '5: Not all the memory buffers could be initialized.'
- '6: Unknown error.'
- '7: Error in Canada File.'
- '8: Expired Database.'
- '9: Canadian Database expired.'
- '10: DPV data files error.'
- '11: RBDI data files error.'
- '12: RBDI and US Data File dates do not match.'
- '13: LACSLink data files error.'
- '14: SuiteLink data files error.'
- '15: AddressPlus data files error.'
- 'INVALID_ADDRESS: Address could not be validated.'
- 'UNEXPECTED_ERROR: An unexpected error occurred during processing.'
- 'AE01: General Error - The address could not be verified. This is likely due to
  a missing or invalid locality or postal code.'
- 'AE02: Unknown Street - Could not match the input street to a unique street name.
  Either no matches or too many matches found.'
- 'AE03: Component Mismatch Error - The combination of directionals (N, E, SW, etc)
  and the suffix (AVE, ST, BLVD) is not correct and produced multiple possible matches.'
- 'AE02: Unknown Streets'
- 'AE03: Component Errors'
- 'M: Multiple Matches'
- 'Unauthorized: Ensure valid license key'
- 'Bad Request: Check request format or parameters'
- 'InitializationErrorCode_0: 0 - No error.'
- 'ErrorCode: '' '' - No Error'
- 'AC04: Alternate to Base Change'
- Result codes indicate the validity of the submitted email address, the reason for
  any errors, and any changes made to correct the submitted address.
- 'GW01: Your License Key is expiring soon. Please contact your sales representative
  for a new License Key.'
- 'GW02: Unable to report usage. Object will still continue to operate.'
- 'GW03: Unable to report usage. Warning time exceeded. Object will not continue to
  operate.'
- 'GW04: Unable to communicate with the web service to complete the requested call.
  Please double check any connections issues (e.g. proxy, firewall) and try again.'
- 'GW05: An active web service subscription is required to complete the request call
  but could not be found. Please contact your sales representative to activate.'
- 'EE01: There is a syntax error in the submitted email address.'
- 'EE02: A Domain of the submitted email address was not found.'
- 'EE03: The mail server of the submitted email address was not found.'
- 'EE04: An invalid mailbox was detected (i.e. noreply).'
- 'EE05: Email Object was not initialized properly. Please review your code and data
  files.'
- 'ES01: This email address has valid syntax and belongs to a valid domain.'
- 'ES02: This email was confirmed to be an invalid email.'
- 'ES03: This email’s status is unknown due to unknown external factors. Please try
  again another time.'
- 'ES04: The domain name was identified as a mobile email address and classified as
  not deliverable by the FCC.'
- 'ES05: The domain name of the submitted email was identified as a disposable domain.'
- 'ES06: The domain name of the submitted email was identified as a spamtrap. Mailing
  to this domain could result in the sender being blacklisted.'
- 'ES10: The syntax of the submitted email address was changed.'
- 'ES11: The top level domain of the submitted email address was changed.'
- 'ES12: The domain of the submitted email address was corrected for spelling.'
- 'ES13: The domain of the submitted email address was updated due to a domain name
  change.'
- 'ES02: This email was confirmed to be a invalid email.'
- 'GE01: Geocode could not be appended for the input locality or postal code.'
- 'GE02: The input address did not provide enough valid information to append a geocode.'
- 'GE03: Geocoder is in Demo mode and a zip code outside the Demo range was detected.'
- 'GE04: Geocoder data files are expired. Please update with the latest data files.'
- 'GE05: Geocoding for the country of input record is disabled for your License Key.
  Please contact your sales representative to enable.'
- 'GS01: The record was coded to the street level (Zip+4 for US, full postal code
  for CA).'
- 'GS02: The record was geocoded down to neighborhood level (Zip+2 for US).'
- 'GS03: The record was coded to the community level (ZIP centroid for US, 3-digit
  postal code for CA).'
- 'GS05: The record was geocoded down to the rooftop level, meaning the point is within
  the property boundaries, usually the center.'
- 'GS06: The record was geocoded down to the rooftop level using interpolation (educated
  estimations using street coordinates). The point may be in or close to the property
  boundaries.'
- 'AS09: Foreign Address - The address is in a non-supported country.'
- 'AC01: Postal Code Change - The postal code was changed or added.'
- 'AC02: Administrative Area Change - The administrative area (state, province) was
  added or changed.'
- 'AC03: Locality Change - The locality (city, municipality) name was added or changed.'
- 'AC09: Dependent Locality Change - The dependent locality (urbanization) was changed.'
- 'AC10: Thoroughfare Name Change - The thoroughfare (street) name was added or changed
  due to a spelling correction.'
- 'AC11: Thoroughfare Type Change - The thoroughfare (street) leading or trailing
  type was added or changed, such as from ''St'' to ''Rd.'''
- 'AC12: Thoroughfare Directional Change - The thoroughfare (street) pre-directional
  or post-directional was added or changed, such as from ''N'' to ''NW.'''
- 'AC13: Sub Premise Type Change - The sub premise (suite) type was added or changed,
  such as from ''STE'' to ''APT.'''
- 'AC14: Sub Premise Number Change - The sub premise (suite) unit number was added
  or changed.'
- 'AC15: Double Dependent Locality Change - The double dependent locality was added
  or changed.'
- 'AC16: SubAdministrative Area Change - The subadministrative area was added or changed.'
- 'AC17: SubNational Area Change - The subnational area was added or changed.'
- 'AC18: PO Box Change - The PO Box was added or changed.'
- 'AC19: Premise Type Change - The premise type was added or changed.'
- 'AC22: Organization Change - The organization was added or changed.'
- 'AE05: Multiple Match - The address was matched to multiple records. There is not
  enough information available in the address to break the tie between multiple records.'
- 'AE06: Early Warning System - US Only. This address currently cannot be verified
  but was identified by the Early Warning System (EWS) as belonging to a upcoming
  area and will likely be included in a future update.'
- 'AE07: Missing Minimum Address - Minimum requirements for the address to be verified
  is not met. Address must have at least one address line and also the postal code
  or the locality/administrative area.'
- 'AE08: Sub Premise Number Invalid - The thoroughfare (street address) was found
  but the sub premise (suite) was not valid.'
- 'AE09: Sub Premise Number Missing - The thoroughfare (street address) was found
  but the sub premise (suite) was missing.'
- 'AE10: Premise Number Invalid - The premise (house or building) number for the address
  is not valid.'
- 'AE11: Premise Number Missing - The premise (house or building) number for the address
  is missing.'
- 'AE12: Box Number Invalid - The PO (Post Office Box), RR (Rural Route), or HC (Highway
  Contract) Box number is invalid.'
- 'AE13: Box Number Missing - The PO (Post Office Box), RR (Rural Route), or HC (Highway
  Contract) Box number is missing.'
- 'AE14: PMB Number Missing - US Only. The address is a Commercial Mail Receiving
  Agency (CMRA) and the Private Mail Box (PMB or #) number is missing.'
- 'AV11: Administrative Area Partial - The address has been partially verified to
  the Administrative Area (State) Level, which is NOT the highest level possible with
  the reference data.'
- 'AV12: Locality Partial - The address has been partially verified to the Locality
  (City) Level, which is NOT the highest level possible with the reference data.'
- 'AV13: Thoroughfare Partial - The address has been partially verified to the Thoroughfare
  (Street) Level, which is NOT the highest level possible with the reference data.'
- 'AV14: Premise Partial - The address has been partially verified to the Premise
  (House or Building) Level, which is NOT the highest level possible with the reference
  data.'
- 'AV21: Administrative Area Full - The address has been verified to the Administrative
  Area (State) Level, which is the highest level possible with the reference data.'
- 'AV22: Locality Full - The address has been verified to the Locality (City) Level,
  which is the highest level possible with the reference data.'
- 'AV23: Thoroughfare Full - The address has been verified to the Thoroughfare (Street)
  Level, which is the highest level possible with the reference data.'
- 'AV24: Premises Full - The address has been verified to the Premise (House or Building)
  Level, which is the highest level possible with the reference data.'
- 'AV25: SubPremises Full - The address has been verified to the SubPremise (Suite)
  or PO Box Level, which is the highest level possible with the reference data.'
- 'GE01: Regional Geocode Not Found - Geocode could not be appended for the input
  locality or postal code.'
- 'GE02: No Geocode for Input Address - The input address did not provide enough valid
  information to append a geocode.'
- 'GE03: Demo Mode - Geocoder is in Demo mode and a zip code outside the Demo range
  was detected.'
- 'GE04: Data Files Expired - Geocoder data files are expired. Please update with
  the latest data files.'
- 'GS01: Geocoded to Street Level - The record was coded to the street level (Zip+4
  for US, full postal code for CA).'
- 'GS02: Geocoded to the Neighborhood Level - The record was geocoded down to neighborhood
  level (Zip+2 for US).'
- 'GS03: Geocoded to Community Level - The record was coded to the community level
  (ZIP centroid for US, 3-digit postal code for CA).'
- 'GS04: Geocoded to State Level - The record was geocoded to the state (administrative
  area) level.'
- 'GS05: Geocoded to Rooftop Level - The record was geocoded down to the rooftop level,
  meaning the point is within the property boundaries, usually the center.'
- 'GS06: Geocoded to Interpolated Rooftop Level - The record was geocoded down to
  the rooftop level using interpolation (educated estimations using street coordinates).'
- 'ErrorNone: No error - Initialization was successful.'
- 'ErrorConfigFile: Could not find mdMatchUp.dat.'
- 'ErrorLicenseExpired: The License Key has expired.'
- 'ErrorDatabaseExpired: The database has expired.'
- 'ErrorMatchcodeNotSpecified: No matchcode was specified.'
- 'ErrorMatchcodeNotFound: Specified Matchcode does not exist.'
- 'ErrorInvalidMatchcode: The specified matchcode is not valid.'
- 'ErrorKeyFile: The specified key file was not found.'
- No error
- Could not find mdMatchUp.dat.
- The License Key has expired.
- The database has expired.
- No matchcode was specified.
- Specified Matchcode does not exist.
- The specified matchcode is not valid.
- The specified key file was not found.
- 'MS01: The record did not match any other records.'
- 'MS02: The record matched other records and was tagged as the output record.'
- 'MS03: The record matched other records and was tagged as a duplicate.'
- 'MS04: ETL Only. The source record was suppressed.'
- 'MS05: ETL Only. The source record was not intersected.'
- 'MS06: Records were matched by matchcode combination 1.'
- 'MS07: Records were matched by matchcode combination 2.'
- 'MS08: Records were matched by matchcode combination 3.'
- 'MS09: Records were matched by matchcode combination 4.'
- 'MS10: Records were matched by matchcode combination 5.'
- 'MS11: Records were matched by matchcode combination 6.'
- 'MS12: Records were matched by matchcode combination 7.'
- 'MS13: Records were matched by matchcode combination 8.'
- 'MS14: Records were matched by matchcode combination 9.'
- 'MS15: Records were matched by matchcode combination 10.'
- 'MS16: Records were matched by matchcode combination 11.'
- 'MS17: Records were matched by matchcode combination 12.'
- 'MS18: Records were matched by matchcode combination 13.'
- 'MS19: Records were matched by matchcode combination 14.'
- 'MS20: Records were matched by matchcode combination 15.'
- 'MS21: Records were matched by matchcode combination 16.'
- 'MS30: ETL Only. The lookup record suppressed a source record.'
- 'MS31: ETL Only. The lookup record intersected a source record.'
- UTF-8 data.
- No error.
- '1 - ConfigFile: Could not find mdName.dat.'
- '2 - LicenseExpired: License key has expired.'
- '3 - Unknown: An unknown error has occurred.'
- 'NE01: Unrecognized Format - Format of Input string was not recognized or too long
  to represent a valid name.'
- 'NE02: Multiple First Names Detected - Multiple first names were detected and could
  not be accurately genderized.'
- 'NE03: Vulgarity Detected - A vulgarity was detected in the name.'
- 'NE04: Suspicious Word Detected - The name contained words found on the list of
  nuisance names, such as ''Mickey Mouse.'''
- 'NE05: Company Name Detected - The name contained words normally found in a company
  name.'
- 'NE06: Non-Alphabetic Character Detected - The name contained a non-alphabetic character.'
- 'NE07: Multiple Names Split Detected - Multiple names sets were detected when split,
  only the first two set are parsed.'
- 'NE09: Multiple Formats Detected - Multiple Formats - Forward and Inverse - Detected.'
- 'NE10: Missing Minimum Name - Minimum requirements for the name input data is not
  met. Name must have at least one Alpha Character to be parsed.'
- 'NE11: Non-Name Word Detected - Non-Name word such as a ''Dept.'' or Job Title detected.'
- 'NS01: Parsing Successful - Name parsing was successful.'
- 'NS02: Error Parsing - An error was detected. Please check for a name error code.'
- 'NS03: First Name Spelling Corrected - The spelling in the first name field was
  corrected.'
- 'NS04: First Name 2 Spelling Corrected - The spelling in the second first name field
  was corrected.'
- 'NS05: First Name 1 Found - FirstName1 was found in our census table of names. Very
  likely to be a real first name.'
- 'NS06: Last Name 1 Found - LastName1 was found in our census table of names. Very
  likely to be a real last name.'
- 'NS07: First Name 2 Found - FirstName2 was found in our census table of names. Very
  likely to be a real first name.'
- 'NS08: Last Name 2 Found - LastName2 was found in our census table of names. Very
  likely to be a real last name.'
- 'NS09: Dual-name Parsed - Input has dual-name contents and was split into two single-name
  outputs.'
- 'ERROR FE02: SDK access initialization file issue.'
- 'ERROR FE16: SDK initialization failure due to security rules.'
- 'ADDRESS_NOT_FOUND: No match possible using USPS address matching rules.'
- 'MULTIPLE_MATCHES_FOUND: More than one matching address was found.'
- 'NE04: Suspicious Word Detected - The name contained words found on the list of
  nuisance names, such as “Mickey Mouse.”'
- 'NE09: Multiple Formats Detected - Multiple Formats - Forward and Inverse - Detected'
- 'NE11: Non-Name Word Detected - Non-Name word such as a “Dept.” or Job Title detected.'
- '117: Version mismatch between the active DLL and the active address database.'
- 'No match found: Address cannot be standardized without a match.'
- 'Multiple matches found: Operator intervention required to resolve ambiguity.'
- '0: Address fully validated with no changes'
- 'Non-zero: Address was corrected, uncorrectable, or an error occurred'
- '1: No more cities associated with that ZIP code'
- '3: invalid handle or other error'
- '1: No more addresses'
- '2: Unable to verify city-state or ZIP code'
- '4: Unable to verify street name'
- '0: The address was verified with no changes'
- '1 - 49: The address was corrected as indicated'
- '50 - 79: The address could not be verified or corrected'
- '80 - 99: A non-fatal error occurred'
- '>= 100: DLL initialization failed'
- 'ECFATAL: Fatal initialization or memory allocation error'
- 'FE00: CASS CD-ROM database has expired (obsolete)'
- 'FE01: Memory (internal buffers) allocation error'
- 'FE02: Unable to open data file z1.dat'
- 'FE03: Error reading data file z1.dat'
- 'FE04: Unable to open data file z2.dat'
- 'FE05: Error reading data file z2.dat'
- 'FE06: Unable to open data file z3.dat'
- 'FE07: Error reading data file z3.dat'
- 'FE08: Unable to open data file z4.dat'
- 'FE09: Error reading data file z4.dat'
- 'FE10: Unable to open data file z5.dat'
- 'FE11: Error reading data file z5.dat'
- 'FE12: Unable to open data file z6.dat'
- 'FE13: Error reading data file z6.dat'
- 'FE14: Unable to open data file z7.dat'
- 'FE15: Error reading data file z7.dat'
- 'FE16: Unable to open data file z8.dat'
- 'FE17: Data file z8.dat version mismatch with DLL (wrong version)'
- 'FE18: Unable to find DLL params (UNZDLL.INI or Registry params)'
- 'FE19: Unable to allocate handle memory'
- 'INVALID_PHONE_NUMBER: The number provided is not valid'
- 'LICENSE_EXPIRED: The license string is no longer valid'
- 'XC_GOODADDR: Address was verified with no corrections'
- 'XC_ZIP: ZIP code or ZIP+4 added/corrected'
- 'XC_STATE: state name added/corrected'
- 'XC_CITY: city name added/corrected'
- 'XC_ADDR: street number and/or predirection corrected'
- 'XC_STREET: street name, suffix, and/or postdirection corrected'
- 'XC_POB: PO Box address corrected'
- 'XC_UNIT: Secondary address (apt/ste) corrected or ignored'
- 'XC_FIRM: Firm name not found, ignored'
- 'XC_URB: PR Urb name corrected'
- 'XC_CS: Missing city-state corrected to match ZIP'
- 'XC_NONDEL: Address verified, but USPS doesn’t deliver (no +4)'
- 'XC_EXTRA: Extraneous characters (ignored)'
- 'XC_GENDEL: General delivery default match (town has no street delivery)'
- 'XC_5DIG: Verified only 5-digit ZIP code'
- 'XC_BADCSZ: Total city-state-zip mismatch'
- 'XC_NODATA: Insufficient address data'
- 'XC_BADSTR: Street name not found'
- 'XC_BADNBR: Street number or box number out of range'
- 'XC_NOSTR: City has no streets (Unable to load street list)'
- 'XC_MULT: Multiple matching records'
- 'XC_BADURB: PR Urb not found in city street list'
- 'XC_FHERR: Firm/Highrise name conflict'
- 'RTE00: Invalid or missing parameter block'
- 'RTE01: Invalid handle parameter'
- 'RTE02: Missing function parameter'
- 'RTE03: z8.dat file seek error'
- 'RTE04: z8.dat file read error'
- 'RTE05: z8.dat record type error'
- 'RTE06: z8.dat record length error'
- 'RTE07: z8.dat record format error'
- 'RTE08: Corrupted Z1.DAT - Z7.DAT'
- 'RTE09: Z8.DAT file read error'
- 'RTE10: Z8.DAT file corrupted'
- 'RTE11: Z8.DAT file corrupted'
- 'RTE12: Z8.DAT file corrupted'
- 'XC_GOODZIP: Valid ZIP+4, single address found'
- 'XC_ARNG: Valid ZIP+4 applies to primary address range'
- 'XC_URNG: Valid ZIP+4 applies to secondary address range'
- 'XC_BADZIP: ZIP code format error (xxxxx or xxxxx-xxxx)'
- 'XC_ZNF: ZIP code not found'
- 'EC01: ZIP code added/corrected (corrected)'
- 'EC02: State code added/corrected (corrected)'
- 'EC03: City name added/corrected (corrected)'
- 'EC04: Total city-state-zip mismatch (uncorrectable)'
- 'EC05: Insufficient address data (uncorrectable)'
- 'EC06: city name corrected to preferred city (corrected)'
- 'EC07: Street name corrected (corrected)'
- 'EC08: Street not found (uncorrectable)'
- 'EC09: Street or box number not found (uncorrectable)'
- 'EC10: Apt/ste not found (address accepted)'
- 'EC15: Address corrected (corrected)'
- 'EC16: City-state missing (corrected)'
- 'EC17: No streets, matched to General Delivery ZIP+4'
- 'EC30: Firm/Highrise name conflict'
- 'EC31: Non-delivery address (corrected, but no ZIP+4)'
- 'EC32: Multiple matching records (uncorrectable)'
- 'EC33: Street name changed to preferred (corrected)'
- 'EC98: PR Urb not found in city street list (uncorrectable)'
- 'EC99: City has no streets (uncorrectable)'
- 'EC20: ZIP code format error'
- 'EC21: ZIP code not found'
- 'EC22: ZIP code applies to address range'
- 'EC23: ZIP code applies to unit range'
- 'EC24: Verified 5-digit ZIP code'
- 'XC_MULT: Multiple matching records found.'
- 'PC01: Country Changed - Global Phone Only. The country was added or changed to
  correspond to the phone number.'
- 'PE04: Multiple Match - Two or more possible area codes are available as a fix and
  their distance is too close to choose one over the other.'
- 'PE06: Bad Postal Code - The input postal code is invalid.'
- 'PE08: No Country Input - Global Phone Object Only. The input country is blank and
  the phone number has no ‘+’ sign.'
- 'PE09: Out of Range Suffix - Global Phone Object Only. The subscriber’s phone number
  suffix is out of range.'
- 'PE10: Invalid Input Country - Global Phone Object Only. The input country in not
  valid.'
- 'PS02: 7-Digit Match - The first 7-digits of the phone number have been verified,
  but activity cannot be confirmed.'
- 'PS03: Corrected Area Code - NewAreaCode contains corrected area code that was changed
  according to the postal code it falls into.'
- 'PS04: Demo Mode - Demo mode is active and the phone number is outside the range
  of phone numbers allowed by the Demo.'
- 'PS05: Database Expired - The phone database is expired. Please update your data.'
- 'PS06: Updated Area Code - The area code was changed due to an area code split.
  The updated code is located within NewAreaCode.'
- 'PS07: Cellular Line - On activation, the exchange type of the phone number was
  designated as a cellular number, but current status cannot be confirmed.'
- 'PS08: Land Line - On activation, the exchange type of the phone number was designated
  as a land line, but current status cannot be confirmed.'
- 'PS09: VOIP Line - On activation, the exchange type of the phone number was designated
  as a VOIP line, but current status cannot be confirmed.'
- 'PS10: Residential Number - The phone number belongs to a residence.'
- 'PS11: Business Number - The phone number belongs to a business.'
- 'PS12: SOHO Number - The phone number belongs to a small office or home office.'
- 'PS13: Toll Free Number - Global Phone Object Only. The phone number is a toll free
  number.'
- 'PS14: Special Number - Global Phone Object Only. This is a phone number with premium
  service, data, internet access, etc. which all incur a higher charge rate.'
- '1: Error in Configuration file.'
- '2: Database file expired.'
- '3: License Key expired.'
- '4: Error in Profile file'
- '5: Unknown error.'
- 'ErrorNone: No error - initialization was successful.'
- 'ErrorConfigFile: Error in Configuration file.'
- 'ErrorDatabaseExpired: Database file expired.'
- 'ErrorLicenseExpired: License Key expired.'
- 'ErrorProfileFile: Error in Profile file'
- 'ErrorUnknown: Unknown error.'
- 'QE01: Illegal UTF-8 Byte Sequence'
- 'QE03: Invalid Integer'
- 'QE04: Invalid Decimal'
- 'QE05: Invalid Floating Point'
- 'QE06: Invalid Date/Time'
- 'QE07: Invalid Boolean Value'
- 'QE08: Over Range'
- 'QE09: Under Range'
- 'QE10: Length Size Exceeded'
- 'QE11: Precision Exceeded'
- 'QE12: Precision Scale Exceeded'
- 'QE13: No Regular Expression Match'
- 'QE14: Data Type Mismatch'
- 'QE30: Unrecognized State/Province'
- 'QE40: Invalid ZIP Code'
- 'QE41: Invalid Postal Code'
- 'QE42: ZIP Code Mismatch'
- 'QE43: Postal Code Mismatch'
- 'QE50: Unrecognized Country'
- 'QE60: Incorrect E-mail Syntax'
- 'QE61: Misspelled Domain'
- 'QE70: Unrecognizable Phone'
- 'QE90: Unbalanced Text Qualifiers'
- 'QE91: Un-escaped Text Qualifiers'
- 'QS01: Empty Value'
- 'QS02: NULL Value'
- 'QS03: Default Value'
- 'QS04: Non-Printing Characters'
- 'QS05: Diacritic Characters'
- 'QS06: Non-English Characters'
- 'QS07: Decorative Characters'
- 'QS08: Alphabetic Characters'
- 'QS09: Numeric Characters'
- 'QS10: Alphabetic and Numeric Characters'
- 'QS11: Upper-Case Alphabetic Characters'
- 'QS12: Lower-Case Alphabetic Characters'
- 'QS13: Upper and Lower Alphabetic Characters'
- 'QS14: Single Space'
- 'QS15: Multiple Spaces'
- 'QS16: Leading Spaces'
- 'QS17: Trailing Spaces'
- 'QS18: Profanity'
- 'QS19: 2-digit Year'
- 'QS20: Inconsistent Name'
- 'QS21: Multiple Names'
- 'QS22: Suspicious Name'
- 'QS30: Non-Standard State/Province'
- 'QS40: 5-digit ZIP/Postal Code'
- 'QS50: Unrecognized Country ISO'
- 'QS60: Mobile Domain'
- 'QS61: Spam Trap Domain'
- 'QS62: Disposable Domain'
- 'QS90: Embedded Row Delimiter'
- 'QS91: Missing Fields'
- 'QS92: Extra Fields'
- 'ErrorConfigFile: Could not open mdRightFielder.dat'
- 'LicenseExpired: The license string has expired.'
- 'Unknown: An error has occurred other than the specific ones listed here.'
- 'INVALID_REQUEST: Check the request parameters.'
- 'NOT_FOUND: The specified resource could not be found.'
- 'RE01: Unrecognized Data Present'
- 'RE02: Incomplete Data'
- 'RE03: Demo Mode'
- 'RS01: Parse Successful'
- 'RS02: Foreign Address Detected'
- 'GW02: Usage Report Warning'
- 'GW03: Usage Report Error'
- 'GW04: Web Service Communication Error'
- 'GW05: Web Service Subscription Inactive'
- 'GW13: Phone Package Subscription Inactive'
- 'WSC00: Your request could not be processed due to an unexpected internal configuration
  error. Please contact your sales representative.'
- 'WSE00: Your request could not be processed due to an unexpected error. Please retry
  your request.'
- 'WSE03: Months to allow for NCOALink products ranges from 6 to 48.'
- 'WSE05: Records array is empty, un-allocated, or out of bounds.'
- 'WSE13: Requesting records must in the range of 1 and 500.'
- 'WSE14: Ticket or field does not exist in the summary report table.'
- 'WSE15: OptSmartMoverProcessingType is empty or incorrect type.'
- 'WSE16: OptSmartMoverListOwnerFreqProcessing ranges from 1 to 52.'
- 'WSE17: OptSmartMoverListName cannot contain over 30 characters.'
- 'WSE18: OptSmartMoverListName contains invalid special characters. It cannot contain
  any of the following characters / \ * : ? “ < > |.'
- 'WSE24: Invalid link.'
- 'WSE26: License Key is not valid, License Key is not enabled, or customer’s Paf
  is not on file.'
- 'WSE27: Smart Mover Service is not enabled for this License Key. Please contact
  your sales representative.'
- 'WSE28: JobID is too long. It cannot contain over 50 characters.'
- 'WSE29: JobID cannot contain some special characters. It cannot contain any of the
  following characters \ / \ * : ? " < > |, non-printing characters or spaces.'
- 'WSE31: JobId is required to open summary reports.'
- 'WSE32: Customer PAF expired. Please contact your sales representative.'
- 'WSE33: Broker PAF expired. Please contact your sales representative.'
- 'WSE34: PAFID does not match. Please contact your sales representative.'
- 'WSE35: Under broker customer required PAFID. Please contact your sales representative.'
- 'WSE36: PAFID has unconfirmed. Please contact your sales representative.'
- 'WSC00: Your request could not be processed due to an unexpected internal configuration
  error.'
- 'WSE00: Your request could not be processed due to an unexpected error.'
- 'WSE18: OptSmartMoverListName contains invalid special characters.'
- 'WSE27: Smart Mover Service is not enabled for this License Key.'
- 'WSE29: JobID cannot contain some special characters.'
- 'WSE32: Customer PAF expired.'
- 'WSE33: Broker PAF expired.'
- 'WSE34: PAFID does not match.'
- 'WSE35: Under broker customer required PAFID.'
- 'WSE36: PAFID has unconfirmed.'
- 'DE01: Missing or Invalid Input'
- 'DE02: No Records Found'
- 'DS01: Residential Address'
- 'DS02: Business Address'
- 'DS03: Unknown Address Type'
- 'EE05: Email Object not Initialized'
- 'GD01: Male'
- 'GD02: Female'
- 'GD03: Neutral'
- 'GE03: Demo Mode'
- 'GE04: Data Files Expired'
- 'GE05: License Not Enabled For Country'
- 'GS10: Wire Center Lat/Long'
- 'ID01: $0-$15,000'
- 'ID02: $15,001-$20,000'
- 'ID03: $20,001-$30,000'
- 'ID04: $30,001-$40,000'
- 'ID05: $40,001-$50,000'
- 'ID06: $50,001-$60,000'
- 'ID07: $60,001-$75,000'
- 'ID08: $75,001-$100,000'
- 'ID09: $100,001-$125,000'
- 'ID10: $125,001-$150,000'
- 'ID11: $150,001+'
- 'IE02: Not Initialized (Demo/Expired)'
- 'KA01: Abbreviation Change'
- 'KA02: No Abbreviation Change'
- 'KA03: No Abbreviation Trigger'
- 'KA04: Empty Abbreviation'
- 'KC01: Casing Change'
- 'KC02: No Casing Change'
- 'KC03: No Casing Trigger'
- 'KC04: Empty Casing'
- 'KE01: Transform Change'
- 'KE02: No Transform Change'
- 'KE03: No Transform Trigger'
- 'KE05: Invalid Transform'
- 'KP01: Punctuation Change'
- 'KP02: No Punctuation Change'
- 'KP03: No Punctuation Trigger'
- 'KP04: Empty Punctuation'
- 'KR01: Regular Expression Change'
- 'KR02: No Regular Expression Change'
- 'KR03: No Regular Expression Trigger'
- 'KR04: Empty Regular Expression'
- 'KR05: Invalid Regular Expression'
- 'KS01: Search Change'
- 'KS02: No Search Change'
- 'KS03: No Search Trigger'
- 'KS04: Empty Search'
- 'DE: The data field was empty.'
- 'DE01: The required input for the service was not met or was in an invalid format.'
- 'DE02: There was a search error: No records were found.'
- 'DE03: The domain is not a registered domain name.'
- 'DS01: The processed address is a residential address.'
- 'DS02: The processed address is a business address.'
- 'DS03: The address type could not be determined for the current address.'
- 'DV01: The domain is a valid registered domain name.'
- 'ES06: The domain name of the submitted email was identified as a spamtrap.'
- 'ES07: The mail server is an accept all server.'
- 'ES08: This Email address was created as a group, ex: sales@, support@, or postmaster@.'
- 'ES09: The mail provider for this email address may be quick to classify senders
  as spam.'
- 'ES20: The email is considered valid, but did not have the mailbox verified and
  not found in our mailbox database.'
- 'ES21: The mailbox was found to be already validated in our mailbox database.'
- 'ES22: The mailbox validation was performed in real-time.'
- 'ES23: Unicode Detected: We do not support Unicode at this time for realtime mailbox
  validation.'
- 'ES24: The mail provider has been known to send a delayed response so it is possible
  that the pending status will change within the next 24 hours.'
- 'GD01: This person is male.'
- 'GD02: This person is female.'
- 'GD03: The sex of this person cannot be determined from the first name.'
- 'GE05: Geocoding for the country of input record is disabled for your License Key.'
- 'GE50: The submitted latitude/longitude was not valid.'
- 'GE51: No points were found within the specified maximum distance.'
- 'GE52: The submitted latitude/longitude was not in the U.S. and no addresses were
  returned.'
- 'GE53: One or more of the input MAKs was not valid.'
- 'GE54: Could not return a response before service timed out.'
- 'GS01: The record was coded to the street level.'
- 'GS02: The record was geocoded down to neighborhood level.'
- 'GS03: The record was coded to the community level.'
- 'GS04: The record was geocoded to the state level.'
- 'GS05: The record was geocoded down to the rooftop level.'
- 'GS06: The record was geocoded down to the rooftop level using interpolation.'
- 'GS07: The service successfully reverse geocoded the input coordinates and returned
  addresses.'
- 'GS10: The latitude and longitude are based off of the wire center of the phone
  number.'
- 'IE01: The IP Address was empty or not well formed.'
- 'IE02: The Object could not be Initialized. This is possibly due to: demo mode,
  expired data, or an expired License Key.'
- 'KA01: The input value was changed.'
- 'KA02: The input value was not changed.'
- 'KA03: The input value did not trigger the operation.'
- 'KA04: The input value was empty or null and the operation did not process.'
- 'KC01: The input value was changed.'
- 'KC02: The input value was not changed.'
- 'KC03: The input value did not trigger the operation.'
- 'KC04: The input value was empty or null and the operation did not process.'
- 'KE01-Personator: Querying the data sources/providers has timed out.'
- 'KE02-Personator: The data provider is currently unavailable.'
- 'KE01: The input value was changed.'
- 'KE02: The input value was not changed.'
- 'KE03: The input value did not trigger the operation.'
- 'KE05: The expression was invalid.'
- 'KP01: The input value was changed.'
- 'KP02: The input value was not changed.'
- 'KP03: The input value did not trigger the operation.'
- 'KP04: The input value was empty or null and the operation did not process.'
- 'KR01: The input value was changed.'
- 'KR02: The input value was not changed.'
- 'KR03: The input value did not trigger the operation.'
- 'KR04: The input value was empty or null and the operation did not process.'
- 'KR05: The expression was invalid.'
- 'KS01: The input value was changed.'
- 'KS02: The input value was not changed.'
- 'KS03: The input value did not trigger the operation.'
- 'KS04: The input value was empty or null and the operation did not process.'
- 'KV01: Complete match found for address.'
- 'KV02: Complete match found for national ID.'
- 'KV03: Complete match found for first/given/forename name.'
- 'KV04: Complete match found for last/surname.'
- 'KV05: Complete match found for phone number.'
- 'KV06: Complete match found for the email address.'
- 'KV07: Complete match found for the date of birth.'
- 'KV08: Complete match found for the organization/company.'
- 'KV10: Complete match found for postal code.'
- 'KV11: Complete match found for administrative area (state/province).'
- 'KV12: Complete match found for locality.'
- 'KV13: Complete match found for thoroughfare.'
- 'KV14: Complete match found for premise/house number.'
- 'KV15: Complete match found for subpremise.'
- 'KV31: Match found for first initial.'
- 'KV32: Partial match found for first/given/forename name.'
- 'KV41: Partial match found for last/surname.'
- 'KV50: Match found for the last 4 digits of the phone number.'
- 'KV70: Match found for the day of birth.'
- 'KV71: Match found for the month of birth.'
- 'KV72: Match found for the year of birth.'
- 'KV91: First name and last name swapped for a full match.'
- 'KV92: Middle name and first name swapped for a full match.'
- 'KV93: Middle and last name swapped for a full match.'
- 'KV94: Middle and first name swapped for a partial match.'
- 'KV95: Middle and last name swapped for a partial match.'
- 'LD00: Less than 1 year'
- 'LD01: 1-2 years'
- 'LD02: 2-3 years'
- 'LD03: 3-4 years'
- 'LD04: 4-5 years'
- 'LD05: 5-6 years'
- 'LD06: 6-7 years'
- 'LD07: 7-8 years'
- 'LD08: 8-9 years'
- 'LD09: 9-10 years'
- 'LD10: 10-11 years'
- 'LD11: 11-12 years'
- 'LD12: 12-13 years'
- 'LD13: 13-14 years'
- 'LD14: 14-15 years'
- 'LD15: 15+ years'
- 'MD01: Definitely Single'
- 'MD02: Inferred Single'
- 'MD03: Inferred Married'
- 'MD04: Definitely Married'
- 'MS02: Has Duplicates'
- 'MS03: Is Duplicate'
- 'MS04: Record Suppressed'
- 'MS05: Record Not Intersected'
- 'MS06: Match: Rule 1'
- 'MS07: Match: Rule 2'
- 'MS08: Match: Rule 3'
- 'MS09: Match: Rule 4'
- 'MS10: Match: Rule 5'
- 'MS11: Match: Rule 6'
- 'MS12: Match: Rule 7'
- 'MS13: Match: Rule 8'
- 'MS14: Match: Rule 9'
- 'MS15: Match: Rule 10'
- 'MS16: Match: Rule 11'
- 'MS17: Match: Rule 12'
- 'MS18: Match: Rule 13'
- 'MS19: Match: Rule 14'
- 'MS20: Match: Rule 15'
- 'MS21: Match: Rule 16'
- 'MS30: Suppressor Record'
- 'MS31: Intersector Record'
- 'PC01: Country Changed'
- 'PCT-P: PO Box Postal Code'
- 'PCT-U: Unique Postal Code usually assigned to a large organization or government
  institution.'
- 'PCT-M: Military Postal Code'
- 'PCT-Empty: Regular postal code'
- 'PE06: Bad Postal Code'
- 'PE08: No Country Input'
- 'PE09: Out of Range Suffix'
- 'PE10: Invalid Input Country'
- 'PS04: Demo Mode'
- 'PS05: Database Expired'
- 'PS13: Toll Free Number'
- 'PS14: Special Number'
- 'PS15: Misc Type'
- 'PS16: Unknown Type'
- 'PS17: Live number'
- 'PS21: Medium Confidence'
- 'RD01: Definite Renter'
- 'RD02: Inferred Renter'
- 'RD03: Inferred Owner'
- 'RD04: Definite Owner'
- 'SN10: SSN Found in our Records'
- 'SS01-Personator: No Action'
- 'SS01: Records Within Range Returned'
- 'SS02: Records With Street Name Returned'
- 'SS03: First 1000 Streets Returned'
- 'UE07: Invalid State or Zip'
- 'UE08: Bad Search Term'
- 'UE09: Could Not Run'
- 'VR01: Individual and Address Match'
- 'VR02: Individual and Phone Match'
- 'VR03: Individual and Email Match'
- 'VR04: Address and Phone Match'
- 'VR05: Address and Email Match'
- 'VR06: Phone and Email Match'
- 'VR07: Organization and Address Match'
- 'VR08: Organization and Phone Match'
- 'VR09: Organization and Email Match'
- 'VR10: Organization and Individual Match'
- 'VR11: Name and SSN Match'
- 'VS00: Address Not Found'
- 'VS22: Partial Company Name Match'
- 'VS30: Phone Not Found'
- 'VS31: Historical Phone Match'
- 'VS40: Email Not Found'
- 'VS41: Historical Email Address'
- 'VS50: Last4 Only Match'
- 'WD01: Physician/Dentist'
- 'WD02: Healthcare'
- 'WD03: Lawyer/Judge'
- 'WD04: Professional/Technical'
- 'WD05: Management'
- 'WD06: Teacher/Educator'
- 'WD07: Sales/Marketing'
- 'WD08: Clerical/Service Worker'
- 'WD09: Tradesmen/Laborer'
- 'WD10: Farmer'
- 'WD11: Student'
- 'WD12: Homemaker'
- 'WD13: Retired'
- 'WD14: Federal Employee'
- 'WD15: Military'
- 'WD16: Military Retired'
- 'WD17: Business Owner'
- 'WD18: Religious'
- 'WD19: Self Employed'
- 'WD20: Financial'
- 'WD99: Other'
- 'YC01: 1 record found'
- 'ZE01: Required Input Missing'
- 'ZE02: No Records Found'
- 'ZS01: Successful Cities in Zip Code Search'
- 'ZS02: Successful Zip Code in City Search'
- 'ZS03: Successful Cities in State Search'
- '0x80004005: Insufficient privileges can prevent a project from successfully performing
  file operations at runtime.'
- 'INVALID_REQUEST: Check the request parameters'
- 'RATE_LIMIT_EXCEEDED: Reduce request frequency'
- '401 Unauthorized: Verify OAuth credentials'
- 'Invalid Permissions: Check user roles and permissions for Azure SQL Server.'
- 'Memory Allocation Errors: Ensure adequate memory is allocated for the SSIS package
  execution.'
- 'ES07: The mail server is an accept all server. Accept-All domains is set in a way
  that makes all emails seem valid.'
- 'ES09: The mail provider for this email address may be quick to classify senders
  as spam and will not respond to our requests. Mailbox validation is not possible
  at this time and the mailbox may or may not exist. We recommend proceeding with
  caution if emailing numerous records to this mail domain.'
- 'ES23: Unicode Detected: We do not support Unicode at this time for realtime mailbox
  validation. Domain and cache check only.'
- 'ES24: The mail provider has been known to send a delayed response so it is possible
  that the pending status will change within the next 24 hours. You may want to resubmit
  this input at a later time as an update may be possible.'
- 'ES30: The top level domain may be sensitive to privacy laws.'
- 'ES31: This email address has suspicious characters or characters which are not
  in the ASCII character set.'
- 'ES32: This domain has been flagged for phishing attacks. Emails from this domain
  may be part of an attempt to harvest your users’ personal information.'
- 'ES33: This domain has been linked to scam activity. Emails from this domain may
  be part of an attempt to swindle funds or securities from your users.'
- 'ES34: This domain was identified as being used in malware attacks. Emails from
  this domain may attempt to trick your users into installing malicious software such
  as viruses, spyware, ransomware, or adware.'
- 'ES35: The domain has been listed for malicious activity. Emails from this domain
  may be used by bad actors for nefarious purposes.'
- 'ES36: Indicates that we predict this email address is a spamtrap mailbox. Mailing
  to this specific mailbox could result in the sender being blacklisted.'
- 'ES37: This email has been exposed in a data breach.'
- 'FS03: A match was found for the input MAK (Melissa Address Key).'
- 'FS08: A match was found for the input MEK (Melissa Enterprise Key).'
- 'GE50: The submitted latitude/longitude was not valid. The service only accepts
  geo-coordinates in decimal formats.'
- 'GE51: No points were found within the specified maximum distance. You may need
  to increase MaxDistance.'
- 'GS04: The record was geocoded to the state (administrative area) level.'
- 'IC01: The IP Address had white space removed.'
- 'ID01: Household Income is between $0 and $15,000.'
- 'ID02: Household Income is between $15,001 and $20,000.'
- 'ID03: Household Income is between $20,001 and $30,000.'
- 'ID04: Household Income is between $30,001 and $40,000.'
- 'ID05: Household Income is between $40,001 and $50,000.'
- 'ID06: Household Income is between $50,001 and $60,000.'
- 'ID07: Household Income is between $60,001 and $75,000.'
- 'ID08: Household Income is between $75,001 and $100,000.'
- 'ID09: Household Income is between $80,001 and $125,000.'
- 'ID10: Household Income is between $125,001 and $150,000.'
- 'ID11: Household Income is above $150,001.'
- 'KA01: Abbreviation: The input value was changed.'
- 'KA02: Abbreviation: The input value was not changed.'
- 'KA03: Abbreviation: The input value did not trigger the operation.'
- 'KA04: Abbreviation: The input value was empty or null and the operation did not
  process.'
- 'KC01: Casing: The input value was changed.'
- 'KC02: Casing: The input value was not changed.'
- 'KC03: Casing: The input value did not trigger the operation.'
- 'KC04: Casing: The input value was empty or null and the operation did not process.'
- 'KE01-Personator: Querying the data sources/providers has timed out. Retry sending
  the Cloud API request.'
- 'KE02-Personator: The data provider is currently unavailable. Please wait and try
  again at a later time.'
- 'KP01: Punctuation: The input value was changed.'
- 'KP02: Punctuation: The input value was not changed.'
- 'KP03: Punctuation: The input value did not trigger the operation.'
- 'KP04: Punctuation: The input value was empty or null and the operation did not
  process.'
- 'KR01: Regular Expression: The input value was changed.'
- 'KR02: Regular Expression: The input value was not changed.'
- 'KR03: Regular Expression: The input value did not trigger the operation.'
- 'KR04: Regular Expression: The input value was empty or null and the operation did
  not process.'
- 'KR05: Regular Expression: The expression was invalid.'
- 'KS01: Search And Replace: The input value was changed.'
- 'KS02: Search And Replace: The input value was not changed.'
- 'KS03: Search And Replace: The input value did not trigger the operation.'
- 'KS04: Search And Replace: The input value was empty or null and the operation did
  not process.'
- 'KV31: Match found for first initial (from first/given name).'
- 'ES32: This domain has been flagged for phishing attacks.'
- 'ES33: This domain has been linked to scam activity.'
- 'ES34: This domain was identified as being used in malware attacks.'
- 'ES35: The domain has been listed for malicious activity.'
- 'ES36: Indicates that we predict this email address is a spamtrap mailbox.'
- 'GE04: Geocoder data files are expired.'
- 'IE02: The Object could not be Initialized.'
- 'KE01: Transform: The input value was changed.'
- 'KE02: Transform: The input value was not changed.'
- 'KE03: Transform: The input value did not trigger the operation.'
- 'KE05: Transform: The expression was invalid.'
- 'WSE13: Requesting records must be in the range of 1 and 500.'
- 'WSE18: OptSmartMoverListName contains invalid special characters. It cannot contain
  any of the following characters / * : ? “ < > |.'
- 'WSE29: JobID cannot contain some special characters. It cannot contain any of the
  following characters \ / * : ? " < > |, non-printing characters or spaces.'
- 'ES09: The mail provider for this email address may be quick to classify senders
  as spam and will not respond to our requests.'
- 'WSE18: OptSmartMoverListName contains invalid special characters. It cannot contain
  any of the following characters / \ * : ? “ < > |'
- 'KV11: Complete match found for administrative area.'
- 'LD00: The person has lived at this address for less than 1 year.'
- 'LD01: The person has lived at this address for 1 to 2 years.'
- 'LD02: The person has lived at this address for 2 to 3 years.'
- 'LD03: The person has lived at this address for 3 to 4 years.'
- 'LD04: The person has lived at this address for 4 to 5 years.'
- 'LD05: The person has lived at this address for 5 to 6 years.'
- 'LD06: The person has lived at this address for 6 to 7 years.'
- 'LD07: The person has lived at this address for 7 to 8 years.'
- 'LD08: The person has lived at this address for 8 to 9 years.'
- 'LD09: The person has lived at this address for 9 to 10 years.'
- 'LD10: The person has lived at this address for 10 to 11 years.'
- 'LD11: The person has lived at this address for 11 to 12 years.'
- 'LD12: The person has lived at this address for 12 to 13 years.'
- 'LD13: The person has lived at this address for 13 to 14 years.'
- 'LD14: The person has lived at this address for 14 to 15 years.'
- 'LD15: The person has lived at this address for more than 15 years.'
- 'MD01: This person is single'
- 'MD02: This person is most likely single'
- 'MD03: This person is most likely married'
- 'MD04: This person in married'
- 'PC01: Global Phone Only. The country was added or changed to correspond to the
  phone number.'
- 'PE01: The area code/phone number does not exist in our database or contains non-numbers.'
- 'PE02: The phone number is blank.'
- 'PE03: The phone number has too many or too few digits.'
- 'PE04: Two or more possible area codes are available as a fix and their distance
  is too close to choose one over the other.'
- 'PE05: The phone prefix or first 7-digits do not exist in our database.'
- 'PE06: The input postal code is invalid.'
- 'PE08: Global Phone Object Only. The input country is blank and the phone number
  has no ‘+’ sign.'
- 'PE09: Global Phone Object Only. The subscriber’s phone number suffix is out of
  range.'
- 'PE10: Global Phone Object Only. The input country in not valid.'
- 'PE11: Phone number has been disconnected.'
- 'PS01: The phone number has been verified as valid.'
- 'PS02: The first 7-digits of the phone number have been verified, but activity cannot
  be confirmed.'
- 'PS03: NewAreaCode contains corrected area code that was changed according to the
  postal code it falls into.'
- 'PS04: Demo mode is active and the phone number is outside the range of phone numbers
  allowed by the Demo.'
- 'PS05: The phone database is expired. Please update your data.'
- 'PS06: The area code was changed due to an area code split. The updated code is
  located within NewAreaCode.'
- 'PS07: On activation, the exchange type of the phone number was designated as a
  cellular number, but current status cannot be confirmed.'
- 'PS08: On activation, the exchange type of the phone number was designated as a
  land line, but current status cannot be confirmed.'
- 'PS09: On activation, the exchange type of the phone number was designated as a
  VOIP line, but current status cannot be confirmed.'
- 'PS10: The phone number belongs to a residence.'
- 'PS11: The phone number belongs to a business.'
- 'PS12: The phone number belongs to a small office or home office.'
- 'PS13: Global Phone Object Only. The phone number is a toll free number.'
- 'PS14: Global Phone Object Only. This is a phone number with premium service, data,
  internet access, etc. which all incur a higher charge rate.'
- 'PS15: The phone number is used for other services (calling cards, national numbers,
  directory assistance, mass communications, etc.)'
- 'PS16: Phone type is unknown due to external errors. Please try again at another
  time.'
- 'PS17: Phone is live, callable and/or able to receive SMS.'
- 'PS18: The phone number was found in Melissa’s proprietary Do Not Call list.'
- 'PS19: The phone number submitted was identified as a temporary number generally
  used to circumvent two factor authentication (2FA).'
- 'PS20: Number exists within a block of registered phone numbers.'
- 'PS21: Number was found to already be validated in our phone database.'
- 'PS22: Number was verified against current dialing equipment.'
- 'QS01: The value is empty or contains only spaces.'
- 'QS02: The value is NULL.'
- 'QS03: The value is equal to the user-specified default.'
- 'QS04: The value contains non-printing characters (e.g. printer control characters,
  etc.)'
- 'QS05: The value contains diacritic characters (e.g. accented characters.)'
- 'QS06: The value contains non-English characters.'
- 'QS07: The value contains decorative characters. Decorative characters are tabs,
  commas, or double quotes, found in the beginning or ending of the value.'
- 'QS08: The value contains only alphabetic characters.'
- 'QS09: The value contains only numeric characters.'
- 'QS10: The value contains both alphabetic and numeric characters.'
- 'QS11: The value contains only upper-case alphabetic characters, and may contain
  non-alphabetic characters.'
- 'QS12: The value contains only lower-case alphabetic characters, and may contain
  non-alphabetic characters.'
- 'QS13: The value contains both upper and lower-case alphabetic characters, and may
  contain non-alphabetic characters.'
- 'QS14: Only a single space separates the words in value.'
- 'QS15: Multiple spaces separate the words in value.'
- 'QS16: The value contains leading spaces.'
- 'QS17: The value contains trailing spaces.'
- 'QS18: The value contains profanity.'
- 'QS19: The date/time value lacks the year’s century.'
- 'QS20: The name value contains a name where the order is inconsistent with the user-specified
  data type.'
- 'QS21: The name value contains more than one contact name.'
- 'QS22: The name value contains a suspicious name.'
- GE** or SE** code indicates Service Level Error. This could be due to Transmission
  Error, invalid input, or other issues.
- 'Insufficient privileges: Contact your account admin to check the privileges of
  your role on objects, such as Warehouse, Database, Schema, Tables, Views, etc.'
- 'Object of type Decimal is not JSON serializable: Ensure that your input table has
  the correct data types for each column. This usually happens when the input table
  has a column with a NUMBER type instead of VARCHAR.'
- 'Name or service not known: Open the Native App, select Settings > Connections >
  Details, check the Network Rule name and the External Access Integration name.'
- 'Integration ''reference(''API'')'' is not enabled.: Open the Native App, select
  Settings > Connections > Details, make sure the status of the Connections is Connected.'
- 'Integration ''reference(''API'')'' does not exist or not authorized.: Check if
  you are running the SQL script from the correct database and schema.'
- 'Object of type Decimal is not JSON serializable: Ensure that your input table has
  the correct data types for each column.'
- 'Integration ''reference(''API'')'' is not enabled: Open the Native App, select
  Settings > Connections > Details, make sure the status of the Connections is Connected.'
- 'Integration ''reference(''API'')'' does not exist or not authorized: Check if you
  are running the SQL script from the correct database and schema.'
- 'AV25: The address has been verified to the SubPremise (Suite) or PO Box Level.'
- 'AV24: The address has been verified to the Premise (House or Building) Level.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - API Key
  - Access Token
  - MatchUp Object
  - mdMUReadWrite
client:
  base_url: https://vault.melissadata.net
  auth:
    type: api_key
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
