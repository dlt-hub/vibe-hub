resources:
- name: pipes
  endpoint:
    path: /api/pipes
    method: GET
- name: datasets
  endpoint:
    path: /api/datasets
    method: GET
- name: pipes
  endpoint:
    path: /pipes
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: '[]'
- name: specific_model
  endpoint:
    path: /models/{model_id}
    method: GET
    data_selector: '{}'
- name: pipes
  endpoint:
    path: /pipes
    method: GET
    data_selector: '[]'
- name: specific_pipe
  endpoint:
    path: /pipes/{pipe_id}
    method: GET
    data_selector: '{}'
- name: webhook
  endpoint:
    path: /pipes/{pipe_id}/webhook
    method: POST
- name: entity-types-source
  endpoint:
    path: /pipes/{pipe_id}/entity-types/source
    method: GET
- name: entity-types-sink
  endpoint:
    path: /pipes/{pipe_id}/entity-types/sink
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: dataset
  endpoint:
    path: /datasets/{dataset_id}
    method: GET
- name: delete-dataset
  endpoint:
    path: /datasets/{dataset_id}
    method: DELETE
- name: post-dataset
  endpoint:
    path: /datasets/{dataset_id}
    method: POST
- name: entities
  endpoint:
    path: /datasets/{dataset_id}/entities
    method: GET
- name: entity
  endpoint:
    path: /datasets/{dataset_id}/entity
    method: GET
- name: sdshare-collection
  endpoint:
    path: /datasets/{dataset_id}/sdshare-collection
    method: GET
- name: sdshare-fragments
  endpoint:
    path: /datasets/{dataset_id}/sdshare-fragments
    method: GET
- name: indexes
  endpoint:
    path: /datasets/{dataset_id}/indexes
    method: GET
- name: generate-schema-definition
  endpoint:
    path: /datasets/{dataset_id}/generate-schema-definition
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
- name: config_all
  endpoint:
    path: /config-all
    method: GET
- name: config_history_entity
  endpoint:
    path: /config-history/entity
    method: GET
- name: env
  endpoint:
    path: /env
    method: GET
- name: secrets
  endpoint:
    path: /secrets
    method: GET
- name: health
  endpoint:
    path: /health
    method: GET
- name: ping
  endpoint:
    path: /ping
    method: GET
- name: license
  endpoint:
    path: /license
    method: GET
- name: publishers
  endpoint:
    path: /publishers/{pipe_id}/sdshare-collection
    method: GET
- name: shareable_links
  endpoint:
    path: /publishers/{pipe_id}/shareable-links
    method: GET
- name: sdshare_push_receiver
  endpoint:
    path: /receivers/{pipe_id}/sdshare-push-receiver
    method: POST
- name: get_systems
  endpoint:
    path: /systems
    method: GET
    data_selector: '[]'
    params: {}
- name: create_systems
  endpoint:
    path: /systems
    method: POST
    data_selector: '[]'
    params: {}
- name: get_system_by_id
  endpoint:
    path: /systems/{system_id}
    method: GET
    data_selector: _id
    params: {}
- name: delete_system_by_id
  endpoint:
    path: /systems/{system_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_logs
  endpoint:
    path: /systems/{system_id}/logs
    method: GET
    data_selector: ''
    params: {}
- name: get_status
  endpoint:
    path: /systems/{system_id}/status
    method: GET
    data_selector: ''
    params: {}
- name: reload_system
  endpoint:
    path: /systems/{system_id}/reload
    method: POST
    data_selector: ''
    params: {}
- name: proxy_system
  endpoint:
    path: /systems/{system_id}/proxy/{rest_of_path}
    method: GET
    data_selector: ''
    params: {}
- name: update_system
  endpoint:
    path: /systems/{system_id}/config
    method: PUT
    data_selector: ''
    params: {}
- name: get_system_config
  endpoint:
    path: /systems/{system_id}/config
    method: GET
    data_selector: _id
    params: {}
- name: get_system_secrets
  endpoint:
    path: /systems/{system_id}/secrets
    method: GET
    data_selector: '[]'
    params: {}
- name: analytics
  endpoint:
    path: /api/analytics
    method: POST
- name: profile
  endpoint:
    path: /api/profile
    method: GET
- name: profile2
  endpoint:
    path: /api/profile2
    method: GET
- name: jwt
  endpoint:
    path: /api/jwt
    method: GET
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: '[]'
- name: subscriptions
  endpoint:
    path: /api/subscriptions/{subscription_id}
    method: GET
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /api/subscriptions/{subscription_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /api/subscriptions/{subscription_id}
    method: PUT
    data_selector: ''
    params: {}
- name: available_roles
  endpoint:
    path: /api/subscriptions/{subscription_id}/available-roles
    method: GET
    data_selector: '[]'
- name: add_custom_role
  endpoint:
    path: /api/subscriptions/{subscription_id}/available-roles
    method: POST
    data_selector: '[]'
- name: renew_license
  endpoint:
    path: /api/subscriptions/{subscription_id}/licenses
    method: POST
    data_selector: subscription
- name: api_json_web_tokens
  endpoint:
    path: /api/subscriptions/{subscription_id}/api_json_web_tokens
    method: GET
    data_selector: '[]'
    params: {}
- endpoint:
    method: GET
- endpoint:
    method: POST
- endpoint:
    method: DELETE
- endpoint:
    method: PUT
- name: available_notification_ruletypes
  endpoint:
    path: /api/subscriptions/{subscription_id}/pipes/{pipe_id}/available-notification-ruletypes
    method: GET
- name: notification_rules
  endpoint:
    path: /api/subscriptions/{subscription_id}/notification-rules
    method: GET
- name: notification_rules_on_pipe
  endpoint:
    path: /api/subscriptions/{subscription_id}/pipes/{pipe_id}/notification-rules
    method: GET
- name: add_notification_rule
  endpoint:
    path: /api/subscriptions/{subscription_id}/pipes/{pipe_id}/notification-rules
    method: POST
- name: update_notification_rule
  endpoint:
    path: /api/subscriptions/{subscription_id}/pipes/{pipe_id}/notification-rules/{notification_rule_id}
    method: PUT
- name: get_notification_rule
  endpoint:
    path: /api/subscriptions/{subscription_id}/pipes/{pipe_id}/notification-rules/{notification_rule_id}
    method: GET
- name: delete_notification_rule
  endpoint:
    path: /api/subscriptions/{subscription_id}/pipes/{pipe_id}/notification-rules/{notification_rule_id}
    method: DELETE
- name: notification_rule_notifications
  endpoint:
    path: /api/subscriptions/{subscription_id}/pipes/{pipe_id}/notification-rules/{notification_rule_id}/notifications
    method: GET
- name: user_notifications
  endpoint:
    path: /api/notifications
    method: GET
- name: notifications_summary
  endpoint:
    path: /notifications-summary
    method: GET
    data_selector: notifications
- name: monitoring_standard_subscription
  endpoint:
    path: /monitoring/standard/{subscription_id}
    method: GET
- name: monitoring_invoicing
  endpoint:
    path: /monitoring/invoicing/{subscription_id}
    method: GET
- name: sso
  endpoint:
    path: /sso
    method: GET
- name: login_implicit_flow
  endpoint:
    path: /login_implicit_flow
    method: GET
- name: jwt_login
  endpoint:
    path: /jwt_login
    method: POST
- name: login
  endpoint:
    path: /login/{provider_id}
    method: POST
- name: logout
  endpoint:
    path: /logout
    method: GET
- name: logout2
  endpoint:
    path: /logout2
    method: GET
- name: signup
  endpoint:
    path: /signup
    method: POST
- name: available_subscription_settings
  endpoint:
    path: /available-subscription-settings
    method: GET
- name: estimate_subscription_price
  endpoint:
    path: /estimate-subscription-price
    method: POST
- name: subscriptions
  endpoint:
    path: /api/subscriptions/{subscription_id}/estimate-subscription-price
    method: POST
    data_selector: dynamic_items
    params: {}
- name: payment
  endpoint:
    path: /api/payment/stripe_publishable_api_key
    method: GET
- name: sesam_status
  endpoint:
    path: /api/sesam_status
    method: GET
- name: paymentmethods
  endpoint:
    path: /api/paymentmethods
    method: GET
- name: paymentmethods
  endpoint:
    path: /api/paymentmethods
    method: POST
    data_selector: ''
    params: {}
- name: paymentmethods
  endpoint:
    path: /api/paymentmethods/{paymentmethod_id}
    method: GET
    data_selector: ''
    params: {}
- name: paymentmethods
  endpoint:
    path: /api/paymentmethods/{paymentmethod_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: paymentmethods
  endpoint:
    path: /api/paymentmethods/{paymentmethod_id}
    method: PUT
    data_selector: ''
    params: {}
- name: pipe_settings
  endpoint:
    path: /api/subscriptions/{subscription_id}/pipe-settings/{pipe_id}
    method: GET
- name: revoked_json_web_tokens
  endpoint:
    path: /api/subscriptions/{subscription_id}/revoked_json_web_tokens
    method: GET
- name: updated_licences
  endpoint:
    path: /api/subscriptions/{subscription_id}/updated_licences
    method: GET
- name: resource_needs
  endpoint:
    path: /api/subscriptions/{subscription_id}/resource-needs
    method: POST
- name: provisioning_domain
  endpoint:
    path: /api/provisioning/domain
    method: GET
- name: feedback
  endpoint:
    path: /api/feedback
    method: POST
- name: openid_configuration
  endpoint:
    path: /.well-known/openid-configuration
    method: GET
- name: openid_connect_token
  endpoint:
    path: /api/openid_connect/token
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: companies
  endpoint:
    path: /crm/companies
    method: GET
- name: reprocessing_policy
  endpoint:
    path: /service-metadata
    method: GET
    data_selector: reprocessing_policy
    params: {}
- name: compaction
  endpoint:
    path: /compaction
    method: GET
- name: config
  endpoint:
    path: /api/config
    method: GET
- name: config_group
  endpoint:
    path: /api/config/{config-group}
    method: GET
- name: metrics
  endpoint:
    path: /api/metrics
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: entities
  endpoint:
    path: /my-source-endpoint
    method: GET
    data_selector: records
    params:
      supports_since: true
- name: custom-transform-microservice
  endpoint:
    type: system:microservice
    docker:
      environment:
        some-other-variable: some-other-value
        some-variable: some-value
      image: my-image-url
      port: 5000
- name: custom-sink-pipe
  endpoint:
    path: entities
    method: POST
- name: custom-microservice-system
  endpoint:
    path: /my-sink-endpoint
    method: POST
- name: letters
  endpoint:
    path: /api/publishers/published-letters/entities
    method: GET
    data_selector: entities
    params:
      since: '21'
      limit: 3
- name: letters_subset
  endpoint:
    path: /api/datasets/letters/entities
    method: GET
    data_selector: entities
    params:
      subset: '["eq","_S.vowel",true]'
- name: mydataset
  endpoint:
    path: /api/receivers/myendpoint/entities
    method: POST
    data_selector: entities
    params:
      is_full: 'true'
      sequence_id: '1'
      request_id: '1'
      is_first: 'true'
- name: SQLServerTypes
  endpoint:
    path: /sql-server/types
    method: GET
    data_selector: types
    params: {}
- name: OracleTypes
  endpoint:
    path: /oracle/types
    method: GET
    data_selector: types
    params: {}
- name: MySQLTypes
  endpoint:
    path: /mysql/types
    method: GET
    data_selector: types
    params: {}
- name: PostgreSQLTypes
  endpoint:
    path: /postgresql/types
    method: GET
    data_selector: types
    params: {}
- name: entities
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: data
    params: {}
- name: make-ni
  endpoint:
    path: /make-ni
    method: POST
    data_selector: results
    params: {}
- name: merge
  endpoint:
    path: /merge
    method: POST
    data_selector: results
    params: {}
- name: merge-union
  endpoint:
    path: /merge-union
    method: POST
    data_selector: results
    params: {}
- name: remove
  endpoint:
    path: /remove
    method: POST
    data_selector: results
    params: {}
- name: rename
  endpoint:
    path: /rename
    method: POST
    data_selector: results
    params: {}
- name: fail!
  endpoint:
    path: /fail
    method: POST
    data_selector: results
    params: {}
- name: sleep!
  endpoint:
    path: /sleep
    method: POST
    data_selector: results
    params: {}
- name: trip!
  endpoint:
    path: /trip
    method: POST
    data_selector: results
    params: {}
- name: decrypt
  endpoint:
    path: /decrypt
    method: POST
    data_selector: results
- name: decrypt-pgp
  endpoint:
    path: /decrypt-pgp
    method: POST
    data_selector: results
- name: decrypt-pki
  endpoint:
    path: /decrypt-pki
    method: POST
    data_selector: results
- name: encrypt
  endpoint:
    path: /encrypt
    method: POST
    data_selector: results
- name: encrypt-pgp
  endpoint:
    path: /encrypt-pgp
    method: POST
    data_selector: results
- name: encrypt-pki
  endpoint:
    path: /encrypt-pki
    method: POST
    data_selector: results
- name: sorted
  endpoint:
    path: /sorted
    method: GET
    data_selector: VALUES
    params: {}
- name: sorted-descending
  endpoint:
    path: /sorted-descending
    method: GET
    data_selector: VALUES
    params: {}
- name: sum
  endpoint:
    path: /sum
    method: GET
    data_selector: VALUES
    params: {}
- name: minus
  endpoint:
    path: '#minus-symbol-dtl-function'
    method: GET
    data_selector: Arguments
    params: {}
- name: multiply
  endpoint:
    path: '#multiply-symbol-dtl-function'
    method: GET
    data_selector: Arguments
    params: {}
- name: divide
  endpoint:
    path: '#divide-symbol-dtl-function'
    method: GET
    data_selector: Arguments
    params: {}
- name: mod
  endpoint:
    path: '#mod-symbol-dtl-function'
    method: GET
    data_selector: Arguments
    params: {}
- name: pow
  endpoint:
    path: '#pow-symbol-dtl-function'
    method: GET
    data_selector: Arguments
    params: {}
- name: plus
  endpoint:
    path: '#plus-symbol-dtl-function'
    method: GET
    data_selector: Arguments
    params: {}
- name: abs
  endpoint:
    path: '#abs'
    method: GET
    data_selector: Arguments
    params: {}
- name: ceil
  endpoint:
    path: '#ceil'
    method: GET
    data_selector: Arguments
    params: {}
- name: cos
  endpoint:
    path: '#cos'
    method: GET
    data_selector: Arguments
    params: {}
- name: divide
  endpoint:
    path: '#divide'
    method: GET
    data_selector: Arguments
    params: {}
- name: floor
  endpoint:
    path: '#floor'
    method: GET
    data_selector: Arguments
    params: {}
- name: sin
  endpoint:
    path: '#sin'
    method: GET
    data_selector: Arguments
    params: {}
- name: sqrt
  endpoint:
    path: '#sqrt'
    method: GET
    data_selector: Arguments
    params: {}
- name: tan
  endpoint:
    path: '#tan'
    method: GET
    data_selector: Arguments
    params: {}
- name: difference
  endpoint:
    path: /difference
    method: GET
    data_selector: records
    params: {}
- name: intersection
  endpoint:
    path: /intersection
    method: GET
    data_selector: records
    params: {}
- name: intersects
  endpoint:
    path: /intersects
    method: GET
    data_selector: records
    params: {}
- name: union
  endpoint:
    path: /union
    method: GET
    data_selector: records
    params: {}
- name: diff
  endpoint:
    path: /diff
    method: GET
    data_selector: $diff
    params:
      datasets:
      - id-of-dataset1
      - id-of-dataset2
- name: login
  endpoint:
    path: /login/{provider_id}
    method: POST
- name: login_callback
  endpoint:
    path: /login_callback/{provider_id}
    method: GET
- name: logout
  endpoint:
    path: /logout
    method: GET
- name: otp_login
  endpoint:
    path: /otp_login
    method: GET
- name: dataservice_search
  endpoint:
    path: /dataservice/search
    method: GET
- name: configuration_file
  endpoint:
    path: /configuration/conf/{config_layer}/{config_file_path}
    method: GET
    data_selector: response-body
    params: {}
- name: configuration_file_upload
  endpoint:
    path: /configuration/conf/{config_layer}/{config_file_path}
    method: PUT
    data_selector: response-body
    params:
      validate_only: boolean
- name: configuration_file_delete
  endpoint:
    path: /configuration/conf/{config_layer}/{config_file_path}
    method: DELETE
    data_selector: response-body
    params:
      validate_only: boolean
- name: localization_strings
  endpoint:
    path: /configuration_localization_strings
    method: GET
    data_selector: response-body
    params: {}
- name: localization_string_overrides
  endpoint:
    path: /configuration_localization_strings/overrides/{language}/{localization_string_id}
    method: PUT
    data_selector: response-body
    params: {}
- name: gdpr_file_download
  endpoint:
    path: /gdpr/fileblob_download/{file_id}
    method: GET
    data_selector: response-body
    params: {}
- name: status_info
  endpoint:
    path: /status
    method: GET
    data_selector: response-body
    params: {}
- name: end-user_databrowser_ini
  endpoint:
    path: /configuration/databrowser.ini
    method: GET
    data_selector: ''
    params: {}
- name: layered_config_files
  endpoint:
    path: /configuration/<confignumber>/databrowser.ini
    method: GET
    data_selector: ''
    params: {}
- name: data_request
  endpoint:
    path: /services/data/v1.0/data_request
    method: GET
    data_selector: records
- name: purpose
  endpoint:
    path: /gdpr/purpose
    method: POST
    data_selector: data
    params: {}
- name: data_type
  endpoint:
    path: /gdpr/data_type
    method: POST
    data_selector: data
    params: {}
- name: gdpr-subject
  endpoint:
    path: /api/receivers/gdpr-subject-in/entities
    method: POST
    data_selector: ''
    params: {}
- name: gdpr-consent
  endpoint:
    path: /api/receivers/gdpr-consent-in/entities
    method: POST
    data_selector: ''
    params: {}
- name: gdpr-subject-consent
  endpoint:
    path: /api/receivers/gdpr-subject-consent-in/entities
    method: POST
    data_selector: ''
    params: {}
- name: gdpr-purpose
  endpoint:
    path: /api/receivers/gdpr-purpose-in/entities
    method: POST
    data_selector: ''
    params: {}
- name: gdpr-purpose-type
  endpoint:
    path: /api/receivers/gdpr-purpose-type-in/entities
    method: POST
    data_selector: entities
- name: gdpr-data-type
  endpoint:
    path: /api/receivers/gdpr-data-type-in/entities
    method: POST
    data_selector: entities
- name: gdpr-policy
  endpoint:
    path: /api/receivers/gdpr-policy-in/entities
    method: POST
    data_selector: entities
- name: gdpr_access_request
  endpoint:
    path: /api/receivers/gdpr-access-request-in/entities
    method: POST
    data_selector: data
    params: {}
- name: gdpr_access_request_subject_data
  endpoint:
    path: /api/receivers/gdpr-access-request-subject-data-in/entities
    method: POST
    data_selector: data
    params: {}
- name: custom-documents
  endpoint:
    path: /custom-documents
    method: GET
    data_selector: entities
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: PowerOffice GO
  endpoint:
    path: /api/poweroffice
    method: GET
- name: Tidsbanken
  endpoint:
    path: /tidsbanken/api/v1/data
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: mypipe
  endpoint:
    path: /api/receivers/mypipe/entities
    method: POST
    data_selector: entities
- name: pipes
  endpoint:
    path: /pipes
    method: GET
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: '[]'
- name: pipes
  endpoint:
    path: /pipes
    method: GET
    data_selector: '[]'
- name: pipes
  endpoint:
    path: /pipes/{pipe_id}/webhook
    method: POST
    data_selector: token
    params: {}
- name: source_entity_types
  endpoint:
    path: /pipes/{pipe_id}/entity-types/source
    method: GET
    data_selector: ''
    params: {}
- name: sink_entity_types
  endpoint:
    path: /pipes/{pipe_id}/entity-types/sink
    method: GET
    data_selector: ''
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: ''
    params:
      verbose: true
- name: dataset_info
  endpoint:
    path: /datasets/{dataset_id}
    method: GET
    data_selector: ''
    params: {}
- name: dataset_entities
  endpoint:
    path: /datasets/{dataset_id}/entities
    method: GET
    data_selector: ''
    params: {}
- name: dataset_entity
  endpoint:
    path: /datasets/{dataset_id}/entity
    method: GET
    data_selector: ''
    params: {}
- name: dataset_indexes
  endpoint:
    path: /datasets/{dataset_id}/indexes
    method: GET
    data_selector: ''
    params: {}
- name: generate_schema_definition
  endpoint:
    path: /datasets/{dataset_id}/generate-schema-definition
    method: GET
    data_selector: ''
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: ''
    params: {}
- name: config-all
  endpoint:
    path: /config-all
    method: GET
- name: config-history-entity
  endpoint:
    path: /config-history/entity
    method: GET
- name: env
  endpoint:
    path: /env
    method: GET
- name: secrets
  endpoint:
    path: /secrets
    method: GET
- name: health
  endpoint:
    path: /health
    method: GET
- name: ping
  endpoint:
    path: /ping
    method: GET
- name: license
  endpoint:
    path: /license
    method: GET
- name: namespaces
  endpoint:
    path: /namespaces
    method: GET
- name: metadata
  endpoint:
    path: /metadata
    method: GET
- name: publishers
  endpoint:
    path: /publishers/{pipe_id}/shareable-links
    method: GET
- name: systems
  endpoint:
    path: /systems
    method: GET
    data_selector: '[]'
- name: create_systems
  endpoint:
    path: /systems
    method: POST
    data_selector: '[]'
- name: get_system
  endpoint:
    path: /systems/{system_id}
    method: GET
    data_selector: _id
- name: delete_system
  endpoint:
    path: /systems/{system_id}
    method: DELETE
    data_selector: ''
- name: get_system_logs
  endpoint:
    path: /systems/{system_id}/logs
    method: GET
    data_selector: ''
- name: get_system_status
  endpoint:
    path: /systems/{system_id}/status
    method: GET
    data_selector: ''
- name: reload_system
  endpoint:
    path: /systems/{system_id}/reload
    method: POST
    data_selector: ''
- name: get_system_proxy
  endpoint:
    path: /systems/{system_id}/proxy/{rest_of_path}
    method: GET
    data_selector: ''
- name: post_system_proxy
  endpoint:
    path: /systems/{system_id}/proxy/{rest_of_path}
    method: POST
    data_selector: ''
- name: put_system_proxy
  endpoint:
    path: /systems/{system_id}/proxy/{rest_of_path}
    method: PUT
    data_selector: ''
- name: patch_system_proxy
  endpoint:
    path: /systems/{system_id}/proxy/{rest_of_path}
    method: PATCH
    data_selector: ''
- name: delete_system_proxy
  endpoint:
    path: /systems/{system_id}/proxy/{rest_of_path}
    method: DELETE
    data_selector: ''
- name: get_system_config
  endpoint:
    path: /systems/{system_id}/config
    method: GET
    data_selector: _id
- name: put_system_config
  endpoint:
    path: /systems/{system_id}/config
    method: PUT
    data_selector: _id
- name: get_system_secrets
  endpoint:
    path: /systems/{system_id}/secrets
    method: GET
    data_selector: '[]'
- name: put_system_secrets
  endpoint:
    path: /systems/{system_id}/secrets
    method: PUT
    data_selector: ''
- name: post_system_secrets
  endpoint:
    path: /systems/{system_id}/secrets
    method: POST
    data_selector: ''
- name: delete_system_secret
  endpoint:
    path: /systems/{system_id}/secrets/{secret_key}
    method: DELETE
    data_selector: ''
- name: profile
  endpoint:
    path: /api/profile
    method: GET
- name: profile2
  endpoint:
    path: /api/profile2
    method: GET
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
- name: jwt
  endpoint:
    path: /api/jwt
    method: GET
- name: subscription
  endpoint:
    path: /api/subscriptions
    method: POST
- name: subscriptions
  endpoint:
    path: /api/subscriptions/{subscription_id}
    method: GET
    data_selector: subscription
    params: {}
- name: subscriptions
  endpoint:
    path: /api/subscriptions/{subscription_id}
    method: DELETE
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /api/subscriptions/{subscription_id}
    method: PUT
    data_selector: ''
    params: {}
- name: available_roles
  endpoint:
    path: /api/subscriptions/{subscription_id}/available-roles
    method: GET
- name: add_custom_role
  endpoint:
    path: /api/subscriptions/{subscription_id}/available-roles
    method: POST
- name: renew_subscription_license
  endpoint:
    path: /api/subscriptions/{subscription_id}/licenses
    method: POST
- name: subscriptions
  endpoint:
    path: /api/subscriptions/{subscription_id}/api_json_web_tokens
    method: GET
    data_selector: '[]'
    params: {}
- name: create_api_jwt
  endpoint:
    path: /api/subscriptions/{subscription_id}/api_json_web_tokens
    method: POST
    data_selector: '[]'
    params: {}
- name: available_notification_rule_types
  endpoint:
    path: /subscriptions/{subscription_id}/pipes/{pipe_id}/available-notification-ruletypes
    method: GET
- name: notification_rules
  endpoint:
    path: /subscriptions/{subscription_id}/notification-rules
    method: GET
- name: notification_rule
  endpoint:
    path: /subscriptions/{subscription_id}/pipes/{pipe_id}/notification-rules
    method: POST
- name: notification_rule_id
  endpoint:
    path: /subscriptions/{subscription_id}/pipes/{pipe_id}/notification-rules/{notification_rule_id}
    method: GET
- name: notifications
  endpoint:
    path: /subscriptions/{subscription_id}/pipes/{pipe_id}/notification-rules/{notification_rule_id}/notifications
    method: GET
- name: alerts
  endpoint:
    path: /notifications
    method: GET
- name: notifications_summary
  endpoint:
    path: /api/notifications-summary
    method: GET
- name: monitoring_standard
  endpoint:
    path: /api/monitoring/standard/{subscription_id}/pipes/{pipe_id}
    method: GET
- name: monitoring_invoicing
  endpoint:
    path: /api/monitoring/invoicing/{subscription_id}
    method: GET
- name: sso
  endpoint:
    path: /api/sso
    method: GET
- name: login_implicit_flow
  endpoint:
    path: /api/login_implicit_flow
    method: GET
- name: jwt_login
  endpoint:
    path: /api/jwt_login
    method: POST
- name: login_provider
  endpoint:
    path: /api/login/{provider_id}
    method: POST
- name: login_callback
  endpoint:
    path: /api/login_callback/{provider_id}
    method: GET
- name: login
  endpoint:
    path: /api/login
    method: POST
- name: logout
  endpoint:
    path: /api/logout
    method: GET
- name: logout2
  endpoint:
    path: /api/logout2
    method: GET
- name: signup
  endpoint:
    path: /api/signup
    method: POST
- name: available_subscription_settings
  endpoint:
    path: /api/available-subscription-settings
    method: GET
- name: estimate_subscription_price
  endpoint:
    path: /api/estimate-subscription-price
    method: POST
- endpoint:
    path: /api/is-available-subscription-name
    method: POST
- endpoint:
    path: /api/request_trial
    method: POST
- endpoint:
    path: /api/cancel_request_trial
    method: POST
- endpoint:
    path: /api/dismiss_denied_request_trial
    method: POST
- endpoint:
    path: /api/password
    method: PUT
- endpoint:
    path: /api/forgot-password
    method: POST
- endpoint:
    path: /api/reset-password
    method: POST
- endpoint:
    path: /api/verify-emailaddress
    method: POST
- endpoint:
    path: /api/request-email-verification
    method: POST
- endpoint:
    path: /api/payment/stripe_publishable_api_key
    method: GET
- endpoint:
    path: /api/payment/stripe_coupon
    method: POST
- endpoint:
    path: /api/sesam_status
    method: GET
- endpoint:
    path: /api/payment/subscription
    method: POST
- endpoint:
    path: /api/paymentmethods
    method: GET
- name: paymentmethods
  endpoint:
    path: /api/paymentmethods
    method: POST
    data_selector: records
    params: {}
- name: paymentmethod_detail
  endpoint:
    path: /api/paymentmethods/{paymentmethod_id}
    method: GET
    data_selector: records
    params:
      paymentmethod_id: string
- name: admin
  endpoint:
    path: /api/admin
    method: GET
    data_selector: records
    params: {}
- name: subscription_settings
  endpoint:
    path: /api/subscriptions/{subscription_id}/subscription-settings
    method: GET
    data_selector: '[]'
    params: {}
- name: pipe_settings
  endpoint:
    path: /api/subscriptions/{subscription_id}/pipe-settings
    method: GET
    data_selector: '[]'
    params: {}
- name: pipe_settings
  endpoint:
    path: /api/subscriptions/{subscription_id}/pipe-settings/{pipe_id}
    method: GET
- name: revoked_json_web_tokens
  endpoint:
    path: /api/subscriptions/{subscription_id}/revoked_json_web_tokens
    method: GET
- name: updated_licences
  endpoint:
    path: /api/subscriptions/{subscription_id}/updated_licences
    method: GET
- name: resource_needs
  endpoint:
    path: /api/subscriptions/{subscription_id}/resource-needs
    method: POST
- name: domain_availability
  endpoint:
    path: /api/provisioning/domain
    method: GET
- name: feedback
  endpoint:
    path: /api/feedback
    method: POST
- name: openid_configuration
  endpoint:
    path: /.well-known/openid-configuration
    method: GET
- name: openid_connect_token
  endpoint:
    path: /api/openid_connect/token
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: company
  endpoint:
    path: companies
    method: GET
    data_selector: results
    params:
      properties: about_us,address,city,country,description,domain,founded_year,is_public,linkedin_company_page,name,numberofemployees,state,timezone,website,zip&associations=contacts,companies,deals,tickets,products,quotes
- name: hubspot-company
  endpoint:
    path: /hubspot-company-collect
    method: POST
    data_selector: entities
    params: {}
- name: enhetsregisteret-company
  endpoint:
    path: /enhetsregisteret-company-collect
    method: POST
    data_selector: entities
    params: {}
- name: contacts
  endpoint:
    path: /objects/contacts
    method: GET
    params:
      hapikey: your_api_key
- name: contacts
  endpoint:
    path: /objects/contacts
    method: GET
    data_selector: results
    params:
      incremental: since
- name: contacts
  endpoint:
    path: /search
    method: POST
    data_selector: results
    params:
      since-field: lastmodifieddate
      since-operator: GT
- name: contacts_full_sync
  endpoint:
    path: /contacts/
    method: GET
    data_selector: results
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- SESAM will keep Personal Data for as long as necessary to fulfil our contractual
  obligations towards you, however no longer than 60 days.
- Personal Data will be deleted or anonymized as soon as possible when the contractual
  obligation has ended, or by you withdrawing your consent, unless it must be stored
  in order to fulfil obligations in statutory law.
- SESAM will immediately investigate any suspicious incidents that constitutes or
  may constitute a Service Personal Data security breach.
- SESAM will not transfer Service Personal Data to a third country or to an international
  organization except when authorized.
- SESAM will upon your request or within 4 weeks of the date of cessation of any Services
  return a complete copy of all the Service Personal Data.
- Some objects like Contact may return nulls in deeply nested fields
- By default, a pipe will not reset automatically if it goes out of sync, but it will
  maintain a list of effected datasets.
- Some of the DTL functions are namespace aware and they will behave slightly differently
  when namespaces are enabled.
- Global datasets will likely grow and become large. If the configuration or logic
  is changed it is possible that the whole dataset will need to be updated. This can
  be a big job and will take time.
- As an example, an energy company has 700 000 customers, and each customer has a
  power meter connected to their home. When taking into account historic data, which
  the company is required to store as well, the company is storing data of about 30
  000 000 customers. One way of managing this large amount of data is to divide the
  data into different global datasets. In this case, the energy company might choose
  to store their historic data in one global dataset, and the current data in a different
  global dataset.
- Integrated search results are limited to the data that users have permission to
  read.
- You need to be the payment method owner in order to enable this feature.
- Completeness is a feature that you typically enable on an outgoing pipe or the pipe
  producing its source dataset.
- When a pipe completes a successful run, the sink dataset will inherit the smallest
  completeness timestamp value of the source datasets and the related datasets.
- Compaction will only be performed up to the lowest offset for which there exists
  a pipe doing dependency tracking on the dataset.
- If no config-group is explicitly given, the pipe/system is placed in the 'default'
  config-group.
- Change tracking eliminates the need to process and transfer entire datasets, focusing
  solely on the modified or new data elements.
- By synchronizing only the changed data, organizations can significantly reduce the
  amount of data transmitted between systems.
- Uses OAuth2 with refresh token — requires setup of connected app in Sesam
- Some objects may return nulls in deeply nested fields
- There is a additional surcharge for VPN.
- Take note of the Sesam Peer VPN Gateway and Sesam address spaces and configure your
  on-premises VPN device accordingly.
- Durable data can be enabled on a pipe by setting the pipe’s metadata.durable property
  to true.
- Durable data is a paid feature. Activating it will increase the data consumption
  of durable pipes by 3x.
- You need a JWT token with Admin role to be able to scrape the endpoint.
- Bidirectional synchronization supported
- Bidirectional synchronization has clear advantages but also brings additional complexity.
- Cron expressions are evaluated in the UTC timezone.
- 'The special characters W and # are not supported by our implementation.'
- Environmental variables are usually system specific variables, i.e. they are used
  throughout the whole microservice and not for a specific endpoint.
- Variables through dynamic URLs are generally pipe specific variables that are only
  used for specific endpoints.
- Non-idempotency — Sesam Documentation
- Operations can be divided into idempotent and non-idempotent.
- Non-idempotent operations can evaluate differently if performed multiple times.
- It is good practice to analyze the target systems on how they are functioning.
- Nested entities will be represented as RDF Blank Nodes (aka BNodes)
- List properties are represented by repeating the predicates as many times as there
  are entries in the lists
- RDF datatypes are automatically added based on the type of the property
- RDF language tags are currently not supported
- _S and _T appear in pairs inside each applied transform
- Some entities may return nulls in deeply nested fields
- The property path strings function can only access property on the entity it operates
  on, including nested entities.
- The `path` function can only access property on the dictionary/entity it operates
  on, including nested ones.
- It is important to mention that only `eq` functions will be treated as join expressions.
- 'The rule for joins is very simple: if any of the values overlap, then the join
  succeeds.'
- Join expressions that contain functional expressions work the same way.
- If you need to do joins with composite keys then the tuples DTL function is useful.
- Using composite keys is almost always a better choice than having multiple individual
  joins as the former will have better precision.
- Null values and deleted entities are not indexed, so they are not traversed by joins.
- It is only eq functions that reference a single dataset alias in both left and right
  arguments that are considered join functions.
- Function arguments that are of type `wildcard-string` will make pattern matching
  aware of the boundary between the namespace and the identifier parts of namespaced
  identifiers.
- Function arguments that reference unqualified properties, i.e. properties with only
  the identifier part, will in general match that property in all namespaces.
- Sesam relies on tabulated historical data for daylight saving information for the
  various timezones.
- The result of an explicit or implicit timezone conversion operation can change over
  time.
- Requires setup of connected app in Sesam
- Strongly recommend using DTL transform to replace lower_keys transform.
- Only the root keys are transformed in the lower_keys transform.
- The searchresults are organized into different sections based on the type of each
  searchresult item.
- The databrowser will reach end-of-life December 31st 2023.
- Some requests may return delayed responses
- The domain name is the internet address (DNS) where your GDPR data access portal
  should be available to the data subjects.
- The user must log in using a predefined credential such as email or mobile phone
  number.
- After logging in, the user can send a request for their data or request that their
  data be deleted.
- The receiver endpoint API is experimental and may not be available in all installations
  at this point.
- The document ID should be prefixed with the ID of the system used.
- The extract-content URL must NOT require any authentication or authorization.
- Added a new “gdpr-version-tag” environment variable that can have the values “latest”,
  “nightly”, “weekly” or “weekly-prod”. The default value is “nightly”. You should
  only use “latest” with care as it might be unstable during a day. Production systems
  should always use “weekly” or “weekly-prod” values.
- This is a discontinued service and should not be used.
- SuperOffice uses a token concept called SOTicket, which will expire if it’s not
  used every 6 hours.
- Selective data synchronization eliminates the need to process and transfer entire
  datasets, focusing solely on the modified or new data elements.
- By synchronizing only the data that changes, organizations can significantly reduce
  the amount of data transmitted between systems.
- When synchronizing only the changed data, the potential for data conflicts is significantly
  reduced.
- Selective data synchronization provides your organization with greater flexibility
  in integrating various cloud systems.
- Data security is a paramount concern for organizations handling sensitive information.
- Systems that use api keys often have a mechanism to have the keys expire or that
  the user can revoke the key in the system.
- Systems that use Oauth2 flows often have a way to “uninstall” an application as
  their way to revoke access for an external application.
- Service Level Objective
- Availability target is 99.5% uptime.
- Planned maintenance is nightly from 00:00 to 03:00 hours Central European Time.
- Open Sesam is automatically upgraded every night, and the user might experience
  short disruptions of service during the upgrade.
- The /api/profile2 endpoint will replace the /api/profile endpoint when the unified
  frontend is deployed.
- If Monitoring and Metrics is enabled, you can access subscription and pipe metrics
  in the Prometheus-compatible metrics API endpoint from your external monitoring
  tools.
- Only one instance of the sesam client can run commands on a Sesam subscription at
  a time.
- Avoid manual changes to the Sesam subscription while the client is running as this
  will likely lead to undesired results.
- Do NOT run the Sesam client on production subscriptions! This is outside of its
  intended usage and may lead to very undesired results.
- OAuth 2.0 has been implemented as part of this workflow.
- Uses OAuth2 for authentication.
- The connection to Enhetsregisteret is a mock connection in this tutorial.
- The companies in the pipe’s output should now have two new properties consisting
  of NIs to the respective company’s contacts.
- On the output entities you should now see namespaces on every property and the new
  rdf:type property.
- Fetch companies from different sources and merge entities when orgnr from Enhetsregisteret
  matches about_us from HubSpot.
- Data from all sources are preserved and aggregated in the result.
- Ensure the response is a JSON array.
- Each API has different functionalities, and not every API supports query parameters
  to only access updated data.
- Supports incremental loading based on lastmodifieddate
- Full sync can be triggered by resetting the pipe
- Development environment is cloud-only and restricted.
- Single compute has a limit of 4 engines.
- Flexi subscriptions compute can be increased or decreased in 4 compute increments.
- SESAM, as a SaaS, is provided with the target of 99.5% uptime per installation.
- Planned maintenance is therefore nightly from 00:00 to 03:00 hours Central European
  Time.
- Support for TTL on deletes is now available.
- Support for webhooks is now available.
- Support for connectors is now available.
- Property lineage is now offered as part of Integrated search.
- Metrics is now available for subscriptions running on the Clustered Architecture.
- Integrated search is now available for subscriptions running on the Clustered Architecture.
- All cloud subscriptions are now running on the clustered architecture.
- Durable data is now available on all cloud subscriptions.
- Developer Pro is now available for new subscriptions and as an upgrade to existing
  subscriptions.
- VPN is now configurable for subscriptions running on the Clustered Architecture.
- The `dead_letters_dataset` should contain a per-pipe unique user dataset id.
- Compaction will be performed by the dataset sink if `compaction.sink` is set to
  `true` in the pipe configuration.
- The dataset sink will now mark the sink dataset as populated when all input datasets
  are populated and all entities have been read from them.
- Casting decimal numbers containing a “scientific notation” shorthand (i.e. “1E-3”,
  “10E14” etc) to a string using the DTL string function will now expand the exponent
  to its full representation.
- Added support for specifying SOCKS5 proxies for the URL, REST and Twilio systems.
- The old dead_letter_dataset pump configuration option (string) has been deprecated
  and replaced by use_dead_letter_dataset, which is a boolean flag (false by default).
- Added the checkpoint_interval property to the pipe. The default has been changed
  from 1 to 100.
- When a pipe is reset then the pipe’s retry queue is now also reset.
- 'Bug fix: It is now possible to interrupt pumps that are performing retries.'
- Indexing of datasets changed so that each dataset is indexed for a maximum of five
  minutes in each iteration. This prevents some datasets from being blocked from indexing
  when there are other large datasets being indexed.
- Added the enumerate DTL function that can be used to enumerate values, i.e. combine
  values with an enumeration count.
- Added the json-parse and json-transit-parse DTL functions.
- Added a conditional transform.
- Added functionality for preventing all pipes from automatically running (useful
  in some debugging scenarios).
- Added a is_sorted property to the RDF source to indicate that the input data is
  sorted on subject, enabling the source to avoid loading the entire file into memory.
  Note that it only works for nt (NTriples) format files without blank nodes.
- Added a write_retry_delay property to pipe pumps.
- Added support for bulk operations in the SQL sink.
- Added the indexes property to the dataset sink.
- The default value of the max_depth property in hops has been changed from null to
  10.
- The JSON push protocol has been simplified to make it easier to write receivers.
- Added the tuples DTL function that can be used to create composite join keys.
- The equality property on the merge source is now optional.
- Changed the default value of the schedule_interval pump configuration property.
- Extended all systems to accept a new property worker_threads that limits the number
  of concurrent pipes that can run against a particular system. The default value
  is 10.
- Extended the URL system and REST system to accept default custom request headers
  using the headers property.
- Extended the in DTL function to allow a single value in the second argument.
- The JSON Push Protocol document now contains examples of how to use curl to perform
  incremental and full syncs.
- Added the _R variable, which can be used to refer to the root context in a DTL transform.
- The base_url property of the URL system and REST system has been deprecated.
- Added the slice, insert and combine DTL functions.
- Added the is-changed DTL function.
- Added encrypt and decrypt DTL functions.
- Added a conditional source and conditional sink that can pick from a list of actual
  candidates, typically controlled by an environment variable.
- Added a substring DTL function.
- Added include_replaced property to the dataset source.
- Added url_pattern property to URL system.
- Added a jwt authentication scheme and jwt_token property to the URL system.
- Added text_body_template and text_body_template_property properties to the Email
  message sink.
- For security reasons, the Mail and SMS sinks no longer support file-based templates.
- Datasets are now scheduled for automatic compaction once every 24 hours.
- The SQL source no longer includes columns with null values by default.
- The dict function now takes zero, one or an even number of arguments.
- Documented the pool_recycle option on SQL systems.
- Added the merge source.
- Added an unhandled_template_variable_replacement property to the Email Message sink.
- Added a uuid DTL function.
- Added a disable_set_last_seen property to the Pipe properties.
- Added a read_retry_delay property to pipe pumps.
- The documentation on cron expressions now makes it clear that they are evaluated
  in the UTC timezone.
- The concat DTL function now takes a variable number of arguments.
- The url-quote DTL function now takes an optional SAFE_CHARS argument.
- The section on Continuation Support has been extended.
- Added the json and json-transit DTL functions.
- The group-by DTL function has been changed to always return string keys.
- The sorted, sorted-descending, min, max DTL functions have been updated to support
  mixed type ordering.
- Added the microservice system.
- Added the filename property to the HTTP endpoint sink, XML endpoint sink and CSV
  endpoint sink.
- Added the REST sink.
- Added the range DTL function.
- Added the Embedded source.
- Added the XML transform and XML endpoint sink.
- Changed the CSV endpoint sink to not output deleted entities by default.
- The Services consist of both free- and paid subscriptions.
- Features marked with “Experimental” can change or disappear without warning, do
  not use them in production.
errors:
- '200 OK: OK'
- 200 OK
- '400: Invalid value for expiration date'
- 400 Bad Request
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Completeness is implicitly incompatible with full rescans as they do not necessarily
  expose all of the latest entities.
- If the value is less than 2, dependency tracking is performed on a best-effort basis.
- '409 Conflict: Previous request_id does not match'
- '409 Conflict: is_full value does not match previous request'
- '409 Conflict: is_first flag is incorrectly set'
- '202 Accepted: The result of the reload operation'
- '401 Unauthorized: The user is not logged in'
- '400 Bad Request: This endpoint will always return a 400 response'
- '500 Internal Server Error: Check if the HubSpot API is down.'
- Deviation from the agreed service quality (SLA) may result in standardized penalties.
- Support for multitenancy has been discontinued.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - JWT
  - Admin role
  - authentication_providers
client:
  base_url: https://portal.sesam.io
  auth:
    type: oauth2
source_metadata: null
