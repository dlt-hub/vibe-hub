resources:
- name: VerifoneHQ API
  endpoint:
    path: /api-catalog/verifonehq-api
    method: GET
- name: Order API
  endpoint:
    path: /api-catalog/order-api
    method: GET
- name: Reporting API
  endpoint:
    path: /api-catalog/reporting-api
    method: GET
- name: Verifone eCommerce API
  endpoint:
    path: /api-catalog/verifone-ecommerce-api
    method: GET
- name: 3D Secure API
  endpoint:
    path: /api-catalog/3d-secure-api
    method: GET
- name: PayPal eComm API
  endpoint:
    path: /api-catalog/paypal-ecomm-api
    method: GET
- name: Customer API
  endpoint:
    path: /api-catalog/customer-api
    method: GET
- name: Checkout API
  endpoint:
    path: /api-catalog/checkout-api
    method: GET
- name: Pay by Link
  endpoint:
    path: /pay-by-link
    method: POST
    data_selector: paymentLinkDetails
- name: Order
  endpoint:
    path: /api-catalog/order-api
    method: GET
- name: Reporting
  endpoint:
    path: /api-catalog/reporting-api
    method: GET
- name: Verifone eCommerce
  endpoint:
    path: /api-catalog/verifone-ecommerce-api
    method: GET
- name: 3D Secure
  endpoint:
    path: /api-catalog/3d-secure-api
    method: GET
- name: PayPal eComm
  endpoint:
    path: /api-catalog/paypal-ecomm-api
    method: GET
- name: Customer
  endpoint:
    path: /api-catalog/customer-api
    method: GET
- name: Checkout
  endpoint:
    path: /api-catalog/checkout-api
    method: GET
- name: payment_settings
  endpoint:
    path: /payment/settings
    method: GET
    data_selector: settings
    params: {}
- name: payment_form
  endpoint:
    path: /payment/form
    method: GET
    data_selector: form
    params: {}
- name: payment_status
  endpoint:
    path: /payment/status
    method: GET
    data_selector: status
    params: {}
- name: payment_settings
  endpoint:
    path: /payment/settings
    method: GET
    data_selector: settings
    params: {}
- name: payment_form
  endpoint:
    path: /payment/form
    method: POST
    data_selector: form
    params: {}
- name: payment_status
  endpoint:
    path: /payment/status
    method: GET
    data_selector: status
    params: {}
- name: payment_actions
  endpoint:
    path: /payment-actions
    method: GET
- name: Groupement des Cartes Bancaires
  endpoint:
    path: /groupement-des-cartes-bancaires
    method: GET
    data_selector: data
    params: {}
- name: NETS SDI
  endpoint:
    path: /nets-sdi
    method: GET
    data_selector: data
    params: {}
- name: Swedbank
  endpoint:
    path: /swedbank
    method: GET
    data_selector: data
    params: {}
- name: Landsbankinn
  endpoint:
    path: /landsbankinn
    method: GET
    data_selector: data
    params: {}
- name: Lloyds
  endpoint:
    path: /lloyds
    method: GET
    data_selector: data
    params: {}
- name: Barclays
  endpoint:
    path: /barclays
    method: GET
    data_selector: data
    params: {}
- name: Global Payments
  endpoint:
    path: /global-payments
    method: GET
    data_selector: data
    params: {}
- name: WorldPay
  endpoint:
    path: /worldpay
    method: GET
    data_selector: data
    params: {}
- name: ABS
  endpoint:
    path: /abs
    method: GET
    data_selector: data
    params: {}
- name: Woodforest National Bank
  endpoint:
    path: /woodforest-national-bank
    method: GET
    data_selector: data
    params: {}
- name: Fiserv (First Data) US & CA
  endpoint:
    path: /fiserv-first-data-us-ca
    method: GET
    data_selector: data
    params: {}
- name: Chase US & CA
  endpoint:
    path: /chase-us-ca
    method: GET
    data_selector: data
    params: {}
- name: Synchrony
  endpoint:
    path: /synchrony
    method: GET
    data_selector: data
    params: {}
- name: SVS
  endpoint:
    path: /svs
    method: GET
    data_selector: data
    params: {}
- name: ValueLink
  endpoint:
    path: /valuelink
    method: GET
    data_selector: data
    params: {}
- name: WorldPay US
  endpoint:
    path: /worldpay-us
    method: GET
    data_selector: data
    params: {}
- name: Prosa
  endpoint:
    path: /prosa
    method: GET
    data_selector: data
    params: {}
- name: Banorte
  endpoint:
    path: /banorte
    method: GET
    data_selector: data
    params: {}
- name: Australia and New Zealand Banking Group
  endpoint:
    path: /australia-and-new-zealand-banking-group
    method: GET
    data_selector: data
    params: {}
- name: ASB
  endpoint:
    path: /asb
    method: GET
    data_selector: data
    params: {}
- name: BNZ
  endpoint:
    path: /bnz
    method: GET
    data_selector: data
    params: {}
- name: Kiwibank
  endpoint:
    path: /kiwibank
    method: GET
    data_selector: data
    params: {}
- name: Westpac
  endpoint:
    path: /westpac
    method: GET
    data_selector: data
    params: {}
- name: Groupement des Cartes Bancaires
  endpoint:
    path: /groupement-des-cartes-bancaires
    method: GET
    data_selector: data
    params: {}
- name: NETS SDI
  endpoint:
    path: /nets-sdi
    method: GET
    data_selector: data
    params: {}
- name: Swedbank
  endpoint:
    path: /swedbank
    method: GET
    data_selector: data
    params: {}
- name: Landsbankinn
  endpoint:
    path: /landsbankinn
    method: GET
    data_selector: data
    params: {}
- name: Lloyds
  endpoint:
    path: /lloyds
    method: GET
    data_selector: data
    params: {}
- name: Barclays
  endpoint:
    path: /barclays
    method: GET
    data_selector: data
    params: {}
- name: Global Payments
  endpoint:
    path: /global-payments
    method: GET
    data_selector: data
    params: {}
- name: WorldPay
  endpoint:
    path: /worldpay
    method: GET
    data_selector: data
    params: {}
- name: ABS
  endpoint:
    path: /abs
    method: GET
    data_selector: data
    params: {}
- name: Woodforest National Bank
  endpoint:
    path: /woodforest-national-bank
    method: GET
    data_selector: data
    params: {}
- name: Fiserv (First Data) US & CA
  endpoint:
    path: /fiserv-first-data-us-ca
    method: GET
    data_selector: data
    params: {}
- name: Chase US & CA
  endpoint:
    path: /chase-us-ca
    method: GET
    data_selector: data
    params: {}
- name: Synchrony
  endpoint:
    path: /synchrony
    method: GET
    data_selector: data
    params: {}
- name: SVS
  endpoint:
    path: /svs
    method: GET
    data_selector: data
    params: {}
- name: ValueLink
  endpoint:
    path: /valuelink
    method: GET
    data_selector: data
    params: {}
- name: WorldPay US
  endpoint:
    path: /worldpay-us
    method: GET
    data_selector: data
    params: {}
- name: Prosa
  endpoint:
    path: /prosa
    method: GET
    data_selector: data
    params: {}
- name: Banorte
  endpoint:
    path: /banorte
    method: GET
    data_selector: data
    params: {}
- name: Australia and New Zealand Banking Group
  endpoint:
    path: /australia-and-new-zealand-banking-group
    method: GET
    data_selector: data
    params: {}
- name: ASB
  endpoint:
    path: /asb
    method: GET
    data_selector: data
    params: {}
- name: BNZ
  endpoint:
    path: /bnz
    method: GET
    data_selector: data
    params: {}
- name: Kiwibank
  endpoint:
    path: /kiwibank
    method: GET
    data_selector: data
    params: {}
- name: Westpac
  endpoint:
    path: /westpac
    method: GET
    data_selector: data
    params: {}
- name: Cardinal.configure
  endpoint:
    path: /configure
    method: POST
    data_selector: configuration
    params: {}
- name: Cardinal.setup
  endpoint:
    path: /setup
    method: POST
    data_selector: setup
    params: {}
- name: payment
  endpoint:
    path: /api/v1/payment
    method: POST
    data_selector: transaction
    params: {}
- name: payment
  endpoint:
    path: /api/payments
    method: POST
- name: token_scope
  endpoint:
    path: /api/token_scope
    method: POST
    data_selector: token_scope
    params: {}
- name: link_token_scope
  endpoint:
    path: /api/link_token_scope
    method: POST
    data_selector: link_token_scope
    params: {}
- name: request_token
  endpoint:
    path: /api/request_token
    method: POST
    data_selector: token
    params: {}
- name: Payment SDK-SDI
  endpoint:
    path: /docs/in-person-payments/psdk-sdi-integration-guide
    method: GET
- name: GPA
  endpoint:
    path: /docs/in-store-payments/gpa/getting-started
    method: GET
- name: Device Management
  endpoint:
    path: /docs/device-management/device-management-user-guide
    method: GET
- name: VerifoneHQ API
  endpoint:
    path: /api-catalog/verifonehq-api
    method: GET
- name: Order API
  endpoint:
    path: /api-catalog/order-api
    method: GET
- name: Reporting API
  endpoint:
    path: /api-catalog/reporting-api
    method: GET
- name: Verifone eCommerce API
  endpoint:
    path: /api-catalog/verifone-ecommerce-api
    method: GET
- name: 3D Secure API
  endpoint:
    path: /api-catalog/3d-secure-api
    method: GET
- name: PayPal eComm API
  endpoint:
    path: /api-catalog/paypal-ecomm-api
    method: GET
- name: Customer API
  endpoint:
    path: /api-catalog/customer-api
    method: GET
- name: Checkout API
  endpoint:
    path: /api-catalog/checkout-api
    method: GET
- name: Verifone X990
  endpoint:
    path: /docs/in-person-payments/verifone-x990
    method: GET
    data_selector: overview
    params: {}
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: device_records
- name: rollouts
  endpoint:
    path: /rollouts
    method: GET
    data_selector: rollout_records
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: report_records
- name: payments_dashboard
  endpoint:
    path: /portal/dashboard
    method: GET
- name: orders_transactions
  endpoint:
    path: /portal/reports/transaction-reports
    method: GET
- name: settlements
  endpoint:
    path: /portal/reports/settlements-reports
    method: GET
- name: generated_reports
  endpoint:
    path: /portal/reports/generated-reports
    method: GET
- name: Verifone X990
  endpoint:
    path: /docs/in-person-payments/verifone-x990
    method: GET
    data_selector: records
    params: {}
- name: devices
  endpoint:
    path: /device-management/devices
    method: GET
    data_selector: devices
    params: {}
- name: reports
  endpoint:
    path: /device-management/reports
    method: GET
    data_selector: reports
    params: {}
- name: VerifoneHQ API
  endpoint:
    path: /api-catalog/verifonehq-api
    method: GET
- name: Order API
  endpoint:
    path: /api-catalog/order-api
    method: GET
- name: Reporting API
  endpoint:
    path: /api-catalog/reporting-api
    method: GET
- name: Verifone eCommerce API
  endpoint:
    path: /api-catalog/verifone-ecommerce-api
    method: GET
- name: 3D Secure API
  endpoint:
    path: /api-catalog/3d-secure-api
    method: GET
- name: PayPal eComm API
  endpoint:
    path: /api-catalog/paypal-ecomm-api
    method: GET
- name: Customer API
  endpoint:
    path: /api-catalog/customer-api
    method: GET
- name: Checkout API
  endpoint:
    path: /api-catalog/checkout-api
    method: GET
- name: Payments Dashboard
  endpoint:
    path: /api/payments/dashboard
    method: GET
    data_selector: KPI
- name: Order
  endpoint:
    path: /v1/orders
    method: GET
    data_selector: data
    params: {}
- name: Customer
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: data
    params: {}
- name: Payments Dashboard
  endpoint:
    path: /portal/dashboard
    method: GET
- name: Orders / Transactions
  endpoint:
    path: /portal/reports/transaction-reports
    method: GET
- name: 3D Secure Authentications
  endpoint:
    path: /verifone-central/commerce/reports/3d-secure-authentications
    method: GET
- name: Settlements
  endpoint:
    path: /portal/reports/settlements-reports
    method: GET
- name: Report Scheduler
  endpoint:
    path: /portal/reports/report-scheduler
    method: GET
- name: Generated Reports
  endpoint:
    path: /portal/reports/generated-reports
    method: GET
- name: Audit Log
  endpoint:
    path: /portal/reports/audit-log
    method: GET
- name: create_transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
    params: {}
- name: update_transaction
  endpoint:
    path: /transactions/{id}
    method: PATCH
    data_selector: transaction
    params: {}
- name: set_transaction_context
  endpoint:
    path: /transactions/context
    method: POST
    data_selector: context
    params: {}
- name: cancel_authorisation
  endpoint:
    path: /transactions/{id}/cancel
    method: POST
    data_selector: cancel
    params: {}
- name: authorize_transaction
  endpoint:
    path: /transactions/{id}/authorize
    method: POST
    data_selector: authorization
    params: {}
- name: list_products
  endpoint:
    path: /subscriptions
    method: GET
    params:
      paymentProviderContract: required
      pageSize: integer
      page: integer
      totalRequired: boolean
- name: capture_transaction
  endpoint:
    path: /transactions/{id}/capture
    method: POST
    params:
      id: required
- name: refund_transaction
  endpoint:
    path: /transactions/{id}/refund
    method: POST
    params:
      id: required
- name: get_agreement_details
  endpoint:
    path: /agreements/{agreementId}
    method: GET
    params:
      agreementId: required
      paymentProviderContract: required
- name: show_token_details
  endpoint:
    path: /tokens/{tokenId}
    method: GET
    params:
      tokenId: required
      paymentProviderContract: required
- name: create_billing_agreement_using_token
  endpoint:
    path: /agreements
    method: POST
    params:
      billingToken: required
      paymentProviderContract: required
- name: initiate_billing_agreement
  endpoint:
    path: /agreements/initiate
    method: POST
    params:
      paymentProviderContract: required
- name: cancel_agreement_details
  endpoint:
    path: /agreements/{agreementId}/cancel
    method: POST
    params:
      agreementId: required
      paymentProviderContract: required
- name: product
  endpoint:
    path: /products
    method: GET
    data_selector: products
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
    params: {}
- name: VerifoneHQ API
  endpoint:
    path: /api-catalog/verifonehq-api
    method: GET
- name: Order API
  endpoint:
    path: /api-catalog/order-api
    method: GET
- name: Reporting API
  endpoint:
    path: /api-catalog/reporting-api
    method: GET
- name: Verifone eCommerce API
  endpoint:
    path: /api-catalog/verifone-ecommerce-api
    method: GET
- name: 3D Secure API
  endpoint:
    path: /api-catalog/3d-secure-api
    method: GET
- name: PayPal eComm API
  endpoint:
    path: /api-catalog/paypal-ecomm-api
    method: GET
- name: Customer API
  endpoint:
    path: /api-catalog/customer-api
    method: GET
- name: Checkout API
  endpoint:
    path: /api-catalog/checkout-api
    method: GET
- name: C-Site Management
  endpoint:
    path: /docs/petroleum-c-store-customer-documentation/c-site-management
    method: GET
- name: Commander & Integrated POS
  endpoint:
    path: /docs/petroleum-c-store-customer-documentation/commander-integrated-pos
    method: GET
- name: c_site_management
  endpoint:
    path: /c-site-management
    method: GET
    data_selector: records
- name: commander_integrated_pos
  endpoint:
    path: /commander-integrated-pos
    method: GET
    data_selector: records
- name: subscriptions_suspend
  endpoint:
    path: /oidc/paypal-ecom/subscriptions/{id}/suspend
    method: POST
- name: get_product_details
  endpoint:
    path: /oidc/paypal-ecom/products/{id}
    method: GET
- name: list_billing_plans
  endpoint:
    path: /oidc/paypal-ecom/billing-plans
    method: GET
- name: activate_billing_plans
  endpoint:
    path: /oidc/paypal-ecom/billing-plans/{planId}/activate
    method: POST
- name: deactivate_billing_plans
  endpoint:
    path: /oidc/paypal-ecom/billing-plans/{planId}/deactivate
    method: POST
- name: get_billing_plan
  endpoint:
    path: /oidc/paypal-ecom/billing-plans/{planId}
    method: GET
- name: update_billing_plans
  endpoint:
    path: /oidc/paypal-ecom/billing-plans/{planId}
    method: PATCH
- name: create_billing_plan
  endpoint:
    path: /oidc/paypal-ecom/billing-plans
    method: POST
- name: create_subscription
  endpoint:
    path: /oidc/paypal-ecom/subscriptions
    method: POST
- name: subscription_details
  endpoint:
    path: /oidc/paypal-ecom/subscriptions/{id}
    method: GET
- name: update_subscription
  endpoint:
    path: /oidc/paypal-ecom/subscriptions/{id}
    method: PATCH
- name: revise_subscription
  endpoint:
    path: /oidc/paypal-ecom/subscriptions/{id}/revise
    method: PATCH
- name: suspend_subscription
  endpoint:
    path: /subscriptions/{id}/suspend
    method: POST
    data_selector: response
    params: {}
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{id}/cancel
    method: POST
    data_selector: response
    params: {}
- name: capture_payment
  endpoint:
    path: /subscriptions/{id}/capture
    method: POST
    data_selector: response
    params: {}
- name: activate_subscription
  endpoint:
    path: /subscriptions/{id}/activate
    method: POST
    data_selector: response
    params: {}
- name: c_site_management
  endpoint:
    path: /services/data/vXX.X/sobjects/CSiteManagement
    method: GET
    data_selector: records
    params: {}
- name: commander_integrated_pos
  endpoint:
    path: /services/data/vXX.X/sobjects/CommanderIntegratedPOS
    method: GET
    data_selector: records
    params: {}
- name: list_customers
  endpoint:
    path: /v2/customer
    method: GET
    params:
      search: string
      order_criteria: string
      order_by: string
      page_number: number
- name: create_customer
  endpoint:
    path: /v2/customer
    method: POST
- name: get_customer
  endpoint:
    path: /v2/customer/{customerId}
    method: GET
- name: update_customer
  endpoint:
    path: /v2/customer/{customerId}
    method: POST
- name: delete_customer
  endpoint:
    path: /v2/customer/{customerId}
    method: DELETE
- name: create_customer
  endpoint:
    path: /v2/customer
    method: POST
    data_selector: customer
- name: get_customer
  endpoint:
    path: /v2/customer/{customerId}
    method: GET
    data_selector: customer
- name: update_customer
  endpoint:
    path: /v2/customer/{customerId}
    method: PUT
    data_selector: customer
- name: delete_customer
  endpoint:
    path: /v2/customer/{customerId}
    method: DELETE
    data_selector: customer
- name: checkout
  endpoint:
    path: /v2/template/checkoutDetails/count
    method: GET
    data_selector: checkoutDetails
    params: {}
- name: transaction
  endpoint:
    path: /transactions
    method: POST
    data_selector: transaction
    params: {}
- name: billing_agreement
  endpoint:
    path: /billing-agreements
    method: POST
    data_selector: billing_agreement
    params: {}
- name: list_products
  endpoint:
    path: /subscriptions
    method: GET
    params:
      paymentProviderContract: required
      pageSize: integer [1 .. 20]
      page: integer [1 .. 100000]
      totalRequired: boolean
- name: count_checkouts
  endpoint:
    path: /v2/checkout/count
    method: GET
    data_selector: count
    params:
      search: string
- name: list_checkouts
  endpoint:
    path: /v2/checkout
    method: GET
    data_selector: checkouts
    params:
      page_number: 1
      order_by: DESC
      order_criteria: created_at
- name: get_checkout_by_id
  endpoint:
    path: /v2/checkout/{checkoutId}
    method: GET
    data_selector: checkout
- name: update_checkout
  endpoint:
    path: /v2/checkout/{checkoutId}
    method: PUT
    data_selector: checkout
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: records
- name: category
  endpoint:
    path: /products/category
    method: GET
    data_selector: records
- name: checkout_details_count
  endpoint:
    path: /v2/template/checkoutDetails/count
    method: GET
    data_selector: count
- name: list_themes
  endpoint:
    path: /v2/theme
    method: GET
    data_selector: themes
- name: create_theme
  endpoint:
    path: /v2/theme
    method: POST
    data_selector: theme
- name: count_themes
  endpoint:
    path: /v2/template/checkoutDetails/count
    method: GET
    data_selector: count
    params:
      search: string
- name: upload_image
  endpoint:
    path: /v2/template/checkoutDetails/image
    method: POST
    data_selector: image
    params:
      entity_id: string
- name: suspend_subscription
  endpoint:
    path: /subscriptions/{id}/suspend
    method: POST
- name: get_product_details
  endpoint:
    path: /product_details
    method: GET
- name: list_billing_plans
  endpoint:
    path: /billing_plans
    method: GET
- name: create_billing_plan
  endpoint:
    path: /billing_plans
    method: POST
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: update_subscription
  endpoint:
    path: /subscriptions/{id}
    method: PATCH
- name: template_count
  endpoint:
    path: /v2/template/checkoutDetails/count
    method: GET
    data_selector: count
- name: suspend_subscription
  endpoint:
    path: /subscriptions/{id}/suspend
    method: POST
- name: cancel_subscription
  endpoint:
    path: /subscriptions/{id}/cancel
    method: POST
- name: capture_payment
  endpoint:
    path: /subscriptions/{id}/capture
    method: POST
- name: activate_subscription
  endpoint:
    path: /subscriptions/{id}/activate
    method: POST
- name: list_customers
  endpoint:
    path: /v2/customer
    method: GET
    data_selector: customers
    params: {}
- name: create_customer
  endpoint:
    path: /v2/customer
    method: POST
    data_selector: customer
    params: {}
- name: get_customer
  endpoint:
    path: /v2/customer/{customerId}
    method: GET
    data_selector: customer
    params: {}
- name: update_customer
  endpoint:
    path: /v2/customer/{customerId}
    method: POST
    data_selector: customer
    params: {}
- name: delete_customer
  endpoint:
    path: /v2/customer/{customerId}
    method: DELETE
    data_selector: customer
    params: {}
- name: create_customer
  endpoint:
    path: /v2/customer
    method: POST
    data_selector: records
- name: get_customer
  endpoint:
    path: /v2/customer/{customerId}
    method: GET
    data_selector: records
- name: update_customer
  endpoint:
    path: /v2/customer/{customerId}
    method: PUT
    data_selector: records
- name: delete_customer
  endpoint:
    path: /v2/customer/{customerId}
    method: DELETE
    data_selector: records
- name: payment
  endpoint:
    path: /api/payments
    method: POST
    data_selector: paymentDetails
- name: reporting
  endpoint:
    path: /api/reporting
    method: GET
    data_selector: reportData
- name: create_checkout
  endpoint:
    path: /v2/checkout
    method: POST
    data_selector: StandardRequestCardCaptureRequest
    params: {}
- name: list_checkouts
  endpoint:
    path: /v2/checkouts
    method: GET
    data_selector: checkouts
    params: {}
- name: get_checkout_by_id
  endpoint:
    path: /v2/checkouts/{id}
    method: GET
    data_selector: checkout
    params: {}
- name: update_checkout
  endpoint:
    path: /v2/checkouts/{id}
    method: PATCH
    data_selector: checkout
    params: {}
- name: count_checkouts
  endpoint:
    path: /v2/checkouts/count
    method: GET
    data_selector: count
    params: {}
- name: count_checkouts
  endpoint:
    path: /v2/checkout/count
    method: GET
    data_selector: count
    params:
      search: entity_id==a6b45428-0296-4394-8ddd-0b50b5b20aa9&amount==324
- name: list_checkouts
  endpoint:
    path: /v2/checkout
    method: GET
    data_selector: checkouts
    params:
      page_size: 50
      page_number: 1
- name: checkoutDetailsCount
  endpoint:
    path: /v2/template/checkoutDetails/count
    method: GET
    data_selector: count
- name: createTheme
  endpoint:
    path: /v2/theme
    method: POST
    data_selector: theme
- name: listThemes
  endpoint:
    path: /v2/theme
    method: GET
    data_selector: themes
- name: count_themes
  endpoint:
    path: /v2/template/checkoutDetails/count
    method: GET
    data_selector: count
    params:
      search: string
- name: upload_image
  endpoint:
    path: /v2/template/image/upload
    method: POST
    data_selector: image
    params:
      entity_id: string
- name: template_count
  endpoint:
    path: /v2/template/checkoutDetails/count
    method: GET
    data_selector: count
- name: template_list
  endpoint:
    path: /v2/template/checkoutDetails
    method: GET
    data_selector: templates
- name: Order API
  endpoint:
    path: /api-catalog/order-api
    method: GET
- name: Reporting API
  endpoint:
    path: /api-catalog/reporting-api
    method: GET
- name: Verifone eCommerce API
  endpoint:
    path: /api-catalog/verifone-ecommerce-api
    method: GET
- name: 3D Secure API
  endpoint:
    path: /api-catalog/3d-secure-api
    method: GET
- name: PayPal eComm API
  endpoint:
    path: /api-catalog/paypal-ecomm-api
    method: GET
- name: Customer API
  endpoint:
    path: /api-catalog/customer-api
    method: GET
- name: Checkout API
  endpoint:
    path: /api-catalog/checkout-api
    method: GET
- name: VerifoneHQ
  endpoint:
    path: /api-catalog/verifonehq-api
    method: GET
- name: Order
  endpoint:
    path: /api-catalog/order-api
    method: GET
- name: Reporting
  endpoint:
    path: /api-catalog/reporting-api
    method: GET
- name: Verifone eCommerce
  endpoint:
    path: /api-catalog/verifone-ecommerce-api
    method: GET
- name: 3D Secure
  endpoint:
    path: /api-catalog/3d-secure-api
    method: GET
- name: PayPal eComm
  endpoint:
    path: /api-catalog/paypal-ecomm-api
    method: GET
- name: Customer
  endpoint:
    path: /api-catalog/customer-api
    method: GET
- name: Checkout
  endpoint:
    path: /api-catalog/checkout-api
    method: GET
- name: VerifoneHQ API
  endpoint:
    path: /api-catalog/verifonehq-api
    method: GET
- name: Order API
  endpoint:
    path: /api-catalog/order-api
    method: GET
- name: Reporting API
  endpoint:
    path: /api-catalog/reporting-api
    method: GET
- name: Verifone eCommerce API
  endpoint:
    path: /api-catalog/verifone-ecommerce-api
    method: GET
- name: 3D Secure API
  endpoint:
    path: /api-catalog/3d-secure-api
    method: GET
- name: PayPal eComm API
  endpoint:
    path: /api-catalog/paypal-ecomm-api
    method: GET
- name: Customer API
  endpoint:
    path: /api-catalog/customer-api
    method: GET
- name: Checkout API
  endpoint:
    path: /api-catalog/checkout-api
    method: GET
notes:
- PCI-compliant card payments can be accepted through the checkout as a Hosted Payments
  Page (HPP), or as an iFrame.
- Integration method is available via Verifone Central and Checkout API
- Combining 3-D Secure and mail or telephone orders is not possible.
- Ensure the Payment Provider Contract is configured to accept the required payment
  methods.
- Merchant Reference is optional but recommended for administration.
- Some options are only available based on the selected Payment Provider Contract.
- Mobile SDKs require compliance with a minimum SAQ A-EP level.
- Mobile SDKs can be used to facilitate card payments with 3DS support.
- Mobile SDK is using a native experience leveraging the Google Pay UI.
- Mobile SDK is using a native experience, leveraging Apple Pay.
- In the Production environment, the settlement will take place according to a fixed
  scheduled time per acquirer.
- In the Production environment, the settlement will take place according to a fixed
  scheduled time per acquirer (usually this happens at the end of the day). Check
  the contract with your acquirer for settlement period details.
- 3D Secure is available for card payments, Google Pay, Apple Pay, Vipps and Mobile
  Pay.
- It is not available for Advanced Payment Methods (APM), only for card transactions.
- The JavaScript can be added to your site as any other client-side script, through
  a script tag.
- It is suggested to add the script after all your content, before closing the HTML
  body tag.
- Bin profiling was successful. Some merchants may want to only move forward with
  CCA if profiling was successful
- An error occurred during profiling
- The API Key should only be used to sign the JWT and to verify a JWT signature from
  the JavaScript. It should never be included within the JWT itself.
- The JavaScript collects all the device data of the user’s browser, communicates
  directly with the 3DS Server, and handles the user experience of the cardholder
  during the challenge.
- Ensure a seamless integration framework for your business operations.
- Tokenization means protecting sensitive data by replacing it with algorithmically
  generated characters called tokens.
- Token scopes can only be created by organizations with type Merchant Company.
- Token scopes can only be used by organizations with type Merchant Site.
- The API Key should never be rendered or displayed anywhere your users could find
  it.
- The API Key should only be used to sign the JWT and to verify a JWT signature from
  the JavaScript.
- Requires setup of connected app in Verifone
- XPI is available in North America.
- Only one token scope can be used when requesting a token.
- The Verifone X990 is a thin, lightweight, portable smart device featuring the latest
  Verifone Android 10.x operating system.
- Equipped with the fastest mobile 4G communications.
- If you are accessing the Payments Dashboard in the Sandbox environment, it may take
  up to one hour for updates to be displayed.
- If you are a newly onboarded user, it may take up to 4 hours for the data in the
  dashboard to be displayed.
- Access reports through the Commerce tab in Verifone Central.
- Supports third-party applications
- Requires setup of connected app in api
- You need to be logged in to your verifone.cloud account to view the content of this
  page.
- Device Management requires setup for OAuth2 authentication.
- If accessing the Payments Dashboard in the Sandbox environment, it may take up to
  one hour for updates to be displayed.
- Newly onboarded users may take up to 4 hours for data to be displayed in the dashboard.
- Ensure to configure OAuth2 correctly for token management.
- APIs may have rate limits, check documentation for details.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- Verifone uses API keys for authentication.
- Ensure to follow PCI compliance guidelines.
- Verifone Hosted Tokenization offers a seamless omnichannel solution with an additional
  layer of security across all retail sales channels, including in-store, online,
  and telephone payments.
- The customer detail requirements are not the same for 3DS and non-3DS payments.
- Verifone hosts the payment page. This decreases your PCI scope to SAQ A.
- TO THE EXTENT NOT PROHIBITED BY APPLICABLE LAW, IN NO EVENT WILL VERIFONE BE LIABLE
  FOR ANY DIRECT, INCIDENTAL, SPECIAL, INDIRECT, OR CONSEQUENTIAL DAMAGES, INCLUDING,
  WITHOUT LIMITATION, DAMAGES FOR LOSS OF PROFITS, CORRUPTION OR LOSS OF DATA, BUSINESS
  INTERRUPTION, LOSS OF GOODWILL OR SAVINGS, DOWNTIME, OR DAMAGE TO, LOSS OF OR REPLACEMENT
  OF DATA OR TRANSACTIONS, CHARGE-BACKS, EQUIPMENT PURCHASED OR ACQUIRED BY YOU IN
  ORDER TO USE THE PORTAL, TEST EQUIPMENT, OR MATERIALS, OR ANY OTHER COMMERCIAL DAMAGES
  OR LOSSES, ARISING OUT OF OR RELATED TO YOUR USE OR INABILITY TO USE THE PRODUCTS
  DEVELOPED BY YOU, ANY ADD-ON MODULE, ANY SOFTWARE DEVELOPED BY YOU, OR ANY THIRD
  PARTY SOFTWARE, APPLICATIONS, OR SERVICES IN CONJUNCTION WITH THE PORTAL, TEST EQUIPMENT,
  OR MATERIALS, HOWEVER CAUSED, REGARDLESS OF THEORY OF LIABILITY (CONTRACT, TORT,
  OR OTHERWISE) AND EVEN IF VERIFONE HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
- THE FOREGOING LIMITATIONS WILL APPLY EVEN IF THE ABOVE STATED REMEDY FAILS OF ITS
  ESSENTIAL PURPOSE.
errors:
- 'Transaction failed: Check card details or payment provider configuration.'
- '4000: Validation Error A valid merchant consumer session ID is required.'
- '1000: Error processing request. We have encountered an unexpected error.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '201: Token created successfully.'
- '200: Token updated successfully.'
- 'Non Active: Token already created for this token scope and encrypted_card details.'
- '401 Unauthorized: Check your credentials and permissions.'
- '404 Not Found: The requested resource does not exist.'
- '500 Internal Server Error: Please try again later.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your OAuth credentials.'
- '404 Not Found: Verify the endpoint path.'
- '429 Too Many Requests: Rate limit exceeded.'
- 204 No Content
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 404 Not Found
- 500 Internal Server Error
- '204: No Content'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '500: Internal Server Error'
- '400 Bad Request: At least one parameter is invalid. Examine the details property
  for more information. Invalid parameters are listed and prefixed accordingly: body
  for parameters submitted in the request''s body, query for parameters appended to
  the request''s URL, and params for templated parameters of the request''s URL.'
- '400 Bad Request: The submitted or requested resource is invalid. If you submitted
  a resource, please check for invalid fields, which will be listed in the details
  property. If you requested a resource, ensure the latter is valid, as well as its
  sub-resources.'
- '400 Bad Request: At least one parameter is missing from the request body. Revise
  request payload, API docs and refer to the integration guides for the payment methods
  to check for any conditionally required fields which might be necessary.'
- '400 Bad Request: The transaction has been rejected by the processor. The request
  reached the processor, but it failed the validation checks required by the processor.
  Please examine your request. If the error persists, contact an administrator.'
- '400 Bad Request: At least one parameter is unexpected, or unwanted. If you''re
  trying to update a resource, be sure to include only parameters that you want to,
  and may, update. Some parameters are read-only or create-only.'
- '400 Bad Request: Parameters in the request body are conflicting with one another.
  It''s likely that they are valid individually, yet they can''t be submitted together,
  as that would lead to invalid combinations.'
- '400 Bad Request: The checkout you are trying to use has reached max notification
  attempts.'
- '400 Bad Request: Reached maximum theme creations allowed. Delete existing themes
  to create a new one.'
- '401 Unauthorized: Access is restricted to authenticated users only. The query can''t
  be made without a valid JWT (check the Authorization header of your request), or
  a valid session (in which case session cookies are automatically set by the browser).'
- '403 Forbidden: The submitted transaction has been blocked by a ruleset specified
  by the organization owning the account, or by a superior organization.'
- '403 Forbidden: Insufficient permissions. Your current user roles don''t allow you
  to perform this query. Should you believe this error to be incorrect, please contact
  an administrator.'
- '403 Forbidden: The transaction has been declined by the processor. The request
  reached the processor, but it was not accepted. A decline reason code is available
  in the details property.'
- '403 Forbidden: The checkout you are trying to use has already reached the maximum
  number of failed 3D secure processing attempts done through it and is not accessible
  anymore.'
- '403 Forbidden: The checkout you are trying to use has already reached the maximum
  number of failed transaction attempts done through it and is not accessible anymore.'
- '403 Forbidden: The checkout you are trying to use has already been completed.'
- '403 Forbidden: The checkout you are trying to use has expired.'
- '403 Forbidden: The checkout you are trying to use has been cancelled.'
- '404 Not Found: The requested resource, or one of its sub-resources, can''t be found.
  If the submitted query is valid, this error is likely to be caused by a problem
  with a nested resource that has been deleted or modified.'
- '500 Internal Server: Unexpected error: if the error persists, please contact an
  administrator, quoting the code and timestamp of this error.'
- '500 Internal Server: An error occurred during 3D Secure processing. For more information,
  please refer to the details property.'
- '500 Internal Server: Timeout of API call.'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Ensure API key is valid.'
- '400 Bad Request: At least one parameter is invalid. Examine the details property
  for more information.'
- '400 Bad Request: The submitted or requested resource is invalid.'
- '400 Bad Request: At least one parameter is missing from the request body.'
- '400 Bad Request: The transaction has been rejected by the processor.'
- '400 Bad Request: At least one parameter is unexpected, or unwanted.'
- '400 Bad Request: Parameters in the request body are conflicting with one another.'
- '400 Bad Request: Reached maximum theme creations allowed.'
- '401 Unauthorized: Access is restricted to authenticated users only.'
- '403 Forbidden: The submitted transaction has been blocked by a ruleset specified
  by the organization.'
- '403 Forbidden: Insufficient permissions.'
- '403 Forbidden: The transaction has been declined by the processor.'
- '403 Forbidden: The checkout you are trying to use has already reached the maximum
  number of failed 3D secure processing attempts.'
- '404 Not Found: The requested resource, or one of its sub-resources, can''t be found.'
- '500 Internal Server: Unexpected error.'
- '500 Internal Server: An error occurred during 3D Secure processing.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://verifone.cloud
  auth:
    type: oauth2
source_metadata: null
