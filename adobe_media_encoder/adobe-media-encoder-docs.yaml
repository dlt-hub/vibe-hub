resources:
- name: onItemAddedToBatch
  endpoint:
    path: /onItemAddedToBatch
    method: GET
    data_selector: records
- name: onEncodeComplete
  endpoint:
    path: /onEncodeComplete
    method: GET
    data_selector: records
- name: onBatchItemStatusChanged
  endpoint:
    path: /onBatchItemStatusChanged
    method: GET
    data_selector: records
- name: onEncodingItemProgressUpdated
  endpoint:
    path: /onEncodingItemProgressUpdated
    method: GET
    data_selector: records
- name: onError
  endpoint:
    path: /onError
    method: GET
    data_selector: records
- name: onItemEncodingStarted
  endpoint:
    path: /onItemEncodingStarted
    method: GET
    data_selector: records
- name: onMediaInfoCreated
  endpoint:
    path: /onMediaInfoCreated
    method: GET
    data_selector: records
- name: onPostProcessListInitialized
  endpoint:
    path: /onPostProcessListInitialized
    method: GET
    data_selector: records
- name: encoder_wrapper
  endpoint:
    path: /addFileToBatch
    method: POST
    data_selector: encoderWrapper
    params: {}
- name: exportItem
  endpoint:
    path: /exportItem
    method: POST
    data_selector: result
    params: {}
- name: exportGroup
  endpoint:
    path: /exportGroup
    method: POST
    data_selector: result
    params: {}
- name: exportSequence
  endpoint:
    path: /exportSequence
    method: POST
    data_selector: result
    params: {}
- name: getSourceMediaInfo
  endpoint:
    path: /getSourceMediaInfo
    method: GET
    data_selector: mediaInfo
    params: {}
- name: removeAllBatchItems
  endpoint:
    path: /removeAllBatchItems
    method: POST
    data_selector: success
    params: {}
- name: trimExportForSR
  endpoint:
    path: /trimExportForSR
    method: POST
    data_selector: success
    params: {}
- name: sourceMediaInfo
  endpoint:
    path: /source/media/info
    method: GET
    data_selector: sourceMediaInfo
- name: watchFolderScriptObject
  endpoint:
    path: /watchfolder/script/object
    method: GET
    data_selector: watchFolderScriptObject
- name: onEncodeComplete
  endpoint:
    path: /onEncodeComplete
    method: GET
    data_selector: records
- name: onBatchItemStatusChanged
  endpoint:
    path: /onBatchItemStatusChanged
    method: GET
    data_selector: records
- name: onEncodingItemProgressUpdated
  endpoint:
    path: /onEncodingItemProgressUpdated
    method: GET
    data_selector: records
- name: onError
  endpoint:
    path: /onError
    method: GET
    data_selector: records
- name: onItemEncodingStarted
  endpoint:
    path: /onItemEncodingStarted
    method: GET
    data_selector: records
- name: onMediaInfoCreated
  endpoint:
    path: /onMediaInfoCreated
    method: GET
    data_selector: records
- name: onPostProcessListInitialized
  endpoint:
    path: /onPostProcessListInitialized
    method: GET
    data_selector: records
- name: onItemAddedToBatch
  endpoint:
    path: /onItemAddedToBatch
    method: GET
    data_selector: records
- name: EncoderWrapper
  endpoint:
    path: /services/data/vXX.X/sobjects/EncoderWrapper
    method: GET
    data_selector: records
    params: {}
- name: EncoderHostWrapperEvent
  endpoint:
    path: /services/data/vXX.X/sobjects/EncoderHostWrapperEvent
    method: GET
    data_selector: records
    params: {}
- name: onItemAddedToBatch
  endpoint:
    path: /onItemAddedToBatch
    method: GET
    data_selector: eventObj
    params: {}
- name: encoder_wrapper
  endpoint:
    path: /encoder/wrapper
    method: POST
- name: exporter
  endpoint:
    path: /exporter
    method: POST
- name: exportItem
  endpoint:
    path: /export/item
    method: POST
    data_selector: records
- name: exporter
  endpoint:
    path: /exporter
    method: GET
    data_selector: exporterData
- name: addCompToBatch
  endpoint:
    path: /addCompToBatch
    method: POST
- name: addDLToBatch
  endpoint:
    path: /addDLToBatch
    method: POST
- name: addFileSequenceToBatch
  endpoint:
    path: /addFileSequenceToBatch
    method: POST
- name: addFileToBatch
  endpoint:
    path: /addFileToBatch
    method: POST
- name: addItemToBatch
  endpoint:
    path: /addItemToBatch
    method: POST
- name: addTeamProjectsItemToBatch
  endpoint:
    path: /addTeamProjectsItemToBatch
    method: POST
- name: addXMLToBatch
  endpoint:
    path: /addXMLToBatch
    method: POST
- name: getDLItemsAtRoot
  endpoint:
    path: /getDLItemsAtRoot
    method: GET
- name: stitchFiles
  endpoint:
    path: /stitchFiles
    method: POST
- name: onItemAddedToBatch
  endpoint:
    path: /onItemAddedToBatch
    method: GET
    data_selector: eventObj
    params: {}
- name: setWorkArea
  endpoint:
    path: /setWorkArea
    method: POST
    data_selector: result
- name: setWorkAreaInTicks
  endpoint:
    path: /setWorkAreaInTicks
    method: POST
    data_selector: result
- name: setXMPData
  endpoint:
    path: /setXMPData
    method: POST
    data_selector: result
notes:
- Output format is in JSON.
- Some methods may not return valid objects.
- Event listeners must be set up to capture encoding progress and completion.
- The projectPath can be a path to an AfterEffects, Premiere Pro or Character Animator
  project
- Uses various event listeners for batch processing
- Uses Adobe Media Encoder scripting methods.
- The API does not require authentication.
- Use for the source a valid Team Projects URL or a Team Projects Snap.
- The event will be sent after a batch item has been created successfully.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
errors:
- EncoderWrapper object is not valid
- Frontend object is not valid
auth_info:
  mentioned_objects: []
client:
  base_url: C:\testdata\
  headers:
    Accept: application/json
source_metadata: null
