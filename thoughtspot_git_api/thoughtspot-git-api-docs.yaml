resources:
- name: commit_files
  endpoint:
    path: /api/rest/2.0/vcs/git/branches/commit
    method: POST
    data_selector: results
    params: {}
- name: deploy_commits
  endpoint:
    path: /api/rest/2.0/vcs/git/deploy
    method: POST
    data_selector: results
    params: {}
- name: validate_merge
  endpoint:
    path: /api/rest/2.0/vcs/git/validate
    method: POST
    data_selector: results
    params: {}
- name: search_commits
  endpoint:
    path: /api/rest/2.0/vcs/git/search
    method: GET
    data_selector: results
    params: {}
- name: revert_commit
  endpoint:
    path: /api/rest/2.0/vcs/git/revert
    method: POST
    data_selector: results
    params: {}
- name: commit_files
  endpoint:
    path: /api/rest/2.0/vcs/git/branches/commit
    method: POST
    data_selector: results
    params: {}
- name: deploy_commits
  endpoint:
    path: /api/rest/2.0/vcs/git/deploy
    method: POST
    data_selector: results
    params: {}
- name: validate_merge
  endpoint:
    path: /api/rest/2.0/vcs/git/validate
    method: POST
    data_selector: results
    params: {}
- name: search_commits
  endpoint:
    path: /api/rest/2.0/vcs/git/search
    method: GET
    data_selector: results
    params: {}
- name: revert_commit
  endpoint:
    path: /api/rest/2.0/vcs/git/revert
    method: POST
    data_selector: results
    params: {}
- name: commit
  endpoint:
    path: /api/rest/2.0/vcs/git/branches/commit
    method: POST
- name: deploy_commits
  endpoint:
    path: /api/rest/2.0/vcs/git/commits/deploy
    method: POST
- name: validate_merge
  endpoint:
    path: /api/rest/2.0/vcs/git/branches/validate
    method: POST
- name: search_commits
  endpoint:
    path: /api/rest/2.0/vcs/git/commits/search
    method: POST
- name: revert_commit
  endpoint:
    path: /api/rest/2.0/vcs/git/commits/{commit_id}/revert
    method: POST
- name: users
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: data
    params: {}
- name: groups
  endpoint:
    path: /api/v2/groups
    method: GET
    data_selector: data
    params: {}
- name: commit
  endpoint:
    path: /api/rest/2.0/vcs/git/branches/commit
    method: POST
    data_selector: metadata
    params:
      delete_aware: true
- name: deploy_commits
  endpoint:
    path: /api/rest/2.0/vcs/git/commits/deploy
    method: POST
    data_selector: deploy_type
    params:
      deploy_policy: ALL_OR_NONE
- name: validate_merge
  endpoint:
    path: /api/rest/2.0/vcs/git/branches/validate
    method: POST
    data_selector: source_branch_name
    params: {}
- name: revert_commit
  endpoint:
    path: /api/rest/2.0/vcs/git/commits/{commit_id}/revert
    method: POST
    data_selector: metadata
    params:
      revert_policy: ALL_OR_NONE
- name: embed_search
  endpoint:
    path: /api/v1/embed/search
    method: POST
    data_selector: results
    params: {}
- name: embed_liveboard
  endpoint:
    path: /api/v1/embed/liveboard
    method: GET
    data_selector: liveboard
    params: {}
- name: spotter_ai_apis
  endpoint:
    path: /api/rest/2.0/ai/agent/conversation/create
    method: POST
- name: data_source_suggestions
  endpoint:
    path: /api/rest/2.0/ai/data-source-suggestions
    method: GET
- name: relevant_questions
  endpoint:
    path: /api/rest/2.0/ai/relevant-questions/
    method: GET
- name: agent_converse_sse
  endpoint:
    path: /api/rest/2.0/ai/agent/converse/sse
    method: GET
- name: connection
  endpoint:
    path: /tspublic/rest/v2/connection
    method: GET
- name: report
  endpoint:
    path: /tspublic/rest/v2/report/liveboard
    method: POST
- name: security_permission_tsobject
  endpoint:
    path: /tspublic/rest/v2/security/permission/tsobject
    method: GET
- name: customaction
  endpoint:
    path: /tspublic/rest/v2/customaction
    method: GET
- name: connection
  endpoint:
    path: /tspublic/rest/v2/connection
    method: GET
- name: report
  endpoint:
    path: /tspublic/rest/v2/report/liveboard
    method: POST
- name: security_tsobject
  endpoint:
    path: /tspublic/rest/v2/security/share/tsobject
    method: POST
- name: security_visualization
  endpoint:
    path: /tspublic/rest/v2/security/share/visualization
    method: POST
- name: security_permission_tsobject
  endpoint:
    path: /tspublic/rest/v2/security/permission/tsobject
    method: GET
- name: security_permission_principal
  endpoint:
    path: /tspublic/rest/v2/security/permission/principal
    method: GET
- name: customaction
  endpoint:
    path: /tspublic/rest/v2/customaction
    method: GET
- name: connection
  endpoint:
    path: /tspublic/v1/connection/create
    method: POST
- name: metadata
  endpoint:
    path: /tspublic/v1/metadata/list
    method: GET
- name: session_info
  endpoint:
    path: /tspublic/v1/session/info
    method: GET
- name: connection_create
  endpoint:
    path: /tspublic/v1/connection/create
    method: POST
- name: connection_update
  endpoint:
    path: /tspublic/v1/connection/update
    method: POST
- name: connection_export
  endpoint:
    path: /tspublic/v1/connection/export
    method: POST
- name: connection_delete
  endpoint:
    path: /tspublic/v1/connection/delete
    method: POST
- name: metadata_list
  endpoint:
    path: /tspublic/v1/metadata/list
    method: GET
- name: session_info
  endpoint:
    path: /tspublic/v1/session/info
    method: GET
- name: user_activate
  endpoint:
    path: /tspublic/v1/user/activate
    method: POST
- name: user_inactivate
  endpoint:
    path: /tspublic/v1/user/inactivate
    method: POST
- name: user_resetpassword
  endpoint:
    path: /tspublic/v1/user/resetpassword
    method: POST
- name: group_users
  endpoint:
    path: /tspublic/v1/group/{groupid}/users
    method: PUT
- name: group_addmemberships
  endpoint:
    path: /tspublic/v1/group/addmemberships
    method: POST
- name: group_removememberships
  endpoint:
    path: /tspublic/v1/group/removememberships
    method: POST
- name: user_update_preference
  endpoint:
    path: /tspublic/v1/user/updatepreference
    method: POST
    data_selector: null
    params: {}
- name: metadata_listas
  endpoint:
    path: /tspublic/v1/metadata/listas
    method: GET
    data_selector: null
    params: {}
- name: tml_import
  endpoint:
    path: /api/rest/2.0/metadata/tml/import
    method: POST
    data_selector: results
- name: tml_export
  endpoint:
    path: /api/rest/2.0/metadata/tml/export
    method: POST
    data_selector: results
- name: role_create
  endpoint:
    path: /api/rest/2.0/roles/create
    method: POST
    data_selector: results
- name: role_update
  endpoint:
    path: /api/rest/2.0/roles/{role_identifier}/update
    method: POST
    data_selector: results
- name: schedules
  endpoint:
    path: /api/rest/2.0/schedules/create
    method: POST
- name: users
  endpoint:
    path: /api/rest/2.0/users/{user_identifier}/update
    method: POST
- name: groups
  endpoint:
    path: /api/rest/2.0/groups/{group_identifier}/update
    method: POST
- name: auth_session
  endpoint:
    path: /api/rest/2.0/auth/session/login
    method: POST
- name: Spotter
  endpoint:
    path: /ai/agent/conversation/create
    method: POST
- name: Email customization
  endpoint:
    path: /customization/email/update
    method: POST
- name: user
  endpoint:
    path: /tspublic/v1/user
    method: POST
- name: role
  endpoint:
    path: /tspublic/v1/role
    method: POST
- name: session_auth_token
  endpoint:
    path: /tspublic/v1/session/auth/token
    method: POST
- name: async_import
  endpoint:
    path: /api/rest/2.0/metadata/tml/async/import
    method: POST
- name: import
  endpoint:
    path: /api/rest/2.0/metadata/tml/import
    method: POST
- name: export
  endpoint:
    path: /api/rest/2.0/metadata/tml/export
    method: POST
- name: share_metadata
  endpoint:
    path: /api/rest/2.0/security/metadata/share
    method: POST
- name: role_create
  endpoint:
    path: /api/rest/2.0/roles/create
    method: POST
- name: schedules
  endpoint:
    path: /api/rest/2.0/schedules/create
    method: POST
- name: security_share
  endpoint:
    path: /tspublic/v1/security/share
    method: POST
- name: security_shareviz
  endpoint:
    path: /tspublic/v1/security/shareviz
    method: POST
- name: session_login_token
  endpoint:
    path: /tspublic/v1/session/login/token
    method: GET
- name: metadata_assigntag
  endpoint:
    path: /tspublic/v1/metadata/assigntag
    method: POST
- name: metadata_details
  endpoint:
    path: /tspublic/v1/metadata/details
    method: GET
- name: metadata_markunmarkfavoritefor
  endpoint:
    path: /tspublic/v1/metadata/markunmarkfavoritefor
    method: POST
- name: metadata_markunmarkfavoritefor_delete
  endpoint:
    path: /tspublic/v1/metadata/markunmarkfavoritefor
    method: DELETE
- name: session_homepinboard
  endpoint:
    path: /tspublic/v1/session/homepinboard
    method: POST
- name: session_homepinboard_get
  endpoint:
    path: /tspublic/v1/session/homepinboard
    method: GET
- name: session_homepinboard_delete
  endpoint:
    path: /tspublic/v1/session/homepinboard
    method: DELETE
- name: user_updatepreference
  endpoint:
    path: /tspublic/v1/user/updatepreference
    method: POST
- name: metadata_listas
  endpoint:
    path: /tspublic/v1/metadata/listas
    method: GET
- name: user
  endpoint:
    path: /tspublic/v1/user
    method: POST
    data_selector: records
    params: {}
- name: role
  endpoint:
    path: /tspublic/v1/role
    method: POST
    data_selector: records
    params: {}
- name: security_share
  endpoint:
    path: /tspublic/v1/security/share
    method: POST
- name: security_shareviz
  endpoint:
    path: /tspublic/v1/security/shareviz
    method: POST
- name: session_login_token
  endpoint:
    path: /tspublic/v1/session/login/token
    method: GET
- name: metadata_assigntag
  endpoint:
    path: /tspublic/v1/metadata/assigntag
    method: POST
- name: metadata_details
  endpoint:
    path: /tspublic/v1/metadata/details
    method: GET
- name: metadata_markunmarkfavoritefor
  endpoint:
    path: /tspublic/v1/metadata/markunmarkfavoritefor
    method: POST
- name: metadata_markunmarkfavoritefor_delete
  endpoint:
    path: /tspublic/v1/metadata/markunmarkfavoritefor
    method: DELETE
- name: session_homepinboard
  endpoint:
    path: /tspublic/v1/session/homepinboard
    method: POST
- name: session_homepinboard_get
  endpoint:
    path: /tspublic/v1/session/homepinboard
    method: GET
- name: session_homepinboard_delete
  endpoint:
    path: /tspublic/v1/session/homepinboard
    method: DELETE
- name: user_updatepreference
  endpoint:
    path: /tspublic/v1/user/updatepreference
    method: POST
- name: metadata_listas
  endpoint:
    path: /tspublic/v1/metadata/listas
    method: GET
- name: Liveboard
  endpoint:
    path: /liveboards
    method: GET
    data_selector: liveboardId
- name: LiveboardEmbed
  endpoint:
    path: /embed/liveboard
    method: GET
    data_selector: liveboardData
- name: SageEmbed
  endpoint:
    path: /embed/sage
    method: GET
    data_selector: sageData
- name: AppEmbed
  endpoint:
    path: /embed/app
    method: GET
    data_selector: appData
- name: SearchEmbed
  endpoint:
    path: /embed/search
    method: GET
    data_selector: searchData
- name: SearchBarEmbed
  endpoint:
    path: /embed/searchbar
    method: GET
    data_selector: searchBarData
- name: fetchLiveboardData
  endpoint:
    path: /fetchLiveboardData
    method: POST
    data_selector: data.fetchLiveboardData
    params: {}
- name: createUser
  endpoint:
    path: /createUser
    method: POST
    data_selector: data.createUser
    params: {}
- name: liveboard
  endpoint:
    path: /embed/liveboard
    method: GET
- name: LiveboardEmbed
  endpoint:
    path: /embed/liveboard
    method: GET
- name: SpotterEmbed
  endpoint:
    path: /docs/embed-spotter
    method: GET
- name: SpotterAgentEmbed
  endpoint:
    path: /docs/embed-spotter-agent
    method: GET
- name: Liveboard
  endpoint:
    path: /liveboard
    method: GET
    data_selector: liveboards
- name: worksheet
  endpoint:
    path: your-worksheet-id
    method: GET
    data_selector: data
- name: liveboard
  endpoint:
    path: /embed/liveboard
    method: GET
- name: spotter_agent
  endpoint:
    path: /spotter/agent
    method: POST
    data_selector: response
    params:
      worksheetId: your-worksheet-id
- name: LiveboardEmbed
  endpoint:
    path: /embed/liveboard
    method: GET
    data_selector: visualization
    params: {}
- name: SpotterEmbed
  endpoint:
    path: /embed/spotter
    method: GET
- name: SpotterAgentEmbed
  endpoint:
    path: /embed/spotter-agent
    method: GET
- name: worksheet
  endpoint:
    path: /your-worksheet-id
    method: GET
    data_selector: data
- name: Home
  endpoint:
    path: home
    method: GET
    data_selector: records
    params: {}
- name: Answers
  endpoint:
    path: home/answers
    method: GET
    data_selector: records
    params: {}
- name: Liveboards
  endpoint:
    path: home/liveboards
    method: GET
    data_selector: records
    params: {}
- name: SpotIQ Analysis
  endpoint:
    path: home/spotiq-analysis
    method: GET
    data_selector: records
    params: {}
- name: Monitor Subscriptions
  endpoint:
    path: home/monitor-alerts
    method: GET
    data_selector: records
    params: {}
- name: search_embed
  endpoint:
    path: /search/embed
    method: POST
    data_selector: data
    params: {}
- name: embed_application
  endpoint:
    path: /docs/full-app-customize
    method: GET
    data_selector: applications
    params: {}
- name: searchdata
  endpoint:
    path: /api/rest/2.0/searchdata
    method: POST
    data_selector: contents
    params:
      query_string: query
      logical_table_identifier: sourceName
      data_format: COMPACT
      record_size: 1000000
- name: home
  endpoint:
    path: /home
    method: GET
    data_selector: records
    params: {}
- name: answers
  endpoint:
    path: /home/answers
    method: GET
    data_selector: records
    params: {}
- name: liveboards
  endpoint:
    path: /home/liveboards
    method: GET
    data_selector: records
    params: {}
- name: spotiq-analysis
  endpoint:
    path: /home/spotiq-analysis
    method: GET
    data_selector: records
    params: {}
- name: monitor-alerts
  endpoint:
    path: /home/monitor-alerts
    method: GET
    data_selector: records
    params: {}
- name: SpotterEmbed
  endpoint:
    path: /embed/spotter
    method: GET
- name: LiveboardEmbed
  endpoint:
    path: /embed/liveboard
    method: GET
- name: AppEmbed
  endpoint:
    path: /embed/app
    method: GET
- name: SpotterAgent
  endpoint:
    path: /spotter/agent
    method: POST
    data_selector: response.message
- name: SearchEmbed
  endpoint:
    path: /search/embed
    method: POST
    data_selector: searchOptions
- name: SageEmbed
  endpoint:
    path: /sage/embed
    method: POST
    data_selector: searchOptions
- name: SearchBarEmbed
  endpoint:
    path: /embed/searchbar
    method: GET
- name: searchdata
  endpoint:
    path: /api/rest/2.0/searchdata
    method: POST
    data_selector: contents
    params: {}
- name: Liveboard
  endpoint:
    path: /liveboard
    method: GET
    data_selector: liveboardData
- name: Spotter
  endpoint:
    path: /api/v1/spotter
    method: GET
- name: LiveboardEmbed
  endpoint:
    path: /api/v1/liveboard
    method: GET
- name: AppEmbed
  endpoint:
    path: /api/v1/app
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: searchResults
    params: {}
- name: sage
  endpoint:
    path: /sage
    method: GET
    data_selector: sageResults
    params: {}
- name: liveboard
  endpoint:
    path: /liveboard
    method: GET
    data_selector: liveboardId
- name: auth_token
  endpoint:
    path: /api/rest/2.0/auth/token/full
    method: POST
    data_selector: token
    params:
      username: username
      secret_key: secretKey
      validity_time_in_sec: 30
      auto_create: false
- name: Liveboard
  endpoint:
    path: /embed/liveboard
    method: GET
    data_selector: liveboard
    params: {}
- name: Liveboard
  endpoint:
    path: /api/liveboards
    method: GET
    data_selector: liveboards
- name: LiveboardEmbed
  endpoint:
    path: /liveboard/embed
    method: GET
- name: liveboard
  endpoint:
    path: /embed/liveboard
    method: GET
    data_selector: liveboardId
    params: {}
- name: auth_token
  endpoint:
    path: /api/rest/2.0/auth/token/full
    method: POST
    data_selector: token
    params:
      username: user
      validity_time_in_sec: 30
      auto_create: false
      secret_key: secretKey
- name: Liveboard
  endpoint:
    path: /api/liveboard
    method: GET
    data_selector: liveboard
- name: menu_elements
  endpoint:
    path: /docs/css-variables-reference#_menu_elements
    method: GET
    data_selector: variables
- name: dialogs
  endpoint:
    path: /docs/css-variables-reference#_dialogs
    method: GET
    data_selector: variables
- name: button_elements
  endpoint:
    path: /docs/css-variables-reference#_button_elements
    method: GET
    data_selector: variables
- name: checkboxes
  endpoint:
    path: /docs/css-variables-reference#_checkboxes
    method: GET
    data_selector: variables
- name: lists
  endpoint:
    path: /docs/css-variables-reference#_lists
    method: GET
    data_selector: variables
- name: liveboard
  endpoint:
    path: /docs/css-variables-reference#_liveboard
    method: GET
    data_selector: variables
- name: visualization_and_answer
  endpoint:
    path: /docs/css-variables-reference#vizStyle
    method: GET
    data_selector: variables
- name: chart_switcher
  endpoint:
    path: /docs/css-variables-reference#_chart_switcher
    method: GET
    data_selector: variables
- name: chart_selection_widget
  endpoint:
    path: /docs/css-variables-reference#_chart_selection_widget
    method: GET
    data_selector: variables
- name: axis_title_and_labels_on_charts
  endpoint:
    path: /docs/css-variables-reference#_axis_title_and_labels_on_charts
    method: GET
    data_selector: variables
- name: filter_chips
  endpoint:
    path: /docs/css-variables-reference#_filter_chips_on_liveboard_and_answers
    method: GET
    data_selector: variables
- name: spotter_interface
  endpoint:
    path: /docs/css-variables-reference#_spotter_interface
    method: GET
    data_selector: variables
- name: natural_language_search_interface
  endpoint:
    path: /docs/css-variables-reference#_natural_language_search_interface
    method: GET
    data_selector: variables
- name: search_bar_and_data_panel
  endpoint:
    path: /docs/css-variables-reference#_search_bar_and_data_panel
    method: GET
    data_selector: variables
- name: homepage_modules
  endpoint:
    path: /docs/css-variables-reference#_homepage_modules_new_experience_mode
    method: GET
    data_selector: variables
- name: menu_elements
  endpoint:
    path: /menu_elements
    method: GET
    data_selector: variables
- name: dialogs
  endpoint:
    path: /dialogs
    method: GET
    data_selector: variables
- name: button_elements
  endpoint:
    path: /button_elements
    method: GET
    data_selector: variables
- name: checkboxes
  endpoint:
    path: /checkboxes
    method: GET
    data_selector: variables
- name: lists
  endpoint:
    path: /lists
    method: GET
    data_selector: variables
- name: liveboard
  endpoint:
    path: /liveboard
    method: GET
    data_selector: variables
- name: visualization_and_answer
  endpoint:
    path: /visualization_and_answer
    method: GET
    data_selector: variables
- name: spotter_interface
  endpoint:
    path: /spotter_interface
    method: GET
    data_selector: variables
- name: natural_language_search_interface
  endpoint:
    path: /natural_language_search_interface
    method: GET
    data_selector: variables
- name: search_bar_and_data_panel
  endpoint:
    path: /search_bar_and_data_panel
    method: GET
    data_selector: variables
- name: homepage_modules
  endpoint:
    path: /homepage_modules
    method: GET
    data_selector: variables
- name: icon_override
  endpoint:
    path: /icon/override
    method: POST
    data_selector: response
    params: {}
- name: Theme Builder
  endpoint:
    path: /docs/theme-builder
    method: GET
    data_selector: components
    params: {}
- name: report_liveboard
  endpoint:
    path: /api/rest/2.0/report/liveboard
    method: POST
    data_selector: metadata_identifier
    params: {}
- name: report_answer
  endpoint:
    path: /api/rest/2.0/report/answer
    method: POST
    data_selector: metadata_identifier
    params: {}
- name: searchdata
  endpoint:
    path: /api/rest/2.0/searchdata
    method: POST
    data_selector: query_string
    params: {}
- name: liveboard_data
  endpoint:
    path: /api/rest/2.0/metadata/liveboard/data
    method: POST
    data_selector: metadata_identifier
    params: {}
- name: answer_data
  endpoint:
    path: /api/rest/2.0/metadata/answer/data
    method: POST
    data_selector: metadata_identifier
    params: {}
- name: pinboarddata
  endpoint:
    path: /callosum/v1/tspublic/v1/pinboarddata
    method: GET
    data_selector: records
    params: {}
- name: searchdata
  endpoint:
    path: /api/rest/2.0/searchdata
    method: POST
- name: liveboard_data
  endpoint:
    path: /api/rest/2.0/metadata/liveboard/data
    method: POST
- name: answer_data
  endpoint:
    path: /api/rest/2.0/metadata/answer/data
    method: POST
- name: export_liveboard_report
  endpoint:
    path: /api/rest/2.0/report/liveboard
    method: POST
- name: export_answer_report
  endpoint:
    path: /api/rest/2.0/report/answer
    method: POST
- name: liveboard_report
  endpoint:
    path: /api/rest/2.0/report/liveboard
    method: POST
    data_selector: metadata_identifier
    params: {}
- name: answer_report
  endpoint:
    path: /api/rest/2.0/report/answer
    method: POST
    data_selector: metadata_identifier
    params: {}
- name: search_data
  endpoint:
    path: /api/rest/2.0/searchdata
    method: POST
    data_selector: query_string
    params: {}
- name: liveboard_data
  endpoint:
    path: /api/rest/2.0/metadata/liveboard/data
    method: POST
    data_selector: metadata_identifier
    params: {}
- name: answer_data
  endpoint:
    path: /api/rest/2.0/metadata/answer/data
    method: POST
    data_selector: metadata_identifier
    params: {}
- name: pinboarddata
  endpoint:
    path: /callosum/v1/tspublic/v1/pinboarddata
    method: GET
    data_selector: data
    params: {}
- name: search_data
  endpoint:
    path: /api/rest/2.0/searchdata
    method: POST
    data_selector: data
    params: {}
- name: liveboard_data
  endpoint:
    path: /api/rest/2.0/metadata/liveboard/data
    method: POST
    data_selector: data
    params: {}
- name: answer_data
  endpoint:
    path: /api/rest/2.0/metadata/answer/data
    method: POST
    data_selector: data
    params: {}
- name: LiveboardEmbed
  endpoint:
    path: /liveboardEmbed
    method: POST
- name: SearchEmbed
  endpoint:
    path: /searchEmbed
    method: POST
- name: custom_actions
  endpoint:
    path: /docs/custom-action-intro
    method: GET
    data_selector: actions
    params: {}
- name: actions
  endpoint:
    path: /api/liveboard/actions
    method: GET
    data_selector: actions
- name: visualizations
  endpoint:
    path: /api/liveboard/visualizations
    method: GET
    data_selector: visualizations
- name: spotter
  endpoint:
    path: /api/spotter/actions
    method: GET
    data_selector: actions
- name: answers
  endpoint:
    path: /api/v1/answers
    method: GET
    data_selector: records
- name: liveboards
  endpoint:
    path: /api/v1/liveboards
    method: GET
    data_selector: records
- name: data_workspace
  endpoint:
    path: /api/v1/data/workspace
    method: GET
    data_selector: records
- name: callback_data_payload
  endpoint:
    path: /callback/data/payload
    method: GET
    data_selector: data
    params: {}
- name: callback_custom_action
  endpoint:
    path: /callback/customAction
    method: GET
    data_selector: embedAnswerData
    params: {}
- name: custom_actions
  endpoint:
    path: /docs/custom-action-intro
    method: GET
    data_selector: actions
    params: {}
- name: callback_custom_action
  endpoint:
    path: /api/callback_custom_action
    method: POST
    data_selector: payload
    params: {}
- name: search_data_payload
  endpoint:
    path: /search/data
    method: GET
    data_selector: data
    params: {}
- name: context_menu_payload
  endpoint:
    path: /context/menu
    method: GET
    data_selector: contextMenuPoints
    params: {}
- name: Liveboard
  endpoint:
    path: /#/pinboard/{object-id}
    method: GET
    data_selector: link
    params: {}
- name: Liveboard Visualization
  endpoint:
    path: /#/pinboard/{object-id}/{sub-object-id}
    method: GET
    data_selector: link
    params: {}
- name: Answer
  endpoint:
    path: /#/saved-answer/{object-id}
    method: GET
    data_selector: link
    params: {}
- name: SpotIQ
  endpoint:
    path: /#/insight/{object-id}
    method: GET
    data_selector: link
    params: {}
- name: User Preference
  endpoint:
    path: /#/user-preference
    method: GET
    data_selector: link
    params: {}
- name: Generic Link
  endpoint:
    path: /#/{path}
    method: GET
    data_selector: link
    params: {}
- name: liveboard_payload
  endpoint:
    path: /callback/livboard
    method: POST
    data_selector: reportBookData
    params: {}
- name: callback_custom_action
  endpoint:
    path: /callback/custom_action
    method: POST
    data_selector: clickedPoint
    params: {}
- name: callback_action
  endpoint:
    path: /callback-action
    method: POST
    data_selector: data
- name: context_menu
  endpoint:
    path: /context-menu
    method: POST
    data_selector: data
- name: update_user
  endpoint:
    path: /api/rest/2.0/users/{user_identifier}/update
    method: POST
- name: create_user
  endpoint:
    path: /api/rest/2.0/users/create
    method: POST
- name: update_preference
  endpoint:
    path: /tspublic/v1/user/updatepreference
    method: POST
- name: email_customization
  endpoint:
    path: /api/rest/2.0/customization/email
    method: POST
- name: email_customization
  endpoint:
    path: /api/rest/2.0/customization/email
    method: POST
    data_selector: template_properties
    params: {}
- name: validate_email_customization
  endpoint:
    path: /api/rest/2.0/customization/email/validate
    method: POST
    data_selector: ''
    params: {}
- name: search_email_customization
  endpoint:
    path: /api/rest/2.0/customization/email/search
    method: POST
    data_selector: ''
    params: {}
- name: update_email_customization
  endpoint:
    path: /api/rest/2.0/customization/email/update
    method: POST
    data_selector: template_properties
    params: {}
- name: delete_email_customization
  endpoint:
    path: /api/rest/2.0/customization/email/delete
    method: POST
    data_selector: ''
    params: {}
- name: metadata_search
  endpoint:
    path: /metadata/search
    method: GET
- name: onboarding_settings
  endpoint:
    path: /Admin/Application/settings/Onboarding
    method: GET
    data_selector: settings
- name: metadata_search
  endpoint:
    path: /metadata/search
    method: GET
    data_selector: metadata
    params: {}
- name: metadata_list
  endpoint:
    path: /metadata/list
    method: GET
    data_selector: headers
    params: {}
- name: metadata_list_viz_headers
  endpoint:
    path: /metadata/listvizheaders
    method: GET
    data_selector: headers
    params: {}
- name: email_customization
  endpoint:
    path: /api/rest/2.0/customization/email
    method: POST
    data_selector: ''
    params: {}
- name: validate_email_customization
  endpoint:
    path: /api/rest/2.0/customization/email/validate
    method: POST
    data_selector: ''
    params: {}
- name: search_email_customization
  endpoint:
    path: /api/rest/2.0/customization/email/search
    method: POST
    data_selector: ''
    params: {}
- name: update_email_customization
  endpoint:
    path: /api/rest/2.0/customization/email/update
    method: POST
    data_selector: ''
    params: {}
- name: delete_email_customization
  endpoint:
    path: /api/rest/2.0/customization/email/delete
    method: POST
    data_selector: ''
    params: {}
- name: metadata_search
  endpoint:
    path: /metadata/search
    method: GET
    data_selector: headers
- name: metadata_list
  endpoint:
    path: /metadata/list
    method: GET
    data_selector: headers
- name: viz_headers
  endpoint:
    path: /metadata/listvizheaders
    method: GET
    data_selector: headers
- name: token_request
  endpoint:
    path: /api/rest/2.0/auth/token/full
    method: POST
    data_selector: token
    params:
      validity_time_in_sec: 60
- name: token_request
  endpoint:
    path: /api/rest/2.0/auth/token/full
    method: POST
    data_selector: token
- name: authentication_token
  endpoint:
    path: /api/rest/2.0/auth/token/full
    method: POST
    data_selector: token
    params:
      auto_create: 'true'
- name: authentication_token_object
  endpoint:
    path: /api/rest/2.0/auth/token/object
    method: POST
    data_selector: token
    params:
      auto_create: 'true'
- name: session_auth_token
  endpoint:
    path: /session/auth/token
    method: POST
    data_selector: autocreate
    params: {}
- name: org_search
  endpoint:
    path: /org/search
    method: GET
    data_selector: orgs
    params: {}
- name: current_org
  endpoint:
    path: /session/orgs
    method: GET
    data_selector: currentOrg
    params: {}
- name: share_metadata
  endpoint:
    path: /security/metadata/share
    method: POST
    data_selector: ''
    params: {}
- name: fetch_permissions
  endpoint:
    path: /security/metadata/fetch-permissions
    method: GET
    data_selector: ''
    params: {}
- name: fetch_principals_permissions
  endpoint:
    path: /security/principals/fetch-permissions
    method: GET
    data_selector: ''
    params: {}
- name: assign_content_author
  endpoint:
    path: /security/metadata/assign
    method: POST
    data_selector: ''
    params: {}
- name: authentication_token
  endpoint:
    path: /api/rest/2.0/auth/token/full
    method: POST
    data_selector: token
    params:
      auto_create: 'true'
      display_name: ''
      email: ''
      org_id: ''
      group_identifiers: []
- name: share_metadata
  endpoint:
    path: /security/metadata/share
    method: POST
    data_selector: metadata_identifiers
    params: {}
- name: fetch_permissions
  endpoint:
    path: /security/metadata/fetch-permissions
    method: GET
    data_selector: permissions
    params: {}
- name: assign_content_author
  endpoint:
    path: /security/metadata/assign
    method: POST
    data_selector: metadata
    params: {}
- name: custom_token
  endpoint:
    path: /api/rest/2.0/auth/token/custom
    method: POST
- name: full_token
  endpoint:
    path: /api/rest/2.0/auth/token/full
    method: POST
- name: object_token
  endpoint:
    path: /api/rest/2.0/auth/token/object
    method: POST
- name: custom_token
  endpoint:
    path: /api/rest/2.0/auth/token/custom
    method: POST
- name: custom_token
  endpoint:
    path: /api/rest/2.0/auth/token/custom
    method: POST
    data_selector: token
    params: {}
- name: custom_token
  endpoint:
    path: /api/rest/2.0/auth/token/custom
    method: POST
- name: token_request
  endpoint:
    path: /services/restV2/token_request
    method: POST
    data_selector: user_parameters
    params: {}
- name: Liveboard
  endpoint:
    path: /liveboard
    method: GET
    data_selector: visualizations
- name: lazy_loading
  endpoint:
    path: /docs/embed-liveboard
    method: GET
    data_selector: visualizations
    params: {}
- name: Liveboard
  endpoint:
    path: /services/liveboard
    method: GET
    data_selector: records
- name: liveboard
  endpoint:
    path: /docs/embed-liveboard
    method: GET
    data_selector: visualizations
    params: {}
- name: CrossFilterChanged
  endpoint:
    path: /types/crossfilterchanged
    method: GET
    data_selector: data
    params: {}
- name: CustomAction
  endpoint:
    path: /types/customaction
    method: GET
    data_selector: data
    params: {}
- name: Data
  endpoint:
    path: /types/data
    method: GET
    data_selector: data
    params: {}
- name: DataSourceSelected
  endpoint:
    path: /types/datasourceselected
    method: GET
    data_selector: data
    params: {}
- name: Delete
  endpoint:
    path: /types/delete
    method: GET
    data_selector: data
    params: {}
- name: DeletePersonalisedView
  endpoint:
    path: /types/deletepersonalisedview
    method: GET
    data_selector: data
    params: {}
- name: DialogClose
  endpoint:
    path: /types/dialogclose
    method: GET
    data_selector: data
    params: {}
- name: DialogOpen
  endpoint:
    path: /types/dialogopen
    method: GET
    data_selector: data
    params: {}
- name: Download
  endpoint:
    path: /types/download
    method: GET
    data_selector: data
    params: {}
- name: DownloadAsCsv
  endpoint:
    path: /types/downloadascsv
    method: GET
    data_selector: data
    params: {}
- name: DownloadAsPdf
  endpoint:
    path: /types/downloadaspdf
    method: GET
    data_selector: data
    params: {}
- name: DownloadAsPng
  endpoint:
    path: /types/downloadaspng
    method: GET
    data_selector: data
    params: {}
- name: DownloadAsXlsx
  endpoint:
    path: /types/downloadasxlsx
    method: GET
    data_selector: data
    params: {}
- name: DrillExclude
  endpoint:
    path: /types/drillexclude
    method: GET
    data_selector: data
    params: {}
- name: DrillInclude
  endpoint:
    path: /types/drillinclude
    method: GET
    data_selector: data
    params: {}
- name: Drilldown
  endpoint:
    path: /types/drilldown
    method: GET
    data_selector: data
    params: {}
- name: Edit
  endpoint:
    path: /types/edit
    method: GET
    data_selector: data
    params: {}
- name: EditTML
  endpoint:
    path: /types/edittml
    method: GET
    data_selector: data
    params: {}
- name: Error
  endpoint:
    path: /types/error
    method: GET
    data_selector: data
    params: {}
- name: Explore
  endpoint:
    path: /types/explore
    method: GET
    data_selector: data
    params: {}
- name: ExportTML
  endpoint:
    path: /types/exporttml
    method: GET
    data_selector: data
    params: {}
- name: FilterChanged
  endpoint:
    path: /types/filterchanged
    method: GET
    data_selector: data
    params: {}
- name: GetDataClick
  endpoint:
    path: /types/getdataclick
    method: GET
    data_selector: data
    params: {}
- name: Init
  endpoint:
    path: /types/init
    method: GET
    data_selector: data
    params: {}
- name: LastPromptDeleted
  endpoint:
    path: /types/lastpromptdeleted
    method: GET
    data_selector: data
    params: {}
- name: LastPromptEdited
  endpoint:
    path: /types/lastpromptedited
    method: GET
    data_selector: data
    params: {}
- name: LiveboardInfo
  endpoint:
    path: /types/liveboardinfo
    method: GET
    data_selector: data
    params: {}
- name: LiveboardRendered
  endpoint:
    path: /types/liveboardrendered
    method: GET
    data_selector: data
    params: {}
- name: Load
  endpoint:
    path: /types/load
    method: GET
    data_selector: data
    params: {}
- name: MakeACopy
  endpoint:
    path: /types/makeacopy
    method: GET
    data_selector: data
    params: {}
- name: NoCookieAccess
  endpoint:
    path: /types/nocookieaccess
    method: GET
    data_selector: data
    params: {}
- name: OnBeforeGetVizDataIntercept
  endpoint:
    path: /onBeforeGetVizDataIntercept
    method: GET
    data_selector: payload
- name: OrgSwitched
  endpoint:
    path: /orgSwitched
    method: GET
    data_selector: payload
- name: ParameterChanged
  endpoint:
    path: /parameterChanged
    method: GET
    data_selector: payload
- name: Pin
  endpoint:
    path: /pin
    method: GET
    data_selector: payload
- name: Present
  endpoint:
    path: /present
    method: GET
    data_selector: payload
- name: PreviewSpotterData
  endpoint:
    path: /PreviewSpotterData
    method: GET
    data_selector: payload
- name: QueryChanged
  endpoint:
    path: /queryChanged
    method: GET
    data_selector: payload
- name: Rename
  endpoint:
    path: /rename
    method: GET
    data_selector: payload
- name: ResetLiveboard
  endpoint:
    path: /resetLiveboard
    method: GET
    data_selector: payload
- name: ResetSpotterConversation
  endpoint:
    path: /ResetSpotterConversation
    method: GET
    data_selector: payload
- name: RouteChange
  endpoint:
    path: /ROUTE_CHANGE
    method: GET
    data_selector: payload
- name: SageEmbedQuery
  endpoint:
    path: /sageEmbedQuery
    method: GET
    data_selector: payload
- name: SageWorksheetUpdated
  endpoint:
    path: /sageWorksheetUpdated
    method: GET
    data_selector: payload
- name: Save
  endpoint:
    path: /save
    method: GET
    data_selector: payload
- name: SaveAsView
  endpoint:
    path: /saveAsView
    method: GET
    data_selector: payload
- name: SavePersonalisedView
  endpoint:
    path: /savePersonalisedView
    method: GET
    data_selector: payload
- name: Schedule
  endpoint:
    path: /subscription
    method: GET
    data_selector: payload
- name: SchedulesList
  endpoint:
    path: /schedule-list
    method: GET
    data_selector: payload
- name: Share
  endpoint:
    path: /share
    method: GET
    data_selector: payload
- name: ShowUnderlyingData
  endpoint:
    path: /showUnderlyingData
    method: GET
    data_selector: payload
- name: SpotIQAnalyze
  endpoint:
    path: /spotIQAnalyze
    method: GET
    data_selector: payload
- name: SpotterData
  endpoint:
    path: /SpotterData
    method: GET
    data_selector: payload
- name: SpotterInit
  endpoint:
    path: /spotterInit
    method: GET
    data_selector: payload
- name: SpotterQueryTriggered
  endpoint:
    path: /SpotterQueryTriggered
    method: GET
    data_selector: payload
- name: TableVizRendered
  endpoint:
    path: /TableVizRendered
    method: GET
    data_selector: payload
- name: UpdateConnection
  endpoint:
    path: /updateConnection
    method: GET
    data_selector: payload
- name: UpdatePersonalisedView
  endpoint:
    path: /updatePersonalisedView
    method: GET
    data_selector: payload
- name: UpdateTML
  endpoint:
    path: /updateTSL
    method: GET
    data_selector: payload
- name: VizPointClick
  endpoint:
    path: /vizPointClick
    method: GET
    data_selector: payload
- name: VizPointDoubleClick
  endpoint:
    path: /vizPointDoubleClick
    method: GET
    data_selector: payload
- name: OnBeforeGetVizDataIntercept
  endpoint:
    path: /onBeforeGetVizDataIntercept
    method: GET
    data_selector: payload
- name: OrgSwitched
  endpoint:
    path: /orgSwitched
    method: GET
    data_selector: payload
- name: ParameterChanged
  endpoint:
    path: /parameterChanged
    method: GET
    data_selector: payload
- name: Pin
  endpoint:
    path: /pin
    method: GET
    data_selector: payload
- name: Present
  endpoint:
    path: /present
    method: GET
    data_selector: payload
- name: PreviewSpotterData
  endpoint:
    path: /PreviewSpotterData
    method: GET
    data_selector: payload
- name: QueryChanged
  endpoint:
    path: /queryChanged
    method: GET
    data_selector: payload
- name: Rename
  endpoint:
    path: /rename
    method: GET
    data_selector: payload
- name: ResetLiveboard
  endpoint:
    path: /resetLiveboard
    method: GET
    data_selector: payload
- name: ResetSpotterConversation
  endpoint:
    path: /ResetSpotterConversation
    method: GET
    data_selector: payload
- name: RouteChange
  endpoint:
    path: /ROUTE_CHANGE
    method: GET
    data_selector: payload
- name: SageEmbedQuery
  endpoint:
    path: /sageEmbedQuery
    method: GET
    data_selector: payload
- name: SageWorksheetUpdated
  endpoint:
    path: /sageWorksheetUpdated
    method: GET
    data_selector: payload
- name: Save
  endpoint:
    path: /save
    method: GET
    data_selector: payload
- name: SaveAsView
  endpoint:
    path: /saveAsView
    method: GET
    data_selector: payload
- name: SavePersonalisedView
  endpoint:
    path: /savePersonalisedView
    method: GET
    data_selector: payload
- name: Schedule
  endpoint:
    path: /subscription
    method: GET
    data_selector: payload
- name: SchedulesList
  endpoint:
    path: /schedule-list
    method: GET
    data_selector: payload
- name: Share
  endpoint:
    path: /share
    method: GET
    data_selector: payload
- name: ShowUnderlyingData
  endpoint:
    path: /showUnderlyingData
    method: GET
    data_selector: payload
- name: SpotIQAnalyze
  endpoint:
    path: /spotIQAnalyze
    method: GET
    data_selector: payload
- name: SpotterData
  endpoint:
    path: /SpotterData
    method: GET
    data_selector: payload
- name: SpotterInit
  endpoint:
    path: /spotterInit
    method: GET
    data_selector: payload
- name: SpotterQueryTriggered
  endpoint:
    path: /SpotterQueryTriggered
    method: GET
    data_selector: payload
- name: TableVizRendered
  endpoint:
    path: /TableVizRendered
    method: GET
    data_selector: payload
- name: UpdateConnection
  endpoint:
    path: /updateConnection
    method: GET
    data_selector: payload
- name: UpdatePersonalisedView
  endpoint:
    path: /updatePersonalisedView
    method: GET
    data_selector: payload
- name: UpdateTML
  endpoint:
    path: /updateTSL
    method: GET
    data_selector: payload
- name: VizPointClick
  endpoint:
    path: /vizPointClick
    method: GET
    data_selector: payload
- name: VizPointDoubleClick
  endpoint:
    path: /vizPointDoubleClick
    method: GET
    data_selector: payload
- name: AddColumns
  endpoint:
    path: /docs/Enumeration_HostEvent#_addcolumns
    method: GET
    data_selector: records
- name: AnswerChartSwitcher
  endpoint:
    path: /docs/Enumeration_HostEvent#_answerchartswitcher
    method: GET
    data_selector: records
- name: AskSage
  endpoint:
    path: /docs/Enumeration_HostEvent#_asksage
    method: GET
    data_selector: records
- name: AskSpotter
  endpoint:
    path: /docs/Enumeration_HostEvent#_askspotter
    method: GET
    data_selector: records
- name: CopyLink
  endpoint:
    path: /docs/Enumeration_HostEvent#_copylink
    method: GET
    data_selector: records
- name: CreateMonitor
  endpoint:
    path: /docs/Enumeration_HostEvent#_createmonitor
    method: GET
    data_selector: records
- name: Delete
  endpoint:
    path: /docs/Enumeration_HostEvent#_delete
    method: GET
    data_selector: records
- name: DeleteLastPrompt
  endpoint:
    path: /docs/Enumeration_HostEvent#_deletelastprompt
    method: GET
    data_selector: records
- name: Download
  endpoint:
    path: /docs/Enumeration_HostEvent#_download
    method: GET
    data_selector: records
- name: DownloadAsCsv
  endpoint:
    path: /docs/Enumeration_HostEvent#_downloadascsv
    method: GET
    data_selector: records
- name: DownloadAsPdf
  endpoint:
    path: /docs/Enumeration_HostEvent#_downloadaspdf
    method: GET
    data_selector: records
- name: DownloadAsPng
  endpoint:
    path: /docs/Enumeration_HostEvent#_downloadaspng
    method: GET
    data_selector: records
- name: DownloadAsXlsx
  endpoint:
    path: /docs/Enumeration_HostEvent#_downloadasxlsx
    method: GET
    data_selector: records
- name: DrillDown
  endpoint:
    path: /docs/Enumeration_HostEvent#_drilldown
    method: GET
    data_selector: records
- name: Edit
  endpoint:
    path: /docs/Enumeration_HostEvent#_edit
    method: GET
    data_selector: records
- name: EditLastPrompt
  endpoint:
    path: /docs/Enumeration_HostEvent#_editlastprompt
    method: GET
    data_selector: records
- name: EditTML
  endpoint:
    path: /docs/Enumeration_HostEvent#_edittml
    method: GET
    data_selector: records
- name: Explore
  endpoint:
    path: /docs/Enumeration_HostEvent#_explore
    method: GET
    data_selector: records
- name: ExportTML
  endpoint:
    path: /docs/Enumeration_HostEvent#_exporttml
    method: GET
    data_selector: records
- name: GetAnswerSession
  endpoint:
    path: /docs/Enumeration_HostEvent#_getanswersession
    method: GET
    data_selector: records
- name: GetFilters
  endpoint:
    path: /docs/Enumeration_HostEvent#_getfilters
    method: GET
    data_selector: records
- name: GetIframeUrl
  endpoint:
    path: /docs/Enumeration_HostEvent#_getiframeurl
    method: GET
    data_selector: records
- name: GetParameters
  endpoint:
    path: /docs/Enumeration_HostEvent#_getparameters
    method: GET
    data_selector: records
- name: GetTML
  endpoint:
    path: /docs/Enumeration_HostEvent#_gettml
    method: GET
    data_selector: records
- name: GetTabs
  endpoint:
    path: /docs/Enumeration_HostEvent#_gettabs
    method: GET
    data_selector: records
- name: LiveboardInfo
  endpoint:
    path: /docs/Enumeration_HostEvent#_liveboardinfo
    method: GET
    data_selector: records
- name: MakeACopy
  endpoint:
    path: /docs/Enumeration_HostEvent#_makeacopy
    method: GET
    data_selector: records
- name: ManageMonitor
  endpoint:
    path: /docs/Enumeration_HostEvent#_managemonitor
    method: GET
    data_selector: records
- name: ManagePipelines
  endpoint:
    path: /docs/Enumeration_HostEvent#_managepipelines
    method: GET
    data_selector: records
- name: Navigate
  endpoint:
    path: /docs/Enumeration_HostEvent#_navigate
    method: GET
    data_selector: records
- name: OpenFilter
  endpoint:
    path: /docs/Enumeration_HostEvent#_openfilter
    method: GET
    data_selector: records
- name: Pin
  endpoint:
    path: /docs/Enumeration_HostEvent#_pin
    method: GET
    data_selector: records
- name: Present
  endpoint:
    path: /docs/Enumeration_HostEvent#_present
    method: GET
    data_selector: records
- name: PreviewSpotterData
  endpoint:
    path: /docs/Enumeration_HostEvent#_previewspotterdata
    method: GET
    data_selector: records
- name: Remove
  endpoint:
    path: /docs/Enumeration_HostEvent#_remove
    method: GET
    data_selector: records
- name: RemoveColumn
  endpoint:
    path: /docs/Enumeration_HostEvent#_removecolumn
    method: GET
    data_selector: records
- name: ResetLiveboardPersonalisedView
  endpoint:
    path: /docs/Enumeration_HostEvent#_resetliveboardpersonalisedview
    method: GET
    data_selector: records
- name: ResetSearch
  endpoint:
    path: /docs/Enumeration_HostEvent#_resetsearch
    method: GET
    data_selector: records
- name: ResetSpotterConversation
  endpoint:
    path: /docs/Enumeration_HostEvent#_resetspotterconversation
    method: GET
    data_selector: records
- name: Save
  endpoint:
    path: /docs/Enumeration_HostEvent#_save
    method: GET
    data_selector: records
- name: SaveAnswer
  endpoint:
    path: /docs/Enumeration_HostEvent#_saveanswer
    method: GET
    data_selector: records
- name: Schedule
  endpoint:
    path: /docs/Enumeration_HostEvent#_schedule
    method: GET
    data_selector: records
- name: SchedulesList
  endpoint:
    path: /docs/Enumeration_HostEvent#_scheduleslist
    method: GET
    data_selector: records
- name: Search
  endpoint:
    path: /docs/Enumeration_HostEvent#_search
    method: GET
    data_selector: records
- name: SetActiveTab
  endpoint:
    path: /docs/Enumeration_HostEvent#_setactivetab
    method: GET
    data_selector: records
- name: SetHiddenTabs
  endpoint:
    path: /docs/Enumeration_HostEvent#_sethiddentabs
    method: GET
    data_selector: records
- name: SetVisibleTabs
  endpoint:
    path: /docs/Enumeration_HostEvent#_setvisibletabs
    method: GET
    data_selector: records
- name: SetVisibleVizs
  endpoint:
    path: /docs/Enumeration_HostEvent#_setvisiblevizs
    method: GET
    data_selector: records
- name: Share
  endpoint:
    path: /docs/Enumeration_HostEvent#_share
    method: GET
    data_selector: records
- name: ShowUnderlyingData
  endpoint:
    path: /docs/Enumeration_HostEvent#_showunderlyingdata
    method: GET
    data_selector: records
- name: SpotIQAnalyze
  endpoint:
    path: /docs/Enumeration_HostEvent#_spotiqanalyze
    method: GET
    data_selector: records
- name: SpotterSearch
  endpoint:
    path: /docs/Enumeration_HostEvent#_spottersearch
    method: GET
    data_selector: records
- name: SyncToOtherApps
  endpoint:
    path: /docs/Enumeration_HostEvent#_synctootherapps
    method: GET
    data_selector: records
- name: SyncToSheets
  endpoint:
    path: /docs/Enumeration_HostEvent#_synctosheets
    method: GET
    data_selector: records
- name: TransformTableVizData
  endpoint:
    path: /docs/Enumeration_HostEvent#_transformtablevizdata
    method: GET
    data_selector: records
- name: UpdateCrossFilter
  endpoint:
    path: /docs/Enumeration_HostEvent#_updatecrossfilter
    method: GET
    data_selector: records
- name: UpdateFilters
  endpoint:
    path: /docs/Enumeration_HostEvent#_updatefilters
    method: GET
    data_selector: records
- name: UpdateParameters
  endpoint:
    path: /docs/Enumeration_HostEvent#_updateparameters
    method: GET
    data_selector: records
- name: UpdatePersonalisedView
  endpoint:
    path: /docs/Enumeration_HostEvent#_updatepersonalisedview
    method: GET
    data_selector: records
- name: UpdateRuntimeFilters
  endpoint:
    path: /docs/Enumeration_HostEvent#_updateruntimefilters
    method: GET
    data_selector: records
- name: UpdateSageQuery
  endpoint:
    path: /docs/Enumeration_HostEvent#_updatesagequery
    method: GET
    data_selector: records
- name: UpdateTML
  endpoint:
    path: /docs/Enumeration_HostEvent#_updatetml
    method: GET
    data_selector: records
- name: getExportRequestForCurrentPinboard
  endpoint:
    path: /docs/Enumeration_HostEvent#_getexportrequestforcurrentpinboard
    method: GET
    data_selector: records
- name: AddColumns
  endpoint:
    path: /docs/Enumeration_HostEvent#_addcolumns
    method: GET
    data_selector: undefined
    params: {}
- name: AnswerChartSwitcher
  endpoint:
    path: /docs/Enumeration_HostEvent#_answerchartswitcher
    method: GET
    data_selector: undefined
    params: {}
- name: AskSage
  endpoint:
    path: /docs/Enumeration_HostEvent#_asksage
    method: GET
    data_selector: undefined
    params: {}
- name: AskSpotter
  endpoint:
    path: /docs/Enumeration_HostEvent#_askspotter
    method: GET
    data_selector: undefined
    params: {}
- name: CopyLink
  endpoint:
    path: /docs/Enumeration_HostEvent#_copylink
    method: GET
    data_selector: undefined
    params: {}
- name: CreateMonitor
  endpoint:
    path: /docs/Enumeration_HostEvent#_createmonitor
    method: GET
    data_selector: undefined
    params: {}
- name: Delete
  endpoint:
    path: /docs/Enumeration_HostEvent#_delete
    method: GET
    data_selector: undefined
    params: {}
- name: DeleteLastPrompt
  endpoint:
    path: /docs/Enumeration_HostEvent#_deletelastprompt
    method: GET
    data_selector: undefined
    params: {}
- name: Download
  endpoint:
    path: /docs/Enumeration_HostEvent#_download
    method: GET
    data_selector: undefined
    params: {}
- name: DownloadAsCsv
  endpoint:
    path: /docs/Enumeration_HostEvent#_downloadascsv
    method: GET
    data_selector: undefined
    params: {}
- name: DownloadAsPdf
  endpoint:
    path: /docs/Enumeration_HostEvent#_downloadaspdf
    method: GET
    data_selector: undefined
    params: {}
- name: DownloadAsPng
  endpoint:
    path: /docs/Enumeration_HostEvent#_downloadaspng
    method: GET
    data_selector: undefined
    params: {}
- name: DownloadAsXlsx
  endpoint:
    path: /docs/Enumeration_HostEvent#_downloadasxlsx
    method: GET
    data_selector: undefined
    params: {}
- name: DrillDown
  endpoint:
    path: /docs/Enumeration_HostEvent#_drilldown
    method: GET
    data_selector: undefined
    params: {}
- name: Edit
  endpoint:
    path: /docs/Enumeration_HostEvent#_edit
    method: GET
    data_selector: undefined
    params: {}
- name: EditLastPrompt
  endpoint:
    path: /docs/Enumeration_HostEvent#_editlastprompt
    method: GET
    data_selector: undefined
    params: {}
- name: EditTML
  endpoint:
    path: /docs/Enumeration_HostEvent#_edittml
    method: GET
    data_selector: undefined
    params: {}
- name: Explore
  endpoint:
    path: /docs/Enumeration_HostEvent#_explore
    method: GET
    data_selector: undefined
    params: {}
- name: ExportTML
  endpoint:
    path: /docs/Enumeration_HostEvent#_exporttml
    method: GET
    data_selector: undefined
    params: {}
- name: GetAnswerSession
  endpoint:
    path: /docs/Enumeration_HostEvent#_getanswersession
    method: GET
    data_selector: undefined
    params: {}
- name: GetFilters
  endpoint:
    path: /docs/Enumeration_HostEvent#_getfilters
    method: GET
    data_selector: undefined
    params: {}
- name: GetIframeUrl
  endpoint:
    path: /docs/Enumeration_HostEvent#_getiframeurl
    method: GET
    data_selector: undefined
    params: {}
- name: GetParameters
  endpoint:
    path: /docs/Enumeration_HostEvent#_getparameters
    method: GET
    data_selector: undefined
    params: {}
- name: GetTML
  endpoint:
    path: /docs/Enumeration_HostEvent#_gettml
    method: GET
    data_selector: undefined
    params: {}
- name: GetTabs
  endpoint:
    path: /docs/Enumeration_HostEvent#_gettabs
    method: GET
    data_selector: undefined
    params: {}
- name: LiveboardInfo
  endpoint:
    path: /docs/Enumeration_HostEvent#_liveboardinfo
    method: GET
    data_selector: undefined
    params: {}
- name: MakeACopy
  endpoint:
    path: /docs/Enumeration_HostEvent#_makeacopy
    method: GET
    data_selector: undefined
    params: {}
- name: ManageMonitor
  endpoint:
    path: /docs/Enumeration_HostEvent#_managemonitor
    method: GET
    data_selector: undefined
    params: {}
- name: ManagePipelines
  endpoint:
    path: /docs/Enumeration_HostEvent#_managepipelines
    method: GET
    data_selector: undefined
    params: {}
- name: Navigate
  endpoint:
    path: /docs/Enumeration_HostEvent#_navigate
    method: GET
    data_selector: undefined
    params: {}
- name: OpenFilter
  endpoint:
    path: /docs/Enumeration_HostEvent#_openfilter
    method: GET
    data_selector: undefined
    params: {}
- name: Pin
  endpoint:
    path: /docs/Enumeration_HostEvent#_pin
    method: GET
    data_selector: undefined
    params: {}
- name: Present
  endpoint:
    path: /docs/Enumeration_HostEvent#_present
    method: GET
    data_selector: undefined
    params: {}
- name: PreviewSpotterData
  endpoint:
    path: /docs/Enumeration_HostEvent#_previewspotterdata
    method: GET
    data_selector: undefined
    params: {}
- name: Remove
  endpoint:
    path: /docs/Enumeration_HostEvent#_remove
    method: GET
    data_selector: undefined
    params: {}
- name: RemoveColumn
  endpoint:
    path: /docs/Enumeration_HostEvent#_removecolumn
    method: GET
    data_selector: undefined
    params: {}
- name: ResetLiveboardPersonalisedView
  endpoint:
    path: /docs/Enumeration_HostEvent#_resetliveboardpersonalisedview
    method: GET
    data_selector: undefined
    params: {}
- name: ResetSearch
  endpoint:
    path: /docs/Enumeration_HostEvent#_resetsearch
    method: GET
    data_selector: undefined
    params: {}
- name: ResetSpotterConversation
  endpoint:
    path: /docs/Enumeration_HostEvent#_resetspotterconversation
    method: GET
    data_selector: undefined
    params: {}
- name: Save
  endpoint:
    path: /docs/Enumeration_HostEvent#_save
    method: GET
    data_selector: undefined
    params: {}
- name: SaveAnswer
  endpoint:
    path: /docs/Enumeration_HostEvent#_saveanswer
    method: GET
    data_selector: undefined
    params: {}
- name: Schedule
  endpoint:
    path: /docs/Enumeration_HostEvent#_schedule
    method: GET
    data_selector: undefined
    params: {}
- name: SchedulesList
  endpoint:
    path: /docs/Enumeration_HostEvent#_scheduleslist
    method: GET
    data_selector: undefined
    params: {}
- name: Search
  endpoint:
    path: /docs/Enumeration_HostEvent#_search
    method: GET
    data_selector: undefined
    params: {}
- name: SetActiveTab
  endpoint:
    path: /docs/Enumeration_HostEvent#_setactivetab
    method: GET
    data_selector: undefined
    params: {}
- name: SetHiddenTabs
  endpoint:
    path: /docs/Enumeration_HostEvent#_sethiddentabs
    method: GET
    data_selector: undefined
    params: {}
- name: SetVisibleTabs
  endpoint:
    path: /docs/Enumeration_HostEvent#_setvisibletabs
    method: GET
    data_selector: undefined
    params: {}
- name: SetVisibleVizs
  endpoint:
    path: /docs/Enumeration_HostEvent#_setvisiblevizs
    method: GET
    data_selector: undefined
    params: {}
- name: Share
  endpoint:
    path: /docs/Enumeration_HostEvent#_share
    method: GET
    data_selector: undefined
    params: {}
- name: ShowUnderlyingData
  endpoint:
    path: /docs/Enumeration_HostEvent#_showunderlyingdata
    method: GET
    data_selector: undefined
    params: {}
- name: SpotIQAnalyze
  endpoint:
    path: /docs/Enumeration_HostEvent#_spotiqanalyze
    method: GET
    data_selector: undefined
    params: {}
- name: SpotterSearch
  endpoint:
    path: /docs/Enumeration_HostEvent#_spottersearch
    method: GET
    data_selector: undefined
    params: {}
- name: SyncToOtherApps
  endpoint:
    path: /docs/Enumeration_HostEvent#_synctootherapps
    method: GET
    data_selector: undefined
    params: {}
- name: SyncToSheets
  endpoint:
    path: /docs/Enumeration_HostEvent#_synctosheets
    method: GET
    data_selector: undefined
    params: {}
- name: TransformTableVizData
  endpoint:
    path: /docs/Enumeration_HostEvent#_transformtablevizdata
    method: GET
    data_selector: undefined
    params: {}
- name: UpdateCrossFilter
  endpoint:
    path: /docs/Enumeration_HostEvent#_updatecrossfilter
    method: GET
    data_selector: undefined
    params: {}
- name: UpdateFilters
  endpoint:
    path: /docs/Enumeration_HostEvent#_updatefilters
    method: GET
    data_selector: undefined
    params: {}
- name: UpdateParameters
  endpoint:
    path: /docs/Enumeration_HostEvent#_updateparameters
    method: GET
    data_selector: undefined
    params: {}
- name: UpdatePersonalisedView
  endpoint:
    path: /docs/Enumeration_HostEvent#_updatepersonalisedview
    method: GET
    data_selector: undefined
    params: {}
- name: UpdateRuntimeFilters
  endpoint:
    path: /docs/Enumeration_HostEvent#_updateruntimefilters
    method: GET
    data_selector: undefined
    params: {}
- name: UpdateSageQuery
  endpoint:
    path: /docs/Enumeration_HostEvent#_updatesagequery
    method: GET
    data_selector: undefined
    params: {}
- name: UpdateTML
  endpoint:
    path: /docs/Enumeration_HostEvent#_updatetml
    method: GET
    data_selector: undefined
    params: {}
- name: getExportRequestForCurrentPinboard
  endpoint:
    path: /docs/Enumeration_HostEvent#_getexportrequestforcurrentpinboard
    method: GET
    data_selector: undefined
    params: {}
- name: Save
  endpoint:
    path: /save
    method: POST
- name: SaveAnswer
  endpoint:
    path: /saveAnswer
    method: POST
- name: Schedule
  endpoint:
    path: /schedule
    method: POST
- name: SchedulesList
  endpoint:
    path: /schedule-list
    method: POST
- name: Search
  endpoint:
    path: /search
    method: POST
- name: SetActiveTab
  endpoint:
    path: /set-active-tab
    method: POST
- name: SetHiddenTabs
  endpoint:
    path: /set-hidden-tabs
    method: POST
- name: SetVisibleTabs
  endpoint:
    path: /set-visible-tabs
    method: POST
- name: SetVisibleVizs
  endpoint:
    path: /set-visible-vizs
    method: POST
- name: Share
  endpoint:
    path: /share
    method: POST
- name: ShowUnderlyingData
  endpoint:
    path: /show-underlying-data
    method: POST
- name: SpotIQAnalyze
  endpoint:
    path: /spotiqanalyze
    method: POST
- name: SpotterSearch
  endpoint:
    path: /spotter-search
    method: POST
- name: SyncToOtherApps
  endpoint:
    path: /sync-to-other-apps
    method: POST
- name: SyncToSheets
  endpoint:
    path: /sync-to-sheets
    method: POST
- name: TransformTableVizData
  endpoint:
    path: /transform-table-viz-data
    method: POST
- name: UpdateCrossFilter
  endpoint:
    path: /update-cross-filter
    method: POST
- name: UpdateFilters
  endpoint:
    path: /update-filters
    method: POST
- name: UpdateParameters
  endpoint:
    path: /update-parameters
    method: POST
- name: UpdatePersonalisedView
  endpoint:
    path: /update-personalised-view
    method: POST
- name: UpdateRuntimeFilters
  endpoint:
    path: /update-runtime-filters
    method: POST
- name: UpdateSageQuery
  endpoint:
    path: /update-sage-query
    method: POST
- name: UpdateTML
  endpoint:
    path: /update-tml
    method: POST
- name: DrillDown
  endpoint:
    path: /drill_down
    method: POST
    data_selector: points
    params: {}
- name: Edit
  endpoint:
    path: /edit
    method: POST
    data_selector: object
    params: {}
- name: EditLastPrompt
  endpoint:
    path: /edit_last_prompt
    method: POST
    data_selector: query
    params: {}
- name: ExportTML
  endpoint:
    path: /export_tml
    method: POST
    data_selector: {}
    params: {}
- name: GetAnswerSession
  endpoint:
    path: /get_answer_session
    method: POST
    data_selector: session
    params: {}
- name: GetFilters
  endpoint:
    path: /get_filters
    method: POST
    data_selector: filters
    params: {}
- name: GetParameters
  endpoint:
    path: /get_parameters
    method: POST
    data_selector: parameters
    params: {}
- name: LiveboardInfo
  endpoint:
    path: /liveboard_info
    method: POST
    data_selector: {}
    params: {}
- name: Pin
  endpoint:
    path: /pin
    method: POST
    data_selector: {}
    params: {}
- name: Present
  endpoint:
    path: /present
    method: POST
    data_selector: {}
    params: {}
- name: Answer
  endpoint:
    path: /answers
    method: GET
    data_selector: data
    params: {}
- name: fetchCSVBlob
  endpoint:
    path: /fetchCSVBlob
    method: GET
    data_selector: Promise< Response >
    params:
      userLocale: en-us
      includeInfo: false
- name: fetchData
  endpoint:
    path: /fetchData
    method: GET
    data_selector: 'Promise< {columns: any , data: any } >'
    params:
      offset: 0
      size: 1000
- name: getSQLQuery
  endpoint:
    path: /getSQLQuery
    method: GET
    data_selector: Promise< string >
    params: {}
- name: getSession
  endpoint:
    path: /getSession
    method: GET
    data_selector: SessionInterface
    params: {}
- name: Save
  endpoint:
    path: /save
    method: POST
    data_selector: ''
    params: {}
- name: SaveAnswer
  endpoint:
    path: /saveAnswer
    method: POST
    data_selector: ''
    params: {}
- name: Schedule
  endpoint:
    path: /schedule
    method: POST
    data_selector: ''
    params: {}
- name: SchedulesList
  endpoint:
    path: /schedule-list
    method: POST
    data_selector: ''
    params: {}
- name: Search
  endpoint:
    path: /search
    method: POST
    data_selector: ''
    params: {}
- name: SetActiveTab
  endpoint:
    path: /set-active-tab
    method: POST
    data_selector: ''
    params: {}
- name: SetHiddenTabs
  endpoint:
    path: /set-hidden-tabs
    method: POST
    data_selector: ''
    params: {}
- name: SetVisibleTabs
  endpoint:
    path: /set-visible-tabs
    method: POST
    data_selector: ''
    params: {}
- name: SetVisibleVizs
  endpoint:
    path: /set-visible-vizs
    method: POST
    data_selector: ''
    params: {}
- name: Share
  endpoint:
    path: /share
    method: POST
    data_selector: ''
    params: {}
- name: ShowUnderlyingData
  endpoint:
    path: /show-underlying-data
    method: POST
    data_selector: ''
    params: {}
- name: SpotIQAnalyze
  endpoint:
    path: /spotiqanalyze
    method: POST
    data_selector: ''
    params: {}
- name: SpotterSearch
  endpoint:
    path: /spotter-search
    method: POST
    data_selector: ''
    params: {}
- name: SyncToOtherApps
  endpoint:
    path: /sync-to-other-apps
    method: POST
    data_selector: ''
    params: {}
- name: SyncToSheets
  endpoint:
    path: /sync-to-sheets
    method: POST
    data_selector: ''
    params: {}
- name: TransformTableVizData
  endpoint:
    path: /transform-table-viz-data
    method: POST
    data_selector: ''
    params: {}
- name: UpdateCrossFilter
  endpoint:
    path: /update-cross-filter
    method: POST
    data_selector: ''
    params: {}
- name: UpdateFilters
  endpoint:
    path: /update-filters
    method: POST
    data_selector: ''
    params: {}
- name: UpdateParameters
  endpoint:
    path: /update-parameters
    method: POST
    data_selector: ''
    params: {}
- name: UpdatePersonalisedView
  endpoint:
    path: /update-personalised-view
    method: POST
    data_selector: ''
    params: {}
- name: UpdateRuntimeFilters
  endpoint:
    path: /update-runtime-filters
    method: POST
    data_selector: ''
    params: {}
- name: UpdateSageQuery
  endpoint:
    path: /update-sage-query
    method: POST
    data_selector: ''
    params: {}
- name: UpdateTML
  endpoint:
    path: /update-tml
    method: POST
    data_selector: ''
    params: {}
- name: getExportRequestForCurrentPinboard
  endpoint:
    path: /getExportRequestForCurrentPinboard
    method: GET
- name: fetchData
  endpoint:
    path: /fetchData
    method: GET
    data_selector: data
    params:
      offset: 0
      size: 1000
- name: fetchCSVBlob
  endpoint:
    path: /fetchCSVBlob
    method: GET
    data_selector: blob
    params:
      userLocale: en-us
      includeInfo: false
- name: fetchPNGBlob
  endpoint:
    path: /fetchPNGBlob
    method: GET
    data_selector: blob
    params:
      userLocale: en-us
      omitBackground: false
      deviceScaleFactor: 2
- name: sendMessageData
  endpoint:
    path: /embed/bodyless-conversation.ts
    method: POST
    data_selector: data
    params: {}
- name: CustomActionPayload
  endpoint:
    path: /docs/Interface_CustomActionPayload
    method: GET
    data_selector: properties
    params: {}
- name: LiveboardEmbed
  endpoint:
    path: /embed/liveboard
    method: GET
    data_selector: embed
    params: {}
- name: Liveboard
  endpoint:
    path: /embed/liveboard
    method: GET
    data_selector: LiveboardEmbed
- name: sendMessageData
  endpoint:
    path: /sendMessageData
    method: POST
    data_selector: data
    params: {}
- name: sendMessage
  endpoint:
    path: /sendMessage
    method: POST
    data_selector: container
    params: {}
- name: sendMessageData
  endpoint:
    path: /sendMessageData
    method: POST
    data_selector: container
    params: {}
- name: LiveboardEmbed
  endpoint:
    path: /liveboard/embed
    method: GET
    data_selector: data
- name: sendMessageData
  endpoint:
    path: /sendMessageData
    method: POST
    data_selector: data
    params: {}
- name: SageEmbed
  endpoint:
    path: /embed/sage
    method: GET
    data_selector: SageEmbed
- name: sendMessageData
  endpoint:
    path: /sendMessageData
    method: POST
    data_selector: data
    params: {}
- name: additionalFlags
  endpoint:
    path: /docs/Interface_AppViewConfig#_additionalflags
    method: GET
- name: collapseSearchBar
  endpoint:
    path: /docs/Interface_AppViewConfig#_collapsesearchbar
    method: GET
- name: collapseSearchBarInitially
  endpoint:
    path: /docs/Interface_AppViewConfig#_collapsesearchbarinitially
    method: GET
- name: contextMenuTrigger
  endpoint:
    path: /docs/Interface_AppViewConfig#_contextmenutrigger
    method: GET
- name: coverAndFilterOptionInPDF
  endpoint:
    path: /docs/Interface_AppViewConfig#_coverandfilteroptioninpdf
    method: GET
- name: customActions
  endpoint:
    path: /docs/Interface_AppViewConfig#_customactions
    method: GET
- name: customizations
  endpoint:
    path: /docs/Interface_AppViewConfig#_customizations
    method: GET
- name: dataPanelCustomGroupsAccordionInitialState
  endpoint:
    path: /docs/Interface_AppViewConfig#_datapanelcustomgroupsaccordioninitialstate
    method: GET
- name: dataPanelV2
  endpoint:
    path: /docs/Interface_AppViewConfig#_datapanelv2
    method: GET
- name: disableProfileAndHelp
  endpoint:
    path: /docs/Interface_AppViewConfig#_disableprofileandhelp
    method: GET
- name: disableRedirectionLinksInNewTab
  endpoint:
    path: /docs/Interface_AppViewConfig#_disableredirectionlinksinnewtab
    method: GET
- name: disabledActionReason
  endpoint:
    path: /docs/Interface_AppViewConfig#_disabledactionreason
    method: GET
- name: disabledActions
  endpoint:
    path: /docs/Interface_AppViewConfig#_disabledactions
    method: GET
- name: discoveryExperience
  endpoint:
    path: /docs/Interface_AppViewConfig#_discoveryexperience
    method: GET
- name: worksheet
  endpoint:
    params: {}
- name: worksheet
  endpoint:
    path: /worksheetId
    method: GET
    data_selector: worksheetId
- name: doNotTrackPreRenderSize
  endpoint:
    path: doNotTrackPreRenderSize
    method: boolean
    data_selector: default
    params: {}
- name: enable2ColumnLayout
  endpoint:
    path: enable2ColumnLayout
    method: boolean
    data_selector: default
    params: {}
- name: enableAskSage
  endpoint:
    path: enableAskSage
    method: boolean
    data_selector: default
    params: {}
- name: enableCustomColumnGroups
  endpoint:
    path: enableCustomColumnGroups
    method: boolean
    data_selector: default
    params: {}
- name: enablePendoHelp
  endpoint:
    path: enablePendoHelp
    method: boolean
    data_selector: default
    params: {}
- name: enableSearchAssist
  endpoint:
    path: enableSearchAssist
    method: boolean
    data_selector: default
    params: {}
- name: enableV2Shell_experimental
  endpoint:
    path: enableV2Shell_experimental
    method: boolean
    data_selector: default
    params: {}
- name: excludeRuntimeFiltersfromURL
  endpoint:
    path: excludeRuntimeFiltersfromURL
    method: boolean
    data_selector: default
    params: {}
- name: excludeRuntimeParametersfromURL
  endpoint:
    path: excludeRuntimeParametersfromURL
    method: boolean
    data_selector: default
    params: {}
- name: exposeTranslationIDs
  endpoint:
    path: exposeTranslationIDs
    method: boolean
    data_selector: default
    params: {}
- name: fullHeight
  endpoint:
    path: fullHeight
    method: boolean
    data_selector: default
    params: {}
- name: hideApplicationSwitcher
  endpoint:
    path: hideApplicationSwitcher
    method: boolean
    data_selector: default
    params: {}
- name: hideHamburger
  endpoint:
    path: hideHamburger
    method: boolean
    data_selector: default
    params: {}
- name: hideHomepageLeftNav
  endpoint:
    path: hideHomepageLeftNav
    method: boolean
    data_selector: default
    params: {}
- name: hideLiveboardHeader
  endpoint:
    path: hideLiveboardHeader
    method: boolean
    data_selector: default
    params: {}
- name: hideNotification
  endpoint:
    path: hideNotification
    method: boolean
    data_selector: default
    params: {}
- name: hideObjectSearch
  endpoint:
    path: hideObjectSearch
    method: boolean
    data_selector: default
    params: {}
- name: hideOrgSwitcher
  endpoint:
    path: hideOrgSwitcher
    method: boolean
    data_selector: default
    params: {}
- name: insertAsSibling
  endpoint:
    path: insertAsSibling
    method: boolean
    data_selector: default
    params: {}
- name: isLiveboardCompactHeaderEnabled
  endpoint:
    path: isLiveboardCompactHeaderEnabled
    method: boolean
    data_selector: default
    params: {}
- name: isLiveboardHeaderSticky
  endpoint:
    path: isLiveboardHeaderSticky
    method: boolean
    data_selector: default
    params: {}
- name: worksheet
  endpoint:
    params: {}
- name: activeTabId
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: additionalFlags
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: collapseSearchBar
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: contextMenuTrigger
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: coverAndFilterOptionInPDF
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: customActions
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: customizations
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: dataPanelV2
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: defaultHeight
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: disableRedirectionLinksInNewTab
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: disabledActionReason
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: disabledActions
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: doNotTrackPreRenderSize
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: enable2ColumnLayout
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: enableAskSage
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: enableCustomColumnGroups
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: worksheet
  endpoint:
    path: /worksheetId
    method: GET
    data_selector: worksheetId
- name: showLiveboardTitle
  endpoint:
    path: /showLiveboardTitle
    method: GET
    data_selector: boolean
    params: {}
- name: showLiveboardVerifiedBadge
  endpoint:
    path: /showLiveboardVerifiedBadge
    method: GET
    data_selector: boolean
    params: {}
- name: showPreviewLoader
  endpoint:
    path: /showPreviewLoader
    method: GET
    data_selector: boolean
    params: {}
- name: showSpotterLimitations
  endpoint:
    path: /showSpotterLimitations
    method: GET
    data_selector: boolean
    params: {}
- name: visibleActions
  endpoint:
    path: /visibleActions
    method: GET
    data_selector: Action[]
    params: {}
- name: visibleTabs
  endpoint:
    path: /visibleTabs
    method: GET
    data_selector: string[]
    params: {}
- name: visibleVizs
  endpoint:
    path: /visibleVizs
    method: GET
    data_selector: string[]
    params: {}
- name: vizId
  endpoint:
    path: /vizId
    method: GET
    data_selector: string
    params: {}
- name: showLiveboardTitle
  endpoint:
    path: /showLiveboardTitle
    method: GET
    data_selector: boolean
    params: {}
- name: showLiveboardVerifiedBadge
  endpoint:
    path: /showLiveboardVerifiedBadge
    method: GET
    data_selector: boolean
    params: {}
- name: showPreviewLoader
  endpoint:
    path: /showPreviewLoader
    method: GET
    data_selector: boolean
    params: {}
- name: showSpotterLimitations
  endpoint:
    path: /showSpotterLimitations
    method: GET
    data_selector: boolean
    params: {}
- name: visibleActions
  endpoint:
    path: /visibleActions
    method: GET
    data_selector: Action[]
    params: {}
- name: visibleTabs
  endpoint:
    path: /visibleTabs
    method: GET
    data_selector: string[]
    params: {}
- name: visibleVizs
  endpoint:
    path: /visibleVizs
    method: GET
    data_selector: string[]
    params: {}
- name: vizId
  endpoint:
    path: /vizId
    method: GET
    data_selector: string
    params: {}
- name: runtimeFilters
  endpoint:
    path: /runtimeFilters
    method: POST
- name: runtimeParameters
  endpoint:
    path: /runtimeParameters
    method: POST
- name: searchOptions
  endpoint:
    path: /searchOptions
    method: POST
- name: showAlerts
  endpoint:
    path: /showAlerts
    method: POST
- name: showObjectResults
  endpoint:
    path: /showObjectResults
    method: POST
- name: showObjectSuggestions
  endpoint:
    path: /showObjectSuggestions
    method: POST
- name: visibleActions
  endpoint:
    path: /visibleActions
    method: POST
- name: additionalFlags
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_additionalflags
    method: GET
- name: collapseSearchBar
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_collapsesearchbar
    method: GET
- name: contextMenuTrigger
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_contextmenutrigger
    method: GET
- name: customActions
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_customactions
    method: GET
- name: customizations
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_customizations
    method: GET
- name: dataPanelV2
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_datapanelv2
    method: GET
- name: dataSource
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_datasource
    method: GET
- name: disableRedirectionLinksInNewTab
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_disableredirectionlinksinnewtab
    method: GET
- name: disabledActionReason
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_disabledactionreason
    method: GET
- name: disabledActions
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_disabledactions
    method: GET
- name: doNotTrackPreRenderSize
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_donottrackprerendersize
    method: GET
- name: enableCustomColumnGroups
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_enablecustomcolumngroups
    method: GET
- name: enableV2Shell_experimental
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_enablev2shell_experimental
    method: GET
- name: excludeRuntimeFiltersfromURL
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_excluderuntimefiltersfromurl
    method: GET
- name: excludeRuntimeParametersfromURL
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_excluderuntimeparametersfromurl
    method: GET
- name: excludeSearchTokenStringFromURL
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_excludesearchtokenstringfromurl
    method: GET
- name: exposeTranslationIDs
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_exposetranslationids
    method: GET
- name: frameParams
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_frameparams
    method: GET
- name: hiddenActions
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_hiddenactions
    method: GET
- name: insertAsSibling
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_insertassibling
    method: GET
- name: linkOverride
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_linkoverride
    method: GET
- name: locale
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_locale
    method: GET
- name: overrideOrgId
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_overrideorgid
    method: GET
- name: preRenderId
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_prerenderid
    method: GET
- name: primaryAction
  endpoint:
    path: /docs/Interface_SearchBarViewConfig#_primaryaction
    method: GET
- name: runtimeFilters
  endpoint:
    path: /runtimeFilters
    method: GET
- name: runtimeParameters
  endpoint:
    path: /runtimeParameters
    method: GET
- name: searchOptions
  endpoint:
    path: /searchOptions
    method: GET
- name: showAlerts
  endpoint:
    path: /showAlerts
    method: GET
- name: useLastSelectedSources
  endpoint:
    path: /useLastSelectedSources
    method: GET
- name: visibleActions
  endpoint:
    path: /visibleActions
    method: GET
- name: SearchEmbed
  endpoint:
    path: /docs/Interface_SearchViewConfig#_searchembed
    method: GET
- name: SpotterAgentEmbed
  endpoint:
    path: /docs/Interface_SpotterAgentEmbedViewConfig
    method: GET
- name: runtimeFilters
  endpoint:
    path: /runtimeFilters
    method: GET
- name: runtimeParameters
  endpoint:
    path: /runtimeParameters
    method: GET
- name: searchOptions
  endpoint:
    path: /searchOptions
    method: GET
- name: showAlerts
  endpoint:
    path: /showAlerts
    method: GET
- name: useLastSelectedSources
  endpoint:
    path: /useLastSelectedSources
    method: GET
- name: visibleActions
  endpoint:
    path: /visibleActions
    method: GET
- name: worksheetId
  endpoint:
    path: /worksheetId
    method: GET
    data_selector: records
- name: exportTML
  endpoint:
    path: /exportTML
    method: POST
    data_selector: result
    params: {}
- name: hideDataSources
  endpoint:
    path: /_hidedatasources
    method: GET
- name: hideResults
  endpoint:
    path: /_hideresults
    method: GET
- name: hideSearchBar
  endpoint:
    path: /_hidesearchbar
    method: GET
- name: insertAsSibling
  endpoint:
    path: /_insertassibling
    method: GET
- name: isOnBeforeGetVizDataInterceptEnabled
  endpoint:
    path: /_isonbeforegetvizdatainterceptenabled
    method: GET
- name: linkOverride
  endpoint:
    path: /_linkoverride
    method: GET
- name: locale
  endpoint:
    path: /_locale
    method: GET
- name: overrideOrgId
  endpoint:
    path: /_overrideorgid
    method: GET
- name: preRenderId
  endpoint:
    path: /_prerenderid
    method: GET
- name: runtimeFilters
  endpoint:
    path: /_runtimefilters
    method: GET
- name: runtimeParameters
  endpoint:
    path: /_runtimeparameters
    method: GET
- name: searchOptions
  endpoint:
    path: /_searchoptions
    method: GET
- name: showAlerts
  endpoint:
    path: /_showalerts
    method: GET
- name: useLastSelectedSources
  endpoint:
    path: /_uselastselectedsources
    method: GET
- name: visibleActions
  endpoint:
    path: /_visibleactions
    method: GET
- name: worksheet
  endpoint:
    path: /worksheet
    method: GET
    data_selector: worksheetId
- name: worksheetId
  endpoint:
    path: /worksheetId
    method: GET
    data_selector: string
- name: exportTML
  endpoint:
    path: /exportTML
    method: POST
    data_selector: result
- name: --ts-var-answer-chart-hover-background
  endpoint:
    path: /docs/Interface_CustomCssVariables#_ts_var_answer_chart_hover_background
    method: GET
    data_selector: string
    params: {}
- name: --ts-var-answer-chart-select-background
  endpoint:
    path: /docs/Interface_CustomCssVariables#_ts_var_answer_chart_select_background
    method: GET
    data_selector: string
    params: {}
- name: ts_var_viz_title_text_transform
  endpoint:
    path: --ts-var-viz-title-text-transform
    method: GET
    data_selector: string
- name: customizations
  endpoint:
    path: /customizations
    method: POST
    data_selector: customizations
    params: {}
- name: custom_css_variables
  endpoint:
    path: /custom_css_variables
    method: GET
    data_selector: variables
    params: {}
- name: answer_chart_hover_background
  endpoint:
    path: /docs/Interface_CustomCssVariables#_ts_var_answer_chart_hover_background
    method: GET
    data_selector: string
- name: answer_chart_select_background
  endpoint:
    path: /docs/Interface_CustomCssVariables#_ts_var_answer_chart_select_background
    method: GET
    data_selector: string
- name: liveboard_data
  endpoint:
    path: /tspublic/v1/pinboarddata
    method: POST
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /services/api/v2/users
    method: GET
    data_selector: data
    params: {}
- name: group
  endpoint:
    path: /services/api/v2/groups
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /docs/rest-api-reference#_user_management
    method: POST
    data_selector: users
    params: {}
- name: user_group
  endpoint:
    path: /docs/rest-apiv2-reference#_users
    method: POST
    data_selector: groups
    params: {}
- name: create_user
  endpoint:
    path: /api/rest/2.0/users/create
    method: POST
- name: update_user
  endpoint:
    path: /api/rest/2.0/users/{user_identifier}/update
    method: POST
- name: create_group
  endpoint:
    path: /api/rest/2.0/groups
    method: POST
- name: update_group
  endpoint:
    path: /api/rest/2.0/groups/{groupid}
    method: PUT
- name: search_user_groups
  endpoint:
    path: /api/rest/2.0/groups/search
    method: POST
- name: add_memberships
  endpoint:
    path: /tspublic/v1/group/addmemberships
    method: POST
- name: remove_memberships
  endpoint:
    path: /tspublic/v1/group/removememberships
    method: POST
- name: share_object
  endpoint:
    path: /api/rest/2.0/security/metadata/share
    method: POST
- name: FullApp
  endpoint:
    path: /fullapp
    method: GET
- name: LiveboardEmbed
  endpoint:
    path: /liveboardembed
    method: GET
- name: SearchEmbed
  endpoint:
    path: /searchembed
    method: GET
- name: VizEmbed
  endpoint:
    path: /vizembed
    method: GET
- name: Liveboard
  endpoint:
    path: /?embedApp=true#/embed/viz/{Liveboard_id}
    method: GET
- name: Visualization
  endpoint:
    path: /?embedApp=true#/embed/viz/{Liveboard_id}/{visualization_id}
    method: GET
- name: Search
  endpoint:
    path: /?embedApp=true&dataSources="cd252e5c-b552-49a8-821d-3eadaa049cca"#/answer
    method: GET
- name: create_role
  endpoint:
    path: /tspublic/v1/role
    method: POST
    data_selector: role
    params: {}
- name: edit_role
  endpoint:
    path: /tspublic/v1/role/{role_identifier}
    method: PUT
    data_selector: role
    params: {}
- name: search_role
  endpoint:
    path: /tspublic/v1/role/search
    method: POST
    data_selector: roles
    params: {}
- name: delete_role
  endpoint:
    path: /tspublic/v1/role/{role_identifier}
    method: DELETE
    data_selector: response
    params: {}
- name: add_role_to_group
  endpoint:
    path: /tspublic/v1/group/addrole
    method: POST
    data_selector: response
    params: {}
- name: remove_role_from_group
  endpoint:
    path: /tspublic/v1/group/removerole
    method: POST
    data_selector: response
    params: {}
- name: update_group
  endpoint:
    path: /tspublic/v1/group/{groupid}
    method: PUT
    data_selector: response
    params: {}
- name: create_conversation_session
  endpoint:
    path: /api/rest/2.0/ai/agent/conversation/create
    method: POST
- name: get_relevant_questions
  endpoint:
    path: /api/rest/2.0/ai/relevant-questions/
    method: POST
- name: send_question_to_conversation_session
  endpoint:
    path: /api/rest/2.0/ai/agent/converse/sse
    method: POST
- name: liveboard_data
  endpoint:
    path: tspublic/v1/pinboarddata
    method: POST
    data_selector: data
    params:
      id: c10dab93-75fd-4231-8e95-ec40a4999996
      vizid: '[''59f0af45-b3a5-4bad-a6f0-4ee7003ad171'']'
      batchsize: '-1'
      pagenumber: '-1'
      offset: '-1'
      formattype: COMPACT
- name: send_a_question
  endpoint:
    path: /api/rest/2.0/ai/agent/converse/sse
    method: POST
    data_selector: null
    params: {}
- name: conversation_session
  endpoint:
    path: /ai/agent/conversation/create
    method: POST
- name: answer_report
  endpoint:
    path: /report/answer
    method: GET
- name: generate_answer
  endpoint:
    path: /api/rest/2.0/ai/answer/create
    method: POST
    data_selector: ''
    params: {}
- name: data_source_suggestions
  endpoint:
    path: /api/rest/2.0/ai/data-source-suggestions
    method: POST
    data_selector: ''
    params: {}
- name: User
  endpoint:
    path: /docs/rest-api-reference#_user_management
    method: POST
    data_selector: users
    params: {}
- name: User Group
  endpoint:
    path: /docs/rest-apiv2-reference#_users
    method: POST
    data_selector: groups
    params: {}
- name: security_audit_events
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: events
    params: {}
- name: create_user
  endpoint:
    path: /api/rest/2.0/users/create
    method: POST
- name: update_user
  endpoint:
    path: /api/rest/2.0/users/{user_identifier}/update
    method: POST
- name: search_user_groups
  endpoint:
    path: /api/rest/2.0/groups/search
    method: POST
- name: share_object
  endpoint:
    path: /api/rest/2.0/security/metadata/share
    method: POST
- name: logs_fetch
  endpoint:
    path: /api/rest/2.0/logs/fetch
    method: POST
    data_selector: logs
    params:
      get_all_logs: 'true'
- name: security_events
  endpoint:
    path: /tspublic/v1/logs/topics/security
    method: GET
    data_selector: events
    params: {}
- name: role
  endpoint:
    path: /tspublic/v1/role
    method: POST
    data_selector: role
    params: {}
- name: group
  endpoint:
    path: /tspublic/v1/group
    method: POST
    data_selector: group
    params: {}
- name: data_connections
  endpoint:
    path: /data/connections
    method: GET
    data_selector: data
    params: {}
- name: data_objects
  endpoint:
    path: /data/objects
    method: GET
    data_selector: data
    params: {}
- name: rls
  endpoint:
    path: /rls
    method: GET
    data_selector: data
    params: {}
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: data
    params: {}
- name: liveboards
  endpoint:
    path: /liveboards
    method: GET
    data_selector: data
    params: {}
- name: create_conversation_session
  endpoint:
    path: /api/rest/2.0/ai/agent/conversation/create
    method: POST
- name: get_relevant_questions
  endpoint:
    path: /api/rest/2.0/ai/relevant-questions/
    method: POST
- name: send_question_to_conversation_session
  endpoint:
    path: /api/rest/2.0/ai/agent/converse/sse
    method: POST
- name: import_tml
  endpoint:
    path: /api/rest/2.0/metadata/tml/import
    method: POST
- name: async_import_tml
  endpoint:
    path: /api/rest/2.0/metadata/tml/async/import
    method: POST
- name: import_tml
  endpoint:
    path: /metadata/tml/async/import
    method: POST
    data_selector: null
    params: {}
- name: send_a_question
  endpoint:
    path: /api/rest/2.0/ai/agent/converse/sse
    method: POST
    data_selector: data
    params: {}
- name: import_tml
  endpoint:
    path: /metadata/tml/async/import
    method: POST
    data_selector: metadata_tmls
    params: {}
- name: message
  endpoint:
    path: /api/rest/2.0/message
    method: GET
- name: answer
  endpoint:
    path: /api/rest/2.0/report/answer
    method: GET
- name: conversation
  endpoint:
    path: /api/rest/2.0/ai/agent/conversation/create
    method: POST
- name: import_task
  endpoint:
    path: /import/async
    method: POST
    data_selector: task_id
    params: {}
- name: generate_answer
  endpoint:
    path: /api/rest/2.0/ai/answer/create
    method: POST
    data_selector: session_identifier
    params: {}
- name: data_source_suggestions
  endpoint:
    path: /api/rest/2.0/ai/data-source-suggestions
    method: POST
    data_selector: data_sources
    params: {}
- name: security_audit_logs
  endpoint:
    path: /audit-logs
    method: GET
    data_selector: events
- name: fetch_status
  endpoint:
    path: /api/rest/2.0/metadata/tml/async/status
    method: POST
    data_selector: status_list
    params:
      record_offset: 0
      record_size: 5
      include_import_response: true
- name: export_tml
  endpoint:
    path: /api/rest/2.0/metadata/tml/export
    method: POST
- name: export_tml_batch
  endpoint:
    path: /api/rest/2.0/metadata/tml/export/batch
    method: POST
- name: logs
  endpoint:
    path: /api/rest/2.0/logs/fetch
    method: POST
    data_selector: logs
    params:
      get_all_logs: 'true'
- name: security_events
  endpoint:
    path: /tspublic/v1/logs/topics/security
    method: GET
    data_selector: events
    params: {}
- name: data_connections
  endpoint:
    path: /data/connections
    method: GET
    data_selector: logs
- name: data_objects
  endpoint:
    path: /data/objects
    method: GET
    data_selector: logs
- name: rls
  endpoint:
    path: /rls/rules
    method: GET
    data_selector: logs
- name: answers
  endpoint:
    path: /answers
    method: GET
    data_selector: logs
- name: liveboards
  endpoint:
    path: /liveboards
    method: GET
    data_selector: logs
- name: create_connection_configuration
  endpoint:
    path: /create
    method: POST
- name: search_connection_configuration
  endpoint:
    path: /search
    method: POST
- name: update_connection_configuration
  endpoint:
    path: /{configuration_identifier}/update
    method: POST
- name: delete_connection_configuration
  endpoint:
    path: /delete
    method: POST
- name: import_tml
  endpoint:
    path: /api/rest/2.0/metadata/tml/import
    method: POST
- name: async_import_tml
  endpoint:
    path: /api/rest/2.0/metadata/tml/async/import
    method: POST
- name: async_import_status
  endpoint:
    path: /api/rest/2.0/metadata/tml/async/status
    method: POST
- name: tml_import
  endpoint:
    path: /async/import
    method: POST
    data_selector: ''
    params:
      metadata_tmls: []
      create_new: false
      all_orgs_context: false
      import_policy: PARTIAL_OBJECT
      skip_diff_check: false
      enable_large_metadata_validation: false
- name: auth_token
  endpoint:
    path: /api/rest/2.0/auth/token/full
    method: POST
- name: session_login
  endpoint:
    path: /api/rest/2.0/auth/session/login
    method: POST
- name: metadata_search
  endpoint:
    path: /api/rest/2.0/metadata/search
    method: POST
- name: import_tml
  endpoint:
    path: /metadata/tml/async/import
    method: POST
    data_selector: metadata_tmls
- name: fetch_status_of_import_task
  endpoint:
    path: /api/rest/2.0/metadata/tml/async/status
    method: POST
    data_selector: status_list
    params:
      record_offset: 0
      record_size: 5
      include_import_response: true
- name: export_tml
  endpoint:
    path: /api/rest/2.0/metadata/tml/export
    method: POST
    data_selector: response
    params: {}
- name: export_tml_batch
  endpoint:
    path: /api/rest/2.0/metadata/tml/export/batch
    method: POST
    data_selector: response
    params: {}
- name: auth_token_custom
  endpoint:
    path: /api/rest/2.0/auth/token/custom
    method: POST
- name: auth_token_full
  endpoint:
    path: /api/rest/2.0/auth/token/full
    method: POST
- name: auth_token_object
  endpoint:
    path: /api/rest/2.0/auth/token/object
    method: POST
- name: auth_session_token
  endpoint:
    path: /api/rest/2.0/auth/session/token
    method: GET
- name: auth_session_user
  endpoint:
    path: /api/rest/2.0/auth/session/user
    method: GET
- name: auth_session_logout
  endpoint:
    path: /api/rest/2.0/auth/session/logout
    method: POST
- name: auth_token_revoke
  endpoint:
    path: /api/rest/2.0/auth/token/revoke
    method: POST
- name: create_connection_configuration
  endpoint:
    path: /api/rest/2.0/connection-configurations/create
    method: POST
- name: search_connection_configuration
  endpoint:
    path: /api/rest/2.0/connection-configurations/search
    method: POST
- name: update_connection_configuration
  endpoint:
    path: /api/rest/2.0/connection-configurations/{configuration_identifier}/update
    method: POST
- name: delete_connection_configuration
  endpoint:
    path: /api/rest/2.0/connection-configurations/delete
    method: POST
- name: metadata_search
  endpoint:
    path: /metadata/search
    method: POST
    data_selector: response
    params:
      record_offset: 0
      record_size: 100000
- name: search_data
  endpoint:
    path: /searchdata
    method: POST
    data_selector: response
- name: auth_token
  endpoint:
    path: /api/rest/2.0/auth/token/full
    method: POST
    data_selector: token
    params: {}
- name: metadata_search
  endpoint:
    path: /api/rest/2.0/metadata/search
    method: POST
    data_selector: metadata
    params: {}
- name: search_metadata
  endpoint:
    path: /metadata/search
    method: GET
    data_selector: records
    params: {}
- name: search_users
  endpoint:
    path: /users/search
    method: GET
    data_selector: records
    params: {}
- name: search_groups
  endpoint:
    path: /groups/search
    method: GET
    data_selector: records
    params: {}
- name: search_tags
  endpoint:
    path: /tags/search
    method: GET
    data_selector: records
    params: {}
- name: tags
  endpoint:
    path: /tags/search
    method: POST
    data_selector: tags
    params: {}
- name: orgs
  endpoint:
    path: /orgs/search
    method: POST
    data_selector: orgs
    params: {}
- name: schedules
  endpoint:
    path: /schedules/search
    method: POST
    data_selector: schedules
    params: {}
- name: roles
  endpoint:
    path: /roles/search
    method: POST
    data_selector: roles
    params: {}
- name: session_login
  endpoint:
    path: /api/rest/2.0/auth/session/login
    method: POST
    data_selector: null
    params: {}
- name: token_full
  endpoint:
    path: /api/rest/2.0/auth/token/full
    method: POST
    data_selector: null
    params: {}
- name: token_object
  endpoint:
    path: /api/rest/2.0/auth/token/object
    method: POST
    data_selector: null
    params: {}
- name: search_users
  endpoint:
    path: /users/search
    method: GET
    data_selector: users
- name: auth_token_full
  endpoint:
    path: /api/rest/2.0/auth/token/full
    method: POST
    data_selector: token
    params: {}
- name: auth_token_object
  endpoint:
    path: /api/rest/2.0/auth/token/object
    method: POST
    data_selector: token
    params: {}
- name: auth_token_custom
  endpoint:
    path: /api/rest/2.0/auth/token/custom
    method: POST
    data_selector: token
    params: {}
- name: session_token
  endpoint:
    path: /api/rest/2.0/auth/session/token
    method: GET
    data_selector: token
    params: {}
- name: session_user
  endpoint:
    path: /api/rest/2.0/auth/session/user
    method: GET
    data_selector: user
    params: {}
- name: session_logout
  endpoint:
    path: /api/rest/2.0/auth/session/logout
    method: POST
    data_selector: null
    params: {}
- name: search_users
  endpoint:
    path: /users/search
    method: POST
    data_selector: records
    params:
      record_offset: 0
      record_size: 100000
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
- name: search_groups
  endpoint:
    path: /groups/search
    method: GET
- name: search_groups
  endpoint:
    path: /groups/search
    method: POST
    data_selector: ''
    params: {}
- name: search_metadata
  endpoint:
    path: /metadata/search
    method: GET
    data_selector: objects
- name: metadata_search
  endpoint:
    path: /metadata/search
    method: POST
    data_selector: response
    params:
      record_offset: 0
      record_size: 100000
- name: search_data
  endpoint:
    path: /searchdata
    method: POST
    data_selector: response
- name: metadata_search
  endpoint:
    path: /metadata/search
    method: GET
    data_selector: metadata
    params: {}
- name: Liveboard
  endpoint:
    path: /liveboard
    method: GET
    data_selector: metadata_detail
- name: search_metadata
  endpoint:
    path: /metadata/search
    method: GET
    data_selector: records
- name: search_users
  endpoint:
    path: /users/search
    method: GET
    data_selector: records
- name: search_groups
  endpoint:
    path: /groups/search
    method: GET
    data_selector: records
- name: search_tags
  endpoint:
    path: /tags/search
    method: GET
    data_selector: records
- name: tags
  endpoint:
    path: /tags/search
    method: POST
    data_selector: tags
    params: {}
- name: orgs
  endpoint:
    path: /orgs/search
    method: POST
    data_selector: orgs
    params: {}
- name: schedules
  endpoint:
    path: /schedules/search
    method: POST
    data_selector: schedules
    params: {}
- name: roles
  endpoint:
    path: /roles/search
    method: POST
    data_selector: roles
    params: {}
- name: Total Order Total Price
  endpoint:
    path: /services/data/vXX.X/sobjects/TotalOrderTotalPrice
    method: GET
    data_selector: records
    params: {}
- name: Untitled
  endpoint:
    path: /services/data/vXX.X/sobjects/Untitled
    method: GET
    data_selector: records
    params: {}
- name: search_users
  endpoint:
    path: /users/search
    method: GET
    data_selector: users
    params:
      record_offset: 0
      record_size: 10
- name: users
  endpoint:
    path: /users/search
    method: POST
    data_selector: ''
    params: {}
- name: Chart Viz order total price quantity
  endpoint:
    path: /path/to/endpoint
    method: GET
- name: Table Viz order total price quantity
  endpoint:
    path: /path/to/endpoint
    method: GET
- name: groups_search
  endpoint:
    path: /groups/search
    method: GET
- name: search_groups
  endpoint:
    path: /groups/search
    method: POST
    data_selector: records
    params:
      record_offset: 0
      record_size: 100000
- name: Total Order Total Price
  endpoint:
    path: /total/order/total/price
    method: GET
    data_selector: records
- name: Total Quantity
  endpoint:
    path: /total/quantity
    method: GET
    data_selector: records
- name: metadata_search
  endpoint:
    path: /metadata/search
    method: GET
    data_selector: objects
- name: search
  endpoint:
    path: /metadata/search
    method: GET
    data_selector: metadata
- name: metadata
  endpoint:
    path: /api/v1/liveboard
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Total Order Total Price
  endpoint:
    path: /services/data/vXX.X/sobjects/TotalOrderTotalPrice
    method: GET
    data_selector: records
- name: Untitled
  endpoint:
    path: /services/data/vXX.X/sobjects/Untitled
    method: GET
    data_selector: records
- name: metadata
  endpoint:
    path: /metadata/search
    method: POST
    data_selector: metadata
    params:
      include_visualization_headers: true
      record_offset: 0
      record_size: 10
- name: Table 1
  endpoint:
    path: /services/data/vXX.X/sobjects/Table
    method: GET
    data_selector: records
- name: Headline Ship Mode
  endpoint:
    path: /services/data/vXX.X/sobjects/Headline
    method: GET
    data_selector: records
- name: Filter Viz
  endpoint:
    path: /services/data/vXX.X/sobjects/Filter
    method: GET
    data_selector: records
- name: Chart Viz
  endpoint:
    path: /services/data/vXX.X/sobjects/Chart
    method: GET
    data_selector: records
- name: search_data
  endpoint:
    path: /api/rest/2.0/searchdata
    method: POST
- name: liveboard_data
  endpoint:
    path: /api/rest/2.0/metadata/liveboard/data
    method: POST
- name: answer_data
  endpoint:
    path: /api/rest/2.0/metadata/answer/data
    method: POST
- name: order_total_price_quantity
  endpoint:
    path: /path/to/endpoint
    method: GET
    data_selector: data_records
- name: Total Order Total Price
  endpoint:
    path: /path/to/TotalOrderTotalPrice
    method: GET
    data_selector: records
- name: Total Quantity
  endpoint:
    path: /path/to/TotalQuantity
    method: GET
    data_selector: records
- name: search_data
  endpoint:
    path: /api/rest/2.0/searchdata
    method: POST
    data_selector: data
    params: {}
- name: liveboard_data
  endpoint:
    path: /api/rest/2.0/metadata/liveboard/data
    method: POST
    data_selector: data
    params: {}
- name: answer_data
  endpoint:
    path: /api/rest/2.0/metadata/answer/data
    method: POST
    data_selector: data
    params: {}
- name: liveboard_report
  endpoint:
    path: /api/rest/2.0/report/liveboard
    method: POST
    data_selector: data
    params: {}
- name: answer_report
  endpoint:
    path: /api/rest/2.0/report/answer
    method: POST
    data_selector: data
    params: {}
- name: Total Revenue by Manufacturer
  endpoint:
    path: ''
    method: QUESTION
    data_selector: ''
    params: {}
- name: answer_data
  endpoint:
    path: /api/rest/2.0/report/answer
    method: POST
    data_selector: file
    params: {}
- name: metadata_header
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: metadata
  endpoint:
    path: /metadata/search
    method: POST
    data_selector: metadata
    params:
      include_visualization_headers: true
      record_offset: 0
      record_size: 10
- name: search_data
  endpoint:
    path: /api/rest/2.0/searchdata
    method: POST
- name: liveboard_data
  endpoint:
    path: /api/rest/2.0/metadata/liveboard/data
    method: POST
- name: answer_data
  endpoint:
    path: /api/rest/2.0/metadata/answer/data
    method: POST
- name: searchUsers
  endpoint:
    path: /api/rest/2.0/users/search
    method: POST
- name: createUser
  endpoint:
    path: /api/rest/2.0/users/create
    method: POST
- name: user
  endpoint:
    path: /api/v2/user
    method: POST
    data_selector: user
    params: {}
- name: search_data
  endpoint:
    path: /api/rest/2.0/searchdata
    method: POST
    data_selector: data
    params: {}
- name: liveboard_data
  endpoint:
    path: /api/rest/2.0/metadata/liveboard/data
    method: POST
    data_selector: data
    params: {}
- name: answer_data
  endpoint:
    path: /api/rest/2.0/metadata/answer/data
    method: POST
    data_selector: data
    params: {}
- name: liveboard_report
  endpoint:
    path: /api/rest/2.0/report/liveboard
    method: POST
    data_selector: data
    params: {}
- name: answer_report
  endpoint:
    path: /api/rest/2.0/report/answer
    method: POST
    data_selector: data
    params: {}
- name: Answer
  endpoint:
    path: /api/rest/2.0/report/answer
    method: POST
    data_selector: data
    params: {}
- name: searchUsers
  endpoint:
    path: /api/rest/2.0/users/search
    method: POST
    data_selector: data
- name: createUser
  endpoint:
    path: /api/rest/2.0/users/create
    method: POST
    data_selector: data
- name: user
  endpoint:
    path: /users
    method: POST
    data_selector: createdUser
- name: activateUser
  endpoint:
    path: /users/activate
    method: POST
- name: assignChangeAuthor
  endpoint:
    path: /security/metadata/assign
    method: POST
- name: assignTag
  endpoint:
    path: /tags/assign
    method: POST
- name: changeUserPassword
  endpoint:
    path: /users/change-password
    method: POST
- name: commitBranch
  endpoint:
    path: /vcs/git/branches/commit
    method: POST
- name: convertWorksheetToModel
  endpoint:
    path: /metadata/worksheets/convert
    method: POST
- name: copyObject
  endpoint:
    path: /metadata/copyobject
    method: POST
- name: createConfig
  endpoint:
    path: /vcs/git/config/create
    method: POST
- name: createConnection
  endpoint:
    path: /connection/create
    method: POST
- name: createConversation
  endpoint:
    path: /ai/conversation/create
    method: POST
- name: createCustomAction
  endpoint:
    path: /customization/custom-actions
    method: POST
- name: createOrg
  endpoint:
    path: /orgs/create
    method: POST
- name: createRole
  endpoint:
    path: /roles/create
    method: POST
- name: createSchedule
  endpoint:
    path: /schedules/create
    method: POST
- name: createTag
  endpoint:
    path: /tags/create
    method: POST
- name: createUser
  endpoint:
    path: /users/create
    method: POST
- name: createUserGroup
  endpoint:
    path: /groups/create
    method: POST
- name: dbtConnection
  endpoint:
    path: /dbt/dbt-connection
    method: POST
- name: dbtGenerateSyncTml
  endpoint:
    path: /dbt/generate-sync-tml
    method: POST
- name: dbtGenerateTml
  endpoint:
    path: /dbt/generate-tml
    method: POST
- name: dbtSearch
  endpoint:
    path: /dbt/search
    method: POST
- name: deactivateUser
  endpoint:
    path: /users/deactivate
    method: POST
- name: deleteConfig
  endpoint:
    path: /vcs/git/config/delete
    method: POST
- name: deleteConnection
  endpoint:
    path: /connection/delete
    method: POST
- name: deleteUser
  endpoint:
    path: /users/{user_identifier}/delete
    method: POST
- name: fetchLogs
  endpoint:
    path: /logs/fetch
    method: POST
- name: getCurrentUserInfo
  endpoint:
    path: /auth/session/user
    method: GET
- name: getSystemConfig
  endpoint:
    path: /system/config
    method: GET
- name: login
  endpoint:
    path: /auth/session/login
    method: POST
- name: logout
  endpoint:
    path: /auth/session/logout
    method: POST
- name: searchUsers
  endpoint:
    path: /users/search
    method: POST
- name: updateCustomAction
  endpoint:
    path: /api/rest/2.0/customization/custom-actions/{custom_action_identifier}/update
    method: POST
- name: updateDbtConnection
  endpoint:
    path: /api/rest/2.0/dbt/update-dbt-connection
    method: POST
- name: updateMetadataHeader
  endpoint:
    path: /api/rest/2.0/metadata/headers/update
    method: POST
- name: updateMetadataObjId
  endpoint:
    path: /api/rest/2.0/metadata/update-obj-id
    method: POST
- name: updateOrg
  endpoint:
    path: /api/rest/2.0/orgs/{org_identifier}/update
    method: POST
- name: updateRole
  endpoint:
    path: /api/rest/2.0/roles/{role_identifier}/update
    method: POST
- name: updateSchedule
  endpoint:
    path: /api/rest/2.0/schedules/{schedule_identifier}/update
    method: POST
- name: updateSystemConfig
  endpoint:
    path: /api/rest/2.0/system/config-update
    method: POST
- name: updateTag
  endpoint:
    path: /api/rest/2.0/tags/{tag_identifier}/update
    method: POST
- name: updateUser
  endpoint:
    path: /api/rest/2.0/users/{user_identifier}/update
    method: POST
- name: updateUserGroup
  endpoint:
    path: /api/rest/2.0/groups/{group_identifier}/update
    method: POST
- name: validateMerge
  endpoint:
    path: /api/rest/2.0/vcs/git/branches/validate
    method: POST
- name: validateToken
  endpoint:
    path: /api/rest/2.0/auth/token/validate
    method: POST
- name: activateUser
  endpoint:
    path: /users/activate
    method: POST
- name: assignChangeAuthor
  endpoint:
    path: /security/metadata/assign
    method: POST
- name: assignTag
  endpoint:
    path: /tags/assign
    method: POST
- name: changeUserPassword
  endpoint:
    path: /users/change-password
    method: POST
- name: commitBranch
  endpoint:
    path: /vcs/git/branches/commit
    method: POST
- name: convertWorksheetToModel
  endpoint:
    path: /metadata/worksheets/convert
    method: POST
- name: copyObject
  endpoint:
    path: /metadata/copyobject
    method: POST
- name: createConfig
  endpoint:
    path: /vcs/git/config/create
    method: POST
- name: createConnection
  endpoint:
    path: /connection/create
    method: POST
- name: createConversation
  endpoint:
    path: /ai/conversation/create
    method: POST
- name: createCustomAction
  endpoint:
    path: /customization/custom-actions
    method: POST
- name: createOrg
  endpoint:
    path: /orgs/create
    method: POST
- name: createRole
  endpoint:
    path: /roles/create
    method: POST
- name: createSchedule
  endpoint:
    path: /schedules/create
    method: POST
- name: createTag
  endpoint:
    path: /tags/create
    method: POST
- name: createUser
  endpoint:
    path: /users/create
    method: POST
- name: createUserGroup
  endpoint:
    path: /groups/create
    method: POST
- name: dbtConnection
  endpoint:
    path: /dbt/dbt-connection
    method: POST
- name: dbtGenerateSyncTml
  endpoint:
    path: /dbt/generate-sync-tml
    method: POST
- name: dbtGenerateTml
  endpoint:
    path: /dbt/generate-tml
    method: POST
- name: dbtSearch
  endpoint:
    path: /dbt/search
    method: POST
- name: deactivateUser
  endpoint:
    path: /users/deactivate
    method: POST
- name: deleteConfig
  endpoint:
    path: /vcs/git/config/delete
    method: POST
- name: deleteConnection
  endpoint:
    path: /connection/delete
    method: POST
- name: deleteConnectionV2
  endpoint:
    path: /connections/{connection_identifier}/delete
    method: POST
- name: deleteCustomAction
  endpoint:
    path: /customization/custom-actions/{custom_action_identifier}/delete
    method: POST
- name: deleteDbtConnection
  endpoint:
    path: /dbt/{dbt_connection_identifier}/delete
    method: POST
- name: deleteMetadata
  endpoint:
    path: /metadata/delete
    method: POST
- name: deleteOrg
  endpoint:
    path: /orgs/{org_identifier}/delete
    method: POST
- name: deleteRole
  endpoint:
    path: /roles/{role_identifier}/delete
    method: POST
- name: deleteSchedule
  endpoint:
    path: /schedules/{schedule_identifier}/delete
    method: POST
- name: deleteTag
  endpoint:
    path: /tags/{tag_identifier}/delete
    method: POST
- name: deleteUser
  endpoint:
    path: /users/{user_identifier}/delete
    method: POST
- name: deleteUserGroup
  endpoint:
    path: /groups/{group_identifier}/delete
    method: POST
- name: deployCommit
  endpoint:
    path: /vcs/git/commits/deploy
    method: POST
- name: downloadConnectionMetadataChanges
  endpoint:
    path: /connections/download-connection-metadata-changes/{connection_identifier}
    method: POST
- name: exportAnswerReport
  endpoint:
    path: /report/answer
    method: POST
- name: exportLiveboardReport
  endpoint:
    path: /report/liveboard
    method: POST
- name: exportMetadataTML
  endpoint:
    path: /metadata/tml/export
    method: POST
- name: exportMetadataTMLBatched
  endpoint:
    path: /metadata/tml/export/batch
    method: POST
- name: fetchAnswerData
  endpoint:
    path: /metadata/answer/data
    method: POST
- name: fetchAnswerSqlQuery
  endpoint:
    path: /metadata/answer/sql
    method: POST
- name: fetchAsyncImportTaskStatus
  endpoint:
    path: /metadata/tml/async/status
    method: POST
- name: fetchConnectionDiffStatus
  endpoint:
    path: /connections/fetch-connection-diff-status/{connection_identifier}
    method: POST
- name: fetchLiveboardData
  endpoint:
    path: /metadata/liveboard/data
    method: POST
- name: fetchLiveboardSqlQuery
  endpoint:
    path: /metadata/liveboard/sql
    method: POST
- name: fetchLogs
  endpoint:
    path: /logs/fetch
    method: POST
- name: fetchPermissionsOfPrincipals
  endpoint:
    path: /security/principals/fetch-permissions
    method: POST
- name: fetchPermissionsOnMetadata
  endpoint:
    path: /security/metadata/fetch-permissions
    method: POST
- name: forceLogoutUsers
  endpoint:
    path: /users/force-logout
    method: POST
- name: getCurrentUserInfo
  endpoint:
    path: /auth/session/user
    method: GET
- name: getCurrentUserToken
  endpoint:
    path: /auth/session/token
    method: GET
- name: getCustomAccessToken
  endpoint:
    path: /auth/token/custom
    method: POST
- name: getFullAccessToken
  endpoint:
    path: /auth/token/full
    method: POST
- name: getObjectAccessToken
  endpoint:
    path: /auth/token/object
    method: POST
- name: getSystemConfig
  endpoint:
    path: /system/config
    method: GET
- name: getSystemInformation
  endpoint:
    path: /system
    method: GET
- name: getSystemOverrideInfo
  endpoint:
    path: /system/config-overrides
    method: GET
- name: importMetadataTML
  endpoint:
    path: /metadata/tml/import
    method: POST
- name: importMetadataTMLAsync
  endpoint:
    path: /metadata/tml/async/import
    method: POST
- name: importUserGroups
  endpoint:
    path: /groups/import
    method: POST
- name: importUsers
  endpoint:
    path: /users/import
    method: POST
- name: login
  endpoint:
    path: /auth/session/login
    method: POST
- name: logout
  endpoint:
    path: /auth/session/logout
    method: POST
- name: queryGetDecomposedQuery
  endpoint:
    path: /ai/analytical-questions
    method: POST
- name: resetUserPassword
  endpoint:
    path: /users/reset-password
    method: POST
- name: revertCommit
  endpoint:
    path: /vcs/git/commits/{commit_id}/revert
    method: POST
- name: revokeToken
  endpoint:
    path: /auth/token/revoke
    method: POST
- name: searchCommits
  endpoint:
    path: /vcs/git/commits/search
    method: POST
- name: searchConfig
  endpoint:
    path: /vcs/git/config/search
    method: POST
- name: searchConnection
  endpoint:
    path: /connection/search
    method: POST
- name: searchCustomActions
  endpoint:
    path: /customization/custom-actions/search
    method: POST
- name: searchData
  endpoint:
    path: /searchdata
    method: POST
- name: searchMetadata
  endpoint:
    path: /metadata/search
    method: POST
- name: searchOrgs
  endpoint:
    path: /orgs/search
    method: POST
- name: searchRoles
  endpoint:
    path: /roles/search
    method: POST
- name: searchSchedules
  endpoint:
    path: /schedules/search
    method: POST
- name: searchTags
  endpoint:
    path: /tags/search
    method: POST
- name: searchUserGroups
  endpoint:
    path: /groups/search
    method: POST
- name: searchUsers
  endpoint:
    path: /users/search
    method: POST
- name: sendMessage
  endpoint:
    path: /ai/conversation/{conversation_identifier}/converse
    method: POST
- name: shareMetadata
  endpoint:
    path: /security/metadata/share
    method: POST
- name: singleAnswer
  endpoint:
    path: /ai/answer/create
    method: POST
- name: unassignTag
  endpoint:
    path: /tags/unassign
    method: POST
- name: updateConfig
  endpoint:
    path: /vcs/git/config/update
    method: POST
- name: updateConnection
  endpoint:
    path: /connection/update
    method: POST
- name: updateConnectionV2
  endpoint:
    path: /connections/{connection_identifier}/update
    method: POST
- name: create_conversation
  endpoint:
    path: /api/rest/2.0/ai/conversation/create
    method: POST
- name: data_source_suggestions
  endpoint:
    path: /api/rest/2.0/ai/data-source-suggestions
    method: POST
- name: relevant_questions
  endpoint:
    path: /api/rest/2.0/ai/relevant-questions/
    method: POST
- name: updateCustomAction
  endpoint:
    path: /api/rest/2.0/customization/custom-actions/{custom_action_identifier}/update
    method: POST
- name: updateDbtConnection
  endpoint:
    path: /api/rest/2.0/dbt/update-dbt-connection
    method: POST
- name: updateMetadataHeader
  endpoint:
    path: /api/rest/2.0/metadata/headers/update
    method: POST
- name: updateMetadataObjId
  endpoint:
    path: /api/rest/2.0/metadata/update-obj-id
    method: POST
- name: updateOrg
  endpoint:
    path: /api/rest/2.0/orgs/{org_identifier}/update
    method: POST
- name: updateRole
  endpoint:
    path: /api/rest/2.0/roles/{role_identifier}/update
    method: POST
- name: updateSchedule
  endpoint:
    path: /api/rest/2.0/schedules/{schedule_identifier}/update
    method: POST
- name: updateSystemConfig
  endpoint:
    path: /api/rest/2.0/system/config-update
    method: POST
- name: updateTag
  endpoint:
    path: /api/rest/2.0/tags/{tag_identifier}/update
    method: POST
- name: updateUser
  endpoint:
    path: /api/rest/2.0/users/{user_identifier}/update
    method: POST
- name: updateUserGroup
  endpoint:
    path: /api/rest/2.0/groups/{group_identifier}/update
    method: POST
- name: validateMerge
  endpoint:
    path: /api/rest/2.0/vcs/git/branches/validate
    method: POST
- name: validateToken
  endpoint:
    path: /api/rest/2.0/auth/token/validate
    method: POST
- name: email_customization
  endpoint:
    path: /api/rest/2.0/customization/email
    method: POST
- name: groups
  endpoint:
    path: /api/rest/2.0/groups/search
    method: POST
- name: logs
  endpoint:
    path: /api/rest/2.0/logs/fetch
    method: POST
- name: metadata
  endpoint:
    path: /api/rest/2.0/metadata/search
    method: POST
- name: orgs
  endpoint:
    path: /api/rest/2.0/orgs/search
    method: POST
- name: reports
  endpoint:
    path: /api/rest/2.0/report/liveboard
    method: POST
- name: roles
  endpoint:
    path: /api/rest/2.0/roles/search
    method: POST
- name: schedules
  endpoint:
    path: /api/rest/2.0/schedules/create
    method: POST
- name: security
  endpoint:
    path: /api/rest/2.0/security/metadata/assign
    method: POST
- name: system
  endpoint:
    path: /api/rest/2.0/system
    method: GET
- name: tags
  endpoint:
    path: /api/rest/2.0/tags/search
    method: POST
- name: users
  endpoint:
    path: /api/rest/2.0/users/search
    method: POST
- name: variables
  endpoint:
    path: /api/rest/2.0/template/variables/search
    method: POST
- name: version_control
  endpoint:
    path: /api/rest/2.0/vcs/git/config/search
    method: POST
- name: session_user
  endpoint:
    path: /api/rest/2.0/auth/session/user
    method: GET
    data_selector: user_info
- name: session_token
  endpoint:
    path: /api/rest/2.0/auth/session/token
    method: GET
    data_selector: token_info
- name: login
  endpoint:
    path: /api/rest/2.0/auth/session/login
    method: POST
    data_selector: login_response
- name: search_connection
  endpoint:
    path: /api/rest/2.0/connection/search
    method: POST
    data_selector: connections
- name: session_login
  endpoint:
    path: /tspublic/v1/session/login
    method: POST
    data_selector: response
    params:
      username: String
      password: String
      rememberme: Boolean
- name: auth_token
  endpoint:
    path: /tspublic/v1/session/auth/token
    method: POST
- name: login_token
  endpoint:
    path: /tspublic/v1/session/login/token
    method: POST
- name: email_customization
  endpoint:
    path: /api/rest/2.0/customization/email
    method: POST
- name: groups
  endpoint:
    path: /api/rest/2.0/groups/search
    method: POST
- name: logs
  endpoint:
    path: /api/rest/2.0/logs/fetch
    method: POST
- name: metadata
  endpoint:
    path: /api/rest/2.0/metadata/search
    method: POST
- name: orgs
  endpoint:
    path: /api/rest/2.0/orgs/search
    method: POST
- name: reports
  endpoint:
    path: /api/rest/2.0/report/liveboard
    method: POST
- name: roles
  endpoint:
    path: /api/rest/2.0/roles/search
    method: POST
- name: schedules
  endpoint:
    path: /api/rest/2.0/schedules/create
    method: POST
- name: security
  endpoint:
    path: /api/rest/2.0/security/metadata/assign
    method: POST
- name: system
  endpoint:
    path: /api/rest/2.0/system
    method: GET
- name: metadata_listvizheaders
  endpoint:
    path: /callosum/v1/tspublic/v1/metadata/listvizheaders
    method: GET
    data_selector: ''
    params: {}
- name: session_logout
  endpoint:
    path: /callosum/v1/tspublic/v1/session/logout
    method: POST
    data_selector: ''
    params: {}
- name: metadata_list_object_headers
  endpoint:
    path: /metadata/listobjectheaders
    method: GET
    data_selector: objectHeaders
    params:
      batchsize: '-1'
- name: metadata_details
  endpoint:
    path: /metadata/details
    method: GET
    data_selector: details
    params: {}
- name: object_access
  endpoint:
    path: /security/metadata/permissions
    method: GET
- name: user_privileges
  endpoint:
    path: /user
    method: GET
- name: dependency_tracking
  endpoint:
    path: /metadata/details
    method: GET
- name: pagination_parameters
  endpoint:
    params:
      pagesize:
        description: 'pagesize: The number of rows.'
        defaultValue: '-1'
        type: integer
      offset:
        description: 'Offset: The starting point'
        defaultValue: '-1'
        type: integer
      pagenumber:
        description: 'PageNumber: This is an alternate way to set offset. This is
          1-based indexing. Offset = (pageNumber - 1) * pageSize.'
        defaultValue: '-1'
        type: integer
      formattype:
        description: 'FormatType: This sets the JSON format type. Values that are
          allowed are FULL and COMPACT.'
        defaultValue: COMPACT
        type: string
- name: tags_search
  endpoint:
    path: /api/rest/2.0/tags/search
    method: POST
- name: tags_create
  endpoint:
    path: /api/rest/2.0/tags/create
    method: POST
- name: tags_update
  endpoint:
    path: /api/rest/2.0/tags/{tag_identifier}/update
    method: POST
- name: tags_delete
  endpoint:
    path: /api/rest/2.0/tags/{tag_identifier}/delete
    method: POST
- name: tags_assign
  endpoint:
    path: /api/rest/2.0/tags/assign
    method: POST
- name: tags_unassign
  endpoint:
    path: /api/rest/2.0/tags/unassign
    method: POST
- name: users_search
  endpoint:
    path: /api/rest/2.0/users/search
    method: POST
- name: users_create
  endpoint:
    path: /api/rest/2.0/users/create
    method: POST
- name: users_update
  endpoint:
    path: /api/rest/2.0/users/{user_identifier}/update
    method: POST
- name: users_delete
  endpoint:
    path: /api/rest/2.0/users/{user_identifier}/delete
    method: POST
- name: users_import
  endpoint:
    path: /api/rest/2.0/users/import
    method: POST
- name: users_change_password
  endpoint:
    path: /api/rest/2.0/users/change-password
    method: POST
- name: users_reset_password
  endpoint:
    path: /api/rest/2.0/users/reset-password
    method: POST
- name: users_force_logout
  endpoint:
    path: /api/rest/2.0/users/force-logout
    method: POST
- name: users_activate
  endpoint:
    path: /api/rest/2.0/users/activate
    method: POST
- name: users_deactivate
  endpoint:
    path: /api/rest/2.0/users/deactivate
    method: POST
- name: variable_create
  endpoint:
    path: /api/rest/2.0/template/variables/create
    method: POST
- name: variable_search
  endpoint:
    path: /api/rest/2.0/template/variables/search
    method: POST
- name: variable_update
  endpoint:
    path: /api/rest/2.0/template/variables/update
    method: POST
- name: variable_identifier_update
  endpoint:
    path: /api/rest/2.0/template/variables/{identifier}/update
    method: POST
- name: variable_delete
  endpoint:
    path: /api/rest/2.0/template/variables/{identifier}/delete
    method: POST
- name: vcs_git_config_search
  endpoint:
    path: /api/rest/2.0/vcs/git/config/search
    method: POST
- name: vcs_git_commits_search
  endpoint:
    path: /api/rest/2.0/vcs/git/commits/search
    method: POST
- name: vcs_git_config_create
  endpoint:
    path: /api/rest/2.0/vcs/git/config/create
    method: POST
- name: vcs_git_config_update
  endpoint:
    path: /api/rest/2.0/vcs/git/config/update
    method: POST
- name: vcs_git_config_delete
  endpoint:
    path: /api/rest/2.0/vcs/git/config/delete
    method: POST
- name: vcs_git_branches_commit
  endpoint:
    path: /api/rest/2.0/vcs/git/branches/commit
    method: POST
- name: vcs_git_commits_revert
  endpoint:
    path: /api/rest/2.0/vcs/git/commits/{commit_id}/revert
    method: POST
- name: vcs_git_branches_validate
  endpoint:
    path: /api/rest/2.0/vcs/git/branches/validate
    method: POST
- name: vcs_git_commits_deploy
  endpoint:
    path: /api/rest/2.0/vcs/git/commits/deploy
    method: POST
- name: org
  endpoint:
    path: /tspublic/v1/org/
    method: POST
- name: org
  endpoint:
    path: /tspublic/v1/org/
    method: GET
- name: org
  endpoint:
    path: /tspublic/v1/org/
    method: PUT
- name: org
  endpoint:
    path: /tspublic/v1/org/search
    method: POST
- name: org
  endpoint:
    path: /tspublic/v1/org/
    method: DELETE
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
- name: groups
  endpoint:
    path: /api/v1/groups
    method: GET
- name: user
  endpoint:
    path: /tspublic/v1/user/
    method: GET
    data_selector: records
- name: group
  endpoint:
    path: /tspublic/v1/group/
    method: GET
    data_selector: records
- name: role
  endpoint:
    path: /tspublic/v1/role/
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /tspublic/v1/session/login
    method: POST
    data_selector: records
- name: metadata
  endpoint:
    path: /tspublic/v1/metadata/details
    method: GET
    data_selector: records
- name: session_login
  endpoint:
    path: /tspublic/v1/session/login
    method: POST
    data_selector: session
    params: {}
- name: auth_token
  endpoint:
    path: /tspublic/v1/session/auth/token
    method: POST
    data_selector: token
    params: {}
- name: login_token
  endpoint:
    path: /tspublic/v1/session/login/token
    method: POST
    data_selector: user
    params: {}
- name: visualization_headers
  endpoint:
    path: /tspublic/v1/metadata/listvizheaders
    method: GET
    data_selector: response
    params: {}
- name: logout
  endpoint:
    path: /tspublic/v1/session/logout
    method: POST
    data_selector: response
    params: {}
- name: security_share
  endpoint:
    path: /tspublic/v1/security/share
    method: POST
- name: security_shareviz
  endpoint:
    path: /tspublic/v1/security/shareviz
    method: POST
- name: security_metadata_permissions
  endpoint:
    path: /tspublic/v1/security/metadata/permissions
    method: GET
- name: security_metadata_id_permissions
  endpoint:
    path: /tspublic/v1/security/metadata/{id}/permissions
    method: GET
- name: effective_permission_bulk
  endpoint:
    path: /tspublic/v1/security/effectivepermissionbulk
    method: GET
- name: logs_topics
  endpoint:
    path: /tspublic/v1/logs/topics/{topic}
    method: GET
- name: materialization_refresh_view
  endpoint:
    path: /tspublic/v1/materialization/refreshview/{id}
    method: POST
- name: database_tables
  endpoint:
    path: /tspublic/v1/database/tables
    method: GET
- name: database_schemas
  endpoint:
    path: /tspublic/v1/database/schemas
    method: GET
- name: database_databases
  endpoint:
    path: /tspublic/v1/database/databases
    method: GET
- name: database_get_table_detail
  endpoint:
    path: /tspublic/v1/database/getTableDetail
    method: GET
- name: database_create_table
  endpoint:
    path: /tspublic/v1/database/createtable
    method: POST
- name: database_run
  endpoint:
    path: /tspublic/v1/database/run
    method: POST
- name: list_metadata_objects
  endpoint:
    path: /metadata/listobjectheaders
    method: GET
    data_selector: objectHeaders
    params:
      batchsize: '-1'
- name: full_object_details
  endpoint:
    path: /metadata/details
    method: GET
    data_selector: metadataDetails
- name: org
  endpoint:
    path: /tspublic/v1/org/
    method: POST
    data_selector: Org
    params: {}
- name: org_search
  endpoint:
    path: /tspublic/v1/org/search
    method: POST
    data_selector: Org
    params: {}
- name: object_permissions
  endpoint:
    path: /security/metadata/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: list_object_headers
  endpoint:
    path: /metadata/listobjectheaders
    method: GET
    data_selector: objects
    params: {}
- name: user_privileges
  endpoint:
    path: /user
    method: GET
    data_selector: privileges
    params: {}
- name: group_details
  endpoint:
    path: /group
    method: GET
    data_selector: groups
    params: {}
- name: dependency_tracking
  endpoint:
    path: /metadata/details
    method: GET
    data_selector: dependencies
    params: {}
- name: org
  endpoint:
    path: /tspublic/v1/org/
    method: GET
    data_selector: ''
    params:
      orgScope: ALL
- name: org_search
  endpoint:
    path: /tspublic/v1/org/search
    method: POST
    data_selector: ''
    params:
      orgScope: ALL
- name: paginate_api_response
  endpoint:
    path: /tspublic/v1/pinboarddata
    method: GET
    params:
      pagesize:
        description: 'pagesize: The number of rows.'
        defaultValue: '-1'
        type: integer
      offset:
        description: 'Offset: The starting point'
        defaultValue: '-1'
        type: integer
      pagenumber:
        description: 'PageNumber: This is an alternate way to set offset. This is
          1-based indexing. Offset = (pageNumber - 1) * pageSize.'
        defaultValue: '-1'
        type: integer
      formattype:
        description: 'FormatType: This sets the JSON format type. Values that are
          allowed are FULL and COMPACT.'
        defaultValue: COMPACT
        type: string
- name: org
  endpoint:
    path: /tspublic/v1/org/
    method: POST
- name: org_get
  endpoint:
    path: /tspublic/v1/org/
    method: GET
- name: org_edit
  endpoint:
    path: /tspublic/v1/org/
    method: PUT
- name: org_search
  endpoint:
    path: /tspublic/v1/org/search
    method: POST
- name: org_delete
  endpoint:
    path: /tspublic/v1/org/
    method: DELETE
- name: create_user
  endpoint:
    path: /tspublic/v1/user/
    method: POST
    data_selector: userContent
    params:
      sendEmail: 'true'
- name: update_user
  endpoint:
    path: /tspublic/v1/user/{userid}
    method: PUT
    data_selector: content
    params: {}
- name: update_email
  endpoint:
    path: /tspublic/v1/user/email
    method: PUT
    data_selector: emailid
    params: {}
- name: user
  endpoint:
    path: /tspublic/v1/user/
    method: POST
    data_selector: records
- name: group
  endpoint:
    path: /tspublic/v1/group/
    method: GET
    data_selector: records
- name: role
  endpoint:
    path: /tspublic/v1/role/
    method: POST
    data_selector: records
- name: session
  endpoint:
    path: /tspublic/v1/session/
    method: POST
    data_selector: records
- name: metadata
  endpoint:
    path: /tspublic/v1/metadata/
    method: GET
    data_selector: records
- name: user_email
  endpoint:
    path: /tspublic/v1/user/email
    method: PUT
    data_selector: 'null'
    params: {}
- name: add_to_org
  endpoint:
    path: /tspublic/v1/user/addtoorg
    method: POST
    data_selector: 'null'
    params: {}
- name: get_user_details
  endpoint:
    path: /tspublic/v1/user/
    method: GET
    data_selector: 'null'
    params: {}
- name: deactivate_user
  endpoint:
    path: /tspublic/v1/user/inactivate
    method: POST
    data_selector: 'null'
    params: {}
- name: activate_user
  endpoint:
    path: /tspublic/v1/user/activate
    method: POST
    data_selector: 'null'
    params: {}
- name: invalidate_user_session
  endpoint:
    path: /tspublic/v1/user/session/invalidate
    method: POST
    data_selector: 'null'
    params: {}
- name: delete_user
  endpoint:
    path: /tspublic/v1/user/{userid}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: list_users_groups
  endpoint:
    path: /tspublic/v1/user/list
    method: GET
    data_selector: 'null'
    params: {}
- name: security_share
  endpoint:
    path: /tspublic/v1/security/share
    method: POST
- name: security_shareviz
  endpoint:
    path: /tspublic/v1/security/shareviz
    method: POST
- name: security_metadata_permissions
  endpoint:
    path: /tspublic/v1/security/metadata/permissions
    method: GET
- name: security_metadata_id_permissions
  endpoint:
    path: /tspublic/v1/security/metadata/{id}/permissions
    method: GET
- name: security_effectivepermissionbulk
  endpoint:
    path: /tspublic/v1/security/effectivepermissionbulk
    method: GET
- name: logs_topics
  endpoint:
    path: /tspublic/v1/logs/topics/{topic}
    method: GET
- name: materialization_refreshview
  endpoint:
    path: /tspublic/v1/materialization/refreshview/{id}
    method: POST
- name: database_tables
  endpoint:
    path: /tspublic/v1/database/tables
    method: GET
- name: database_schemas
  endpoint:
    path: /tspublic/v1/database/schemas
    method: GET
- name: database_databases
  endpoint:
    path: /tspublic/v1/database/databases
    method: GET
- name: database_getTableDetail
  endpoint:
    path: /tspublic/v1/database/getTableDetail
    method: GET
- name: database_createtable
  endpoint:
    path: /tspublic/v1/database/createtable
    method: POST
- name: database_run
  endpoint:
    path: /tspublic/v1/database/run
    method: POST
- name: update_password
  endpoint:
    path: /callosum/v1/tspublic/v1/user/updatepassword
    method: POST
    data_selector: ''
    params: {}
- name: reset_password
  endpoint:
    path: /callosum/v1/tspublic/v1/user/resetpassword
    method: POST
    data_selector: ''
    params: {}
- name: update_preference
  endpoint:
    path: /callosum/v1/tspublic/v1/user/updatepreference
    method: POST
    data_selector: ''
    params: {}
- name: transfer_ownership
  endpoint:
    path: /callosum/v1/tspublic/v1/user/transfer/ownership
    method: POST
    data_selector: ''
    params: {}
- name: synchronize_principals
  endpoint:
    path: /callosum/v1/tspublic/v1/user/sync
    method: POST
    data_selector: ''
    params: {}
- name: org
  endpoint:
    path: /tspublic/v1/org/
    method: POST
    data_selector: org
    params: {}
- name: org
  endpoint:
    path: /tspublic/v1/org/
    method: GET
    data_selector: ''
    params: {}
- name: org_search
  endpoint:
    path: /tspublic/v1/org/search
    method: POST
    data_selector: ''
    params: {}
- name: sync_user
  endpoint:
    path: /callosum/v1/tspublic/v1/user/sync
    method: POST
    data_selector: response
    params: {}
- name: assign_user_to_groups
  endpoint:
    path: /tspublic/v1/user/{userid}/groups
    method: POST
    data_selector: response
    params: {}
- name: get_user_groups
  endpoint:
    path: /tspublic/v1/user/{userid}/groups
    method: GET
    data_selector: response
    params: {}
- name: update_user_groups
  endpoint:
    path: /tspublic/v1/user/{userid}/groups
    method: PUT
    data_selector: response
    params: {}
- name: remove_user_from_groups
  endpoint:
    path: /tspublic/v1/user/{userid}/groups
    method: DELETE
    data_selector: response
    params: {}
- name: user_group
  endpoint:
    path: /user/group
    method: GET
    data_selector: groups
    params: {}
- name: create_user
  endpoint:
    path: /tspublic/v1/user/
    method: POST
    data_selector: userContent
    params: {}
- name: update_user
  endpoint:
    path: /tspublic/v1/user/{userid}
    method: PUT
    data_selector: content
    params: {}
- name: modify_user_email
  endpoint:
    path: /tspublic/v1/user/email
    method: PUT
    data_selector: ''
    params: {}
- name: create_user_group
  endpoint:
    path: /tspublic/v1/group/
    method: POST
    data_selector: ''
    params: {}
- name: get_user_group
  endpoint:
    path: /tspublic/v1/group/
    method: GET
    data_selector: ''
    params: {}
- name: update_user_group
  endpoint:
    path: /tspublic/v1/group/{groupid}
    method: PUT
    data_selector: ''
    params: {}
- name: add_privilege
  endpoint:
    path: /tspublic/v1/group/addprivilege
    method: POST
    data_selector: ''
    params: {}
- name: remove_privilege
  endpoint:
    path: /tspublic/v1/group/removeprivilege
    method: POST
    data_selector: ''
    params: {}
- name: user_email
  endpoint:
    path: /tspublic/v1/user/email
    method: PUT
    data_selector: none
    params: {}
- name: add_to_org
  endpoint:
    path: /tspublic/v1/user/addtoorg
    method: POST
    data_selector: none
    params:
      orgScope: ALL
- name: get_user_details
  endpoint:
    path: /tspublic/v1/user/
    method: GET
    data_selector: none
    params: {}
- name: deactivate_user
  endpoint:
    path: /tspublic/v1/user/inactivate
    method: POST
    data_selector: none
    params: {}
- name: activate_user
  endpoint:
    path: /tspublic/v1/user/activate
    method: POST
    data_selector: none
    params: {}
- name: invalidate_user_session
  endpoint:
    path: /tspublic/v1/user/session/invalidate
    method: POST
    data_selector: none
    params: {}
- name: delete_user
  endpoint:
    path: /tspublic/v1/user/{userid}
    method: DELETE
    data_selector: none
    params: {}
- name: get_user_list
  endpoint:
    path: /tspublic/v1/user/list
    method: GET
    data_selector: none
    params: {}
- name: remove_privilege
  endpoint:
    path: /callosum/v1/tspublic/v1/group/removeprivilege
    method: POST
    data_selector: ''
    params: {}
- name: add_user_to_group
  endpoint:
    path: /tspublic/v1/group/{groupid}/user/{userid}
    method: POST
    data_selector: ''
    params: {}
- name: list_users_in_group
  endpoint:
    path: /tspublic/v1/group/listuser/{groupid}
    method: GET
    data_selector: ''
    params: {}
- name: add_users_to_group
  endpoint:
    path: /tspublic/v1/group/{groupid}/users
    method: POST
    data_selector: ''
    params: {}
- name: update_user_data
  endpoint:
    path: /tspublic/v1/group/{groupid}/users
    method: PUT
    data_selector: ''
    params: {}
- name: get_users_in_group
  endpoint:
    path: /tspublic/v1/group/{groupid}/users
    method: GET
    data_selector: ''
    params: {}
- name: remove_users_from_group
  endpoint:
    path: /tspublic/v1/group/{groupid}/users
    method: DELETE
    data_selector: ''
    params: {}
- name: add_memberships
  endpoint:
    path: /tspublic/v1/group/addmemberships
    method: POST
    data_selector: ''
    params: {}
- name: assign_groups
  endpoint:
    path: /tspublic/v1/group/{groupid}/groups
    method: POST
    data_selector: ''
    params: {}
- name: update_subgroups
  endpoint:
    path: /tspublic/v1/group/{groupid}/groups
    method: PUT
    data_selector: ''
    params: {}
- name: update_password
  endpoint:
    path: /callosum/v1/tspublic/v1/user/updatepassword
    method: POST
    data_selector: Response Code
    params: {}
- name: reset_password
  endpoint:
    path: /callosum/v1/tspublic/v1/user/resetpassword
    method: POST
    data_selector: Response Code
    params: {}
- name: update_preference
  endpoint:
    path: /callosum/v1/tspublic/v1/user/updatepreference
    method: POST
    data_selector: Response Code
    params: {}
- name: transfer_ownership
  endpoint:
    path: /callosum/v1/tspublic/v1/user/transfer/ownership
    method: POST
    data_selector: Response Code
    params: {}
- name: synchronize_principals
  endpoint:
    path: /callosum/v1/tspublic/v1/user/sync
    method: POST
    data_selector: Response Code
    params: {}
- name: sync_user
  endpoint:
    path: /callosum/v1/tspublic/v1/user/sync
    method: POST
    data_selector: response
    params: {}
- name: assign_user_groups
  endpoint:
    path: /tspublic/v1/user/{userid}/groups
    method: POST
    data_selector: response
    params: {}
- name: get_user_groups
  endpoint:
    path: /tspublic/v1/user/{userid}/groups
    method: GET
    data_selector: response
    params: {}
- name: update_user_groups
  endpoint:
    path: /tspublic/v1/user/{userid}/groups
    method: PUT
    data_selector: response
    params: {}
- name: remove_user_groups
  endpoint:
    path: /tspublic/v1/user/{userid}/groups
    method: DELETE
    data_selector: response
    params: {}
- name: group_subgroups
  endpoint:
    path: /callosum/v1/tspublic/v1/group/{groupid}/groups
    method: GET
    data_selector: subgroups
- name: remove_subgroup
  endpoint:
    path: /callosum/v1/tspublic/v1/group/{groupid}/groups
    method: DELETE
    data_selector: response
    params:
      principalids: JSON array of subgroup GUIDs
      groupid: GUID of the group
- name: remove_users
  endpoint:
    path: /callosum/v1/group/removememberships
    method: POST
    data_selector: response
    params:
      userids: JSON array of user GUIDs
      groupids: JSON array of group GUIDs
- name: delete_user_group
  endpoint:
    path: /tspublic/v1/group/{groupid}
    method: DELETE
    data_selector: response
- name: user_group
  endpoint:
    path: /api/group
    method: POST
- name: create_role
  endpoint:
    path: /tspublic/v1/role
    method: POST
- name: edit_role
  endpoint:
    path: /tspublic/v1/role/{role_identifier}
    method: PUT
- name: search_role
  endpoint:
    path: /tspublic/v1/role/search
    method: POST
- name: delete_role
  endpoint:
    path: /tspublic/v1/role/{role_identifier}
    method: DELETE
- name: role
  endpoint:
    path: /tspublic/v1/role
    method: POST
- name: role_search
  endpoint:
    path: /tspublic/v1/role/search
    method: POST
- name: role_update
  endpoint:
    path: /tspublic/v1/role/{role_identifier}
    method: PUT
- name: role_delete
  endpoint:
    path: /tspublic/v1/role/{role_identifier}
    method: DELETE
- name: create_user_group
  endpoint:
    path: /tspublic/v1/group/
    method: POST
    data_selector: userGroupContent
    params: {}
- name: get_user_group
  endpoint:
    path: /tspublic/v1/group/
    method: GET
    data_selector: userGroupContent
    params: {}
- name: update_user_group
  endpoint:
    path: /tspublic/v1/group/{groupid}
    method: PUT
    data_selector: userGroupContent
    params: {}
- name: add_privilege
  endpoint:
    path: /tspublic/v1/group/addprivilege
    method: POST
    data_selector: privileges
    params: {}
- name: remove_privilege
  endpoint:
    path: /tspublic/v1/group/removeprivilege
    method: POST
    data_selector: privileges
    params: {}
- name: session
  endpoint:
    path: /session
    method: GET
- name: session_login
  endpoint:
    path: /tspublic/v1/session/login
    method: POST
    data_selector: ''
    params: {}
- name: session_auth_token
  endpoint:
    path: /tspublic/v1/session/auth/token
    method: POST
    data_selector: ''
    params: {}
- name: remove_privilege
  endpoint:
    path: /callosum/v1/tspublic/v1/group/removeprivilege
    method: POST
    data_selector: null
    params: {}
- name: add_user_to_group
  endpoint:
    path: /tspublic/v1/group/{groupid}/user/{userid}
    method: POST
    data_selector: null
    params: {}
- name: list_users_in_group
  endpoint:
    path: /tspublic/v1/group/listuser/{groupid}
    method: GET
    data_selector: null
    params: {}
- name: add_users_to_group
  endpoint:
    path: /tspublic/v1/group/{groupid}/users
    method: POST
    data_selector: null
    params: {}
- name: update_users_in_group
  endpoint:
    path: /tspublic/v1/group/{groupid}/users
    method: PUT
    data_selector: null
    params: {}
- name: get_users_in_group
  endpoint:
    path: /tspublic/v1/group/{groupid}/users
    method: GET
    data_selector: null
    params: {}
- name: remove_users_from_group
  endpoint:
    path: /tspublic/v1/group/{groupid}/users
    method: DELETE
    data_selector: null
    params: {}
- name: add_memberships
  endpoint:
    path: /tspublic/v1/group/addmemberships
    method: POST
    data_selector: null
    params: {}
- name: assign_groups
  endpoint:
    path: /tspublic/v1/group/{groupid}/groups
    method: POST
    data_selector: null
    params: {}
- name: update_subgroups
  endpoint:
    path: /tspublic/v1/group/{groupid}/groups
    method: PUT
    data_selector: null
    params: {}
- name: session_login_token
  endpoint:
    path: /tspublic/v1/session/login/token
    method: POST
    data_selector: response
    params: {}
- name: session_info
  endpoint:
    path: /tspublic/v1/session/info
    method: GET
    data_selector: response
    params: {}
- name: session_logout
  endpoint:
    path: /tspublic/v1/session/logout
    method: POST
    data_selector: response
    params: {}
- name: session_orgs
  endpoint:
    path: /tspublic/v1/session/orgs
    method: GET
    data_selector: response
    params:
      batchsize: '-1'
      offset: '-1'
- name: get_orgs_for_user
  endpoint:
    path: /callosum/v1/tspublic/v1/session/orgs/users/{userid}
    method: GET
    data_selector: orgs
    params:
      orgScope: ALL
- name: set_home_liveboard
  endpoint:
    path: /callosum/v1/tspublic/v1/session/homepinboard
    method: POST
    data_selector: ''
    params:
      id: ''
      userid: ''
- name: get_home_liveboard
  endpoint:
    path: /callosum/v1/tspublic/v1/session/homepinboard
    method: GET
    data_selector: ''
    params: {}
- name: remove_home_liveboard
  endpoint:
    path: /callosum/v1/tspublic/v1/session/homepinboard
    method: DELETE
    data_selector: ''
    params: {}
- name: subgroups
  endpoint:
    path: /callosum/v1/tspublic/v1/group/{groupid}/groups
    method: GET
    data_selector: subgroups
- name: remove_subgroups
  endpoint:
    path: /callosum/v1/tspublic/v1/group/{groupid}/groups
    method: DELETE
    data_selector: remove_subgroups
- name: remove_memberships
  endpoint:
    path: /callosum/v1/group/removememberships
    method: POST
    data_selector: remove_memberships
- name: delete_user_from_group
  endpoint:
    path: /callosum/v1/tspublic/v1/group/{groupid}/user/{userid}
    method: DELETE
    data_selector: delete_user
- name: delete_user_group
  endpoint:
    path: /callosum/v1/tspublic/v1/group/{groupid}
    method: DELETE
    data_selector: delete_group
- name: add_role_to_group
  endpoint:
    path: /callosum/v1/tspublic/v1/group/addrole
    method: POST
    data_selector: add_role
- name: remove_role_from_group
  endpoint:
    path: /callosum/v1/tspublic/v1/group/removerole
    method: POST
    data_selector: remove_role
- name: create_role
  endpoint:
    path: /api/rest/2.0/roles/create
    method: POST
- name: edit_role
  endpoint:
    path: /tspublic/v1/role/{role_identifier}
    method: PUT
- name: search_role
  endpoint:
    path: /tspublic/v1/role/search
    method: POST
- name: delete_role
  endpoint:
    path: /tspublic/v1/role/{role_identifier}
    method: DELETE
- name: create_connection
  endpoint:
    path: /tspublic/v1/connection/create
    method: POST
- name: update_connection
  endpoint:
    path: /tspublic/v1/connection/update
    method: POST
- name: list_connections
  endpoint:
    path: /tspublic/v1/connection/list
    method: GET
- name: fetch_connection
  endpoint:
    path: /tspublic/v1/connection/fetchConnection
    method: POST
- name: fetch_live_columns
  endpoint:
    path: /tspublic/v1/connection/fetchLiveColumns
    method: POST
- name: export_connection
  endpoint:
    path: /tspublic/v1/connection/export
    method: GET
- name: delete_connection
  endpoint:
    path: /tspublic/v1/connection/delete
    method: POST
- name: create_connection
  endpoint:
    path: /tspublic/v1/connection/create
    method: POST
- name: update_connection
  endpoint:
    path: /tspublic/v1/connection/update
    method: POST
- name: role
  endpoint:
    path: /callosum/v1/tspublic/v1/role
    method: POST
    data_selector: data
    params: {}
- name: search_role
  endpoint:
    path: /callosum/v1/tspublic/v1/role/search
    method: POST
    data_selector: data
    params: {}
- name: edit_role
  endpoint:
    path: /tspublic/v1/role/{role_identifier}
    method: PUT
    data_selector: data
    params: {}
- name: delete_role
  endpoint:
    path: /tspublic/v1/role/{role_identifier}
    method: DELETE
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /session
    method: POST
- name: connection_types
  endpoint:
    path: /tspublic/v1/connection/types
    method: GET
    data_selector: data
    params: {}
- name: live_query_connections
  endpoint:
    path: /tspublic/v1/connection/list
    method: GET
    data_selector: headers
    params: {}
- name: fetch_connection
  endpoint:
    path: /tspublic/v1/connection/fetchConnection
    method: POST
    data_selector: ''
    params:
      id: GUID_of_the_connection
      includeColumns: 'false'
- name: fetchLiveColumns
  endpoint:
    path: /tspublic/v1/connection/fetchLiveColumns
    method: POST
    params:
      connection_id: String
      tables: String
      config: String
      authentication_type: String
- name: session_login
  endpoint:
    path: /tspublic/v1/session/login
    method: POST
    data_selector: null
    params:
      username: ''
      password: ''
      rememberme: 'false'
- name: session_auth_token
  endpoint:
    path: /tspublic/v1/session/auth/token
    method: POST
    data_selector: null
    params:
      secret_key: ''
      username: ''
      access_level: FULL
      autocreate: 'false'
      groups: null
- name: export_connection
  endpoint:
    path: /callosum/v1/tspublic/v1/connection/export
    method: GET
    data_selector: Response body
    params:
      id: String
- name: delete_connection
  endpoint:
    path: /callosum/v1/tspublic/v1/connection/delete
    method: POST
    data_selector: Response code
    params:
      ids: Array of Strings
- name: session_login_token
  endpoint:
    path: /tspublic/v1/session/login/token
    method: POST
    data_selector: response
    params:
      username: string
      auth_token: string
      redirect_url: string
      no_url_redirection: boolean
- name: session_info
  endpoint:
    path: /tspublic/v1/session/info
    method: GET
    data_selector: response
    params: {}
- name: session_logout
  endpoint:
    path: /tspublic/v1/session/logout
    method: POST
    data_selector: response
    params: {}
- name: session_orgs
  endpoint:
    path: /tspublic/v1/session/orgs
    method: GET
    data_selector: response
    params:
      batchsize: integer
      offset: integer
- name: assign_tag
  endpoint:
    path: /tspublic/v1/metadata/assigntag
    method: POST
- name: unassign_tag
  endpoint:
    path: /tspublic/v1/metadata/unassigntag
    method: POST
- name: metadata_details
  endpoint:
    path: /tspublic/v1/metadata/details
    method: GET
- name: metadata_list
  endpoint:
    path: /tspublic/v1/metadata/list
    method: GET
- name: metadata_list_as
  endpoint:
    path: /tspublic/v1/metadata/listas
    method: GET
- name: metadata_object_headers
  endpoint:
    path: /tspublic/v1/metadata/listobjectheaders
    method: GET
- name: visualization_headers
  endpoint:
    path: /tspublic/v1/metadata/listvizheaders
    method: GET
- name: mark_unmark_favorite
  endpoint:
    path: /tspublic/v1/metadata/markunmarkfavoritefor
    method: POST
- name: delete_metadata
  endpoint:
    path: /tspublic/v1/metadata/delete
    method: POST
- name: getOrgsForUser
  endpoint:
    path: /tspublic/v1/session/orgs/users/{userid}
    method: GET
    data_selector: orgs
    params: {}
- name: setHomeLiveboard
  endpoint:
    path: /tspublic/v1/session/homepinboard
    method: POST
    data_selector: ''
    params: {}
- name: getHomeLiveboard
  endpoint:
    path: /tspublic/v1/session/homepinboard
    method: GET
    data_selector: ''
    params: {}
- name: removeHomeLiveboard
  endpoint:
    path: /tspublic/v1/session/homepinboard
    method: DELETE
    data_selector: ''
    params: {}
- name: assign_tag
  endpoint:
    path: /tspublic/v1/metadata/assigntag
    method: POST
- name: unassign_tag
  endpoint:
    path: /tspublic/v1/metadata/unassigntag
    method: POST
- name: get_metadata_details
  endpoint:
    path: /tspublic/v1/metadata/details
    method: GET
- name: metadata_list
  endpoint:
    path: /callosum/v1/tspublic/v1/metadata/list
    method: GET
    params:
      type: PINBOARD_ANSWER_BOOK
      category: ALL
      sort: DEFAULT
      offset: -1
      showhidden: false
- name: create_connection
  endpoint:
    path: /tspublic/v1/connection/create
    method: POST
- name: update_connection
  endpoint:
    path: /tspublic/v1/connection/update
    method: POST
- name: list_connections
  endpoint:
    path: /tspublic/v1/connection/list
    method: GET
- name: fetch_connection_metadata
  endpoint:
    path: /tspublic/v1/connection/fetchConnection
    method: POST
- name: fetch_live_columns
  endpoint:
    path: /tspublic/v1/connection/fetchLiveColumns
    method: POST
- name: export_connection_map
  endpoint:
    path: /tspublic/v1/connection/export
    method: GET
- name: delete_connection
  endpoint:
    path: /tspublic/v1/connection/delete
    method: POST
- name: metadata_listas
  endpoint:
    path: /tspublic/v1/metadata/listas
    method: GET
    data_selector: headers
    params:
      offset: '-1'
      pattern: '%'
      minimumaccesslevel: READ_ONLY
      type: USER
- name: object_headers
  endpoint:
    path: /tspublic/v1/metadata/listobjectheaders
    method: GET
- name: create_connection
  endpoint:
    path: /tspublic/v1/connection/create
    method: POST
    data_selector: header
    params: {}
- name: update_connection
  endpoint:
    path: /tspublic/v1/connection/update
    method: POST
    data_selector: header
    params: {}
- name: metadata_object_headers
  endpoint:
    path: /callosum/v1/tspublic/v1/metadata/listobjectheaders
    method: GET
    data_selector: headers
    params:
      type: LOGICAL_TABLE
      subtypes: '[''WORKSHEET'']'
      category: ALL
      sort: CREATED
      offset: '-1'
- name: visualization_headers
  endpoint:
    path: /callosum/v1/tspublic/v1/metadata/listvizheaders
    method: GET
    data_selector: headers
    params:
      id: String
- name: connection_types
  endpoint:
    path: /tspublic/v1/connection/types
    method: GET
- name: live_query_connections
  endpoint:
    path: /tspublic/v1/connection/list
    method: GET
- name: fetch_connection
  endpoint:
    path: /tspublic/v1/connection/fetchConnection
    method: POST
- name: set_favorite
  endpoint:
    path: /tspublic/v1/metadata/markunmarkfavoritefor
    method: POST
    data_selector: ''
    params: {}
- name: fetchLiveColumns
  endpoint:
    path: /callosum/v1/tspublic/v1/connection/fetchLiveColumns
    method: POST
    params: {}
- name: remove_objects_from_favorites
  endpoint:
    path: /tspublic/v1/metadata/markunmarkfavoritefor
    method: DELETE
    data_selector: response
    params:
      ids: String
      userid: String
- name: delete_metadata_objects
  endpoint:
    path: /tspublic/v1/metadata/delete
    method: POST
    data_selector: response
    params:
      type: String
      id: String
      includedisabled: Boolean
- name: export_connection
  endpoint:
    path: /callosum/v1/tspublic/v1/connection/export
    method: GET
    params:
      id: String
- name: delete_connection
  endpoint:
    path: /callosum/v1/tspublic/v1/connection/delete
    method: POST
    params:
      ids: Array of Strings
- name: assign_tag
  endpoint:
    path: /tspublic/v1/metadata/assigntag
    method: POST
- name: unassign_tag
  endpoint:
    path: /tspublic/v1/metadata/unassigntag
    method: POST
- name: metadata_details
  endpoint:
    path: /tspublic/v1/metadata/details
    method: GET
- name: metadata_list
  endpoint:
    path: /tspublic/v1/metadata/list
    method: GET
- name: metadata_list_as
  endpoint:
    path: /tspublic/v1/metadata/listas
    method: GET
- name: metadata_object_headers
  endpoint:
    path: /tspublic/v1/metadata/listobjectheaders
    method: GET
- name: visualization_headers
  endpoint:
    path: /tspublic/v1/metadata/listvizheaders
    method: GET
- name: mark_unmark_favorite
  endpoint:
    path: /tspublic/v1/metadata/markunmarkfavoritefor
    method: POST
- name: delete_metadata
  endpoint:
    path: /tspublic/v1/metadata/delete
    method: POST
- name: custom_action_associations
  endpoint:
    path: /callosum/v1/tspublic/v1/admin/embed/actions/{actionid}/associations
    method: GET
- name: embed_actions
  endpoint:
    path: /callosum/v1/tspublic/v1/admin/embed/actions
    method: POST
- name: custom_action_details
  endpoint:
    path: /callosum/v1/tspublic/v1/admin/embed/actions/{actionid}
    method: GET
- name: assign_tag
  endpoint:
    path: /tspublic/v1/metadata/assigntag
    method: POST
    data_selector: response
    params: {}
- name: unassign_tag
  endpoint:
    path: /tspublic/v1/metadata/unassigntag
    method: POST
    data_selector: response
    params: {}
- name: get_metadata_details
  endpoint:
    path: /tspublic/v1/metadata/details
    method: GET
    data_selector: response
    params: {}
- name: delete_custom_action_associations
  endpoint:
    path: /callosum/v1/tspublic/v1/admin/embed/actions/{actionid}/associations
    method: DELETE
- name: metadata_list
  endpoint:
    path: /callosum/v1/tspublic/v1/metadata/list
    method: GET
    data_selector: metadata
    params:
      type: PINBOARD_ANSWER_BOOK
      category: ALL
      sort: DEFAULT
      offset: -1
      showhidden: false
- name: import_tml
  endpoint:
    path: /tspublic/v1/metadata/tml/import
    method: POST
- name: export_tml
  endpoint:
    path: /tspublic/v1/metadata/tml/export
    method: POST
- name: export_batch_tml
  endpoint:
    path: /tspublic/v1/metadata/tml/export/batch
    method: POST
- name: metadata_listas
  endpoint:
    path: /tspublic/v1/metadata/listas
    method: GET
    data_selector: headers
    params:
      offset: -1
      pattern: '%'
      minimumaccesslevel: READ_ONLY
      type: USER
- name: object_headers
  endpoint:
    path: /tspublic/v1/metadata/listobjectheaders
    method: GET
    data_selector: headers
- name: visualization_headers
  endpoint:
    path: /callosum/v1/tspublic/v1/metadata/listvizheaders
    method: GET
    data_selector: visualizations
    params: {}
- name: object_headers
  endpoint:
    path: /callosum/v1/tspublic/v1/metadata/listobjectheaders
    method: GET
    data_selector: objects
    params:
      type: LOGICAL_TABLE
      subtypes: '[''WORKSHEET'']'
      category: ALL
      sort: CREATED
      offset: '-1'
- name: import
  endpoint:
    path: /import
    method: POST
    data_selector: object
    params:
      import_policy: PARTIAL
      force_create: 'false'
      all_orgs_override: 'false'
      skip_cdw_validation_for_tables: 'false'
      skip_diff_check: 'false'
- name: export
  endpoint:
    path: /export
    method: POST
    data_selector: object
    params:
      formattype: YAML
      export_associated: 'false'
      export_fqn: 'false'
      export_schema_version: v1
      export_dependent: 'false'
      export_connection_as_dependent: 'false'
      all_orgs_override: 'false'
- name: export_batch
  endpoint:
    path: /export/batch
    method: POST
    data_selector: data.result
    params:
      batch_size: 20
      batch_offset: 0
      export_dependent: 'false'
      edoc_format: JSON
      all_orgs_override: 'false'
- name: mark_unmark_favorite
  endpoint:
    path: /tspublic/v1/metadata/markunmarkfavoritefor
    method: POST
    data_selector: null
    params: {}
- name: dependency
  endpoint:
    path: /tspublic/v1/dependency
    method: GET
    data_selector: dependencies
    params: {}
- name: mark_unmark_favorite
  endpoint:
    path: /callosum/v1/tspublic/v1/metadata/markunmarkfavoritefor
    method: DELETE
    data_selector: null
    params: {}
- name: delete_metadata
  endpoint:
    path: /callosum/v1/tspublic/v1/metadata/delete
    method: POST
    data_selector: null
    params: {}
- name: list_dependents
  endpoint:
    path: /tspublic/v1/dependency/listdependents
    method: POST
    data_selector: records
    params: {}
- name: logical_column
  endpoint:
    path: /tspublic/v1/dependency/logicalcolumn
    method: GET
    data_selector: records
    params: {}
- name: logical_table
  endpoint:
    path: /tspublic/v1/dependency/logicaltable
    method: GET
    data_selector: records
    params: {}
- name: logical_relationship
  endpoint:
    path: /tspublic/v1/dependency/logicalrelationship
    method: GET
    data_selector: records
    params: {}
- name: physical_column
  endpoint:
    path: /tspublic/v1/dependency/physicalcolumn
    method: GET
    data_selector: records
    params: {}
- name: physical_table
  endpoint:
    path: /tspublic/v1/dependency/physicaltable
    method: GET
    data_selector: records
    params: {}
- name: pinboard
  endpoint:
    path: /tspublic/v1/dependency/pinboard
    method: GET
    data_selector: records
    params: {}
- name: list_incomplete
  endpoint:
    path: /tspublic/v1/dependency/listincomplete
    method: GET
    data_selector: records
    params: {}
- name: dependent_objects_physical_column
  endpoint:
    path: /tspublic/v1/dependency/physicalcolumn
    method: GET
    data_selector: records
    params:
      id: []
- name: dependent_objects_physical_table
  endpoint:
    path: /tspublic/v1/dependency/physicaltable
    method: GET
    data_selector: records
    params:
      id: []
- name: dependent_objects_liveboard
  endpoint:
    path: /tspublic/v1/dependency/pinboard
    method: GET
    data_selector: records
    params:
      id: []
- name: incomplete_objects
  endpoint:
    path: /tspublic/v1/dependency/listincomplete
    method: GET
    data_selector: records
- name: custom_action_associations
  endpoint:
    path: /callosum/v1/tspublic/v1/admin/embed/actions/{actionid}/associations
    method: GET
- name: embed_actions
  endpoint:
    path: /callosum/v1/tspublic/v1/admin/embed/actions
    method: POST
- name: update_config
  endpoint:
    path: /callosum/v1/tspublic/v1/admin/configinfo/update
    method: POST
- name: searchdata
  endpoint:
    path: /tspublic/v1/searchdata
    method: POST
- name: delete_custom_action_associations
  endpoint:
    path: /tspublic/v1/admin/embed/actions/{actionid}/associations
    method: DELETE
    params:
      actionId: String
      actionassociation: String
- name: import_tml
  endpoint:
    path: /tspublic/v1/metadata/tml/import
    method: POST
- name: export_tml
  endpoint:
    path: /tspublic/v1/metadata/tml/export
    method: POST
- name: export_batch_tml
  endpoint:
    path: /tspublic/v1/metadata/tml/export/batch
    method: POST
- name: search_data
  endpoint:
    path: /callosum/v1/tspublic/v1/searchdata
    method: POST
    data_selector: data
    params:
      query_string: ''
      data_source_guid: ''
      batchsize: -1
      pagenumber: -1
      offset: -1
      formattype: COMPACT
- name: pinboard_data
  endpoint:
    path: /tspublic/v1/pinboarddata
    method: POST
    data_selector: data
    params:
      id: liveboard_id
      vizid: optional_visualization_ids
      transient_pinboard_content: transient_content
      batchsize: -1
      pagenumber: -1
      offset: -1
      formattype: COMPACT
- name: import_tml
  endpoint:
    path: /tspublic/v1/metadata/tml/import
    method: POST
    data_selector: object
    params:
      import_policy: PARTIAL
      force_create: 'false'
      all_orgs_override: 'false'
      skip_cdw_validation_for_tables: 'false'
      skip_diff_check: 'false'
- name: export_tml
  endpoint:
    path: /tspublic/v1/metadata/tml/export
    method: POST
    data_selector: object
    params:
      formattype: YAML
      export_associated: 'false'
      export_fqn: 'false'
      export_schema_version: v1
      export_dependent: 'false'
      export_connection_as_dependent: 'false'
      all_orgs_override: 'false'
- name: export_batch_tml
  endpoint:
    path: /tspublic/v1/metadata/tml/export/batch
    method: POST
    data_selector: data.result
    params:
      batch_size: 20
      batch_offset: 0
      export_dependent: 'false'
      edoc_format: JSON
      all_orgs_override: 'false'
- name: pinboarddata
  endpoint:
    path: /callosum/v1/tspublic/v1/pinboarddata
    method: POST
    data_selector: data
    params:
      formattype: COMPACT
- name: dependency
  endpoint:
    path: /tspublic/v1/dependency
    method: GET
    data_selector: dependencies
    params: {}
- name: liveboard_export
  endpoint:
    path: /tspublic/v1/export/pinboard/pdf
    method: POST
    data_selector: response
    params: {}
- name: export_pinboard_pdf
  endpoint:
    path: /callosum/v1/tspublic/v1/export/pinboard/pdf
    method: POST
    params:
      layout_type: PINBOARD
      orientation: LANDSCAPE
      truncate_tables: 'false'
      include_logo: 'true'
      include_page_number: 'true'
      include_filter_page: 'true'
      include_cover_page: 'true'
- name: listdependents
  endpoint:
    path: /tspublic/v1/dependency/listdependents
    method: POST
    data_selector: dependent_objects
    params: {}
- name: logicalcolumn
  endpoint:
    path: /tspublic/v1/dependency/logicalcolumn
    method: GET
    data_selector: dependent_objects
    params: {}
- name: logicaltable
  endpoint:
    path: /tspublic/v1/dependency/logicaltable
    method: GET
    data_selector: dependent_objects
    params: {}
- name: logicalrelationship
  endpoint:
    path: /tspublic/v1/dependency/logicalrelationship
    method: GET
    data_selector: dependent_objects
    params: {}
- name: physicalcolumn
  endpoint:
    path: /tspublic/v1/dependency/physicalcolumn
    method: GET
    data_selector: dependent_objects
    params: {}
- name: physicaltable
  endpoint:
    path: /tspublic/v1/dependency/physicaltable
    method: GET
    data_selector: dependent_objects
    params: {}
- name: pinboard
  endpoint:
    path: /tspublic/v1/dependency/pinboard
    method: GET
    data_selector: dependent_objects
    params: {}
- name: listincomplete
  endpoint:
    path: /tspublic/v1/dependency/listincomplete
    method: GET
    data_selector: dependent_objects
    params: {}
- name: share_objects
  endpoint:
    path: /tspublic/v1/security/share
    method: POST
    data_selector: ''
- name: share_visualization
  endpoint:
    path: /tspublic/v1/security/shareviz
    method: POST
    data_selector: ''
- name: get_object_permission_details
  endpoint:
    path: /tspublic/v1/security/metadata/permissions
    method: GET
    data_selector: ''
- name: get_permission_details_for_object_id
  endpoint:
    path: /tspublic/v1/security/metadata/{id}/permissions
    method: GET
    data_selector: ''
- name: get_permission_details_for_multiple_object_types
  endpoint:
    path: /tspublic/v1/security/effectivepermissionbulk
    method: GET
    data_selector: ''
- name: dependent_objects_physical_columns
  endpoint:
    path: /tspublic/v1/dependency/physicalcolumn
    method: GET
    data_selector: dependent_objects
    params:
      id: Array of strings
- name: dependent_objects_physical_tables
  endpoint:
    path: /tspublic/v1/dependency/physicaltable
    method: GET
    data_selector: dependent_objects
    params:
      id: Array of strings
- name: dependent_liveboards
  endpoint:
    path: /tspublic/v1/dependency/pinboard
    method: GET
    data_selector: dependent_objects
    params:
      id: Array of strings
- name: incomplete_objects
  endpoint:
    path: /tspublic/v1/dependency/listincomplete
    method: GET
    data_selector: incomplete_metadata
- name: object_permission_details_multiple
  endpoint:
    path: /tspublic/v1/security/effectivepermissionbulk
    method: POST
- name: object_permission_details_single
  endpoint:
    path: /tspublic/v1/security/metadata/permissions
    method: GET
- name: share_visualization
  endpoint:
    path: /tspublic/v1/security/shareviz
    method: POST
- name: search_data
  endpoint:
    path: /searchdata
    method: POST
    data_selector: data
    params: {}
- name: effective_permission_bulk
  endpoint:
    path: /callosum/v1/tspublic/v1/security/effectivepermissionbulk
    method: POST
    data_selector: permissions
    params:
      idsbytype: '{ "PINBOARD_ANSWER_BOOK": ["d084c256-e284-4fc4-b80c-111cb606449a"],
        "QUESTION_ANSWER_BOOK": ["92f48c07-9c62-4bfa-81ac-55f3049165b4"] }'
      dependentshare: 'true'
- name: search_data
  endpoint:
    path: /callosum/v1/tspublic/v1/searchdata
    method: POST
    data_selector: data
    params:
      query_string: string
      data_source_guid: string
      batchsize: -1
      pagenumber: -1
      offset: -1
      formattype: COMPACT
- name: security_logs
  endpoint:
    path: /callosum/v1/tspublic/v1/logs/topics/security_logs
    method: GET
    data_selector: logs
    params:
      topic: security_logs
- name: audit_logs
  endpoint:
    path: /logs
    method: GET
    data_selector: log
- name: pinboard_data
  endpoint:
    path: /pinboarddata
    method: POST
    data_selector: data
    params:
      id: String
      vizid: Optional String
      transient_pinboard_content: String
      batchsize: Integer
      pagenumber: Integer
      offset: Integer
      formattype: String
- name: refresh_materialized_view
  endpoint:
    path: /callosum/v1/tspublic/v1/materialization/refreshview/{id}
    method: POST
    data_selector: null
    params: {}
- name: pinboarddata
  endpoint:
    path: /callosum/v1/tspublic/v1/pinboarddata
    method: POST
    data_selector: data
    params:
      id: f4533461-caa5-4efa-a189-13815ab86770
      batchsize: '-1'
      pagenumber: '-1'
      offset: '-1'
      formattype: COMPACT
- name: liveboard_export
  endpoint:
    path: /tspublic/v1/export/pinboard/pdf
    method: POST
    data_selector: response
    params: {}
- name: tables
  endpoint:
    path: /tspublic/v1/database/tables
    method: GET
    data_selector: ''
    params:
      database: usage_stats
      schema: falcon_default_schema
- name: schemas
  endpoint:
    path: /tspublic/v1/database/schemas
    method: GET
    data_selector: ''
    params: {}
- name: databases
  endpoint:
    path: /tspublic/v1/database/databases
    method: GET
    data_selector: ''
    params: {}
- name: getTableDetail
  endpoint:
    path: /tspublic/v1/database/getTableDetail
    method: GET
    data_selector: ''
    params: {}
- name: createtable
  endpoint:
    path: /tspublic/v1/database/createtable
    method: POST
    data_selector: ''
    params: {}
- name: run
  endpoint:
    path: /tspublic/v1/database/run
    method: POST
    data_selector: ''
    params: {}
- name: export_pinboard_pdf
  endpoint:
    path: /callosum/v1/tspublic/v1/export/pinboard/pdf
    method: POST
    data_selector: raw pdf file
    params: {}
- name: schemas
  endpoint:
    path: /tspublic/v1/database/schemas
    method: GET
    data_selector: schemas
- name: databases
  endpoint:
    path: /tspublic/v1/database/databases
    method: GET
    data_selector: databases
- name: getTableDetail
  endpoint:
    path: /tspublic/v1/database/getTableDetail
    method: GET
    data_selector: table_details
- name: createTable
  endpoint:
    path: /tspublic/v1/database/createtable/
    method: POST
    data_selector: table_creation
- name: runTQL
  endpoint:
    path: /tspublic/v1/database/run
    method: POST
    data_selector: tql_execution
- name: share
  endpoint:
    path: /tspublic/v1/security/share
    method: POST
- name: shareviz
  endpoint:
    path: /tspublic/v1/security/shareviz
    method: POST
- name: get_object_permission_details_for_specific_object_type
  endpoint:
    path: /tspublic/v1/security/metadata/permissions
    method: GET
- name: get_permission_details_for_specific_object_id
  endpoint:
    path: /tspublic/v1/security/metadata/{id}/permissions
    method: GET
- name: get_object_permission_details_for_multiple_object_types
  endpoint:
    path: /tspublic/v1/security/effectivepermissionbulk
    method: GET
- name: object_permission_details_bulk
  endpoint:
    path: /tspublic/v1/security/effectivepermissionbulk
    method: POST
    data_selector: permissions
    params: {}
- name: share_visualization
  endpoint:
    path: /tspublic/v1/security/shareviz
    method: POST
    data_selector: result
    params: {}
- name: object_permission_details
  endpoint:
    path: /tspublic/v1/security/metadata/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: answer_report
  endpoint:
    path: /api/rest/2.0/report/answer
    method: POST
    data_selector: metadata_identifier
    params: {}
- name: liveboard_report
  endpoint:
    path: /api/rest/2.0/report/liveboard
    method: POST
    data_selector: metadata_identifier
    params: {}
- name: search_data
  endpoint:
    path: /api/rest/2.0/searchdata
    method: POST
    data_selector: query_string
    params: {}
- name: answer_data
  endpoint:
    path: /api/rest/2.0/metadata/answer/data
    method: POST
    data_selector: metadata_identifier
    params: {}
- name: liveboard_data
  endpoint:
    path: /api/rest/2.0/metadata/liveboard/data
    method: POST
    data_selector: metadata_identifier
    params: {}
- name: effective_permission_bulk
  endpoint:
    path: /callosum/v1/tspublic/v1/security/effectivepermissionbulk
    method: POST
    data_selector: object permission details
    params:
      idsbytype: '{"PINBOARD_ANSWER_BOOK":["d084c256-e284-4fc4-b80c-111cb606449a"],"QUESTION_ANSWER_BOOK":["92f48c07-9c62-4bfa-81ac-55f3049165b4"]}'
      dependentshare: 'true'
- name: users_create
  endpoint:
    path: /api/rest/2.0/users/create
    method: POST
    data_selector: '[]'
- name: security_logs
  endpoint:
    path: /callosum/v1/tspublic/v1/logs/topics/security_logs
    method: GET
    data_selector: logs
    params:
      topic: security_logs
- name: audit_logs
  endpoint:
    path: /logs
    method: GET
    data_selector: logs
    params: {}
- name: getCurrentUserInfo
  endpoint:
    path: /api/graphql/2.0
    method: POST
    data_selector: data.getCurrentUserInfo
    params: {}
- name: refresh_materialized_view
  endpoint:
    path: /callosum/v1/tspublic/v1/materialization/refreshview/{id}
    method: POST
    data_selector: ''
    params: {}
- name: tables
  endpoint:
    path: /callosum/v1/tspublic/v1/database/tables
    method: GET
    data_selector: ''
    params:
      database: usage_stats
      schema: falcon_default_schema
- name: schemas
  endpoint:
    path: /tspublic/v1/database/schemas
    method: GET
    data_selector: ''
- name: databases
  endpoint:
    path: /tspublic/v1/database/databases
    method: GET
    data_selector: ''
- name: getTableDetail
  endpoint:
    path: /tspublic/v1/database/getTableDetail
    method: GET
    data_selector: ''
- name: createTable
  endpoint:
    path: /tspublic/v1/database/createtable/
    method: POST
    data_selector: ''
- name: runTQL
  endpoint:
    path: /tspublic/v1/database/run
    method: POST
    data_selector: ''
- name: liveboard_data
  endpoint:
    path: /api/rest/2.0/metadata/liveboard/data
    method: POST
    data_selector: data
    params: {}
- name: answer_data
  endpoint:
    path: /api/rest/2.0/metadata/answer/data
    method: POST
    data_selector: data
    params: {}
- name: search_data
  endpoint:
    path: /api/rest/2.0/searchdata
    method: POST
    data_selector: data
    params: {}
- name: liveboard_report
  endpoint:
    path: /api/rest/2.0/report/liveboard
    method: POST
    data_selector: data
    params: {}
- name: answer_report
  endpoint:
    path: /api/rest/2.0/report/answer
    method: POST
    data_selector: data
    params: {}
- name: users_create
  endpoint:
    path: /api/rest/2.0/users/create
    method: POST
- name: user_search
  endpoint:
    path: /api/rest/2.0/users/search
    method: POST
- name: git_config_create
  endpoint:
    path: /api/rest/2.0/vcs/git/config/create
    method: POST
    data_selector: config
    params:
      repository_url: https://github.com/user/repo.git
      username: ts-git-user
      access_token: '{ACCESS_TOKEN}'
      org_identifier: dev
      branch_names:
      - dev
      - main
      commit_branch_name: dev
      configuration_branch_name: _ts_config
- name: git_config_update
  endpoint:
    path: /api/rest/2.0/vcs/git/config/update
    method: POST
- name: git_config_search
  endpoint:
    path: /api/rest/2.0/vcs/git/config/search
    method: POST
- name: git_config_delete
  endpoint:
    path: /api/rest/2.0/vcs/git/config/delete
    method: POST
- name: current_user_info
  endpoint:
    path: /api/graphql/2.0
    method: POST
    data_selector: getCurrentUserInfo
    params: {}
- name: system
  endpoint:
    path: /system
    method: GET
    data_selector: data
    params: {}
- name: deploy
  endpoint:
    path: /deploy
    method: POST
    data_selector: data
    params: {}
- name: commit
  endpoint:
    path: /commit
    method: POST
    data_selector: data
    params: {}
- name: webhook_notification
  endpoint:
    path: /webhook
    method: POST
- name: metadata_import
  endpoint:
    path: /metadata/tml/import
    method: POST
    data_selector: object
- name: metadata_list
  endpoint:
    path: /metadata/list
    method: GET
    data_selector: objects
- name: metadata_export
  endpoint:
    path: /metadata/tml/export
    method: POST
    data_selector: tml
- name: Git configuration
  endpoint:
    path: /v2.0/git/configuration
    method: POST
- name: connection
  endpoint:
    path: /connections
    method: GET
    data_selector: connections
    params: {}
- name: table
  endpoint:
    path: /tables
    method: GET
    data_selector: tables
    params: {}
- name: model
  endpoint:
    path: /models
    method: GET
    data_selector: models
    params: {}
- name: worksheet
  endpoint:
    path: /worksheets
    method: GET
    data_selector: worksheets
    params: {}
- name: answer
  endpoint:
    path: /answers
    method: GET
    data_selector: answers
    params: {}
- name: liveboard
  endpoint:
    path: /liveboards
    method: GET
    data_selector: liveboards
    params: {}
- name: view
  endpoint:
    path: /views
    method: GET
    data_selector: views
    params: {}
- name: create_git_config
  endpoint:
    path: /api/rest/2.0/vcs/git/config/create
    method: POST
    data_selector: repository_url
    params: {}
- name: update_git_config
  endpoint:
    path: /api/rest/2.0/vcs/git/config/update
    method: POST
    data_selector: repository_url
    params: {}
- name: search_git_config
  endpoint:
    path: /api/rest/2.0/vcs/git/config/search
    method: POST
    data_selector: ''
    params: {}
- name: delete_git_config
  endpoint:
    path: /api/rest/2.0/vcs/git/config/delete
    method: POST
    data_selector: ''
    params: {}
- name: mapping_files
  endpoint:
    path: /system
    method: GET
    data_selector: mapping
    params: {}
- name: deploy
  endpoint:
    path: /deploy
    method: POST
    data_selector: deploy
    params: {}
- name: commit
  endpoint:
    path: /commit
    method: POST
    data_selector: commit
    params: {}
- name: variables
  endpoint:
    path: /api/rest/2.0/template/variables/create
    method: POST
- name: metadata_import
  endpoint:
    path: /metadata/tml/import
    method: POST
    data_selector: object
- name: metadata_list
  endpoint:
    path: /metadata/list
    method: GET
    data_selector: objects
- name: metadata_search
  endpoint:
    path: /metadata/search
    method: GET
    data_selector: objects
- name: metadata_export
  endpoint:
    path: /metadata/tml/export
    method: POST
    data_selector: response
- name: variables_create
  endpoint:
    path: /api/rest/2.0/template/variables/create
    method: POST
- name: variables_update
  endpoint:
    path: /api/rest/2.0/template/variables/update
    method: POST
- name: variable_update_properties
  endpoint:
    path: /api/rest/2.0/template/variables/{identifier}/update
    method: POST
- name: variables_search
  endpoint:
    path: /api/rest/2.0/template/variables/search
    method: POST
- name: variable_delete
  endpoint:
    path: /api/rest/2.0/template/variables/{identifier}/delete
    method: POST
- name: parameterize_metadata
  endpoint:
    path: /metadata/parameterize
    method: POST
- name: connection
  endpoint:
    path: /connections
    method: GET
    data_selector: connection
    params: {}
- name: tables
  endpoint:
    path: /tables
    method: GET
    data_selector: tables
    params: {}
- name: models
  endpoint:
    path: /models
    method: GET
    data_selector: models
    params: {}
- name: views
  endpoint:
    path: /views
    method: GET
    data_selector: views
    params: {}
- name: parameterize_metadata
  endpoint:
    path: /api/rest/2.0/metadata/parameterize
    method: POST
    data_selector: metadata_identifier
    params: {}
- name: unparameterize_metadata
  endpoint:
    path: /api/rest/2.0/metadata/unparameterize
    method: POST
    data_selector: metadata_identifier
    params: {}
- name: publish_metadata
  endpoint:
    path: /api/rest/2.0/security/metadata/publish
    method: POST
- name: variables
  endpoint:
    path: /api/rest/2.0/template/variables/create
    method: POST
- name: publish_metadata
  endpoint:
    path: /api/rest/2.0/security/metadata/publish
    method: POST
    data_selector: metadata
    params: {}
- name: unpublish_metadata
  endpoint:
    path: /api/rest/2.0/security/metadata/unpublish
    method: POST
    data_selector: metadata
    params: {}
- name: create_variable
  endpoint:
    path: /api/rest/2.0/template/variables/create
    method: POST
    data_selector: null
    params: {}
- name: update_variable
  endpoint:
    path: /api/rest/2.0/template/variables/{identifier}/update
    method: POST
    data_selector: null
    params: {}
- name: search_variables
  endpoint:
    path: /api/rest/2.0/template/variables/search
    method: POST
    data_selector: null
    params: {}
- name: delete_variable
  endpoint:
    path: /api/rest/2.0/template/variables/{identifier}/delete
    method: POST
    data_selector: null
    params: {}
- name: parameterize_metadata
  endpoint:
    path: /api/rest/2.0/metadata/parameterize
    method: POST
- name: parameterize_metadata
  endpoint:
    path: /api/rest/2.0/metadata/parameterize
    method: POST
    data_selector: ''
    params: {}
- name: unparameterize_metadata
  endpoint:
    path: /api/rest/2.0/metadata/unparameterize
    method: POST
    data_selector: ''
    params: {}
- name: publish_metadata
  endpoint:
    path: /api/rest/2.0/security/metadata/publish
    method: POST
    data_selector: metadata
    params: {}
- name: prod_template_group
  endpoint:
    path: /prod/template/group
    method: GET
    data_selector: template_objects
    params: {}
- name: standard_data_groups
  endpoint:
    path: /standard/data/groups
    method: GET
    data_selector: tenant_tables
    params: {}
- name: standard_content_groups
  endpoint:
    path: /standard/content/groups
    method: GET
    data_selector: models_answers_liveboards
    params: {}
- name: tenant_content_groups
  endpoint:
    path: /tenant/content/groups
    method: GET
    data_selector: tenant_answers_liveboards
    params: {}
- name: publish_metadata
  endpoint:
    path: /api/rest/2.0/security/metadata/publish
    method: POST
    data_selector: metadata
    params: {}
- name: unpublish_metadata
  endpoint:
    path: /api/rest/2.0/security/metadata/unpublish
    method: POST
    data_selector: metadata
    params: {}
- name: orgs
  endpoint:
    path: /api/rest/2.0/orgs/create
    method: POST
- name: search_orgs
  endpoint:
    path: /api/rest/2.0/orgs/search
    method: GET
- name: update_org
  endpoint:
    path: /api/rest/2.0/orgs/{org_identifier}/update
    method: PUT
- name: delete_org
  endpoint:
    path: /api/rest/2.0/orgs/{org_identifier}/delete
    method: DELETE
- name: org
  endpoint:
    path: /tspublic/v1/org/
    method: POST
    data_selector: Org
    params: {}
- name: get_orgs
  endpoint:
    path: /tspublic/v1/org/search
    method: GET
    data_selector: Orgs
    params: {}
- name: edit_org
  endpoint:
    path: /tspublic/v1/org/
    method: PUT
    data_selector: Org
    params: {}
- name: delete_org
  endpoint:
    path: /tspublic/v1/org/
    method: DELETE
    data_selector: Org
    params: {}
- name: cluster_status
  endpoint:
    path: /api/rest/2.0/system/banner
    method: GET
    data_selector: banner_text
    params: {}
- name: cluster_status_v1
  endpoint:
    path: /tspublic/v1/admin/banner
    method: GET
    data_selector: banner_text
    params: {}
- name: start_inactive_cluster
  endpoint:
    path: /
    method: GET
    params:
      tse: 'true'
      start_cluster: 'true'
- name: create_org
  endpoint:
    path: /api/rest/2.0/orgs/create
    method: POST
- name: search_orgs
  endpoint:
    path: /api/rest/2.0/orgs/search
    method: GET
- name: update_org
  endpoint:
    path: /api/rest/2.0/orgs/{org_identifier}/update
    method: PATCH
- name: delete_org
  endpoint:
    path: /api/rest/2.0/orgs/{org_identifier}/delete
    method: DELETE
- name: pendoIntegration
  endpoint:
    path: /integration/script
    method: POST
    data_selector: script
- name: org
  endpoint:
    path: /tspublic/v1/org/
    method: POST
    data_selector: records
- name: org_search
  endpoint:
    path: /tspublic/v1/org/search
    method: GET
    data_selector: records
- name: org_edit
  endpoint:
    path: /tspublic/v1/org/
    method: PUT
    data_selector: records
- name: org_delete
  endpoint:
    path: /tspublic/v1/org/
    method: DELETE
    data_selector: records
- name: admin_banner
  endpoint:
    path: /callosum/v1/tspublic/v1/admin/banner
    method: GET
    data_selector: banner_text
- name: system_banner
  endpoint:
    path: /api/rest/2.0/system/banner
    method: GET
    data_selector: banner_text
- name: getRelevantQuestions
  endpoint:
    path: /api/rest/2.0/ai/relevant-questions/
    method: GET
- name: getAnswer
  endpoint:
    path: /api/rest/2.0/ai/agent/converse/sse
    method: GET
- name: createLiveboard
  endpoint:
    path: /api/rest/2.0/liveboard
    method: POST
- name: getDataSourceSuggestions
  endpoint:
    path: /api/rest/2.0/data-source-suggestions
    method: GET
- name: start_inactive_cluster
  endpoint:
    path: /
    method: GET
    params:
      tse: 'true'
      start_cluster: 'true'
- name: ThoughtSpot Object
  endpoint:
    path: /?embedApp=true&p&col1={field_name}&op1=EQ&val1={!Account.Id}&OrgID={org_id}#/embed/viz/{liveboard_guid}
    method: GET
    data_selector: ThoughtSpot Content
    params: {}
- name: pendoIntegrationScript
  endpoint:
    path: /docs/pendo-integration
    method: GET
    data_selector: script
- name: getRelevantQuestions
  endpoint:
    path: /api/rest/2.0/ai/relevant-questions/
    method: GET
- name: getAnswer
  endpoint:
    path: /api/rest/2.0/ai/agent/converse/sse
    method: GET
- name: createLiveboard
  endpoint:
    method: POST
- name: getDataSourceSuggestions
  endpoint:
    method: GET
- name: ThoughtSpot Embed
  endpoint:
    path: /embed/viz/{liveboard_guid}
    method: GET
- name: authentication
  endpoint:
    path: /docs/rest-apiv2-reference#_authentication
    method: GET
- name: users
  endpoint:
    path: /docs/rest-apiv2-reference#_users
    method: GET
- name: system
  endpoint:
    path: /docs/rest-apiv2-reference#_system
    method: GET
- name: orgs
  endpoint:
    path: /docs/rest-apiv2-reference#_orgs
    method: GET
- name: tags
  endpoint:
    path: /docs/rest-apiv2-reference#_tags
    method: GET
- name: groups
  endpoint:
    path: /docs/rest-apiv2-reference#_groups
    method: GET
- name: metadata
  endpoint:
    path: /docs/rest-apiv2-reference#_metadata
    method: GET
- name: reports
  endpoint:
    path: /docs/rest-apiv2-reference#_reports
    method: GET
- name: security
  endpoint:
    path: /docs/rest-apiv2-reference#_security
    method: GET
- name: data
  endpoint:
    path: /docs/rest-apiv2-reference#_data
    method: GET
- name: audit_logs
  endpoint:
    path: /docs/rest-apiv2-reference#_audit_logs
    method: GET
- name: connections
  endpoint:
    path: /docs/rest-apiv2-reference#_connections
    method: GET
- name: version_control
  endpoint:
    path: /docs/rest-apiv2-reference#_version_control
    method: GET
- name: custom_actions
  endpoint:
    path: /docs/rest-apiv2-reference#_custom_actions
    method: GET
- name: schedules
  endpoint:
    path: /docs/rest-apiv2-reference#_schedules
    method: GET
- name: roles
  endpoint:
    path: /docs/rest-apiv2-reference#rbacRoles
    method: GET
- name: dbt
  endpoint:
    path: /docs/rest-apiv2-reference#_dbt
    method: GET
- name: Users
  endpoint:
    path: /docs/user-api
    method: GET
- name: Groups
  endpoint:
    path: /docs/group-api
    method: GET
- name: Session
  endpoint:
    path: /docs/session-api
    method: GET
- name: Connections
  endpoint:
    path: /docs/connections-api
    method: GET
- name: Metadata
  endpoint:
    path: /docs/metadata-api
    method: GET
- name: TML
  endpoint:
    path: /docs/tml-api
    method: GET
- name: System administration
  endpoint:
    path: /docs/admin-api
    method: GET
- name: Custom actions
  endpoint:
    path: /docs/admin-api#_supported_operations
    method: GET
- name: Dependency
  endpoint:
    path: /docs/dependent-objects-api
    method: GET
- name: Search data API
  endpoint:
    path: /docs/search-data-api
    method: GET
- name: Liveboard data API
  endpoint:
    path: /docs/liveboard-data-api
    method: GET
- name: Liveboard Export API
  endpoint:
    path: /docs/liveboard-export-api
    method: GET
- name: Security
  endpoint:
    path: /docs/security-api
    method: GET
- name: Audit logs
  endpoint:
    path: /docs/logs-api
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Snowflake Performance & Consumption
  endpoint:
    path: /codespot/snowflake-performance-consumption-tml-block
    method: GET
- name: Google Analytics
  endpoint:
    path: /codespot/google-analytics-tml-blocks
    method: GET
- name: session
  endpoint:
    path: /tspublic/rest/v2/session
    method: GET
    data_selector: session_details
- name: user
  endpoint:
    path: /tspublic/rest/v2/user
    method: GET
    data_selector: user_details
- name: Snowflake Snowpark Loyalty Classification and RFM Analysis
  endpoint:
    path: /codespot/snowflake-snowpark-loyalty-classification-and-rfm-analysis
    method: GET
- name: Snowflake Snowpark Predictive Churn Analysis
  endpoint:
    path: /codespot/snowflake-snowpark-predictive-churn-analysis
    method: GET
- name: Snowflake Snowpark Time Series Forecasting
  endpoint:
    path: /codespot/snowflake-snowpark-time-series-forecasting
    method: GET
- name: Snowflake Snowpark Sentiment Analysis
  endpoint:
    path: /codespot/snowflake-snowpark-sentiment-analysis
    method: GET
- name: Keboola Shopify Template
  endpoint:
    path: /codespot/keboola-codespot-entry
    method: GET
- name: Angular Starter App
  endpoint:
    path: /codespot/angular-starter-app
    method: GET
- name: Databricks Storage & Performance Analytics
  endpoint:
    path: /codespot/databricks-storage-performance-analytics
    method: GET
- name: Google Analytics
  endpoint:
    path: /codespot/google-analytics-tml-blocks
    method: GET
- name: Jira Issue Management
  endpoint:
    path: /codespot/jira-tmp-hubspot
    method: GET
- name: HubSpot Email Marketing SpotApp
  endpoint:
    path: /codespot/hubspot
    method: GET
- name: ServiceNow Incident Management
  endpoint:
    path: /codespot/servicenow-incident-management
    method: GET
- name: Okta Usage
  endpoint:
    path: /codespot/okta-tml-blocks
    method: GET
- name: Redshift Storage & Performance
  endpoint:
    path: /codespot/redshift-tml-block
    method: GET
- name: ThoughtSpot Postman API Collection
  endpoint:
    path: /codespot/thoughtspot-postman-api-collection
    method: GET
- name: User Tools
  endpoint:
    path: /codespot/user-tools
    method: GET
- name: CS Tools
  endpoint:
    path: /codespot/cs-tools
    method: GET
- name: ThoughtSpot Everywhere Reference App
  endpoint:
    path: /codespot/thoughtspot-everywhere-reference-app
    method: GET
- name: Visual Embed SDK
  endpoint:
    path: /codespot/visual-embed-sdk
    method: GET
- name: D3 Sample Showcase
  endpoint:
    path: /codespot/d3-sample-showcase
    method: GET
- name: group
  endpoint:
    path: /tspublic/rest/v2/group
    method: GET
- name: admin_configuration
  endpoint:
    path: /tspublic/rest/v2/admin/configuration
    method: GET
- name: metadata_tag
  endpoint:
    path: /tspublic/rest/v2/metadata/tag
    method: GET
- name: connection
  endpoint:
    path: /tspublic/rest/v2/connection
    method: GET
- name: data_search
  endpoint:
    path: /tspublic/rest/v2/data/search
    method: POST
- name: report_answer
  endpoint:
    path: /tspublic/rest/v2/report/answer
    method: POST
- name: security_permission
  endpoint:
    path: /tspublic/rest/v2/security/permission/tsobject
    method: GET
- name: custom_action
  endpoint:
    path: /tspublic/rest/v2/customaction
    method: GET
- name: logs_events
  endpoint:
    path: /tspublic/rest/v2/logs/events
    method: GET
- name: session
  endpoint:
    path: /tspublic/rest/v2/session
    method: GET
- name: user
  endpoint:
    path: /tspublic/rest/v2/user
    method: GET
- name: group
  endpoint:
    path: /tspublic/rest/v2/group
    method: GET
- name: admin_configuration
  endpoint:
    path: /tspublic/rest/v2/admin/configuration
    method: GET
- name: metadata_tag
  endpoint:
    path: /tspublic/rest/v2/metadata/tag
    method: GET
- name: connection
  endpoint:
    path: /tspublic/rest/v2/connection
    method: GET
- name: data_search
  endpoint:
    path: /tspublic/rest/v2/data/search
    method: POST
- name: report_answer
  endpoint:
    path: /tspublic/rest/v2/report/answer
    method: POST
- name: security_permission_tsobject
  endpoint:
    path: /tspublic/rest/v2/security/permission/tsobject
    method: GET
- name: customaction
  endpoint:
    path: /tspublic/rest/v2/customaction
    method: GET
- name: logs_events
  endpoint:
    path: /tspublic/rest/v2/logs/events
    method: GET
notes:
- The delete_aware property requires you to associate one ThoughtSpot environment
  or Org to one commit branch in Git.
- Parallel deployment to multiple organizations within a single cluster is not supported.
- Requires OAuth2 setup for token-based authentication
- API calls may be rate-limited
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Requires setup of connected app in ThoughtSpot
- Ensure proper permissions are granted for API access
- These APIs are currently in beta and turned off by default on ThoughtSpot instances.
  To enable this feature on your instance, contact ThoughtSpot Support.
- Some features are in beta and disabled by default.
- Consider security risks when injecting custom scripts.
- These APIs are designed to build context with each interaction, orchestrate reasoning,
  and expose tools and skills for natural language analytics.
- IAMv2 is turned off by default. To enable it on your instance, contact ThoughtSpot
  Support.
- The RBAC feature is in beta and turned off by default. To enable this feature, contact
  ThoughtSpot Support.
- MFA is in beta and disabled by default on ThoughtSpot instances.
- To enable this feature, contact ThoughtSpot support.
- Row-level security via tokens Beta is supported only with the Trusted Authentication
  method.
- The ThoughtSpot Developer Portal displays a locked icon next to the customization
  menu actions on clusters that do not have the ThoughtSpot Embedded Edition license.
- Users can enable third-party cookies in Safari’s Preferences setting page or use
  another web browser.
- When a visualization in Liveboard embed is opened in edit mode, empty spaces appear
  beneath or above the visualization area.
- When names are used as identifiers in path parameters, the API requests return `400
  - Bad request` error.
- The `logLevel` property does not suppress ThoughtSpot application logs.
- Uses OAuth2 with refresh token — requires setup of connected app in ThoughtSpot
- The new version of the SDK introduces the `TrustedAuthTokenCookieless` `authType`
  property to allow Cookieless embedding.
- The roles APIs work only if the Role-Based Access Control (RBAC) Beta feature is
  enabled on your instance.
- The Cookieless authentication method allows using a bearer token to identify the
  signed-in user instead of session cookies.
- The 204 response code doesn’t return a response body.
- The `POST /api/rest/2.0/auth/token/custom` API endpoint allows setting attributes
  in API requests
- The 204 code doesn’t return a response body.
- IAMv1 will be deprecated tentatively in 10.8.0.cl.
- The roles APIs work only if the Role-Based Access Control (RBAC) Beta feature is
  enabled on your instance. The RBAC feature is turned off by default.
- ThoughtSpot automatically assigns an action ID based on the name you assign to a
  custom action.
- This feature is in beta and enabled by default on ThoughtSpot clusters.
- Starting with 10.4.0.cl, Worksheets are deprecated and disabled by default in ThoughtSpot.
- All existing Worksheets on your instance will be migrated automatically to Models.
- You can also register for a free trial and evaluate the SDK and APIs on ThoughtSpot
  free trial cluster.
- You must add your embedding application domain(s) to the CSP and CORS allowlist
  on the Develop > Customizations > Security Settings page in ThoughtSpot.
- Adjust CORS and CSP settings before embedding ThoughtSpot in your app.
- Use either `visibleActions` or `hiddenActions` to show or hide actions in the UI.
  The SDK does not support simultaneous execution of `visibleActions` and `hiddenActions`
  APIs.
- 'For more information about the configuration settings and parameters, see the following
  pages: SearchViewConfig, SageViewConfig, SpotterAgentEmbedViewConfig, LiveboardViewConfig,
  AppViewConfig.'
- A ThoughtSpot Liveboard is an interactive dashboard that presents a collection of
  visualizations pinned by a user.
- The REST API Playground provides an interactive portal to explore REST API v1 and
  v2.0 endpoints.
- When `fullHeight` is set to `true`, the SDK ignores the `isLiveboardHeaderSticky:true`
  setting, and the Liveboard header will not be sticky.
- This feature is supported only if compact header is enabled on your Liveboard.
- If you want to display multiple charts or tables that have been saved in a Liveboard,
  try to embed a single Liveboard rather than multiple individual visualizations.
- For code examples, see Code samples.
- The 'ConversationEmbed' and 'BodylessConversation' components are deprecated and
  replaced with 'SpotterEmbed' and 'SpotterAgentEmbed' respectively in Visual Embed
  SDK v1.38.0 and later.
- You have a ThoughtSpot instance with Spotter and Spotter Agent enabled.
- Your host application domain is added to ThoughtSpot CSP and CORS allowlists.
- You have a ThoughtSpot instance with Spotter Agent enabled.
- You have access to the latest version of the Visual Embed SDK or at least v1.33.1.
- This feature is supported only if compact header is enabled on your Liveboard. To
  enable compact header, use the `isLiveboardCompactHeaderEnabled` attribute.
- The interface design and styling is controlled by your host app.
- If you must embed multiple visualizations, prefetch static resources before loading
  the page.
- The legacy Natural Language Search interface, also referred to as `Sage`, will be
  deprecated in July 2025. Customers who want to embed ThoughtSpot’s natural language
  search interface are advised to upgrade to Spotter.
- The SageEmbed SDK allows customizing Natural Language Search experience in the embedded
  view.
- The ConversationEmbed and BodylessConversation components are deprecated and replaced
  with SpotterEmbed and SpotterAgentEmbed respectively in Visual Embed SDK v1.38.0
  and later.
- We do not recommend mixing full app embedding with the SearchEmbed and LiveboardEmbed
  components.
- The Develop page and Analyst Studio option are not available in full application
  embed.
- The AppEmbed component allows you to embed a specific application page or the entire
  application experience.
- Ensure that the SVG hosting server is added to the CSP allowlist on the Develop
  > Security Settings page.
- The SDK allows you to customize your +Add menu options by using the visibleActions,
  hiddenActions and disabledActions properties.
- Some action enumerations and variables for custom styling are not supported in the
  new data panel experience.
- The current version of the SDK doesn’t allow you to hide or collapse the data panel.
- Worksheets are deprecated and replaced by Models in ThoughtSpot Cloud 10.12.0.cl
  and later versions.
- Uses ThoughtSpot SDK for embedding components
- Requires proper setup of ThoughtSpot host and authentication
- Currently, Mobile Embed SDKs support only cookieless authentication (`AuthType.TrustedAuthCookieless`)
  method to authenticate embed users.
- The mobile embed SDKs currently support embedding only Liveboards in mobile apps.
- 'The following features will not be available on the embedded Liveboard page in
  mobile apps: Personalized views, SpotIQ Analysis, AI Highlights, Renaming and making
  a copy of a Liveboard, Scheduling Liveboard alerts and notifications, Exporting
  or importing Liveboard TML, Request Verification, ThoughtSpot Sync features.'
- The React Native Embed SDK supports embedding a Liveboard component.
- Uses Cookieless Trusted authentication method.
- Ensure ThoughtSpot host URL is correct and accessible.
- Requires setup of ThoughtSpot instance and authentication method.
- Ensure that your host app embedding ThoughtSpot is added to the CSP and CORS allowlists
  in ThoughtSpot.
- Uses None authentication method.
- iOS and Android platforms supported
- Ensure host app is added to CSP and CORS allowlists in ThoughtSpot
- Ensure that your ThoughtSpot host URL is correct and accessible.
- Check if the authentication credentials in your code are valid.
- Mobile embedding supports only the Cookieless Trusted authentication method.
- Custom CSS changes take precedence and override the style customization settings
  applied via UI.
- Advanced style customization with custom CSS is available only with the ThoughtSpot
  Embedded Edition license.
- Custom styles and CSS overrides applied at the Org level take precedence over style
  customization settings at the cluster (All Orgs) level.
- The CSS customization framework allows overriding the default styles, color schemes,
  design elements, and typography of ThoughtSpot elements to match the look and feel
  of your host application.
- While the rules_UNSTABLE option allows granular customization of individual elements,
  note that the rule-based style overrides can break when your ThoughtSpot instance
  is upgraded to a new release version.
- Verify if custom styles are applied correctly.
- This feature is available only with the ThoughtSpot Embedded Edition license.
- Your icon image should be a square, and the recommended size is 140px by 140px.
- The recommended size for the wide logo is 330px by 100px.
- Before you begin, make sure you have the WOFF files available for the fonts you
  want to use.
- Changes to chart and table defaults apply only to charts and features created after
  you configure a value.
- If you change table fonts, older tables retain their previous fonts.
- You can declare multiple <symbol> tags within one SVG file if you are substituting
  a number of icons.
- ThoughtSpot provides multiple types of filters for various object types, which can
  be applied in a layered fashion.
- Filters and parameter values defined via ABAC token that apply at the data model
  layer are locked-in and always apply until changed or removed by a new token request.
- Filters and parameters set for ABAC token cannot be overridden by setting runtime
  filters or Parameters in the browser.
- You can customize only the system-generated text in the UI. User-created text such
  as object names, titles, or description text are not customizable.
- The strings and substrings in the ThoughtSpot UI are case-sensitive.
- The runtime filters operation returns an error if the URL exceeds 2000 characters.
- Attempting to override existing filter values with runtime filters while exporting
  a Liveboard will result in an error.
- Runtime filters work only on Answers and Liveboard visualizations built from Models.
- Runtime filters allow you to apply filters on a Liveboard, Answer, visualization,
  or conversation session with Spotter.
- The Visual Embed SDK allows you to customize the menu actions for the ThoughtSpot
  components embedded in your app.
- The SDK doesn’t support configuring both `visibleActions` and `hiddenActions`. Use
  the appropriate action ID to show or hide a UI action.
- The DATE and DATE_TIME data types must be specified as EPOCH time (Unix or POSIX
  time) in runtime filters.
- Runtime parameters can be applied using Visual Embed SDK, REST APIs, or URL query
  parameters.
- For DATE and DATE_TIME data types, provide values in Epoch time format.
- Uses OAuth2 with refresh token — requires setup of connected app in ThoughtSpot.
- Parameter values cannot be changed during a conversation session and may result
  in unintended effects.
- If a user adds a Parameter to an answer through the edit flow, Spotter may drop
  this Parameter and any formulas using it in follow-up interactions.
- Custom actions add a new menu item to various UI elements in an Answer or Liveboard
  visualization
- ThoughtSpot users with developer or admin privileges can create various types of
  custom actions.
- You can only assign one custom action as a primary button on a visualization or
  Answer.
- Any ThoughtSpot user with admin or developer privileges can create URL custom actions
  in the Developer portal.
- URL actions are available on both embedded and standalone ThoughtSpot instances
  and do not require ThoughtSpot Embedded Edition license.
- Users must have the New Answer Experience enabled to access a URL action.
- For URL actions to work in the embedded mode, you must add the URL domain to the
  CORS and CSP connect-src allowlist.
- Only ThoughtSpot users with edit permissions to a Model or visualization can add
  a URL action to a Model, visualization, or saved Answer.
- URL-based custom actions do not support the localhost hostname. Use the IP address
  127.0.0.1 instead of localhost.
- Callback custom actions are supported on embedded ThoughtSpot instances only and
  require a ThoughtSpot Embedded Edition license.
- Users with developer or admin privileges can create a callback custom action in
  the Developer portal.
- Some endpoints may have rate limits
- By default, the global actions are added as a menu action in the More menu the more
  options menu on all visualizations and saved answers.
- The local custom actions are not added as a clickable action on any Answer page
  or visualization.
- The data payload includes various metrics related to account balances.
- Currency format is set to USD.
- Uses callback custom actions for Liveboard visualizations
- Some browsers (Safari in particular) default to strict settings on cookie origins
  that prohibit the standard SSO process.
- Payloads are in JSON format.
- 'Custom actions add a new menu item to one of the following UI elements in an Answer
  or Liveboard visualization: the primary menu bar, the More options menu, the contextual
  menu that appears when a user right-clicks on an Answer or visualization.'
- Developers or administrators can set a custom action as a global or local action.
- Custom actions are displayed in the Custom actions panel on a saved Answer or visualization
  page.
- Local custom actions are not assigned to any visualization by default.
- URL-based custom actions do not support the `localhost` hostname. Therefore, use
  the IP address `127.0.0.1` instead of `localhost` when specifying the target URL.
- The authentication information you specify in these fields is visible to other authenticated
  users, even if they do not have Developer or Admin privileges.
- Ensure custom actions are set as Local.
- Edit permissions are required to modify the Model.
- The new Answer experience must be enabled on your cluster.
- ThoughtSpot generates system-generated links in email notifications.
- Payloads include detailed information about account balances and related metadata
- The display language of the embedded ThoughtSpot UI is determined by the user’s
  system locale.
- The API does not require authentication.
- ThoughtSpot does not translate column names, object titles, description text, formulas,
  or metadata entered by the user.
- To ensure that embedding works on browsers that don’t allow third-party cookies,
  set the domain name of the ThoughtSpot instance to the same domain as your host
  application.
- Contact ThoughtSpot Support for domain-related customizations.
- Custom actions are enabled on your instance.
- ThoughtSpot allows only one primary action on a visualization or saved Answer page.
  If you already have a primary action, you need to select another option or override
  your current primary action setting.
- ThoughtSpot allows you to place only the URL and callback actions in the context
  menu. App actions can be added only to the primary bar or More the more options
  menu.
- Make sure the email address you provide is a valid email account that you can access.
  When ThoughtSpot support triggers the email verification process, you will receive
  a verification email with a link. You must click this link within 24 hours to confirm
  your email address and authorize its use. If you don’t complete the email verification
  process within 24 hours, contact ThoughtSpot support to start the email verification
  process again.
- Make sure the custom actions are set as Local.
- Make sure you have edit permissions to modify the Model.
- Make sure the new Answer experience is enabled on your cluster.
- If you want your ThoughtSpot instance to send email notifications with a custom
  domain name and a specific sender ID, contact ThoughtSpot Support.
- To send emails from a specific email account, you must update the Custom admin email
  and From ID on the Admin > Application settings > Onboarding page.
- Customizing email settings per Org is not supported.
- These APIs are in beta and disabled by default on ThoughtSpot instances. To enable
  these APIs on your instance, contact ThoughtSpot support.
- For overlapping components, customized configuration through these APIs overrides
  the email configuration through the Admin > Onboarding page of your ThoughtSpot
  instance.
- By default, ThoughtSpot does not translate column names, object titles, description
  text, formulas, or metadata entered by the user.
- If you specify a currency when uploading data, that currency format does not change
  when the locale changes.
- Validation email delivery requires the mail service to be enabled for the Org. If
  email configuration is missing, emails will not be sent or received, regardless
  of the API response.
- The embedding app will need routes for pages that dynamically load the ThoughtSpot
  embed components.
- Object IDs in ThoughtSpot are GUIDs and unique on every Org or instance.
- To customize these parameters, contact ThoughtSpot Support.
- The endpoint can only request one object type at a time.
- Only users with a valid embed license can add Visual Embed hosts.
- Safari blocks all third-party cookies and does not support partitioned cookies.
- This `AuthType.None` authentication method is not recommended for Production use
  cases.
- Many web browsers do not support third-party cookies.
- Validation email delivery requires the mail service to be enabled for the Org.
- Trusted authentication allows a web application to authenticate a user to a ThoughtSpot
  instance using login tokens requested from a ThoughtSpot instance.
- The authentication type is defined in the init function. You can configure cookie-based
  or cookieless authentication as per your deployment needs.
- The secret_key allows calling the ThoughtSpot token request REST APIs to generate
  a token for any user.
- Requests with the secret_key do not require any type of user login or admin permissions.
- When you disable Trusted authentication, the validity of your existing secret key
  expires, and your app may become inoperable.
- To a new secret key and generate authentication tokens, you must enable Trusted
  authentication.
- The Visual Embed SDK uses the init() function to automate the request to the token
  request service.
- ThoughtSpot allows CSP settings only at the cluster level, so you must switch to
  the All Orgs context to configure CSP allowlists.
- Cookieless authentication only works with login tokens returned from the REST API
  v2 endpoint.
- Cookie-based authentication establishes a browser-wide ThoughtSpot session.
- The token request service is a REST API endpoint added to the web application.
- Providing a REST API service allows the Visual Embed SDK to request new tokens whenever
  they are needed to start a new ThoughtSpot session.
- This AuthType.None authentication method is not recommended for Production use cases.
- In cookieless authentication, the bearer token issued by the authentication server
  is used to authenticate API requests to ThoughtSpot.
- secret_key must be stored securely; here we assume the ThoughtSpot server name and
  secret_key are stored in env file
- CORS and CSP must be configured correctly for any embedding and REST API commands
  to work from the browser.
- When implementing trusted authentication with session cookies, check if your browser
  allows third-party cookies.
- You need admin privileges to enable SAML authentication on ThoughtSpot.
- When configuring SAML 2.0, make sure you map the SAML user attributes to appropriate
  fields.
- Uses OAuth2 with TrustedAuthToken — requires setup of connected app in ThoughtSpot
- You must contact ThoughtSpot Support to enable OIDC authentication support on ThoughtSpot.
- You need admin privileges to enable OIDC authentication with IAMv2 on ThoughtSpot.
- secret_key must be stored securely and never revealed to the user in their browser.
- If the set-cookie response does not come through and actually sets the ThoughtSpot
  cookies in the browser, sign-in will not complete.
- Make a note of all of the redirects within the SAML workflow. Each server must be
  configured properly to allow the inbound and outbound portions of the SAML flow.
- Avoid using the same group for access control and roles/privileges, unless all users
  and groups are definitely set to NOT SHAREABLE.
- OpenID Connect (OIDC) is an authentication protocol that adds an identity layer
  to the OAuth 2.0 protocol.
- OIDC allows clients to verify a user’s identity based on the authentication performed
  by an authorization server.
- Row-level security (RLS) is the term for filtering down to rows of data based on
  a set of entitlements for a user.
- Column-level security (CLS) restricts user access to specific columns of a table.
- Both REST API V1 and V2 tokens support just-in-time provisioning of users.
- The ABAC feature is disabled by default on ThoughtSpot instances. To enable this
  feature on your instance, contact ThoughtSpot Support.
- Automatically add SAML users to ThoughtSpot upon first authentication
- ThoughtSpot compresses the size of the JWT token by default to ensure that larger
  payloads can be passed via JWT.
- On instances running 10.5.0.cl and 10.4.0.cl versions, if a column is set as hidden,
  the is_mandatory_token_filter setting will not be applied to the column.
- The ABAC via tokens method requires using trusted authentication and using Worksheets
  or Models as data sources for Liveboards and Answers, rather than individual Table
  objects.
- To generate a JWT token with ABAC security rules, use the /api/rest/2.0/auth/token/custom
  API endpoint.
- If using /api/rest/2.0/auth/token/full or /api/rest/2.0/auth/token/object, switch
  to /api/rest/2.0/auth/token/custom.
- Token generation workflow does not support runtime sorting.
- As this feature directly impacts data security, it’s disabled by default on ThoughtSpot
  instances.
- With the GA rollout, ThoughtSpot recommends switching your workflow to the auth/token/custom
  API endpoint.
- 'Starting in ThoughtSpot 10.4.0.cl, you can add is_mandatory_token_filter: true
  to the TML definition of any column in a Worksheet or Model.'
- Runtime filters require passing the exact ThoughtSpot Worksheet or Model column
  name or will not apply to the data set.
- End users of an embedded app cannot have edit access to any worksheet using ABAC
  RLS via tokens.
- Currently, the ABAC via tokens method requires using trusted authentication and
  using Worksheets as data sources for Liveboards and Answers, rather than individual
  Table objects.
- RLS rules are defined using either the ts_username variable or ts_groups variable.
- To generate a JWT token with ABAC security rules, ThoughtSpot recommends using the
  /api/rest/2.0/auth/token/custom API endpoint.
- The default persist_option for token requests to the /api/rest/2.0/auth/token/custom
  API endpoint is APPEND.
- To replace the persisted attributes, set persist_option to RESET in your POST API
  call.
- Requires two containers for rendering the Liveboard.
- ThoughtSpot recommends leaving JWT compression on to ensure proper token interpretation.
- End users cannot have edit access to worksheets using ABAC RLS via tokens.
- Schedules created with JWT using ABAC will not follow the same security rules as
  schedules created with standard RLS set up in ThoughtSpot.
- Runtime filter conditions must match the column names in your worksheet to avoid
  data leakage.
- Setting fullHeight to true causes all visualizations on the Liveboard to load simultaneously.
- 'Setting lazyLoadFullHeight to true along with fullHeight: true allows lazy loading
  for visualizations.'
- RLS rules are defined within ThoughtSpot on table objects, and automatically extend
  to all Models, saved answers, and Liveboards based on that table, every time.
- The username or ThoughtSpot group name property must be an exact match to the values
  within the database column.
- By default, the lazyLoadingForFullHeight attribute is set to false.
- The names of any ThoughtSpot groups used for access control must not accidentally
  match with values in the database columns.
- Prefetching static resources is only effective when you can cache static resources
  before rendering the embed.
- Currently, there is no support for selective user access through the APIs.
- The Visual Embed SDK provides configuration options to control how embedded apps
  handle the height of frame and loading of visualizations on an embedded Liveboard.
- By default, the fullHeight parameter is set to false.
- This function needs to be called before any ThoughtSpot component like Liveboard
  etc can be embedded.
- This feature is primarily intended for developer testing. It is strongly advised
  not to use this authentication method in production.
- resetCachedAuthToken() resets the auth token and a new token will be fetched on
  the next request.
- Use your own authentication server which returns a bearer token, generated using
  the secret_key obtained from ThoughtSpot.
- This uses a cookieless authentication approach, recommended to bypass the third-party
  cookie-blocking restriction implemented by some browsers.
- The configuration object containing ThoughtSpot host, authentication mechanism and
  so on.
- Event types emitted by the embedded ThoughtSpot application.
- Uses ThoughtSpot Embed SDK for visualization events.
- 'Defined in : types.ts'
- Works with TS 9.8.0 and above
- This service allows you to interact with ThoughtSpot Answers programmatically, making
  it easy to customize visualizations, filter data, and extract insights directly
  from your application.
- AnswerService provides a simple way to work with ThoughtSpot Answers.
- contextMenuPoints includes clickedPoint and selectedPoints.
- embedAnswerData is a key-value pair structure.
- 'Version : SDK: 1.19.1 | ThoughtSpot: *'
- Destroys the ThoughtSpot embed, and remove any nodes from the DOM.
- 'Deprecated : from SDK: 1.39.0 | ThoughtSpot: 10.10.0.cl Use {@link SpotterAgentEmbed}
  instead'
- Some objects may return nulls in deeply nested fields
- Embed a ThoughtSpot Liveboard or visualization.
- This option is for advanced use only and is used internally to control embed behavior
  in non-regular ways.
- Use supported embed types such as AppEmbed or LiveboardEmbed.
- This option does not apply to the classic homepage. To access the updated modular
  homepage, set modularHomeExperience to true (available as Early Access feature in
  9.12.5.cl).
- 'Supported embed types: AppEmbed, LiveboardEmbed'
- This option does not apply to the classic homepage.
- Optional properties for iframe configuration include height, loading, and width.
- This can provide performance benefits due to a lighterweight shell.
- 'Deprecated: If set to true, the context menu in visualizations will be enabled.'
- 'This embed will be deprecated from SDK: 1.40.0 | ThoughtSpot: 10.13.0.cl'
- This is an object (key/val) of override flags which will be applied to the internal
  embedded object.
- Imports TML representation of the metadata objects into ThoughtSpot.
- Exports TML representation of the metadata objects from ThoughtSpot in JSON or YAML
  format.
- Login failed, please try again
- You can customize styles, text strings, and icons.
- Uses OAuth2 for authentication
- The list of customization css variables. These are the only allowed variables possible.
- Please enable the Liveboard styling and grouping feature in your ThoughtSpot instance
  and then set the isLiveboardStylingAndGrouping SDK flag to true to start modifying
  this CSS variable.
- Customization options for embedded ThoughtSpot components include styles, text strings,
  and icons.
- The Add to Coaching feature is currently in beta and is disabled by default on embed
  deployments.
- To enable this feature on your instance, contact ThoughtSpot Support.
- All embedded ThoughtSpot objects require authentication.
- If the host application does not allow custom Javascript, you can use Basic authentication
  with username and password or SSO authentication.
- Variable substitution required  * `{thoughtspot-server}`. Your ThoughtSpot host
  URL. * `{field_name}` represents the column from your ThoughtSpot model to be filtered.
  * `{field_value}` sets the value from the column to filter on * `{org_id}`. If using
  Orgs in ThoughtSpot, provide your Org identifier. If not using Orgs, set the ID
  to 0. * `{liveboard_guid}`. Your Liveboard identifier.
- Any method of sign-in establishes a ThoughtSpot session in the browser.
- Credentials must be included in the request.
- Optional
- Ensure that the browser cookies are included when making the request.
- .withCredentials = true is important - this is what sends the cookies from the browser
  session.
- Actions can be defined in the `disabledActions`, `visibleActions`, or `hiddenActions`
  array.
- By default, Safari does not allow third-party cookies.
- Specify the domain URL string in the supported format for CORS allowlist.
- Some actions may be disabled based on the context.
- Some API responses may include deprecated fields
- 'Version : SDK: 1.36.0 | ThoughtSpot Cloud: 10.6.0.cl'
- 'Version : SDK: 1.41.0 | ThoughtSpot Cloud: 10.13.0.cl'
- 'Version : SDK: 1.18.0| ThoughtSpot: 8.10.0.cl, 9.0.1.sw'
- 'Version : SDK: 1.32.0 | ThoughtSpot Cloud: 10.1.0.cl'
- 'Version : SDK: 1.28.3 | ThoughtSpot: 9.12.0.cl, 10.1.0.sw'
- 'Version : SDK: 1.34.0 | ThoughtSpot: 10.3.0.cl'
- ThoughtSpot supports local management of users. For initial development and testing
  purposes, you can create users in ThoughtSpot and manage their profiles locally.
- Variable substitution required for {thoughtspot-server}, {field_name}, {field_value},
  {org_id}, {liveboard_guid}.
- Trusted authentication SSO method issues a REST API sign-in command automatically.
- The Spotter AI APIs are in beta and disabled by default on ThoughtSpot instances.
  To enable these APIs on your instance, contact ThoughtSpot Support.
- .withCredentials = true is important - this is what sends the cookies from the browser
  session
- The Get data source suggestions feature is not by default on all ThoughtSpot instances.
- ThoughtSpot supports local management of users.
- Administrators can use the security audit logs to detect potential security threats
  or compromised user accounts in an organization.
- Requires ADMINISTRATION privilege to fetch logs.
- On Orgs-enabled clusters, fetches logs for the current Org.
- The Super admin role cannot be assigned, modified, or deleted.
- If importing only a Model object, it may take some time for the Model to become
  available in the ThoughtSpot system.
- Uses the SSE protocol to deliver data incrementally.
- Requires Authorization Bearer token
- You can poll up to 100 API requests per minute to get details of your TML import
  tasks.
- To set up connections with OAuth, make sure your connection metadata includes client
  ID, client secret key, auth URL, and access token URL.
- On Orgs-enabled clusters, fetches security logs for the current Org.
- TML is a scriptable format developed by ThoughtSpot for exporting, modifying, and
  migrating metadata objects.
- To use OAuth 2.0 authentication method, make sure your ThoughtSpot instance has
  the required configuration to support the OpenID Provider or IdP that authenticates
  your users.
- To trusted authentication to authenticate REST clients, make sure Trusted authentication
  is enabled on your ThoughtSpot instance, and your authenticator service has access
  to the secret key.
- You can use basic authentication with username and password for local development
  or testing purposes.
- If MFA is enabled on your ThoughtSpot instance then authentication with only `username`
  and `password` will return an error.
- REST API v2.0 uses JSON for the request and the response format
- By default, the bearer token is valid for 300 seconds. You can configure the token
  expiry duration as per your requirement.
- The auth/token/custom API endpoint allows you to automatically create a user during
  token generation.
- You must send some request in the body of the POST, even if this is only `{ }`.
- Obtain a bearer token or set session cookies before making an API request
- The /metadata/search endpoint is the most versatile of all metadata endpoints.
- Must send a request body even if it's just `{ }`.
- The /groups/search API endpoint is used to retrieve details about ThoughtSpot groups.
- Some fields may not be visible depending on user permissions.
- If no object ID or type is specified, the API returns a list of Liveboards.
- The default metadata type is set to LiVEBOARD.
- isConnectionConfigurationDisabled is false
- isExternal is false
- isDeprecated is false
- isSharedViaConnection is false
- syncWithSource is false
- isVerified is false
- isVersioningEnabled is false
- isPublished is false
- csrProtected is false
- Filter revenue manufacturer manufacturer != mfgr#2 mfgr#3 mfgr#4 manufacturer =
  mfgr#1
- To avoid join path ambiguities, a query can use only a single data source.
- Search execution of query strings is not case-sensitive.
- All column names in the data source must have unique names and must pass the case-insensitivity
  test.
- Column names cannot contain square brackets.
- Values must be enclosed in quotes, but they cannot contain quotes.
- The API does not support in-query formula definitions.
- isHidden is true
- The downloadable file returned in API response file is extensionless. You need to
  rename the downloaded file by typing in the relevant extension.
- HTML rendering is not supported for PDF exports of Answers with tables.
- Disable SSL verification for testing purposes
- Users must be authenticated and have read access to the data source.
- Uses token-based authentication.
- SSL verification is disabled for testing purposes.
- Access to ThoughtSpot data is controlled based on user privileges and object-level
  permissions.
- Any completed log-in process will return session cookies from the ThoughtSpot system,
  which must be included with any subsequent REST API call.
- Uses trusted authentication with session tokens.
- The API endpoint responds for one type at a time, so you must decide which object
  types to bring back and catalog.
- To paginate, set offset in multiples of the batchsize value until you reach a response
  that is smaller than the batchsize value or is empty.
- The endpoint requires a list of GUIDs.
- Responses include nested objects with GUIDs.
- Privileges are inherited from groups.
- Session cookies must be included with any subsequent REST API call.
- Some objects like User may return nulls in deeply nested fields
- The Org name string must be unique and does not exceed 48 characters.
- On ThoughtSpot instances running 9.8.0.cl or later, the name supports only [a-z],
  [A-Z], [0-9], and [-].
- You must have administrator access to create, edit, and delete a user.
- All users created are added to ALL.
- The Org name string must be unique. Make sure the name string length does not exceed
  48 characters.
- On ThoughtSpot instances running 9.8.0.cl or later release versions, the name string
  supports only [a-z], [A-Z], [0-9], and [-]. Space and other special characters are
  not supported.
- To create a user, you require admin user privileges.
- All users created in the ThoughtSpot system are added to ALL.
- ThoughtSpot has a default group called 'All'.
- Ensure to use a JSON file encoded as application/json or text/json for the principals
  attribute in sync operation.
- The Group API endpoints allow you to programmatically create and manage user groups,
  configure privileges, and assign users to a group.
- To create and manage roles, you need ROLE_ADMINISTRATION.
- To assign roles to a group object, you need GROUP_ADMINISTRATION and ROLE_ADMINISTRATION
  privileges.
- ThoughtSpot has a default group called 'All' which cannot be deleted.
- The Session APIs allow ThoughtSpot users to authenticate and manage their sessions.
- You must have data management permissions to create, edit, delete or query data
  connection objects.
- Make sure your user account has the DATAMANAGEMENT privilege.
- Requires ThoughtSpot login credentials to create a session object and obtain a login
  token.
- Requires data management permissions to create, edit, delete or query data connection
  objects.
- Use the connection_id to specify the GUID of the data connection.
- The tables parameter allows fetching one or several tables from multiple external
  databases.
- Dependency in ThoughtSpot is defined as a relation between the referenced and referencing
  objects.
- You must have edit access to the metadata objects that you want to query.
- You must have view access to the data source objects to run a search query.
- The search data API allows you to pass the search query string as query parameters
  in the URL.
- ThoughtSpot recommends using Liveboard data API to embed ThoughtSpot content within
  a native mobile app.
- Requires Org administration privileges to access TML objects across all Orgs.
- To remove ThoughtSpot logos from the exported PDFs, contact your ThoughtSpot team.
- To query object permissions, you must have administrator access.
- To share an object or visualization with another user, you must have edit access
  to the object.
- Object permission details can be retrieved for multiple types and IDs.
- The API supports sharing visualizations with specified user IDs.
- When fetching logs via API, there can be a 30-minute delay between the actual event
  time and when that event is available via the logs API endpoint.
- The PDF layout type can be either PINBOARD or VISUALIZATION.
- The runtime sort operation returns an error if the URL exceeds 2000 characters.
- Querying metadata objects by subtypes is not supported in the current release.
- You can also use your cluster’s secret key here for authentication.
- Apollo caches requests, so it’s recommended to reset the store on logout.
- No authentication is not recommended for production environments.
- ThoughtSpot does not recommend TML export and import across different versions of
  ThoughtSpot application because the TML syntax, supported features, and object schemas
  can vary between releases and can sometimes lead to compatibility issues and validation
  errors.
- The publishing feature Beta enables administrators to create a single main object
  in the Primary Org and distribute it to other Orgs within the instance.
- ThoughtSpot currently supports integrating with GitHub / GitHub Enterprise.
- ThoughtSpot’s Git integration does not support moving objects within the same Org.
  Use the TML REST APIs directly if you need to make copies with variations within
  a single Org.
- ThoughtSpot does not recommend committing changes to Git directly and deploying
  these changes back in a ThoughtSpot development environment.
- Git integration requires configuration within both ThoughtSpot and your Git provider
  (GitHub currently).
- API v2.0 has fewer endpoints but supports all user administration and CRUD operations
  from API v1.
- The `Bearer_token` value must be requested for the desired Org, specified through
  the `org_id` value of the full access token REST API request.
- The mapping file is updated when a new object is first created in the destination
  Org and receives its automatically generated GUID from the ThoughtSpot instance.
- Mapping is performed with an exact string Find/Replace operation, on the TML objects
  directly before the import.
- Your destination application has a callback URL to accept HTTP POST requests.
- If you plan to use OAuth authentication, make sure you have the OAuth credentials
  and authorization URL of your application.
- If you plan to use an API key for authentication, ensure that you have a valid API
  key.
- ThoughtSpot does not consider object display name for a TML file, but does use name
  matching for data object references within a TML file.
- In versions prior to 9.0.0.cl, ThoughtSpot did not consistently use the GUID provided
  in the TML file for a new object when that GUID was not already in use on that ThoughtSpot
  instance.
- If no branch name is specified, by default, the ts_config_files branch is considered.
- The publishing feature—including the REST APIs for variable creation and update,
  metadata parameterization, and publishing content across Orgs—is in beta and turned
  off by default on ThoughtSpot instances.
- Only ThoughtSpot administrators with access to all Orgs can publish objects.
- Objects can be published only from the Primary Org to other Orgs.
- In the target Orgs, published objects are available in read-only mode. The original
  object in the Primary Org remains editable only by the cluster administrator.
- Spotter functionality is not supported for published objects.
- Search data indexing is disabled for published tables.
- Git integration is not supported for published objects.
- Variables allow you to define dynamic placeholders for specific properties of metadata
  objects such as Connections and Tables.
- Data objects can only be joined to other objects from a single connection
- Any single search (an Answer or a visualization on a Liveboard) can only connect
  to data objects from a single connection
- Ensure that variables are available on your instance.
- Ensure that you have edit access to the Connections and Tables to which you want
  to assign variables.
- The publishing feature—including the REST APIs for variable creation and update,
  metadata parameterization, and publishing content across Orgs—is in beta and turned
  off by default on ThoughtSpot instances. To enable this feature on your instance,
  contact ThoughtSpot Support.
- The API doesn’t support publishing Connections.
- ThoughtSpot is actively working on enhancements to support critical features and
  key user scenarios. Some of these existing limitations will be addressed in upcoming
  releases.
- Published objects are visible only to administrators of the specific Org.
- The Orgs multi-tenancy features require the ThoughtSpot Analytics Enterprise Edition
  or ThoughtSpot Embedded license.
- Orgs will be enabled by default on all new ThoughtSpot Enterprise cloud instances.
- This feature is disabled by default. To enable this option, contact ThoughtSpot
  Support.
- To enable Orgs support for SAML authentication on ThoughtSpot, contact ThoughtSpot
  Support.
- To enable Orgs support for OIDC authentication on ThoughtSpot, contact ThoughtSpot
  Support.
- Orgs multi-tenancy features require the ThoughtSpot Analytics Enterprise Edition
  or ThoughtSpot Embedded license.
- For all Org operations, you must set the org scope to ALL in your API request.
- Single-tenant databases require separate connections in ThoughtSpot for each database
  in most cases.
- Groups can be set to SHAREABLE or NOT SHAREABLE depending on the content and users.
- Feature for integrating third-party tools is disabled by default.
- Contact ThoughtSpot Support to enable the feature.
- The **CSP script-src domains** section is visible to users with administrative privileges
  only if the third-party integration feature is enabled on your instance.
- The **CSP script-src domains** cannot be enabled and configured at the Org level.
  When configured, this setting will apply to all the Orgs configured on your instance.
- By default, the third-party tool integration feature is disabled on ThoughtSpot
  instances. To enable this feature, contact ThoughtSpot Support.
- ThoughtSpot strongly recommends that you review your organization’s security guidelines
  and assess potential security risks associated with the injection of custom scripts
  and third-party tools.
- Requires setup of connected app in Pendo
- Ensure the domain hosting the script is allowed in CSP settings
- You must set the org scope to `ALL` in your API request and pass it as a query parameter
  in the request URL.
- Users must have at least view access to the data source.
- Ensure that data is modeled. Large or complex data sources may impact response time.
- Simplified integration using Lightning Web Components (LWC)
- Enhanced customization and interactivity
- Support for authentication mechanisms like SAML and Trusted Authentication
- Feature for integrating third-party tools is disabled by default on ThoughtSpot
  instances.
- Enabling the feature involves contacting ThoughtSpot Support.
- The CSP script-src domains section is visible to users with administrative privileges
  only if the third-party integration feature is enabled on your instance.
- The CSP script-src domains cannot be enabled and configured at the Org level. When
  configured, this setting will apply to all the Orgs configured on your instance.
- Use Basic Auth for embedding
- Update CORS settings in Salesforce with ThoughtSpot cluster URL
- To set up Trusted authentication for Vercel integration, Can administer ThoughtSpot
  (administrator) privilege is required.
- ThoughtSpot Developer Edition does not offer Trusted Authentication.
- Users upgrading from Free Trial to Developer Edition may have to change the code
  samples slightly to use Basic authentication.
- ThoughtSpot recommends using Trusted authentication method to seamlessly authenticate
  your application users.
- If you anticipate frequent updates to the script, choose a hosting service that
  allows content overrides without changing the URL.
- ThoughtSpot Cloud ts7.may.cl or later required for embedding methods.
- ThoughtSpot’s Agentic Model Context Protocol (MCP) Server enables integrating ThoughtSpot
  analytics directly into any AI agent, custom chatbot, or LLM-based systems and platforms
  that support MCP.
- Embed using REST APIs supports data APIs to embed ThoughtSpot content.
- By embedding ThoughtSpot Analytics in your app, you can enrich your application
  experience with ThoughtSpot’s search and live analytics capabilities.
- Each conversation is session-based. Ensure that session IDs are managed correctly
  in your integration.
- Basic Auth used in this LWC, no SSO.
- ThoughtSpot recommends using Trusted authentication method to seamlessly authenticate
  application users.
- ThoughtSpot supports embedding Search bar, Search page, Liveboard, visualizations,
  and the full ThoughtSpot experience in a web application, product, or portal.
- ThoughtSpot requires a license to embed components.
- The style customization feature allows rebranding UI elements, logo, fonts, and
  color scheme of charts.
- Uses Embedded SSO for authentication.
- Your app must allow iFrame embedding
- Your app must support SSO authentication
- Uses OAuth2 with Embedded SSO for authentication.
- ThoughtSpot is the Search & AI-driven Analytics platform for the enterprise.
- REST API v2 endpoints are deprecated.
errors:
- 'ALL_OR_NONE: Reverts all objects; fails if any object fails to revert.'
- 'PARTIAL: Reverts subset of objects that validate successfully.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your authentication credentials'
- '403 Forbidden: Insufficient permissions for the requested resource'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 - Bad request: If the identifier is a required attribute in the path parameter
  and contains a forward slash `/`.'
- 'Invalid YAML/JSON syntax in file: On exporting and reimporting TML in YAML format
  in the REST API v2 Playground.'
- '401 Unauthorized: Check authentication setup.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'Error: Ensure authentication credentials in your code are valid.'
- 'Error: Check if the Liveboard ID is correct.'
- 'AuthError: Failed to fetch auth token'
- 'Error: Check if the authentication credentials are valid.'
- 'Error: Verify if the app has the required network permissions.'
- 'Auth initialized: Check if your authentication process is working correctly.'
- 'Reload: Ensure that the reload action is triggered appropriately.'
- The runtime filters operation returns an error if the URL exceeds 2000 characters.
- Attempting to override existing filter values with runtime filters while exporting
  a Liveboard will result in an error.
- Error if an object URL with Parameter attributes exceeds 2000 characters.
- 'API: API call failure error.'
- 'FULLSCREEN: Error in presenting a Liveboard or visualization in the full screen
  mode.'
- 'SINGLE_VALUE_FILTER: Error in updating filter values.'
- 'NON_EXIST_FILTER: Error in applying filter due to a non-existent filter.'
- 'INVALID_DATE_VALUE: Error due to invalid date value in a filter.'
- 'INVALID_OPERATOR: Error due to an invalid operator in filter properties.'
- '403 Forbidden: Check API permissions'
- '404 Not Found: Verify endpoint URL'
- '500 Internal Server Error: Try again later'
- 'API: API call failure error. This error event occurs when an API request is blocked.'
- 'Unable to get the metadata/list response: Check API parameters or endpoint.'
- 'EXPIRY: Token has expired'
- 'IDLE_SESSION_TIMEOUT: Session has timed out due to inactivity'
- 'NO_COOKIE_ACCESS: Unable to access cookies'
- 'OTHER: General authentication failure'
- 'SDK: SDK related authentication failure'
- 'UNAUTHENTICATED_FAILURE: Authentication failed'
- UNAUTHENTICATED_FAILURE
- 'FAILURE: Emitted when the SDK fails to authenticate'
- 'LOGOUT: Emits when a user logs out'
- 'SAML_POPUP_CLOSED_NO_AUTH: Emitted when the SAML popup is closed without authentication'
- 'SDK_SUCCESS: Emits when the SDK authenticates successfully'
- 'SUCCESS: Emits when the app sends an authentication success message'
- 'FAILURE: Emits when the SDK fails to authenticate'
- 'Unable to get the response: Check your network connection or API endpoint.'
- Refused to frame "<your-site-url>" because an ancestor violates the following Content
  Security Policy directive.
- The CORS allowlist does not allow wildcard(*) expression for domain URLs.
- My account is locked and I am unable to log in to the app with my SSO credentials.
- '401 Unauthorized: Check if your API requests are authorized. Make sure your ThoughtSpot
  user account has edit privileges to access and modify ThoughtSpot objects.'
- '401 Unauthorized: Check OAuth credentials or token expiration'
- 'disabledActions: [Action.ShowUnderlyingData]'
- 'disabledActions: [Action.SpotIQAnalyze]'
- 'hiddenAction: [Action.SpotterFeedback]'
- 'hiddenAction: [Action.SpotterTokenQuickEdit]'
- 'hiddenAction: [Action.SpotterWarningsBanner]'
- 'hiddenAction: [Action.SpotterWarningsOnTokens]'
- 'disabledActions: [Action.Subscription]'
- 'disabledActions: [Action.SyncToOtherApps]'
- 'disabledActions: [Action.SyncToSheets]'
- 'disabledActions: [Action.SyncToSlack]'
- 'disabledActions: [Action.SyncToTeams]'
- 'hiddenAction: [Action.TML]'
- 'disabledActions: [Action.ToggleSize]'
- 'disabledActions: [Action.UnsubscribeScheduleHomepage]'
- 'disabledActions: [Action.UpdateTML]'
- 'hiddenAction: [Action.VerifiedLiveboard]'
- 'disabledActions: [Action.ViewScheduleRunHomepage]'
- Refused to frame '<your-site-url>' because an ancestor violates the following Content
  Security Policy directive.
- '401 Unauthorized: Check if your API requests are authorized'
- '401 Unauthorized: Check if the user has ADMINISTRATION privilege.'
- '400 Bad Request: Ensure all required parameters are provided.'
- '400: Invalid request'
- '401: Unauthorized access'
- '403: Forbidden access'
- '500: Unexpected Error'
- '200: Async TML import task status fetched successfully'
- '401 Unauthorized: Check your ADMINISTRATION privilege.'
- '400 Bad Request: Verify the parameters provided in the request.'
- '401: Indicates an unauthorized request. Check if you have the required credentials
  and object access to send the API request.'
- '403: Indicates forbidden access. Check your access privileges and user account
  status.'
- '400: Indicates a bad request. You may have to modify the request before making
  another call.'
- 204 Successful logon
- 400 Bad request  Invalid username or password
- 401 Unauthorized success
- 500 Operation failed
- '500: Failed operation'
- '204: The user is logged out of ThoughtSpot'
- '400: Indicates a bad request.'
- '401: Indicates an unauthorized request.'
- '403: Indicates forbidden access.'
- '415: Indicates an unsupported media type.'
- '500: Indicates an internal server error.'
- '204: Successful logon'
- '400: Bad request  Invalid username or password'
- '401: Unauthorized success'
- '500: Operation failed'
- '500: Failed operation or unauthorized request'
- Received HTTP response {status} with the message {statusText}
- HTTP response indicates an error from the API
- '404 Not Found: The requested resource does not exist.'
- '500 Internal Server Error: An unexpected error occurred on the server.'
- '400: Bad Request - Ensure the parameters are correct.'
- '401: Unauthorized - Check user authentication and permissions.'
- '400: Request failed due to unsupported operations or invalid input.'
- '401: Unauthorized error'
- '400: Incorrect input'
- '401 Unauthorized: Recheck username and password or secret key'
- '415: Indicates an unsupported media type. Check the media type specified in the
  Content-Type header.'
- '500: Indicates an internal server error. Check if the data format of the request
  is supported. Verify if the server is available and can process the request.'
- '401: Login failure/unauthorized request'
- '400: Invalid parameter value'
- '401: Unauthorized request or invalid token'
- '500: Token-based trusted authentication is not enabled on ThoughtSpot'
- '401: Logout failure/unauthorized request'
- '400: Invalid parameter'
- '403: Unauthorized request'
- '400: Invalid parameter values'
- '409: Username is not unique'
- '500: Incorrect password format'
- '204: Successful operation'
- '400: Invalid user ID'
- '500: Invalid email format'
- '204: Password update is successful.'
- '204: Password reset is successful.'
- '204: Successful update of a user profile'
- '204: The ownership of objects is successfully transferred.'
- '400: Invalid `fromName` or `toName`, or no user in the ThoughtSpot that matches
  the specified username.'
- '500: Invalid request'
- '400: Invalid parameter values Unauthorized user addition to an org'
- '401 Unauthorized: Check your admin privileges.'
- 500 Incorrect password format
- 400 Invalid user ID
- 500 Invalid email format
- 403 Unauthorized request
- '415: Invalid content type'
- '401: Unauthorized request'
- '500: Invalid parameter'
- '500: Invalid group or user ID'
- '500: Internal error'
- '200: Successful operation'
- '401 Unauthorized: Unauthorized request or invalid token'
- '204: Successful log out of user'
- 204 Successful operation
- 400 Invalid parameter
- '500: Invalid connection object ID'
- '400: Invalid connection ID'
- '401: Unauthorized request or wrong credentials'
- '500: Invalid connection ID'
- '401 Unauthorized: Invalid token'
- '400 Invalid parameter: Check request parameters'
- '403 Unauthorized request: Access denied'
- '204: Successful application of tag to a metadata object'
- '500: Invalid metadata object ID'
- '500: Invalid metadata type'
- '404: The requested resource could not be found'
- '401 Unauthorized: Unauthorized or wrong credentials'
- '500: The connection could not be created'
- '400: Invalid metadata subtype'
- '500 Invalid parameters: Invalid parameters'
- '400: Invalid object ID'
- '400: Invalid object or user ID'
- '401 Unauthorized: Unauthorized request or wrong credentials'
- '500 Invalid connection ID: The connection could not be deleted due to table dependencies'
- '401 Unauthorized: Unauthorized request'
- '404 Invalid action ID: Invalid action ID'
- '500 Request parsing error: Request parsing error'
- '400: Bad request'
- '401: Unauthorized - wrong credentials'
- '403: Forbidden - incorrect permissions'
- '404: Not found'
- '500: Internal server error'
- '500: Null object ID'
- '404: Invalid action ID'
- '400: Invalid query/data source'
- '400: Invalid Liveboard ID'
- '403: No read access for Liveboard'
- '404: Object not found'
- '500: The specified view is not materialized or the materialized view is not stale'
- '500: Invalid input or server error'
- 'CSP_ERROR: Check the CSP allowlist'
- 'NETWORK_ERROR: Verify the hosting URL is accessible'
- Error loading TS library
- '401 Unauthorized: You must obtain a new access token.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AuthType
  - EmbedEvent
  - AuthType.EmbeddedSSO
  - AuthType.TrustedAuthTokenCookieless
  - AuthType.TrustedAuthToken
  - AuthType.SAMLRedirect
  - AuthType.OIDCRedirect
  - AuthType.NONE
  - AuthType.Basic
  - SAML
  - IdP server
  - Privileges
  - Access Control
  - Data Security
  - AuthEvent
  - AuthFailureType
  - AuthStatus
  - AuthEventEmitter
  - TrustedAuth
  - SessionInterface
  - VizPoint
  - AppViewConfig
  - DATAMANAGEMENT
  - CAN_CREATE_OR_EDIT_CONNECTIONS
  - GetFullAccessTokenRequest
  - Token
  - User
  - ROLE_ADMINISTRATION
  - GROUP_ADMINISTRATION
  - SERVICE_ACCOUNT
  - OAUTH
  - IAM
  - EXTOAUTH
  - TS_HOST
  - TS_SECRET_KEY
  - SAML SSO
  - OpenID connect authentication
  - Basic authentication
  - Trusted authentication with tokens
client:
  base_url: https://{ThoughtSpot-Host}
  auth:
    type: oauth2
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
    Content-Type: application/json
source_metadata: null
