resources:
- name: random_quote
  endpoint:
    path: /api/quotes/random
    method: GET
    data_selector: ''
- name: quotes_by_author
  endpoint:
    path: /api/quotes/author/{author}
    method: GET
    data_selector: ''
- name: quotes_by_tag
  endpoint:
    path: /api/quotes/tag/{tag}
    method: GET
    data_selector: ''
- name: random_quote
  endpoint:
    path: /api/quotes/random
    method: GET
    data_selector: q
- name: quotes_by_author
  endpoint:
    path: /api/quotes/author/{author}
    method: GET
    data_selector: q
    params:
      author: '{author}'
- name: quotes_by_tag
  endpoint:
    path: /api/quotes/tag/{tag}
    method: GET
    data_selector: q
    params:
      tag: '{tag}'
- name: Paraphrase Text API
  endpoint:
    path: /paraphrase-text-api
    method: GET
- name: CV / Resume Parsing API
  endpoint:
    path: /cv-resume-parsing-api
    method: GET
- name: WebPDF
  endpoint:
    path: /web-pdf-api
    method: GET
- name: Vertopal
  endpoint:
    path: /vertopal-api
    method: GET
- name: URL to Markdown
  endpoint:
    path: /url-to-markdown-api
    method: GET
- name: RenderPDF.io
  endpoint:
    path: /render-pdf-io-api
    method: GET
- name: PDFEndpoint
  endpoint:
    path: /pdf-endpoint-api
    method: GET
- name: FastApi Simple Calculator
  endpoint:
    path: /fast-api-simple-calculator-api
    method: GET
- name: Convert RSS to JSON
  endpoint:
    path: /convert-rss-to-json-api
    method: GET
- name: Convert Word to PDF
  endpoint:
    path: /convert-word-to-pdf-api
    method: GET
- name: Zube
  endpoint:
    path: /zube-api
    method: GET
- name: WakaTime
  endpoint:
    path: /waka-time-api
    method: GET
- name: Restpack
  endpoint:
    path: /restpack-api
    method: GET
- name: PrexView
  endpoint:
    path: /prex-view-api
    method: GET
- name: Podio
  endpoint:
    path: /podio-api
    method: GET
- name: HTTP Status Dogs
  endpoint:
    path: /http-status-dogs-api
    method: GET
- name: Foxes
  endpoint:
    path: /foxes-api
    method: GET
- name: Dog Pics
  endpoint:
    path: /dog-pics-api
    method: GET
- name: Zoo Animals
  endpoint:
    path: /zoo-animals-api
    method: GET
- name: xeno-canto
  endpoint:
    path: /xeno-canto-api
    method: GET
- name: The Dog
  endpoint:
    path: /the-dog-api
    method: GET
- name: Shibe.Online
  endpoint:
    path: /shibe-online-api
    method: GET
- name: RescueGroups
  endpoint:
    path: /rescue-groups-api
    method: GET
- name: AdoptAPet
  endpoint:
    path: /adopt-a-pet-api
    method: GET
- name: RandomFox
  endpoint:
    path: /random-fox-api
    method: GET
- name: RandomDuck
  endpoint:
    path: /random-duck-api
    method: GET
- name: RandomDog
  endpoint:
    path: /random-dog-api
    method: GET
- name: PlaceKitten
  endpoint:
    path: /place-kitten-api
    method: GET
- name: PlaceDog
  endpoint:
    path: /place-dog-api
    method: GET
- name: PlaceBear
  endpoint:
    path: /place-bear-api
    method: GET
- name: Petfinder
  endpoint:
    path: /petfinder-api
    method: GET
- name: Movebank
  endpoint:
    path: /movebank-api
    method: GET
- name: MeowFacts
  endpoint:
    path: /meow-facts-api
    method: GET
- name: HTTP Status Dogs
  endpoint:
    path: /http-status-dogs-api
    method: GET
- name: Foxes
  endpoint:
    path: /foxes-api
    method: GET
- name: Dog Pics
  endpoint:
    path: /dog-pics-api
    method: GET
- name: Zoo Animals
  endpoint:
    path: /zoo-animals-api
    method: GET
- name: xeno-canto
  endpoint:
    path: /xeno-canto-api
    method: GET
- name: The Dog
  endpoint:
    path: /the-dog-api
    method: GET
- name: Shibe.Online
  endpoint:
    path: /shibe-online-api
    method: GET
- name: RescueGroups
  endpoint:
    path: /rescue-groups-api
    method: GET
- name: AdoptAPet
  endpoint:
    path: /adopt-a-pet-api
    method: GET
- name: RandomFox
  endpoint:
    path: /random-fox-api
    method: GET
- name: RandomDuck
  endpoint:
    path: /random-duck-api
    method: GET
- name: RandomDog
  endpoint:
    path: /random-dog-api
    method: GET
- name: PlaceKitten
  endpoint:
    path: /place-kitten-api
    method: GET
- name: PlaceDog
  endpoint:
    path: /place-dog-api
    method: GET
- name: PlaceBear
  endpoint:
    path: /place-bear-api
    method: GET
- name: Petfinder
  endpoint:
    path: /petfinder-api
    method: GET
- name: Movebank
  endpoint:
    path: /movebank-api
    method: GET
- name: MeowFacts
  endpoint:
    path: /meow-facts-api
    method: GET
- name: Nekosia API
  endpoint:
    path: /nekosia-api
    method: GET
- name: Wibu API
  endpoint:
    path: /wibu-api
    method: GET
- name: Waifu.it
  endpoint:
    path: /waifu-it-api
    method: GET
- name: NekosPro
  endpoint:
    path: /nekos-pro-api
    method: GET
- name: Nekos API
  endpoint:
    path: /nekos-api
    method: GET
- name: Dattebayo API
  endpoint:
    path: /dattebayo-api
    method: GET
- name: Waifu.pics
  endpoint:
    path: /waifu-pics-api
    method: GET
- name: Waifu.im
  endpoint:
    path: /waifu-im-api
    method: GET
- name: Trace Moe
  endpoint:
    path: /trace-moe-api
    method: GET
- name: Studio Ghibli
  endpoint:
    path: /studio-ghibli-api
    method: GET
- name: Shikimori
  endpoint:
    path: /shikimori-api
    method: GET
- name: NekosBest
  endpoint:
    path: /nekos-best-api
    method: GET
- name: MyAnimeList
  endpoint:
    path: /my-anime-list-api
    method: GET
- name: Mangapi
  endpoint:
    path: /mangapi-api
    method: GET
- name: MangaDex
  endpoint:
    path: /manga-dex-api
    method: GET
- name: Kitsu
  endpoint:
    path: /kitsu-api
    method: GET
- name: Jikan
  endpoint:
    path: /jikan-api
    method: GET
- name: Danbooru Anime
  endpoint:
    path: /danbooru-anime-api
    method: GET
- name: Generate Thumbnail from video
  endpoint:
    path: /generate-thumbnail-from-video-api
    method: GET
- name: Supernatural Quotes
  endpoint:
    path: /supernatural-quotes-api
    method: GET
- name: South Park Quotes
  endpoint:
    path: /south-park-quotes-api
    method: GET
- name: Shotstack
  endpoint:
    path: /shotstack-api
    method: GET
- name: Mux
  endpoint:
    path: /mux-api
    method: GET
- name: Harry Potter Characters
  endpoint:
    path: /harry-potter-characters-api
    method: GET
- name: Gcore Streaming
  endpoint:
    path: /gcore-streaming-api
    method: GET
- name: Buffy the Vampire Slayer and Angel
  endpoint:
    path: /buffy-the-vampire-slayer-and-angel-api
    method: GET
- name: YouTube
  endpoint:
    path: /you-tube-api
    method: GET
- name: Web Series Quotes Generator
  endpoint:
    path: /web-series-quotes-generator-api
    method: GET
- name: Watchmode
  endpoint:
    path: /watchmode-api
    method: GET
- name: Vimeo
  endpoint:
    path: /vimeo-api
    method: GET
- name: uNoGS
  endpoint:
    path: /u-no-gs-api
    method: GET
- name: TVMaze
  endpoint:
    path: /tv-maze-api
    method: GET
- name: TVDB
  endpoint:
    path: /tvdb-api
    method: GET
- name: Trakt
  endpoint:
    path: /trakt-api
    method: GET
- name: TrailerAddict
  endpoint:
    path: /trailer-addict-api
    method: GET
- name: TMDb
  endpoint:
    path: /tm-db-api
    method: GET
- name: Random Dad Joke
  endpoint:
    path: /random-dad-joke-api
    method: GET
- name: Puns
  endpoint:
    path: /puns-api
    method: GET
- name: Official Joke
  endpoint:
    path: /official-joke-api
    method: GET
- name: Keanu Reeves Whoa
  endpoint:
    path: /keanu-reeves-whoa-api
    method: GET
- name: JokeAPI
  endpoint:
    path: /joke-api
    method: GET
- name: Fuck Off As A Service
  endpoint:
    path: /fuck-off-as-a-service-api
    method: GET
- name: elonmu.sh
  endpoint:
    path: /elonmu-sh-api
    method: GET
- name: Yo Momma Jokes
  endpoint:
    path: /yo-momma-jokes-api
    method: GET
- name: Techy
  endpoint:
    path: /techy-api
    method: GET
- name: Random Useless Facts
  endpoint:
    path: /random-useless-facts-api
    method: GET
- name: NaMoMemes
  endpoint:
    path: /na-mo-memes-api
    method: GET
- name: Meme Maker
  endpoint:
    path: /meme-maker-api
    method: GET
- name: Imgflip
  endpoint:
    path: /imgflip-api
    method: GET
- name: Fun Fact
  endpoint:
    path: /fun-fact-api
    method: GET
- name: Excuser
  endpoint:
    path: /excuser-api
    method: GET
- name: Corporate Buzz Words
  endpoint:
    path: /corporate-buzz-words-api
    method: GET
- name: chucknorris.io
  endpoint:
    path: /chucknorris-io-api
    method: GET
- name: player_stats
  endpoint:
    path: /api/player/{username}/stats
    method: GET
    data_selector: response
- name: leaderboard
  endpoint:
    path: /api/leaderboard/{gameMode}
    method: GET
    data_selector: response
- name: game_details
  endpoint:
    path: /api/game/{gameId}
    method: GET
    data_selector: response
- name: characters
  endpoint:
    path: /characters
    method: GET
    data_selector: ''
- name: character_details
  endpoint:
    path: /characters/{characterId}
    method: GET
    data_selector: ''
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: ''
- name: item_details
  endpoint:
    path: /items/{itemId}
    method: GET
    data_selector: ''
- name: quests
  endpoint:
    path: /quests
    method: GET
    data_selector: ''
- name: quest_details
  endpoint:
    path: /quests/{questId}
    method: GET
    data_selector: ''
- name: get_all_movies
  endpoint:
    path: /videogames/{gameId}
    method: GET
- name: get_movie_details
  endpoint:
    path: /videogames/{gameId}
    method: GET
- name: get_all_tv_shows
  endpoint:
    path: /videogames/{gameId}
    method: GET
- name: get_tv_show_details
  endpoint:
    path: /videogames/{gameId}
    method: GET
- name: get_all_video_games
  endpoint:
    path: /videogames/{gameId}
    method: GET
- name: get_video_game_details
  endpoint:
    path: /videogames/{gameId}
    method: GET
- name: random_joke
  endpoint:
    path: /api/jokes/random
    method: GET
    data_selector: joke
- name: jokes_by_category
  endpoint:
    path: /api/jokes/category/{category}
    method: GET
    data_selector: jokes
    params:
      category: string
- name: jokes_by_keyword
  endpoint:
    path: /api/jokes/search
    method: GET
    data_selector: jokes
    params:
      keyword: string
- name: submit_joke
  endpoint:
    path: /api/jokes/submit
    method: POST
    data_selector: message
    params:
      joke: string
      category: string
- name: Swedavia Airports
  endpoint:
    path: /swedavia-airports-api
    method: GET
- name: Konkan Railway Live Train Position
  endpoint:
    path: /konkan-railway-live-train-position-api
    method: GET
- name: Fuel Prices at Spanish Gas Stations
  endpoint:
    path: /fuel-prices-at-spanish-gas-stations-api
    method: GET
- name: Flight Fare Search
  endpoint:
    path: /flight-fare-search-api
    method: GET
- name: facha
  endpoint:
    path: /facha-api
    method: GET
- name: adsbdb
  endpoint:
    path: /adsbdb-api
    method: GET
- name: Velib metropolis, Paris, France
  endpoint:
    path: /velib-metropolis-paris-france-api
    method: GET
- name: Uber
  endpoint:
    path: /uber-api
    method: GET
- name: Tripadvisor
  endpoint:
    path: /tripadvisor-api
    method: GET
- name: transport.rest
  endpoint:
    path: /transport-rest-api
    method: GET
- name: Transport for Washington, US
  endpoint:
    path: /transport-for-washington-us-api
    method: GET
- name: Transport for Vancouver, Canada
  endpoint:
    path: /transport-for-vancouver-canada-api
    method: GET
- name: Transport for United States
  endpoint:
    path: /transport-for-united-states-api
    method: GET
- name: Transport for UK
  endpoint:
    path: /transport-for-uk-api
    method: GET
- name: Transport for Toronto, Canada
  endpoint:
    path: /transport-for-toronto-canada-api
    method: GET
- name: Transport for The Netherlands
  endpoint:
    path: /transport-for-the-netherlands-api
    method: GET
- name: Transport for Switzerland
  endpoint:
    path: /transport-for-switzerland-api
    method: GET
- name: Transport for Sweden
  endpoint:
    path: /transport-for-sweden-api
    method: GET
- name: player_stats
  endpoint:
    path: /player/stats/{player_id}
    method: GET
    data_selector: ''
    params:
      player_id: int
- name: weapon_info
  endpoint:
    path: /weapon/info/{weapon_name}
    method: GET
    data_selector: ''
    params:
      weapon_name: string
- name: map_list
  endpoint:
    path: /maps
    method: GET
    data_selector: ''
    params: {}
- name: rank_distribution
  endpoint:
    path: /rank/distribution
    method: GET
    data_selector: ''
    params: {}
- name: characters
  endpoint:
    path: /characters
    method: GET
- name: character_by_id
  endpoint:
    path: /characters/{id}
    method: GET
- name: items
  endpoint:
    path: /items
    method: GET
- name: item_by_id
  endpoint:
    path: /items/{id}
    method: GET
- name: quests
  endpoint:
    path: /quests
    method: GET
- name: quest_by_id
  endpoint:
    path: /quests/{id}
    method: GET
- name: search_characters
  endpoint:
    path: /characters/search
    method: GET
- name: search_items
  endpoint:
    path: /items/search
    method: GET
- name: search_quests
  endpoint:
    path: /quests/search
    method: GET
- name: course_progress
  endpoint:
    path: /courses/:course_id/progress
    method: PATCH
    data_selector: message
- name: card_info
  endpoint:
    path: /card_info/{card_name}
    method: GET
- name: search_card_info
  endpoint:
    path: /search/card_info/{search_criteria}
    method: GET
- name: deck_info
  endpoint:
    path: /deck_info/{deck_name}
    method: GET
- name: search_deck_info
  endpoint:
    path: /search/deck_info/{search_criteria}
    method: GET
- name: banlist
  endpoint:
    path: /banlist
    method: GET
- name: Met Office DataPoint
  endpoint:
    path: /met-office-data-point-api
    method: GET
- name: Meteosource
  endpoint:
    path: /meteosource-api
    method: GET
- name: Korea Meteorological Administration
  endpoint:
    path: /korea-meteorological-administration-api
    method: GET
- name: Yandex.Weather
  endpoint:
    path: /yandex-weather-api
    method: GET
- name: Weatherbit
  endpoint:
    path: /weatherbit-api
    method: GET
- name: WeatherAPI
  endpoint:
    path: /weather-api
    method: GET
- name: Visual Crossing
  endpoint:
    path: /visual-crossing-api
    method: GET
- name: US Weather
  endpoint:
    path: /us-weather-api
    method: GET
- name: Tomorrow
  endpoint:
    path: /tomorrow-api
    method: GET
- name: Storm Glass
  endpoint:
    path: /storm-glass-api
    method: GET
- name: RainViewer
  endpoint:
    path: /rain-viewer-api
    method: GET
- name: QWeather
  endpoint:
    path: /q-weather-api
    method: GET
- name: OpenWeatherMap
  endpoint:
    path: /open-weather-map-api
    method: GET
- name: OpenUV
  endpoint:
    path: /open-uv-api
    method: GET
- name: openSenseMap
  endpoint:
    path: /open-sense-map-api
    method: GET
- name: Open-Meteo
  endpoint:
    path: /open-meteo-api
    method: GET
- name: Oikolab
  endpoint:
    path: /oikolab-api
    method: GET
- name: ODWeather
  endpoint:
    path: /od-weather-api
    method: GET
- name: latest_comic
  endpoint:
    path: /info.0.json
    method: GET
- name: specific_comic
  endpoint:
    path: /{comic_number}/info.0.json
    method: GET
    params:
      comic_number: integer
- name: random_comic
  endpoint:
    path: /info.0.json
    method: GET
- name: next_mcu_film
  endpoint:
    path: /next-mcu-film
    method: GET
    data_selector: next_film
- name: player_data
  endpoint:
    path: /wot/account/info
    method: GET
    data_selector: data
    params:
      account_id: account_id
- name: clan_data
  endpoint:
    path: /wgn/clans/list
    method: GET
    data_selector: data
    params:
      game: game
      search: search
- name: tank_data
  endpoint:
    path: /wot/encyclopedia/tanks
    method: GET
    data_selector: data
    params:
      tank_id: tank_id
- name: Vagalume
  endpoint:
    path: /vagalume-api
    method: GET
- name: TheAudioDB
  endpoint:
    path: /the-audio-db-api
    method: GET
- name: TasteDive
  endpoint:
    path: /taste-dive-api
    method: GET
- name: Spotify
  endpoint:
    path: /spotify-api
    method: GET
- name: SoundCloud
  endpoint:
    path: /sound-cloud-api
    method: GET
- name: Songsterr
  endpoint:
    path: /songsterr-api
    method: GET
- name: Songlink / Odesli
  endpoint:
    path: /songlink-odesli-api
    method: GET
- name: Songkick
  endpoint:
    path: /songkick-api
    method: GET
- name: Radio Browser
  endpoint:
    path: /radio-browser-api
    method: GET
- name: Phishin
  endpoint:
    path: /phishin-api
    method: GET
- name: Openwhyd
  endpoint:
    path: /openwhyd-api
    method: GET
- name: Napster
  endpoint:
    path: /napster-api
    method: GET
- name: Musixmatch
  endpoint:
    path: /musixmatch-api
    method: GET
- name: MusicBrainz
  endpoint:
    path: /music-brainz-api
    method: GET
- name: Mixcloud
  endpoint:
    path: /mixcloud-api
    method: GET
- name: Lyrics.ovh
  endpoint:
    path: /lyrics-ovh-api
    method: GET
- name: LastFm
  endpoint:
    path: /last-fm-api
    method: GET
- name: KSoft.Si Lyrics
  endpoint:
    path: /k-soft-si-lyrics-api
    method: GET
- name: player_stats
  endpoint:
    path: /player/{username}
    method: GET
    params:
      username: required
- name: clan_information
  endpoint:
    path: /clan/{id}
    method: GET
    params:
      id: required
- name: weapon_details
  endpoint:
    path: /weapon/{id}
    method: GET
    params:
      id: required
- name: search_players
  endpoint:
    path: /players/search
    method: GET
    params:
      query: required
- name: player_stats
  endpoint:
    path: /api/player/{username}/stats
    method: GET
    data_selector: username
- name: leaderboard
  endpoint:
    path: /api/leaderboard/{gameMode}
    method: GET
    data_selector: leaderboard
- name: game_details
  endpoint:
    path: /api/game/{gameId}
    method: GET
    data_selector: gameId
- name: player_stats
  endpoint:
    path: /search/:query
    method: GET
- name: match_history
  endpoint:
    path: /search/:query
    method: GET
- name: agent_details
  endpoint:
    path: /search/:query
    method: GET
- name: weapon_details
  endpoint:
    path: /search/:query
    method: GET
- name: map_details
  endpoint:
    path: /search/:query
    method: GET
- name: search_players
  endpoint:
    path: /search/:query
    method: GET
- name: characters
  endpoint:
    path: /characters
    method: GET
- name: character_details
  endpoint:
    path: /characters/{characterId}
    method: GET
- name: items
  endpoint:
    path: /items
    method: GET
- name: item_details
  endpoint:
    path: /items/{itemId}
    method: GET
- name: quests
  endpoint:
    path: /quests
    method: GET
- name: quest_details
  endpoint:
    path: /quests/{questId}
    method: GET
- name: daily_readings
  endpoint:
    path: /daily-readings
    method: GET
    data_selector: readings
    params:
      date: YYYY-MM-DD
- name: liturgical_calendar
  endpoint:
    path: /liturgical-calendar
    method: GET
    data_selector: events
    params:
      date: YYYY-MM-DD
- name: prayers
  endpoint:
    path: /prayers
    method: GET
    data_selector: prayers
    params:
      category: string
- name: video_game
  endpoint:
    path: /videogames/{gameId}
    method: GET
    data_selector: data
    params: {}
- name: player_stats
  endpoint:
    path: /api/player_stats/{username}
    method: GET
- name: leaderboard
  endpoint:
    path: /api/leaderboard/{criteria}
    method: GET
- name: game_history
  endpoint:
    path: /api/game_history/{username}
    method: GET
- name: Get Random Joke
  endpoint:
    path: /api/jokes/random
    method: GET
    data_selector: joke
- name: Get Jokes by Category
  endpoint:
    path: /api/jokes/category/{category}
    method: GET
    data_selector: jokes
    params:
      category: ''
- name: Get Jokes by Keyword
  endpoint:
    path: /api/jokes/search
    method: GET
    data_selector: jokes
    params:
      keyword: ''
- name: Submit a Joke
  endpoint:
    path: /api/jokes/submit
    method: POST
    data_selector: message
    params:
      joke: ''
      category: ''
- name: categories
  endpoint:
    path: /categories
    method: GET
- name: category_by_id
  endpoint:
    path: /categories/{category_id}
    method: GET
- name: packages
  endpoint:
    path: /packages
    method: GET
- name: create_package
  endpoint:
    path: /packages
    method: POST
- name: update_package
  endpoint:
    path: /packages/{package_id}
    method: PUT
- name: delete_package
  endpoint:
    path: /packages/{package_id}
    method: DELETE
- name: player_stats
  endpoint:
    path: /player/stats/{player_id}
    method: GET
    data_selector: player_id
- name: weapon_info
  endpoint:
    path: /weapon/info/{weapon_name}
    method: GET
    data_selector: weapon_name
- name: map_list
  endpoint:
    path: /maps
    method: GET
    data_selector: maps
- name: rank_distribution
  endpoint:
    path: /rank/distribution
    method: GET
    data_selector: rank_distribution
- name: card_details
  endpoint:
    path: /api/card/{card_id}
    method: GET
    data_selector: card_id
- name: set_details
  endpoint:
    path: /api/set/{set_id}
    method: GET
    data_selector: set_id
- name: card_prices
  endpoint:
    path: /api/card/{card_id}/prices
    method: GET
    data_selector: card_id
- name: search_cards
  endpoint:
    path: /api/cards/search
    method: GET
    data_selector: card_id
- name: characters
  endpoint:
    path: /characters
    method: GET
- name: character_by_id
  endpoint:
    path: /characters/{id}
    method: GET
- name: items
  endpoint:
    path: /items
    method: GET
- name: item_by_id
  endpoint:
    path: /items/{id}
    method: GET
- name: quests
  endpoint:
    path: /quests
    method: GET
- name: quest_by_id
  endpoint:
    path: /quests/{id}
    method: GET
- name: search_characters
  endpoint:
    path: /characters/search
    method: GET
- name: search_items
  endpoint:
    path: /items/search
    method: GET
- name: search_quests
  endpoint:
    path: /quests/search
    method: GET
- name: social_media
  endpoint:
    path: /social-media
    method: GET
- name: e_commerce
  endpoint:
    path: /e-commerce
    method: GET
- name: weather
  endpoint:
    path: /weather
    method: GET
- name: news
  endpoint:
    path: /news
    method: GET
- name: finance
  endpoint:
    path: /finance
    method: GET
- name: course_progress
  endpoint:
    path: /courses/:course_id/progress
    method: PATCH
    data_selector: message
- name: import_data
  endpoint:
    path: /import
    method: POST
    data_selector: status
    params: {}
- name: create_endpoint
  endpoint:
    path: /create-endpoint
    method: POST
    data_selector: status
    params: {}
- name: access_api_data
  endpoint:
    path: /api/products
    method: GET
    data_selector: products
    params: {}
- name: card_info
  endpoint:
    path: /card_info/{card_name}
    method: GET
- name: search_card_info
  endpoint:
    path: /search/card_info/{search_criteria}
    method: GET
- name: deck_info
  endpoint:
    path: /deck_info/{deck_name}
    method: GET
- name: search_deck_info
  endpoint:
    path: /search/deck_info/{search_criteria}
    method: GET
- name: banlist
  endpoint:
    path: /banlist
    method: GET
- name: list_virtual_machines
  endpoint:
    path: /api2/json/nodes/{node}/qemu
    method: GET
    data_selector: data
    params:
      node: node
- name: create_virtual_machine
  endpoint:
    path: /api2/json/nodes/{node}/qemu
    method: POST
    data_selector: data
    params:
      node: node
      vmid: vmid
- name: start_virtual_machine
  endpoint:
    path: /api2/json/nodes/{node}/qemu/{vmid}/status/start
    method: POST
    data_selector: data
    params:
      node: node
      vmid: vmid
- name: list_storage
  endpoint:
    path: /api2/json/nodes/{node}/storage
    method: GET
    data_selector: data
    params:
      node: node
- name: latest_comic
  endpoint:
    path: /info.0.json
    method: GET
    data_selector: ''
- name: specific_comic
  endpoint:
    path: /{comic_number}/info.0.json
    method: GET
    data_selector: ''
- name: random_comic
  endpoint:
    path: /info.0.json
    method: GET
    data_selector: ''
- name: next_mcu_film
  endpoint:
    path: /next-mcu-film
    method: GET
    data_selector: next_film
    params: {}
- name: explain
  endpoint:
    path: /explain
    method: GET
    data_selector: execution_plan
    params:
      query: The MySQL query to analyze.
- name: analyze
  endpoint:
    path: /analyze
    method: POST
    data_selector: optimization_suggestions
    params:
      query: The MySQL query to analyze.
- name: examples
  endpoint:
    path: /examples
    method: GET
    data_selector: examples
    params: {}
- name: player_data
  endpoint:
    path: /wot/account/info
    method: GET
    data_selector: data
    params:
      account_id: account_id
- name: clan_data
  endpoint:
    path: /wgn/clans/list
    method: GET
    data_selector: data
    params:
      game: game
      search: search
- name: tank_data
  endpoint:
    path: /wot/encyclopedia/tanks
    method: GET
    data_selector: data
    params:
      tank_id: tank_id
- name: calculate
  endpoint:
    path: /calculate
    method: GET
    data_selector: results
    params:
      expression: string
- name: history
  endpoint:
    path: /history
    method: GET
    data_selector: expressions
    params: {}
- name: save_history
  endpoint:
    path: /history
    method: POST
    data_selector: message
    params:
      expressions: array
- name: user_information
  endpoint:
    path: /api/document/{documentId}
    method: DELETE
- name: update_user_information
  endpoint:
    path: /api/document/{documentId}
    method: DELETE
- name: create_document
  endpoint:
    path: /api/document/{documentId}
    method: DELETE
- name: delete_document
  endpoint:
    path: /api/document/{documentId}
    method: DELETE
- name: player_stats
  endpoint:
    path: /player/{username}
    method: GET
    params:
      username: required
- name: clan_info
  endpoint:
    path: /clan/{id}
    method: GET
    params:
      id: required
- name: weapon_details
  endpoint:
    path: /weapon/{id}
    method: GET
    params:
      id: required
- name: search_players
  endpoint:
    path: /players/search
    method: GET
    params:
      query: required
- name: generate_seo_tags
  endpoint:
    path: /api/generate-seo-tags
    method: POST
- name: get_seo_tags
  endpoint:
    path: /api/get-seo-tags
    method: GET
- name: Get Player Stats
  endpoint:
    path: /search/:query
    method: GET
- name: Get Match History
  endpoint:
    path: /search/:query
    method: GET
- name: Get Agent Details
  endpoint:
    path: /search/:query
    method: GET
- name: Get Weapon Details
  endpoint:
    path: /search/:query
    method: GET
- name: Get Map Details
  endpoint:
    path: /search/:query
    method: GET
- name: Search Players
  endpoint:
    path: /search/:query
    method: GET
- name: stock_quote
  endpoint:
    path: /stock/quote
    method: GET
    data_selector: response
    params:
      symbol: string
- name: market_trends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: response
    params: {}
- name: financial_indicators
  endpoint:
    path: /financial/indicators
    method: GET
    data_selector: response
    params:
      symbol: string
- name: daily_readings
  endpoint:
    path: /daily-readings
    method: GET
    data_selector: readings
    params:
      date: YYYY-MM-DD
- name: liturgical_calendar
  endpoint:
    path: /liturgical-calendar
    method: GET
    data_selector: events
    params:
      date: YYYY-MM-DD
- name: prayers
  endpoint:
    path: /prayers
    method: GET
    data_selector: prayers
    params:
      category: string
- name: vendingmachines
  endpoint:
    path: /vendingmachines
    method: GET
- name: vending_machine_details
  endpoint:
    path: /vendingmachines/{id}
    method: GET
- name: process_transaction
  endpoint:
    path: /transactions
    method: POST
- name: vending_machine_inventory
  endpoint:
    path: /inventory/{id}
    method: GET
- name: update_inventory
  endpoint:
    path: /inventory/{id}
    method: PUT
- name: player_stats
  endpoint:
    path: /api/player_stats/{username}
    method: GET
    data_selector: ''
- name: leaderboard
  endpoint:
    path: /api/leaderboard/{criteria}
    method: GET
    data_selector: ''
- name: game_history
  endpoint:
    path: /api/game_history/{username}
    method: GET
    data_selector: ''
- name: exchange_rates
  endpoint:
    path: /exchange-rates
    method: GET
    data_selector: null
    params:
      base_currency: USD
      target_currency: null
- name: convert_currency
  endpoint:
    path: /convert-currency
    method: POST
    data_selector: null
    params:
      base_currency: null
      target_currency: null
      amount: null
- name: supported_currencies
  endpoint:
    path: /supported-currencies
    method: GET
    data_selector: null
    params: {}
- name: categories
  endpoint:
    path: /v1/categories
    method: GET
- name: category_by_id
  endpoint:
    path: /v1/categories/{category_id}
    method: GET
- name: packages
  endpoint:
    path: /v1/packages
    method: GET
- name: create_package
  endpoint:
    path: /v1/packages
    method: POST
- name: update_package
  endpoint:
    path: /v1/packages/{package_id}
    method: PUT
- name: delete_package
  endpoint:
    path: /v1/packages/{package_id}
    method: DELETE
- name: card
  endpoint:
    path: /api/card/{card_id}
    method: GET
    data_selector: records
- name: set
  endpoint:
    path: /api/set/{set_id}
    method: GET
    data_selector: records
- name: card_prices
  endpoint:
    path: /api/card/{card_id}/prices
    method: GET
    data_selector: records
- name: search_cards
  endpoint:
    path: /api/cards/search
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /api/user/{user_id}
    method: GET
    data_selector: user_id
    params:
      user_id: required
- name: order
  endpoint:
    path: /api/order
    method: POST
    data_selector: order_id
    params:
      user_id: required
      instrument: required
      quantity: required
      action: required
- name: portfolio
  endpoint:
    path: /api/portfolio/{user_id}
    method: GET
    data_selector: user_id
    params:
      user_id: required
- name: market_data
  endpoint:
    path: /api/market/{instrument}
    method: GET
    data_selector: instrument
    params:
      instrument: required
- name: property_details
  endpoint:
    path: /properties/{property_id}
    method: GET
- name: rental_rates
  endpoint:
    path: /properties/{property_id}/rental_rates
    method: GET
- name: occupancy_details
  endpoint:
    path: /properties/{property_id}/occupancy
    method: GET
- name: update_rental_rate
  endpoint:
    path: /properties/{property_id}/units/{unit_id}/rent
    method: PUT
- name: social_media
  endpoint:
    path: /social-media
    method: GET
- name: e_commerce
  endpoint:
    path: /e-commerce
    method: GET
- name: weather
  endpoint:
    path: /weather
    method: GET
- name: news
  endpoint:
    path: /news
    method: GET
- name: finance
  endpoint:
    path: /finance
    method: GET
- name: validate_bic
  endpoint:
    path: /api/validate-bic
    method: GET
    data_selector: valid
    params:
      bic: ABCDUS33XXX
- name: get_bank_info
  endpoint:
    path: /api/get-bank-info
    method: GET
    data_selector: bank_name
    params:
      bic: ABCDUS33XXX
- name: import_data
  endpoint:
    path: /import
    method: POST
    data_selector: status
    params: {}
- name: create_api_endpoint
  endpoint:
    path: /create-endpoint
    method: POST
    data_selector: status
    params: {}
- name: access_api_data
  endpoint:
    path: /api/products
    method: GET
    data_selector: products
    params: {}
- name: list_virtual_machines
  endpoint:
    path: /api2/json/nodes/{node}/qemu
    method: GET
    data_selector: data
    params:
      node: node
- name: create_virtual_machine
  endpoint:
    path: /api2/json/nodes/{node}/qemu
    method: POST
    data_selector: data
    params:
      node: node
      vmid: vmid
- name: start_virtual_machine
  endpoint:
    path: /api2/json/nodes/{node}/qemu/{vmid}/status/start
    method: POST
    data_selector: data
    params:
      node: node
      vmid: vmid
- name: list_storage
  endpoint:
    path: /api2/json/nodes/{node}/storage
    method: GET
    data_selector: data
    params:
      node: node
- name: featured_headlines
  endpoint:
    path: /api/headlines/featured
    method: GET
    data_selector: headlines
- name: search_articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: articles
    params:
      q: example
- name: news_by_topic
  endpoint:
    path: /api/articles/topic/sports
    method: GET
    data_selector: articles
- name: sources
  endpoint:
    path: /api/sources
    method: GET
    data_selector: sources
- name: explain
  endpoint:
    path: /explain
    method: GET
    data_selector: execution_plan
    params:
      query: query
- name: analyze
  endpoint:
    path: /analyze
    method: POST
    data_selector: optimization_suggestions
    params:
      query: query
- name: examples
  endpoint:
    path: /examples
    method: GET
    data_selector: examples
    params: {}
- name: calculate
  endpoint:
    path: /calculate
    method: GET
    data_selector: response
    params:
      expression: string
- name: history_post
  endpoint:
    path: /history
    method: POST
    data_selector: response
    params: {}
- name: history_get
  endpoint:
    path: /history
    method: GET
    data_selector: response
    params: {}
- name: real_time_stock_prices
  endpoint:
    path: /api/stock/realtime/:symbol
    method: GET
    data_selector: null
    params:
      symbol: :symbol
- name: historical_crypto_prices
  endpoint:
    path: /api/crypto/historical/:symbol
    method: GET
    data_selector: null
    params:
      symbol: :symbol
- name: technical_indicators
  endpoint:
    path: /api/stock/indicators/:symbol
    method: GET
    data_selector: null
    params:
      symbol: :symbol
- name: currency_conversion
  endpoint:
    path: /api/forex/convert
    method: GET
    data_selector: null
    params:
      from: from
      to: to
      amount: amount
- name: Get User Information
  endpoint:
    path: /api/document/{documentId}
    method: DELETE
- name: Update User Information
  endpoint:
    path: /api/document/{documentId}
    method: DELETE
- name: Create Document
  endpoint:
    path: /api/document/{documentId}
    method: DELETE
- name: Delete Document
  endpoint:
    path: /api/document/{documentId}
    method: DELETE
- name: search_news_articles
  endpoint:
    path: /search
    method: GET
    params:
      keyword: string
      source: string
      category: string
- name: top_headlines
  endpoint:
    path: /topheadlines
    method: GET
    params:
      country: string
      category: string
- name: news_sources
  endpoint:
    path: /sources
    method: GET
- name: news_categories
  endpoint:
    path: /categories
    method: GET
- name: generate_seo_tags
  endpoint:
    path: /api/generate-seo-tags
    method: POST
- name: get_seo_tags
  endpoint:
    path: /api/get-seo-tags
    method: GET
- name: stock_quote
  endpoint:
    path: /stock/quote
    method: GET
    data_selector: data
    params:
      symbol: string
- name: market_trends
  endpoint:
    path: /market/trends
    method: GET
    data_selector: data
    params: {}
- name: financial_indicators
  endpoint:
    path: /financial/indicators
    method: GET
    data_selector: data
    params:
      symbol: string
- name: user_profile
  endpoint:
    path: /api/profile
    method: GET
    data_selector: username
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
    data_selector: subscriptions
- name: newsletter
  endpoint:
    path: /api/newsletter
    method: POST
    data_selector: message
- name: analytics
  endpoint:
    path: /api/analytics
    method: GET
    data_selector: total_subscribers
- name: vending_machines
  endpoint:
    path: /vendingmachines
    method: GET
- name: vending_machine_details
  endpoint:
    path: /vendingmachines/{id}
    method: GET
- name: process_transaction
  endpoint:
    path: /transactions
    method: POST
- name: vending_machine_inventory
  endpoint:
    path: /inventory/{id}
    method: GET
- name: update_inventory
  endpoint:
    path: /inventory/{id}
    method: PUT
- name: top_headlines
  endpoint:
    path: /api/top-headlines
    method: GET
    params:
      sources: ''
      country: ''
      category: ''
- name: search_articles
  endpoint:
    path: /api/search
    method: GET
    params:
      q: ''
      sources: ''
      from: ''
      to: ''
- name: news_sources
  endpoint:
    path: /api/sources
    method: GET
- name: exchange_rates
  endpoint:
    path: /exchange-rates
    method: GET
    data_selector: exchange_rates
    params:
      base_currency: USD
      target_currency: ''
- name: convert_currency
  endpoint:
    path: /convert-currency
    method: POST
    data_selector: result
    params: {}
- name: supported_currencies
  endpoint:
    path: /supported-currencies
    method: GET
    data_selector: currencies
    params: {}
- name: top_stories
  endpoint:
    path: /topstories
    method: GET
- name: story_details
  endpoint:
    path: /story/:storyId
    method: GET
- name: user_details
  endpoint:
    path: /user/:userId
    method: GET
- name: item_details
  endpoint:
    path: /item/:itemId
    method: GET
- name: job_stories
  endpoint:
    path: /jobstories
    method: GET
- name: user_information
  endpoint:
    path: /api/user/{user_id}
    method: GET
    data_selector: user_id
    params:
      user_id: required
- name: place_order
  endpoint:
    path: /api/order
    method: POST
    data_selector: order_id
    params:
      user_id: required
      instrument: required
      quantity: required
      action: required
- name: portfolio
  endpoint:
    path: /api/portfolio/{user_id}
    method: GET
    data_selector: user_id
    params:
      user_id: required
- name: market_data
  endpoint:
    path: /api/market/{instrument}
    method: GET
    data_selector: instrument
    params:
      instrument: required
- name: search_resources
  endpoint:
    path: /v2/result
    method: GET
    params:
      q: '{query}'
      key: '{api_key}'
- name: retrieve_record
  endpoint:
    path: /v2/result/{result_id}
    method: GET
    params:
      key: '{api_key}'
- name: get_work_fulltext
  endpoint:
    path: /v2/work/fulltext/{nuc}/{work_id}
    method: GET
    params:
      key: '{api_key}'
- name: property_details
  endpoint:
    path: /properties/{property_id}
    method: GET
- name: rental_rates
  endpoint:
    path: /properties/{property_id}/rental_rates
    method: GET
- name: occupancy_details
  endpoint:
    path: /properties/{property_id}/occupancy
    method: GET
- name: update_rental_rate
  endpoint:
    path: /properties/{property_id}/units/{unit_id}/rent
    method: PUT
- name: releases
  endpoint:
    path: /releases
    method: GET
    data_selector: releases
    params:
      artist_id: optional
- name: validate_bic
  endpoint:
    path: /api/validate-bic
    method: GET
    data_selector: valid
    params:
      bic: bic
- name: get_bank_info
  endpoint:
    path: /api/get-bank-info
    method: GET
    data_selector: bank_name
    params:
      bic: bic
- name: user
  endpoint:
    path: /api/v1/users/:id
    method: GET
    data_selector: data
    params: {}
- name: user_permissions
  endpoint:
    path: /api/v1/users/:id/permissions
    method: PATCH
    data_selector: data
    params: {}
- name: security_alerts
  endpoint:
    path: /api/v1/security/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: featured_headlines
  endpoint:
    path: /api/headlines/featured
    method: GET
    data_selector: headlines
- name: search_articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: articles
- name: news_by_topic
  endpoint:
    path: /api/articles/topic/sports
    method: GET
    data_selector: articles
- name: sources
  endpoint:
    path: /api/sources
    method: GET
    data_selector: sources
- name: verify_email
  endpoint:
    path: /verify-email
    method: POST
    data_selector: result
    params:
      email: string
- name: check_deliverability
  endpoint:
    path: /check-deliverability
    method: POST
    data_selector: result
    params:
      email: string
- name: get_info
  endpoint:
    path: /get-info
    method: POST
    data_selector: result
    params:
      email: string
- name: real_time_stock_prices
  endpoint:
    path: /api/stock/realtime/:symbol
    method: GET
    data_selector: ''
- name: historical_crypto_prices
  endpoint:
    path: /api/crypto/historical/:symbol
    method: GET
    data_selector: ''
- name: technical_indicators
  endpoint:
    path: /api/stock/indicators/:symbol
    method: GET
    data_selector: ''
- name: currency_conversion
  endpoint:
    path: /api/forex/convert
    method: GET
    data_selector: ''
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: user_detail
  endpoint:
    path: /api/users/:id
    method: GET
- name: insights
  endpoint:
    path: /api/insights
    method: GET
- name: create_insight
  endpoint:
    path: /api/insights
    method: POST
- name: feedback
  endpoint:
    path: /api/feedback
    method: POST
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: send_notification
  endpoint:
    path: /notifications
    method: POST
- name: get_user_information
  endpoint:
    path: /users/:user_id
    method: GET
- name: list_subscriptions
  endpoint:
    path: /subscriptions/:user_id
    method: GET
- name: delete_subscription
  endpoint:
    path: /subscriptions/:subscription_id
    method: DELETE
- name: search_news_articles
  endpoint:
    path: /search
    method: GET
    params: {}
- name: top_headlines
  endpoint:
    path: /topheadlines
    method: GET
    params: {}
- name: news_sources
  endpoint:
    path: /sources
    method: GET
    params: {}
- name: news_categories
  endpoint:
    path: /categories
    method: GET
    params: {}
- name: user_profile
  endpoint:
    path: /api/profile
    method: GET
    data_selector: username
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
    data_selector: subscriptions
- name: newsletter
  endpoint:
    path: /api/newsletter
    method: POST
    data_selector: message
- name: analytics
  endpoint:
    path: /api/analytics
    method: GET
    data_selector: total_subscribers
- name: resend_message
  endpoint:
    path: /v1/resend/update
    method: POST
- name: resend_all_messages
  endpoint:
    path: /v1/resend/update
    method: POST
- name: resend_updated_message
  endpoint:
    path: /v1/resend/update
    method: POST
- name: company_information
  endpoint:
    path: /company/{domain}
    method: GET
    data_selector: ''
- name: top_headlines
  endpoint:
    path: /api/top-headlines
    method: GET
    data_selector: articles
- name: search_articles
  endpoint:
    path: /api/search
    method: GET
    data_selector: articles
- name: news_sources
  endpoint:
    path: /api/sources
    method: GET
    data_selector: sources
- name: cdn_resources
  endpoint:
    path: /cdn/resources
    method: GET
- name: purge_cache
  endpoint:
    path: /cdn/resources/{resource_id}/purge-cache
    method: POST
- name: ddos_protection_events
  endpoint:
    path: /cdn/resources/{resource_id}/ddos-protection/events
    method: GET
- name: top_stories
  endpoint:
    path: /topstories
    method: GET
- name: story_details
  endpoint:
    path: /story/:storyId
    method: GET
- name: user_details
  endpoint:
    path: /user/:userId
    method: GET
- name: item_details
  endpoint:
    path: /item/:itemId
    method: GET
- name: job_stories
  endpoint:
    path: /jobstories
    method: GET
- name: boards
  endpoint:
    path: /1/members/{user}/boards
    method: GET
    params:
      key: '{apiKey}'
      token: '{apiToken}'
- name: cards
  endpoint:
    path: /1/cards
    method: POST
    params:
      key: '{apiKey}'
      token: '{apiToken}'
      name: '{cardName}'
      idList: '{listId}'
- name: update_card
  endpoint:
    path: /1/cards/{cardId}
    method: PUT
    params:
      key: '{apiKey}'
      token: '{apiToken}'
      name: '{newName}'
- name: delete_card
  endpoint:
    path: /1/cards/{cardId}
    method: DELETE
    params:
      key: '{apiKey}'
      token: '{apiToken}'
- name: search_resources
  endpoint:
    path: /v2/result
    method: GET
    params:
      q: query
      key: api_key
- name: retrieve_record
  endpoint:
    path: /v2/result/{result_id}
    method: GET
    params:
      key: api_key
- name: get_work_fulltext
  endpoint:
    path: /v2/work/fulltext/{nuc}/{work_id}
    method: GET
    params:
      key: api_key
- name: email_finder
  endpoint:
    path: /api/email-finder/{domain}
    method: GET
    data_selector: email_addresses
    params:
      domain: required
- name: releases
  endpoint:
    path: /releases
    method: GET
    data_selector: releases
    params:
      artist_id: optional
- name: user_info
  endpoint:
    path: /api/v1/users/:id
    method: GET
    data_selector: response
    params:
      id: required
- name: update_user_permissions
  endpoint:
    path: /api/v1/users/:id/permissions
    method: PATCH
    data_selector: response
    params:
      id: required
      permissions: required
- name: security_alerts
  endpoint:
    path: /api/v1/security/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: verify_email
  endpoint:
    path: /verify-email
    method: POST
    data_selector: result
    params: {}
- name: check_deliverability
  endpoint:
    path: /check-deliverability
    method: POST
    data_selector: result
    params: {}
- name: get_info
  endpoint:
    path: /get-info
    method: POST
    data_selector: result
    params: {}
- name: tenders
  endpoint:
    path: /ua/api/tenders
    method: GET
    data_selector: tenders
    params: {}
- name: tender_details
  endpoint:
    path: /ua/api/tenders/{tenderId}
    method: GET
    data_selector: tender
    params: {}
- name: search_tenders
  endpoint:
    path: /ua/api/search
    method: GET
    data_selector: results
    params:
      query: search_query
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: user_details
  endpoint:
    path: /api/users/:id
    method: GET
- name: insights
  endpoint:
    path: /api/insights
    method: GET
- name: create_insight
  endpoint:
    path: /api/insights
    method: POST
- name: feedback
  endpoint:
    path: /api/feedback
    method: POST
- name: all_tenders
  endpoint:
    path: /tenders
    method: GET
    data_selector: tenders
    params: {}
- name: search_tenders
  endpoint:
    path: /tenders/search
    method: GET
    data_selector: results
    params:
      q: keywords
- name: tender_details
  endpoint:
    path: /tenders/{id}
    method: GET
    data_selector: ''
    params:
      id: The ID of the tender
- name: create_subscription
  endpoint:
    path: /subscriptions
    method: POST
- name: send_notification
  endpoint:
    path: /notifications
    method: POST
- name: get_user_information
  endpoint:
    path: /users/:user_id
    method: GET
- name: list_subscriptions
  endpoint:
    path: /subscriptions/:user_id
    method: GET
- name: delete_subscription
  endpoint:
    path: /subscriptions/:subscription_id
    method: DELETE
- name: active_tenders
  endpoint:
    path: /api/v1/active_tenders
    method: GET
    data_selector: tenders
    params: {}
- name: closed_tenders
  endpoint:
    path: /api/v1/closed_tenders
    method: GET
    data_selector: tenders
    params: {}
- name: upcoming_tenders
  endpoint:
    path: /api/v1/upcoming_tenders
    method: GET
    data_selector: tenders
    params: {}
- name: resend_message
  endpoint:
    path: /v1/resend/update
    method: POST
- name: resend_all_messages
  endpoint:
    path: /v1/resend/update
    method: POST
- name: resend_updated_message
  endpoint:
    path: /v1/resend/update
    method: POST
- name: generate_thumbnail
  endpoint:
    path: /generate
    method: POST
    data_selector: thumbnail_url
    params:
      video_url: The URL of the video file to generate the thumbnail from
- name: upload_and_generate_thumbnail
  endpoint:
    path: /upload
    method: POST
    data_selector: thumbnail_url
    params:
      video_file: The video file to upload and generate the thumbnail from
- name: company_information
  endpoint:
    path: /company/{domain}
    method: GET
    data_selector: ''
- name: random_quote
  endpoint:
    path: /api/quotes/random
    method: GET
    data_selector: quote
- name: quotes_by_character
  endpoint:
    path: /api/quotes/{character}
    method: GET
    data_selector: quotes
    params: {}
- name: search_quotes
  endpoint:
    path: /api/quotes/search
    method: GET
    data_selector: results
    params:
      q: '{keyword}'
- name: cdn_resources
  endpoint:
    path: /cdn/resources
    method: GET
- name: purge_cache
  endpoint:
    path: /cdn/resources/{resource_id}/purge-cache
    method: POST
- name: ddos_protection_events
  endpoint:
    path: /cdn/resources/{resource_id}/ddos-protection/events
    method: GET
- name: random_quote
  endpoint:
    path: /random
    method: GET
    data_selector: quote
- name: quotes_by_character
  endpoint:
    path: /quotes/{character}
    method: GET
    data_selector: quotes
- name: search_quotes
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      q: '{keyword}'
- name: create_video
  endpoint:
    path: /v1/edit
    method: POST
- name: render_video
  endpoint:
    path: /v1/render
    method: POST
- name: check_render_status
  endpoint:
    path: /v1/render/{jobId}
    method: GET
- name: get_video_metadata
  endpoint:
    path: /v1/video/{videoId}
    method: GET
- name: boards
  endpoint:
    path: /1/members/{user}/boards
    method: GET
    params:
      key: '{apiKey}'
      token: '{apiToken}'
- name: cards
  endpoint:
    path: /1/cards
    method: POST
    params:
      key: '{apiKey}'
      token: '{apiToken}'
      name: '{cardName}'
      idList: '{listId}'
- name: update_card
  endpoint:
    path: /1/cards/{cardId}
    method: PUT
    params:
      key: '{apiKey}'
      token: '{apiToken}'
      name: '{newName}'
- name: delete_card
  endpoint:
    path: /1/cards/{cardId}
    method: DELETE
    params:
      key: '{apiKey}'
      token: '{apiToken}'
- name: video
  endpoint:
    path: /videos
    method: POST
    data_selector: video_id
- name: characters
  endpoint:
    path: /api/characters
    method: GET
    data_selector: records
    params:
      house: house
- name: character_by_name
  endpoint:
    path: /api/characters/:name
    method: GET
    data_selector: records
    params:
      house: house
- name: characters_by_house
  endpoint:
    path: /api/house/:house
    method: GET
    data_selector: records
    params:
      house: house
- name: email_finder
  endpoint:
    path: /api/email-finder/{domain}
    method: GET
    data_selector: email_addresses
    params:
      domain: required
- name: available_streams
  endpoint:
    path: /api/streams
    method: GET
    data_selector: streams
- name: start_stream
  endpoint:
    path: /api/streams/{streamId}/start
    method: POST
- name: end_stream
  endpoint:
    path: /api/streams/{streamId}/end
    method: POST
- name: stream_details
  endpoint:
    path: /api/streams/{streamId}
    method: GET
- name: All Tenders
  endpoint:
    path: /ua/api/tenders
    method: GET
    data_selector: tenders
    params: {}
- name: Tender Details
  endpoint:
    path: /ua/api/tenders/{tenderId}
    method: GET
    data_selector: tender
    params: {}
- name: Search Tenders
  endpoint:
    path: /ua/api/search
    method: GET
    data_selector: results
    params: {}
- name: all_tenders
  endpoint:
    path: /tenders
    method: GET
    data_selector: tenders
- name: search_tenders
  endpoint:
    path: /tenders/search
    method: GET
    data_selector: results
    params:
      q: '{keywords}'
- name: tender_details
  endpoint:
    path: /tenders/{id}
    method: GET
    data_selector: tender
- name: detect_unsafe_text
  endpoint:
    path: /detect-unsafe-text
    method: POST
    data_selector: unsafe
    params:
      text: string
- name: filter_unsafe_text
  endpoint:
    path: /filter-unsafe-text
    method: POST
    data_selector: filtered_text
    params:
      text: string
- name: classify_text
  endpoint:
    path: /classify-text
    method: POST
    data_selector: classification
    params:
      text: string
- name: classify_multiple_texts
  endpoint:
    path: /classify-multiple-texts
    method: POST
    data_selector: classifications
    params:
      texts: array of strings
- name: active_tenders
  endpoint:
    path: /api/v1/active_tenders
    method: GET
    data_selector: tenders
    params: {}
- name: closed_tenders
  endpoint:
    path: /api/v1/closed_tenders
    method: GET
    data_selector: tenders
    params: {}
- name: upcoming_tenders
  endpoint:
    path: /api/v1/upcoming_tenders
    method: GET
    data_selector: tenders
    params: {}
- name: generate_thumbnail
  endpoint:
    path: /generate
    method: POST
    data_selector: thumbnail_url
    params:
      video_url: The URL of the video file to generate the thumbnail from
- name: upload_and_generate_thumbnail
  endpoint:
    path: /upload
    method: POST
    data_selector: thumbnail_url
    params:
      video_file: The video file to upload and generate the thumbnail from
- name: perform_fuzzy_text_search
  endpoint:
    path: /utility/search-fuzzy-text
    method: POST
    data_selector: results
    params: {}
- name: get_similarity_score
  endpoint:
    path: /utility/search-fuzzy-text/similarity
    method: POST
    data_selector: similarity_score
    params: {}
- name: add_custom_dictionary
  endpoint:
    path: /utility/search-fuzzy-text/dictionary
    method: POST
    data_selector: message
    params: {}
- name: translate_text
  endpoint:
    path: /translate
    method: POST
    data_selector: translated_text
- name: language_detection
  endpoint:
    path: /detect-language
    method: POST
    data_selector: detected_language
- name: random_quote
  endpoint:
    path: /api/quotes/random
    method: GET
    data_selector: quote
- name: quotes_by_character
  endpoint:
    path: /api/quotes/{character}
    method: GET
    data_selector: quotes
- name: search_quotes
  endpoint:
    path: /api/quotes/search
    method: GET
    data_selector: results
    params:
      q: '{keyword}'
- name: check_grammar_and_spelling
  endpoint:
    path: /api/proofread
    method: GET
    data_selector: text
    params: {}
- name: correct_punctuation
  endpoint:
    path: /api/punctuation
    method: GET
    data_selector: text
    params: {}
- name: check_sentence_structure
  endpoint:
    path: /api/sentence-structure
    method: GET
    data_selector: text
    params: {}
- name: random_quote
  endpoint:
    path: /random
    method: GET
    data_selector: ''
- name: quotes_by_character
  endpoint:
    path: /quotes/{character}
    method: GET
    data_selector: quotes
- name: search_quotes
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      q: '{keyword}'
- name: check_text
  endpoint:
    path: /v2/check
    method: POST
    data_selector: matches
    params:
      text: required
      language: optional
      enabledRules: optional
- name: list_available_languages
  endpoint:
    path: /v2/languages
    method: GET
    data_selector: languages
    params: {}
- name: get_detailed_information
  endpoint:
    path: /v2/info
    method: GET
    data_selector: language
    params:
      language: optional
      ruleId: optional
- name: create_video
  endpoint:
    path: /v1/edit
    method: POST
    data_selector: null
    params: {}
- name: render_video
  endpoint:
    path: /v1/render
    method: POST
    data_selector: null
    params: {}
- name: check_render_status
  endpoint:
    path: /v1/render/{jobId}
    method: GET
    data_selector: null
    params: {}
- name: get_video_metadata
  endpoint:
    path: /v1/video/{videoId}
    method: GET
    data_selector: null
    params: {}
- name: videos
  endpoint:
    path: /videos
    method: POST
    data_selector: video_id
- name: conversation
  endpoint:
    path: /api/conversation/:id
    method: GET
    data_selector: messages
- name: pdf
  endpoint:
    path: /api/pdf
    method: POST
    data_selector: pdf_url
- name: download_pdf
  endpoint:
    path: /api/pdf/:id
    method: GET
- name: characters
  endpoint:
    path: /api/characters
    method: GET
    data_selector: records
    params:
      house: house
- name: character_by_name
  endpoint:
    path: /api/characters/:name
    method: GET
    data_selector: records
    params:
      house: house
- name: characters_by_house
  endpoint:
    path: /api/house/:house
    method: GET
    data_selector: records
    params:
      house: house
- name: analyze_text
  endpoint:
    path: /analyze
    method: POST
- name: list_models
  endpoint:
    path: /models
    method: GET
- name: get_relations
  endpoint:
    path: /relations
    method: POST
- name: data
  endpoint:
    path: /api/data
    method: GET
    data_selector: ''
- name: update
  endpoint:
    path: /api/update
    method: POST
    data_selector: ''
- name: format
  endpoint:
    path: /api/format
    method: POST
    data_selector: ''
- name: parse
  endpoint:
    path: /api/parse
    method: POST
    data_selector: ''
- name: available_streams
  endpoint:
    path: /api/streams
    method: GET
    data_selector: streams
    params: {}
- name: start_stream
  endpoint:
    path: /api/streams/{streamId}/start
    method: POST
    data_selector: message
    params: {}
- name: end_stream
  endpoint:
    path: /api/streams/{streamId}/end
    method: POST
    data_selector: message
    params: {}
- name: stream_details
  endpoint:
    path: /api/streams/{streamId}
    method: GET
    data_selector: ''
    params: {}
- name: detect_unsafe_text
  endpoint:
    path: /detect-unsafe-text
    method: POST
- name: filter_unsafe_text
  endpoint:
    path: /filter-unsafe-text
    method: POST
- name: classify_text
  endpoint:
    path: /classify-text
    method: POST
- name: classify_multiple_texts
  endpoint:
    path: /classify-multiple-texts
    method: POST
- name: name
  endpoint:
    path: /api/name
    method: GET
    data_selector: name
- name: address
  endpoint:
    path: /api/address
    method: GET
    data_selector: address
- name: email
  endpoint:
    path: /api/email
    method: GET
    data_selector: email
- name: phone
  endpoint:
    path: /api/phone
    method: GET
    data_selector: phone
- name: company
  endpoint:
    path: /api/company
    method: GET
    data_selector: company
- name: username
  endpoint:
    path: /api/username
    method: GET
    data_selector: username
- name: fuzzy_text_search
  endpoint:
    path: /utility/search-fuzzy-text
    method: POST
    data_selector: results
    params: {}
- name: similarity_score
  endpoint:
    path: /utility/search-fuzzy-text/similarity
    method: POST
    data_selector: similarity_score
    params: {}
- name: add_custom_dictionary
  endpoint:
    path: /utility/search-fuzzy-text/dictionary
    method: POST
    data_selector: message
    params: {}
- name: generate_json_data
  endpoint:
    path: /generate
    method: POST
- name: available_data_types
  endpoint:
    path: /dataTypes
    method: GET
- name: sample_data
  endpoint:
    path: /sampleData
    method: GET
- name: translate_text
  endpoint:
    path: /translate
    method: POST
    data_selector: translated_text
    params: {}
- name: detect_language
  endpoint:
    path: /detect-language
    method: POST
    data_selector: detected_language
    params: {}
- name: random_name
  endpoint:
    path: /name
    method: GET
- name: random_address
  endpoint:
    path: /address
    method: GET
- name: random_phone
  endpoint:
    path: /phone
    method: GET
- name: random_email
  endpoint:
    path: /email
    method: GET
- name: random_image
  endpoint:
    path: /image
    method: GET
- name: check_grammar_and_spelling
  endpoint:
    path: /api/proofread
    method: GET
    data_selector: text
- name: correct_punctuation
  endpoint:
    path: /api/punctuation
    method: GET
    data_selector: text
- name: check_sentence_structure
  endpoint:
    path: /api/sentence-structure
    method: GET
    data_selector: text
- name: random_response
  endpoint:
    path: /api
    method: GET
    data_selector: answer
    params:
      force: 'yes'
- name: specific_response
  endpoint:
    path: /api?force=<yes|no>
    method: GET
    data_selector: answer
    params:
      force: 'yes'
- name: check_text
  endpoint:
    path: /v2/check
    method: POST
- name: list_available_languages
  endpoint:
    path: /v2/languages
    method: GET
- name: get_detailed_information
  endpoint:
    path: /v2/info
    method: GET
- name: random_commit_message
  endpoint:
    path: /index.txt
    method: GET
    data_selector: plain text
- name: conversation
  endpoint:
    path: /api/conversation/:id
    method: GET
    data_selector: messages
- name: pdf
  endpoint:
    path: /api/pdf
    method: POST
    data_selector: pdf_url
- name: download_pdf
  endpoint:
    path: /api/pdf/:id
    method: GET
- name: generate_uuid
  endpoint:
    path: /api/generate-uuid
    method: GET
    data_selector: uuid
- name: batch_generate_uuids
  endpoint:
    path: /api/batch-generate-uuids
    method: POST
    data_selector: uuids
- name: validate_uuid
  endpoint:
    path: /api/validate-uuid
    method: POST
    data_selector: valid
- name: analyze_text
  endpoint:
    path: /analyze
    method: POST
- name: list_models
  endpoint:
    path: /models
    method: GET
- name: get_relations
  endpoint:
    path: /relations
    method: POST
- name: job_postings
  endpoint:
    path: /job-postings
    method: GET
    data_selector: ''
- name: job_posting_by_id
  endpoint:
    path: /job-postings/{id}
    method: GET
    data_selector: ''
- name: search_job_postings
  endpoint:
    path: /job-postings/search
    method: GET
    data_selector: ''
- name: Retrieve JSON data
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
- name: Update JSON data
  endpoint:
    path: /api/update
    method: POST
    data_selector: message
- name: Format JSON data
  endpoint:
    path: /api/format
    method: POST
    data_selector: formatted_data
- name: Parse JSON data
  endpoint:
    path: /api/parse
    method: POST
    data_selector: parsed_data
- name: job_listings
  endpoint:
    path: /joblistings
    method: GET
    data_selector: ''
    params:
      location: optional
      job_title: optional
      industry: optional
- name: company_information
  endpoint:
    path: /companies/{company_id}
    method: GET
    data_selector: ''
    params:
      company_id: required
- name: salary_data
  endpoint:
    path: /salary
    method: GET
    data_selector: ''
    params:
      job_title: optional
      company_id: optional
- name: search_job_listings
  endpoint:
    path: /search
    method: POST
    data_selector: ''
    params:
      keywords: required
- name: job_details
  endpoint:
    path: /jobdetails/{job_id}
    method: GET
    data_selector: ''
    params:
      job_id: required
- name: name
  endpoint:
    path: /api/name
    method: GET
    data_selector: name
- name: address
  endpoint:
    path: /api/address
    method: GET
    data_selector: address
- name: email
  endpoint:
    path: /api/email
    method: GET
    data_selector: email
- name: phone
  endpoint:
    path: /api/phone
    method: GET
    data_selector: phone
- name: company
  endpoint:
    path: /api/company
    method: GET
    data_selector: company
- name: username
  endpoint:
    path: /api/username
    method: GET
    data_selector: username
- name: job_postings
  endpoint:
    path: /job-postings/search
    method: GET
    data_selector: ''
- name: generate_json_data
  endpoint:
    path: /generate
    method: POST
- name: available_data_types
  endpoint:
    path: /dataTypes
    method: GET
- name: sample_data
  endpoint:
    path: /sampleData
    method: GET
- name: job_listings
  endpoint:
    path: /job-listings
    method: GET
- name: job_application_status
  endpoint:
    path: /job-applications/:applicationId/status
    method: GET
- name: apply_to_job
  endpoint:
    path: /job-listings/:jobId/apply
    method: POST
- name: random_name
  endpoint:
    path: /name
    method: GET
- name: random_address
  endpoint:
    path: /address
    method: GET
- name: random_phone
  endpoint:
    path: /phone
    method: GET
- name: random_email
  endpoint:
    path: /email
    method: GET
- name: random_image
  endpoint:
    path: /image
    method: GET
- name: job_listings
  endpoint:
    path: /jobs-rss-feed
    method: GET
    data_selector: item
    params: {}
- name: search_job_listings
  endpoint:
    path: /jobs-rss-feed
    method: GET
    data_selector: item
    params:
      query: search_query
- name: random_response
  endpoint:
    path: /api
    method: GET
    data_selector: answer
    params:
      force: yes|no
- name: specific_response
  endpoint:
    path: /api
    method: GET
    data_selector: answer
    params:
      force: yes|no
- name: dataset_data
  endpoint:
    path: /dataset/{id}/data
    method: GET
    data_selector: data
- name: random_commit_message
  endpoint:
    path: /index.txt
    method: GET
    data_selector: message
    params: {}
- name: create_deadline
  endpoint:
    path: /api/deadlines/create
    method: POST
- name: get_deadlines
  endpoint:
    path: /api/deadlines
    method: GET
- name: update_deadline
  endpoint:
    path: /api/deadlines/:id/update
    method: PUT
- name: delete_deadline
  endpoint:
    path: /api/deadlines/:id/delete
    method: DELETE
- name: generate_uuid
  endpoint:
    path: /api/generate-uuid
    method: GET
    data_selector: uuid
- name: batch_generate_uuids
  endpoint:
    path: /api/batch-generate-uuids
    method: POST
    data_selector: uuids
- name: validate_uuid
  endpoint:
    path: /api/validate-uuid
    method: POST
    data_selector: valid
- name: cities
  endpoint:
    path: /cities
    method: GET
    data_selector: records
- name: tourist_attractions
  endpoint:
    path: /cities/{cityId}/touristAttractions
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: records
- name: Get All Job Postings
  endpoint:
    path: /job-postings
    method: GET
    data_selector: ''
- name: Get Job Posting by ID
  endpoint:
    path: /job-postings/{id}
    method: GET
    data_selector: ''
- name: Search Job Postings
  endpoint:
    path: /job-postings/search
    method: GET
    data_selector: ''
    params:
      query: ''
- name: assistance
  endpoint:
    path: /api/v2/assistance
    method: GET
    data_selector: data
    params:
      date_range: start_date,end_date
      program_name: program_name
      recipient_name: recipient_name
- name: job_listings
  endpoint:
    path: /joblistings
    method: GET
    params:
      location: optional
      job_title: optional
      industry: optional
- name: company_information
  endpoint:
    path: /companies/{company_id}
    method: GET
    params:
      company_id: required
- name: salary_data
  endpoint:
    path: /salary
    method: GET
    params:
      job_title: optional
      company_id: optional
- name: search_job_listings
  endpoint:
    path: /search
    method: POST
    params:
      keywords: required
- name: job_details
  endpoint:
    path: /jobdetails/{job_id}
    method: GET
    params:
      job_id: required
- name: filing_history
  endpoint:
    path: /company/{company_number}/filing-history
    method: GET
    data_selector: data
- name: job_postings
  endpoint:
    path: /job-postings/search
    method: GET
    data_selector: ''
- name: timezones
  endpoint:
    path: /api/timezones
    method: GET
    data_selector: ''
- name: timezone_details
  endpoint:
    path: /api/timezones/{timezone_id}
    method: GET
    data_selector: ''
- name: search_timezones
  endpoint:
    path: /api/timezones/search
    method: GET
    data_selector: ''
- name: job_listings
  endpoint:
    path: /job-listings
    method: GET
    data_selector: records
    params: {}
- name: apply_to_job
  endpoint:
    path: /job-listings/:jobId/apply
    method: POST
    data_selector: application
    params:
      jobId: required
      name: required
      email: required
      resume: optional
- name: job_application_status
  endpoint:
    path: /job-applications/:applicationId/status
    method: GET
    data_selector: status
    params:
      applicationId: required
- name: geolocation_by_ip
  endpoint:
    path: /api/ip/{ip_address}
    method: GET
- name: geolocation_by_city
  endpoint:
    path: /api/city/{city_name}
    method: GET
- name: geolocation_by_country
  endpoint:
    path: /api/country/{country_code}
    method: GET
- name: geolocation_by_coordinates
  endpoint:
    path: /api/coordinates
    method: GET
- name: nearby_locations
  endpoint:
    path: /api/nearby
    method: GET
- name: job_listings
  endpoint:
    path: /jobs-rss-feed
    method: GET
    data_selector: channel.item
    params: {}
- name: search_job_listings
  endpoint:
    path: /jobs-rss-feed
    method: GET
    data_selector: channel.item
    params:
      query: search_query
- name: zip_code_info
  endpoint:
    path: /api/zip-codes/{zip_code}
    method: GET
    data_selector: zip_codes
    params: {}
- name: zip_codes_by_city
  endpoint:
    path: /api/city/{city}/zip-codes
    method: GET
    data_selector: zip_codes
    params: {}
- name: zip_codes_by_state
  endpoint:
    path: /api/state/{state}/zip-codes
    method: GET
    data_selector: zip_codes
    params: {}
- name: dataset_data
  endpoint:
    path: /dataset/{id}/data
    method: GET
    data_selector: data
- name: ip_info
  endpoint:
    path: /api/ipinfo/{ip_address}
    method: GET
    data_selector: ip
- name: ip_reputation
  endpoint:
    path: /api/iprep/{ip_address}
    method: GET
    data_selector: ip
- name: ip_geolocation
  endpoint:
    path: /api/ipgeo/{ip_address}
    method: GET
    data_selector: ip
- name: create_deadline
  endpoint:
    path: /api/deadlines/create
    method: POST
- name: get_deadlines
  endpoint:
    path: /api/deadlines
    method: GET
- name: update_deadline
  endpoint:
    path: /api/deadlines/:id/update
    method: PUT
- name: delete_deadline
  endpoint:
    path: /api/deadlines/:id/delete
    method: DELETE
- name: geolocation_data_by_ip
  endpoint:
    path: /ip/{ip_address}
    method: GET
    data_selector: ''
- name: geolocation_data_by_domain
  endpoint:
    path: /domain/{domain_name}
    method: GET
    data_selector: ''
- name: geolocation_data_by_asn
  endpoint:
    path: /asn/{asn}
    method: GET
    data_selector: ''
- name: cities
  endpoint:
    path: /cities
    method: GET
    data_selector: ''
- name: tourist_attractions
  endpoint:
    path: /cities/{cityId}/touristAttractions
    method: GET
    data_selector: ''
- name: local_events
  endpoint:
    path: /events
    method: GET
    data_selector: ''
- name: location_lookup
  endpoint:
    path: /location-lookup
    method: POST
    data_selector: ip
- name: carrier_detection
  endpoint:
    path: /carrier-detection
    method: POST
    data_selector: phone
- name: timezone
  endpoint:
    path: /timezone
    method: POST
    data_selector: ip
- name: assistance
  endpoint:
    path: /api/v2/assistance
    method: GET
    data_selector: records
    params:
      date_range: start_date,end_date
      program_name: ''
      recipient_name: ''
- name: network_devices
  endpoint:
    path: /api/network-devices
    method: GET
    params:
      network_id: required
      limit: optional
      offset: optional
- name: analyze_network_traffic
  endpoint:
    path: /api/analyze-network-traffic
    method: POST
    data_selector: requestBody
- name: network_monitoring
  endpoint:
    path: /api/network-monitoring
    method: GET
    params:
      network_id: required
- name: filing_history
  endpoint:
    path: /company/{company_number}/filing-history
    method: GET
    params:
      company_number: required
- name: Get All HTTP Codes
  endpoint:
    path: /api/all
    method: GET
    data_selector: status_codes
- name: Get HTTP Code by Code
  endpoint:
    path: /api/code/:code_number
    method: GET
- name: Search HTTP Codes by Description
  endpoint:
    path: /api/search
    method: GET
    params:
      description: :keyword
- name: timezones
  endpoint:
    path: /api/timezones
    method: GET
    data_selector: records
- name: timezone_details
  endpoint:
    path: /api/timezones/{timezone_id}
    method: GET
    data_selector: records
- name: search_timezones
  endpoint:
    path: /api/timezones/search
    method: GET
    data_selector: records
- name: instructor_courses
  endpoint:
    path: /instructor/courses
    method: GET
    params:
      instructor_id: required
- name: instructor_students
  endpoint:
    path: /instructor/students
    method: GET
    params:
      instructor_id: required
- name: update_course_details
  endpoint:
    path: /instructor/courses/:course_id
    method: PUT
    params:
      course_id: required
- name: retrieve_geolocation_data_by_ip
  endpoint:
    path: /api/ip/{ip_address}
    method: GET
- name: retrieve_geolocation_data_by_city
  endpoint:
    path: /api/city/{city_name}
    method: GET
- name: retrieve_geolocation_data_by_country
  endpoint:
    path: /api/country/{country_code}
    method: GET
- name: retrieve_geolocation_data_by_latitude_and_longitude
  endpoint:
    path: /api/coordinates
    method: GET
- name: retrieve_nearby_locations
  endpoint:
    path: /api/nearby
    method: GET
- name: zip_code_info
  endpoint:
    path: /api/zip-codes/{zip_code}
    method: GET
    data_selector: zip_code
- name: zip_codes_by_city
  endpoint:
    path: /api/city/{city}/zip-codes
    method: GET
    data_selector: zip_codes
- name: zip_codes_by_state
  endpoint:
    path: /api/state/{state}/zip-codes
    method: GET
    data_selector: zip_codes
- name: assessments
  endpoint:
    path: /v1/assessments
    method: GET
- name: create_assessment
  endpoint:
    path: /v1/assessments
    method: POST
- name: assessment_results
  endpoint:
    path: /v1/assessments/{assessment_id}/results
    method: GET
- name: decks
  endpoint:
    path: /v1/decks
    method: GET
- name: traits
  endpoint:
    path: /v1/assessments/{assessment_id}/traits
    method: GET
- name: slides
  endpoint:
    path: /v1/assessments/{assessment_id}/slides
    method: GET
- name: personality_types
  endpoint:
    path: /v1/assessments/{assessment_id}/personality_types
    method: GET
- name: personality_traits
  endpoint:
    path: /v1/assessments/{assessment_id}/personality_traits
    method: GET
- name: ip_info
  endpoint:
    path: /api/ipinfo/{ip_address}
    method: GET
    data_selector: records
    params:
      ip_address: required
- name: ip_reputation
  endpoint:
    path: /api/iprep/{ip_address}
    method: GET
    data_selector: records
    params:
      ip_address: required
- name: ip_geolocation
  endpoint:
    path: /api/ipgeo/{ip_address}
    method: GET
    data_selector: records
    params:
      ip_address: required
- name: random_quote
  endpoint:
    path: /quote/random
    method: GET
    data_selector: quote
- name: search_quotes
  endpoint:
    path: /quote/search
    method: GET
    data_selector: quotes
- name: quotes_by_author
  endpoint:
    path: /quote/author/{author_name}
    method: GET
    data_selector: quotes
- name: quotes_by_category
  endpoint:
    path: /quote/category/{category_name}
    method: GET
    data_selector: quotes
- name: quote_of_the_day
  endpoint:
    path: /quoteoftheday
    method: GET
    data_selector: quote
- name: geolocation_by_ip
  endpoint:
    path: /ip/{ip_address}
    method: GET
    data_selector: response
    params: {}
- name: geolocation_by_domain
  endpoint:
    path: /domain/{domain_name}
    method: GET
    data_selector: response
    params: {}
- name: geolocation_by_asn
  endpoint:
    path: /asn/{asn}
    method: GET
    data_selector: response
    params: {}
- name: random_quote
  endpoint:
    path: /quote/random
    method: GET
    data_selector: quote
- name: search_quote
  endpoint:
    path: /quote/search
    method: GET
    data_selector: quotes
    params:
      keyword: ''
- name: specific_quote
  endpoint:
    path: /quote/{quote_id}
    method: GET
    data_selector: quote
    params:
      quote_id: ''
- name: location_lookup
  endpoint:
    path: /location-lookup
    method: POST
    data_selector: ip
    params: {}
- name: carrier_detection
  endpoint:
    path: /carrier-detection
    method: POST
    data_selector: phone
    params: {}
- name: timezone
  endpoint:
    path: /timezone
    method: POST
    data_selector: ip
    params: {}
- name: random_quote
  endpoint:
    path: /api/quotes/random
    method: GET
    data_selector: quotes
- name: quotes_by_author
  endpoint:
    path: /api/quotes/authors/{author}
    method: GET
    data_selector: quotes
- name: all_quotes
  endpoint:
    path: /api/quotes
    method: GET
    data_selector: quotes
- name: network_devices
  endpoint:
    path: /api/network-devices
    method: GET
    params:
      network_id: required
      limit: optional
      offset: optional
- name: analyze_network_traffic
  endpoint:
    path: /api/analyze-network-traffic
    method: POST
- name: network_monitoring
  endpoint:
    path: /api/network-monitoring
    method: GET
    params:
      network_id: required
- name: random_quote
  endpoint:
    path: /quotes/random
    method: GET
    data_selector: quoteText
- name: quotes_by_category
  endpoint:
    path: /quotes/category/{category}
    method: GET
    data_selector: quotes
- name: quotes_by_author
  endpoint:
    path: /quotes/author/{author}
    method: GET
    data_selector: quotes
- name: all_http_codes
  endpoint:
    path: /api/all
    method: GET
    data_selector: status_codes
- name: http_code_by_code
  endpoint:
    path: /api/code/:code_number
    method: GET
- name: search_http_codes
  endpoint:
    path: /api/search
    method: GET
- name: random_quote
  endpoint:
    path: /api/quotes/random
    method: GET
    data_selector: quote
- name: search_quotes
  endpoint:
    path: /api/quotes/search
    method: GET
    data_selector: quotes
    params:
      keyword: opportunity
- name: list_all_quotes
  endpoint:
    path: /api/quotes
    method: GET
    data_selector: quotes
- name: instructor_courses
  endpoint:
    path: /instructor/courses
    method: GET
    params:
      instructor_id: required
- name: instructor_students
  endpoint:
    path: /instructor/students
    method: GET
    params:
      instructor_id: required
- name: update_course_details
  endpoint:
    path: /instructor/courses/:course_id
    method: PUT
    params:
      course_id: required
- name: random_quote
  endpoint:
    path: /quotes/random
    method: GET
    data_selector: ''
- name: search_quotes
  endpoint:
    path: /quotes/search
    method: GET
    data_selector: ''
- name: quotes_by_author
  endpoint:
    path: /quotes/author/{author}
    method: GET
    data_selector: ''
- name: user_details
  endpoint:
    path: /v1/me
    method: GET
- name: user_publications
  endpoint:
    path: /v1/users/{userId}/publications
    method: GET
- name: create_post
  endpoint:
    path: /v1/users/{userId}/posts
    method: POST
- name: assessments
  endpoint:
    path: /v1/assessments
    method: GET
- name: create_assessment
  endpoint:
    path: /v1/assessments
    method: POST
- name: assessment_results
  endpoint:
    path: /v1/assessments/{assessment_id}/results
    method: GET
- name: decks
  endpoint:
    path: /v1/decks
    method: GET
- name: traits
  endpoint:
    path: /v1/assessments/{assessment_id}/traits
    method: GET
- name: slides
  endpoint:
    path: /v1/assessments/{assessment_id}/slides
    method: GET
- name: personality_types
  endpoint:
    path: /v1/assessments/{assessment_id}/personality_types
    method: GET
- name: personality_traits
  endpoint:
    path: /v1/assessments/{assessment_id}/personality_traits
    method: GET
- name: quotes
  endpoint:
    path: /quotes
    method: GET
- name: quotes_by_category
  endpoint:
    path: /quotes/{category}
    method: GET
- name: contribute_quote
  endpoint:
    path: /quotes
    method: POST
- name: categories
  endpoint:
    path: /categories
    method: GET
- name: random_quote
  endpoint:
    path: /quote/random
    method: GET
    data_selector: ''
- name: search_quotes
  endpoint:
    path: /quote/search
    method: GET
    data_selector: ''
    params:
      q: '{search_query}'
- name: quotes_by_author
  endpoint:
    path: /quote/author/{author_name}
    method: GET
    data_selector: ''
- name: quotes_by_category
  endpoint:
    path: /quote/category/{category_name}
    method: GET
    data_selector: ''
- name: quote_of_the_day
  endpoint:
    path: /quoteoftheday
    method: GET
    data_selector: ''
- name: random_quote
  endpoint:
    path: /api
    method: GET
    data_selector: quote
    params: {}
- name: multiple_quotes
  endpoint:
    path: /api/quotes/[number]
    method: GET
    data_selector: quotes
    params: {}
- name: random_quote
  endpoint:
    path: /quote/random
    method: GET
    data_selector: quote
- name: search_quote
  endpoint:
    path: /quote/search
    method: GET
    data_selector: quotes
    params:
      keyword: required
- name: specific_quote
  endpoint:
    path: /quote/{quote_id}
    method: GET
    data_selector: quote
    params:
      quote_id: required
- name: random_joke
  endpoint:
    path: /jokes/random
    method: GET
    data_selector: joke
- name: search_jokes
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      term: '{keyword}'
- name: joke_by_id
  endpoint:
    path: /jokes/{id}
    method: GET
    data_selector: joke
- name: suggestions
  endpoint:
    path: /suggest
    method: GET
    data_selector: suggestions
    params:
      term: '{keyword}'
- name: random_quote
  endpoint:
    path: /api/quotes/random
    method: GET
    data_selector: ID
- name: quotes_by_author
  endpoint:
    path: /api/quotes/authors/{author}
    method: GET
    data_selector: quotes
- name: all_quotes
  endpoint:
    path: /api/quotes
    method: GET
    data_selector: quotes
- name: random_quote
  endpoint:
    path: /?method=getQuote&lang=en&format=json
    method: GET
    data_selector: ''
- name: quote_by_category
  endpoint:
    path: /?method=getQuote&lang=en&format=json&key=motivational
    method: GET
    data_selector: ''
- name: quote_in_specific_language
  endpoint:
    path: /?method=getQuote&lang=es&format=json
    method: GET
    data_selector: ''
- name: random_quote_with_additional_info
  endpoint:
    path: /?method=getQuote&lang=en&format=json&key=random&rand=1578431
    method: GET
    data_selector: ''
- name: random_quote
  endpoint:
    path: /quotes/random
    method: GET
    data_selector: quoteText
- name: quotes_by_category
  endpoint:
    path: /quotes/category/{category}
    method: GET
    data_selector: quotes
- name: quotes_by_author
  endpoint:
    path: /quotes/author/{author}
    method: GET
    data_selector: quotes
- name: random_quote
  endpoint:
    path: /api/quotes/random
    method: GET
    data_selector: quote
- name: search_quotes
  endpoint:
    path: /api/quotes/search
    method: GET
    data_selector: quotes
    params:
      keyword: opportunity
- name: list_all_quotes
  endpoint:
    path: /api/quotes
    method: GET
    data_selector: quotes
- name: random_quote
  endpoint:
    path: /quotes/random
    method: GET
    data_selector: id
- name: search_quotes
  endpoint:
    path: /quotes/search
    method: GET
    data_selector: id
    params:
      query: '{keyword}'
- name: quotes_by_author
  endpoint:
    path: /quotes/author/{author}
    method: GET
    data_selector: id
- name: Retrieve User Details
  endpoint:
    path: /v1/me
    method: GET
- name: List User's Publications
  endpoint:
    path: /v1/users/{userId}/publications
    method: GET
- name: Create a Post
  endpoint:
    path: /v1/users/{userId}/posts
    method: POST
- name: quotes
  endpoint:
    path: /quotes
    method: GET
- name: quotes_by_category
  endpoint:
    path: /quotes/{category}
    method: GET
- name: contribute_quote
  endpoint:
    path: /quotes
    method: POST
- name: categories
  endpoint:
    path: /categories
    method: GET
- name: random_quote
  endpoint:
    path: /api
    method: GET
    data_selector: quote
    params: {}
- name: multiple_quotes
  endpoint:
    path: /api/quotes/[number]
    method: GET
    data_selector: quotes
    params: {}
- name: random_joke
  endpoint:
    path: /jokes/random
    method: GET
    data_selector: joke
- name: search_jokes
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      term: '{keyword}'
- name: joke_by_id
  endpoint:
    path: /jokes/{id}
    method: GET
    data_selector: joke
- name: search_term_suggestions
  endpoint:
    path: /suggest
    method: GET
    data_selector: suggestions
    params:
      term: '{keyword}'
- name: random_quote
  endpoint:
    path: /api/1.0/?method=getQuote&lang=en&format=json
    method: GET
    data_selector: quoteText
- name: quote_by_category
  endpoint:
    path: /api/1.0/?method=getQuote&lang=en&format=json&key=motivational
    method: GET
    data_selector: quoteText
- name: quote_in_language
  endpoint:
    path: /api/1.0/?method=getQuote&lang=es&format=json
    method: GET
    data_selector: quoteText
- name: random_quote_with_info
  endpoint:
    path: /api/1.0/?method=getQuote&lang=en&format=json&key=random&rand=1578431
    method: GET
    data_selector: quoteText
notes:
- OAuth 2.0 is the industry-standard protocol for authorization.
- Supports HTTPs
- Supports CORS
- Rate limit of 100 requests per minute per user.
- HTTPs is required
- CORS is not supported
- All endpoints require authorization via API key.
- Users are required to include their API key in the request headers for authentication.
- The API key can be obtained from RapidAPI.
- HTTPs is supported
- CORS is enabled
- Rate-limiting may be enforced to prevent abuse of the API.
- The Finlight API has a rate limit of 100 requests per minute per API key. Exceeding
  this limit will result in a 429 Too Many Requests response.
- The Trove API has rate limits in place to prevent abuse. By default, users can make
  up to 5,000 requests per day.
- The Finlight API has a rate limit of 100 requests per minute per API key.
- Each request to the API must include the API key in the headers.
- Users are limited to a certain number of requests per minute.
- The API has a rate limit of 100 requests per hour per user to prevent abuse.
- To access the Company Enrich API, users must obtain an API key by signing up on
  the Company Enrich website.
- The South Park Quotes API is a read-only API that provides access to quotes from
  the show.
- All responses are in JSON format.
- 'HTTPs: Yes'
- 'CORS: Yes'
- There is no rate limit set for accessing the API.
- Rate limiting and abuse detection mechanisms are in place to ensure fair usage of
  the service.
- Provides access to data on federal spending in the United States
- 'CORS: No'
- Uses OAuth2 for authentication
- All endpoints require authentication using an API key which can be obtained by registering
  with Geolocated API.
- The API enforces rate limiting to ensure fair usage for all users.
- The kimiquotes API does not require authentication for accessing quotes.
- The Kanye.rest API has a rate limit of 10 requests per minute per IP address.
- The API is publicly available and does not require authentication.
- The API allows users to retrieve random quotes, as well as quotes based on specific
  categories.
- All responses from the Forismatic API are in JSON format.
- Rate limit of 10 requests per minute for the Forismatic API.
errors:
- '404 Not Found: The requested resource could not be found.'
- '500 Internal Server Error: An unexpected error occurred on the server.'
- '429: Rate limit exceeded'
- '400 Bad Request: Invalid request parameters'
- '404 Not Found: Resource not found'
- '429 Too Many Requests: Rate limit exceeded'
- '500 Internal Server Error: Server-side error'
- '400: Bad Request'
- '500: Internal Server Error'
- 'Rate limit exceeded: 1000 requests per day per user.'
- '429 Too Many Requests: Exceeding rate limit.'
- 'Rate Limit Exceeded: Too many requests in a given time frame'
- Unauthorized access
- '404 Not Found: Returned when the requested resource is not found.'
- '500 Internal Server Error: Returned when there is an issue with the server.'
- '429 Too Many Requests: Exceeding the rate limit.'
- '429 Too Many Requests: Rate limit exceeded.'
- '404 Not Found: If the domain name provided does not exist.'
- '400 Bad Request: If the domain parameter is missing or invalid.'
- '404 Not Found: If the API endpoint is not reachable.'
- '400 Bad Request: Invalid request parameters.'
- '404 Not Found: The requested resource was not found.'
- '400 Bad Request: Bad Request - Invalid parameter'
- '404 Not Found: Not Found - Endpoint not found'
- Rate limit of 10 requests per minute.
auth_info:
  mentioned_objects: []
client:
  base_url: https://zenquotes.io
  headers:
    Accept: application/json
source_metadata: null
