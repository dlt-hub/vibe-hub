resources:
- name: locations
  endpoint:
    path: /v1/locations
    method: GET
    data_selector: locations
- name: rooms
  endpoint:
    path: /v1/rooms
    method: GET
    data_selector: rooms
- name: devices
  endpoint:
    path: /v1/devices
    method: GET
    data_selector: devices
- name: devices
  endpoint:
    path: /v1/devices
    method: GET
    data_selector: items
    params: {}
- name: locations
  endpoint:
    path: /v1/locations
    method: GET
    data_selector: items
    params: {}
- name: list_members
  endpoint:
    path: /post/warranty
    method: GET
    data_selector: Device Warranty Info
    params:
      accountId: string <uuid>
- name: service_account
  endpoint:
    path: /accounts/{accountId}/serviceAccounts
    method: GET
    data_selector: serviceAccounts
    params: {}
- name: account
  endpoint:
    path: /accounts/{accountId}
    method: GET
    data_selector: account
    params: {}
- name: warranty
  endpoint:
    path: /post/warranty
    method: POST
    data_selector: warrantyDetails
    params: {}
- name: location_group
  endpoint:
    path: /locationGroup
    method: GET
    data_selector: locationGroupDetails
    params: {}
- name: warranty
  endpoint:
    path: /warranty
    method: POST
    data_selector: warrantyDetails
    params: {}
- name: devices_in_room
  endpoint:
    path: /devices
    method: GET
    data_selector: devices
    params: {}
- name: modes
  endpoint:
    path: /modes
    method: GET
    data_selector: modes
    params: {}
- name: device_component_status
  endpoint:
    path: /devices/{deviceId}/components/{componentId}/status
    method: GET
- name: device_health
  endpoint:
    path: /devices/{deviceId}/health
    method: GET
- name: device_description
  endpoint:
    path: /devices/{deviceId}/description
    method: GET
- name: list_devices
  endpoint:
    path: /devices
    method: GET
- name: execute_device_commands
  endpoint:
    path: /devices/{deviceId}/commands
    method: POST
- name: update_device
  endpoint:
    path: /devices/{deviceId}
    method: PATCH
- name: delete_device
  endpoint:
    path: /devices/{deviceId}
    method: DELETE
- name: warranty
  endpoint:
    path: /warranty
    method: POST
    data_selector: warrantyDetails
    params: {}
- name: locations
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
    params:
      limit: integer
      page: string
      locationGroupId: string
- name: rooms
  endpoint:
    path: /rooms
    method: GET
    data_selector: rooms
    params:
      locationId: string
- name: warranty
  endpoint:
    path: /warranty
    method: POST
    data_selector: warrantyDetails
    params: {}
- name: rules
  endpoint:
    path: /rules
    method: GET
    data_selector: rules
    params: {}
- name: warranty
  endpoint:
    path: /warranty
    method: POST
    data_selector: warrantyDetails
    params: {}
- name: get_rule
  endpoint:
    path: /rules
    method: GET
    params:
      locationId: required
- name: update_rule
  endpoint:
    path: /rules
    method: PUT
    params:
      locationId: required
- name: delete_rule
  endpoint:
    path: /rules
    method: DELETE
    params:
      locationId: required
- name: list_scenes
  endpoint:
    path: /scenes
    method: GET
    params:
      locationId: optional
- name: create_scene
  endpoint:
    path: /scenes
    method: POST
    params:
      locationId: required
- name: get_scene
  endpoint:
    path: /scenes
    method: GET
    params:
      locationId: required
- name: update_scene
  endpoint:
    path: /scenes
    method: PUT
    params:
      locationId: required
- name: delete_scene
  endpoint:
    path: /scenes
    method: DELETE
    params:
      locationId: required
- name: execute_scene
  endpoint:
    path: /scenes/execute
    method: POST
    params:
      locationId: required
- name: devices
  endpoint:
    path: /v1/devices
    method: GET
    data_selector: items
- name: automations
  endpoint:
    path: /v1/automations
    method: GET
    data_selector: items
- name: devices
  endpoint:
    path: /v1/devices/<deviceID>
    method: GET
- name: installed_app
  endpoint:
    path: /v1/installedApps
    method: GET
    data_selector: installedApps
    params: {}
- name: subscriptions
  endpoint:
    path: /v1/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: rules
  endpoint:
    path: /v1/rules/
    method: GET
- name: scenes
  endpoint:
    path: /v1/scenes/
    method: GET
- name: Rules
  endpoint:
    path: /docs/api/public#tag/Rules
    method: GET
- name: locations
  endpoint:
    path: /locations
    method: GET
    data_selector: locations
- name: rooms
  endpoint:
    path: /rooms
    method: GET
    data_selector: rooms
- name: devices
  endpoint:
    path: /devices
    method: GET
    data_selector: devices
notes:
- Requires a Samsung account to access the SmartThings platform.
- Hub Connected devices will run locally, which provides consumers a number of benefits
  including speed, reliability, and enhanced functionality.
- Uses bearer token for authorization.
- Devices can be integrated via cloud, hub, direct, or mobile connections.
- 'All SmartThings resources are protected with OAuth 2.0 Bearer Tokens sent on the
  request as an Authorization: Bearer <TOKEN> header.'
- Rate limits apply to actions conducted on the SmartThings Platform.
- You will need a Personal Access Token (PAT) with the appropriate scopes to interact
  with the Devices API.
- 'All SmartThings resources are protected with OAuth 2.0 Bearer Tokens sent on the
  API request as an Authorization: Bearer TOKEN header.'
- Smart homes are meant to be an ecosystem.
- SmartApps execute outside of the SmartThings platform.
- Tokens and subscriptions are revoked when an installedApp is uninstalled.
- Rules execute locally on a Hub if all Device features and services involved support
  local execution.
- Rules that do not support local execution are run in the SmartThings Cloud.
- 'Samsung may suspend or terminate the Licenseeâ€™s use of Samsung Service if required
  by Applicable Laws or if Samsung determines in its sole discretion that: (i) the
  number of API calls generated by the Licensee exceeds the level reasonably notified
  by Samsung; (ii) the Licensee Service(s) has a vulnerability or security issue or
  is not in compliance with this Agreement or the Documentation; (iii) the Licensee
  has failed to implement updates or upgrades necessary to safeguard Users as reasonably
  notified by Samsung; (iv) in the event of a Data Compromise; (v) if Samsung has
  reason to believe that the Licensee has breached this Agreement; (vi) the Licensee
  is in material breach of its obligations under this Agreement; (vii) the Licensee
  has a receiver or similar party appointed for its property, becomes insolvent, acknowledges
  its insolvency in any manner, ceases to do business, makes an assignment for the
  benefit of its creditors, files a petition in bankruptcy or has an involuntary petition
  in bankruptcy filed against it; (viii) the Licensee violates Applicable Laws; (ix)
  the Licensee Service or the Samsung Services might infringe a third party''s Intellectual
  Property Rights; (x) Samsung suspends or terminates Samsung Service as a whole or
  in part; or (xi) for any other reason that would provide Samsung a right of termination
  under this Agreement.'
- Requires setup of connected app with Samsung
- Use of Samsung Service may include Third-Party Software
- SmartThings Home API is currently in preview, and is accessible only by authorized
  users.
errors:
- '403 Forbidden: Check if your API token is valid and has the correct permissions.'
- '404 Not Found: Ensure the resource path is correct.'
- '500 Internal Server Error: Try the request again later.'
- 400 Bad request error response
- 401 Unauthorized error response
- 403 Forbidden error response
- 404 Not found error response
- 422 Unprocessable entity response
- 429 Too many requests response
- default Unexpected error
- '400: Bad request error response'
- '401: Unauthorized error response'
- '403: Forbidden error response'
- '404: Not found error response'
- '422: Unprocessable entity response'
- '429: Too many requests response'
- '400 Bad Request: Bad request error response'
- '401 Unauthorized: Unauthorized error response'
- '403 Forbidden: Forbidden error response'
- '404 Not Found: Not found error response'
- '422 Unprocessable Entity: Unprocessable entity response'
- '429 Too Many Requests: Too many requests response'
- 'HTTP 429 (Too Many Requests): Rate limit exceeded.'
- 'HTTP 422 (Unprocessable Entity): Guardrail limit exceeded.'
- '401 Unauthorized: Check if the token is valid or expired.'
- '403 Forbidden: Ensure the app has the necessary permissions.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - SamsungAccount
  - OAuth2
  - OauthToken
  - AuthProvider
client:
  base_url: https://api.smartthings.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://api.smartthings.com/oauth/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
