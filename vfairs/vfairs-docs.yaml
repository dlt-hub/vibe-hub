resources:
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: GET
    data_selector: attendees
- name: speakers
  endpoint:
    path: /v5/users/speakers
    method: GET
    data_selector: speakers
- name: boothReps
  endpoint:
    path: /v5/users/boothReps
    method: GET
    data_selector: boothReps
- name: userSegments
  endpoint:
    path: /v5/users/segments
    method: GET
    data_selector: segments
- name: sessions
  endpoint:
    path: /v5/sessions
    method: GET
    data_selector: sessions
- name: booths
  endpoint:
    path: /v5/booths
    method: GET
    data_selector: booths
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: GET
    data_selector: records
- name: speakers
  endpoint:
    path: /v5/users/speakers
    method: GET
    data_selector: records
- name: boothReps
  endpoint:
    path: /v5/users/boothReps
    method: GET
    data_selector: records
- name: segments
  endpoint:
    path: /v5/users/segments
    method: GET
    data_selector: records
- name: sessions
  endpoint:
    path: /v5/sessions
    method: GET
    data_selector: records
- name: booths
  endpoint:
    path: /v5/booths
    method: GET
    data_selector: records
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: GET
    data_selector: attendees
    params: {}
- name: segments
  endpoint:
    path: /v5/users/segments
    method: GET
    data_selector: segments
    params: {}
- name: speakers
  endpoint:
    path: /v5/users/speakers
    method: GET
    data_selector: speakers
    params: {}
- name: booths
  endpoint:
    path: /v5/booths
    method: GET
    data_selector: booths
    params: {}
- name: floors
  endpoint:
    path: /v5/floors
    method: GET
    data_selector: floors
    params: {}
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: GET
    data_selector: users
    params:
      page: 1
      limit: 50
      is_active: true
      start_date: '2024-11-01'
      end_date: '2024-11-10'
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: POST
    data_selector: users
- name: attendee_fields
  endpoint:
    path: /v5/forms/attendeeFields
    method: GET
    data_selector: fields
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: GET
    data_selector: attendees
- name: user_segments
  endpoint:
    path: /v5/users/segments
    method: GET
    data_selector: user_segments
- name: user_segment
  endpoint:
    path: /v5/users/segments/{segmentId}
    method: DELETE
    data_selector: status
    params: {}
- name: user_segment_rules
  endpoint:
    path: /v5/users/segments/rules
    method: POST
    data_selector: ''
    params: {}
- name: session_tracks
  endpoint:
    path: /v5/sessions/sessionTracks
    method: POST
    data_selector: ''
    params: {}
- name: sessions
  endpoint:
    path: /v5/sessions
    method: POST
    data_selector: ''
    params: {}
- name: booths
  endpoint:
    path: /v5/booths
    method: POST
    data_selector: ''
    params: {}
- name: user_segment_rules
  endpoint:
    path: /v5/users/segments/rules
    method: GET
    data_selector: segment_rules
- name: user_segment_rule
  endpoint:
    path: /v5/users/segments/rules/{ruleId}
    method: DELETE
    data_selector: status
    params: {}
- name: session_tracks
  endpoint:
    path: /v5/sessions/sessionTracks
    method: get
    data_selector: sessionTracks
    params: {}
- name: sessions
  endpoint:
    path: /v5/sessions
    method: get
    data_selector: sessions
    params: {}
- name: session_handouts
  endpoint:
    path: /v5/sessions/sessionHandouts
    method: get
    data_selector: sessionHandouts
    params: {}
- name: speakers
  endpoint:
    path: /v5/users/speakers
    method: get
    data_selector: speakers
    params: {}
- name: booths
  endpoint:
    path: /v5/booths
    method: get
    data_selector: booths
    params: {}
- name: booth_representatives
  endpoint:
    path: /v5/users/boothReps
    method: get
    data_selector: boothReps
    params: {}
- name: event_languages
  endpoint:
    path: /v5/event/languages
    method: get
    data_selector: languages
    params: {}
- name: session_tracks
  endpoint:
    path: /v5/sessions/sessionTracks
    method: GET
    data_selector: session_tracks
- name: session_tracks
  endpoint:
    path: /sessions/sessionTracks/{sessionTrackId}
    method: DELETE
    data_selector: status
    params: {}
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
    params: {}
- name: session_handouts
  endpoint:
    path: /sessions/sessionHandouts
    method: GET
    data_selector: handouts
    params: {}
- name: speakers
  endpoint:
    path: /users/speakers
    method: GET
    data_selector: speakers
    params: {}
- name: booths
  endpoint:
    path: /booths
    method: GET
    data_selector: booths
    params: {}
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
    params:
      incremental: start_date
- name: detach_speaker
  endpoint:
    path: /sessions/{sessionId}/speakers/{speakerId}/detach
    method: DELETE
    data_selector: status
- name: sessions
  endpoint:
    path: /v5/sessions
    method: POST
    data_selector: session_id
- name: get_sessions
  endpoint:
    path: /v5/sessions
    method: GET
    data_selector: sessions
- name: session_handouts
  endpoint:
    path: /v5/sessions/sessionHandouts
    method: GET
    data_selector: session_handouts
- name: session_handouts
  endpoint:
    path: /v5/sessions/sessionHandouts/{sessionHandoutId}
    method: DELETE
    data_selector: status
    params: {}
- name: speakers
  endpoint:
    path: /v5/users/speakers
    method: GET
    data_selector: records
    params: {}
- name: booths
  endpoint:
    path: /v5/booths
    method: GET
    data_selector: records
    params: {}
- name: booth_representatives
  endpoint:
    path: /v5/users/boothReps
    method: GET
    data_selector: records
    params: {}
- name: booth_job_vacancies
  endpoint:
    path: /v5/booths/{boothId}/jobs
    method: GET
    data_selector: records
    params: {}
- name: booth_documents
  endpoint:
    path: /v5/booths/documents
    method: GET
    data_selector: records
    params: {}
- name: booth_videos
  endpoint:
    path: /v5/booths/videos
    method: GET
    data_selector: records
    params: {}
- name: floors
  endpoint:
    path: /v5/floors
    method: GET
    data_selector: records
    params: {}
- name: event
  endpoint:
    path: /v5/event/getEventDetails
    method: GET
    data_selector: records
    params: {}
- name: reports
  endpoint:
    path: /v5/reports/userJourneyAnalytics
    method: GET
    data_selector: records
    params: {}
- name: speakers
  endpoint:
    path: /v5/users/speakers
    method: GET
    data_selector: speakers
    params:
      page: 1
      limit: 12
      speaker_email: qa5@gmail.com
      speaker_id: 123654
      session_id: 52675
      fetch_session_speakers: false
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: GET
    data_selector: collection
    params: {}
- name: speakers
  endpoint:
    path: /v5/users/speakers
    method: GET
    data_selector: collection
    params: {}
- name: sessions
  endpoint:
    path: /v5/sessions
    method: GET
    data_selector: collection
    params: {}
- name: user_segments
  endpoint:
    path: /v5/users/segments
    method: GET
    data_selector: collection
    params: {}
- name: booths
  endpoint:
    path: /booths
    method: GET
    data_selector: booths
    params:
      page: '1'
      limit: '10'
      floor_id: '1'
      booth_id: '123'
      active: 'true'
- name: delete_booth
  endpoint:
    path: /booths/{boothId}
    method: DELETE
    data_selector: status
    params:
      booth_id: '292638'
      delete_reps: 'true'
- name: booths
  endpoint:
    path: /v5/booths
    method: POST
    data_selector: data
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: GET
    data_selector: data
- name: speakers
  endpoint:
    path: /v5/users/speakers
    method: GET
    data_selector: data
- name: booth_representatives
  endpoint:
    path: /users/boothReps
    method: GET
    data_selector: booth_reps
    params:
      page: 1
      limit: 10
      booth_id: null
      order_by_updated_record: 0
      start_date: null
      end_date: null
- name: booth_representative
  endpoint:
    path: /v5/users/boothReps
    method: POST
    data_selector: status
    params: {}
- name: get_booth_representatives
  endpoint:
    path: /v5/users/boothReps
    method: GET
    data_selector: status
    params: {}
- name: delete_booth_representative
  endpoint:
    path: /v5/users/boothReps/{boothRepId}
    method: DELETE
    data_selector: status
    params: {}
- name: job_categories
  endpoint:
    path: /v5/booths/jobs/categories
    method: GET
- name: job_vacancy_fields
  endpoint:
    path: /v5/forms/boothJobsFields
    method: GET
- name: create_update_job_vacancy
  endpoint:
    path: /v5/booths/{boothId}/jobs
    method: POST
- name: get_job_vacancies
  endpoint:
    path: /v5/booths/{boothId}/jobs
    method: GET
- name: delete_job_vacancy
  endpoint:
    path: /v5/booths/{boothId}/jobs/{jobId}
    method: DELETE
- name: job_vacancy
  endpoint:
    path: /booths/{boothId}/jobs
    method: POST
    data_selector: data
    params:
      boothId: integer
- name: booth_documents
  endpoint:
    path: /booths/documents
    method: POST
    data_selector: data
- name: booth_videos
  endpoint:
    path: /booths/videos
    method: POST
    data_selector: data
- name: floors
  endpoint:
    path: /floors
    method: POST
    data_selector: data
- name: event_languages
  endpoint:
    path: /event/languages
    method: GET
    data_selector: data
- name: event_details
  endpoint:
    path: /event/getEventDetails
    method: GET
    data_selector: data
- name: qr_scan_analytics
  endpoint:
    path: /reports/qrScanAnalytics
    method: GET
    data_selector: data
- name: user_journey_analytics
  endpoint:
    path: /reports/userJourneyAnalytics
    method: GET
    data_selector: data
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: GET
    data_selector: attendees
- name: booth_documents
  endpoint:
    path: /v5/booths/documents
    method: GET
    data_selector: documents
- name: booth_documents
  endpoint:
    path: /v5/booths/documents
    method: GET
    data_selector: documents
    params:
      page: '1'
      limit: '50'
      document_id: doc_123
      title: Sample Document
      booths: 292638,292639
- name: delete_booth_document
  endpoint:
    path: /v5/booths/documents/{documentId}
    method: DELETE
    data_selector: status
- name: booth_videos
  endpoint:
    path: /v5/booths/videos
    method: GET
    data_selector: videos
    params:
      page: '1'
      limit: '50'
      video_id: vid_123
      title: Product Demo
      booths: 292638,292639
- name: delete_booth_video
  endpoint:
    path: /v5/booths/videos/{videoId}
    method: DELETE
    data_selector: status
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: GET
    data_selector: records
- name: speakers
  endpoint:
    path: /v5/users/speakers
    method: GET
    data_selector: records
- name: boothReps
  endpoint:
    path: /v5/users/boothReps
    method: GET
    data_selector: records
- name: sessions
  endpoint:
    path: /v5/sessions
    method: GET
    data_selector: records
- name: booths
  endpoint:
    path: /v5/booths
    method: GET
    data_selector: records
- name: floors
  endpoint:
    path: /v5/floors
    method: GET
    data_selector: data
    params: {}
- name: floors
  endpoint:
    path: /v5/floors
    method: GET
    data_selector: floors
    params:
      page: 1
      limit: 10
      floor_id: 123
- name: delete_floor
  endpoint:
    path: /v5/floors/{floorId}
    method: DELETE
    data_selector: floor_id
    params: {}
- name: event_languages
  endpoint:
    path: /v5/event/languages
    method: GET
    data_selector: languages
    params: {}
- name: event_details
  endpoint:
    path: /v5/event/getEventDetails
    method: GET
    data_selector: eventDetails
    params: {}
- name: qr_scan_analytics
  endpoint:
    path: /v5/reports/qrScanAnalytics
    method: GET
    data_selector: qrScanAnalytics
    params: {}
- name: user_journey_analytics
  endpoint:
    path: /v5/reports/userJourneyAnalytics
    method: GET
    data_selector: userJourneyAnalytics
    params: {}
- name: event_details
  endpoint:
    path: /event/getEventDetails
    method: GET
    data_selector: data
- name: countries
  endpoint:
    path: /countries
    method: GET
    data_selector: data.countries
    params:
      page: 1
      limit: 50
- name: qr_scan_analytics
  endpoint:
    path: /reports/qrScanAnalytics
    method: GET
- name: user_journey_analytics
  endpoint:
    path: /reports/userJourneyAnalytics
    method: GET
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: GET
    data_selector: attendees
    params: {}
- name: speakers
  endpoint:
    path: /v5/users/speakers
    method: GET
    data_selector: speakers
    params: {}
- name: booths
  endpoint:
    path: /v5/booths
    method: GET
    data_selector: booths
    params: {}
- name: sessions
  endpoint:
    path: /v5/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: user_segments
  endpoint:
    path: /v5/users/segments
    method: GET
    data_selector: segments
    params: {}
- name: qr_scan_analytics
  endpoint:
    path: /v5/reports/qrScanAnalytics
    method: GET
    data_selector: qr_scan_analytics
    params:
      registration_fields: 1,2,3
      user_type: Attendee
      start_date: '2024-01-01'
      end_date: '2024-12-31'
      scanned_user_id: 1234910710
      scanned_by_user_id: 1234910702
      sort_by_scanned_at: 1
      page: 1
      limit: 10
- name: user_journey_analytics
  endpoint:
    path: /v5/reports/userJourneyAnalytics
    method: GET
    data_selector: user_journey_analytics
    params:
      page: 1
      limit: 50
      user_id: 12345
      email: john.doe@example.com
      start_date: '2024-01-01'
      end_date: '2024-01-31'
      show_only_live: 0
      activity_types: LOGIN,WEBINAR,BOOTH_VISIT
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: GET
    data_selector: records
    params: {}
- name: speakers
  endpoint:
    path: /v5/users/speakers
    method: GET
    data_selector: records
    params: {}
- name: boothReps
  endpoint:
    path: /v5/users/boothReps
    method: GET
    data_selector: records
    params: {}
- name: userSegments
  endpoint:
    path: /v5/users/segments
    method: GET
    data_selector: records
    params: {}
- name: sessions
  endpoint:
    path: /v5/sessions
    method: GET
    data_selector: records
    params: {}
- name: booths
  endpoint:
    path: /v5/booths
    method: GET
    data_selector: records
    params: {}
- name: reports
  endpoint:
    path: /v5/reports
    method: GET
    data_selector: records
    params: {}
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: GET
    data_selector: attendees
- name: speakers
  endpoint:
    path: /v5/users/speakers
    method: GET
    data_selector: speakers
- name: boothReps
  endpoint:
    path: /v5/users/boothReps
    method: GET
    data_selector: boothReps
- name: segments
  endpoint:
    path: /v5/users/segments
    method: GET
    data_selector: segments
- name: sessions
  endpoint:
    path: /v5/sessions
    method: GET
    data_selector: sessions
- name: booths
  endpoint:
    path: /v5/booths
    method: GET
    data_selector: booths
- name: events
  endpoint:
    path: /v1/events
    method: GET
    data_selector: data
- name: endpoint
  endpoint:
    params:
      page: page
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: GET
    data_selector: attendees
- name: speakers
  endpoint:
    path: /v5/users/speakers
    method: GET
    data_selector: speakers
- name: boothReps
  endpoint:
    path: /v5/users/boothReps
    method: GET
    data_selector: boothReps
- name: segments
  endpoint:
    path: /v5/users/segments
    method: GET
    data_selector: segments
- name: sessions
  endpoint:
    path: /v5/sessions
    method: GET
    data_selector: sessions
- name: booths
  endpoint:
    path: /v5/booths
    method: GET
    data_selector: booths
- name: floors
  endpoint:
    path: /v5/floors
    method: GET
    data_selector: floors
- name: countries
  endpoint:
    path: /v5/countries
    method: GET
    data_selector: countries
- name: eventLanguages
  endpoint:
    path: /v5/event/languages
    method: GET
    data_selector: languages
- name: qrScanAnalytics
  endpoint:
    path: /v5/reports/qrScanAnalytics
    method: GET
    data_selector: analytics
- name: userJourneyAnalytics
  endpoint:
    path: /v5/reports/userJourneyAnalytics
    method: GET
    data_selector: analytics
- name: attendees
  endpoint:
    path: /v5/users/attendees
    method: GET
    data_selector: attendees
- name: speakers
  endpoint:
    path: /v5/users/speakers
    method: GET
    data_selector: speakers
- name: boothReps
  endpoint:
    path: /v5/users/boothReps
    method: GET
    data_selector: boothReps
- name: segments
  endpoint:
    path: /v5/users/segments
    method: GET
    data_selector: segments
- name: sessions
  endpoint:
    path: /v5/sessions
    method: GET
    data_selector: sessions
- name: booths
  endpoint:
    path: /v5/booths
    method: GET
    data_selector: booths
- name: floors
  endpoint:
    path: /v5/floors
    method: GET
    data_selector: floors
- name: countries
  endpoint:
    path: /v5/countries
    method: GET
    data_selector: countries
- name: reports
  endpoint:
    path: /v5/reports/userJourneyAnalytics
    method: GET
    data_selector: userJourneyAnalytics
notes:
- OAuth2 authentication is required for accessing the API.
- Each event hosted within vFairs has a unique app_key and secret_key for access.
- Uses OAuth2 for authentication
- Requires setup of connected app in vfairs
- Some operations may require specific session IDs to function properly
- Uses OAuth2 with refresh token — requires setup of connected app in vfairs
- Some endpoints may have rate limits
- Requires setup of OAuth2 for API access.
- Endpoints are available for managing booth representatives, including creation,
  retrieval, and deletion.
- Uses OAuth2 for authentication.
- Some objects may require specific permissions to access
- API supports various operations related to attendees, speakers, booths, etc.
- Rate limit of 40 calls per minute
- Applications exceeding this limit may be temporarily throttled or blocked
- The vFairs API employs a pagination mechanism to efficiently manage large datasets
  and ensure API responses are both quick and manageable.
- Requires setup of connected app for OAuth2 authentication.
errors:
- '401 Unauthorized: Check your credentials and token validity.'
- '401 Unauthorized: Check app_key and app_secret.'
- '403 Forbidden: Ensure you have the right permissions.'
- '500 Internal Server Error: Retry the request.'
- 401 Unauthorized
- 404 Not Found
- 500 Internal Server Error
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401: Unauthorized'
- '404: Not Found'
- '500: Internal Server Error'
- '401 Unauthorized: Recheck OAuth token'
- '200: Success'
- '404 Not Found: Check the session or speaker ID'
- '500 Internal Server Error: Retry the request'
- '404 Not Found: Check the endpoint URL or ID'
- '500 Internal Server Error: Try the request again later'
- '401 Unauthorized: Recheck OAuth token or permissions'
- '404 Not Found: Ensure the specified resource exists'
- 422 Unprocessable Entity
- '500 Internal Server Error: Check request format and data'
- '401 Unauthorized: Recheck OAuth token.'
- '401 Unauthorized: Recheck OAuth token or scopes'
- '404 Not Found: Ensure the specified booth representative ID exists'
- '201: Job vacancy created successfully.'
- '422: Unprocessable Entity'
- '401 Unauthorized: Check your Bearer token'
- '404 Not Found: Document ID does not exist'
- '500 Internal Server Error: Server error'
- '404 Not Found: Check the endpoint or resource ID'
- '422 Unprocessable Entity: Validate the request body'
- '500 Internal Server Error: Retry the request later'
- '401 Unauthorized: Recheck OAuth token validity.'
- '200'
- '401'
- '404'
- '422'
- '500'
- '404 Not Found: Ensure the endpoint is correct or resource exists'
- 'INVALID_CREDENTIALS: Invalid client ID or secret'
- 'EXPIRED_TOKEN: Access token has expired'
- 'INVALID_TOKEN: Malformed or invalid token'
- 'INSUFFICIENT_SCOPE: Token lacks required permissions'
- '400: The request is malformed or contains invalid parameters.'
- '401: Invalid or missing API key. Ensure your authentication credentials are correct.'
- '403: You do not have the necessary permissions to access the requested resource.'
- '404: The specified resource or URL path could not be found.'
- '405: The HTTP method used is not valid for this endpoint.'
- '406: The requested response format is not supported.'
- '410: The requested resource has been removed and is no longer available.'
- '422: The request contains invalid data or violates input validation rules.'
- '429: You have exceeded the rate limit. Slow down your requests.'
- '500: An unexpected issue occurred on our server. Please try again later.'
- '503: The server is temporarily offline for maintenance. Please try again later.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - BearerToken
  - access_token
client:
  base_url: https://api.vfairs.com/rest/
  auth:
    type: oauth2
    token_url: /v5/oauth/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
source_metadata: null
