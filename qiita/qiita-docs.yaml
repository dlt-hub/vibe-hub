resources:
- name: Amap
  endpoint:
    path: /amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: network_scanning_amap
  endpoint:
    path: /amap
    method: GET
    data_selector: records
- name: network_scanning_arp_scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: records
- name: network_scanning_arping
  endpoint:
    path: /arping
    method: GET
    data_selector: records
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: records
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
- name: kubernetes
  endpoint:
    path: /kubernetes
    method: GET
    data_selector: records
- name: repository
  endpoint:
    path: /repository
    method: GET
    data_selector: records
- name: rootfs
  endpoint:
    path: /rootfs
    method: GET
    data_selector: records
- name: sbom
  endpoint:
    path: /sbom
    method: GET
    data_selector: records
- name: vm
  endpoint:
    path: /vm
    method: GET
    data_selector: records
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: hosts
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
    params: {}
- name: targets
  endpoint:
    path: /autorecon/targets
    method: GET
    data_selector: records
    params: {}
- name: sysDescr
  endpoint:
    path: /.1.3.6.1.2.1.1.1.0
    method: GET
    data_selector: sysDescr
    params: {}
- name: hrStorageAllocationUnits
  endpoint:
    path: /.1.3.6.1.2.1.25.2.3.1.4.1
    method: GET
    data_selector: hrStorageAllocationUnits
    params: {}
- name: hrStorageSize
  endpoint:
    path: /.1.3.6.1.2.1.25.2.3.1.5.1
    method: GET
    data_selector: hrStorageSize
    params: {}
- name: OS Information
  endpoint:
    path: /os/info
    method: GET
    data_selector: os_info
- name: User Enumeration
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: autorecon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: credential_bruteforcing_commands
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: records
    params: {}
- name: wpscan
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: http_request
  endpoint:
    path: /
    method: GET
    data_selector: HTTP response
- name: config_scan
  endpoint:
    path: /config
    method: GET
- name: filesystem_scan
  endpoint:
    path: /filesystem
    method: GET
- name: image_scan
  endpoint:
    path: /image
    method: GET
- name: kubernetes_scan
  endpoint:
    path: /kubernetes
    method: GET
- name: repository_scan
  endpoint:
    path: /repository
    method: GET
- name: rootfs_scan
  endpoint:
    path: /rootfs
    method: GET
- name: sbom_scan
  endpoint:
    path: /sbom
    method: GET
- name: vm_scan
  endpoint:
    path: /vm
    method: GET
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: port_scan
  endpoint:
    path: /scans
    method: GET
    data_selector: results
    params: {}
- name: braa
  endpoint:
    path: /braa
    method: GET
- name: enum4linux-ng
  endpoint:
    path: /enum4linux-ng
    method: GET
- name: fping
  endpoint:
    path: /fping
    method: GET
- name: hping3
  endpoint:
    path: /hping3
    method: GET
- name: pnscan
  endpoint:
    path: /pnscan
    method: GET
    data_selector: usage
    params: {}
- name: polenum
  endpoint:
    path: /polenum
    method: GET
    data_selector: usage
    params: {}
- name: smbmap
  endpoint:
    path: /smbmap
    method: GET
    data_selector: usage
    params: {}
- name: trivy
  endpoint:
    path: /trivy
    method: GET
    data_selector: usage
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: snmp_query
  endpoint:
    path: /snmp
    method: GET
    data_selector: results
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: records
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: records
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: records
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: records
    params: {}
- name: arping_usage
  endpoint:
    path: /arping/usage
    method: GET
    data_selector: usage
- name: arping_example
  endpoint:
    path: /arping/example
    method: GET
    data_selector: example
- name: Network Tools
  endpoint:
    path: /network/tools
    method: GET
    data_selector: tools
    params: {}
- name: Amap
  endpoint:
    path: /network/tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /network/tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /network/tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: config_scan
  endpoint:
    path: /scan/config
    method: GET
    data_selector: records
- name: filesystem_scan
  endpoint:
    path: /scan/filesystem
    method: GET
    data_selector: records
- name: image_scan
  endpoint:
    path: /scan/image
    method: GET
    data_selector: records
- name: kubernetes_scan
  endpoint:
    path: /scan/kubernetes
    method: GET
    data_selector: records
- name: repository_scan
  endpoint:
    path: /scan/repository
    method: GET
    data_selector: records
- name: rootfs_scan
  endpoint:
    path: /scan/rootfs
    method: GET
    data_selector: records
- name: sbom_scan
  endpoint:
    path: /scan/sbom
    method: GET
    data_selector: records
- name: vm_scan
  endpoint:
    path: /scan/vm
    method: GET
    data_selector: records
- name: MACSec
  endpoint:
    path: /macsec
    method: GET
    data_selector: records
    params: {}
- name: EAPOL
  endpoint:
    path: /eapol
    method: GET
    data_selector: records
    params: {}
- name: ARP
  endpoint:
    path: /arp
    method: GET
    data_selector: records
    params: {}
- name: CDP
  endpoint:
    path: /cdp
    method: GET
    data_selector: records
    params: {}
- name: DTP
  endpoint:
    path: /dtp
    method: GET
    data_selector: records
    params: {}
- name: LLDP
  endpoint:
    path: /lldp
    method: GET
    data_selector: records
    params: {}
- name: VLAN
  endpoint:
    path: /vlan
    method: GET
    data_selector: records
    params: {}
- name: S7COMM
  endpoint:
    path: /s7comm
    method: GET
    data_selector: records
    params: {}
- name: OMRON
  endpoint:
    path: /omron
    method: GET
    data_selector: records
    params: {}
- name: TACACS+
  endpoint:
    path: /tacacs
    method: GET
    data_selector: records
    params: {}
- name: ModbusTCP
  endpoint:
    path: /modbustcp
    method: GET
    data_selector: records
    params: {}
- name: STP
  endpoint:
    path: /stp
    method: GET
    data_selector: records
    params: {}
- name: OSPF
  endpoint:
    path: /ospf
    method: GET
    data_selector: records
    params: {}
- name: EIGRP
  endpoint:
    path: /eigrp
    method: GET
    data_selector: records
    params: {}
- name: BGP
  endpoint:
    path: /bgp
    method: GET
    data_selector: records
    params: {}
- name: VRRP
  endpoint:
    path: /vrrp
    method: GET
    data_selector: records
    params: {}
- name: HSRP
  endpoint:
    path: /hsrp
    method: GET
    data_selector: records
    params: {}
- name: GLBP
  endpoint:
    path: /glbp
    method: GET
    data_selector: records
    params: {}
- name: IGMP
  endpoint:
    path: /igmp
    method: GET
    data_selector: records
    params: {}
- name: LLMNR
  endpoint:
    path: /llmnr
    method: GET
    data_selector: records
    params: {}
- name: NBT-NS
  endpoint:
    path: /nbt-ns
    method: GET
    data_selector: records
    params: {}
- name: MDNS
  endpoint:
    path: /mdns
    method: GET
    data_selector: records
    params: {}
- name: DHCP
  endpoint:
    path: /dhcp
    method: GET
    data_selector: records
    params: {}
- name: DHCPv6
  endpoint:
    path: /dhcpv6
    method: GET
    data_selector: records
    params: {}
- name: ICMPv6
  endpoint:
    path: /icmpv6
    method: GET
    data_selector: records
    params: {}
- name: SSDP
  endpoint:
    path: /ssdp
    method: GET
    data_selector: records
    params: {}
- name: MNDP
  endpoint:
    path: /mndp
    method: GET
    data_selector: records
    params: {}
- name: SNMP
  endpoint:
    path: /snmp
    method: GET
    data_selector: records
    params: {}
- name: RADIUS
  endpoint:
    path: /radius
    method: GET
    data_selector: records
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: hosts
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: packet_analysis
  endpoint:
    path: /api/packet_analysis
    method: POST
    data_selector: results
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: records
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: records
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: records
- name: sysDescr
  endpoint:
    path: public@192.168.11.3-192.168.11.4:.1.3.6.1.2.1.1.1.0
    method: GET
    data_selector: sysDescr
- name: hrStorageAllocationUnits
  endpoint:
    path: public@192.168.11.3-192.168.11.4:.1.3.6.1.2.1.25.2.3.1.4.1
    method: GET
    data_selector: hrStorageAllocationUnits
- name: hrStorageSize
  endpoint:
    path: public@192.168.11.3-192.168.11.4:.1.3.6.1.2.1.25.2.3.1.5.1
    method: GET
    data_selector: hrStorageSize
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: os_information
  endpoint:
    path: /services/data/vXX.X/sobjects/OSInformation
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /services/data/vXX.X/sobjects/Users
    method: GET
    data_selector: records
    params: {}
- name: target
  endpoint:
    path: /autorecon
    method: GET
    data_selector: targets
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
- name: service_detection
  endpoint:
    path: /service
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
- name: kubernetes
  endpoint:
    path: /kubernetes
    method: GET
    data_selector: records
- name: repository
  endpoint:
    path: /repository
    method: GET
    data_selector: records
- name: vm
  endpoint:
    path: /vm
    method: GET
    data_selector: records
- name: network_tools
  endpoint:
    path: /network/tools
    method: GET
    data_selector: tools
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: credential_bruteforcing
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: records
    params: {}
- name: wordpress_security_scanner
  endpoint:
    path: http://192.168.11.4:80/
    method: GET
    data_selector: records
    params: {}
- name: Network Tools
  endpoint:
    path: /network-tools
    method: GET
    data_selector: tools
    params: {}
- name: Network Scanning
  endpoint:
    path: /network-scanning
    method: GET
    data_selector: scanning_tools
    params: {}
- name: Amap
  endpoint:
    path: /amap
    method: GET
    data_selector: amap_usage
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: arp_scan_usage
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: arping_usage
    params: {}
- name: targets
  endpoint:
    path: /autorecon
    method: POST
    data_selector: results
    params: {}
- name: SNMP Scan
  endpoint:
    path: /snmp/scan
    method: GET
    data_selector: results
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params:
      options: -A -T4
- name: ack_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params:
      options: -sA --top-ports 10
- name: vuln_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params:
      options: --script=vuln
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage_examples
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage_examples
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage_examples
    params: {}
- name: pnscan
  endpoint:
    path: /pnscan
    method: GET
    data_selector: usage
    params: {}
- name: polenum
  endpoint:
    path: /polenum
    method: GET
    data_selector: usage
    params: {}
- name: smbmap
  endpoint:
    path: /smbmap
    method: GET
    data_selector: usage
    params: {}
- name: trivy
  endpoint:
    path: /trivy
    method: GET
    data_selector: usage
    params: {}
- name: protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
    params:
      incremental: target
- name: ffuf_command
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: hosts
- name: targets
  endpoint:
    path: targets
    method: GET
    data_selector: targets
    params: {}
- name: SNMP_scan
  endpoint:
    path: /snmp_scan
    method: GET
    data_selector: results
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params: {}
- name: vuln_scan
  endpoint:
    path: /vuln_scan
    method: GET
    data_selector: results
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: network_sniffing
  endpoint:
    path: /network/sniffing
    method: GET
    data_selector: packets
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: GET
    data_selector: results
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: target
  endpoint:
    path: /autoconfig/target
    method: GET
    data_selector: targets
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: records
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: records
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: records
    params: {}
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: ''
    params: {}
- name: targets
  endpoint:
    params:
      target-timeout: None
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params:
      retries: 3
      timeout: 1000
      warm-up-time: 2
- name: nbtscan
  endpoint:
    path: /nbtscan
    method: GET
    data_selector: results
    params:
      timeout: 1000
- name: netscanner
  endpoint:
    path: /netscanner
    method: GET
    data_selector: results
    params:
      tick-rate: 1
      frame-rate: 10
- name: scan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params:
      incremental: updated_at
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: network_sniffing
  endpoint:
    path: /above/sniffing
    method: GET
    data_selector: protocols
- name: darkstat_usage
  endpoint:
    path: /darkstat
    method: GET
    data_selector: usage
- name: amap
  endpoint:
    path: /amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: usage
    params: {}
- name: autorecon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: records
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: records
- name: repository
  endpoint:
    path: /repository
    method: GET
    data_selector: records
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params: {}
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
    params: {}
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: ''
    params: {}
- name: network_protocols
  endpoint:
    path: /above/protocols
    method: GET
    data_selector: protocols
- name: capture_data
  endpoint:
    path: chaosreader
    method: GET
    data_selector: application_protocols
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vuln-scan
    method: GET
    data_selector: results
    params: {}
- name: dns_proxy
  endpoint:
    path: /dnschef
    method: GET
    data_selector: records
- name: protocol_detection
  endpoint:
    path: /protocols
    method: GET
    data_selector: detected_protocols
- name: captured_data
  endpoint:
    path: /capture
    method: GET
    data_selector: data
- name: Network Tools
  endpoint:
    path: /network-tools
    method: GET
    data_selector: tools
    params: {}
- name: Amap
  endpoint:
    path: /network-tools/amap
    method: GET
    data_selector: tool_details
    params: {}
- name: arp-scan
  endpoint:
    path: /network-tools/arp-scan
    method: GET
    data_selector: tool_details
    params: {}
- name: ARPing
  endpoint:
    path: /network-tools/arping
    method: GET
    data_selector: tool_details
    params: {}
- name: targets
  endpoint:
    path: targets
    method: GET
    data_selector: records
- name: macchanger
  endpoint:
    path: /macchanger
    method: GET
    data_selector: usage
- name: netsed
  endpoint:
    path: /netsed
    method: GET
    data_selector: usage
- name: trivy
  endpoint:
    path: /trivy
    method: GET
    data_selector: usage
- name: network_scanning_amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: network_scanning_arp_scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: network_scanning_arping
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: port_scan
  endpoint:
    path: /nmap/scan
    method: GET
    data_selector: scan_results
    params: {}
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params:
      target: 192.168.11.4
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params:
      timeout: '5'
- name: vulnerability_scan
  endpoint:
    path: /scan/vuln
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: records
    params: {}
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: GET
    data_selector: records
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: responses
- name: packets
  endpoint:
    path: /packets
    method: GET
    data_selector: records
- name: target
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
    params: {}
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: records
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: records
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: records
- name: autorecon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: protocols
    params: {}
- name: bruteshark
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: modules
    params: {}
- name: port_scan
  endpoint:
    path: /nmap/port_scan
    method: GET
    data_selector: scan_results
- name: os_detection
  endpoint:
    path: /nmap/os_detection
    method: GET
    data_selector: os_results
- name: vulnerability_scan
  endpoint:
    path: /nmap/vulnerability_scan
    method: GET
    data_selector: vuln_results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: image
  endpoint:
    path: image
    method: GET
    data_selector: records
- name: config
  endpoint:
    path: config
    method: GET
    data_selector: records
- name: filesystem
  endpoint:
    path: filesystem
    method: GET
    data_selector: records
- name: kubernetes
  endpoint:
    path: kubernetes
    method: GET
    data_selector: records
- name: repository
  endpoint:
    path: repository
    method: GET
    data_selector: records
- name: rootfs
  endpoint:
    path: rootfs
    method: GET
    data_selector: records
- name: sbom
  endpoint:
    path: sbom
    method: GET
    data_selector: records
- name: vm
  endpoint:
    path: vm
    method: GET
    data_selector: records
- name: portspoof
  endpoint:
    path: /portspoof
    method: GET
    data_selector: records
- name: trivy
  endpoint:
    path: /trivy
    method: GET
    data_selector: records
- name: responder
  endpoint:
    path: /responder
    method: GET
    data_selector: records
- name: Network Scanning - Amap
  endpoint:
    path: /network/scanning/amap
    method: GET
    data_selector: records
    params: {}
- name: Network Scanning - arp-scan
  endpoint:
    path: /network/scanning/arp-scan
    method: GET
    data_selector: records
    params: {}
- name: Network Scanning - ARPing
  endpoint:
    path: /network/scanning/arping
    method: GET
    data_selector: records
    params: {}
- name: ssldump_options
  endpoint:
    path: /ssldump/options
    method: GET
    data_selector: options
- name: target
  endpoint:
    path: /api/v1/targets
    method: GET
    data_selector: targets
- name: network_scanning
  endpoint:
    path: /api/network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /api/arp/scan
    method: GET
    data_selector: hosts
    params: {}
- name: arping
  endpoint:
    path: /api/arping
    method: GET
    data_selector: responses
    params: {}
- name: snmp_scan
  endpoint:
    path: braa
    method: GET
    data_selector: results
- name: targets
  endpoint:
    params:
      incremental: updated_at
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: scan_results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: scan_results
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
    params: {}
- name: chaosreader_usage
  endpoint:
    path: --help
    method: GET
- name: netsed
  endpoint:
    path: /netsed
    method: POST
    data_selector: rules
    params: {}
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: packets
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: targets
  endpoint:
    path: targets
    method: GET
    data_selector: results
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: tcp_capture
  endpoint:
    path: /tcpflow/capture
    method: GET
    data_selector: packets
    params: {}
- name: masscan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: hosts
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
- name: port_scan
  endpoint:
    path: /scan/port
    method: GET
    data_selector: results
- name: service_scan
  endpoint:
    path: /scan/service
    method: GET
    data_selector: results
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: network_protocols
  endpoint:
    path: /api/network_protocols
    method: GET
    data_selector: protocols
    params: {}
- name: packet_capture
  endpoint:
    path: /api/packet_capture
    method: POST
    data_selector: capture_results
    params: {}
- name: traffic_analysis
  endpoint:
    path: /traffic
    method: GET
    data_selector: records
    params: {}
- name: ntlm_auth
  endpoint:
    path: /ntlm_auth
    method: POST
    data_selector: response
    params: {}
- name: http_auth
  endpoint:
    path: /http_auth
    method: POST
    data_selector: response
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: protocols
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: POST
    data_selector: results
- name: capture_data
  endpoint:
    path: /capture
    method: GET
    data_selector: data
    params: {}
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: masscan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: network_scanning_amap
  endpoint:
    path: /network/scanning/amap
    method: GET
    data_selector: records
    params: {}
- name: network_scanning_arp_scan
  endpoint:
    path: /network/scanning/arp-scan
    method: GET
    data_selector: records
    params: {}
- name: network_scanning_arping
  endpoint:
    path: /network/scanning/arping
    method: GET
    data_selector: records
    params: {}
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: results
    params: {}
- name: os_detection
  endpoint:
    path: /os-detection
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vuln-scan
    method: GET
    data_selector: results
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: SNMP Scanner
  endpoint:
    path: /braa
    method: GET
    data_selector: output
    params: {}
- name: chaosreader_usage
  endpoint:
    path: /chaosreader/help
    method: GET
- name: protocol_info
  endpoint:
    path: /protocols
    method: GET
    data_selector: supported_protocols
- name: http_request
  endpoint:
    path: /
    method: GET
    data_selector: HTTP request data
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: darkstat
  endpoint:
    path: /darkstat
    method: GET
- name: dnschef
  endpoint:
    path: /dnschef
    method: GET
- name: ettercap
  endpoint:
    path: /ettercap
    method: GET
- name: packets
  endpoint:
    path: /packets
    method: GET
    data_selector: data
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: records
    params: {}
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
    params: {}
- name: kubernetes
  endpoint:
    path: /kubernetes
    method: GET
    data_selector: records
    params: {}
- name: repository
  endpoint:
    path: /repository
    method: GET
    data_selector: records
    params: {}
- name: rootfs
  endpoint:
    path: /rootfs
    method: GET
    data_selector: records
    params: {}
- name: sbom
  endpoint:
    path: /sbom
    method: GET
    data_selector: records
    params: {}
- name: vm
  endpoint:
    path: /vm
    method: GET
    data_selector: records
    params: {}
- name: image_scan
  endpoint:
    path: /trivy/image
    method: GET
    data_selector: results
- name: filesystem_scan
  endpoint:
    path: /trivy/filesystem
    method: GET
    data_selector: results
- name: config_scan
  endpoint:
    path: /trivy/config
    method: GET
    data_selector: results
- name: arp_scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: hosts
    params: {}
- name: target
  endpoint:
    path: /autorecon/targets
    method: GET
    data_selector: targets
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: nbtscan
  endpoint:
    path: /nbtscan
    method: GET
- name: netdiscover
  endpoint:
    path: /netdiscover
    method: GET
- name: nextnet
  endpoint:
    path: /nextnet
    method: GET
- name: nmap
  endpoint:
    path: /nmap
    method: GET
- name: scan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params:
      ports: 20-25
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params: {}
- name: snmp_check
  endpoint:
    path: /snmp_check
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: service_detection
  endpoint:
    path: /detect
    method: GET
    data_selector: services
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: protocol_detection
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
- name: packet_sniffer
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
- name: packet_injection
  endpoint:
    path: /hexinject/inject
    method: POST
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: tcpick_usage
  endpoint:
    path: /tcpick
    method: GET
    data_selector: tcpick_usage
- name: Network Scanning Tools
  endpoint:
    path: /tools/network-scanning
    method: GET
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: trivy
  endpoint:
    path: /trivy
    method: GET
    data_selector: records
    params: {}
- name: targets
  endpoint:
    path: /autorecon/targets
    method: GET
    data_selector: results
- name: arp_scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: hosts
    params: {}
- name: amap
  endpoint:
    path: /amap
    method: GET
    data_selector: applications
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
    params: {}
- name: target
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
    params: {}
- name: tcpdump_commands
  endpoint:
    path: /tcpdump/commands
    method: GET
    data_selector: commands
    params: {}
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params:
      ports: 20-25
- name: naabu
  endpoint:
    path: /naabu
    method: GET
    data_selector: results
    params:
      ports: 80,443
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: result
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
- name: protocol_detection
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: port_scan_results
  endpoint:
    path: /api/v1/port-scan
    method: GET
    data_selector: results
- name: capture_data
  endpoint:
    path: /api/capture
    method: GET
    data_selector: records
    params: {}
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: protocols
    params: {}
- name: bruteshark
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: module_info
    params: {}
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: http_request
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: Network Tools
  endpoint:
    path: /network/tools
    method: GET
    data_selector: tools
    params: {}
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: scanning_tools
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: arp_scan_tools
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: arping_tools
    params: {}
- name: capture_interface
  endpoint:
    path: /tshark/capture/interface
    method: GET
- name: capture_output
  endpoint:
    path: /tshark/capture/output
    method: GET
- name: network_filtering
  endpoint:
    path: /ftest/network/filtering
    method: GET
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
    params: {}
- name: iptables
  endpoint:
    path: /etc/init.d/kali.fw
    method: START
    data_selector: Chain INPUT
    params: {}
- name: Network Tools
  endpoint:
    path: /network_tools
    method: GET
    data_selector: tools
    params: {}
- name: Amap
  endpoint:
    path: /network_tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /network_tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /network_tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: target_scan
  endpoint:
    path: /scan/targets
    method: GET
    data_selector: results
    params: {}
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: commands
    params: {}
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: commands
    params: {}
- name: capture_data
  endpoint:
    path: /capture/data
    method: GET
    data_selector: records
    params: {}
- name: packet_sniff
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: packet_inject
  endpoint:
    path: /inject
    method: POST
    data_selector: response
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: service_detection
  endpoint:
    path: /service_detection
    method: GET
    data_selector: results
- name: protocols
  endpoint:
    path: /supported-protocols
    method: GET
- name: network_sniffing
  endpoint:
    path: /network/sniffing
    method: GET
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: GET
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: capture_data
  endpoint:
    path: /api/capture_data
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /v1/image
    method: GET
    data_selector: data
    params: {}
- name: filesystem
  endpoint:
    path: /v1/filesystem
    method: GET
    data_selector: data
    params: {}
- name: config
  endpoint:
    path: /v1/config
    method: GET
    data_selector: data
    params: {}
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: results
- name: ARP Packet Sniffing
  endpoint:
    path: /hexinject/arp
    method: GET
    data_selector: packets
    params:
      filter: arp
- name: HTTP Host Header Sniffing
  endpoint:
    path: /hexinject/http
    method: GET
    data_selector: http_requests
    params: {}
- name: target
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: os_information
  endpoint:
    path: /rpc/os_info
    method: GET
    data_selector: os_info
- name: users
  endpoint:
    path: /rpc/users
    method: GET
    data_selector: users
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: usage example
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage example
    params: {}
- name: cryptcat_usage
  endpoint:
    path: /cryptcat/help
    method: GET
    data_selector: usage
- name: port_scan
  endpoint:
    path: /nmap/port_scan
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: Network Scanning
  endpoint:
    path: /tools/network_scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: tools
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: tools
    params: {}
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: credential_bruteforcing_commands
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: commands
    params: {}
- name: wpscan
  endpoint:
    path: /
    method: GET
    data_selector: scan_results
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: output
    params:
      verbose: true
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: output
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: vuln_detection
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
- name: protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: chaosreader_usage
  endpoint:
    path: /chaosreader/usage
    method: GET
    data_selector: records
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: hexinject_usage
  endpoint:
    path: /hexinject/usage
    method: GET
- name: tcpdump_capture
  endpoint:
    path: /tcpdump/capture
    method: GET
    data_selector: packets
- name: hydra_bruteforcing
  endpoint:
    path: /hydra/bruteforcing
    method: POST
    data_selector: results
- name: fping
  endpoint:
    path: /fping
    method: GET
    data_selector: ping_results
- name: hping3
  endpoint:
    path: /hping3
    method: POST
    data_selector: reply
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params: {}
- name: naabu
  endpoint:
    path: /naabu
    method: GET
    data_selector: results
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: Firewall Builder GUI
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: tcp_port_scan
  endpoint:
    path: /tcp_scan
    method: GET
    data_selector: ports
    params:
      retries: 3
      timeout: 1000
      warm_up_time: 2
- name: nbtscan
  endpoint:
    path: /nbtscan
    method: GET
    data_selector: netbios_info
    params:
      timeout: 1000
      retransmits: 0
- name: netdiscover
  endpoint:
    path: /netdiscover
    method: GET
    data_selector: arp_requests
    params:
      device: eth0
      range: 192.168.11.0/24
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: usage
    params: {}
- name: network_sniffing
  endpoint:
    path: /network/sniff
    method: GET
    data_selector: packets
    params: {}
- name: packet_analysis
  endpoint:
    path: /packet/analyze
    method: POST
    data_selector: analysis_results
    params: {}
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
    params: {}
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: results
- name: vuln_detection
  endpoint:
    path: /vuln-detection
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: capture_data
  endpoint:
    path: /capture
    method: GET
    data_selector: data
- name: capture_interface
  endpoint:
    path: -i <interface>
    method: GET
    data_selector: ''
    params: {}
- name: capture_filter
  endpoint:
    path: -f <capture filter>
    method: GET
    data_selector: ''
    params: {}
- name: snapshot_length
  endpoint:
    path: -s <snaplen>
    method: GET
    data_selector: ''
    params: {}
- name: no_promiscuous_mode
  endpoint:
    path: -p
    method: GET
    data_selector: ''
    params: {}
- name: monitor_mode
  endpoint:
    path: -I
    method: GET
    data_selector: ''
    params: {}
- name: buffer_size
  endpoint:
    path: -B <buffer size>
    method: GET
    data_selector: ''
    params: {}
- name: link_type
  endpoint:
    path: -y <link type>
    method: GET
    data_selector: ''
    params: {}
- name: time_stamp_type
  endpoint:
    path: --time-stamp-type <type>
    method: GET
    data_selector: ''
    params: {}
- name: list_interfaces
  endpoint:
    path: -D
    method: GET
    data_selector: ''
    params: {}
- name: list_data_link_types
  endpoint:
    path: -L
    method: GET
    data_selector: ''
    params: {}
- name: list_time_stamp_types
  endpoint:
    path: --list-time-stamp-types
    method: GET
    data_selector: ''
    params: {}
- name: update_interval
  endpoint:
    path: --update-interval
    method: GET
    data_selector: ''
    params: {}
- name: targets
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: tcpick_usage
  endpoint:
    path: /tcpick/usage
    method: GET
    data_selector: usage_info
- name: scan
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: commands
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: Amap
  endpoint:
    path: /network_tools/amap
    method: GET
    data_selector: usage_examples
    params: {}
- name: arp-scan
  endpoint:
    path: /network_tools/arp-scan
    method: GET
    data_selector: usage_examples
    params: {}
- name: ARPing
  endpoint:
    path: /network_tools/arping
    method: GET
    data_selector: usage_examples
    params: {}
- name: targets
  endpoint:
    path: targets
    method: GET
    data_selector: records
- name: plugins
  endpoint:
    path: plugins
    method: GET
    data_selector: records
- name: application_sessions
  endpoint:
    path: /chaosreader/application_sessions
    method: GET
    data_selector: sessions
    params: {}
- name: traffic_logs
  endpoint:
    path: /chaosreader/traffic_logs
    method: GET
    data_selector: logs
    params: {}
- name: bruteforce_commands
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: commands
    params: {}
- name: masscan
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: HTTP_request
  endpoint:
    path: /
    method: GET
    data_selector: response
- name: tcpick_capture
  endpoint:
    path: /tcpick/capture
    method: GET
    data_selector: records
- name: network_sniffing
  endpoint:
    path: /above/network_sniffing
    method: GET
    data_selector: protocols
    params: {}
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: GET
    data_selector: analysis
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: chaosreader_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: records
- name: network_monitor
  endpoint:
    path: /network/monitor
    method: GET
    data_selector: events.stream
    params: {}
- name: http_proxy
  endpoint:
    path: /http/proxy
    method: GET
    data_selector: proxy_settings
    params: {}
- name: arp_spoofing
  endpoint:
    path: /arp/spoof
    method: GET
    data_selector: spoof_settings
    params: {}
- name: cryptcat_usage
  endpoint:
    path: /cryptcat/usage
    method: GET
    data_selector: usage
    params: {}
- name: hexinject
  endpoint:
    path: /hexinject
    method: POST
    data_selector: output
    params: {}
- name: macchanger
  endpoint:
    path: /macchanger
    method: POST
    data_selector: output
    params: {}
- name: netsed
  endpoint:
    path: /netsed
    method: POST
    data_selector: output
    params: {}
- name: ngrep
  endpoint:
    path: /ngrep
    method: POST
    data_selector: output
    params: {}
- name: p0f
  endpoint:
    path: /p0f
    method: POST
    data_selector: output
    params: {}
- name: portspoof
  endpoint:
    path: /portspoof
    method: POST
    data_selector: output
    params: {}
- name: responder
  endpoint:
    path: /responder
    method: POST
    data_selector: output
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: directory_scan
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: config
    params:
      conf_file: <conf_file>
      source_ip: <source_ip>
      source_port: <source_port>
      dest_ip: <dest_ip>
      dest_port: <dest_port>
      flags: <flags>
      protocol: <protocol>
      tos: <tos>
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: config
    params:
      interface: <interface>
      fragments_reassembly: <fragments_reassembly>
      marker: <marker>
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: port_scan
  endpoint:
    path: /scans
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vulns
    method: GET
    data_selector: vulnerabilities
- name: list_shares
  endpoint:
    path: /list_shares
    method: GET
    data_selector: shares
    params: {}
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: application_sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: records
- name: traffic_analysis
  endpoint:
    path: /traffic
    method: GET
    data_selector: records
- name: trivy
  endpoint:
    path: /trivy
    method: GET
    data_selector: results
    params:
      format: json
- name: packet_sniffing
  endpoint:
    path: /packet/sniffing
    method: GET
    data_selector: packets
    params: {}
- name: packet_operations
  endpoint:
    path: /scapy/packet_operations
    method: GET
    data_selector: operations
    params: {}
- name: Output Arguments
  endpoint:
    path: /output_arguments
    method: GET
    data_selector: arguments
    params: {}
- name: Output Format Arguments
  endpoint:
    path: /output_format_arguments
    method: GET
    data_selector: format_arguments
    params: {}
- name: profiling arguments
  endpoint:
    path: /profiling_arguments
    method: GET
    data_selector: profiling_arguments
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: payload
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: payload
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: payload
    params: {}
- name: scan_results
  endpoint:
    path: /scanning
    method: GET
    data_selector: results
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: network_tools
  endpoint:
    path: /tools/network
    method: GET
    data_selector: tools
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: plugins
  endpoint:
    path: /plugins
    method: GET
    data_selector: plugins
- name: directory_listing
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: ''
- name: target_scan
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
    params: {}
- name: scans
  endpoint:
    path: /scans/tcp_80_http_ffuf_dirbuster.txt
    method: GET
    data_selector: results
- name: masscan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: port_scan
  endpoint:
    path: /scans/port
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /scans/vuln
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
    params: {}
- name: port_scan
  endpoint:
    path: /nmap/port_scan
    method: GET
    data_selector: results
- name: vuln_scan
  endpoint:
    path: /nmap/vuln_scan
    method: GET
    data_selector: vulnerabilities
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
- name: network_monitor
  endpoint:
    path: /services/data/vXX.X/sobjects/NetworkMonitor
    method: GET
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: dnsgen_usage
  endpoint:
    path: /dnsgen
    method: GET
    data_selector: usage
    params: {}
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPin
  endpoint:
    path: /arping
    method: GET
    data_selector: usage
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
    params: {}
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: ''
    params: {}
- name: protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
    params: {}
- name: port_scan
  endpoint:
    path: /nmap/port_scan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /nmap/vulnerability_scan
    method: GET
    data_selector: results
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: protocols
    params: {}
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: modules
    params: {}
- name: ARP Sniffing
  endpoint:
    path: /hexinject/arp
    method: GET
    data_selector: packets
- name: HTTP Header Extraction
  endpoint:
    path: /hexinject/http
    method: GET
    data_selector: headers
- name: capture_data
  endpoint:
    path: /api/capture_data
    method: GET
    data_selector: records
    params: {}
- name: sniff_mode
  endpoint:
    path: /sniff
    method: GET
- name: inject_mode
  endpoint:
    path: /inject
    method: POST
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
- name: tcpick
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: GUI
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: usage
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: list_shares
  endpoint:
    path: /SMB/CIFS/client/list/shares
    method: GET
    data_selector: shares
    params: {}
- name: list_shares
  endpoint:
    path: /services/data/vXX.X/sobjects/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: trivy
  endpoint:
    path: /trivy
    method: GET
    data_selector: records
    params: {}
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: records
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: records
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
    params: {}
- name: log2timeline
  endpoint:
    path: /log2timeline
    method: GET
    data_selector: records
- name: pinfo
  endpoint:
    path: /pinfo
    method: GET
    data_selector: records
- name: psort
  endpoint:
    path: /psort
    method: GET
    data_selector: records
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
    params: {}
- name: Output Arguments
  endpoint:
    path: /OutputArguments
    method: GET
- name: profiling arguments
  endpoint:
    path: /profiling_arguments
    method: GET
- name: dnstwist_usage
  endpoint:
    path: --help
    method: GET
    data_selector: usage
    params: {}
- name: dnsx_usage
  endpoint:
    path: --help
    method: GET
    data_selector: usage
    params: {}
- name: scan_config
  endpoint:
    path: /scan/config
    method: GET
    data_selector: records
    params: {}
- name: scan_filesystem
  endpoint:
    path: /scan/filesystem
    method: GET
    data_selector: records
    params: {}
- name: scan_image
  endpoint:
    path: /scan/image
    method: GET
    data_selector: records
    params: {}
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: tools
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: tools
    params: {}
- name: Amap
  endpoint:
    path: /kali/tools/amap
    method: GET
    data_selector: usage_examples
    params: {}
- name: arp-scan
  endpoint:
    path: /kali/tools/arp-scan
    method: GET
    data_selector: usage_examples
    params: {}
- name: ARPing
  endpoint:
    path: /kali/tools/arping
    method: GET
    data_selector: usage_examples
    params: {}
- name: targets
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: target
  endpoint:
    path: /autrecon/targets
    method: GET
    data_selector: targets
- name: bruteforcing
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: results
    params: {}
- name: wpscan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: ports
    params: {}
- name: vuln_scan
  endpoint:
    path: /vuln-scan
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: vulnerabilities
- name: protocol_detection
  endpoint:
    path: /detect/protocols
    method: GET
    data_selector: protocols
- name: network_sniffing
  endpoint:
    path: /sniff/network
    method: GET
    data_selector: sniffed_packets
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: capture_data
  endpoint:
    path: /capture/data
    method: GET
    data_selector: records
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
    params: {}
- name: packet_sniffing
  endpoint:
    path: /api/packet_sniffing
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /api/packet_injection
    method: POST
    data_selector: injections
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: configuration_options
  endpoint:
    path: /ftest/configuration
    method: GET
    data_selector: options
    params: {}
- name: timing_options
  endpoint:
    path: /ftest/timing
    method: GET
    data_selector: options
    params: {}
- name: evasion_options
  endpoint:
    path: /ftest/evasion
    method: GET
    data_selector: options
    params: {}
- name: connection_options
  endpoint:
    path: /ftest/connection
    method: GET
    data_selector: options
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: usage
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: usage
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: usage
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: usage
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: list shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: list_shares
  endpoint:
    path: /smb/client/shares
    method: GET
    data_selector: ''
    params: {}
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: records
- name: subdomain_search
  endpoint:
    path: /subdomain/search
    method: GET
    data_selector: records
- name: ip_id_count
  endpoint:
    path: /IPID_count
    method: GET
    data_selector: records
- name: arp_mitm
  endpoint:
    path: /arp_mitm
    method: GET
    data_selector: records
- name: arpcachepoison
  endpoint:
    path: /arpcachepoison
    method: GET
    data_selector: records
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: records
- name: defrag
  endpoint:
    path: /defrag
    method: GET
    data_selector: records
- name: send
  endpoint:
    path: /send
    method: GET
    data_selector: records
- name: general_options
  endpoint:
    path: /options/general
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /options/google_scraping
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /options/brute_force
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /options/whois_netrange
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /options/reverse_lookup
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /options/output
    method: GET
    data_selector: options
    params: {}
- name: general_options
  endpoint:
    path: /dnsenum/general_options
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /dnsenum/google_scraping_options
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /dnsenum/brute_force_options
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /dnsenum/whois_netrange_options
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /dnsenum/reverse_lookup_options
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /dnsenum/output_options
    method: GET
    data_selector: options
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage_example
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage_example
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage_example
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: plugins
  endpoint:
    path: /plugins
    method: GET
    data_selector: plugins
- name: directory_enum
  endpoint:
    path: /FUZZ
    method: GET
- name: default
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: SNMP Queries
  endpoint:
    path: /braa
    method: GET
    data_selector: queries
- name: host_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
    params: {}
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: injected_packets
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: usage
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: usage
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: usage
    params: {}
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: record
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: results
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: results
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: usage
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: usage
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: usage
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: usage
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
- name: configuration_options
  endpoint:
    path: /api/configuration
    method: GET
    data_selector: configs
    params: {}
- name: timing_options
  endpoint:
    path: /api/timing
    method: GET
    data_selector: timings
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: enumerated_domains
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: subdomains
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: dns_info
    params: {}
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
- name: amass
  endpoint:
    path: /amass
    method: GET
    data_selector: results
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
- name: dns_record
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: subdomains
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
    params: {}
- name: subdomain_takeover
  endpoint:
    path: /subdomain/takeover
    method: GET
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: hosts
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
    params: {}
- name: domain_report
  endpoint:
    path: /domain
    method: GET
    data_selector: Domain Report
    params: {}
- name: targets
  endpoint:
    path: targets
    method: GET
    data_selector: results
- name: Network Tools
  endpoint:
    path: /network-tools
    method: GET
- name: Network Scanning
  endpoint:
    path: /network-scanning
    method: GET
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
- name: ARPing
  endpoint:
    path: /arping
    method: GET
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: snmp_check
  endpoint:
    path: /snmp
    method: GET
    data_selector: results
    params: {}
- name: protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: records
- name: network_sniffing
  endpoint:
    path: /network/sniffing
    method: GET
    data_selector: protocols
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: GET
    data_selector: analysis
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: packets
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
- name: tcpick_usage
  endpoint:
    path: /tcpick/usage
    method: GET
    data_selector: usage
- name: tcpick_options
  endpoint:
    path: /tcpick/options
    method: GET
    data_selector: options
- name: Configuration options
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      conf_file: <conf_file>
      source_ip: <source_ip>
      source_port: <source_port>
      dest_ip: <dest_ip>
      dest_port: <dest_port>
      flags: <flags>
      protocol: <protocol>
      tos: <tos>
- name: Timing options
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      delay: <delay>
      sleep_time: <sleep time>
- name: Evasion options
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      evasion_method: <evasion method>
      ids_ttl: <ids_ttl>
- name: Connection options
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      reset_connection: <reset connection>
      end_connection: <end connection>
      IP_fragments_number: <IP fragments number>
      IP_fragments_size: <IP fragments size>
      TCP_segments_number: <TCP segments number>
      TCP_segments_size: <TCP segments size>
      cksum_value: <cksum value>
      marker: <marker>
- name: Configuration options
  endpoint:
    path: /ftest/config
    method: GET
    data_selector: options
    params: {}
- name: Timing options
  endpoint:
    path: /ftest/timing
    method: GET
    data_selector: timing
    params: {}
- name: Evasion options
  endpoint:
    path: /ftest/evasion
    method: GET
    data_selector: evasion
    params: {}
- name: Connection options
  endpoint:
    path: /ftest/connection
    method: GET
    data_selector: connection
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: records
- name: net_recon
  endpoint:
    path: /net/recon
    method: GET
    data_selector: records
- name: http_proxy
  endpoint:
    path: /http/proxy
    method: GET
    data_selector: records
- name: arp_spoof
  endpoint:
    path: /arp/spoof
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/list
    method: GET
    data_selector: shares
    params: {}
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: dns_records
    params: {}
- name: dns_records
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
    params: {}
- name: general_options
  endpoint:
    path: /general_options
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /google_scraping_options
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /brute_force_options
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /whois_netrange_options
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /reverse_lookup_options
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /output_options
    method: GET
    data_selector: options
    params: {}
- name: dns_records
  endpoint:
    path: /domain
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /query
    method: GET
    data_selector: records
- name: dns_scan
  endpoint:
    path: /fierce
    method: GET
    data_selector: records
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: target
  endpoint:
    path: targets
    method: GET
    data_selector: results
    params: {}
- name: SNMP Query
  endpoint:
    path: /snmp/query
    method: GET
    data_selector: records
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: targets
  endpoint:
    path: /autrecon/targets
    method: GET
- name: protocol_detection
  endpoint:
    path: /above/protocols
    method: GET
    data_selector: protocols
- name: ffuf
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params: {}
- name: hydra
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: results
    params: {}
- name: medusa
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: results
    params: {}
- name: wpscan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: braa
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: enum4linux-ng
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: fping
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: hping3
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: capture_data
  endpoint:
    path: /capture/data
    method: GET
    data_selector: results
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params: {}
- name: naabu
  endpoint:
    path: /naabu
    method: GET
    data_selector: results
    params: {}
- name: packet_sniff
  endpoint:
    path: /sniff
    method: POST
    data_selector: packets
- name: packet_inject
  endpoint:
    path: /inject
    method: POST
    data_selector: results
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: netdiscover
  endpoint:
    path: /netdiscover
    method: GET
- name: nbtscan
  endpoint:
    path: /nbtscan
    method: GET
- name: nmap
  endpoint:
    path: /nmap
    method: GET
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: configuration options
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
    params: {}
- name: darkstat
  endpoint:
    path: /darkstat
    method: GET
    data_selector: records
    params: {}
- name: dnschef
  endpoint:
    path: /dnschef
    method: GET
    data_selector: records
    params: {}
- name: ettercap
  endpoint:
    path: /ettercap
    method: GET
    data_selector: records
    params: {}
- name: information
  endpoint:
    path: /information
    method: GET
- name: network_protocol
  endpoint:
    path: /network_protocol
    method: GET
- name: application_protocol
  endpoint:
    path: /application_protocol
    method: GET
- name: sniff
  endpoint:
    path: /sniff
    method: GET
- name: spoof
  endpoint:
    path: /spoof
    method: GET
- name: record
  endpoint:
    path: /record
    method: GET
- name: client
  endpoint:
    path: /client
    method: GET
- name: server
  endpoint:
    path: /server
    method: GET
- name: ping
  endpoint:
    path: /ping
    method: GET
- name: traceroute
  endpoint:
    path: /traceroute
    method: GET
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: network_audit
  endpoint:
    path: /network_audit
    method: GET
- name: brute_force
  endpoint:
    path: /brute_force
    method: GET
- name: remote_administration
  endpoint:
    path: /remote_administration
    method: GET
- name: tools_not_related_to_network
  endpoint:
    path: /tools_not_related_to_network
    method: GET
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: share
    params: {}
- name: hexinject
  endpoint:
    path: /hexinject
    method: GET
- name: macchanger
  endpoint:
    path: /macchanger
    method: GET
- name: netsed
  endpoint:
    path: /netsed
    method: GET
- name: ngrep
  endpoint:
    path: /ngrep
    method: GET
- name: p0f
  endpoint:
    path: /p0f
    method: GET
- name: portspoof
  endpoint:
    path: /portspoof
    method: GET
- name: responder
  endpoint:
    path: /responder
    method: GET
- name: traffic_monitor
  endpoint:
    path: /traffic_monitor
    method: GET
    data_selector: records
- name: dns_query
  endpoint:
    path: /dns_query
    method: GET
    data_selector: records
- name: altdns
  endpoint:
    path: altdns
    method: GET
    data_selector: output
    params: {}
- name: amass intel
  endpoint:
    path: amass/intel
    method: GET
    data_selector: output
    params: {}
- name: amass enum
  endpoint:
    path: amass/enum
    method: GET
    data_selector: output
    params: {}
- name: assetfinder
  endpoint:
    path: assetfinder
    method: GET
    data_selector: output
    params: {}
- name: dnsenum
  endpoint:
    path: dnsenum
    method: GET
    data_selector: output
    params: {}
- name: domain_lookup
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: domain
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
- name: tcpick
  endpoint:
    path: tcpick
    method: GET
    data_selector: records
    params: {}
- name: tcpreplay
  endpoint:
    path: tcpreplay
    method: GET
    data_selector: records
    params: {}
- name: tshark
  endpoint:
    path: tshark
    method: GET
    data_selector: records
    params: {}
- name: urlcrazy
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: results
- name: Amap
  endpoint:
    path: /kali/tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /kali/tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /kali/tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: Capture interface
  endpoint:
    path: /capture/interface
    method: GET
    data_selector: interface_options
- name: Capture stop conditions
  endpoint:
    path: /capture/stop_conditions
    method: GET
    data_selector: stop_conditions
- name: Capture output
  endpoint:
    path: /capture/output
    method: GET
    data_selector: output_options
- name: Input file
  endpoint:
    path: /input/file
    method: GET
    data_selector: input_file_options
- name: Processing
  endpoint:
    path: /processing
    method: GET
    data_selector: processing_options
- name: Output
  endpoint:
    path: /output
    method: GET
    data_selector: output_options
- name: Diagnostic output
  endpoint:
    path: /diagnostic/output
    method: GET
    data_selector: diagnostic_options
- name: Miscellaneous
  endpoint:
    path: /miscellaneous
    method: GET
    data_selector: miscellaneous_options
- name: target
  endpoint:
    path: /autorecon/targets
    method: GET
    data_selector: results
- name: recon
  endpoint:
    path: /recon
    method: GET
    data_selector: data
    params: {}
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: data
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params:
      dst_ip: 5.6.7.8
      user: login
      password: password
- name: Altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params: {}
- name: OWASP Amass
  endpoint:
    path: /amass
    method: GET
    data_selector: domains
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: subdomains
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: dns_info
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params: {}
- name: vuln_scan
  endpoint:
    path: /vuln_scan
    method: GET
    data_selector: results
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: network_sniffing
  endpoint:
    path: /above/network_sniffing
    method: GET
    data_selector: protocols
    params: {}
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: GET
    data_selector: analysis_results
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
- name: dnstwist
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
    params: {}
- name: dnsx
  endpoint:
    path: /usr/bin/dnsx
    method: GET
    data_selector: records
    params: {}
- name: fierce
  endpoint:
    path: /usr/bin/fierce
    method: GET
    data_selector: records
    params: {}
- name: massdns
  endpoint:
    path: /usr/bin/massdns
    method: GET
    data_selector: records
    params: {}
- name: subjack
  endpoint:
    path: /usr/bin/subjack
    method: GET
    data_selector: records
    params: {}
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
    params: {}
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: url_crazy
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: domain
    params: {}
- name: apache_users
  endpoint:
    path: /apache-users
    method: GET
    data_selector: usernames
    params: {}
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: applications
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: hosts
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: packets
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: packets
    params: {}
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: commands
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: commands
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: commands
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: commands
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
- name: network_traffic
  endpoint:
    path: /chaosreader/analyze
    method: GET
    data_selector: records
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params: {}
- name: NTLM Authentication
  endpoint:
    path: /auth/ntlm
    method: POST
- name: Basic Authentication
  endpoint:
    path: /auth/basic
    method: POST
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
    params: {}
- name: ssldump
  endpoint:
    path: /ssldump
    method: GET
    data_selector: records
    params: {}
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: tcp_capture
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: arjun_options
  endpoint:
    path: /arjun/options
    method: GET
    data_selector: options
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: Amap
  endpoint:
    path: /amap
    method: GET
    data_selector: records
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: records
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /smb/shares
    method: GET
    data_selector: shares
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: dns_resolve
  endpoint:
    path: /dns_resolve
    method: GET
    data_selector: results
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: subdomains
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: subdomains
    params: {}
- name: input
  endpoint:
    path: /input-dir
    method: GET
    data_selector: files
    params: {}
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: HTTP Requests
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: scan
  endpoint:
    path: /dirsearch
    method: GET
    data_selector: results
    params:
      url: http://192.168.11.4/
      wordlists: words.txt
- name: network_scanning
  endpoint:
    path: /tools/network_scanning
    method: GET
    data_selector: records
    params: {}
- name: arp_scan
  endpoint:
    path: /tools/arp_scan
    method: GET
    data_selector: records
    params: {}
- name: arping
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: records
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
- name: tshark
  endpoint:
    path: /tshark
    method: GET
- name: targets
  endpoint:
    path: /autorecon
    method: POST
    data_selector: results
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration_options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration_options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: configuration_options
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage_commands
    params: {}
- name: list_shares
  endpoint:
    path: /services/data/vXX.X/sobjects/Shares
    method: GET
    data_selector: shares
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: altdns
  endpoint:
    path: /altdns
    method: GET
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: dns_proxy
  endpoint:
    path: /dns_proxy
    method: GET
    data_selector: responses
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: dnsgen
  endpoint:
    path: /dnsgen
    method: GET
    data_selector: records
- name: dnsrecon
  endpoint:
    path: /dnsrecon
    method: GET
    data_selector: records
- name: dnstracer
  endpoint:
    path: /dnstracer
    method: GET
    data_selector: records
- name: dnstwist
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: records
- name: Responder
  endpoint:
    path: /responder
    method: GET
    data_selector: help
- name: dnsx
  endpoint:
    path: /dnsx
    method: GET
    data_selector: records
    params: {}
- name: fierce
  endpoint:
    path: /fierce
    method: GET
    data_selector: records
    params: {}
- name: massdns
  endpoint:
    path: /massdns
    method: GET
    data_selector: records
    params: {}
- name: subjack
  endpoint:
    path: /subjack
    method: GET
    data_selector: records
    params: {}
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
- name: ssldump
  endpoint:
    path: /ssldump
    method: GET
    data_selector: records
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: usage
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: usage
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: usage
    params: {}
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: results
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: scan
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: output
    params: {}
- name: dnsgen
  endpoint:
    path: /dnsgen
    method: GET
    data_selector: output
    params: {}
- name: dnsrecon
  endpoint:
    path: /dnsrecon
    method: GET
    data_selector: output
    params: {}
- name: dnstracer
  endpoint:
    path: /dnstracer
    method: GET
    data_selector: output
    params: {}
- name: dnstwist
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: output
    params: {}
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: usage
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params:
      dst-ip: destination IP address
      user: username
      password: password
      netbiosname: server NetBIOS NAME
      device: device name
      src-eth: source ethernet address
      dst-eth: destination ethernet address
      src-ip: source IP address
      src-port: source port number
      dst-port: destination port number
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      query: FUZZ
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: url_collection
  endpoint:
    path: /hakrawler/collect_urls
    method: GET
    data_selector: results
    params: {}
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: results
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /domain
    method: GET
    data_selector: records
- name: masscan
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: network_protocol
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: arp-scan
  endpoint:
    path: /
    method: GET
    data_selector: hosts
    params: {}
- name: targets
  endpoint:
    path: targets
    method: GET
- name: credentials
  endpoint:
    path: /api/credentials
    method: GET
    data_selector: records
- name: masscan_scan
  endpoint:
    path: /
    method: GET
    data_selector: hosts
    params:
      scan: ports
- name: http_request
  endpoint:
    path: /
    method: GET
    data_selector: response
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration_options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration_options
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: usage_examples
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: subdomain_list
  endpoint:
    path: /services/data/vXX.X/sobjects/SubdomainList
    method: GET
    data_selector: records
- name: dns_record_info
  endpoint:
    path: /services/data/vXX.X/sobjects/DNSRecord
    method: GET
    data_selector: records
- name: tcpick_options
  endpoint:
    path: /help/tcpick
    method: GET
    data_selector: options
    params: {}
- name: tcpdump_usage
  endpoint:
    path: /help/tcpdump
    method: GET
    data_selector: usage
    params: {}
- name: tcpreplay_usage
  endpoint:
    path: /help/tcpreplay
    method: GET
    data_selector: usage
    params: {}
- name: tshark_usage
  endpoint:
    path: /help/tshark
    method: GET
    data_selector: usage
    params: {}
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: usage
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: usage
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: usage
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: usage
- name: domain_report
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: Typo Type
    params: {}
- name: list_shares
  endpoint:
    path: /list_shares
    method: GET
    data_selector: shares
    params: {}
- name: crawl
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      depth: 1
- name: dns_enumeration
  endpoint:
    path: /dns_enumeration
    method: GET
    data_selector: results
    params: {}
- name: port_scanning
  endpoint:
    path: /port_scanning
    method: GET
    data_selector: results
    params: {}
- name: whois_lookup
  endpoint:
    path: /whois_lookup
    method: GET
    data_selector: results
    params: {}
- name: whois_info
  endpoint:
    path: /whois
    method: GET
    data_selector: records
    params: {}
- name: subdomain_info
  endpoint:
    path: /subdomains
    method: GET
    data_selector: records
    params: {}
- name: email_info
  endpoint:
    path: /emails
    method: GET
    data_selector: records
    params: {}
- name: port_info
  endpoint:
    path: /ports
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: report
  endpoint:
    path: /autorecon/report
    method: GET
    data_selector: results
- name: dnstwist
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
    params: {}
- name: dnsx
  endpoint:
    path: /usr/bin/dnsx
    method: GET
    data_selector: results
    params: {}
- name: fierce
  endpoint:
    path: /usr/bin/fierce
    method: GET
    data_selector: results
    params: {}
- name: massdns
  endpoint:
    path: /usr/bin/massdns
    method: GET
    data_selector: results
    params: {}
- name: subjack
  endpoint:
    path: /usr/bin/subjack
    method: GET
    data_selector: results
    params: {}
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: credential_bruteforcing_commands
  endpoint:
    path: /path/to/auth/commands
    method: GET
    data_selector: commands
- name: wpscan
  endpoint:
    path: /path/to/wpscan
    method: GET
    data_selector: scan_results
- name: scan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      query: FUZZ
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: bing-ip2hosts
  endpoint:
    path: /bing-ip2hosts
    method: GET
    data_selector: results
- name: certgraph
  endpoint:
    path: /certgraph
    method: GET
    data_selector: domains
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vuln-scan
    method: GET
    data_selector: vuln_results
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: chaosreader_usage
  endpoint:
    path: /chaosreader/usage
    method: GET
    data_selector: usage
- name: Amap
  endpoint:
    path: /amap
    method: GET
    data_selector: ''
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: ''
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: ''
    params: {}
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: snmp_scanner
  endpoint:
    path: /braa
    method: GET
    data_selector: queries
    params: {}
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: commands
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
- name: network_protocols
  endpoint:
    path: /api/v1/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
    params: {}
- name: OWASP Amass
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: records
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
- name: dns_records
  endpoint:
    path: /services/data/vXX.X/sobjects/DNSRecords
    method: GET
    data_selector: records
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: packet
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: packet
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
      threads: 10
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: 404
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params: {}
- name: dns_resolve
  endpoint:
    path: /dns/resolve
    method: POST
    data_selector: results
    params: {}
- name: portscan
  endpoint:
    path: /portscan
    method: GET
    data_selector: results
    params: {}
- name: subdomain_enumeration
  endpoint:
    path: /subdomain/enumeration
    method: GET
    data_selector: results
    params: {}
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: dnstwist
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
- name: dnsx
  endpoint:
    path: /usr/bin/dnsx
    method: GET
- name: fierce
  endpoint:
    path: /usr/bin/fierce
    method: GET
- name: massdns
  endpoint:
    path: /usr/bin/massdns
    method: GET
- name: subjack
  endpoint:
    path: /usr/bin/subjack
    method: GET
- name: autorecon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: apache_users
  endpoint:
    path: /apache-users
    method: GET
- name: arjun
  endpoint:
    path: /arjun
    method: GET
- name: dirb
  endpoint:
    path: /dirb
    method: GET
- name: dirsearch
  endpoint:
    path: /dirsearch
    method: GET
- name: crawled_urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: scan
  endpoint:
    path: /scan
    method: POST
    data_selector: results
- name: nbtscan
  endpoint:
    path: /nbtscan
    method: GET
    data_selector: results
- name: netdiscover
  endpoint:
    path: /netdiscover
    method: GET
    data_selector: results
- name: nmap
  endpoint:
    path: /nmap
    method: GET
    data_selector: results
- name: certificates
  endpoint:
    path: /certificates
    method: GET
    data_selector: certs
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: service_detection
  endpoint:
    path: /service
    method: GET
    data_selector: results
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_services
    method: GET
    data_selector: services
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: whois_lookup
  endpoint:
    path: /whois
    method: GET
    data_selector: whois_info
- name: subdomain_search
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomain_info
- name: email_collection
  endpoint:
    path: /emails
    method: GET
    data_selector: email_info
- name: port_scan
  endpoint:
    path: /ports
    method: GET
    data_selector: port_info
- name: Network Tools
  endpoint:
    path: /tools/network
    method: GET
    data_selector: tools
    params: {}
- name: HTTP
  endpoint:
    path: /
    method: GET
    data_selector: HTTP/1.1
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: port_scan
  endpoint:
    path: /A/T4
    method: GET
    data_selector: results
    params: {}
- name: ack_scan
  endpoint:
    path: /sA/top-ports
    method: GET
    data_selector: results
    params: {}
- name: vuln_scan
  endpoint:
    path: /script=vuln
    method: GET
    data_selector: results
    params: {}
- name: snmp_check
  endpoint:
    path: /snmp-check
    method: GET
    data_selector: results
    params: {}
- name: smbmap
  endpoint:
    path: /smbmap
    method: GET
    data_selector: results
    params: {}
- name: pnscan
  endpoint:
    path: /pnscan
    method: GET
    data_selector: results
    params: {}
- name: polenum
  endpoint:
    path: /polenum
    method: GET
    data_selector: results
    params: {}
- name: t50
  endpoint:
    path: /t50
    method: GET
    data_selector: results
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: records
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: capture_data
  endpoint:
    path: /api/capture_data
    method: GET
    data_selector: records
- name: image_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: packet_capture
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: usage
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
- name: scan_config
  endpoint:
    path: /scan/config
    method: GET
    data_selector: records
    params: {}
- name: scan_filesystem
  endpoint:
    path: /scan/filesystem
    method: GET
    data_selector: records
    params: {}
- name: scan_image
  endpoint:
    path: /scan/image
    method: GET
    data_selector: records
    params: {}
- name: scan_kubernetes
  endpoint:
    path: /scan/kubernetes
    method: GET
    data_selector: records
    params: {}
- name: scan_repository
  endpoint:
    path: /scan/repository
    method: GET
    data_selector: records
    params: {}
- name: scan_vm
  endpoint:
    path: /scan/vm
    method: GET
    data_selector: records
    params: {}
- name: target
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: usage
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: usage
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: usage
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: usage
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: masscan_usage
  endpoint:
    path: /masscan
    method: GET
    data_selector: usage
    params: {}
- name: IPID_count
  endpoint:
    path: /IPID_count
    method: GET
    data_selector: records
- name: arp_mitm
  endpoint:
    path: /arp_mitm
    method: GET
    data_selector: records
- name: arpcachepoison
  endpoint:
    path: /arpcachepoison
    method: GET
    data_selector: records
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: records
- name: bind_layers
  endpoint:
    path: /bind_layers
    method: GET
    data_selector: records
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: service_detection
  endpoint:
    path: /service_detection
    method: GET
    data_selector: results
    params: {}
- name: network_packets
  endpoint:
    path: /above
    method: GET
    data_selector: packets
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: data
    params: {}
- name: dnstwist_usage
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
- name: dnsx_usage
  endpoint:
    path: dnsx
    method: GET
- name: fierce_usage
  endpoint:
    path: fierce
    method: GET
- name: massdns_usage
  endpoint:
    path: massdns
    method: GET
- name: subjack_usage
  endpoint:
    path: subjack
    method: GET
- name: packet_sniffing
  endpoint:
    path: /packet/sniffing
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /packet/injection
    method: POST
    data_selector: injected_packets
- name: domain_report
  endpoint:
    path: /domain/report
    method: GET
    data_selector: results
    params: {}
- name: gobuster
  endpoint:
    path: /dir
    method: GET
    params:
      wordlist: words.txt
      extensions: inc
- name: feroxbuster
  endpoint:
    path: /fuzz
    method: GET
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: network_tools
  endpoint:
    path: /api/network_tools
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /api/arp_scan
    method: GET
    data_selector: results
    params: {}
- name: arpping
  endpoint:
    path: /api/arpping
    method: GET
    data_selector: responses
    params: {}
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
    params:
      whois: true
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: enumerated_domains
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: found_subdomains
    params:
      subs_only: true
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: dns_info
    params: {}
- name: targets
  endpoint:
    path: targets
    method: GET
- name: SNMP Query
  endpoint:
    path: /snmp-query
    method: GET
    data_selector: results
- name: general_options
  endpoint:
    path: /dnsenum/general_options
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /dnsenum/google_scraping_options
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /dnsenum/brute_force_options
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /dnsenum/whois_netrange_options
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /dnsenum/reverse_lookup_options
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /dnsenum/output_options
    method: GET
    data_selector: options
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params:
      ports: 20-25
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: response
    params:
      depth: 2
      wordlist: words.txt
      extensions: php,html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: response
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: URLs
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: services
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: darkstat
  endpoint:
    path: /darkstat
    method: GET
- name: dnschef
  endpoint:
    path: /dnschef
    method: GET
- name: ettercap
  endpoint:
    path: /ettercap
    method: GET
- name: exif_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: sysDescr
  endpoint:
    path: /.1.3.6.1.2.1.1.1.0
    method: GET
    data_selector: sysDescr
    params: {}
- name: hrStorageAllocationUnits
  endpoint:
    path: /.1.3.6.1.2.1.25.2.3.1.4.1
    method: GET
    data_selector: hrStorageAllocationUnits
    params: {}
- name: hrStorageSize
  endpoint:
    path: /.1.3.6.1.2.1.25.2.3.1.5.1
    method: GET
    data_selector: hrStorageSize
    params: {}
- name: list_shares
  endpoint:
    path: /smb/shares
    method: GET
    data_selector: shares
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: POST
    data_selector: results
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: Amass Intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params: {}
- name: Amass Enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params: {}
- name: Assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
    params: {}
- name: Dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vuln_scan
    method: GET
    data_selector: results
- name: dnstwist
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
- name: dnsx
  endpoint:
    path: dnsx
    method: GET
    data_selector: results
- name: fierce
  endpoint:
    path: fierce
    method: GET
    data_selector: found
- name: massdns
  endpoint:
    path: massdns
    method: GET
    data_selector: response
- name: subjack
  endpoint:
    path: subjack
    method: GET
    data_selector: results
- name: sniffing
  endpoint:
    path: /sniffing
    method: GET
    data_selector: protocols
    params: {}
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: POST
    data_selector: analysis
    params:
      input-dir: --input-dir
      input: --input
      modules: --modules
      output: --output
- name: subdomains
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: data
    params: {}
- name: crawl
  endpoint:
    path: /
    method: GET
- name: gospider
  endpoint:
    path: /gospider
    method: GET
- name: hakrawler
  endpoint:
    path: /hakrawler
    method: GET
- name: httrack
  endpoint:
    path: /httrack
    method: GET
- name: photon
  endpoint:
    path: /photon
    method: GET
- name: bing-ip2hosts
  endpoint:
    path: /bing-ip2hosts
    method: GET
- name: certgraph
  endpoint:
    path: /certgraph
    method: GET
- name: cloud_services
  endpoint:
    path: /cloud_services
    method: GET
    data_selector: services
- name: Image Metadata
  endpoint:
    path: /exifprobe/DSCN0010.jpg
    method: GET
    data_selector: values
- name: http_request
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: file_operations
  endpoint:
    path: /exiftool
    method: POST
    data_selector: operations
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: records
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: records
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: records
    params: {}
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
    params: {}
- name: kubernetes
  endpoint:
    path: /kubernetes
    method: GET
    data_selector: records
    params: {}
- name: repository
  endpoint:
    path: /repository
    method: GET
    data_selector: records
    params: {}
- name: rootfs
  endpoint:
    path: /rootfs
    method: GET
    data_selector: records
    params: {}
- name: sbom
  endpoint:
    path: /sbom
    method: GET
    data_selector: records
    params: {}
- name: vm
  endpoint:
    path: /vm
    method: GET
    data_selector: records
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params:
      ip: 192.168.11.4
      user: hello
      password: hello
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: dns_enumeration
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: target
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: domain
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: scan
  endpoint:
    path: /scan
    method: POST
    data_selector: results
    params:
      ip: 192.168.11.0/24
      ports: 20-25
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: results
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes:
      - '404'
- name: above
  endpoint:
    path: /above/help
    method: GET
    data_selector: options
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli/help
    method: GET
    data_selector: options
- name: capture_data
  endpoint:
    path: /capture/data
    method: GET
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: url
    params: {}
- name: packet_sniffing
  endpoint:
    path: /api/v1/sniff
    method: GET
    data_selector: records
- name: packet_injection
  endpoint:
    path: /api/v1/inject
    method: POST
    data_selector: records
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: tcpick_usage
  endpoint:
    path: /
    method: GET
    data_selector: payload
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: breaches
  endpoint:
    path: /breaches
    method: GET
    data_selector: results
- name: ftester
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration_options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration_options
    params: {}
- name: firewall_builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: gui_version
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: targets
  endpoint:
    path: targets
    method: GET
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: sysDescr
  endpoint:
    path: /sysDescr
    method: GET
- name: hrStorageAllocationUnits
  endpoint:
    path: /hrStorageAllocationUnits
    method: GET
- name: hrStorageSize
  endpoint:
    path: /hrStorageSize
    method: GET
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
- name: owasp_amass
  endpoint:
    path: /amass
    method: GET
    data_selector: results
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: ports
    params: {}
- name: service_detection
  endpoint:
    path: /service_detection
    method: GET
    data_selector: services
    params: {}
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*.jp'
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: protocols
    params: {}
- name: bruteshark
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: modules
    params: {}
- name: traffic_analysis
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      exclude_status_codes: '404'
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: url
    params: {}
- name: target_cloud_resources
  endpoint:
    path: /cloud_enum/resources
    method: GET
    data_selector: resources
- name: image_metadata
  endpoint:
    path: /example.jpg
    method: GET
    data_selector: File Size, File Type, MIME Type, Exif Byte Order, Image Description,
      Make, Camera Model Name, Orientation, X Resolution, Y Resolution, Resolution
      Unit, Software
- name: audio_metadata
  endpoint:
    path: /example.mp3
    method: GET
    data_selector: File Size, File Type, MIME Type, MPEG Audio Version, Audio Layer,
      Audio Bitrate, Sample Rate, Channel Mode
- name: document_metadata
  endpoint:
    path: /example.docx
    method: GET
    data_selector: File Size, File Type, MIME Type, Zip Required Version, Zip Bit
      Flag, Zip Compression, Zip Modify Date
- name: epub_metadata
  endpoint:
    path: /example.epub
    method: GET
    data_selector: File Size, File Type, MIME Type, Identifier Id, Identifier, Title
      Id, Title
- name: targets
  endpoint:
    path: /h8mail/targets
    method: GET
    data_selector: results
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /image
    method: scan
    data_selector: results
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: config_options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: config_options
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: list_shares
  endpoint:
    path: /smb/shares
    method: GET
    data_selector: shares
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
    params: {}
- name: whois_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
    params: {}
- name: subdomain_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: records
    params: {}
- name: SNMP Scanner
  endpoint:
    path: /braa
    method: GET
    data_selector: queries
    params: {}
- name: enum4linux-ng
  endpoint:
    path: /enum4linux-ng
    method: GET
    data_selector: results
    params: {}
- name: fping
  endpoint:
    path: /fping
    method: GET
    data_selector: targets
    params: {}
- name: hping3
  endpoint:
    path: /hping3
    method: GET
    data_selector: packets
    params: {}
- name: masscan
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: domain
  endpoint:
    path: /domain
    method: GET
    data_selector: records
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: protocols
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: capture_data
  endpoint:
    path: /capture/data
    method: GET
    data_selector: records
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: payload
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: traffic
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: packets
    params: {}
- name: screenshot
  endpoint:
    path: /eyewitness/screenshot
    method: GET
    data_selector: results
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
- name: targets
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /smb/list/shares
    method: GET
    data_selector: shares
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
- name: OWASP Amass
  endpoint:
    path: /amass
    method: GET
    data_selector: records
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: records
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: sysDescr
  endpoint:
    path: /sysDescr
    method: GET
- name: hrStorageAllocationUnits
  endpoint:
    path: /hrStorageAllocationUnits
    method: GET
- name: hrStorageSize
  endpoint:
    path: /hrStorageSize
    method: GET
- name: dns_records
  endpoint:
    path: /api/dns/records
    method: GET
    data_selector: records
- name: domain
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port/scan
    method: GET
    data_selector: results
    params:
      timeout: 1000
      retries: 3
- name: nbtscan
  endpoint:
    path: /netbios/scan
    method: GET
    data_selector: results
    params:
      timeout: 1000
      verbose: true
- name: logs
  endpoint:
    path: /logs/
    method: GET
    data_selector: logs
    params: {}
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      depth: 5
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
    params: {}
- name: authentication
  endpoint:
    path: /api/authentication
    method: POST
    data_selector: data
    params: {}
- name: image_metadata
  endpoint:
    path: /metadata/image
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /metadata/audio
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /metadata/document
    method: GET
    data_selector: metadata
    params: {}
- name: ebook_metadata
  endpoint:
    path: /metadata/ebook
    method: GET
    data_selector: metadata
    params: {}
- name: https_request
  endpoint:
    path: /
    method: GET
    data_selector: response
    params: {}
- name: scan_single_url
  endpoint:
    path: /scan/single
    method: GET
    data_selector: records
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: records
- name: packet_capture
  endpoint:
    path: /capture
    method: GET
    data_selector: packets
    params: {}
- name: targets
  endpoint:
    params:
      targets: USER_TARGETS
- name: urls
  endpoint:
    params:
      urls: USER_URLS
- name: custom_query
  endpoint:
    params:
      custom_query: USER_QUERY
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: records
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: records
    params: {}
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: tools
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: tools
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: snmp_scanner
  endpoint:
    path: /snmp_scanner
    method: GET
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: arp_mitm
  endpoint:
    path: /arp_mitm
    method: GET
    data_selector: arp_mitm
- name: dns_resolve
  endpoint:
    path: /dns_resolve
    method: GET
    data_selector: dns_resolve
- name: traceroute
  endpoint:
    path: /traceroute
    method: GET
    data_selector: traceroute
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: results
- name: vulnerability_detection
  endpoint:
    path: /vulnerability_detection
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
- name: dnsgen
  endpoint:
    path: /dnsgen
    method: GET
- name: dnsrecon
  endpoint:
    path: /dnsrecon
    method: GET
- name: dnstracer
  endpoint:
    path: /dnstracer
    method: GET
- name: dnstwist
  endpoint:
    path: /dnstwist
    method: GET
- name: domain_scan
  endpoint:
    path: -d
    method: GET
    data_selector: results
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: ''
    params:
      extensions: inc
      wordlist: words.txt
      threads: 50
      timeout: 7
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: ''
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: url_crawl
  endpoint:
    path: /
    method: GET
- name: configuration_options
  endpoint:
    path: /ftest/configuration
    method: GET
    data_selector: options
    params: {}
- name: timing_options
  endpoint:
    path: /ftest/timing
    method: GET
    data_selector: timing
    params: {}
- name: evasion_options
  endpoint:
    path: /ftest/evasion
    method: GET
    data_selector: evasion
    params: {}
- name: connection_options
  endpoint:
    path: /ftest/connection
    method: GET
    data_selector: connection
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: services
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
    data_selector: data
    params: {}
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: reports
    params: {}
- name: dns_enumeration
  endpoint:
    path: /dns/enum
    method: GET
    data_selector: results
    params: {}
- name: bucket
  endpoint:
    path: /bucket
    method: GET
    data_selector: records
- name: provider
  endpoint:
    path: /provider
    method: GET
    data_selector: records
- name: general_options
  endpoint:
    path: /dnsenum/general_options
    method: GET
    data_selector: records
    params: {}
- name: google_scraping_options
  endpoint:
    path: /dnsenum/google_scraping_options
    method: GET
    data_selector: records
    params: {}
- name: brute_force_options
  endpoint:
    path: /dnsenum/brute_force_options
    method: GET
    data_selector: records
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /dnsenum/whois_netrange_options
    method: GET
    data_selector: records
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /dnsenum/reverse_lookup_options
    method: GET
    data_selector: records
    params: {}
- name: output_options
  endpoint:
    path: /dnsenum/output_options
    method: GET
    data_selector: records
    params: {}
- name: username_check
  endpoint:
    path: /check/username
    method: POST
    data_selector: results
    params: {}
- name: Network Scanning - Amap
  endpoint:
    path: /tools/network_scanning/amap
    method: GET
    data_selector: records
    params: {}
- name: Network Scanning - arp-scan
  endpoint:
    path: /tools/network_scanning/arp-scan
    method: GET
    data_selector: records
    params: {}
- name: Network Scanning - ARPing
  endpoint:
    path: /tools/network_scanning/arping
    method: GET
    data_selector: records
    params: {}
- name: dnstwist
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: results
    params: {}
- name: dnsx
  endpoint:
    path: /dnsx
    method: GET
    data_selector: results
    params: {}
- name: fierce
  endpoint:
    path: /fierce
    method: GET
    data_selector: results
    params: {}
- name: massdns
  endpoint:
    path: /massdns
    method: GET
    data_selector: results
    params: {}
- name: subjack
  endpoint:
    path: /subjack
    method: GET
    data_selector: results
    params: {}
- name: target
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: masscan_usage
  endpoint:
    path: /masscan/usage
    method: GET
    data_selector: commands
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: port_scan
  endpoint:
    path: /portscan
    method: GET
    data_selector: results
    params: {}
- name: os_detection
  endpoint:
    path: /osdetection
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vulnscan
    method: GET
    data_selector: results
    params: {}
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: urls
  endpoint:
    path: /urls
    method: GET
    data_selector: urls
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
- name: cloud_service
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: records
    params: {}
- name: chaosreader
  endpoint:
    path: /help
    method: GET
    data_selector: usage
- name: darkstat
  endpoint:
    path: /help
    method: GET
    data_selector: usage
- name: dnschef
  endpoint:
    path: /help
    method: GET
    data_selector: usage
- name: ettercap
  endpoint:
    path: /help
    method: GET
    data_selector: usage
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: packet_sniffing
  endpoint:
    path: /hexinject/snip
    method: GET
    data_selector: packets
    params: {}
- name: eyewitness
  endpoint:
    path: /eyewitness
    method: GET
- name: getallurls
  endpoint:
    path: /getallurls
    method: GET
- name: goofile
  endpoint:
    path: /goofile
    method: GET
- name: gowitness
  endpoint:
    path: /gowitness
    method: GET
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: bucket_check
  endpoint:
    path: /check-bucket
    method: POST
    data_selector: results
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
- name: tshark
  endpoint:
    path: /tshark
    method: GET
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: conf_file
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: verbose
- name: Network Tools
  endpoint:
    path: /kali/tools/network
    method: GET
    data_selector: tools
    params: {}
- name: Amap
  endpoint:
    path: /kali/tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /kali/tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /kali/tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: targets
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: snmp_scan
  endpoint:
    path: /snmp
    method: GET
    data_selector: results
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params: {}
- name: Amass Intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
    params: {}
- name: Amass Enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params: {}
- name: Assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: subdomains
    params: {}
- name: Dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: dns_info
    params: {}
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: supported_protocols
    params: {}
- name: dnsenum_usage
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: usage
    params: {}
- name: dnsgen_usage
  endpoint:
    path: /dnsgen
    method: GET
    data_selector: usage
    params: {}
- name: dnsrecon_usage
  endpoint:
    path: /dnsrecon
    method: GET
    data_selector: usage
    params: {}
- name: dnstracer_usage
  endpoint:
    path: /dnstracer
    method: GET
    data_selector: usage
    params: {}
- name: dnstwist_usage
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: usage
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: darkstat
  endpoint:
    path: /darkstat
    method: GET
- name: dnschef
  endpoint:
    path: /dnschef
    method: GET
- name: ettercap
  endpoint:
    path: /ettercap
    method: GET
- name: subdomain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: config
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: config
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: config
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: config
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      extensions: php,html
      threads: 50
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
      threads: 10
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_services
    method: GET
    data_selector: services
- name: list_shares
  endpoint:
    path: /198
    method: GET
    data_selector: shares
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domain_info
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: enumeration_results
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: found_domains
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: dns_info
    params: {}
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: urlcrazy
  endpoint:
    path: /search
    method: GET
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: usernames
  endpoint:
    path: /sherlock/usernames
    method: GET
    data_selector: results
- name: crawled_urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params: {}
- name: cloud_resources
  endpoint:
    path: /cloud_enum/resources
    method: GET
    data_selector: resources
- name: scan_results
  endpoint:
    path: /scans
    method: GET
    data_selector: results
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: report
  endpoint:
    path: /report
    method: GET
- name: SNMP Scan
  endpoint:
    path: /braa
    method: GET
    data_selector: responses
    params: {}
- name: bucket
  endpoint:
    path: /buckets
    method: GET
- name: bucket-file
  endpoint:
    path: /bucket-files
    method: GET
- name: network_protocols
  endpoint:
    path: /supported_protocols
    method: GET
    data_selector: protocols
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: tools
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: tools
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
- name: target
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: scan
  endpoint:
    path: /masscan
    method: GET
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: options
    params: {}
- name: capture_data
  endpoint:
    path: /capture
    method: GET
    data_selector: records
- name: sniffing
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
    params: {}
- name: injection
  endpoint:
    path: /inject
    method: POST
    data_selector: results
    params: {}
- name: bettercap_usage
  endpoint:
    path: /bettercap/usage
    method: GET
- name: cryptcat_usage
  endpoint:
    path: /cryptcat/usage
    method: GET
- name: dbd_usage
  endpoint:
    path: /dbd/usage
    method: GET
- name: ncat_usage
  endpoint:
    path: /ncat/usage
    method: GET
- name: netwox_usage
  endpoint:
    path: /netwox/usage
    method: GET
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params:
      dst-ip: 5.6.7.8
      user: login
      password: password
      netbiosname: netbiosname
      device: device
      src-eth: 0:2:3:4:5:6
      dst-eth: 0:8:9:a:b:c
      src-ip: 192.168.11.3
      src-port: '0'
      dst-port: '139'
      ip4opts: ip4opts
      ip6exts: ip6exts
      authversion: '2'
      timeout: '60000'
      verbose: true
      debug: true
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: usage
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: geo_info
  endpoint:
    path: /{ip}/geo
    method: GET
    data_selector: geo
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: options
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: options
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: options
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: options
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: dnsgen
  endpoint:
    path: /dnsgen
    method: GET
    data_selector: records
- name: dnsrecon
  endpoint:
    path: /dnsrecon
    method: GET
    data_selector: records
- name: dnstracer
  endpoint:
    path: /dnstracer
    method: GET
    data_selector: records
- name: dnstwist
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: records
- name: dns_enumeration
  endpoint:
    path: /dns/enum
    method: GET
    data_selector: records
    params: {}
- name: subdomain_listing
  endpoint:
    path: /subdomains/list
    method: GET
    data_selector: subdomains
    params: {}
- name: domain_scan
  endpoint:
    path: --domain
    method: GET
    data_selector: results
    params: {}
- name: dns_queries
  endpoint:
    path: /dnsenum/queries
    method: GET
    data_selector: records
    params: {}
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: crawled_urls
  endpoint:
    path: /crawled
    method: GET
    data_selector: urls
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: hostnames
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      lang: en-us
      mkt: ''
- name: gobuster
  endpoint:
    path: /dir
    method: GET
    data_selector: results
    params:
      threads: 10
      wordlist: words.txt
      timeout: 10
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: services
    params: {}
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: url
    params: {}
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: resources
    params: {}
- name: image_metadata
  endpoint:
    path: /metadata/image
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /metadata/audio
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /metadata/document
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /metadata/epub
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: ''
    params: {}
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: ''
    params: {}
- name: modules
  endpoint:
    path: -m mod1,mod2,...
    method: GET
- name: scan
  endpoint:
    path: -s TARGET
    method: GET
- name: sherlock_usage
  endpoint:
    path: /sherlock/help
    method: GET
    data_selector: commands
    params: {}
- name: scan_config
  endpoint:
    path: /scan/config
    method: GET
- name: scan_filesystem
  endpoint:
    path: /scan/filesystem
    method: GET
- name: scan_image
  endpoint:
    path: /scan/image
    method: GET
- name: scan_kubernetes
  endpoint:
    path: /scan/kubernetes
    method: GET
- name: scan_repository
  endpoint:
    path: /scan/repository
    method: GET
- name: scan_rootfs
  endpoint:
    path: /scan/rootfs
    method: GET
- name: scan_vm
  endpoint:
    path: /scan/vm
    method: GET
- name: scan_sbom
  endpoint:
    path: /scan/sbom
    method: GET
- name: target
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: SNMP Scanner
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: network_scanning_amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: network_scanning_arp_scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: network_scanning_arping
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: scan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params:
      ip: 192.168.11.0/24
      ports: 20-25
- name: above
  endpoint:
    path: /above
    method: GET
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
- name: traffic_analysis
  endpoint:
    path: /chaosreader/traffic
    method: GET
    data_selector: records
    params: {}
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: scan_results
    params: {}
- name: vuln_scan
  endpoint:
    path: /vuln-scan
    method: GET
    data_selector: vulnerability_results
    params: {}
- name: ARP Sniffing
  endpoint:
    path: /hexinject/sniif
    method: GET
    data_selector: packets
- name: above
  endpoint:
    path: /above
    method: GET
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: GET
- name: capture_data
  endpoint:
    path: /capture
    method: GET
    data_selector: records
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /inject
    method: POST
    data_selector: response
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: record
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tcpick_usage
  endpoint:
    path: /usage/tcpick
    method: GET
    data_selector: usage
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: records
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: records
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: list_shares
  endpoint:
    path: /smb/cifs/client/list_shares
    method: GET
    data_selector: shares
    params:
      dst-ip: 5.6.7.8
      user: login
      password: password
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
- name: owasp_amass
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
- name: dnsrecords
  endpoint:
    path: /dnsrecords
    method: GET
    data_selector: records
- name: dnsenum_usage
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: usage
    params: {}
- name: dnsgen_usage
  endpoint:
    path: /dnsgen
    method: GET
    data_selector: usage
    params: {}
- name: dnsrecon_usage
  endpoint:
    path: /dnsrecon
    method: GET
    data_selector: usage
    params: {}
- name: dnstracer_usage
  endpoint:
    path: /dnstracer
    method: GET
    data_selector: usage
    params: {}
- name: dnstwist_usage
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: usage
    params: {}
- name: domain_scan
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: results
    params: {}
- name: domain
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      status_codes: '404'
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: image_metadata
  endpoint:
    path: /metadata/image
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /metadata/audio
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /metadata/document
    method: GET
    data_selector: metadata
    params: {}
- name: target_cloud_resources
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: resources
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: subdomain discovery
  endpoint:
    path: /subfinder/discovery
    method: GET
    data_selector: subdomains
- name: nmap_scan_results
  endpoint:
    path: /scan_results
    method: POST
    data_selector: results
- name: network_tools
  endpoint:
    path: /network/tools
    method: GET
    data_selector: tools
    params: {}
- name: targets
  endpoint:
    path: /
    method: GET
    data_selector: targets
- name: targets
  endpoint:
    path: targets
    method: GET
    data_selector: targets
- name: snmp_scan
  endpoint:
    path: /snmp_scan
    method: GET
    data_selector: results
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params: {}
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: service_detection
  endpoint:
    path: /service_detection
    method: GET
    data_selector: services
- name: vulnerability_detection
  endpoint:
    path: /vulnerability_detection
    method: GET
    data_selector: vulnerabilities
- name: protocol_detection
  endpoint:
    path: /above/protocols
    method: GET
    data_selector: protocols
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: packet_capture
  endpoint:
    path: /traffic/capture
    method: POST
    data_selector: capture
    params:
      timer: not set
      interface: not set
      output: not set
      input: not set
- name: dns_proxy
  endpoint:
    path: /dnschef
    method: GET
    data_selector: responses
    params: {}
- name: capture
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
- name: NTLM Authentication
  endpoint:
    path: /NTLM
    method: GET
    data_selector: records
- name: LLMNR
  endpoint:
    path: /LLMNR
    method: GET
    data_selector: records
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
- name: captured_packets
  endpoint:
    path: /
    method: GET
    data_selector: packets
    params: {}
- name: network_filtering
  endpoint:
    path: /network/filtering
    method: POST
    data_selector: results
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
- name: capture_interface
  endpoint:
    path: /ftest/capture/interface
    method: GET
    data_selector: records
    params: {}
- name: capture_stop_conditions
  endpoint:
    path: /ftest/capture/stop_conditions
    method: GET
    data_selector: records
    params: {}
- name: capture_output
  endpoint:
    path: /ftest/capture/output
    method: GET
    data_selector: records
    params: {}
- name: input_file
  endpoint:
    path: /ftest/input/file
    method: GET
    data_selector: records
    params: {}
- name: processing
  endpoint:
    path: /ftest/processing
    method: GET
    data_selector: records
    params: {}
- name: output
  endpoint:
    path: /ftest/output
    method: GET
    data_selector: records
    params: {}
- name: diagnostic_output
  endpoint:
    path: /ftest/diagnostic/output
    method: GET
    data_selector: records
    params: {}
- name: miscellaneous
  endpoint:
    path: /ftest/miscellaneous
    method: GET
    data_selector: records
    params: {}
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params: {}
- name: OWASP Amass
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      domain: string
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: domains
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: subdomains
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: dns_info
    params: {}
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: subdomains
  endpoint:
    path: /
    method: GET
    data_selector: subdomains
    params:
      depth: 5
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: File Metadata
- name: cloud_service
  endpoint:
    path: /cloud_service
    method: GET
    data_selector: results
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: report
  endpoint:
    path: /report
    method: GET
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: targets
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: subdomains
  endpoint:
    path: /v1/subdomains
    method: GET
    data_selector: subdomains
    params:
      domain: example.com
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
    params: {}
- name: headers_info
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /sslinfo
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: subdomains
  endpoint:
    path: /sub
    method: GET
    data_selector: subdomains
- name: directories
  endpoint:
    path: /dir
    method: GET
    data_selector: directories
- name: port_scan
  endpoint:
    path: /ps
    method: GET
    data_selector: port_scan
- name: runscans
  endpoint:
    path: /runscans
    method: POST
    data_selector: results
    params:
      categories: TEST_SCAN
      range: 192.168.11.4 192.168.11.4
      output: XMLFork
- name: db2view
  endpoint:
    path: /db2view/nmap
    method: POST
    data_selector: view
    params: {}
- name: network_tools
  endpoint:
    path: /kali/tools/network
    method: GET
    data_selector: tools
    params: {}
- name: dns_cache_snooper
  endpoint:
    path: /marketplace/info/all
    method: GET
    data_selector: records
    params: {}
- name: targets
  endpoint:
    path: targets
    method: GET
- name: snmp_scan
  endpoint:
    path: /snmp
    method: GET
- name: targets
  endpoint:
    path: targets
    method: GET
- name: reports
  endpoint:
    path: reports
    method: GET
- name: plugins
  endpoint:
    path: plugins
    method: GET
- name: masscan_usage
  endpoint:
    path: masscan <ip addresses/ranges> -p ports options
    method: GET
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: supported_protocols
- name: ftp
  endpoint:
    path: /services/data/v7.94/sobjects/ftp
    method: GET
    data_selector: records
- name: ssh
  endpoint:
    path: /services/data/v7.94/sobjects/ssh
    method: GET
    data_selector: records
- name: telnet
  endpoint:
    path: /services/data/v7.94/sobjects/telnet
    method: GET
    data_selector: records
- name: smtp
  endpoint:
    path: /services/data/v7.94/sobjects/smtp
    method: GET
    data_selector: records
- name: http
  endpoint:
    path: /services/data/v7.94/sobjects/http
    method: GET
    data_selector: records
- name: chaosreader_command
  endpoint:
    path: /chaosreader/usage
    method: GET
    data_selector: commands
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: capture_data
  endpoint:
    path: /capture/data
    method: GET
    data_selector: records
- name: tcp_packets
  endpoint:
    path: /tcpick
    method: GET
    data_selector: packets
- name: list shares
  endpoint:
    path: /smb/list/shares
    method: GET
    data_selector: share
    params: {}
- name: dns_enum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /dns/query
    method: GET
    data_selector: records
- name: information
  endpoint:
    path: /information
    method: GET
    data_selector: tools
    params: {}
- name: network_protocol
  endpoint:
    path: /network_protocol
    method: GET
    data_selector: tools
    params: {}
- name: application_protocol
  endpoint:
    path: /application_protocol
    method: GET
    data_selector: tools
    params: {}
- name: sniff
  endpoint:
    path: /sniff
    method: GET
    data_selector: tools
    params: {}
- name: spoof
  endpoint:
    path: /spoof
    method: GET
    data_selector: tools
    params: {}
- name: record
  endpoint:
    path: /record
    method: GET
    data_selector: tools
    params: {}
- name: client
  endpoint:
    path: /client
    method: GET
    data_selector: tools
    params: {}
- name: server
  endpoint:
    path: /server
    method: GET
    data_selector: tools
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: tools
    params: {}
- name: traceroute
  endpoint:
    path: /traceroute
    method: GET
    data_selector: tools
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: tools
    params: {}
- name: network_audit
  endpoint:
    path: /network_audit
    method: GET
    data_selector: tools
    params: {}
- name: brute_force
  endpoint:
    path: /brute_force
    method: GET
    data_selector: tools
    params: {}
- name: remote_administration
  endpoint:
    path: /remote_administration
    method: GET
    data_selector: tools
    params: {}
- name: tools_not_related_to_network
  endpoint:
    path: /tools_not_related_to_network
    method: GET
    data_selector: tools
    params: {}
- name: crawled_urls
  endpoint:
    path: /crawl
    method: GET
    data_selector: urls
- name: list_shares
  endpoint:
    path: /smbclient/list/shares
    method: GET
    data_selector: shares
    params: {}
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
- name: urls
  endpoint:
    path: /urls
    method: GET
    data_selector: results
- name: image_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: altdns
  endpoint:
    path: /altdns
    method: POST
    data_selector: output
    params:
      input: subdomains.txt
      output: out.txt
      wordlist: words.txt
      resolve: true
      save: result.txt
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params:
      domain: digital.go.jp
      whois: true
      config: config.yaml
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params:
      domain: digital.go.jp
      config: config.yaml
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
    params:
      subs_only: true
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: domains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: domain
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
- name: cloud_resources
  endpoint:
    path: /cloud_enum/resources
    method: GET
    data_selector: resources
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: File Size, File Type, MIME Type, Make, Camera Model Name
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: records
- name: container_image
  endpoint:
    path: /container_image
    method: GET
    data_selector: records
- name: usage
  endpoint:
    path: /commix/help
    method: GET
- name: version
  endpoint:
    path: /commix/version
    method: GET
- name: Network Scanning - Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: Network Scanning - arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: Network Scanning - ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
    params: {}
- name: autorecon
  endpoint:
    path: /root/.config/AutoRecon/global.toml
    method: GET
    data_selector: results
    params: {}
- name: uploads
  endpoint:
    path: /uploads/
    method: MKCOL
    data_selector: Created
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: vuln_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: network_protocol
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: chaosreader_commands
  endpoint:
    path: /chaosreader/commands
    method: GET
    data_selector: commands
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: ntlm_auth
  endpoint:
    path: /ntlm/auth
    method: POST
    data_selector: records
- name: http_auth
  endpoint:
    path: /http/auth
    method: POST
    data_selector: records
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: credential_bruteforcing_commands
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: commands
    params: {}
- name: capture_interface
  endpoint:
    path: /capture/interface
    method: GET
    data_selector: records
    params: {}
- name: capture_output
  endpoint:
    path: /capture/output
    method: GET
    data_selector: records
    params: {}
- name: network_filtering
  endpoint:
    path: /network/filtering
    method: GET
    data_selector: records
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: port_scan
  endpoint:
    path: /portscan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vulnscan
    method: GET
    data_selector: results
- name: protocols
  endpoint:
    path: /supported_protocols
    method: GET
    data_selector: protocol_list
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: data
- name: altdns
  endpoint:
    path: /altdns
    method: GET
- name: amass
  endpoint:
    path: /amass
    method: GET
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: packets
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: packets
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: packets
    params: {}
- name: feroxbuster_directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      threads: 50
      wordlist: words.txt
      extensions: php,html
      timeout: 7
- name: feroxbuster_fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      threads: 10
      wordlist: words.txt
      excluded_status_codes: '404'
      timeout: 10
- name: Capture interface
  endpoint:
    path: /capture/interface
    method: GET
    data_selector: options
- name: Capture stop conditions
  endpoint:
    path: /capture/stop_conditions
    method: GET
    data_selector: options
- name: Capture output
  endpoint:
    path: /capture/output
    method: GET
    data_selector: options
- name: Input file
  endpoint:
    path: /input/file
    method: GET
    data_selector: options
- name: Processing
  endpoint:
    path: /processing
    method: GET
    data_selector: options
- name: Output
  endpoint:
    path: /output
    method: GET
    data_selector: options
- name: Diagnostic output
  endpoint:
    path: /diagnostic/output
    method: GET
    data_selector: options
- name: Miscellaneous
  endpoint:
    path: /miscellaneous
    method: GET
    data_selector: options
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: audio_metadata
  endpoint:
    path: /exiftool/audio
    method: GET
    data_selector: metadata
- name: document_metadata
  endpoint:
    path: /exiftool/document
    method: GET
    data_selector: metadata
- name: epub_metadata
  endpoint:
    path: /exiftool/epub
    method: GET
    data_selector: metadata
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: list_shares
  endpoint:
    path: /SMB/CIFS/client/list_shares
    method: GET
    data_selector: shares
- name: subdomain_discovery
  endpoint:
    path: /subfinder
    method: GET
    data_selector: results
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: output
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: output
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: output
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: output
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: output
    params: {}
- name: dns_queries
  endpoint:
    path: /dnsqueries
    method: GET
    data_selector: results
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: subdomain
  endpoint:
    path: /sub
    method: GET
    data_selector: subdomains
- name: ssl_info
  endpoint:
    path: /sslinfo
    method: GET
    data_selector: ssl_info
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      query: FUZZ
      wordlist: words.txt
- name: uploads
  endpoint:
    path: /uploads/
    method: PUT
    data_selector: SUCCEED
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: hosts
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: records
- name: service_scan
  endpoint:
    path: /service_scan
    method: GET
    data_selector: records
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: reports
- name: version
  endpoint:
    path: /version
    method: GET
    data_selector: version_info
- name: directory_listing
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: responses
    params: {}
- name: subdomains
  endpoint:
    path: /api/v1/subdomains
    method: GET
    data_selector: subdomains
- name: subdomain_enumeration
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: network_sniffing
  endpoint:
    path: /above/network_sniffing
    method: GET
    data_selector: packets
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: POST
    data_selector: results
- name: chaosreader_command
  endpoint:
    path: /chaosreader/command
    method: GET
    data_selector: records
- name: authentication
  endpoint:
    path: /responder/auth
    method: GET
    data_selector: results
- name: commix_test
  endpoint:
    path: /preg_replace.php
    method: GET
- name: filesystem
  endpoint:
    path: /scan/filesystem
    method: GET
    data_selector: results
- name: image
  endpoint:
    path: /scan/image
    method: GET
    data_selector: results
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
- name: target
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: SNMP Scanner
  endpoint:
    path: /braa
    method: GET
    data_selector: queries
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: configuration options
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: port_scan
  endpoint:
    path: /portscan
    method: GET
    data_selector: results
    params: {}
- name: os_detection
  endpoint:
    path: /os-detection
    method: GET
    data_selector: os_results
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: packet_analysis
  endpoint:
    path: /bruteshark/analysis
    method: POST
    data_selector: results
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
- name: dns_enumeration
  endpoint:
    path: /dns/enum
    method: GET
    data_selector: results
    params: {}
- name: subdomain_enumeration
  endpoint:
    path: /subdomain/enum
    method: GET
    data_selector: results
    params: {}
- name: SSLDump
  endpoint:
    path: /ssldump
    method: GET
    data_selector: records
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: records
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /services/data/vXX.X/sobjects/DnsRecords
    method: GET
    data_selector: records
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: list_shares
  endpoint:
    path: /smb/client/shares
    method: GET
    data_selector: shares
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
      threads: 50
      timeout: 10
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      exclude_status_codes: '404'
- name: subdomain_search
  endpoint:
    path: /search/subdomains
    method: GET
    data_selector: results
    params: {}
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: url
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: crawl
  endpoint:
    path: /
    method: GET
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: cloud_service
  endpoint:
    path: /cloud_enum
    method: GET
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
- name: image_metadata
  endpoint:
    path: /image/metadata
    method: GET
    data_selector: File Metadata
- name: audio_metadata
  endpoint:
    path: /audio/metadata
    method: GET
    data_selector: File Metadata
- name: document_metadata
  endpoint:
    path: /document/metadata
    method: GET
    data_selector: File Metadata
- name: epub_metadata
  endpoint:
    path: /epub/metadata
    method: GET
    data_selector: File Metadata
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: report
  endpoint:
    path: /report
    method: GET
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: records
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
- name: kubernetes
  endpoint:
    path: /kubernetes
    method: GET
    data_selector: records
- name: repository
  endpoint:
    path: /repository
    method: GET
    data_selector: records
- name: rootfs
  endpoint:
    path: /rootfs
    method: GET
    data_selector: records
- name: sbom
  endpoint:
    path: /sbom
    method: GET
    data_selector: records
- name: vm
  endpoint:
    path: /vm
    method: GET
    data_selector: records
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: fping
  endpoint:
    path: /fping
    method: GET
- name: hping3
  endpoint:
    path: /hping3
    method: GET
- name: davtest
  endpoint:
    path: /davdir
    method: GET
    data_selector: records
- name: dhcpig
  endpoint:
    path: /dhcp
    method: GET
    data_selector: records
- name: dotdotpwn
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: records
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: http_request
  endpoint:
    path: /
    method: GET
    data_selector: response
    params: {}
- name: exploits
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: mx_records
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: INFO
    params: {}
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: target
  endpoint:
    path: /scan
    method: GET
- name: snmp_scan
  endpoint:
    path: /snmp/scan
    method: GET
    data_selector: results
- name: port_scan
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: tcpick
  endpoint:
    path: /services/data/vXX.X/sobjects/Tcpick
    method: GET
    data_selector: records
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params:
      target: 192.168.11.4
- name: vuln_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: vulnerabilities
    params:
      target: 192.168.11.4
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
    params: {}
- name: packet_capture
  endpoint:
    path: /capture
    method: POST
    data_selector: capture_result
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: list_shares
  endpoint:
    path: /services/data/vXX.X/sobjects/Shares
    method: GET
    data_selector: shares
    params: {}
- name: subdomain_search
  endpoint:
    path: /search/subdomains
    method: POST
    data_selector: subdomains
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: subdomain_search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: capture_interface
  endpoint:
    path: /capture/interface
    method: GET
    data_selector: records
- name: capture_stop_conditions
  endpoint:
    path: /capture/stop_conditions
    method: GET
    data_selector: records
- name: capture_output
  endpoint:
    path: /capture/output
    method: GET
    data_selector: records
- name: input_file
  endpoint:
    path: /input/file
    method: GET
    data_selector: records
- name: processing
  endpoint:
    path: /processing
    method: GET
    data_selector: records
- name: output
  endpoint:
    path: /output
    method: GET
    data_selector: records
- name: diagnostic_output
  endpoint:
    path: /diagnostic/output
    method: GET
    data_selector: records
- name: miscellaneous
  endpoint:
    path: /miscellaneous
    method: GET
    data_selector: records
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      status_codes: '404'
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: subdomain
  endpoint:
    path: /api/v1/subdomains
    method: GET
    data_selector: records
- name: information
  endpoint:
    path: information
    method: GET
- name: network_protocol
  endpoint:
    path: network_protocol
    method: GET
- name: application_protocol
  endpoint:
    path: application_protocol
    method: GET
- name: sniff
  endpoint:
    path: sniff
    method: GET
- name: spoof
  endpoint:
    path: spoof
    method: GET
- name: record
  endpoint:
    path: record
    method: GET
- name: client
  endpoint:
    path: client
    method: GET
- name: server
  endpoint:
    path: server
    method: GET
- name: ping
  endpoint:
    path: ping
    method: GET
- name: traceroute
  endpoint:
    path: traceroute
    method: GET
- name: scan
  endpoint:
    path: scan
    method: GET
- name: network_audit
  endpoint:
    path: network_audit
    method: GET
- name: brute_force
  endpoint:
    path: brute_force
    method: GET
- name: remote_administration
  endpoint:
    path: remote_administration
    method: GET
- name: tools_not_related_to_network
  endpoint:
    path: tools_not_related_to_network
    method: GET
- name: cloud_services
  endpoint:
    path: /api/v1/cloud_services
    method: GET
    data_selector: services
    params: {}
- name: list_shares
  endpoint:
    path: /SMB/CIFS/client/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: exiv2
  endpoint:
    path: /exiv2
    method: GET
    data_selector: results
    params: {}
- name: eyewitness
  endpoint:
    path: /eyewitness
    method: GET
    data_selector: results
    params: {}
- name: getallurls
  endpoint:
    path: /getallurls
    method: GET
    data_selector: results
    params: {}
- name: goofile
  endpoint:
    path: /goofile
    method: GET
    data_selector: results
    params: {}
- name: gowitness
  endpoint:
    path: /gowitness
    method: GET
    data_selector: results
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
    params: {}
- name: subdomain_search
  endpoint:
    path: /subdomain/search
    method: GET
    data_selector: results
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: url_collection
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      max_depth: 1
- name: dns_records
  endpoint:
    path: /dns
    method: GET
    data_selector: records
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: image_metadata
  endpoint:
    path: /image/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /audio/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /document/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /epub/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: records
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: exploit
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: screenshot
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: records
- name: targets
  endpoint:
    path: /targets
    method: GET
- name: subdomains
  endpoint:
    path: /v1/domains
    method: GET
    data_selector: subdomains
- name: subfinder
  endpoint:
    path: /subfinder
    method: GET
    data_selector: results
- name: sublist3r
  endpoint:
    path: /sublist3r
    method: GET
    data_selector: results
- name: theHarvester
  endpoint:
    path: /theHarvester
    method: GET
    data_selector: results
- name: waybackpy
  endpoint:
    path: /waybackpy
    method: GET
    data_selector: results
- name: witnessme
  endpoint:
    path: /witnessme
    method: GET
    data_selector: results
- name: finalrecon
  endpoint:
    path: /finalrecon
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: sniffing_options
  endpoint:
    path: /network/sniffing/options
    method: GET
    data_selector: options
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: chaosreader_session
  endpoint:
    path: /chaosreader/session
    method: GET
    data_selector: session_data
- name: ident_user_enum
  endpoint:
    path: /ident-user-enum
    method: GET
    data_selector: records
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: records
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: records
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: results
    params: {}
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: scan_config
  endpoint:
    path: /scan/config
    method: GET
    data_selector: config
- name: scan_filesystem
  endpoint:
    path: /scan/filesystem
    method: GET
    data_selector: filesystem
- name: scan_image
  endpoint:
    path: /scan/image
    method: GET
    data_selector: image
- name: scan_kubernetes
  endpoint:
    path: /scan/kubernetes
    method: GET
    data_selector: kubernetes
- name: scan_repository
  endpoint:
    path: /scan/repository
    method: GET
    data_selector: repository
- name: scan_vm
  endpoint:
    path: /scan/vm
    method: GET
    data_selector: vm
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params:
      input: subdomains.txt
      output: out.txt
      wordlist: words.txt
      resolve: true
      save: result.txt
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params:
      domain: digital.go.jp
      whois: true
      config: config.yaml
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params:
      domain: digital.go.jp
      config: config.yaml
      passive: true
- name: ffuf_scan
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params:
      threads: 40
      wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt
      extensions: .txt,.html,.php,.asp,.aspx,.jsp
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: subdomain_brute_force
  endpoint:
    path: /dns/brute_force
    method: POST
    data_selector: results
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: results
- name: crawl
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: network_sniffing
  endpoint:
    path: /above/network_sniffing
    method: GET
    data_selector: protocols
    params: {}
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: POST
    data_selector: results
    params: {}
- name: mirror
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: application_session_files
  endpoint:
    path: /chaosreader/application
    method: GET
    data_selector: records
    params: {}
- name: packet_analysis
  endpoint:
    path: /chaosreader/packets
    method: GET
    data_selector: records
    params: {}
- name: cloud_resources
  endpoint:
    path: /cloud/resources
    method: GET
    data_selector: resources
- name: packet_sniffing
  endpoint:
    path: /api/packet_sniffing
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /api/packet_injection
    method: POST
    data_selector: injections
- name: metadata
  endpoint:
    path: /api/metadata
    method: GET
    data_selector: records
    params: {}
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
    params: {}
- name: ssldump
  endpoint:
    path: /ssldump
    method: GET
    data_selector: records
    params: {}
- name: EyeWitness
  endpoint:
    path: Eyewitness.py
    method: GET
    data_selector: hosts
    params: {}
- name: getallurls
  endpoint:
    path: getallurls
    method: GET
    data_selector: urls
    params:
      providers: wayback,otx,commoncrawl
- name: goofile
  endpoint:
    path: goofile
    method: GET
    data_selector: files
    params: {}
- name: gowitness
  endpoint:
    path: gowitness
    method: GET
    data_selector: screenshots
    params: {}
- name: packet_capture
  endpoint:
    path: /capture
    method: GET
    data_selector: packets
    params: {}
- name: capture
  endpoint:
    path: /capture
    method: GET
    data_selector: records
- name: output
  endpoint:
    path: /output
    method: POST
    data_selector: results
- name: subdomain
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
    params: {}
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: records
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
    params: {}
- name: list_shares
  endpoint:
    path: /198
    method: GET
    data_selector: shares
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params: {}
- name: OWASP Amass
  endpoint:
    path: /amass
    method: GET
    data_selector: domains
    params: {}
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: smtp_check
  endpoint:
    path: /smtp/check
    method: GET
    data_selector: results
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: username_check
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: results
    params:
      mode: VRFY
      user: user@example.com
      port: 25
      timeout: 5
- name: javascript
  endpoint:
    path: /wp-includes/blocks/navigation/view.min.js?ver=3776ea67846b3bb10fe8f7cdd486b0ba
    method: GET
- name: wlwmanifest
  endpoint:
    path: /wlwmanifest.xml
    method: GET
- name: comments_rss
  endpoint:
    path: /?feed=comments-rss2
    method: GET
- name: xmlrpc
  endpoint:
    path: /xmlrpc.php?rsd
    method: GET
- name: rss2
  endpoint:
    path: /?feed=rss2
    method: GET
- name: config_scan
  endpoint:
    path: /config
    method: GET
    data_selector: records
- name: filesystem_scan
  endpoint:
    path: /filesystem
    method: GET
    data_selector: records
- name: image_scan
  endpoint:
    path: /image
    method: GET
    data_selector: records
- name: kubernetes_scan
  endpoint:
    path: /kubernetes
    method: GET
    data_selector: records
- name: repository_scan
  endpoint:
    path: /repository
    method: GET
    data_selector: records
- name: rootfs_scan
  endpoint:
    path: /rootfs
    method: GET
    data_selector: records
- name: sbom_scan
  endpoint:
    path: /sbom
    method: GET
    data_selector: records
- name: vm_scan
  endpoint:
    path: /vm
    method: GET
    data_selector: records
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: autorecon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
    params: {}
- name: usage
  endpoint:
    path: /help
    method: GET
    data_selector: usage
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params:
      timeout: 1000
      retries: 3
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: service_detection
  endpoint:
    path: /service
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_detection
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
    params: {}
- name: network sniffing and spoofing
  endpoint:
    path: /above
    method: GET
- name: chaosreader
  endpoint:
    path: /chaosreader/help
    method: GET
    data_selector: usage
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
- name: jsql_injection
  endpoint:
    path: /jsql/injection
    method: GET
- name: nikto
  endpoint:
    path: /nikto
    method: GET
- name: netexec
  endpoint:
    path: /netexec
    method: POST
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      usernames_file: users.txt
      target: 192.168.11.4
      port: 25
      timeout: 5
- name: tcpick
  endpoint:
    path: /
    method: GET
    data_selector: payload
- name: target_url
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: results
    params:
      id: 1*
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: usage
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: Network Tools
  endpoint:
    path: /network-tools
    method: GET
    data_selector: tools
    params: {}
- name: target
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: list_shares
  endpoint:
    path: /smbclient/list/shares
    method: GET
    data_selector: shares
    params: {}
- name: snmp_query
  endpoint:
    path: /snmp_query
    method: GET
    data_selector: results
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: POST
    data_selector: results
- name: DNS Enumeration
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
- name: Altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
- name: OWASP Amass
  endpoint:
    path: /amass
    method: GET
    data_selector: results
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: scan_results
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: vulnerabilities
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: domain_report
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: report
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
    params: {}
- name: packet_sniffing
  endpoint:
    path: /packet/sniff
    method: GET
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
      threads: 50
      timeout: 7
      recursion_depth: 2
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
- name: urls
  endpoint:
    path: /urls
    method: GET
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: services
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: ''
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: usage
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: usage
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: usage
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: usage
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
- name: subdomain_discovery
  endpoint:
    path: /subfinder/discovery
    method: GET
    data_selector: subdomains
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: davtest
  endpoint:
    path: /davdir
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcp
    method: GET
- name: dotdotpwn
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    params:
      page: TRAVERSAL
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params:
      file: /usr/share/dnsenum/dns.txt
      noreverse: true
- name: dnsgen
  endpoint:
    path: /dnsgen
    method: GET
    data_selector: results
    params:
      wordlen: 1-100
      wordlist: path/to/wordlist
- name: dnsrecon
  endpoint:
    path: /dnsrecon
    method: GET
    data_selector: results
    params:
      domain: example.com
      type: std
- name: dnstracer
  endpoint:
    path: /dnstracer
    method: GET
    data_selector: results
    params:
      server: localhost
      querytype: A
      retries: 3
- name: dnstwist
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: results
    params: {}
- name: domain_scan
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: records
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
    params: {}
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: POST
    data_selector: results
    params:
      enumeration_type: '2'
- name: crawled_urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      depth: 1
- name: user_enum
  endpoint:
    path: /
    method: POST
    data_selector: ''
    params:
      max_processes: 5
      mode: VRFY
      user_file: users.txt
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: url
    params: {}
- name: sql_injection
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: id=1
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool/audio
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool/document
    method: GET
    data_selector: metadata
    params: {}
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: response
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: results
    params: {}
- name: target
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: scan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params:
      ip/range: <ip addresses/ranges>
      ports: <ports>
- name: headers
  endpoint:
    path: /api/headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /api/whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /api/sslinfo
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /api/dns
    method: GET
    data_selector: dns
- name: subdomains
  endpoint:
    path: /api/subdomains
    method: GET
    data_selector: subdomains
- name: directories
  endpoint:
    path: /api/directories
    method: GET
    data_selector: directories
- name: ports
  endpoint:
    path: /api/ports
    method: GET
    data_selector: ports
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: ports
- name: service_detection
  endpoint:
    path: /service_detection
    method: GET
    data_selector: services
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: vulnerabilities
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
- name: protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocol_list
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: application_session_files
  endpoint:
    path: /chaosreader/application_sessions
    method: GET
    data_selector: records
- name: index_files
  endpoint:
    path: /chaosreader/index_files
    method: GET
    data_selector: records
- name: nikto_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: user_enum
  endpoint:
    path: /smtp/user/enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      usernames_file: users.txt
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: tcp_packets
  endpoint:
    path: /
    method: GET
    data_selector: packets
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: payloads
    params:
      id: 1*
- name: bettercap_commands
  endpoint:
    path: /bettercap/commands
    method: GET
    data_selector: commands
    params: {}
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: tools
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: tools
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: directory_scan
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params:
      target: http://192.168.11.4:80
      wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt
      extensions: .txt,.html,.php,.asp,.aspx,.jsp
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
- name: create_directory
  endpoint:
    path: /smb/client/create_directory
    method: POST
    data_selector: result
- name: delete_directory
  endpoint:
    path: /smb/client/delete_directory
    method: DELETE
    data_selector: result
- name: rename_directory
  endpoint:
    path: /smb/client/rename_directory
    method: PUT
    data_selector: result
- name: list_directory_contents
  endpoint:
    path: /smb/client/list_directory_contents
    method: GET
    data_selector: contents
- name: delete_file
  endpoint:
    path: /smb/client/delete_file
    method: DELETE
    data_selector: result
- name: rename_file
  endpoint:
    path: /smb/client/rename_file
    method: PUT
    data_selector: result
- name: get_file
  endpoint:
    path: /smb/client/get_file
    method: GET
    data_selector: file_data
- name: put_file
  endpoint:
    path: /smb/client/put_file
    method: POST
    data_selector: result
- name: recursively_get_directory
  endpoint:
    path: /smb/client/recursively_get_directory
    method: GET
    data_selector: directory_data
- name: recursively_put_directory
  endpoint:
    path: /smb/client/recursively_put_directory
    method: POST
    data_selector: result
- name: recursively_delete_directory
  endpoint:
    path: /smb/client/recursively_delete_directory
    method: DELETE
    data_selector: result
- name: port_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      ip: 192.168.11.0/24
      ports: 20-25
- name: DNS Enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: records
- name: Recon and Information Gathering
  endpoint:
    path: /recon/information
    method: GET
    data_selector: records
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: results
- name: vuln_detection
  endpoint:
    path: /vuln-detection
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: general_options
  endpoint:
    path: /options/general
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /options/google_scraping
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /options/brute_force
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /options/whois_netrange
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /options/reverse_lookup
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /options/output
    method: GET
    data_selector: options
    params: {}
- name: packet_sniffer
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      domain: example.com
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: resources
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params:
      incremental: updated_at
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: scan_single_url
  endpoint:
    path: /scan/single
    method: GET
    data_selector: results
- name: dns_records
  endpoint:
    path: /domain
    method: GET
    data_selector: records
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: logs
  endpoint:
    path: /logs/
    method: GET
    data_selector: logs
    params: {}
- name: crawl_results
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: results
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: results
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: results
    params: {}
- name: amazon_checks
  endpoint:
    path: /cloud_enum/amazon_checks
    method: GET
    data_selector: results
- name: google_checks
  endpoint:
    path: /cloud_enum/google_checks
    method: GET
    data_selector: results
- name: microsoft_checks
  endpoint:
    path: /cloud_enum/microsoft_checks
    method: GET
    data_selector: results
- name: fragmented_packets
  endpoint:
    path: /fragrouter
    method: GET
    data_selector: packets
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: image_metadata
  endpoint:
    path: /metadata/image
    method: GET
    data_selector: metadata
- name: audio_metadata
  endpoint:
    path: /metadata/audio
    method: GET
    data_selector: metadata
- name: document_metadata
  endpoint:
    path: /metadata/document
    method: GET
    data_selector: metadata
- name: epub_metadata
  endpoint:
    path: /metadata/epub
    method: GET
    data_selector: metadata
- name: user_enum
  endpoint:
    path: /
    method: VRFY
    data_selector: usernames
    params:
      domain: example.com
- name: subdomain_discovery
  endpoint:
    path: /api/v1/subdomains
    method: GET
    data_selector: subdomains
- name: scan
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
- name: header_info
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: hosts
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
    params: {}
- name: autorecon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: ping
  endpoint:
    path: /fping
    method: GET
    data_selector: results
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: results
- name: os_detection
  endpoint:
    path: /os-detection
    method: GET
    data_selector: results
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
    params: {}
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: results
    params: {}
- name: sql_injection
  endpoint:
    path: /sql/injection
    method: GET
    data_selector: results
    params: {}
- name: nikto
  endpoint:
    path: /nikto
    method: GET
    data_selector: results
    params: {}
- name: protocol_detection
  endpoint:
    path: /above/protocols
    method: GET
    data_selector: protocols
- name: packet_capture
  endpoint:
    path: /above/capture
    method: GET
    data_selector: packets
- name: capture_data
  endpoint:
    path: /capture/data
    method: GET
    data_selector: records
    params: {}
- name: username_check
  endpoint:
    path: /
    method: VRFY
    data_selector: usernames
    params:
      user: user
      addr: user@example.com
      domain: none
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: payloads
    params: {}
- name: packet_sniffing
  endpoint:
    path: /sniff/packets
    method: GET
    data_selector: results
    params: {}
- name: packet_injection
  endpoint:
    path: /inject/packets
    method: POST
    data_selector: results
    params: {}
- name: backdoor_generation
  endpoint:
    path: /generate
    method: POST
    data_selector: Generated backdoor script
    params:
      password: hello
      path: backdoor.php
- name: execute_command
  endpoint:
    path: /execute
    method: POST
    data_selector: Command output
    params:
      command: :shell_sh cat /etc/passwd
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
    params: {}
- name: targets
  endpoint:
    path: /autorecon/targets
    method: GET
    data_selector: records
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: nbtscan
  endpoint:
    path: /nbtscan
    method: GET
    data_selector: records
- name: nextnet
  endpoint:
    path: /nextnet
    method: GET
    data_selector: records
- name: nmap
  endpoint:
    path: /nmap
    method: GET
    data_selector: records
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: records
    params: {}
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: records
    params: {}
- name: list_shares
  endpoint:
    path: /smb/shares
    method: GET
    data_selector: shares
- name: create_directory
  endpoint:
    path: /smb/directory
    method: POST
    data_selector: result
- name: delete_directory
  endpoint:
    path: /smb/directory
    method: DELETE
    data_selector: result
- name: rename_directory
  endpoint:
    path: /smb/directory
    method: PUT
    data_selector: result
- name: list_directory_contents
  endpoint:
    path: /smb/directory/contents
    method: GET
    data_selector: contents
- name: delete_file
  endpoint:
    path: /smb/file
    method: DELETE
    data_selector: result
- name: rename_file
  endpoint:
    path: /smb/file
    method: PUT
    data_selector: result
- name: get_file
  endpoint:
    path: /smb/file
    method: GET
    data_selector: file
- name: put_file
  endpoint:
    path: /smb/file
    method: POST
    data_selector: result
- name: recursively_get_directory
  endpoint:
    path: /smb/directory/recursive
    method: GET
    data_selector: files
- name: recursively_put_directory
  endpoint:
    path: /smb/directory/recursive
    method: POST
    data_selector: result
- name: recursively_delete_directory
  endpoint:
    path: /smb/directory/recursive
    method: DELETE
    data_selector: result
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params:
      input: subdomains.txt
      output: out.txt
      wordlist: words.txt
      resolve: true
      save: result.txt
- name: Amass Intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
    params:
      domain: digital.go.jp
      whois: true
      config: config.yaml
- name: ssldump
  endpoint:
    path: /ssl
    method: GET
    data_selector: records
    params: {}
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
    params: {}
- name: packet_capture
  endpoint:
    path: /
    method: GET
    data_selector: packets
    params: {}
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage_records
- name: bettercap_examples
  endpoint:
    path: /examples
    method: GET
    data_selector: example_records
- name: apache-users
  endpoint:
    path: /apache-users
    method: GET
    data_selector: results
- name: arjun
  endpoint:
    path: /arjun
    method: GET
    data_selector: results
- name: dirb
  endpoint:
    path: /dirb
    method: GET
    data_selector: results
- name: dirsearch
  endpoint:
    path: /dirsearch
    method: GET
    data_selector: results
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
- name: crawl
  endpoint:
    path: /
    method: GET
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: public_resources
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: altered_subdomains
    params: {}
- name: amass
  endpoint:
    path: /amass
    method: GET
    data_selector: domains
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: related_domains
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: dns_info
    params: {}
- name: screenshot
  endpoint:
    path: /web
    method: GET
    data_selector: results
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: dnsgen
  endpoint:
    path: /dnsgen
    method: GET
    data_selector: records
- name: dnsrecon
  endpoint:
    path: /dnsrecon
    method: GET
    data_selector: records
- name: dnstracer
  endpoint:
    path: /dnstracer
    method: GET
    data_selector: records
- name: dnstwist
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: records
- name: subdomain_takeover
  endpoint:
    path: /subjack
    method: POST
    data_selector: results
    params: {}
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: urlcrazy
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: domain_report
    params: {}
- name: apache_users
  endpoint:
    path: /apache-users
    method: GET
    data_selector: usernames
    params: {}
- name: arjun
  endpoint:
    path: /arjun
    method: GET
    data_selector: parameters
    params: {}
- name: dirb
  endpoint:
    path: /dirb
    method: GET
    data_selector: results
    params: {}
- name: dirsearch
  endpoint:
    path: /dirsearch
    method: GET
    data_selector: results
    params: {}
- name: feroxbuster
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: gobuster
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: gospider
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: http_response_headers
  endpoint:
    path: /
    method: GET
    data_selector: headers
    params: {}
- name: gospider
  endpoint:
    path: /
    method: GET
    data_selector: url
    params:
      depth: 5
- name: hakrawler
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      depth: 2
      threads: 8
- name: httrack
  endpoint:
    path: /
    method: GET
    data_selector: mirror
    params:
      url: https://192.168.11.4
- name: photon
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      level: 3
- name: bing-ip2hosts
  endpoint:
    path: /
    method: GET
    data_selector: hostnames
    params: {}
- name: certgraph
  endpoint:
    path: /
    method: GET
    data_selector: certificates
    params:
      depth: 5
- name: cloud_resources
  endpoint:
    path: /cloud_enum/resources
    method: GET
    data_selector: resources
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: smtp_timeout
  endpoint:
    path: /smtp/timeout
    method: GET
    data_selector: results
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: user_enumeration
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: results
- name: eyewitness
  endpoint:
    path: /eyewitness
    method: GET
    data_selector: results
    params: {}
- name: getallurls
  endpoint:
    path: /getallurls
    method: GET
    data_selector: results
    params:
      providers: wayback,otx,commoncrawl
- name: goofile
  endpoint:
    path: /goofile
    method: GET
    data_selector: results
    params: {}
- name: gowitness
  endpoint:
    path: /gowitness
    method: GET
    data_selector: results
    params: {}
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli
    method: GET
    data_selector: results
    params:
      id: '1'
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
- name: input
  endpoint:
    params:
      bucket: string
      bucket-file: string
      mq: 'false'
- name: output
  endpoint:
    params:
      db: 'false'
      json: 'false'
- name: options
  endpoint:
    params:
      enumerate: 'false'
      provider: aws
      threads: 4
- name: debug
  endpoint:
    params:
      verbose: 'false'
      version: 'false'
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: payload
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: response
    params:
      page: TRAVERSAL
- name: ffuf
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
- name: hydra
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: results
- name: medusa
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: results
- name: wpscan
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: braa
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: enum4linux-ng
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: fping
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: hping3
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: smtp_enumeration_results
- name: sql_injection
  endpoint:
    path: /sql/injection
    method: GET
    data_selector: sql_injection_results
- name: web_scanning
  endpoint:
    path: /web/scanning
    method: GET
    data_selector: web_scanning_results
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params:
      ip: 192.168.11.0/24
      ports: 20-25
- name: naabu
  endpoint:
    path: /naabu
    method: GET
    data_selector: ports
    params:
      hosts: comma-separated
      ports: 80,443,100-200
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: ''
    params: {}
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: records
    params: {}
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: records
    params: {}
- name: nuclei
  endpoint:
    path: /nuclei
    method: POST
    data_selector: results
- name: phpggc
  endpoint:
    path: /phpggc
    method: POST
    data_selector: results
- name: skipfish
  endpoint:
    path: /skipfish
    method: POST
    data_selector: results
- name: slowhttptest
  endpoint:
    path: /slowhttptest
    method: POST
    data_selector: results
- name: smtp-user-enum
  endpoint:
    path: /smtp-user-enum
    method: POST
    data_selector: results
- name: vulnerability_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: parameters
    params:
      level: 5
      risk: 3
      dbms: MySQL
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: session
- name: filesystem_audit
  endpoint:
    path: /audit_filesystem
    method: GET
    data_selector: results
- name: doona_usage
  endpoint:
    path: /doona/usage
    method: GET
    data_selector: usage_info
- name: Capture interface
  endpoint:
    path: /capture/interface
    method: GET
- name: Capture stop conditions
  endpoint:
    path: /capture/stop_conditions
    method: GET
- name: Capture output
  endpoint:
    path: /capture/output
    method: GET
- name: Input file
  endpoint:
    path: /input/file
    method: GET
- name: Processing
  endpoint:
    path: /processing
    method: GET
- name: Output
  endpoint:
    path: /output
    method: GET
- name: Diagnostic output
  endpoint:
    path: /diagnostic/output
    method: GET
- name: Miscellaneous
  endpoint:
    path: /miscellaneous
    method: GET
- name: netwox_tools
  endpoint:
    path: /netwox/tools
    method: GET
    data_selector: tools
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: responses
    params: {}
- name: list_shares
  endpoint:
    path: /198
    method: GET
    data_selector: shares
    params:
      dst_ip: 5.6.7.8
      user: login
      password: password
      netbiosname: netbiosname
      device: device
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: records
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: records
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: records
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: POST
    data_selector: results
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params:
      ip: 192.168.11.0/24
      ports: 20-25
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: dnsgen
  endpoint:
    path: /dnsgen
    method: GET
    data_selector: results
    params: {}
- name: dnsrecon
  endpoint:
    path: /dnsrecon
    method: GET
    data_selector: results
    params: {}
- name: dnstracer
  endpoint:
    path: /dnstracer
    method: GET
    data_selector: results
    params: {}
- name: dnstwist
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
- name: dnstwist
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
    params: {}
- name: dnsx
  endpoint:
    path: /usr/bin/dnsx
    method: GET
    data_selector: records
    params: {}
- name: fierce
  endpoint:
    path: /usr/bin/fierce
    method: GET
    data_selector: records
    params: {}
- name: massdns
  endpoint:
    path: /usr/bin/massdns
    method: GET
    data_selector: records
    params: {}
- name: subjack
  endpoint:
    path: /usr/bin/subjack
    method: GET
    data_selector: records
    params: {}
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: records
    params: {}
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: records
    params: {}
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /inject
    method: POST
    data_selector: result
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      threads: 10
      wordlist: words.txt
      extensions: inc
      timeout: 10
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      threads: 10
      wordlist: words.txt
      excluded_status_codes: '404'
      timeout: 10
- name: tcpflow
  endpoint:
    path: /
    method: GET
    data_selector: HTTP response
- name: ssldump
  endpoint:
    path: /
    method: GET
    data_selector: SSL/TLS traffic
- name: gospider
  endpoint:
    path: /gospider
    method: GET
- name: hakrawler
  endpoint:
    path: /hakrawler
    method: GET
- name: httrack
  endpoint:
    path: /httrack
    method: GET
- name: photon
  endpoint:
    path: /photon
    method: GET
- name: bing-ip2hosts
  endpoint:
    path: /bing-ip2hosts
    method: GET
- name: certgraph
  endpoint:
    path: /certgraph
    method: GET
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
    params: {}
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
- name: cloudbrute
  endpoint:
    path: /cloudbrute
    method: GET
- name: dmitry
  endpoint:
    path: /dmitry
    method: GET
- name: emailharvester
  endpoint:
    path: /emailharvester
    method: GET
- name: exif_looter
  endpoint:
    path: /exiflooter
    method: GET
- name: exifprobe
  endpoint:
    path: /exifprobe
    method: GET
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /198
    method: GET
    data_selector: shares
    params: {}
- name: getallurls
  endpoint:
    path: /getallurls
    method: GET
    data_selector: results
- name: goofile
  endpoint:
    path: /goofile
    method: GET
    data_selector: files
- name: gowitness
  endpoint:
    path: /gowitness
    method: GET
    data_selector: report
- name: eyewitness
  endpoint:
    path: /eyewitness
    method: GET
    data_selector: screenshot
- name: bucket
  endpoint:
    path: /bucket
    method: GET
    data_selector: buckets
- name: subdomain
  endpoint:
    path: /subdomain
    method: GET
    data_selector: subdomains
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: records
    params: {}
- name: subfinder
  endpoint:
    path: /subfinder
    method: GET
- name: sublist3r
  endpoint:
    path: /sublist3r
    method: GET
- name: theHarvester
  endpoint:
    path: /theHarvester
    method: GET
- name: waybackpy
  endpoint:
    path: /waybackpy
    method: GET
- name: WitnessMe
  endpoint:
    path: /witnessme
    method: GET
- name: FinalRecon
  endpoint:
    path: /finalrecon
    method: GET
- name: dnsenum_options
  endpoint:
    path: /dnsenum/options
    method: GET
    data_selector: options
- name: google_scraping_options
  endpoint:
    path: /dnsenum/google_scraping
    method: GET
    data_selector: scraping_options
- name: brute_force_options
  endpoint:
    path: /dnsenum/brute_force
    method: GET
    data_selector: brute_force_options
- name: whois_netrange_options
  endpoint:
    path: /dnsenum/whois_netrange
    method: GET
    data_selector: whois_netrange_options
- name: reverse_lookup_options
  endpoint:
    path: /dnsenum/reverse_lookup
    method: GET
    data_selector: reverse_lookup_options
- name: output_options
  endpoint:
    path: /dnsenum/output
    method: GET
    data_selector: output_options
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: dns_records
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: results
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: results
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: results
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: URLs
    params: {}
- name: cloud_service
  endpoint:
    path: /cloud_enum
    method: GET
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: fragrouter
  endpoint:
    path: /fragrouter
    method: GET
- name: getsploit
  endpoint:
    path: /getsploit
    method: GET
- name: humble
  endpoint:
    path: /humble
    method: GET
- name: ident-user-enum
  endpoint:
    path: /ident-user-enum
    method: GET
- name: iSMTP
  endpoint:
    path: /iSMTP
    method: GET
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: results
- name: nuclei
  endpoint:
    path: /nuclei
    method: GET
    data_selector: records
    params: {}
- name: skipfish
  endpoint:
    path: /skipfish
    method: GET
    data_selector: records
    params: {}
- name: slowhttptest
  endpoint:
    path: /slowhttptest
    method: GET
    data_selector: records
    params: {}
- name: smtp-user-enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: records
    params: {}
- name: input
  endpoint:
    params:
      domain: string[]
      list: string
- name: source
  endpoint:
    params:
      sources: string[]
      recursive: boolean
      all: boolean
      exclude_sources: string[]
- name: filter
  endpoint:
    params:
      match: string[]
      filter: string[]
- name: rate_limit
  endpoint:
    params:
      rate_limit: int
      concurrent: int
- name: output
  endpoint:
    params:
      output: string
      json: boolean
      output_dir: string
      collect_sources: boolean
      ip: boolean
- name: configuration
  endpoint:
    params:
      config: string
      provider_config: string
      resolvers: string[]
      rlist: string
      active: boolean
      proxy: string
      exclude_ip: boolean
- name: sql_injection
  endpoint:
    path: /sqlmap
    method: POST
    data_selector: records
- name: fuzzing_test
  endpoint:
    path: /doona
    method: GET
    data_selector: output
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
- name: whois
  endpoint:
    path: /whois
    method: GET
- name: ssl_info
  endpoint:
    path: /sslinfo
    method: GET
- name: dns
  endpoint:
    path: /dns
    method: GET
- name: subdomains
  endpoint:
    path: /sub
    method: GET
- name: directory
  endpoint:
    path: /dir
    method: GET
- name: port_scan
  endpoint:
    path: /ps
    method: GET
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: results
    params: {}
- name: network_tools
  endpoint:
    path: /network/tools
    method: GET
    data_selector: tools
    params: {}
- name: usage
  endpoint:
    path: --help
    method: GET
    data_selector: usage
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: ident_user_enum
  endpoint:
    path: /ident-user-enum
    method: GET
    data_selector: output
    params: {}
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: ''
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      user_file: users.txt
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
- name: application_session_files
  endpoint:
    path: /chaosreader/application_session
    method: GET
    data_selector: session_data
- name: html_reports
  endpoint:
    path: /chaosreader/html_reports
    method: GET
    data_selector: report_data
- name: NTLM
  endpoint:
    path: /ntlm
    method: GET
- name: HTTP
  endpoint:
    path: /http
    method: GET
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: packet_capture
  endpoint:
    path: /
    method: GET
    data_selector: packets
- name: brute_force_targets
  endpoint:
    path: /brutespray/targets
    method: GET
    data_selector: records
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
    params: {}
- name: SNMP Scan
  endpoint:
    path: /braa
    method: GET
    data_selector: queries
    params: {}
- name: shares
  endpoint:
    path: /smb/shares
    method: GET
    data_selector: shares
- name: DNS Enumeration
  endpoint:
    path: /amass/intel
    method: GET
- name: OWASP Amass
  endpoint:
    path: /amass/enum
    method: GET
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
- name: domain_scan
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: results
    params:
      domain: example.com
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
- name: urlcrazy
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: results
- name: logs
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions: php, html
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
- name: ssldump
  endpoint:
    path: /ssldump
    method: GET
    data_selector: records
- name: page
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: tcpick_usage
  endpoint:
    path: /tcpick/usage
    method: GET
    data_selector: data
    params: {}
- name: tcpick_options
  endpoint:
    path: /tcpick/options
    method: GET
    data_selector: options
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_services
    method: GET
    data_selector: services
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: subdomains
  endpoint:
    path: /subdomain/discovery
    method: GET
    data_selector: results
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
- name: create_directory
  endpoint:
    path: /smb/create_directory
    method: POST
    data_selector: result
- name: delete_directory
  endpoint:
    path: /smb/delete_directory
    method: DELETE
    data_selector: result
- name: rename_directory
  endpoint:
    path: /smb/rename_directory
    method: PUT
    data_selector: result
- name: list_directory_contents
  endpoint:
    path: /smb/list_directory_contents
    method: GET
    data_selector: contents
- name: delete_file
  endpoint:
    path: /smb/delete_file
    method: DELETE
    data_selector: result
- name: rename_file
  endpoint:
    path: /smb/rename_file
    method: PUT
    data_selector: result
- name: get_file
  endpoint:
    path: /smb/get_file
    method: GET
    data_selector: file_content
- name: put_file
  endpoint:
    path: /smb/put_file
    method: PUT
    data_selector: result
- name: recursively_get_directory
  endpoint:
    path: /smb/recursively_get_directory
    method: GET
    data_selector: directory_contents
- name: recursively_put_directory
  endpoint:
    path: /smb/recursively_put_directory
    method: PUT
    data_selector: result
- name: recursively_delete_directory
  endpoint:
    path: /smb/recursively_delete_directory
    method: DELETE
    data_selector: result
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: result
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: result
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: result
    params: {}
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: records
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: records
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
    params: {}
- name: usage
  endpoint:
    path: /fragrouter/usage
    method: GET
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: dnsgen
  endpoint:
    path: /dnsgen
    method: GET
    data_selector: records
- name: dnsrecon
  endpoint:
    path: /dnsrecon
    method: GET
    data_selector: records
- name: dnstracer
  endpoint:
    path: /dnstracer
    method: GET
    data_selector: records
- name: dnstwist
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: records
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: smtp_check
  endpoint:
    path: /smtp/check
    method: GET
    data_selector: results
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: user_enumeration
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: results
    params: {}
- name: fuzz
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
- name: dir
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
- name: sql_injection_check
  endpoint:
    path: /sqlmap
    method: GET
    data_selector: results
    params: {}
- name: ssl_certificates
  endpoint:
    path: /certificates
    method: GET
    data_selector: certificates
    params: {}
- name: cloud_service
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: urls
  endpoint:
    path: /getallurls
    method: GET
    data_selector: results
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
- name: arping
  endpoint:
    path: /arping
    method: GET
- name: autorecon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: snmp_scan
  endpoint:
    path: /braa/snmp
    method: GET
    data_selector: results
- name: subdomains
  endpoint:
    path: /discover
    method: GET
    data_selector: results
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: cms_detection
  endpoint:
    path: /
    method: GET
    data_selector: cms
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: packet_capture
  endpoint:
    path: /packet/capture
    method: POST
    data_selector: capture_info
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: users
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: relay_info
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: darkstat
  endpoint:
    path: /darkstat
    method: GET
- name: dnschef
  endpoint:
    path: /dnschef
    method: GET
- name: ettercap
  endpoint:
    path: /ettercap
    method: GET
- name: user_enum
  endpoint:
    path: /
    method: VRFY
    data_selector: users
    params:
      username: user@example.com
- name: sql_injection_check
  endpoint:
    path: /sql_injection/check
    method: POST
    data_selector: results
- name: ftest
  endpoint:
    path: /ftest
    method: GET
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
- name: brute_force_services
  endpoint:
    path: /services/brute_force
    method: POST
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: commands
    params: {}
- name: cryptcat_usage
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: commands
    params: {}
- name: dbd_usage
  endpoint:
    path: /dbd
    method: GET
    data_selector: commands
    params: {}
- name: ncat_usage
  endpoint:
    path: /ncat
    method: GET
    data_selector: commands
    params: {}
- name: netwox_usage
  endpoint:
    path: /netwox
    method: GET
    data_selector: commands
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: targets
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: list_shares
  endpoint:
    path: /smb/shares
    method: GET
    data_selector: shares
- name: create_directory
  endpoint:
    path: /smb/directory
    method: POST
    data_selector: result
- name: delete_directory
  endpoint:
    path: /smb/directory
    method: DELETE
    data_selector: result
- name: rename_directory
  endpoint:
    path: /smb/directory/rename
    method: PUT
    data_selector: result
- name: list_directory_contents
  endpoint:
    path: /smb/directory/contents
    method: GET
    data_selector: contents
- name: delete_file
  endpoint:
    path: /smb/file
    method: DELETE
    data_selector: result
- name: rename_file
  endpoint:
    path: /smb/file/rename
    method: PUT
    data_selector: result
- name: get_file
  endpoint:
    path: /smb/file
    method: GET
    data_selector: file
- name: put_file
  endpoint:
    path: /smb/file
    method: PUT
    data_selector: result
- name: recursively_get_directory
  endpoint:
    path: /smb/directory/recursive/get
    method: GET
    data_selector: files
- name: recursively_put_directory
  endpoint:
    path: /smb/directory/recursive/put
    method: PUT
    data_selector: result
- name: recursively_delete_directory
  endpoint:
    path: /smb/directory/recursive/delete
    method: DELETE
    data_selector: result
- name: Port Scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: Service Detection
  endpoint:
    path: /service-detection
    method: GET
    data_selector: results
    params: {}
- name: Vulnerability Detection
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: dns_enumeration
  endpoint:
    path: /dns/enum
    method: GET
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: packet_sniffing
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
- name: tshark
  endpoint:
    path: /tshark
    method: GET
- name: ftest
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ftestd
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: results
- name: arp_mitm
  endpoint:
    path: /arp/mitm
    method: POST
    data_selector: results
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: subdomains
  endpoint:
    path: /v1/subdomains
    method: GET
    data_selector: subdomains
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: found
    params:
      excluded_status_codes: '404'
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: found
    params:
      extensions: inc
- name: site_crawl
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      depth: 5
- name: ident_service
  endpoint:
    path: /ident-user-enum
    method: GET
    data_selector: results
- name: cloud_services
  endpoint:
    path: /cloud_services
    method: GET
    data_selector: services
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: POST
    data_selector: results
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: records
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: records
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
    data_selector: domains
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: BruteSpray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: services
    params: {}
- name: CeWL
  endpoint:
    path: /cewl
    method: GET
    data_selector: options
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /ssl
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: directories
  endpoint:
    path: /directories
    method: GET
    data_selector: directories
- name: port_scan
  endpoint:
    path: /ports
    method: GET
    data_selector: ports
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage_examples
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage_examples
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage_examples
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: response
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: response
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: response
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: ident_service
  endpoint:
    path: /ident-service
    method: GET
    data_selector: records
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: user_enumeration
  endpoint:
    path: /
    method: VRFY
    data_selector: usernames
    params:
      max_processes: 5
      default_port: 25
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: scan
  endpoint:
    path: /dvwa/vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: capture_data
  endpoint:
    path: /capture/data
    method: GET
    data_selector: records
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: records
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: network_tools
- name: arp_scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: arp_tools
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: arping_tools
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: list_shares
  endpoint:
    path: /198
    method: GET
    data_selector: shares
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
- name: OWASP Amass
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: records
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: http_directory_scan
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params:
      threads: 40
      wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt
      extensions: .txt,.html,.php,.asp,.aspx,.jsp
- name: http_auth_bruteforce_hydra
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: results
    params:
      username_list: /usr/share/seclists/Usernames/top-usernames-shortlist.txt
      password_list: /usr/share/seclists/Passwords/darkweb2017-top100.txt
      port: 80
      output: /root/192.168.11.4/scans/tcp_80_http_auth_hydra.txt
- name: domain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params:
      target: 192.168.11.4
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: url_scan
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
- name: cloud_services
  endpoint:
    path: /cloud_services
    method: GET
    data_selector: services
    params: {}
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: packets
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: packets
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: packets
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: config
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: config
    params: {}
- name: subdomains
  endpoint:
    path: /subfinder
    method: GET
    data_selector: subdomains
- name: bettercap_commands
  endpoint:
    path: /usage
    method: GET
    data_selector: commands
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /sslinfo
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: directories
  endpoint:
    path: /directories
    method: GET
    data_selector: directories
- name: ports
  endpoint:
    path: /ports
    method: GET
    data_selector: ports
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: output
    params: {}
- name: OWASP Amass
  endpoint:
    path: /amass
    method: GET
    data_selector: output
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: output
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: output
    params: {}
- name: dnsenum_options
  endpoint:
    path: /dnsenum/options
    method: GET
    data_selector: options
    params: {}
- name: davtest
  endpoint:
    path: /davdir
    method: GET
- name: dhcpig
  endpoint:
    path: /eth0
    method: GET
- name: dotdotpwn
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: domain_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: records
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumerate
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: smtp_check
  endpoint:
    path: /smtp/check
    method: POST
    data_selector: results
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: crawl
  endpoint:
    path: /crawl
    method: GET
    data_selector: urls
- name: user_enumeration
  endpoint:
    path: /
    method: VRFY
    data_selector: usernames
    params:
      timeout: 5
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: SQL Injection
  endpoint:
    path: /dvwa/vulnerabilities/sqli/
    method: GET
    data_selector: records
    params:
      id: 1*
- name: cloud_resources
  endpoint:
    path: /cloud_resources
    method: GET
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: response
    params: {}
- name: image_metadata
  endpoint:
    path: /metadata/image
    method: GET
    data_selector: metadata
- name: audio_metadata
  endpoint:
    path: /metadata/audio
    method: GET
    data_selector: metadata
- name: document_metadata
  endpoint:
    path: /metadata/document
    method: GET
    data_selector: metadata
- name: epub_metadata
  endpoint:
    path: /metadata/epub
    method: GET
    data_selector: metadata
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: brute_force
  endpoint:
    path: /brutespray
    method: GET
    data_selector: results
    params: {}
- name: domain_subdomains
  endpoint:
    params:
      domain: string[]
      list: string
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: network_tools
  endpoint:
    path: /tools/network
    method: GET
    data_selector: tools
    params: {}
- name: autorecon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: ping
  endpoint:
    path: /fping
    method: GET
    data_selector: targets
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
- name: vulnerabilities_fi
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: vuln_scan
  endpoint:
    path: /vuln_scan
    method: GET
    data_selector: vulnerabilities
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
    params: {}
- name: smtp_check
  endpoint:
    path: /smtp/check
    method: GET
    data_selector: results
    params: {}
- name: network_protocols
  endpoint:
    path: /above/network_protocols
    method: GET
    data_selector: protocols
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
- name: user_enumeration
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      max_processes: 5
      method: VRFY
      timeout: 5
- name: sniff
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: packets
- name: inject
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: injected_packets
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: payloads
    params:
      id: '1'
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: response
    params: {}
- name: tcp_packets
  endpoint:
    path: /tcp_packets
    method: GET
    data_selector: records
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params:
      verbose: true
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params:
      verbose: true
- name: config_scan
  endpoint:
    path: /config
    method: POST
    data_selector: results
    params: {}
- name: filesystem_scan
  endpoint:
    path: /filesystem
    method: POST
    data_selector: results
    params: {}
- name: image_scan
  endpoint:
    path: /image
    method: POST
    data_selector: results
    params: {}
- name: NetworkTools
  endpoint:
    path: /kali/network-tools
    method: GET
    data_selector: tools
    params: {}
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: cryptcat
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: dbd
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: ncat
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: netwox
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params:
      destination_ip: 5.6.7.8
      username: login
      password: password
      netbiosname: netbiosname
      device: device
      src_eth: 0:2:3:4:5:6
      dst_eth: 0:8:9:a:b:c
      src_ip: 192.168.11.3
      src_port: '0'
      dst_port: '139'
      ip4opts: ip4opts
      ip6exts: ip6exts
      authversion: '2'
      timeout: '60000'
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: output
    params: {}
- name: amass intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: output
    params: {}
- name: amass enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: output
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: output
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: output
    params: {}
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: protocols
    params: {}
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: GET
    data_selector: analysis
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader/help
    method: GET
    data_selector: output
    params: {}
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      query: FUZZ
      wordlist: words.txt
      excluded_status_codes: '404'
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: crawled_urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      depth: '5'
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: services
    params: {}
- name: configuration_options
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      configuration_options:
      - -f <conf_file>
      - -c <source_ip>:<source_port>:<dest_ip>:<dest_port>:<flags>:<protocol>:<tos>
      - -v <verbose>
- name: timing_options
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      timing_options:
      - -d <delay, 0.25 = 250 ms>
      - -s <sleep time, 1 = 1 s>
- name: evasion_options
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      evasion_options:
      - -e <evasion method>
      - -t <ids_ttl>
- name: connection_options
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      connection_options:
      - -r <reset connection>
      - -F <end connection>
      - -g <IP fragments number, es. 4|IP fragments size, es. 16b>
      - -p <TCP segments number, es. 4|TCP segments size, es 6b>
      - -k <cksum value, es. 60000>
      - -m <marker>
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: commands
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: commands
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: commands
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: commands
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/list/shares
    method: GET
    data_selector: shares
    params:
      ip: 5.6.7.8
      user: login
      password: password
      netbiosname: netbiosname
      device: device
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: records
    params: {}
- name: subdomain
  endpoint:
    path: /subdomain
    method: GET
    data_selector: subdomains
    params: {}
- name: dns_enumeration
  endpoint:
    path: /dns-enumeration
    method: GET
    data_selector: records
    params: {}
- name: recon_and_information_gathering_tools
  endpoint:
    path: /recon-tools
    method: GET
    data_selector: tools
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: payload
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: response
    params:
      page: TRAVERSAL
- name: http_response_headers
  endpoint:
    path: /
    method: GET
    data_selector: headers
- name: directory_listing
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      count: 100
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: POST
    data_selector: results
- name: netexec
  endpoint:
    path: /netexec
    method: POST
    data_selector: results
- name: nikto
  endpoint:
    path: /nikto
    method: POST
    data_selector: results
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
    data_selector: results
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      method: VRFY
      user_file: users.txt
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: subdomain_discovery
  endpoint:
    path: /subfinder
    method: GET
    data_selector: results
- name: backdoor_script
  endpoint:
    path: /weevely/generate
    method: POST
    data_selector: generated_script
- name: execute_command
  endpoint:
    path: /weevely/shell_sh
    method: POST
    data_selector: command_output
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
- name: dav_upload
  endpoint:
    path: /uploads/
    method: PUT
    data_selector: result
    params:
      auth: admin:admin
- name: default_credentials
  endpoint:
    path: /api/default_credentials
    method: GET
    data_selector: credentials
- name: http_response_headers
  endpoint:
    path: /
    method: GET
    data_selector: headers
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: records
    params: {}
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: records
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: records
    params: {}
- name: usernames
  endpoint:
    path: /
    method: VRFY
    data_selector: users
    params:
      user: user@example.com
- name: AutoRecon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
    params: {}
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
- name: ping_targets
  endpoint:
    path: /ping
    method: GET
    data_selector: results
- name: session
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: session
    params: {}
- name: fuzzing
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params: {}
- name: network_protocols
  endpoint:
    path: /network-protocols
    method: GET
    data_selector: protocols
- name: hash
  endpoint:
    path: /hash
    method: GET
    data_selector: hashes
    params: {}
- name: session_files
  endpoint:
    path: /chaosreader/session
    method: GET
    data_selector: records
- name: usage
  endpoint:
    path: /autorecon/usage
    method: GET
    data_selector: records
- name: example
  endpoint:
    path: /autorecon/example
    method: GET
    data_selector: records
- name: ARP Sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: packets
    params: {}
- name: Packet Injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: packets
    params: {}
- name: SNMP
  endpoint:
    path: /snmp
    method: GET
    data_selector: snmp_data
- name: Configuration options
  endpoint:
    path: /ftest/configuration
    method: GET
    data_selector: config_options
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: records
    params: {}
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: records
    params: {}
- name: list_shares
  endpoint:
    path: /services/data/vXX.X/sobjects/Shares
    method: GET
    data_selector: shares
    params: {}
- name: capture_data
  endpoint:
    path: /capture
    method: GET
    data_selector: records
- name: subdomain_enumeration
  endpoint:
    path: /api/v1/subdomains
    method: POST
    data_selector: results
    params: {}
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
    params: {}
- name: ssldump
  endpoint:
    path: /ssldump
    method: GET
    data_selector: records
    params: {}
- name: tcp_packets
  endpoint:
    path: /tcp_packets
    method: GET
    data_selector: packets
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: configuration_options
  endpoint:
    path: /ftest/configuration
    method: GET
    data_selector: options
    params: {}
- name: timing_options
  endpoint:
    path: /ftest/timing
    method: GET
    data_selector: options
    params: {}
- name: evasion_options
  endpoint:
    path: /ftest/evasion
    method: GET
    data_selector: options
    params: {}
- name: connection_options
  endpoint:
    path: /ftest/connection
    method: GET
    data_selector: options
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: commands
    params: {}
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      extensions:
      - php
      - html
      threads: 50
      timeout: 7
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: 404
      threads: 10
      timeout: 10
- name: dns_enumeration
  endpoint:
    path: /dns/enum
    method: GET
- name: altdns
  endpoint:
    path: /altdns
    method: GET
- name: amass
  endpoint:
    path: /amass
    method: GET
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
- name: hostnames
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      num: 5
      lang: en-us
      mkt: ''
- name: dns_query
  endpoint:
    path: /dns/query
    method: GET
    data_selector: records
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: subdomains
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: target_cloud_resources
  endpoint:
    path: /cloud_enum/resources
    method: GET
    data_selector: results
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: ExifTags
  endpoint:
    path: /services/data/vXX.X/sobjects/ExifTags
    method: GET
    data_selector: records
    params: {}
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: resources
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: reports
- name: scan
  endpoint:
    path: /scan
    method: POST
    data_selector: results
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /sslinfo
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: sub_domains
  endpoint:
    path: /sub
    method: GET
    data_selector: sub_domains
- name: directory_search
  endpoint:
    path: /dir
    method: GET
    data_selector: directory_search
- name: port_scan
  endpoint:
    path: /ps
    method: GET
    data_selector: port_scan
- name: subdomain_discovery
  endpoint:
    path: /subfinder
    method: GET
    data_selector: subdomains
- name: header_info
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: scan_results
  endpoint:
    path: /scan/results
    method: GET
    data_selector: results
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
- name: nikto_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      usernames_file: users.txt
      target_host: 192.168.11.4
      port: 25
      timeout: 5
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumerate
    method: POST
    data_selector: result
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: result
- name: sql_injection
  endpoint:
    path: /dvwa/vulnerabilities/sqli/
    method: GET
    data_selector: records
    params:
      id: 1*
- name: target
  endpoint:
    path: /
    method: GET
- name: user_enum
  endpoint:
    path: /
    method: VRFY
    data_selector: results
    params:
      usernames_file: users.txt
      target_host: 192.168.11.4
      port: 25
      timeout: 5
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli
    method: GET
    data_selector: results
    params:
      id: '1'
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: brutespray
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: fuzzing_test
  endpoint:
    path: /FUZZ
    method: GET
- name: hash
  endpoint:
    path: /hash
    method: GET
    data_selector: hashes
    params: {}
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: resources
    params: {}
- name: cewl
  endpoint:
    path: /cewl
    method: GET
    data_selector: resources
    params: {}
- name: changeme
  endpoint:
    path: /changeme
    method: GET
    data_selector: resources
    params: {}
- name: crowbar
  endpoint:
    path: /crowbar
    method: GET
    data_selector: resources
    params: {}
- name: crunch
  endpoint:
    path: /crunch
    method: GET
    data_selector: resources
    params: {}
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: resources
    params: {}
- name: hash
  endpoint:
    path: /hash
    method: POST
    data_selector: results
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: hydra_usage
  endpoint:
    path: /hydra/usage
    method: GET
    data_selector: usage
    params: {}
- name: ping
  endpoint:
    path: /fping
    method: GET
    data_selector: results
    params: {}
- name: Network Scanning Tools
  endpoint:
    path: /tools/network-scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: tools
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: tools
    params: {}
- name: default
  endpoint:
    path: /root/.config/AutoRecon/global.toml
    method: GET
- name: traffic_capture
  endpoint:
    path: /above
    method: GET
    data_selector: output
    params:
      timer: not set
      output: not set
      input: not set
- name: snmp_scan
  endpoint:
    path: /snmp_scan
    method: GET
    data_selector: results
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
    params: {}
- name: protocol_detection
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: packet_capture
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: usage
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: usage
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: usage
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: usage
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: options
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: options
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: options
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: options
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params:
      dst-ip: 5.6.7.8
      user: login
      password: password
      netbiosname: netbiosname
      device: device
      src-eth: eth
      dst-eth: eth
      src-ip: 192.168.11.3
      src-port: '0'
      dst-port: '139'
- name: general_options
  endpoint:
    path: /options/general
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /options/google_scraping
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /options/brute_force
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /options/whois_netrange
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /options/reverse_lookup
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /options/output
    method: GET
    data_selector: options
    params: {}
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      domain: example.com
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: results
    params: {}
- name: arp_mitm
  endpoint:
    path: /arp/mitm
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port/scan
    method: GET
    data_selector: results
    params: {}
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: general_options
  endpoint:
    path: /options/general
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /options/google_scraping
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /options/brute_force
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /options/whois_netrange
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /options/reverse_lookup
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /options/output
    method: GET
    data_selector: options
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: subdomains
  endpoint:
    path: /
    method: GET
    data_selector: subdomains
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: cloud_services
  endpoint:
    path: /cloud_enum/services
    method: GET
    data_selector: services
- name: gobuster_dir
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      status_codes: '404'
- name: gobuster_fuzz
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: urls
  endpoint:
    path: /urls
    method: GET
    data_selector: urls
- name: javascript_files
  endpoint:
    path: /javascript
    method: GET
    data_selector: javascript_files
- name: Exif
  endpoint:
    path: /exif
    method: GET
    data_selector: records
- name: screenshot
  endpoint:
    path: /scan/single
    method: GET
    data_selector: results
- name: cloud_resources
  endpoint:
    path: /cloud_enum/resources
    method: GET
    data_selector: resources
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: POST
    data_selector: subdomains
- name: header_info
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: reports
- name: subdomain_discovery
  endpoint:
    path: /subdomain/discovery
    method: GET
    data_selector: results
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: response
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: response
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: response
    params: {}
- name: sublist3r
  endpoint:
    path: /sublist3r
    method: GET
    data_selector: results
    params: {}
- name: theHarvester
  endpoint:
    path: /theHarvester
    method: GET
    data_selector: results
    params: {}
- name: waybackpy
  endpoint:
    path: /waybackpy
    method: GET
    data_selector: archive
    params: {}
- name: witnessme
  endpoint:
    path: /witnessme
    method: GET
    data_selector: screenshot
    params: {}
- name: finalrecon
  endpoint:
    path: /finalrecon
    method: GET
    data_selector: recon
    params: {}
- name: ident-user
  endpoint:
    path: /ident-user-enum
    method: GET
    data_selector: records
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/user_enumeration
    method: GET
    data_selector: records
    params: {}
- name: target_info
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: usernames
    params:
      max_processes: 5
      method: VRFY
      protocol: smtp
      port: 25
      timeout: 5
- name: ident_user_enum
  endpoint:
    path: /ident-user-enum
    method: GET
    data_selector: response
    params: {}
- name: sql_injection
  endpoint:
    path: /dvwa/vulnerabilities/sqli/
    method: GET
    data_selector: records
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: response
- name: shell
  endpoint:
    path: /shell_sh
    method: POST
    data_selector: response
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params:
      timeout: 10
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
    params: {}
- name: smtp_check
  endpoint:
    path: /smtp/check
    method: GET
    data_selector: results
    params:
      timeout: '10'
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: results
    params: {}
- name: cewl
  endpoint:
    path: /cewl
    method: GET
    data_selector: results
    params: {}
- name: changeme
  endpoint:
    path: /changeme
    method: GET
    data_selector: results
    params: {}
- name: crowbar
  endpoint:
    path: /crowbar
    method: GET
    data_selector: results
    params: {}
- name: crunch
  endpoint:
    path: /crunch
    method: GET
    data_selector: results
    params: {}
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: results
    params: {}
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      user_file: users.txt
      target: 192.168.11.4
      port: 25
      timeout: 5
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: results
    params: {}
- name: hydra
  endpoint:
    path: /hydra
    method: GET
    data_selector: results
    params: {}
- name: john_the_ripper
  endpoint:
    path: /john
    method: GET
    data_selector: results
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: supported_services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: hashcat
  endpoint:
    path: /hashcat
    method: GET
    data_selector: hashes
    params: {}
- name: usage
  endpoint:
    path: /john/help
    method: GET
    data_selector: usage
    params: {}
- name: port_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: NetworkTools
  endpoint:
    path: /tools/network
    method: GET
    data_selector: tools
- name: snmp_scan
  endpoint:
    path: /snmp
    method: GET
- name: port_scan
  endpoint:
    path: /nmap/scan
    method: GET
    data_selector: scan_results
    params:
      target: 192.168.11.4
- name: vulnerability_scan
  endpoint:
    path: /nmap/vuln
    method: GET
    data_selector: vuln_results
    params:
      target: 192.168.11.4
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: chaosreader_usage
  endpoint:
    path: /chaosreader/help
    method: GET
    data_selector: usage
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
    params: {}
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: records
    params: {}
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: records
    params: {}
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: packets
    params: {}
- name: packet_injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: injection_results
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
- name: packet_sniffer
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
    params: {}
- name: http_request
  endpoint:
    path: /
    method: GET
    data_selector: HTTP/1.1 200 OK
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: results
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: results
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: packets
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: packets
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: packets
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: list_shares
  endpoint:
    path: /smb/shares
    method: GET
    data_selector: shares
    params: {}
- name: configuration_options
  endpoint:
    path: /ftest/configuration
    method: GET
    data_selector: options
    params: {}
- name: timing_options
  endpoint:
    path: /ftest/timing
    method: GET
    data_selector: timing
    params: {}
- name: evasion_options
  endpoint:
    path: /ftest/evasion
    method: GET
    data_selector: evasion
    params: {}
- name: connection_options
  endpoint:
    path: /ftest/connection
    method: GET
    data_selector: connection
    params: {}
- name: ARP MitM
  endpoint:
    path: /arp_mitm
    method: GET
- name: DNS Resolution
  endpoint:
    path: /dns_resolve
    method: GET
- name: Port Scan
  endpoint:
    path: /report_ports
    method: GET
- name: net_recon
  endpoint:
    path: /net/recon
    method: GET
- name: http_proxy
  endpoint:
    path: /http/proxy
    method: GET
- name: arp_spoof
  endpoint:
    path: /arp/spoof
    method: GET
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: usage
  endpoint:
    path: /usr/bin/dnstwist [OPTION]... DOMAIN
    method: GET
    data_selector: records
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params:
      domain: example.com
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: general_options
  endpoint:
    path: --dnsserver
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: -p
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: -f
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: -d
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: -e
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: -o
    method: GET
    data_selector: options
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: cloud_services
  endpoint:
    path: /cloud_services
    method: GET
    data_selector: services
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: gobuster_dir
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: gobuster_fuzz
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      query: FUZZ
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: cloud_resources
  endpoint:
    path: /cloud_enum/resources
    method: GET
    data_selector: results
- name: subdomain
  endpoint:
    path: /api/v1/subdomains
    method: GET
    data_selector: subdomains
    params: {}
- name: url_collection
  endpoint:
    path: /getallurls
    method: GET
    data_selector: results
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: subdomain_discovery
  endpoint:
    path: /subdomain/discovery
    method: GET
- name: uploads
  endpoint:
    path: /uploads/
    method: MKCOL
    data_selector: Created
    params: {}
- name: usage_example
  endpoint:
    path: /fragrouter
    method: GET
    data_selector: usage
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
- name: whois
  endpoint:
    path: /whois
    method: GET
- name: sslinfo
  endpoint:
    path: /sslinfo
    method: GET
- name: dns
  endpoint:
    path: /dns
    method: GET
- name: sub
  endpoint:
    path: /subdomains
    method: GET
- name: dir
  endpoint:
    path: /directories
    method: GET
- name: wayback
  endpoint:
    path: /wayback
    method: GET
- name: ps
  endpoint:
    path: /ports
    method: GET
- name: user_enumeration
  endpoint:
    path: /
    method: VRFY
    data_selector: user
    params:
      timeout: 5
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: supported_services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: ident_user_enum
  endpoint:
    path: /ident-user-enum
    method: GET
    data_selector: response
    params: {}
- name: brute_force
  endpoint:
    path: /medusa
    method: GET
    data_selector: modules
    params: {}
- name: statsgen
  endpoint:
    path: /statsgen
    method: GET
    data_selector: options
    params: {}
- name: maskgen
  endpoint:
    path: /maskgen
    method: GET
    data_selector: options
    params: {}
- name: policygen
  endpoint:
    path: /policygen
    method: GET
    data_selector: options
    params: {}
- name: rulegen
  endpoint:
    path: /rulegen
    method: GET
    data_selector: options
    params: {}
- name: user_check
  endpoint:
    path: /
    method: VRFY
    data_selector: response
    params:
      user: user@example.com
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: results
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: results
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: results
- name: sql_injection_test
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: identified_injection_points
    params:
      level: 5
      risk: 3
      dbms: MySQL
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: ffuf
  endpoint:
    path: /FUZZ
    method: GET
- name: sfuzz
  endpoint:
    path: /FUZZ
    method: GET
- name: wfuzz
  endpoint:
    path: /FUZZ
    method: GET
- name: port_scan
  endpoint:
    path: /nmap/port_scan
    method: GET
    data_selector: ports
    params:
      options: -A -T4
- name: ack_scan
  endpoint:
    path: /nmap/ack_scan
    method: GET
    data_selector: ports
    params:
      options: -sA --top-ports 10
- name: vuln_scan
  endpoint:
    path: /nmap/vuln_scan
    method: GET
    data_selector: vulnerabilities
    params:
      options: --script=vuln
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: chaosreader_usage
  endpoint:
    path: /chaosreader/help
    method: GET
    data_selector: usage
- name: increment
  endpoint:
    path: --increment=NUM:NUM
    method: GET
    data_selector: usage
    params: {}
- name: output_file
  endpoint:
    path: --output-file=FILE
    method: GET
    data_selector: usage
    params: {}
- name: custom_charsets
  endpoint:
    path: --custom-charset1=CS
    method: GET
    data_selector: usage
    params: {}
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: ARP Scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: tools
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: tools
    params: {}
- name: target
  endpoint:
    path: /autrecon/target
    method: GET
    data_selector: targets
- name: credential_bruteforcing
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: results
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configurations
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configurations
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: firewall_rules
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: network_security
    params: {}
- name: masscan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: bettercap_commands
  endpoint:
    path: /help
    method: GET
- name: list_shares
  endpoint:
    path: /smbclient/listshares
    method: GET
    data_selector: shares
    params: {}
- name: port_scan
  endpoint:
    path: /api/v1/scan
    method: POST
    data_selector: results
    params:
      timeout: 1000
      retries: 3
      warm_up_time: 2
- name: nbtscan
  endpoint:
    path: /api/v1/nbtscan
    method: GET
    data_selector: results
    params:
      verbose: true
      timeout: 1000
- name: DNS Enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
- name: Altdns
  endpoint:
    path: /altdns
    method: POST
- name: OWASP Amass
  endpoint:
    path: /amass
    method: POST
- name: port_scan
  endpoint:
    path: /scan/ports
    method: GET
    data_selector: results
- name: os_detection
  endpoint:
    path: /scan/os
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /scan/vuln
    method: GET
    data_selector: results
- name: dns_records
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
- name: protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: supported_protocols
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
      threads: 50
      timeout: 7
- name: ntlm_auth
  endpoint:
    path: /ntlm_auth
    method: POST
    data_selector: response
    params: {}
- name: http_auth
  endpoint:
    path: /http_auth
    method: POST
    data_selector: response
    params: {}
- name: site_crawling
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: payload
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: traffic
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: packets
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: conf_file
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: interface
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: ''
    params: {}
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: ''
    params: {}
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params:
      input: subdomains.txt
      output: out.txt
      wordlist: words.txt
      resolve: true
      save: result.txt
- name: OWASP Amass
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
    params:
      domain: digital.go.jp
      whois: true
      config: config.yaml
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: sslinfo
  endpoint:
    path: /sslinfo
    method: GET
    data_selector: sslinfo
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: sub
  endpoint:
    path: /sub
    method: GET
    data_selector: sub
- name: dir
  endpoint:
    path: /dir
    method: GET
    data_selector: dir
- name: wayback
  endpoint:
    path: /wayback
    method: GET
    data_selector: wayback
- name: ps
  endpoint:
    path: /ps
    method: GET
    data_selector: ps
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      domain: domain
- name: dav_test
  endpoint:
    path: /davtest
    method: PUT
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: Total Traversals found
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
      threads: 50
      timeout: 7
- name: fuzzing
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      query: FUZZ
      wordlist: words.txt
      excluded_status_codes: '404'
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: cloud_resources
  endpoint:
    path: /cloud/resources
    method: GET
    data_selector: resources
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: results
    params:
      method: VRFY
      usernames_file: users.txt
      target: 192.168.11.4
      port: 25
      timeout: 5
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: filesystem_audit
  endpoint:
    path: /audit_filesystem
    method: GET
- name: file_download
  endpoint:
    path: /file_download
    method: GET
- name: domains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: fuzzing_test
  endpoint:
    path: /FUZZ
    method: GET
- name: supported_services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: maskprocessor
  endpoint:
    path: /maskprocessor
    method: GET
    data_selector: records
- name: statsgen
  endpoint:
    path: statsgen
    method: GET
    data_selector: options
- name: maskgen
  endpoint:
    path: maskgen
    method: GET
    data_selector: options
- name: policygen
  endpoint:
    path: policygen
    method: GET
    data_selector: options
- name: rulegen
  endpoint:
    path: rulegen
    method: GET
    data_selector: options
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: config
  endpoint:
    path: config
    method: scan
    data_selector: results
- name: filesystem
  endpoint:
    path: filesystem
    method: scan
    data_selector: results
- name: image
  endpoint:
    path: image
    method: scan
    data_selector: results
- name: kubernetes
  endpoint:
    path: kubernetes
    method: scan
    data_selector: results
- name: repository
  endpoint:
    path: repository
    method: scan
    data_selector: results
- name: rootfs
  endpoint:
    path: rootfs
    method: scan
    data_selector: results
- name: sbom
  endpoint:
    path: sbom
    method: scan
    data_selector: results
- name: vm
  endpoint:
    path: vm
    method: scan
    data_selector: results
- name: network_tools
  endpoint:
    path: /api/network_tools
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /api/arp_scan
    method: GET
    data_selector: results
    params: {}
- name: arping
  endpoint:
    path: /api/arping
    method: GET
    data_selector: responses
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params:
      timeout: '10'
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
    params: {}
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: results
    params: {}
- name: jsql_injection
  endpoint:
    path: /jsql/injection
    method: POST
    data_selector: results
    params: {}
- name: nikto
  endpoint:
    path: /nikto
    method: GET
    data_selector: results
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
    params: {}
- name: scans
  endpoint:
    path: /scans
    method: GET
    data_selector: records
    params: {}
- name: user_enumeration
  endpoint:
    path: /
    method: VRFY
    data_selector: usernames
    params:
      domain: none
      port: 25
- name: directory_buster
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params: {}
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: records
- name: ack_scan
  endpoint:
    path: /ack_scan
    method: GET
    data_selector: packets
    params: {}
- name: http_request
  endpoint:
    path: /http_request
    method: GET
    data_selector: response
    params: {}
- name: backdoor_script
  endpoint:
    path: /generate
    method: POST
    data_selector: generated_script
    params:
      password: hello
      path: backdoor.php
- name: execute_command
  endpoint:
    path: /shell_sh
    method: POST
    data_selector: command_output
    params:
      command: cat /etc/passwd
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: fuzzing_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: network_protocols
  endpoint:
    path: /api/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: supported_services
  endpoint:
    path: /services/supported
    method: GET
    data_selector: services
- name: hashcat
  endpoint:
    path: /hashcat
    method: GET
- name: hydra
  endpoint:
    path: /hydra
    method: GET
- name: john_the_ripper
  endpoint:
    path: /john
    method: GET
- name: wordlist
  endpoint:
    path: /mp64
    method: GET
    data_selector: records
- name: medusa_usage
  endpoint:
    path: /medusa
    method: GET
    data_selector: usage
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: data
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: data
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: data
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: records
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: records
    params: {}
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: hosts
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
    params: {}
- name: target
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: SNMP Scanner
  endpoint:
    path: /braa
    method: GET
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: masscan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: output
    params: {}
- name: amass
  endpoint:
    path: /amass
    method: GET
    data_selector: output
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: output
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: output
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: general_options
  endpoint:
    path: /dnsenum/general_options
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /dnsenum/google_scraping_options
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /dnsenum/brute_force_options
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /dnsenum/whois_netrange_options
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /dnsenum/reverse_lookup_options
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /dnsenum/output_options
    method: GET
    data_selector: options
    params: {}
- name: network_traffic
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: packets
    params: {}
- name: dns_records
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    params: {}
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: result
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: record
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_services
    method: GET
    data_selector: services
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: records
- name: subdomain_listing
  endpoint:
    path: /subdomains/listing
    method: GET
    data_selector: subdomains
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: dns_records
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      domain: string
- name: directory_scan
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: Total Traversals found
    params: {}
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: smtp_user_enumeration
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: cloud_services
    params: {}
- name: file_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: username_check
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: usernames
    params:
      mode: VRFY
      max_processes: 5
      target_host: 192.168.11.4
      port: 25
      timeout: 5
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: injection_points
    params:
      level: 5
      risk: 3
      dbms: MySQL
- name: scan_single_url
  endpoint:
    path: /scan/single
    method: GET
    data_selector: results
- name: scan_cidr
  endpoint:
    path: /scan/cidr
    method: GET
    data_selector: results
- name: scan_file
  endpoint:
    path: /scan/file
    method: GET
    data_selector: results
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
- name: supported_services
  endpoint:
    path: /services/supported
    method: GET
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: hashes
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: POST
- name: davtest
  endpoint:
    path: /davdir
    method: GET
    data_selector: records
- name: dhcpig
  endpoint:
    path: /dhcp
    method: GET
    data_selector: records
- name: dotdotpwn
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: records
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: records
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: records
- name: user_enumeration
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: usernames
    params:
      mode: VRFY
      user_file: users.txt
      target: 192.168.11.4
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: records
    params: {}
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
    params: {}
- name: kubernetes
  endpoint:
    path: /kubernetes
    method: GET
    data_selector: records
    params: {}
- name: repository
  endpoint:
    path: /repository
    method: GET
    data_selector: records
    params: {}
- name: rootfs
  endpoint:
    path: /rootfs
    method: GET
    data_selector: records
    params: {}
- name: sbom
  endpoint:
    path: /sbom
    method: GET
    data_selector: records
    params: {}
- name: vm
  endpoint:
    path: /vm
    method: GET
    data_selector: records
    params: {}
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: system_information
  endpoint:
    path: /system_information
    method: GET
    data_selector: System information
    params: {}
- name: tcp_connections
  endpoint:
    path: /tcp_connections
    method: GET
    data_selector: TCP connections and listening ports
    params: {}
- name: storage_information
  endpoint:
    path: /storage_information
    method: GET
    data_selector: Storage information
    params: {}
- name: BruteSpray
  endpoint:
    path: /brutespray
    method: GET
- name: CeWL
  endpoint:
    path: /cewl
    method: GET
- name: changeme
  endpoint:
    path: /changeme
    method: GET
- name: Crowbar
  endpoint:
    path: /crowbar
    method: GET
- name: crunch
  endpoint:
    path: /crunch
    method: GET
- name: hashID
  endpoint:
    path: /hashid
    method: GET
- name: Network Tools
  endpoint:
    path: /network-tools
    method: GET
    data_selector: tools
    params: {}
- name: hash
  endpoint:
    path: /hashcat
    method: POST
    data_selector: hashes
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: maskprocessor
  endpoint:
    path: /mp64
    method: GET
    data_selector: resources
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: os_info
- name: vulnerability_scan
  endpoint:
    path: /vuln_scan
    method: GET
    data_selector: vuln_info
- name: Network Scanning Tools
  endpoint:
    path: /kali/tools/network-scanning
    method: GET
    data_selector: tools
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: application_session
  endpoint:
    path: /chaosreader/session
    method: GET
    data_selector: sessions
    params: {}
- name: ARP Sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: packets
- name: HTTP Packet Sniffing
  endpoint:
    path: /hexinject/http
    method: GET
    data_selector: packets
- name: scan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params: {}
- name: packet_capture
  endpoint:
    path: /tcpdump
    method: GET
    data_selector: packets
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: Capture interface
  endpoint:
    path: /capture/interface
    method: GET
- name: Capture stop conditions
  endpoint:
    path: /capture/stop_conditions
    method: GET
- name: Capture output
  endpoint:
    path: /capture/output
    method: GET
- name: Input file
  endpoint:
    path: /input/file
    method: GET
- name: Processing
  endpoint:
    path: /processing
    method: GET
- name: Output
  endpoint:
    path: /output
    method: GET
- name: Diagnostic output
  endpoint:
    path: /diagnostic/output
    method: GET
- name: Miscellaneous
  endpoint:
    path: /miscellaneous
    method: GET
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: auth_server
  endpoint:
    path: /responder/auth
    method: POST
    data_selector: data
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: commands
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: commands
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: commands
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: commands
    params: {}
- name: list_shares
  endpoint:
    path: /list/shares
    method: GET
    data_selector: shares
    params: {}
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: packet_capture
  endpoint:
    path: /
    method: GET
    data_selector: packets
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
    params: {}
- name: OWASP Amass
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: records
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
    params: {}
- name: configuration_options
  endpoint:
    path: /ftest/configuration
    method: GET
    data_selector: options
- name: timing_options
  endpoint:
    path: /ftest/timing
    method: GET
    data_selector: timing
- name: evasion_options
  endpoint:
    path: /ftest/evasion
    method: GET
    data_selector: evasion
- name: connection_options
  endpoint:
    path: /ftest/connection
    method: GET
    data_selector: connection
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: urlcrazy_usage
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: results
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: logs
  endpoint:
    path: /logs/
    method: GET
    data_selector: logs
    params: {}
- name: crawl_results
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: DNS Enumeration
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: output
    params: {}
- name: Subdomain Finder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: output
    params: {}
- name: dns_options
  endpoint:
    path: /dns/options
    method: GET
    data_selector: options
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: url_collection
  endpoint:
    path: /api/v1/urls
    method: GET
    data_selector: urls
    params: {}
- name: domain_scan
  endpoint:
    path: /dns_scan
    method: GET
    data_selector: results
    params: {}
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: records
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: log_files
  endpoint:
    path: /
    method: GET
    data_selector: logs
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: urls
  endpoint:
    path: /getallurls
    method: GET
    data_selector: results
    params: {}
- name: fragrouter
  endpoint:
    path: /fragrouter
    method: GET
- name: getsploit
  endpoint:
    path: /getsploit
    method: GET
- name: humble
  endpoint:
    path: /humble
    method: GET
- name: ident-user-enum
  endpoint:
    path: /ident-user-enum
    method: GET
- name: iSMTP
  endpoint:
    path: /iSMTP
    method: GET
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: subdomains
  endpoint:
    path: /v1/subdomains
    method: GET
    data_selector: subdomains
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      usernames_file: users.txt
      target_host: 192.168.11.4
      port: 25
      timeout: 5
- name: URL Target
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: vulnerabilities
    params:
      id: '1'
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /ssl
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: directory
  endpoint:
    path: /directory
    method: GET
    data_selector: directory
- name: port_scan
  endpoint:
    path: /portscan
    method: GET
    data_selector: port_scan
- name: fuzz_tests
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
- name: brutespray
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: uploads
  endpoint:
    path: /uploads/
    method: PUT
    data_selector: response
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
- name: ncrack_usage
  endpoint:
    path: /help
    method: GET
    data_selector: usage
- name: statsgen_usage
  endpoint:
    path: /statsgen/help
    method: GET
    data_selector: usage
- name: maskgen_usage
  endpoint:
    path: /maskgen/help
    method: GET
    data_selector: usage
- name: policygen_usage
  endpoint:
    path: /policygen/help
    method: GET
    data_selector: usage
- name: rulegen_usage
  endpoint:
    path: /rulegen/help
    method: GET
    data_selector: usage
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
- name: sql_injection_test
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: requests
    params:
      id: '1'
- name: pgsql_login
  endpoint:
    path: /patator/pgsql_login
    method: GET
    data_selector: results
    params: {}
- name: pdfcrack
  endpoint:
    path: /patator/pdfcrack
    method: GET
    data_selector: results
    params: {}
- name: pipal
  endpoint:
    path: /patator/pipal
    method: GET
    data_selector: results
    params: {}
- name: princeprocessor
  endpoint:
    path: /patator/princeprocessor
    method: GET
    data_selector: results
    params: {}
- name: rling
  endpoint:
    path: /patator/rling
    method: GET
    data_selector: results
    params: {}
- name: rsmangler
  endpoint:
    path: /patator/rsmangler
    method: GET
    data_selector: results
    params: {}
- name: statsprocessor
  endpoint:
    path: /patator/statsprocessor
    method: GET
    data_selector: results
    params: {}
- name: wordlist
  endpoint:
    path: /wordlist
    method: GET
    data_selector: records
- name: backdoor_script
  endpoint:
    path: /generate
    method: POST
    data_selector: script
    params:
      password: hello
      path: backdoor.php
- name: session_file
  endpoint:
    path: /session
    method: GET
    data_selector: session
    params:
      path: /root/.weevely/sessions/192.168.11.4/backdoor_0.session
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: GET
    data_selector: serverInfo
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: POST
    data_selector: clientInfo
- name: brutespray_usage
  endpoint:
    path: /brutespray/help
    method: GET
    data_selector: usage
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: POST
    data_selector: results
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: records
- name: maskprocessor
  endpoint:
    path: /help
    method: GET
- name: medusa
  endpoint:
    path: /help
    method: GET
- name: nth
  endpoint:
    path: /help
    method: GET
- name: ncrack
  endpoint:
    path: /help
    method: GET
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params: {}
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: configuration options
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: image_scan
  endpoint:
    path: /image
    method: GET
    data_selector: scan_results
- name: filesystem_scan
  endpoint:
    path: /filesystem
    method: GET
    data_selector: scan_results
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: system_information
  endpoint:
    path: /system/information
    method: GET
    data_selector: System information
    params: {}
- name: tcp_connections
  endpoint:
    path: /tcp/connections
    method: GET
    data_selector: TCP connections and listening ports
    params: {}
- name: storage_information
  endpoint:
    path: /storage/information
    method: GET
    data_selector: Storage information
    params: {}
- name: subdomain_enumeration
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: POST
    data_selector: server
    params:
      port: '4444'
      socks5: true
      reverse: true
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: POST
    data_selector: client
    params:
      fingerprint: FgcOM015ItBc+v4nCF0suWrfFH95o8hLhOaCy5hYKwI=
      server: 192.168.11.3:4444
      remote: R:2222:localhost:22
- name: chisel_client_socks
  endpoint:
    path: /chisel/client
    method: POST
    data_selector: client
    params:
      fingerprint: FgcOM015ItBc+v4nCF0suWrfFH95o8hLhOaCy5hYKwI=
      server: 192.168.11.3:4444
      remote: socks
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: crawl
  endpoint:
    path: /crawl
    method: GET
    data_selector: results
    params:
      maxDepth: 1
- name: amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
- name: arping
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
- name: targets
  endpoint:
    path: targets
    method: GET
    data_selector: targets
- name: cloud_services
  endpoint:
    path: /cloud_services
    method: GET
    data_selector: services
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: subdomain_discovery
  endpoint:
    path: /subdomain-discovery
    method: GET
    data_selector: results
    params: {}
- name: protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: supported_protocols
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
- name: application_sessions
  endpoint:
    path: /api/v1/sessions
    method: GET
    data_selector: records
    params: {}
- name: NTLMv1/NTLMv2
  endpoint:
    path: /ntlm
    method: POST
    data_selector: response
- name: HTTP
  endpoint:
    path: /http
    method: GET
    data_selector: response
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: configuration options
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: results
    params:
      mode: VRFY
      usernames_file: users.txt
      target: 192.168.11.4
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: sql_injection_check
  endpoint:
    path: /sqlmap
    method: GET
    data_selector: results
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
- name: whatweb
  endpoint:
    path: /whatweb
    method: GET
- name: wpscan
  endpoint:
    path: /wpscan
    method: GET
- name: brutespray
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: dns_query
  endpoint:
    path: /dnsquery
    method: GET
    data_selector: results
- name: http
  endpoint:
    path: /modules/http
    method: GET
- name: mysql
  endpoint:
    path: /modules/mysql
    method: GET
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: records
    params:
      domain: DOMAIN
- name: password_analysis
  endpoint:
    path: /statsgen
    method: GET
    data_selector: passwords
    params: {}
- name: urlcrazy_report
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: report
- name: fuzz
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      query: FUZZ
- name: dir
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
- name: default_resource
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: resources
- name: scan_single
  endpoint:
    path: /scan/single
    method: GET
    data_selector: results
- name: subdomain_discovery
  endpoint:
    path: /subfinder
    method: GET
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: POST
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: POST
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: POST
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: POST
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: POST
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: POST
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: POST
- name: pop_login
  endpoint:
    path: /pop_login
    method: POST
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: POST
- name: imap_login
  endpoint:
    path: /imap_login
    method: POST
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: POST
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: POST
- name: smb_login
  endpoint:
    path: /smb_login
    method: POST
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: POST
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: POST
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: POST
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: POST
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: POST
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: POST
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: POST
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: POST
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: POST
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: POST
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: POST
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: POST
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: POST
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: POST
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: POST
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: POST
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: POST
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: POST
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: POST
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: POST
- name: recon_info
  endpoint:
    path: /api/v1/recon
    method: GET
    data_selector: data
- name: wordlist
  endpoint:
    path: /wordlist
    method: POST
    data_selector: results
- name: chisel_server
  endpoint:
    path: /server
    method: GET
    data_selector: usage
    params: {}
- name: chisel_client
  endpoint:
    path: /client
    method: GET
    data_selector: usage
    params: {}
- name: dns2tcp_server
  endpoint:
    path: /dns2tcpd
    method: GET
    data_selector: resources
    params:
      listen: 0.0.0.0
      port: '53'
      user: hello
      key: secret
      domain: example.com
      resources: ssh:127.0.0.1:22
- name: dns2tcp_client
  endpoint:
    path: /dns2tcpc
    method: GET
    data_selector: resources
    params:
      domain: example.com
      resource: ssh
      local_port: '4430'
      debug_level: '1'
      key: secret
      server: 192.168.11.4
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: responses
    params: {}
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: hosts
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
    params: {}
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: responses
    params: {}
- name: scan
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: results
    params: {}
- name: scan
  endpoint:
    path: /masscan
    method: GET
    data_selector: ''
    params: {}
- name: PortScan
  endpoint:
    path: /portscan
    method: GET
    data_selector: results
- name: VulnerabilityScan
  endpoint:
    path: /vulnscan
    method: GET
    data_selector: results
- name: SnmpCheck
  endpoint:
    path: /snmpcheck
    method: GET
    data_selector: results
- name: SmbMap
  endpoint:
    path: /smbmap
    method: GET
    data_selector: results
- name: protocol_detection
  endpoint:
    path: /protocol_detection
    method: GET
    data_selector: protocols
- name: capture_data
  endpoint:
    path: /capture
    method: GET
    data_selector: data
- name: tcpick_usage
  endpoint:
    path: /usage
    method: GET
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: firewall rules
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: list_shares
  endpoint:
    path: /services/data/vXX.X/sobjects/Shares
    method: GET
    data_selector: shares
- name: maskprocessor
  endpoint:
    path: /mp64
    method: GET
    data_selector: results
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: ftp_login
  endpoint:
    path: /ftp/login
    method: GET
    data_selector: results
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh/login
    method: GET
    data_selector: results
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet/login
    method: GET
    data_selector: results
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp/login
    method: GET
    data_selector: results
    params: {}
- name: dns_forward
  endpoint:
    path: /dns/forward
    method: GET
    data_selector: results
    params: {}
- name: dns_reverse
  endpoint:
    path: /dns/reverse
    method: GET
    data_selector: results
    params: {}
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: hashes
  endpoint:
    path: /hashes
    method: POST
    data_selector: records
- name: log_files
  endpoint:
    path: /
    method: GET
    data_selector: logs
    params:
      depth: 2
      wordlist: words.txt
- name: server
  endpoint:
    path: /chisel/server
    method: GET
- name: client
  endpoint:
    path: /chisel/client
    method: GET
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: records
    params: {}
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
    params: {}
- name: kubernetes
  endpoint:
    path: /kubernetes
    method: GET
    data_selector: records
    params: {}
- name: repository
  endpoint:
    path: /repository
    method: GET
    data_selector: records
    params: {}
- name: rootfs
  endpoint:
    path: /rootfs
    method: GET
    data_selector: records
    params: {}
- name: sbom
  endpoint:
    path: /sbom
    method: GET
    data_selector: records
    params: {}
- name: vm
  endpoint:
    path: /vm
    method: GET
    data_selector: records
    params: {}
- name: NetworkScanners
  endpoint:
    path: /NetworkTools/Scanners
    method: GET
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
- name: ARPing
  endpoint:
    path: /arping
    method: GET
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /sslinfo
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: subdomains
  endpoint:
    path: /sub
    method: GET
    data_selector: subdomains
- name: directory
  endpoint:
    path: /dir
    method: GET
    data_selector: directory
- name: port_scan
  endpoint:
    path: /ps
    method: GET
    data_selector: port_scan
- name: autorecon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: davtest_directory_creation
  endpoint:
    path: /uploads/DavTestDir_vz1C_iC2AlPID
    method: MKCOL
    data_selector: SUCCEED
- name: davtest_file_upload
  endpoint:
    path: /uploads/DavTestDir_vz1C_iC2AlPID/davtest_vz1C_iC2AlPID.{ext}
    method: PUT
    data_selector: SUCCEED
- name: Traffic Capture
  endpoint:
    path: /above/traffic
    method: GET
    data_selector: packets
    params:
      timer: '120'
- name: packet_sniffing
  endpoint:
    path: /packet/sniffing
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /packet/injection
    method: POST
    data_selector: injections
- name: smtp_user_enum
  endpoint:
    path: /
    method: POST
    data_selector: response
    params:
      mode: VRFY
      usernames_file: users.txt
      target_host: 192.168.11.4
      tcp_port: 25
      timeout: 5
- name: SQL Injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: parameters
    params:
      id: '1'
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
- name: Capture interface
  endpoint:
    path: /capture/interface
    method: GET
    data_selector: interface
    params: {}
- name: Capture stop conditions
  endpoint:
    path: /capture/stop_conditions
    method: GET
    data_selector: stop_conditions
    params: {}
- name: Capture output
  endpoint:
    path: /capture/output
    method: GET
    data_selector: output
    params: {}
- name: Input file
  endpoint:
    path: /input/file
    method: GET
    data_selector: file
    params: {}
- name: Processing
  endpoint:
    path: /processing
    method: GET
    data_selector: processing
    params: {}
- name: Output
  endpoint:
    path: /output
    method: GET
    data_selector: output
    params: {}
- name: Diagnostic output
  endpoint:
    path: /diagnostic/output
    method: GET
    data_selector: diagnostic
    params: {}
- name: Miscellaneous
  endpoint:
    path: /miscellaneous
    method: GET
    data_selector: miscellaneous
    params: {}
- name: supported_services
  endpoint:
    path: /supported-services
    method: GET
    data_selector: services
- name: hash_analysis
  endpoint:
    path: /hashid
    method: GET
    data_selector: results
- name: mask
  endpoint:
    path: /mask
    method: GET
    data_selector: records
    params: {}
- name: password_analysis_tool
  endpoint:
    path: /statsgen
    method: GET
    data_selector: options
    params: {}
- name: mask_generation_tool
  endpoint:
    path: /maskgen
    method: GET
    data_selector: options
    params: {}
- name: policy_generation_tool
  endpoint:
    path: /policygen
    method: GET
    data_selector: options
    params: {}
- name: rule_generation_tool
  endpoint:
    path: /rulegen
    method: GET
    data_selector: options
    params: {}
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
- name: altdns
  endpoint:
    path: /altdns
    method: GET
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: records
- name: subdomain_bruteforce
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: GET
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: GET
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: dns_query
  endpoint:
    path: /dns
    method: POST
    data_selector: queries
    params:
      tunnel_ip: 10.0.0.1
- name: gobuster_dir
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
      negative_status_codes: '404'
- name: gobuster_fuzz
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: public_resources
  endpoint:
    path: /cloud_enum/resources
    method: GET
    data_selector: records
- name: network_tools
  endpoint:
    path: /network/tools
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: results
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool/audio
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool/document
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool/epub
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: masscan_usage
  endpoint:
    path: /masscan
    method: GET
    data_selector: usage
    params: {}
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: results
- name: network_packet
  endpoint:
    path: /above
    method: GET
    data_selector: packets
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: capture
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: data
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: data
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: data
    params: {}
- name: ident_service
  endpoint:
    path: /ident/user/enum
    method: GET
    data_selector: results
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: options
    params: {}
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: ''
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: ''
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: ''
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: ''
    params: {}
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: usernames
- name: SQL Injection
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: parameter
- name: list_shares
  endpoint:
    path: /list_shares
    method: GET
    data_selector: shares
- name: fuzz
  endpoint:
    path: /FUZZ
    method: GET
- name: supported_services
  endpoint:
    path: /brutespray/services
    method: GET
    data_selector: services
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: mysql
  endpoint:
    path: /mysql
    method: GET
- name: logs
  endpoint:
    path: /logs/
    method: GET
    data_selector: logs
    params: {}
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: urls
  endpoint:
    path: /urls
    method: GET
    data_selector: urls
    params:
      providers: wayback,otx,commoncrawl
- name: subdomain
  endpoint:
    path: /subdomains
    method: GET
- name: subdomain_enumeration
  endpoint:
    path: /sublist3r
    method: GET
    data_selector: subdomains
    params:
      domain: DOMAIN
- name: subbrute_bruteforce
  endpoint:
    path: /sublist3r/bruteforce
    method: GET
    data_selector: subdomains
    params:
      domain: DOMAIN
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
- name: wordlist_extraction
  endpoint:
    path: /wordlist/extract
    method: POST
    data_selector: results
    params:
      min_length: 8
      max_length: 12
      include_numbers: true
- name: ident-user-enumeration
  endpoint:
    path: /ident-user-enum
    method: GET
    data_selector: records
- name: chisel_server
  endpoint:
    path: /server
    method: POST
    data_selector: response
    params: {}
- name: chisel_client
  endpoint:
    path: /client
    method: POST
    data_selector: response
    params: {}
- name: SMTP User Enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: GET
    data_selector: records
    params: {}
- name: SMTP Relay Testing
  endpoint:
    path: /smtp/relay/testing
    method: GET
    data_selector: records
    params: {}
- name: dns2tcp_server
  endpoint:
    path: /dns2tcpd
    method: GET
    data_selector: resources
    params:
      listen: 0.0.0.0
      port: 53
      user: hello
      key: secret
      domain: example.com
      resources: ssh:127.0.0.1:22
- name: dns2tcp_client
  endpoint:
    path: /dns2tcpc
    method: GET
    data_selector: resources
    params:
      domain: example.com
      resource: ssh
      local_port: 4430
      debug_level: 1
      key: secret
      server: 192.168.11.4
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      user_file: users.txt
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: sql_injection
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: results
    params:
      url: http://192.168.11.4/dvwa/vulnerabilities/sqli/?id=1*&Submit=Submit
      cookie: PHPSESSID=04d676deca8b0f224210c81f83fd5b61;security=medium
      level: 5
      risk: 3
      dbms: MySQL
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
- name: targets
  endpoint:
    path: /autorecon/targets
    method: GET
- name: scan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: supported_services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: records
    params: {}
- name: sniffing
  endpoint:
    path: /sniffing
    method: GET
    data_selector: records
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: data
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: records
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: records
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: records
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: records
    params: {}
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
    data_selector: records
    params: {}
- name: packet_sniffer
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: packet_injector
  endpoint:
    path: /inject
    method: POST
    data_selector: injections
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: records
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
    data_selector: resources
    params: {}
- name: global_socket
  endpoint:
    path: /global_socket
    method: GET
    data_selector: resources
    params: {}
- name: iodine
  endpoint:
    path: /iodine
    method: GET
    data_selector: resources
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
- name: server
  endpoint:
    path: /iodined/server
    method: POST
    data_selector: none
    params:
      password: hello
      tunnel_ip: 10.0.0.1
      topdomain: example.com
- name: client
  endpoint:
    path: /iodined/client
    method: POST
    data_selector: none
    params:
      nameserver: 192.168.11.4
      topdomain: example.com
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
    data_selector: agent_info
- name: session
  endpoint:
    path: /session
    method: GET
    data_selector: session_info
- name: bettercap_usage
  endpoint:
    path: /bettercap/usage
    method: GET
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: Amap
  endpoint:
    path: /amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: usage
    params: {}
- name: list_shares
  endpoint:
    path: /SMB/CIFS/client/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: dns_enumeration
  endpoint:
    path: /scapy/dns/enumeration
    method: GET
    data_selector: records
- name: arp_mitm
  endpoint:
    path: /scapy/arp_mitm
    method: GET
    data_selector: records
- name: tcpdump
  endpoint:
    path: /scapy/tcpdump
    method: GET
    data_selector: records
- name: scan
  endpoint:
    path: <ip addresses/ranges>
    method: masscan
    data_selector: ''
    params:
      ports: <ports options>
- name: general_options
  endpoint:
    path: /options/general
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /options/google_scraping
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /options/brute_force
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /options/whois_netrange
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /options/reverse_lookup
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /options/output
    method: GET
    data_selector: options
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: open_ports
    params:
      protocol: tcp
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: vulnerable_services
    params: {}
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: urlcrazy
  endpoint:
    path: /urlcrazy
    method: GET
- name: http_request
  endpoint:
    path: /
    method: GET
    data_selector: payload
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      threads: 50
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: options
    params: {}
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: url
    params: {}
- name: network_monitor
  endpoint:
    path: /network/monitor
    method: GET
    data_selector: records
- name: http_proxy
  endpoint:
    path: /http/proxy
    method: POST
    data_selector: records
- name: targets
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
- name: list_shares
  endpoint:
    path: /198/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: metadata
  endpoint:
    path: /api/metadata
    method: GET
    data_selector: records
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: report
  endpoint:
    path: /report
    method: GET
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: output
    params: {}
- name: amass
  endpoint:
    path: /amass
    method: GET
    data_selector: results
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: subdomains
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: dns_info
    params: {}
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
    params: {}
- name: dnsenum_usage
  endpoint:
    path: /dnsenum/help
    method: GET
    data_selector: usage
    params: {}
- name: dnsgen_usage
  endpoint:
    path: /dnsgen/help
    method: GET
    data_selector: usage
    params: {}
- name: dnsrecon_usage
  endpoint:
    path: /dnsrecon/help
    method: GET
    data_selector: usage
    params: {}
- name: dnstracer_usage
  endpoint:
    path: /dnstracer/help
    method: GET
    data_selector: usage
    params: {}
- name: dnstwist_usage
  endpoint:
    path: /dnstwist/help
    method: GET
    data_selector: usage
    params: {}
- name: upload
  endpoint:
    path: /uploads/
    method: PUT
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: vulnerabilities
- name: domain_report
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: report
    params:
      domain: github.com
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: fuzz
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: dir
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
- name: url_collection
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: username_check
  endpoint:
    path: /username_check
    method: GET
    data_selector: results
    params:
      mode: VRFY
      usernames_file: users.txt
      target: 192.168.11.4
      port: 25
      timeout: 5
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: resources
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: fuzzing
  endpoint:
    path: /FUZZ
    method: GET
- name: subdomain_discovery
  endpoint:
    path: /subfinder
    method: GET
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: results
- name: cewl
  endpoint:
    path: /cewl
    method: GET
    data_selector: words
- name: changeme
  endpoint:
    path: /changeme
    method: GET
    data_selector: default_credentials
- name: crowbar
  endpoint:
    path: /crowbar
    method: GET
    data_selector: successful_logins
- name: crunch
  endpoint:
    path: /crunch
    method: GET
    data_selector: wordlist
- name: hashID
  endpoint:
    path: /hashid
    method: GET
    data_selector: hash_types
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: maskprocessor
  endpoint:
    path: mp64
    method: GET
    data_selector: ''
    params: {}
- name: medusa
  endpoint:
    path: medusa
    method: GET
    data_selector: ''
    params: {}
- name: name_that_hash
  endpoint:
    path: nth
    method: GET
    data_selector: ''
    params: {}
- name: ncrack
  endpoint:
    path: ncrack
    method: GET
    data_selector: ''
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: report
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: results
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: results
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: results
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: results
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
    data_selector: results
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
    data_selector: results
- name: SMTP Enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: records
- name: SMTP Relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: records
- name: MX Check
  endpoint:
    path: /mx/check
    method: GET
    data_selector: records
- name: jSQL Injection
  endpoint:
    path: /jsql/injection
    method: GET
    data_selector: records
- name: NetExec
  endpoint:
    path: /netexec
    method: GET
    data_selector: records
- name: Nikto
  endpoint:
    path: /nikto
    method: GET
    data_selector: records
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: records
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
    data_selector: resources
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: records
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: records
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: records
    params: {}
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: autorecon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
    params: {}
- name: http_scan
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params: {}
- name: default_creds
  endpoint:
    path: /brutespray/default_creds
    method: GET
    data_selector: credentials
- name: hash
  endpoint:
    path: /hash
    method: GET
    data_selector: records
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: pdf_password_crack
  endpoint:
    path: /pdfcrack
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: capture_data
  endpoint:
    path: /capture
    method: GET
    data_selector: packets
    params: {}
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: records
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: OPTIONS
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: OPTIONS
- name: server
  endpoint:
    path: /ligolo-proxy
    method: GET
    data_selector: records
    params: {}
- name: client
  endpoint:
    path: /ligolo-agent
    method: GET
    data_selector: records
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: packets
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: packets
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: packets
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration_options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration_options
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage_examples
    params: {}
- name: cryptcat_usage
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: usage_examples
    params: {}
- name: dbd_usage
  endpoint:
    path: /dbd
    method: GET
    data_selector: usage_examples
    params: {}
- name: ncat_usage
  endpoint:
    path: /ncat
    method: GET
    data_selector: usage_examples
    params: {}
- name: netwox_usage
  endpoint:
    path: /netwox
    method: GET
    data_selector: usage_examples
    params: {}
- name: port_scan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: list_shares
  endpoint:
    path: /services/data/vXX.X/smbclient/shares
    method: GET
    data_selector: shares
    params:
      dst-ip: destination IP address
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
    params: {}
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: subdomains
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: subdomains
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: dns_info
    params: {}
- name: network_sniffing
  endpoint:
    path: /above/network_sniffing
    method: GET
    data_selector: protocols
    params: {}
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: POST
    data_selector: analysis_results
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: domain_report
  endpoint:
    path: /search
    method: GET
    params:
      query: '*.*****.jp'
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
      threads: 50
      timeout: 7
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
- name: URLs
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: cloud_services
  endpoint:
    path: /cloud_services
    method: GET
    data_selector: services
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params:
      conf_file: <conf_file>
      source_ip: <source_ip>
      source_port: <source_port>
      dest_ip: <dest_ip>
      dest_port: <dest_port>
      flags: <flags>
      protocol: <protocol>
      tos: <tos>
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params:
      interface: <interface>
      fragments_reassembly: <fragments reassembly>
      marker: <marker>
      verbose: <verbose>
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: subdomains
  endpoint:
    path: /find
    method: GET
    data_selector: subdomains
- name: DNS Enumeration
  endpoint:
    path: /help
    method: GET
    data_selector: commands
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
- name: uploads
  endpoint:
    path: /uploads/
    method: MKCOL
    data_selector: SUCCEED
    params: {}
- name: crawled_urls
  endpoint:
    path: /crawl
    method: GET
    data_selector: urls
- name: ident_service
  endpoint:
    path: /ident
    method: GET
    data_selector: response
    params: {}
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params:
      timeout: '10'
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
    params: {}
- name: target
  endpoint:
    path: /nuclei/scan
    method: POST
    data_selector: results
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: file_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: username_check
  endpoint:
    path: /check_username
    method: GET
    data_selector: response_data
    params:
      mode: VRFY
      user_file: users.txt
      target_host: 192.168.11.4
      port: 25
      timeout: 5
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: brute_force_services
  endpoint:
    path: /api/brutespray/services
    method: GET
- name: davtest
  endpoint:
    path: /usr/bin/davtest
    method: GET
    data_selector: summary
    params: {}
- name: dhcpig
  endpoint:
    path: /usr/bin/dhcpig
    method: GET
    data_selector: info
    params: {}
- name: dotdotpwn
  endpoint:
    path: ./dotdotpwn.pl
    method: GET
    data_selector: test_results
    params: {}
- name: hash
  endpoint:
    path: /hash
    method: GET
    data_selector: records
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
- name: wordlist
  endpoint:
    path: /generate/wordlist
    method: POST
    data_selector: results
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: users
  endpoint:
    path: /
    method: VRFY
    data_selector: users
    params:
      timeout: 5
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: POST
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: POST
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: POST
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: POST
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: POST
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: POST
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: POST
- name: pop_login
  endpoint:
    path: /pop_login
    method: POST
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: POST
- name: imap_login
  endpoint:
    path: /imap_login
    method: POST
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: POST
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: POST
- name: smb_login
  endpoint:
    path: /smb_login
    method: POST
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: POST
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: POST
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: POST
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: POST
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: POST
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: POST
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: POST
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: POST
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: POST
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: POST
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: POST
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: POST
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: POST
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: POST
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: POST
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: POST
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: POST
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: POST
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: POST
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: POST
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: records
    params: {}
- name: wordlist
  endpoint:
    path: /wordlistraider
    method: GET
    data_selector: records
- name: server
  endpoint:
    path: /server
    method: GET
- name: client
  endpoint:
    path: /client
    method: GET
- name: password_analysis
  endpoint:
    path: /passwords
    method: GET
    data_selector: results
- name: server
  endpoint:
    path: /server/start
    method: POST
    data_selector: response
    params: {}
- name: client
  endpoint:
    path: /client/start
    method: POST
    data_selector: response
    params: {}
- name: interface
  endpoint:
    path: /interface_create
    method: POST
    data_selector: interface
    params: {}
- name: tunnel
  endpoint:
    path: /tunnel_start
    method: POST
    data_selector: tunnel
    params: {}
- name: route
  endpoint:
    path: /route_add
    method: POST
    data_selector: route
    params: {}
- name: network_tools
  endpoint:
    path: /kali/tools/network
    method: GET
    data_selector: tools
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: snmp_scan
  endpoint:
    path: /snmp_scan
    method: GET
    data_selector: results
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
- name: wordlist_extraction
  endpoint:
    path: /wordlist/extract
    method: POST
    data_selector: result
    params:
      min: 8
      max: 12
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
- name: proxy
  endpoint:
    path: /
    method: GET
    data_selector: response
- name: capture_data
  endpoint:
    path: /api/capture
    method: GET
    data_selector: records
- name: proxy_server
  endpoint:
    path: /
    method: GET
    data_selector: flows
    params: {}
- name: ntlm_auth
  endpoint:
    path: /ntlm_auth
    method: POST
    data_selector: response
    params: {}
- name: http_auth
  endpoint:
    path: /http_auth
    method: POST
    data_selector: response
    params: {}
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: hosts
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
    params: {}
- name: target
  endpoint:
    path: targets
    method: GET
    data_selector: records
- name: SNMPScanner
  endpoint:
    path: /snmp/scan
    method: GET
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: GUI options
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
    params:
      incremental: updated_at
- name: protocols
  endpoint:
    path: /supported_protocols
    method: GET
    data_selector: protocols
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
- name: IPID_count
  endpoint:
    path: /IPID_count
    method: GET
- name: arp_mitm
  endpoint:
    path: /arp_mitm
    method: GET
- name: arpcachepoison
  endpoint:
    path: /arpcachepoison
    method: GET
- name: arping
  endpoint:
    path: /arping
    method: GET
- name: bind_layers
  endpoint:
    path: /bind_layers
    method: GET
- name: domain_scan
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: null
    params: {}
- name: packets
  endpoint:
    path: /
    method: GET
    data_selector: packets
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: packets
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: packets
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions:
      - inc
      wordlist: words.txt
      threads: 10
      timeout: 10
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: bettercap
  endpoint:
    path: /
    method: GET
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: urls
  endpoint:
    path: /urls
    method: GET
    data_selector: urls
- name: list_shares
  endpoint:
    path: /services/data/vXX.X/sobjects/Shares
    method: GET
    data_selector: shares
    params: {}
- name: dns_enum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: domain
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: ''
    params: {}
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: ''
    params: {}
- name: version
  endpoint:
    path: /version
    method: GET
    data_selector: ''
    params: {}
- name: crawl
  endpoint:
    path: /
    method: GET
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
    params: {}
- name: url_collection
  endpoint:
    path: /getallurls
    method: GET
    data_selector: urls
    params: {}
- name: ident_service
  endpoint:
    path: /ident
    method: GET
    data_selector: response
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: subdomains
  endpoint:
    params:
      domain: string[]
      list: string
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
    params: {}
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params: {}
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: ident_user_enum
  endpoint:
    path: /ident-user-enum
    method: GET
    data_selector: output
    params: {}
- name: fuzzing_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: BruteSpray
  endpoint:
    path: /brutespray
    method: GET
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
    params: {}
- name: smtp_check
  endpoint:
    path: /smtp/check
    method: POST
    data_selector: results
    params: {}
- name: hash_analysis
  endpoint:
    path: /hashid
    method: POST
    data_selector: results
- name: brute_force_module
  endpoint:
    path: /medusa/modules
    method: GET
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: payloads
    params:
      id: '1'
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: POST
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: POST
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: POST
- name: wordlist_extraction
  endpoint:
    path: /wordlistraider/extract
    method: GET
    data_selector: ''
    params: {}
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
- name: global_socket
  endpoint:
    path: /global_socket
    method: GET
- name: iodine
  endpoint:
    path: /iodine
    method: GET
- name: hash
  endpoint:
    path: /hash
    method: GET
    data_selector: hashes
    params: {}
- name: password_analysis
  endpoint:
    path: /password_analysis
    method: GET
    data_selector: results
    params: {}
- name: service_specification
  endpoint:
    path: /service_specification
    method: GET
    data_selector: results
    params: {}
- name: Amap
  endpoint:
    path: /amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: usage
    params: {}
- name: port_scan
  endpoint:
    path: /autorecon/port_scan
    method: GET
    data_selector: results
- name: service_scan
  endpoint:
    path: /autorecon/service_scan
    method: GET
    data_selector: results
- name: hping3_usage
  endpoint:
    path: /help
    method: GET
    data_selector: usage
    params: {}
- name: port_scan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params:
      incremental: target_ip
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: POST
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: POST
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: POST
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: POST
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: POST
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: POST
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: POST
- name: pop_login
  endpoint:
    path: /pop_login
    method: POST
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: POST
- name: imap_login
  endpoint:
    path: /imap_login
    method: POST
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: POST
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: POST
- name: smb_login
  endpoint:
    path: /smb_login
    method: POST
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: POST
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: POST
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: POST
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: POST
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: POST
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: POST
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: POST
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: POST
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: POST
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: POST
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: POST
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: POST
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: POST
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: POST
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: POST
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: POST
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: POST
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: POST
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: POST
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: POST
- name: host_discovery
  endpoint:
    path: /host_discovery
    method: GET
    data_selector: hosts
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: ports
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: records
    params: {}
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: records
    params: {}
- name: dns2tcp_server
  endpoint:
    path: /dns2tcpd
    method: GET
    data_selector: resources
    params:
      domain: example.com
- name: dns2tcp_client
  endpoint:
    path: /dns2tcpc
    method: GET
    data_selector: resources
    params:
      server: 192.168.11.4
- name: application_session
  endpoint:
    path: /chaosreader/session
    method: GET
    data_selector: records
- name: proxy
  endpoint:
    path: /tunnel
    method: GET
    data_selector: response
- name: arp_sniff
  endpoint:
    path: /hexinject
    method: GET
    data_selector: arp
    params: {}
- name: http_sniff
  endpoint:
    path: /hexinject
    method: GET
    data_selector: http
    params: {}
- name: packet_capture
  endpoint:
    path: /
    method: GET
    data_selector: packets
    params: {}
- name: Network Tools
  endpoint:
    path: /network-tools
    method: GET
- name: Amap
  endpoint:
    path: /network-tools/amap
    method: GET
- name: arp-scan
  endpoint:
    path: /network-tools/arp-scan
    method: GET
- name: ARPing
  endpoint:
    path: /network-tools/arping
    method: GET
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: configuration
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: configuration
    params: {}
- name: scan
  endpoint:
    path: /masscan
    method: GET
    data_selector: ''
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list/shares
    method: GET
    data_selector: shares
    params: {}
- name: dnsrecords
  endpoint:
    path: /dnsrecords
    method: GET
    data_selector: records
- name: port_scan
  endpoint:
    path: /nmap/port_scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /nmap/vuln_scan
    method: GET
    data_selector: results
    params: {}
- name: domain
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: capture_data
  endpoint:
    path: /capture
    method: GET
    data_selector: records
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
- name: packet_injection
  endpoint:
    path: /hexinject/inject
    method: POST
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: packet_capture
  endpoint:
    path: /
    method: GET
    data_selector: packets
    params: {}
- name: cloud_service
  endpoint:
    path: /cloud_enum/service
    method: GET
    data_selector: services
- name: Configuration options
  endpoint:
    path: -f <conf_file>
    method: GET
    data_selector: ''
    params: {}
- name: Timing options
  endpoint:
    path: -d <delay, 0.25 = 250 ms>
    method: GET
    data_selector: ''
    params: {}
- name: Evasion options
  endpoint:
    path: -e <evasion method>
    method: GET
    data_selector: ''
    params: {}
- name: Connection options
  endpoint:
    path: -r <reset connection>
    method: GET
    data_selector: ''
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
- name: Domain Information Gathering
  endpoint:
    path: /amass
    method: GET
    data_selector: results
- name: dnsenum_options
  endpoint:
    path: /dnsenum/options
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /dnsenum/google_scraping
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /dnsenum/brute_force
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /dnsenum/whois_netrange
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /dnsenum/reverse_lookup
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /dnsenum/output
    method: GET
    data_selector: options
    params: {}
- name: http_response_headers
  endpoint:
    path: /
    method: GET
    data_selector: headers
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: smtp_enumeration
  endpoint:
    path: /smtp/enum
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: results
- name: crawl_results
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: cloud_resources
  endpoint:
    path: /cloud_enum/resources
    method: GET
- name: username_check
  endpoint:
    path: /check_user
    method: POST
    data_selector: response
    params:
      mode: VRFY
      user_file: users.txt
      target_host: 192.168.11.4
      port: 25
      timeout: 5
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: sql_injection_tests
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: requests
    params:
      id: '1'
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
- name: headers
  endpoint:
    path: /url
    method: GET
    data_selector: headers
    params:
      url: https://x.com
- name: ffuf
  endpoint:
    path: /ffuf
    method: GET
- name: simple_fuzz
  endpoint:
    path: /sfuzz
    method: GET
- name: wfuzz
  endpoint:
    path: /wfuzz
    method: GET
- name: default_credentials
  endpoint:
    path: /services/data/vXX.X/sobjects/DefaultCredentials
    method: GET
    data_selector: records
- name: mask_processor
  endpoint:
    path: /mp64
    method: GET
    data_selector: output
    params: {}
- name: medusa
  endpoint:
    path: /medusa
    method: GET
    data_selector: output
    params: {}
- name: name_that_hash
  endpoint:
    path: /nth
    method: GET
    data_selector: output
    params: {}
- name: ncrack
  endpoint:
    path: /ncrack
    method: GET
    data_selector: output
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: passwords
  endpoint:
    path: /passwords
    method: GET
    data_selector: records
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
    params: {}
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: results
    params: {}
- name: jSQL_injection
  endpoint:
    path: /jsql/injection
    method: GET
    data_selector: results
    params: {}
- name: net_exec
  endpoint:
    path: /netexec
    method: GET
    data_selector: results
    params: {}
- name: nikto
  endpoint:
    path: /nikto
    method: GET
    data_selector: results
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
    data_selector: results
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
    data_selector: results
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
    data_selector: results
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: POST
    data_selector: results
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: POST
    data_selector: results
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: POST
    data_selector: results
- name: wordlist_raider
  endpoint:
    path: /wordlistraider
    method: GET
    data_selector: results
    params: {}
- name: user_enum
  endpoint:
    path: /
    method: GET
    data_selector: users
    params:
      mode: VRFY
      max_processes: 5
      timeout: 5
- name: chisel_server
  endpoint:
    path: /server
    method: options
    data_selector: options
    params: {}
- name: chisel_client
  endpoint:
    path: /client
    method: options
    data_selector: options
    params: {}
- name: sql_injection_check
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: parameters
    params:
      id: '1'
- name: proxy
  endpoint:
    path: /
    method: GET
- name: fuzzing_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: help
    params: {}
- name: cewl
  endpoint:
    path: /cewl
    method: GET
    data_selector: help
    params: {}
- name: changeme
  endpoint:
    path: /changeme
    method: GET
    data_selector: help
    params: {}
- name: crowbar
  endpoint:
    path: /crowbar
    method: GET
    data_selector: help
    params: {}
- name: crunch
  endpoint:
    path: /crunch
    method: GET
    data_selector: help
    params: {}
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: help
    params: {}
- name: hash
  endpoint:
    path: /hash
    method: GET
    data_selector: records
- name: incremental
  endpoint:
    path: /increment
    method: GET
    data_selector: results
    params:
      incremental: enabled
- name: mask
  endpoint:
    path: /mask
    method: GET
    data_selector: results
    params: {}
- name: usage
  endpoint:
    path: /help
    method: GET
- name: target_file
  endpoint:
    path: --target-file
    method: GET
- name: ports
  endpoint:
    path: --ports
    method: GET
- name: max_scans
  endpoint:
    path: --max-scans
    method: GET
- name: max_port_scans
  endpoint:
    path: --max-port-scans
    method: GET
- name: config_file
  endpoint:
    path: --config
    method: GET
- name: global_file
  endpoint:
    path: --global-file
    method: GET
- name: tags
  endpoint:
    path: --tags
    method: GET
- name: exclude_tags
  endpoint:
    path: --exclude-tags
    method: GET
- name: port_scans
  endpoint:
    path: --port-scans
    method: GET
- name: service_scans
  endpoint:
    path: --service-scans
    method: GET
- name: reports
  endpoint:
    path: --reports
    method: GET
- name: plugins_dir
  endpoint:
    path: --plugins-dir
    method: GET
- name: add_plugins_dir
  endpoint:
    path: --add-plugins-dir
    method: GET
- name: output
  endpoint:
    path: --output
    method: GET
- name: heartbeat
  endpoint:
    path: --heartbeat
    method: GET
- name: timeout
  endpoint:
    path: --timeout
    method: GET
- name: target_timeout
  endpoint:
    path: --target-timeout
    method: GET
- name: nmap
  endpoint:
    path: --nmap
    method: GET
- name: nmap_append
  endpoint:
    path: --nmap-append
    method: GET
- name: proxychains
  endpoint:
    path: --proxychains
    method: GET
- name: disable_sanity_checks
  endpoint:
    path: --disable-sanity-checks
    method: GET
- name: disable_keyboard_control
  endpoint:
    path: --disable-keyboard-control
    method: GET
- name: force_services
  endpoint:
    path: --force-services
    method: GET
- name: max_plugin_target_instances
  endpoint:
    path: --max-plugin-target-instances
    method: GET
- name: max_plugin_global_instances
  endpoint:
    path: --max-plugin-global-instances
    method: GET
- name: accessible
  endpoint:
    path: --accessible
    method: GET
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params:
      incremental: target
- name: naabu
  endpoint:
    path: /naabu
    method: GET
    data_selector: results
    params:
      incremental: host
- name: nbtscan_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: records
- name: nbtscan_example
  endpoint:
    path: /example
    method: GET
    data_selector: records
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: records
    params: {}
- name: bruteshark
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: records
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: Responder Service
  endpoint:
    path: /api/v1/responder
    method: GET
    data_selector: response
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: POST
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: POST
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: POST
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: POST
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: POST
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: POST
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: POST
- name: pop_login
  endpoint:
    path: /pop_login
    method: POST
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: POST
- name: imap_login
  endpoint:
    path: /imap_login
    method: POST
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: POST
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: POST
- name: smb_login
  endpoint:
    path: /smb_login
    method: POST
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: POST
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: POST
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: POST
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: POST
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: POST
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: POST
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: POST
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: POST
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: POST
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: POST
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: POST
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: POST
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: POST
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: POST
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: POST
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: POST
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: POST
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: POST
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: POST
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: POST
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: records
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: output
    params:
      config_file: ftest.conf
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: output
    params: {}
- name: chisel_server
  endpoint:
    path: /server
    method: POST
    data_selector: response
    params: {}
- name: chisel_client
  endpoint:
    path: /client
    method: POST
    data_selector: response
    params: {}
- name: list_shares
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params: {}
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: GET
    data_selector: data
    params: {}
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: GET
    data_selector: data
    params: {}
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params:
      input: subdomains.txt
      output: out.txt
      wordlist: words.txt
      resolve: true
      save: result.txt
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
    params:
      domain: digital.go.jp
      whois: true
      config: config.yaml
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: enumerated_domains
    params:
      domain: digital.go.jp
      passive: true
      config: config.yaml
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: found_subdomains
    params:
      subs_only: true
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: dns_info
- name: server
  endpoint:
    path: /server/start
    method: POST
    params:
      password: -P password
- name: client
  endpoint:
    path: /client/start
    method: POST
    params:
      connect: -connect domain:port
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: subdomain_takeover
  endpoint:
    path: /subjack
    method: POST
    data_selector: results
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: scan_config
  endpoint:
    path: config
    method: SCAN
    data_selector: results
- name: scan_filesystem
  endpoint:
    path: filesystem
    method: SCAN
    data_selector: results
- name: scan_image
  endpoint:
    path: image
    method: SCAN
    data_selector: results
- name: scan_kubernetes
  endpoint:
    path: kubernetes
    method: SCAN
    data_selector: results
- name: scan_repository
  endpoint:
    path: repository
    method: SCAN
    data_selector: results
- name: scan_rootfs
  endpoint:
    path: rootfs
    method: SCAN
    data_selector: results
- name: scan_vm
  endpoint:
    path: vm
    method: SCAN
    data_selector: results
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: Network Tools
  endpoint:
    path: /network-tools
    method: GET
    data_selector: tools
    params: {}
- name: Amap
  endpoint:
    path: /network-tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /network-tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /network-tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: url_extraction
  endpoint:
    path: /api/getallurls
    method: GET
    data_selector: results
- name: target
  endpoint:
    path: /targets
    method: GET
    data_selector: results
    params: {}
- name: snmp_scan
  endpoint:
    path: /snmp
    method: GET
    data_selector: results
- name: subdomain
  endpoint:
    path: /api/v1/subdomains
    method: GET
    data_selector: subdomains
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomain_list
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: smtp_enum
  endpoint:
    path: /smtp/enum
    method: GET
    data_selector: records
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: records
- name: tcp_capture
  endpoint:
    path: /capture
    method: GET
    data_selector: packets
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: GUI
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: user_enum
  endpoint:
    path: /
    method: VRFY
    data_selector: users
    params:
      user: user@example.com
      port: 25
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params:
      dst-ip: 5.6.7.8
      user: login
      password: password
- name: injection_points
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: parameters
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: records
    params: {}
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: records
    params: {}
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: response
    params: {}
- name: dns_records
  endpoint:
    path: /services/data/dns_records
    method: GET
    data_selector: records
    params:
      incremental: domain
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    params:
      query: '*.*****.jp'
- name: fuzz_cases
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params: {}
- name: maskprocessor
  endpoint:
    path: /maskprocessor
    method: GET
    data_selector: records
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
      timeout: 10
- name: ncrack_usage
  endpoint:
    path: /ncrack
    method: GET
    data_selector: usage
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: resources
- name: image_metadata
  endpoint:
    path: /example.jpg
    method: GET
    data_selector: File Size
- name: audio_metadata
  endpoint:
    path: /example.mp3
    method: GET
    data_selector: File Size
- name: document_metadata
  endpoint:
    path: /example.docx
    method: GET
    data_selector: File Size
- name: epub_metadata
  endpoint:
    path: /example.epub
    method: GET
    data_selector: File Size
- name: scan_single_url
  endpoint:
    path: /scan/single
    method: GET
    data_selector: ''
    params: {}
- name: input
  endpoint:
    params:
      domain: -d, -domain string[]  domains to find subdomains for
      list: -dL, -list string     file containing list of domains for subdomain discovery
- name: source
  endpoint:
    params:
      sources: -s, -sources string[]           specific sources to use for discovery
      exclude_sources: -es, -exclude-sources string[]  sources to exclude from enumeration
- name: rate-limit
  endpoint:
    params:
      rate_limit: -rl, -rate-limit int  maximum number of http requests to send per
        second
      concurrent: -t int                number of concurrent goroutines for resolving
- name: output
  endpoint:
    params:
      output: -o, -output string       file to write output to
      json: -oJ, -json               write output in JSONL(ines) format
      output_dir: -oD, -output-dir string  directory to write output
- name: configuration
  endpoint:
    params:
      config: -config string                flag config file
      provider_config: -pc, -provider-config string  provider config file
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
- name: header_info
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois_info
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /sslinfo
    method: GET
    data_selector: ssl
- name: dns_info
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: subdomain_info
  endpoint:
    path: /sub
    method: GET
    data_selector: subdomains
- name: directory_info
  endpoint:
    path: /dir
    method: GET
    data_selector: directories
- name: port_info
  endpoint:
    path: /ps
    method: GET
    data_selector: ports
- name: wordlist_extraction
  endpoint:
    path: /wordlistraider/extract
    method: GET
    data_selector: records
- name: chisel_server
  endpoint:
    path: /server
    method: GET
    data_selector: options
    params: {}
- name: chisel_client
  endpoint:
    path: /client
    method: GET
    data_selector: options
    params: {}
- name: cms_detection
  endpoint:
    path: /
    method: GET
    data_selector: cms
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: tunnel
  endpoint:
    path: /tunnel
    method: POST
    data_selector: tunnel
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
    params: {}
- name: network_scanning_amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage_examples
    params: {}
- name: network_scanning_arp_scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage_examples
    params: {}
- name: network_scanning_arping
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage_examples
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params:
      timeout: 10
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
    params: {}
- name: target
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: username_check
  endpoint:
    path: /smtp/user/enum
    method: GET
    data_selector: users
    params:
      method: VRFY
      usernames_file: users.txt
      target_host: 192.168.11.4
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: ''
    params: {}
- name: sql_injection_check
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: results
    params:
      id: '1'
- name: fuzzing_test
  endpoint:
    path: /FUZZ
    method: GET
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: service_detection
  endpoint:
    path: /service_detection
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
- name: protocol_detection
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: results
    params: {}
- name: hydra
  endpoint:
    path: /hydra
    method: GET
    data_selector: results
    params: {}
- name: john
  endpoint:
    path: /john
    method: GET
    data_selector: results
    params: {}
- name: packet_sniffing
  endpoint:
    path: /api/packet_sniffing
    method: GET
    data_selector: packets
- name: connection
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: password_analysis_toolkit
  endpoint:
    path: /ncrack
    method: GET
    data_selector: usage
    params: {}
- name: password_masks
  endpoint:
    path: /statsgen
    method: GET
    data_selector: options
    params: {}
- name: mask_generation
  endpoint:
    path: /maskgen
    method: GET
    data_selector: options
    params: {}
- name: rule_generation
  endpoint:
    path: /rulegen
    method: GET
    data_selector: options
    params: {}
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: options
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: options
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: options
    params: {}
- name: wordlist_extraction
  endpoint:
    path: /wordlistraider/extract
    method: POST
    data_selector: results
    params: {}
- name: chisel_server
  endpoint:
    path: /server
    method: GET
    data_selector: options
- name: chisel_client
  endpoint:
    path: /client
    method: GET
    data_selector: options
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: commands
    params: {}
- name: cryptcat_usage
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: commands
    params: {}
- name: dbd_usage
  endpoint:
    path: /dbd
    method: GET
    data_selector: commands
    params: {}
- name: ncat_usage
  endpoint:
    path: /ncat
    method: GET
    data_selector: commands
    params: {}
- name: netwox_usage
  endpoint:
    path: /netwox
    method: GET
    data_selector: commands
    params: {}
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: ''
    params: {}
- name: server
  endpoint:
    path: /tunnel_ip
    method: POST
    data_selector: records
    params: {}
- name: client
  endpoint:
    path: /client
    method: POST
    data_selector: records
    params: {}
- name: dns_enumeration
  endpoint:
    path: altdns
    method: GET
    data_selector: output
    params: {}
- name: amass_intel
  endpoint:
    path: amass/intel
    method: GET
    data_selector: output
    params: {}
- name: amass_enum
  endpoint:
    path: amass/enum
    method: GET
    data_selector: output
    params: {}
- name: assetfinder
  endpoint:
    path: assetfinder
    method: GET
    data_selector: output
    params: {}
- name: dnsenum
  endpoint:
    path: dnsenum
    method: GET
    data_selector: output
    params: {}
- name: proxytunnel
  endpoint:
    path: /proxytunnel
    method: GET
    data_selector: options
    params: {}
- name: dns_records
  endpoint:
    path: /dnsrecords
    method: GET
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: hosts
    params: {}
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: target
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: domain_search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: scan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
- name: application_session
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: sessions
    params: {}
- name: image_metadata
  endpoint:
    path: /image/metadata
    method: GET
    data_selector: metadata
- name: audio_metadata
  endpoint:
    path: /audio/metadata
    method: GET
    data_selector: metadata
- name: document_metadata
  endpoint:
    path: /document/metadata
    method: GET
    data_selector: metadata
- name: epub_metadata
  endpoint:
    path: /epub/metadata
    method: GET
    data_selector: metadata
- name: packet_sniffing
  endpoint:
    path: /sniffing
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /injection
    method: POST
    data_selector: injections
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomain_list
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: usage examples
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage examples
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /sslinfo
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: subdomains
  endpoint:
    path: /sub
    method: GET
    data_selector: subdomains
- name: directory
  endpoint:
    path: /dir
    method: GET
    data_selector: directory
- name: port_scan
  endpoint:
    path: /ps
    method: GET
    data_selector: ports
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params:
      incremental: updated_at
- name: davtest
  endpoint:
    path: /uploads/
    method: MKCOL
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
    params: {}
- name: OWASP Amass
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: records
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
    params: {}
- name: ident_service
  endpoint:
    path: /ident
    method: GET
    data_selector: response
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: emails
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: relay_info
    params: {}
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: mx_records
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: user_enumeration
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      user: user@example.com
      host: 192.168.11.4
      port: 25
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: sql_injection
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: payload
    params:
      id: '1'
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: amazon_checks
  endpoint:
    path: /amazon/checks
    method: GET
    data_selector: records
    params: {}
- name: google_checks
  endpoint:
    path: /google/checks
    method: GET
    data_selector: records
    params: {}
- name: microsoft_checks
  endpoint:
    path: /microsoft/checks
    method: GET
    data_selector: records
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: results
- name: cewl
  endpoint:
    path: /cewl
    method: GET
    data_selector: words
- name: changeme
  endpoint:
    path: /changeme
    method: GET
    data_selector: credentials
- name: crowbar
  endpoint:
    path: /crowbar
    method: GET
    data_selector: attempts
- name: crunch
  endpoint:
    path: /crunch
    method: GET
    data_selector: wordlists
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: hashes
- name: subdomains
  endpoint:
    path: /api/v1/subdomains
    method: GET
    data_selector: subdomains
- name: hashcat_options
  endpoint:
    path: /hashcat/options
    method: GET
    data_selector: options
    params: {}
- name: headers_info
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
    params:
      url: https://x.com
- name: whois_info
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
    params:
      url: https://x.com
- name: cms_detection
  endpoint:
    path: /
    method: GET
    data_selector: CMS
    params: {}
- name: dhcp_request
  endpoint:
    path: /dhcp/request
    method: GET
    data_selector: response
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: reports
- name: smtp_check
  endpoint:
    path: /smtp/check
    method: GET
    data_selector: results
    params: {}
- name: user_enum
  endpoint:
    path: /smtp/user_enum
    method: POST
    params:
      max_processes: 5
      mode: VRFY
      user: user@example.com
      domain: ''
      tcp_port: 25
      timeout: 5
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: fuzzing
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: supported_services
  endpoint:
    path: /brute/supported_services
    method: GET
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: records
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: records
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: records
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: records
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
    data_selector: records
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
    data_selector: records
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
    data_selector: records
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
    data_selector: records
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
    data_selector: records
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
    data_selector: records
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
    data_selector: records
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
    data_selector: records
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
    data_selector: records
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
    data_selector: records
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
    data_selector: records
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
    data_selector: records
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
    data_selector: records
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
    data_selector: records
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
    data_selector: records
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
    data_selector: records
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
    data_selector: records
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
    data_selector: records
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
    data_selector: records
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
    data_selector: records
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
    data_selector: records
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
    data_selector: records
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
    data_selector: records
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
    data_selector: records
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
    data_selector: records
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
    data_selector: records
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
    data_selector: records
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
    data_selector: records
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
    data_selector: records
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
    data_selector: records
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
    data_selector: records
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
    data_selector: records
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: records
- name: incremental
  endpoint:
    path: /incremental
    method: GET
- name: custom_charsets
  endpoint:
    path: /custom_charsets
    method: GET
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: records
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
    data_selector: results
    params:
      host: 192.168.11.4
      user: FILE0
      password: FILE1
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: POST
    data_selector: results
    params: {}
- name: chisel_server
  endpoint:
    path: /server
    method: GET
    data_selector: responses
    params: {}
- name: chisel_client
  endpoint:
    path: /client
    method: POST
    data_selector: responses
    params: {}
- name: wordlist
  endpoint:
    path: /wordlist
    method: GET
    data_selector: records
    params: {}
- name: dns2tcpd
  endpoint:
    path: /dns2tcpd
    method: GET
    data_selector: resources
    params: {}
- name: dns2tcpc
  endpoint:
    path: /dns2tcpc
    method: GET
    data_selector: resources
    params: {}
- name: chisel_server
  endpoint:
    path: /server
    method: GET
- name: chisel_client
  endpoint:
    path: /client
    method: GET
- name: dns
  endpoint:
    path: /
    method: POST
    data_selector: dns_query
    params:
      type: 'NULL'
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: tunnel
  endpoint:
    path: /tunnel
    method: POST
    data_selector: tunnel_data
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: records
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: records
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: records
- name: ptunnel_client
  endpoint:
    path: /ptunnel/client
    method: POST
    data_selector: client_requests
    params: {}
- name: ptunnel_proxy
  endpoint:
    path: /ptunnel/proxy
    method: POST
    data_selector: proxy_requests
    params: {}
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: Network Tools
  endpoint:
    path: /network/tools
    method: GET
    data_selector: tools
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: traffic_capture
  endpoint:
    path: /traffic/capture
    method: POST
    data_selector: capture_results
    params:
      interface: eth0
      timer: 120
- name: scan
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: chaosreader_usage
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: usage
- name: Responder
  endpoint:
    path: /responder
    method: GET
    data_selector: records
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params: {}
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
    params: {}
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: help
    params: {}
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: help
    params: {}
- name: tcpflow
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
    params: {}
- name: capture_interface
  endpoint:
    path: /capture/interface
    method: GET
    data_selector: records
- name: capture_stop_conditions
  endpoint:
    path: /capture/stop_conditions
    method: GET
    data_selector: records
- name: capture_output
  endpoint:
    path: /capture/output
    method: GET
    data_selector: records
- name: input_file
  endpoint:
    path: /input/file
    method: GET
    data_selector: records
- name: processing
  endpoint:
    path: /processing
    method: GET
    data_selector: records
- name: output
  endpoint:
    path: /output
    method: GET
    data_selector: records
- name: diagnostic_output
  endpoint:
    path: /diagnostic/output
    method: GET
    data_selector: records
- name: miscellaneous
  endpoint:
    path: /miscellaneous
    method: GET
    data_selector: records
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: usage
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: usage
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: usage
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: usage
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: usage
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params:
      dst-ip: 5.6.7.8
      user: login
      password: password
- name: DNS Enumeration
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
    params: {}
- name: information
  endpoint:
    path: /information
    method: GET
    data_selector: data
    params: {}
- name: network_protocol
  endpoint:
    path: /network_protocol
    method: GET
    data_selector: data
    params: {}
- name: application_protocol
  endpoint:
    path: /application_protocol
    method: GET
    data_selector: data
    params: {}
- name: sniff
  endpoint:
    path: /sniff
    method: GET
    data_selector: data
    params: {}
- name: spoof
  endpoint:
    path: /spoof
    method: GET
    data_selector: data
    params: {}
- name: record
  endpoint:
    path: /record
    method: GET
    data_selector: data
    params: {}
- name: client
  endpoint:
    path: /client
    method: GET
    data_selector: data
    params: {}
- name: server
  endpoint:
    path: /server
    method: GET
    data_selector: data
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: data
    params: {}
- name: traceroute
  endpoint:
    path: /traceroute
    method: GET
    data_selector: data
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: data
    params: {}
- name: network_audit
  endpoint:
    path: /network_audit
    method: GET
    data_selector: data
    params: {}
- name: brute_force
  endpoint:
    path: /brute_force
    method: GET
    data_selector: data
    params: {}
- name: remote_administration
  endpoint:
    path: /remote_administration
    method: GET
    data_selector: data
    params: {}
- name: tools_not_related_to_network
  endpoint:
    path: /tools_not_related_to_network
    method: GET
    data_selector: data
    params: {}
- name: dns_records
  endpoint:
    path: /dnsenum/records
    method: GET
    data_selector: records
    params: {}
- name: list_shares
  endpoint:
    path: /smb/shares
    method: GET
    data_selector: shares
- name: dns_records
  endpoint:
    path: /services/data/vXX.X/sobjects/DNSRecords
    method: GET
    data_selector: records
    params: {}
- name: urlcrazy
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: results
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: records
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: records
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: crawl
  endpoint:
    path: /
    method: GET
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
- name: dnsenum_options
  endpoint:
    path: /dnsenum/options
    method: GET
    data_selector: options
    params: {}
- name: dnsgen_options
  endpoint:
    path: /dnsgen/options
    method: GET
    data_selector: options
    params: {}
- name: dnsrecon_options
  endpoint:
    path: /dnsrecon/options
    method: GET
    data_selector: options
    params: {}
- name: dnstracer_options
  endpoint:
    path: /dnstracer/options
    method: GET
    data_selector: options
    params: {}
- name: dnstwist_options
  endpoint:
    path: /dnstwist/options
    method: GET
    data_selector: options
    params: {}
- name: domain_scan
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: output
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: subdomains
  endpoint:
    path: /
    method: GET
    data_selector: subdomains
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
    params: {}
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois_info
    params: {}
- name: ssl_info
  endpoint:
    path: /ssl_info
    method: GET
    data_selector: ssl_certificate
    params: {}
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns_info
    params: {}
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomain_list
    params: {}
- name: directories
  endpoint:
    path: /directories
    method: GET
    data_selector: directory_list
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: port_scan_results
    params: {}
- name: image_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: ''
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: results
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: results
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: results
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
- name: http_response_headers
  endpoint:
    path: /
    method: GET
    data_selector: headers
    params: {}
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: GET
    data_selector: records
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: records
- name: Header Information
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: SSL Certificate Information
  endpoint:
    path: /sslinfo
    method: GET
    data_selector: sslInfo
- name: Whois Lookup
  endpoint:
    path: /whois
    method: GET
    data_selector: whoisInfo
- name: DNS Enumeration
  endpoint:
    path: /dns
    method: GET
    data_selector: dnsRecords
- name: Sub-Domain Enumeration
  endpoint:
    path: /sub
    method: GET
    data_selector: subDomains
- name: Directory Search
  endpoint:
    path: /dir
    method: GET
    data_selector: directories
- name: Fast Port Scan
  endpoint:
    path: /ps
    method: GET
    data_selector: portScan
- name: scan
  endpoint:
    path: /runscans
    method: GET
    data_selector: result
    params:
      categories: TEST_SCAN
- name: user_check
  endpoint:
    path: /user/check
    method: GET
    data_selector: results
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
- name: fuzzing_test
  endpoint:
    path: /FUZZ
    method: GET
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: results
- name: sql_injection
  endpoint:
    path: /sql/injection
    method: GET
    data_selector: results
- name: nikto_scan
  endpoint:
    path: /nikto/scan
    method: GET
    data_selector: results
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: records
    params: {}
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: POST
    data_selector: results
    params:
      mode: VRFY
      user_file: users.txt
      target_host: 192.168.11.4
      port: 25
- name: vulnerabilities
  endpoint:
    path: /dvwa/vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: 1*
- name: mp64
  endpoint:
    path: /mp64
    method: GET
- name: medusa
  endpoint:
    path: /medusa
    method: GET
- name: nth
  endpoint:
    path: /nth
    method: GET
- name: ncrack
  endpoint:
    path: /ncrack
    method: GET
- name: ffuf
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: wfuzz
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: hashes
  endpoint:
    path: /hashes
    method: POST
    data_selector: results
    params: {}
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: GET
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: GET
- name: proxy
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: proxytunnel_usage
  endpoint:
    path: /proxytunnel/usage
    method: GET
    data_selector: usage_examples
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: results
- name: service_scan
  endpoint:
    path: /service-scan
    method: GET
    data_selector: results
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
- name: wordlist_extraction
  endpoint:
    path: /wordlist/extract
    method: GET
    data_selector: records
    params:
      min_length: 8
      max_length: 12
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: network_protocols
  endpoint:
    path: /path/to/protocols
    method: GET
    data_selector: protocols
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: POST
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: POST
- name: capture_data
  endpoint:
    path: /capture
    method: GET
    data_selector: data
    params: {}
- name: trivy
  endpoint:
    path: /trivy
    method: GET
    data_selector: commands
    params: {}
- name: autopsy
  endpoint:
    path: /autopsy
    method: GET
    data_selector: commands
    params: {}
- name: dd_rescue
  endpoint:
    path: /dd_rescue
    method: GET
    data_selector: commands
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: packets
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: packets
    params: {}
- name: network_tools
  endpoint:
    path: /network/tools
    method: GET
    data_selector: tools
    params: {}
- name: targets
  endpoint:
    path: /
    method: GET
    data_selector: targets
- name: list_shares
  endpoint:
    path: /198
    method: GET
    data_selector: shares
    params: {}
- name: sysDescr
  endpoint:
    path: public@192.168.11.3-192.168.11.4:.1.3.6.1.2.1.1.1.0/sysDescr
    method: GET
    data_selector: records
    params: {}
- name: hrStorageAllocationUnits
  endpoint:
    path: public@192.168.11.3-192.168.11.4:.1.3.6.1.2.1.25.2.3.1.4.1/hrStorageAllocationUnits
    method: GET
    data_selector: records
    params: {}
- name: hrStorageSize
  endpoint:
    path: public@192.168.11.3-192.168.11.4:.1.3.6.1.2.1.25.2.3.1.5.1/hrStorageSize
    method: GET
    data_selector: records
    params: {}
- name: dns_enumeration
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: records
- name: alt_dns
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
- name: owasp_amass
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params: {}
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
    params: {}
- name: domain_scan
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: results
    params: {}
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: protocols
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: GET
    data_selector: packet_analysis
- name: urlcrazy_report
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: results
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: data
    params: {}
- name: authentication
  endpoint:
    path: /auth
    method: POST
    data_selector: response
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      status_codes: 404
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: 404
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: packet_capture
  endpoint:
    path: /capture
    method: GET
    data_selector: packets
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: capture_interface
  endpoint:
    path: /capture/interface
    method: GET
    data_selector: records
    params: {}
- name: capture_stop_conditions
  endpoint:
    path: /capture/stop_conditions
    method: GET
    data_selector: records
    params: {}
- name: capture_output
  endpoint:
    path: /capture/output
    method: GET
    data_selector: records
    params: {}
- name: screenshot
  endpoint:
    path: --web
    method: GET
    data_selector: report
    params:
      single: Single URL
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: subdomain
  endpoint:
    path: /subdomain
    method: GET
    data_selector: subdomains
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: records
- name: subdomain_scanning
  endpoint:
    path: /subdomain/scanning
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: domain
    params: {}
- name: logs
  endpoint:
    path: /logs/
    method: GET
    data_selector: logs
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
- name: subdomains
  endpoint:
    path: /
    method: GET
- name: pages
  endpoint:
    path: /
    method: GET
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: mx_check
  endpoint:
    path: /dns/mxcheck
    method: GET
    data_selector: results
- name: sql_injection
  endpoint:
    path: /sql/injection
    method: POST
    data_selector: results
- name: nikto_scan
  endpoint:
    path: /web/nikto
    method: GET
    data_selector: results
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: user_verification
  endpoint:
    path: /verify_user
    method: POST
    data_selector: results
    params:
      method: VRFY
      user_file: users.txt
      target: 192.168.11.4
      port: 25
      timeout: 5
- name: domains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
- name: brute_force
  endpoint:
    path: /brute_force
    method: GET
    data_selector: records
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /sslinfo
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: subdomains
  endpoint:
    path: /sub
    method: GET
    data_selector: subdomains
- name: directories
  endpoint:
    path: /dir
    method: GET
    data_selector: directories
- name: port_scan
  endpoint:
    path: /ps
    method: GET
    data_selector: port_scan
- name: hashcat
  endpoint:
    path: /hashcat
    method: GET
    data_selector: hashes
    params: {}
- name: maskprocessor
  endpoint:
    path: /mp64
    method: GET
    data_selector: usage
    params: {}
- name: password_analysis_toolkit
  endpoint:
    path: /usage/statsgen
    method: GET
    data_selector: options
    params: {}
- name: mask_generation_tool
  endpoint:
    path: /usage/maskgen
    method: GET
    data_selector: options
    params: {}
- name: policy_generation_tool
  endpoint:
    path: /usage/policygen
    method: GET
    data_selector: options
    params: {}
- name: rule_generation_tool
  endpoint:
    path: /usage/rulegen
    method: GET
    data_selector: options
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: vulnerabilities
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
    params: {}
- name: user_enumeration
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: results
    params:
      method: VRFY
      usernames_file: users.txt
      target_host: 192.168.11.4
      port: 25
      timeout: 5
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: payloads
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: server
  endpoint:
    path: /server
    method: GET
    data_selector: connections
    params: {}
- name: client
  endpoint:
    path: /client
    method: GET
    data_selector: tunnels
    params: {}
- name: hashid
  endpoint:
    path: /hashid
    method: GET
- name: server
  endpoint:
    path: /ligolo-proxy
    method: GET
- name: agent
  endpoint:
    path: /ligolo-agent
    method: GET
- name: maskprocessor
  endpoint:
    path: /mp64
    method: GET
- name: medusa
  endpoint:
    path: /medusa
    method: GET
- name: nth
  endpoint:
    path: /nth
    method: GET
- name: ncrack
  endpoint:
    path: /ncrack
    method: GET
- name: Network Tools
  endpoint:
    path: /network-tools
    method: GET
    data_selector: tools
    params: {}
- name: targets
  endpoint:
    path: targets
    method: GET
    data_selector: results
- name: plugins
  endpoint:
    path: plugins
    method: GET
    data_selector: results
- name: scan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: service_detection
  endpoint:
    path: /service_detection
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: injections
- name: tcp_packets
  endpoint:
    path: /
    method: GET
    data_selector: packets
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: records
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: records
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: records
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: records
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
    data_selector: records
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
    data_selector: records
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
    data_selector: records
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
    data_selector: records
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
    data_selector: records
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
    data_selector: records
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
    data_selector: records
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
    data_selector: records
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
    data_selector: records
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
    data_selector: records
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
    data_selector: records
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
    data_selector: records
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
    data_selector: records
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
    data_selector: records
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
    data_selector: records
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
    data_selector: records
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
    data_selector: records
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
    data_selector: records
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
    data_selector: records
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
    data_selector: records
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
    data_selector: records
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
    data_selector: records
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
    data_selector: records
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
    data_selector: records
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
    data_selector: records
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
    data_selector: records
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
    data_selector: records
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
    data_selector: records
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
    data_selector: records
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
    data_selector: records
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
    data_selector: records
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
    data_selector: records
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: records
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: records
    params: {}
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: records
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage_info
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: GET
    data_selector: options
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: GET
    data_selector: options
- name: list_shares
  endpoint:
    path: /SMB/CIFS/client/list/shares
    method: GET
    data_selector: shares
    params: {}
- name: example
  endpoint:
    path: /example/path
    method: GET
    data_selector: data
    params: {}
- name: altdns
  endpoint:
    path: altdns
    method: GET
    data_selector: ''
    params: {}
- name: amass_intel
  endpoint:
    path: amass/intel
    method: GET
    data_selector: ''
    params: {}
- name: amass_enum
  endpoint:
    path: amass/enum
    method: GET
    data_selector: ''
    params: {}
- name: assetfinder
  endpoint:
    path: assetfinder
    method: GET
    data_selector: ''
    params: {}
- name: dnsenum
  endpoint:
    path: dnsenum
    method: GET
    data_selector: ''
    params: {}
- name: server
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: client
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: ssf_client
  endpoint:
    path: /ssf/client
    method: GET
    data_selector: help
    params: {}
- name: ssf_server
  endpoint:
    path: /ssf/server
    method: GET
    data_selector: help
    params: {}
- name: domain_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: records
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: usage
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: directory_list
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params: {}
- name: gobuster
  endpoint:
    path: /dir
    method: GET
    data_selector: results
    params:
      url: http://192.168.11.4/includes/
      extensions: inc
      wordlist: words.txt
      threads: 10
      timeout: 10
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: ''
    params: {}
- name: site
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params: {}
- name: port_scan
  endpoint:
    path: /portscan
    method: GET
    data_selector: ports
    params:
      incremental: host
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool/audio
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool/document
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool/epub
    method: GET
    data_selector: metadata
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: darkstat
  endpoint:
    path: /darkstat
    method: GET
- name: dnschef
  endpoint:
    path: /dnschef
    method: GET
- name: ettercap
  endpoint:
    path: /ettercap
    method: GET
- name: usage
  endpoint:
    path: /help
    method: GET
- name: authentication
  endpoint:
    path: /auth
    method: POST
    data_selector: response
    params: {}
- name: subdomain_discovery
  endpoint:
    path: /subfinder
    method: GET
    data_selector: subdomains
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: packets
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: packets
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: packets
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: davtest_directory
  endpoint:
    path: /uploads/DavTestDir_vz1C_iC2AlPID
    method: MKCOL
    data_selector: SUCCEED
- name: list_shares
  endpoint:
    path: /smbclient/shares
    method: GET
    data_selector: shares
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params:
      input: subdomains.txt
      output: out.txt
      wordlist: words.txt
      resolve: true
      save: result.txt
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
    params:
      domain: digital.go.jp
      whois: true
      config: config.yaml
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: subdomains
    params:
      domain: digital.go.jp
      config: config.yaml
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: subdomains
    params:
      subs_only: true
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      max_processes: 5
      timeout: 5
- name: domain_search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: sql_injection_check
  endpoint:
    path: /dvwa/vulnerabilities/sqli/
    method: GET
    data_selector: records
    params:
      id: 1*
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: session
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: brute_force_services
  endpoint:
    path: /brutespray/services
    method: GET
    data_selector: services
    params: {}
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
- name: hash_analysis
  endpoint:
    path: /hashid
    method: POST
    data_selector: analysis
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: maskprocessor
  endpoint:
    path: /mp64
    method: GET
    data_selector: usage
- name: medusa
  endpoint:
    path: /medusa
    method: GET
    data_selector: usage
- name: nth
  endpoint:
    path: /nth
    method: GET
    data_selector: usage
- name: ncrack
  endpoint:
    path: /ncrack
    method: GET
    data_selector: usage
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: ncrack_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage
- name: password_analysis
  endpoint:
    path: /passwords
    method: GET
    data_selector: passwords
- name: headers
  endpoint:
    path: /headers
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
    data_selector: results
    params:
      host: 192.168.11.4
      user: FILE0
      password: FILE1
- name: wordlist
  endpoint:
    path: /wordlist
    method: POST
    data_selector: results
    params:
      min: 8
      max: 12
- name: dhcp_request
  endpoint:
    path: /dhcp/request
    method: GET
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
- name: socks
  endpoint:
    path: /socks
    method: GET
    data_selector: records
- name: reverse
  endpoint:
    path: /reverse
    method: GET
    data_selector: records
- name: server
  endpoint:
    path: /server/start
    method: POST
    data_selector: response
    params: {}
- name: client
  endpoint:
    path: /client/start
    method: POST
    data_selector: response
    params: {}
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: usernames
    params:
      user: user@example.com
      port: 25
- name: sql_injection
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: results
    params:
      id: '1'
- name: trivy
  endpoint:
    path: trivy
    method: GET
    data_selector: scanning_commands
    params: {}
- name: backdoor_script
  endpoint:
    path: /generate
    method: POST
    data_selector: script
    params:
      password: hello
      path: backdoor.php
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: hash_analysis
  endpoint:
    path: /hashid
    method: POST
    data_selector: results
- name: target
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: sniffing
  endpoint:
    path: /sniffing
    method: GET
    data_selector: protocols
    params: {}
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: GET
    data_selector: analysis
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: data
    params: {}
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: gui
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: ftp_login
  endpoint:
    path: /ftp/login
    method: POST
    data_selector: data
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh/login
    method: POST
    data_selector: data
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet/login
    method: POST
    data_selector: data
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp/login
    method: POST
    data_selector: data
    params: {}
- name: smtp_vrfy
  endpoint:
    path: /smtp/vrfy
    method: GET
    data_selector: data
    params: {}
- name: smtp_rcpt
  endpoint:
    path: /smtp/rcpt
    method: GET
    data_selector: data
    params: {}
- name: finger_lookup
  endpoint:
    path: /finger/lookup
    method: GET
    data_selector: data
    params: {}
- name: http_fuzz
  endpoint:
    path: /http/fuzz
    method: POST
    data_selector: data
    params: {}
- name: rdp_gateway
  endpoint:
    path: /rdp/gateway
    method: POST
    data_selector: data
    params: {}
- name: ajp_fuzz
  endpoint:
    path: /ajp/fuzz
    method: POST
    data_selector: data
    params: {}
- name: pop_login
  endpoint:
    path: /pop/login
    method: POST
    data_selector: data
    params: {}
- name: pop_passd
  endpoint:
    path: /pop/passd
    method: POST
    data_selector: data
    params: {}
- name: imap_login
  endpoint:
    path: /imap/login
    method: POST
    data_selector: data
    params: {}
- name: ldap_login
  endpoint:
    path: /ldap/login
    method: POST
    data_selector: data
    params: {}
- name: dcom_login
  endpoint:
    path: /dcom/login
    method: POST
    data_selector: data
    params: {}
- name: smb_login
  endpoint:
    path: /smb/login
    method: POST
    data_selector: data
    params: {}
- name: smb_lookupsid
  endpoint:
    path: /smb/lookupsid
    method: GET
    data_selector: data
    params: {}
- name: rlogin_login
  endpoint:
    path: /rlogin/login
    method: POST
    data_selector: data
    params: {}
- name: vmauthd_login
  endpoint:
    path: /vmauthd/login
    method: POST
    data_selector: data
    params: {}
- name: mssql_login
  endpoint:
    path: /mssql/login
    method: POST
    data_selector: data
    params: {}
- name: oracle_login
  endpoint:
    path: /oracle/login
    method: POST
    data_selector: data
    params: {}
- name: mysql_login
  endpoint:
    path: /mysql/login
    method: POST
    data_selector: data
    params: {}
- name: mysql_query
  endpoint:
    path: /mysql/query
    method: POST
    data_selector: data
    params: {}
- name: rdp_login
  endpoint:
    path: /rdp/login
    method: POST
    data_selector: data
    params: {}
- name: pgsql_login
  endpoint:
    path: /pgsql/login
    method: POST
    data_selector: data
    params: {}
- name: vnc_login
  endpoint:
    path: /vnc/login
    method: POST
    data_selector: data
    params: {}
- name: dns_forward
  endpoint:
    path: /dns/forward
    method: GET
    data_selector: data
    params: {}
- name: dns_reverse
  endpoint:
    path: /dns/reverse
    method: GET
    data_selector: data
    params: {}
- name: snmp_login
  endpoint:
    path: /snmp/login
    method: POST
    data_selector: data
    params: {}
- name: ike_enum
  endpoint:
    path: /ike/enum
    method: GET
    data_selector: data
    params: {}
- name: unzip_pass
  endpoint:
    path: /unzip/pass
    method: POST
    data_selector: data
    params: {}
- name: keystore_pass
  endpoint:
    path: /keystore/pass
    method: POST
    data_selector: data
    params: {}
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher/pass
    method: POST
    data_selector: data
    params: {}
- name: umbraco_crack
  endpoint:
    path: /umbraco/crack
    method: POST
    data_selector: data
    params: {}
- name: tcp_fuzz
  endpoint:
    path: /tcp/fuzz
    method: POST
    data_selector: data
    params: {}
- name: dummy_test
  endpoint:
    path: /dummy/test
    method: GET
    data_selector: data
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: records
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
- name: OWASP Amass
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
- name: chisel_server
  endpoint:
    path: /server
    method: GET
    data_selector: options
- name: chisel_client
  endpoint:
    path: /client
    method: GET
    data_selector: options
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: url_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: server
  endpoint:
    path: /server
    method: GET
- name: client
  endpoint:
    path: /client
    method: GET
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
- name: proxy_requests
  endpoint:
    path: /proxy/requests
    method: GET
    data_selector: requests
    params: {}
- name: tcp
  endpoint:
    path: /tcp
    method: GET
- name: icmp
  endpoint:
    path: /icmp
    method: GET
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      depth: 5
- name: cloud_service
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage_examples
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage_examples
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage_examples
    params: {}
- name: auto_recon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: url_collection
  endpoint:
    path: /urls
    method: GET
    data_selector: urls
- name: directory_scan
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params: {}
- name: subdomain_enumeration
  endpoint:
    path: /enumerate
    method: GET
    data_selector: subdomains
- name: masscan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: port_scan
  endpoint:
    path: /services/data/vX.X/port_scan
    method: GET
    data_selector: scan_results
    params:
      incremental: scan_time
- name: vulnerability_scan
  endpoint:
    path: /services/data/vX.X/vulnerability_scan
    method: GET
    data_selector: vuln_results
    params: {}
- name: davtest
  endpoint:
    path: /davdir
    method: GET
    data_selector: records
- name: dhcpig
  endpoint:
    path: /dhcp
    method: GET
    data_selector: records
- name: dotdotpwn
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: records
    params:
      page: TRAVERSAL
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: packet_capture
  endpoint:
    path: /packet/capture
    method: POST
    data_selector: capture_info
    params:
      timer: '120'
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: POST
    data_selector: results
    params: {}
- name: username_check
  endpoint:
    path: /smtp/user/check
    method: POST
    data_selector: results
    params:
      mode: VRFY
      usernames_file: users.txt
      target_host: 192.168.11.4
      port: 25
      timeout: 5
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /list_shares
    method: GET
    data_selector: shares
    params: {}
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: vulnerabilities
    params:
      id: 1*
- name: general_options
  endpoint:
    path: /options/general
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /options/google_scraping
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /options/brute_force
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /options/whois_netrange
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /options/reverse_lookup
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /options/output
    method: GET
    data_selector: options
    params: {}
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: BruteSpray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: commands
    params: {}
- name: CeWL
  endpoint:
    path: /cewl
    method: GET
    data_selector: commands
    params: {}
- name: changeme
  endpoint:
    path: /changeme
    method: GET
    data_selector: commands
    params: {}
- name: Crowbar
  endpoint:
    path: /crowbar
    method: GET
    data_selector: commands
    params: {}
- name: crunch
  endpoint:
    path: /crunch
    method: GET
    data_selector: commands
    params: {}
- name: hashID
  endpoint:
    path: /hashid
    method: GET
    data_selector: commands
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: results
- name: hydra
  endpoint:
    path: /hydra
    method: GET
    data_selector: results
- name: john
  endpoint:
    path: /john
    method: GET
    data_selector: results
- name: maskprocessor
  endpoint:
    path: /mp64
    method: GET
    data_selector: commands
    params: {}
- name: crawled_urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      incremental: page_id
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool/audio
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool/document
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool/epub
    method: GET
    data_selector: metadata
    params: {}
- name: hashes
  endpoint:
    path: hashes.txt
    method: GET
    data_selector: ''
    params: {}
- name: markov_numbers
  endpoint:
    path: markov-numbers.txt
    method: GET
    data_selector: ''
    params: {}
- name: urls
  endpoint:
    path: /getallurls
    method: GET
    data_selector: results
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: GET
    data_selector: options
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: GET
    data_selector: options
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: tcp_connection
  endpoint:
    path: /tcp
    method: GET
    data_selector: connections
- name: headers
  endpoint:
    path: /url/headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /url/whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /url/ssl
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /url/dns
    method: GET
    data_selector: dns
- name: subdomains
  endpoint:
    path: /url/subdomains
    method: GET
    data_selector: subdomains
- name: directory_search
  endpoint:
    path: /url/directory
    method: GET
    data_selector: directory
- name: port_scan
  endpoint:
    path: /url/portscan
    method: GET
    data_selector: port_scan
- name: Network Tools
  endpoint:
    path: /network/tools
    method: GET
    data_selector: tools
    params: {}
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: scanning_tools
    params: {}
- name: targets
  endpoint:
    path: /autorecon/targets
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /autorecon/reports
    method: GET
    data_selector: records
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
    params: {}
- name: scan
  endpoint:
    path: <ip addresses/ranges>
    method: POST
    data_selector: ''
    params:
      ports: <ports>
      options: ''
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: results
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: results
- name: service_detection
  endpoint:
    path: /service-detection
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vulnerability-scan
    method: GET
    data_selector: results
- name: supported_protocols
  endpoint:
    path: /supported_protocols
    method: GET
    data_selector: protocols
    params: {}
- name: sql_injection
  endpoint:
    path: /
    method: POST
    data_selector: results
    params:
      url: http://www.site.com/vuln.php?id=1
- name: capture_data
  endpoint:
    path: /capture
    method: GET
    data_selector: data
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
- name: brutespray_usage
  endpoint:
    path: /brutespray/help
    method: GET
    data_selector: usage
- name: hashcat
  endpoint:
    path: /hashcat
    method: GET
- name: hydra
  endpoint:
    path: /hydra
    method: GET
- name: john_the_ripper
  endpoint:
    path: /john_the_ripper
    method: GET
- name: ftest
  endpoint:
    path: ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: firewall_builder
  endpoint:
    path: fwbuilder
    method: GET
    data_selector: usage
    params: {}
- name: bettercap
  endpoint:
    path: bettercap
    method: GET
    data_selector: usage
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: logs
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: password_analysis
  endpoint:
    path: /statsgen
    method: GET
    data_selector: masks
    params: {}
- name: mask_generation
  endpoint:
    path: /maskgen
    method: GET
    data_selector: masks
    params: {}
- name: policy_generation
  endpoint:
    path: /policygen
    method: GET
    data_selector: masks
    params: {}
- name: rule_generation
  endpoint:
    path: /rulegen
    method: GET
    data_selector: rules
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /dns-enumeration
    method: GET
    data_selector: results
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: domain_scan
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
    params: {}
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: fuzz
  endpoint:
    path: /?q=FUZZ
    method: GET
    params:
      excluded_status_codes: 404
- name: dir
  endpoint:
    path: /includes/
    method: GET
    params:
      extensions: inc
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: ''
    params: {}
- name: scan
  endpoint:
    path: /scan/single
    method: GET
    data_selector: results
    params: {}
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: records
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: records
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: records
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: records
    params: {}
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
    data_selector: records
    params: {}
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
    data_selector: records
    params: {}
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
    data_selector: records
    params: {}
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
    data_selector: records
    params: {}
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
    data_selector: records
    params: {}
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
    data_selector: records
    params: {}
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
    data_selector: records
    params: {}
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
    data_selector: records
    params: {}
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
    data_selector: records
    params: {}
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
    data_selector: records
    params: {}
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
    data_selector: records
    params: {}
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
    data_selector: records
    params: {}
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
    data_selector: records
    params: {}
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
    data_selector: records
    params: {}
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
    data_selector: records
    params: {}
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
    data_selector: records
    params: {}
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
    data_selector: records
    params: {}
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
    data_selector: records
    params: {}
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
    data_selector: records
    params: {}
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
    data_selector: records
    params: {}
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
    data_selector: records
    params: {}
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
    data_selector: records
    params: {}
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
    data_selector: records
    params: {}
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
    data_selector: records
    params: {}
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
    data_selector: records
    params: {}
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
    data_selector: records
    params: {}
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
    data_selector: records
    params: {}
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
    data_selector: records
    params: {}
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
    data_selector: records
    params: {}
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
    data_selector: records
    params: {}
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
    data_selector: records
    params: {}
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
    data_selector: records
    params: {}
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: records
    params: {}
- name: smtp_user_enum
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: sql_injection_tests
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: payloads
    params:
      id: '1'
- name: weevely_usage
  endpoint:
    path: /man/weevely
    method: GET
    data_selector: commands
- name: whatweb_usage
  endpoint:
    path: /man/whatweb
    method: GET
    data_selector: usage
- name: wpscan_usage
  endpoint:
    path: /man/wpscan
    method: GET
    data_selector: usage
- name: bed_usage
  endpoint:
    path: /man/bed
    method: GET
    data_selector: usage
- name: doona_usage
  endpoint:
    path: /man/doona
    method: GET
    data_selector: usage
- name: dns
  endpoint:
    path: /iodined
    method: GET
    data_selector: requests
    params: {}
- name: proxify_logs
  endpoint:
    path: /proxify_logs
    method: GET
    data_selector: logs
- name: fuzz
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: bruteforcing_and_credential_stuffing
  endpoint:
    path: /brutespray
    method: GET
- name: cewl
  endpoint:
    path: /cewl
    method: GET
- name: changeme
  endpoint:
    path: /changeme
    method: GET
- name: crowbar
  endpoint:
    path: /crowbar
    method: GET
- name: crunch
  endpoint:
    path: /crunch
    method: GET
- name: hashid
  endpoint:
    path: /hashid
    method: GET
- name: hashid
  endpoint:
    path: /hashid
    method: GET
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: hosts
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
    params: {}
- name: maskprocessor
  endpoint:
    path: /mp64
    method: GET
    data_selector: results
- name: medusa
  endpoint:
    path: /medusa
    method: GET
    data_selector: results
- name: nth
  endpoint:
    path: /nth
    method: GET
    data_selector: results
- name: ncrack
  endpoint:
    path: /ncrack
    method: GET
    data_selector: results
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: masscan
  endpoint:
    path: /
    method: GET
    data_selector: masscan
    params: {}
- name: hashes
  endpoint:
    path: /hashes
    method: POST
    data_selector: results
- name: wordlists
  endpoint:
    path: /wordlists
    method: GET
    data_selector: lists
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: ports
    params: {}
- name: service_detection
  endpoint:
    path: /service-detection
    method: GET
    data_selector: services
    params: {}
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: POST
    data_selector: response
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: POST
    data_selector: response
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
- name: server
  endpoint:
    path: /server/start
    method: POST
    data_selector: response
    params:
      password: hello
      tunnel_ip: 10.0.0.1
      topdomain: example.com
- name: client
  endpoint:
    path: /client/start
    method: POST
    data_selector: response
    params:
      connect: 192.168.11.4
      topdomain: example.com
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: packets
    params: {}
- name: packet_injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: response
    params: {}
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: tools
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: tools
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
    params: {}
- name: masscan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: options
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: options
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: session_files
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
    params: {}
- name: html_reports
  endpoint:
    path: /reports/html
    method: GET
    data_selector: reports
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: GET
    data_selector: records
- name: DNS Enumeration
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
- name: SSLv3/TLS
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
    params: {}
- name: urlcrazy_usage
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: gobuster_dir
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      negative_status_codes: '404'
- name: gobuster_fuzz
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: configuration_options
  endpoint:
    path: /configuration
    method: GET
    data_selector: options
    params:
      options:
      - -f <conf_file>
      - -c <source_ip>:<source_port>:<dest_ip>:<dest_port>:<flags>:<protocol>:<tos>
      - -v <verbose>
- name: timing_options
  endpoint:
    path: /timing
    method: GET
    data_selector: timing
    params:
      options:
      - -d <delay, 0.25 = 250 ms>
      - -s <sleep time, 1 = 1 s>
- name: evasion_options
  endpoint:
    path: /evasion
    method: GET
    data_selector: evasion
    params:
      options:
      - -e <evasion method>
      - -t <ids_ttl>
- name: connection_options
  endpoint:
    path: /connection
    method: GET
    data_selector: connection
    params:
      options:
      - -r <reset connection>
      - -F <end connection>
      - -g <IP fragments number, es. 4|IP fragments size, es. 16b>
      - -p <TCP segments number, es. 4|TCP segments size, es 6b>
      - -k <cksum value, es. 60000>
      - -m <marker>
- name: image_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: commands
    params: {}
- name: cryptcat_usage
  endpoint:
    path: /cryptcat/usage
    method: GET
    data_selector: commands
    params: {}
- name: dbd_usage
  endpoint:
    path: /dbd/usage
    method: GET
    data_selector: commands
    params: {}
- name: ncat_usage
  endpoint:
    path: /ncat/usage
    method: GET
    data_selector: commands
    params: {}
- name: netwox_usage
  endpoint:
    path: /netwox/usage
    method: GET
    data_selector: commands
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: report
  endpoint:
    path: /report
    method: GET
- name: list_shares
  endpoint:
    path: /SMB/CIFS/client/list_shares
    method: GET
    data_selector: shares
    params:
      ip: 5.6.7.8
      user: login
      password: password
      netbiosname: netbiosname
      device: Eth0
      src_eth: 0:2:3:4:5:6
      dst_eth: 0:8:9:a:b:c
      src_ip: 192.168.11.3
      src_port: '0'
      dst_port: '139'
      ip4opts: ip4opts
      ip6exts: ip6exts
      authversion: '2'
      timeout: '60000'
      verbose: 'true'
      debug: 'true'
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
- name: owasp_amass
  endpoint:
    path: /amass
    method: GET
    data_selector: results
- name: headers
  endpoint:
    path: /headers
    method: GET
- name: whois
  endpoint:
    path: /whois
    method: GET
- name: ssl_info
  endpoint:
    path: /sslinfo
    method: GET
- name: dns
  endpoint:
    path: /dns
    method: GET
- name: subdomains
  endpoint:
    path: /sub
    method: GET
- name: directory_search
  endpoint:
    path: /dir
    method: GET
- name: port_scan
  endpoint:
    path: /ps
    method: GET
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      domain: DOMAIN
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
    params:
      page: ../../../../../etc/passwd
- name: directory_listing
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      negative_status_codes: '404'
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: GET
    data_selector: results
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
    params: {}
- name: subdomains
  endpoint:
    path: /
    method: GET
    data_selector: subdomains
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: amazon_checks
  endpoint:
    path: /cloud_enum/amazon_checks
    method: GET
- name: google_checks
  endpoint:
    path: /cloud_enum/google_checks
    method: GET
- name: microsoft_checks
  endpoint:
    path: /cloud_enum/microsoft_checks
    method: GET
- name: metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: fuzz_tests
  endpoint:
    path: /FUZZ
    method: GET
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: results
    params: {}
- name: cewl
  endpoint:
    path: /cewl
    method: GET
    data_selector: results
    params: {}
- name: changeme
  endpoint:
    path: /changeme
    method: GET
    data_selector: results
    params: {}
- name: crowbar
  endpoint:
    path: /crowbar
    method: GET
    data_selector: results
    params: {}
- name: crunch
  endpoint:
    path: /crunch
    method: GET
    data_selector: results
    params: {}
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: results
    params: {}
- name: hash_analysis
  endpoint:
    path: /hashid/analyze
    method: POST
    data_selector: results
    params: {}
- name: mask
  endpoint:
    path: /
    method: GET
- name: davtest_operations
  endpoint:
    path: /davtest
    method: PUT
    data_selector: response
    params:
      uploadfile: file
      uploadloc: relative/location
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
    params: {}
- name: password_analysis
  endpoint:
    path: /passwords
    method: POST
    data_selector: results
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      user: user@example.com
      port: 25
- name: pg_sql_login
  endpoint:
    path: /pgsql_login
    method: GET
    data_selector: records
    params: {}
- name: pdfcrack
  endpoint:
    path: /pdfcrack
    method: GET
    data_selector: records
    params: {}
- name: pipal
  endpoint:
    path: /pipal
    method: GET
    data_selector: records
    params: {}
- name: princeprocessor
  endpoint:
    path: /princeprocessor
    method: GET
    data_selector: records
    params: {}
- name: rling
  endpoint:
    path: /rling
    method: GET
    data_selector: records
    params: {}
- name: rsmangler
  endpoint:
    path: /rsmangler
    method: GET
    data_selector: records
    params: {}
- name: statsprocessor
  endpoint:
    path: /statsprocessor
    method: GET
    data_selector: records
    params: {}
- name: injection_test
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: records
- name: ssdp_device_desc
  endpoint:
    path: /ssdp/device-desc.xml
    method: GET
    data_selector: device descriptor
- name: ssdp_service_desc
  endpoint:
    path: /ssdp/service-desc.xml
    method: GET
    data_selector: service descriptor
- name: ssdp_phishing_page
  endpoint:
    path: /ssdp/present.html
    method: GET
    data_selector: phishing page
- name: backdoor_script
  endpoint:
    path: /generate
    method: POST
    data_selector: generated_script
    params:
      password: hello
      path: backdoor.php
- name: execute_command
  endpoint:
    path: /shell_sh
    method: POST
    data_selector: command_output
    params:
      command: cat /etc/passwd
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params:
      timeout: 10
      threads: 40
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: POST
    data_selector: server_response
    params: {}
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: POST
    data_selector: client_response
    params: {}
- name: supported_services
  endpoint:
    path: /brutespray/services
    method: GET
- name: server
  endpoint:
    path: /ligolo-proxy
    method: GET
- name: agent
  endpoint:
    path: /ligolo-agent
    method: GET
- name: hash_analysis
  endpoint:
    path: /analyze
    method: POST
    data_selector: analysis_results
- name: brute_force
  endpoint:
    path: /modules/brute_force
    method: GET
    data_selector: modules
    params: {}
- name: proxify_logs
  endpoint:
    path: /output
    method: GET
    data_selector: logs
- name: products
  endpoint:
    path: /products
    method: POST
    data_selector: response
    params: {}
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: tools
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: tools
    params: {}
- name: usage
  endpoint:
    path: /autorecon/help
    method: GET
    data_selector: usage
    params: {}
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params: {}
- name: vuln_scan
  endpoint:
    path: /vuln_scan
    method: GET
    data_selector: results
    params: {}
- name: protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
    data_selector: results
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
    data_selector: results
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
    data_selector: results
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: POST
    data_selector: results
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: POST
    data_selector: results
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: POST
    data_selector: results
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: POST
    data_selector: results
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: POST
    data_selector: results
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: POST
    data_selector: results
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: POST
    data_selector: results
- name: pop_login
  endpoint:
    path: /pop_login
    method: POST
    data_selector: results
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: POST
    data_selector: results
- name: imap_login
  endpoint:
    path: /imap_login
    method: POST
    data_selector: results
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: POST
    data_selector: results
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: POST
    data_selector: results
- name: smb_login
  endpoint:
    path: /smb_login
    method: POST
    data_selector: results
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: POST
    data_selector: results
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: POST
    data_selector: results
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: POST
    data_selector: results
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: POST
    data_selector: results
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: POST
    data_selector: results
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: POST
    data_selector: results
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: POST
    data_selector: results
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: POST
    data_selector: results
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: POST
    data_selector: results
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: POST
    data_selector: results
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: POST
    data_selector: results
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: POST
    data_selector: results
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: POST
    data_selector: results
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: POST
    data_selector: results
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: POST
    data_selector: results
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: POST
    data_selector: results
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: POST
    data_selector: results
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: POST
    data_selector: results
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: POST
    data_selector: results
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: POST
    data_selector: results
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: records
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
    params: {}
- name: ligolo-ng
  endpoint:
    path: /ligolo-ng
    method: GET
    data_selector: data
- name: hamster
  endpoint:
    path: /hamster
    method: GET
    data_selector: data
- name: mitmproxy
  endpoint:
    path: /mitmproxy
    method: GET
    data_selector: data
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: TCP4-LISTEN
  endpoint:
    path: /TCP4-LISTEN
    method: GET
    data_selector: records
    params: {}
- name: TCP4-CONNECT
  endpoint:
    path: /TCP4-CONNECT
    method: GET
    data_selector: records
    params: {}
- name: EXEC
  endpoint:
    path: /EXEC
    method: GET
    data_selector: records
    params: {}
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: Network Tools
  endpoint:
    path: /network-tools
    method: GET
    data_selector: tools
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: domain
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: records
- name: port_scan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: logs
  endpoint:
    path: /logs
    method: GET
    data_selector: logs
    params: {}
- name: crawled_urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: port_scan
  endpoint:
    path: /-A
    method: GET
    data_selector: services
    params: {}
- name: ack_scan
  endpoint:
    path: /-sA
    method: GET
    data_selector: services
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /--script=vuln
    method: GET
    data_selector: services
    params: {}
- name: amazon_checks
  endpoint:
    path: /cloud_enum/amazon_checks
    method: GET
    data_selector: results
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: options
    params: {}
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: options
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
- name: image_metadata
  endpoint:
    path: example.jpg
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: example.mp3
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: example.docx
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: example.epub
    method: GET
    data_selector: metadata
    params: {}
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: POST
    data_selector: results
- name: packet_injection
  endpoint:
    path: /inject
    method: POST
    data_selector: results
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: reports
- name: http_request
  endpoint:
    path: /
    method: GET
    data_selector: payload
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: ftest
  endpoint:
    path: /ftest
    method: GET
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
- name: bettercap
  endpoint:
    path: /
    method: GET
    data_selector: commands
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: commands
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: commands
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: commands
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: commands
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
    params: {}
- name: smtp_check
  endpoint:
    path: /smtp/check
    method: GET
    data_selector: results
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: response
    params: {}
- name: IPID_count
  endpoint:
    path: /IPID_count
    method: GET
    data_selector: records
    params: {}
- name: arp_mitm
  endpoint:
    path: /arp_mitm
    method: GET
    data_selector: records
    params: {}
- name: arpcachepoison
  endpoint:
    path: /arpcachepoison
    method: GET
    data_selector: records
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: records
    params: {}
- name: defrag
  endpoint:
    path: /defrag
    method: GET
    data_selector: records
    params: {}
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: session
    params: {}
- name: domain_scan
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
    params:
      domain: domain
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
      negative_status_codes: 404
- name: fuzzing
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      query: FUZZ
      wordlist: words.txt
      exclude_status_codes: 404
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: ftp_login
  endpoint:
    path: /ftp/login
    method: POST
    data_selector: response.data
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh/login
    method: POST
    data_selector: response.data
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet/login
    method: POST
    data_selector: response.data
    params: {}
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: ''
    params: {}
- name: subdomain
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: server
  endpoint:
    path: /server
    method: OPTIONS
    data_selector: options
- name: client
  endpoint:
    path: /client
    method: OPTIONS
    data_selector: options
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /sslinfo
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: sub
  endpoint:
    path: /sub
    method: GET
    data_selector: subdomains
- name: dir
  endpoint:
    path: /dir
    method: GET
    data_selector: directories
- name: server
  endpoint:
    path: /ligolo-proxy
    method: GET
    data_selector: none
    params: {}
- name: agent
  endpoint:
    path: /ligolo-agent
    method: GET
    data_selector: none
    params: {}
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: scan_results
  endpoint:
    path: /api/v1/scan/results
    method: GET
    data_selector: results
- name: redsocks
  endpoint:
    path: /redsocks
    method: GET
    data_selector: data
    params: {}
- name: payload
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: response
    params:
      page: TRAVERSAL
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
    params: {}
- name: TCP4_LISTEN
  endpoint:
    path: /TCP4-LISTEN:80,fork
    method: GET
    data_selector: records
- name: TCP4_CONNECT
  endpoint:
    path: /TCP4-CONNECT:example.com:80
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /products
    method: POST
    data_selector: response
    params: {}
- name: sshd
  endpoint:
    path: /stunnel.conf
    method: GET
    data_selector: config
    params: {}
- name: ssh
  endpoint:
    path: /stunnel.conf
    method: GET
    data_selector: config
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
    params:
      timeout: 10
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
    params: {}
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: tools
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: tools
    params: {}
- name: user_verification
  endpoint:
    path: /
    method: VRFY
    data_selector: response
    params:
      target: 192.168.11.4
      port: 25
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: scans
    params: {}
- name: service_scan
  endpoint:
    path: /service_scan
    method: GET
    data_selector: services
    params: {}
- name: injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: payload
    params:
      id: 1*
- name: directory_listing
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params: {}
- name: credential_bruteforcing
  endpoint:
    path: /auth/area
    method: GET
    data_selector: results
    params: {}
- name: fuzz_cases
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
- name: supported_services
  endpoint:
    path: /api/services
    method: GET
    data_selector: services
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: results
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: protocols
    params: {}
- name: bruteshark
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: analysis
    params: {}
- name: capture_interface
  endpoint:
    path: /capture/interface
    method: GET
- name: capture_stop_conditions
  endpoint:
    path: /capture/stop_conditions
    method: GET
- name: capture_output
  endpoint:
    path: /capture/output
    method: GET
- name: input_file
  endpoint:
    path: /input/file
    method: GET
- name: processing
  endpoint:
    path: /processing
    method: GET
- name: output
  endpoint:
    path: /output
    method: GET
- name: diagnostic_output
  endpoint:
    path: /diagnostic/output
    method: GET
- name: miscellaneous
  endpoint:
    path: /miscellaneous
    method: GET
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
- name: wordlist
  endpoint:
    path: wordlistraider
    method: GET
    data_selector: ''
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: GET
    data_selector: server_options
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: GET
    data_selector: client_options
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: server
  endpoint:
    path: /ligolo-proxy
    method: GET
- name: agent
  endpoint:
    path: /ligolo-agent
    method: GET
- name: dns_records
  endpoint:
    path: DOMAIN
    method: GET
    data_selector: records
- name: redsocks_server
  endpoint:
    path: /redsocks
    method: POST
    data_selector: response
    params: {}
- name: products
  endpoint:
    path: /products
    method: POST
    data_selector: ''
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: target
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
    params: {}
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: ''
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: ''
    params: {}
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: ''
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: data
    params: {}
- name: capture_data
  endpoint:
    path: /api/capture
    method: GET
    data_selector: records
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
    params:
      domain: qiita.com
- name: packet_sniffing
  endpoint:
    path: /api/v1/packet_sniffing
    method: GET
    data_selector: packets
    params: {}
- name: packet_injection
  endpoint:
    path: /api/v1/packet_injection
    method: POST
    data_selector: result
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: vulnerabilities
    params:
      page: ../../../../../etc/passwd
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
- name: DNS Enumeration
  endpoint:
    path: /dns-enumeration
    method: GET
    data_selector: results
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: results
- name: jsql_injection
  endpoint:
    path: /jsql/injection
    method: POST
    data_selector: results
- name: nikto
  endpoint:
    path: /nikto
    method: GET
    data_selector: results
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: user_enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: GET
    data_selector: results
    params: {}
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: sql_injection
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: records
    params:
      id: '1'
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: backdoor_script
  endpoint:
    path: /generate
    method: POST
    data_selector: generated_script
    params:
      password: hello
      path: backdoor.php
- name: brute_force
  endpoint:
    path: /brutespray
    method: GET
    data_selector: results
    params: {}
- name: hash_analysis
  endpoint:
    path: /hashid
    method: GET
    data_selector: results
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: maskprocessor
  endpoint:
    path: /mp64
    method: GET
- name: subdomains
  endpoint:
    path: /
    method: GET
    data_selector: '[subdomains]'
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: '[url]'
- name: cloud_services
  endpoint:
    path: /cloud_services
    method: GET
    data_selector: services
- name: image_metadata
  endpoint:
    path: /exiftool/image
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool/audio
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool/document
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool/epub
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: ''
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: ''
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: ''
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: ''
    params: {}
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
    data_selector: ''
    params: {}
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
    data_selector: ''
    params: {}
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
    data_selector: ''
    params: {}
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
    data_selector: ''
    params: {}
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
    data_selector: ''
    params: {}
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
    data_selector: ''
    params: {}
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
    data_selector: ''
    params: {}
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
    data_selector: ''
    params: {}
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
    data_selector: ''
    params: {}
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
    data_selector: ''
    params: {}
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
    data_selector: ''
    params: {}
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
    data_selector: ''
    params: {}
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
    data_selector: ''
    params: {}
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
    data_selector: ''
    params: {}
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
    data_selector: ''
    params: {}
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
    data_selector: ''
    params: {}
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
    data_selector: ''
    params: {}
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
    data_selector: ''
    params: {}
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
    data_selector: ''
    params: {}
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
    data_selector: ''
    params: {}
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
    data_selector: ''
    params: {}
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
    data_selector: ''
    params: {}
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
    data_selector: ''
    params: {}
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
    data_selector: ''
    params: {}
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
    data_selector: ''
    params: {}
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
    data_selector: ''
    params: {}
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
    data_selector: ''
    params: {}
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
    data_selector: ''
    params: {}
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
    data_selector: ''
    params: {}
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
    data_selector: ''
    params: {}
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
    data_selector: ''
    params: {}
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
    data_selector: ''
    params: {}
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: hashes
    params: {}
- name: chisel_server
  endpoint:
    path: /server
    method: GET
    data_selector: options
    params: {}
- name: chisel_client
  endpoint:
    path: /client
    method: GET
    data_selector: options
    params: {}
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: results
- name: sql_injection
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: records
    params:
      id: '1'
- name: server
  endpoint:
    path: /start
    method: POST
    data_selector: response
    params:
      password: hello
      tunnel_ip: 10.0.0.1
      topdomain: example.com
- name: client
  endpoint:
    path: /connect
    method: POST
    data_selector: response
    params:
      connect: 192.168.11.4
      topdomain: example.com
- name: http_fuzzing
  endpoint:
    path: /FUZZ
    method: GET
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: results
    params: {}
- name: redsocks
  endpoint:
    path: /redsocks
    method: GET
    data_selector: data
    params: {}
- name: hash
  endpoint:
    path: /hashcat
    method: GET
    data_selector: hashes
- name: sslsplit
  endpoint:
    path: /sslsplit
    method: GET
    data_selector: connections
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: records
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: records
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: records
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: records
    params: {}
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: filesystem
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: image
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: kubernetes
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: repository
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: rootfs
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: sbom
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: vm
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: ''
    params: {}
- name: server
  endpoint:
    path: /server
    method: OPTIONS
- name: client
  endpoint:
    path: /client
    method: OPTIONS
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: server
  endpoint:
    path: /server/start
    method: POST
- name: client
  endpoint:
    path: /client/start
    method: POST
- name: tunnel
  endpoint:
    path: /tunnel/start
    method: POST
- name: tcp_connection
  endpoint:
    path: /tcp
    method: GET
    data_selector: connections
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: products
  endpoint:
    path: /products
    method: POST
    data_selector: response
    params: {}
- name: session_files
  endpoint:
    path: /chaosreader/session
    method: GET
    data_selector: session_files
- name: amap
  endpoint:
    path: /amap
    method: GET
    data_selector: records
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: records
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: records
    params: {}
- name: packet_sniffing
  endpoint:
    path: /sniffing
    method: GET
    data_selector: records
    params: {}
- name: packet_injection
  endpoint:
    path: /injection
    method: POST
    data_selector: records
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: config
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: config
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: gui
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: network_toolkit
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params: {}
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
    params: {}
- name: cryptcat
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: dbd
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ncat
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: netwox
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: snmp_packet
  endpoint:
    path: /snmp
    method: GET
    data_selector: packets
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
    params: {}
- name: ntlm_auth
  endpoint:
    path: /ntlm_auth
    method: POST
    data_selector: auth_data
- name: http_auth
  endpoint:
    path: /http_auth
    method: POST
    data_selector: auth_data
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
    params: {}
- name: ssldump
  endpoint:
    path: /ssldump
    method: GET
    data_selector: records
    params: {}
- name: domain_report
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: report
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: usage
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: usage
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: usage
    params: {}
- name: logs
  endpoint:
    path: /logs/
    method: GET
    data_selector: results
    params: {}
- name: crawl_results
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: File Metadata
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: results
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: usage
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: usage
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: usage
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: usage
    params: {}
- name: subdomains
  endpoint:
    path: /find
    method: GET
    data_selector: subdomains
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params:
      dst-ip: 5.6.7.8
      user: login
      password: password
      netbiosname: netbiosname
      device: Eth0
      src-ip: 192.168.11.3
      dst-port: '139'
- name: headers
  endpoint:
    path: /finalrecon/headers
    method: GET
    data_selector: headers
    params: {}
- name: whois
  endpoint:
    path: /finalrecon/whois
    method: GET
    data_selector: whois
    params: {}
- name: ssl_info
  endpoint:
    path: /finalrecon/sslinfo
    method: GET
    data_selector: ssl_info
    params: {}
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: records
- name: arp_mitm
  endpoint:
    path: /arp/mitm
    method: GET
    data_selector: records
- name: tcp_scan
  endpoint:
    path: /tcp/scan
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: results
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: results
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: results
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: response
    params: {}
- name: fuzz
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status: '404'
- name: dir
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
    params:
      timeout: 10
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      depth: 5
- name: amazon_checks
  endpoint:
    path: /cloud_enum/amazon_checks
    method: GET
    data_selector: records
    params: {}
- name: google_checks
  endpoint:
    path: /cloud_enum/google_checks
    method: GET
    data_selector: records
    params: {}
- name: microsoft_checks
  endpoint:
    path: /cloud_enum/microsoft_checks
    method: GET
    data_selector: records
    params: {}
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      usernames_file: users.txt
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: sql_injection_check
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: results
    params:
      id: '1'
- name: subdomain
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: brute_force_services
  endpoint:
    path: /services/brute_force
    method: GET
    data_selector: services
    params: {}
- name: hash_analysis
  endpoint:
    path: /hashid
    method: GET
    data_selector: analyze
- name: mask
  endpoint:
    path: /mask
    method: GET
    data_selector: records
- name: davtest
  endpoint:
    path: /davdir
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcp
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: records
    params:
      page: TRAVERSAL
- name: ident_service
  endpoint:
    path: /ident/user/enum
    method: GET
    data_selector: response
    params: {}
- name: pgSQL_login
  endpoint:
    path: /pgsql_login
    method: POST
    data_selector: results
    params:
      host: 192.168.11.4
      user: FILE0
      password: FILE1
- name: pdfcrack
  endpoint:
    path: /pdfcrack
    method: POST
    data_selector: results
    params:
      filename: sample.pdf
      wordlist: passwords.txt
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: smtp_check
  endpoint:
    path: /smtp/check
    method: GET
    data_selector: results
- name: wordlistraider
  endpoint:
    path: /wordlistraider
    method: POST
    data_selector: results
    params:
      min: 8
      max: 12
      numbers: false
      specialcharacters: false
- name: user_check
  endpoint:
    path: /
    method: VRFY
    data_selector: user
    params:
      user: user@example.com
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: GET
    data_selector: options
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: GET
    data_selector: options
- name: sql_injection
  endpoint:
    path: /dvwa/vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: 1*
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
- name: gs-netcat
  endpoint:
    path: /gs-netcat
    method: GET
- name: server
  endpoint:
    path: /server
    method: GET
    data_selector: none
    params: {}
- name: client
  endpoint:
    path: /client
    method: GET
    data_selector: none
    params: {}
- name: fuzzing_test
  endpoint:
    path: /FUZZ
    method: GET
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: service
- name: cewl
  endpoint:
    path: /cewl
    method: GET
    data_selector: wordlist
- name: changeme
  endpoint:
    path: /changeme
    method: GET
    data_selector: default_credentials
- name: crowbar
  endpoint:
    path: /crowbar
    method: GET
    data_selector: brute_force_attempts
- name: crunch
  endpoint:
    path: /crunch
    method: GET
    data_selector: wordlist
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: hash_type
- name: TCP4-LISTEN
  endpoint:
    path: /socat/TCP4-LISTEN
    method: GET
- name: TCP4-CONNECT
  endpoint:
    path: /socat/TCP4-CONNECT
    method: GET
- name: dnscat_server
  endpoint:
    path: /dnscat2-server
    method: HELP
    data_selector: none
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: HELP
    data_selector: none
    params: {}
- name: hash_analysis
  endpoint:
    path: /hashid
    method: GET
    data_selector: hash_analysis_results
    params: {}
- name: wordlist_generator
  endpoint:
    path: /mp64
    method: GET
    data_selector: usage
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: hosts
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
- name: password_analysis
  endpoint:
    path: /statsgen
    method: GET
    data_selector: results
- name: mask_generation
  endpoint:
    path: /maskgen
    method: GET
    data_selector: results
- name: policy_generation
  endpoint:
    path: /policygen
    method: GET
    data_selector: results
- name: rule_generation
  endpoint:
    path: /rulegen
    method: GET
    data_selector: results
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: targets
    params: {}
- name: wordlist_extraction
  endpoint:
    path: /wordlistraider
    method: POST
    data_selector: results
    params:
      min: 8
      max: 12
      numbers: false
- name: server
  endpoint:
    path: /chisel/server
    method: POST
    data_selector: server_details
    params: {}
- name: client
  endpoint:
    path: /chisel/client
    method: POST
    data_selector: client_details
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params:
      scan_type: port
      options: -A -T4
- name: ack_scan
  endpoint:
    path: /ack_scan
    method: GET
    data_selector: results
    params:
      scan_type: ack
      top_ports: 10
- name: vuln_scan
  endpoint:
    path: /vuln_scan
    method: GET
    data_selector: results
    params:
      script: vuln
- name: smb_map
  endpoint:
    path: /smb_map
    method: GET
    data_selector: results
    params: {}
- name: snmp_check
  endpoint:
    path: /snmp_check
    method: GET
    data_selector: results
    params:
      port: 161
      community: public
      version: 1
- name: t50
  endpoint:
    path: /t50
    method: GET
    data_selector: results
    params:
      threshold: 1000
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
    data_selector: resources
    params: {}
- name: gs-netcat
  endpoint:
    path: /gs-netcat
    method: GET
    data_selector: resources
    params: {}
- name: iodine
  endpoint:
    path: /iodine
    method: GET
    data_selector: resources
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: server
  endpoint:
    path: /server/start
    method: POST
    data_selector: result
- name: client
  endpoint:
    path: /client/start
    method: POST
    data_selector: result
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: darkstat
  endpoint:
    path: /darkstat
    method: GET
- name: dnschef
  endpoint:
    path: /dnschef
    method: GET
- name: ettercap
  endpoint:
    path: /ettercap
    method: GET
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
    params: {}
- name: ssl_connection
  endpoint:
    path: /sslsplit
    method: GET
    data_selector: connections
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: tundeep_command
  endpoint:
    path: /tundeep/command
    method: POST
    data_selector: results
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: list_shares
  endpoint:
    path: /smb/shares
    method: GET
    data_selector: shares
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: reports
  endpoint:
    path: /reports
    method: GET
    data_selector: results
- name: dns_enum
  endpoint:
    path: /dnsenum
    method: GET
- name: dns_records
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: domain
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: domain_report
  endpoint:
    path: /search
    method: GET
    params:
      query: '*.*****.jp'
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: log_files
  endpoint:
    path: /logs/
    method: GET
    data_selector: files
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: data
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: configuration_options
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      conf_file: <conf_file>
      source_ip: <source_ip>
      source_port: <source_port>
      dest_ip: <dest_ip>
      dest_port: <dest_port>
      flags: <flags>
      protocol: <protocol>
      tos: <tos>
      verbose: <verbose>
- name: timing_options
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      delay: <delay>
      sleep_time: <sleep time>
- name: evasion_options
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      evasion_method: <evasion method>
      ids_ttl: <ids_ttl>
- name: connection_options
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      reset_connection: <reset connection>
      end_connection: <end connection>
      IP_fragments_number: <IP fragments number>
      IP_fragments_size: <IP fragments size>
      TCP_segments_number: <TCP segments number>
      TCP_segments_size: <TCP segments size>
      cksum_value: <cksum value>
      marker: <marker>
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
- name: bettercap_commands
  endpoint:
    path: /commands
    method: GET
    data_selector: commands
- name: headers_info
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: create_directory
  endpoint:
    path: /smb/client/create_directory
    method: POST
    data_selector: result
    params: {}
- name: delete_directory
  endpoint:
    path: /smb/client/delete_directory
    method: DELETE
    data_selector: result
    params: {}
- name: rename_directory
  endpoint:
    path: /smb/client/rename_directory
    method: PUT
    data_selector: result
    params: {}
- name: list_directory_contents
  endpoint:
    path: /smb/client/list_directory_contents
    method: GET
    data_selector: contents
    params: {}
- name: delete_file
  endpoint:
    path: /smb/client/delete_file
    method: DELETE
    data_selector: result
    params: {}
- name: rename_file
  endpoint:
    path: /smb/client/rename_file
    method: PUT
    data_selector: result
    params: {}
- name: get_file
  endpoint:
    path: /smb/client/get_file
    method: GET
    data_selector: file_data
    params: {}
- name: put_file
  endpoint:
    path: /smb/client/put_file
    method: PUT
    data_selector: result
    params: {}
- name: recursively_get_directory
  endpoint:
    path: /smb/client/recursively_get_directory
    method: GET
    data_selector: directory_data
    params: {}
- name: recursively_put_directory
  endpoint:
    path: /smb/client/recursively_put_directory
    method: PUT
    data_selector: result
    params: {}
- name: recursively_delete_directory
  endpoint:
    path: /smb/client/recursively_delete_directory
    method: DELETE
    data_selector: result
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      usernames_file: users.txt
      target: 192.168.11.4
      port: 25
      timeout: 5
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: 1*
- name: dns_servers
  endpoint:
    path: /dns_servers
    method: GET
    data_selector: servers
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: records
    params: {}
- name: hashing_options
  endpoint:
    path: /hashing/options
    method: GET
    data_selector: options
    params: {}
- name: apache-users
  endpoint:
    path: /apache-users
    method: GET
- name: arjun
  endpoint:
    path: /arjun
    method: GET
- name: dirb
  endpoint:
    path: /dirb
    method: GET
- name: dirsearch
  endpoint:
    path: /dirsearch
    method: GET
- name: wordlist
  endpoint:
    path: /mp64
    method: GET
    data_selector: records
- name: ftp_login
  endpoint:
    path: /ftp/login
    method: POST
    data_selector: response
    params: {}
- name: log_files
  endpoint:
    path: /
    method: GET
    data_selector: logs
    params: {}
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: records
- name: server
  endpoint:
    path: /server
    method: OPTIONS
- name: client
  endpoint:
    path: /client
    method: OPTIONS
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: records
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: bi-address
  endpoint:
    path: <bi-address>
    method: GET
- name: single-address
  endpoint:
    path: <single-address>
    method: GET
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: sslinfo
  endpoint:
    path: /sslinfo
    method: GET
    data_selector: ssl
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: directory
  endpoint:
    path: /directory
    method: GET
    data_selector: directory
- name: portscan
  endpoint:
    path: /portscan
    method: GET
    data_selector: ports
- name: server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: server_info
- name: client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: client_info
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
    params: {}
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: records
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
- name: Network Tools
  endpoint:
    path: /network-tools
    method: GET
    data_selector: tools
    params: {}
- name: Network Scanning
  endpoint:
    path: /network-scanning
    method: GET
    data_selector: scanning_tools
    params: {}
- name: default
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: records
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: records
    params: {}
- name: smtp_check
  endpoint:
    path: /smtp/check
    method: GET
    data_selector: records
    params: {}
- name: SNMP Scanner
  endpoint:
    path: /snmp
    method: GET
    data_selector: results
    params: {}
- name: user_enumeration
  endpoint:
    path: /
    method: VRFY
    data_selector: usernames
- name: arp_scan
  endpoint:
    path: /arp_scan
    method: GET
    data_selector: results
    params: {}
- name: sql_injection
  endpoint:
    path: /dvwa/vulnerabilities/sqli/
    method: GET
    data_selector: vulnerabilities
    params:
      id: 1*
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
- name: services
  endpoint:
    path: /supported_services
    method: GET
    data_selector: services
    params: {}
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
    params: {}
- name: hashes
  endpoint:
    path: /ssdp/device-desc.xml
    method: GET
    data_selector: hashes
    params: {}
- name: capture_interface
  endpoint:
    path: /capture/interface
    method: GET
    data_selector: capture
    params: {}
- name: capture_stop_conditions
  endpoint:
    path: /capture/stop_conditions
    method: GET
    data_selector: conditions
    params: {}
- name: capture_output
  endpoint:
    path: /capture/output
    method: GET
    data_selector: output
    params: {}
- name: network_filtering
  endpoint:
    path: /network/filtering
    method: GET
    data_selector: filtering
    params: {}
- name: firewall_builder
  endpoint:
    path: /firewall/builder
    method: GET
    data_selector: firewall
    params: {}
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage_data
- name: list_shares
  endpoint:
    path: /smb-client/list-shares
    method: GET
    data_selector: shares
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: records
- name: Altdns
  endpoint:
    path: /altdns
    method: POST
    data_selector: results
- name: OWASP Amass
  endpoint:
    path: /amass
    method: GET
    data_selector: domains
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: subdomains
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: dns_info
- name: redsocks
  endpoint:
    path: /redsocks
    method: GET
    data_selector: data
- name: ssf
  endpoint:
    path: /ssf
    method: GET
    data_selector: data
- name: ssfd
  endpoint:
    path: /ssfd
    method: GET
    data_selector: data
- name: ssfcp
  endpoint:
    path: /ssfcp
    method: GET
    data_selector: data
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: domain
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
- name: TCP4-LISTEN
  endpoint:
    path: TCP4-LISTEN:80,fork
    method: GET
    data_selector: response
    params: {}
- name: TCP4-CONNECT
  endpoint:
    path: TCP4-CONNECT:example.com:80
    method: GET
    data_selector: response
    params: {}
- name: TCP4-LISTEN-SSH
  endpoint:
    path: TCP4-LISTEN:22,fork
    method: GET
    data_selector: response
    params: {}
- name: TCP4-CONNECT-SSH
  endpoint:
    path: TCP4-CONNECT:192.168.56.2:22
    method: GET
    data_selector: response
    params: {}
- name: TCP4-LISTEN-CMD
  endpoint:
    path: TCP4-LISTEN:4444,fork
    method: GET
    data_selector: response
    params: {}
- name: Ncat-Connect
  endpoint:
    path: ncat 192.168.11.3 4444
    method: GET
    data_selector: response
    params: {}
- name: usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage
    params: {}
- name: crawled_urls
  endpoint:
    path: /
    method: GET
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: help
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: help
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: reports
    params: {}
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
    data_selector: results
- name: target
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: subdomain_enumeration
  endpoint:
    path: /sublist3r
    method: GET
- name: protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: supported_protocols
- name: application_session_files
  endpoint:
    path: /chaosreader/application_session
    method: GET
    data_selector: records
    params: {}
- name: packet_sniff
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: packet_inject
  endpoint:
    path: /inject
    method: POST
    data_selector: injections
- name: davtest
  endpoint:
    path: /davdir
    method: GET
    data_selector: records
- name: dhcpig
  endpoint:
    path: /dhcp
    method: GET
    data_selector: records
- name: dotdotpwn
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: records
- name: ident_user_enum
  endpoint:
    path: /ident-user-enum
    method: GET
    data_selector: response
    params: {}
- name: ftest
  endpoint:
    path: /--help
    method: GET
    data_selector: configuration options
- name: ftestd
  endpoint:
    path: /--help
    method: GET
    data_selector: configuration options
- name: smtp_enum
  endpoint:
    path: /smtp/enum
    method: GET
    data_selector: records
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: records
- name: network_monitor
  endpoint:
    path: /api/v1/network/monitor
    method: GET
    data_selector: records
- name: http_proxy
  endpoint:
    path: /api/v1/http/proxy
    method: POST
    data_selector: response
- name: smtp_user_enum
  endpoint:
    path: /
    method: GET
    data_selector: users
    params:
      mode: VRFY
      username_file: users.txt
      target: 192.168.11.4
      port: 25
      timeout: 5
- name: list_shares
  endpoint:
    path: /smb/cifs/client/shares
    method: GET
    data_selector: shares
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
- name: vulnerabilities
  endpoint:
    path: /dvwa/vulnerabilities/sqli/
    method: GET
    data_selector: records
    params:
      id: '1'
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: POST
    data_selector: session
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: hashes
    params: {}
- name: crawl
  endpoint:
    path: /crawl
    method: GET
    data_selector: urls
- name: mirror
  endpoint:
    path: /
    method: GET
- name: statsgen
  endpoint:
    path: /statsgen
    method: GET
- name: maskgen
  endpoint:
    path: /maskgen
    method: GET
- name: policygen
  endpoint:
    path: /policygen
    method: GET
- name: rulegen
  endpoint:
    path: /rulegen
    method: GET
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: reports
    params: {}
- name: wordlist
  endpoint:
    path: /path/to/wordlist
    method: GET
    data_selector: records
    params: {}
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: subdomain_enumeration
  endpoint:
    path: /subdomain/enumeration
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /session
    method: POST
    data_selector: data
- name: proxify_logs
  endpoint:
    path: /proxify_logs
    method: GET
    data_selector: logs
    params: {}
- name: uploaded_files
  endpoint:
    path: /uploads/DavTestDir_vz1C_iC2AlPID
    method: PUT
    data_selector: files
    params: {}
- name: usage
  endpoint:
    path: /tundeep/help
    method: GET
    data_selector: usage
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: server
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: client
- name: SQL Injection Tests
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: payloads
    params:
      level: 5
      risk: 3
      dbms: MySQL
- name: merlin_server
  endpoint:
    path: /merlinServer
    method: GET
- name: merlin_cli
  endpoint:
    path: /merlinCLI
    method: GET
- name: merlin_agent
  endpoint:
    path: /merlinAgent
    method: GET
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: session
- name: recovered_files
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: recovered
    params: {}
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: records
- name: hash_analysis
  endpoint:
    path: /hashid
    method: GET
    data_selector: analysis_results
    params: {}
- name: usage
  endpoint:
    path: /help
    method: GET
    data_selector: usage
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
    params: {}
- name: ping_targets
  endpoint:
    path: /ping
    method: GET
    data_selector: results
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: vuln_results
    params: {}
- name: network_protocol
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: capture_data
  endpoint:
    path: /capture/data
    method: GET
    data_selector: records
    params: {}
- name: hexinject_usage
  endpoint:
    path: /hexinject/usage
    method: GET
    data_selector: usage
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: records
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: records
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: records
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: records
    params: {}
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
    data_selector: records
    params: {}
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
    data_selector: records
    params: {}
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
    data_selector: records
    params: {}
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
    data_selector: records
    params: {}
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
    data_selector: records
    params: {}
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
    data_selector: records
    params: {}
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
    data_selector: records
    params: {}
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
    data_selector: records
    params: {}
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
    data_selector: records
    params: {}
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
    data_selector: records
    params: {}
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
    data_selector: records
    params: {}
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
    data_selector: records
    params: {}
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
    data_selector: records
    params: {}
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
    data_selector: records
    params: {}
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
    data_selector: records
    params: {}
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
    data_selector: records
    params: {}
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
    data_selector: records
    params: {}
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
    data_selector: records
    params: {}
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
    data_selector: records
    params: {}
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
    data_selector: records
    params: {}
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
    data_selector: records
    params: {}
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
    data_selector: records
    params: {}
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
    data_selector: records
    params: {}
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
    data_selector: records
    params: {}
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
    data_selector: records
    params: {}
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
    data_selector: records
    params: {}
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
    data_selector: records
    params: {}
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
    data_selector: records
    params: {}
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
    data_selector: records
    params: {}
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
    data_selector: records
    params: {}
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
    data_selector: records
    params: {}
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
    data_selector: records
    params: {}
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: hashes
    params: {}
- name: markov_numbers
  endpoint:
    path: /markov-numbers.txt
    method: GET
    data_selector: numbers
    params: {}
- name: capture_interface
  endpoint:
    path: /capture/interface
    method: GET
    data_selector: options
    params: {}
- name: capture_stop_conditions
  endpoint:
    path: /capture/stop_conditions
    method: GET
    data_selector: options
    params: {}
- name: capture_output
  endpoint:
    path: /capture/output
    method: GET
    data_selector: options
    params: {}
- name: input_file
  endpoint:
    path: /input/file
    method: GET
    data_selector: options
    params: {}
- name: processing
  endpoint:
    path: /processing
    method: GET
    data_selector: options
    params: {}
- name: output
  endpoint:
    path: /output
    method: GET
    data_selector: options
    params: {}
- name: diagnostic_output
  endpoint:
    path: /diagnostic/output
    method: GET
    data_selector: options
    params: {}
- name: miscellaneous
  endpoint:
    path: /miscellaneous
    method: GET
    data_selector: options
    params: {}
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
- name: server
  endpoint:
    path: /server/start
    method: POST
    data_selector: status
- name: client
  endpoint:
    path: /client/connect
    method: POST
    data_selector: status
- name: list_shares
  endpoint:
    path: /smb/cifs/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
- name: dns_enumeration
  endpoint:
    path: /dns_enumeration
    method: GET
    data_selector: records
    params: {}
- name: arp_mitm
  endpoint:
    path: /arp_mitm
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: tundeep
  endpoint:
    path: /tundeep
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
    params: {}
- name: server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: command
    params: {}
- name: client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: command
    params: {}
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      extensions: php,html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: targets
  endpoint:
    path: targets
    method: GET
- name: SNMP Scanner
  endpoint:
    path: /snmp/scanner
    method: GET
    data_selector: queries
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: file_metadata
  endpoint:
    path: /exiftool/file
    method: GET
    data_selector: metadata
    params: {}
- name: Exif
  endpoint:
    path: /exif
    method: GET
    data_selector: records
- name: subdomains
  endpoint:
    path: /api/v1/subdomains
    method: GET
    data_selector: subdomains
- name: protocols
  endpoint:
    path: /protocols
    method: GET
- name: packet_sniffer
  endpoint:
    path: /hexinject/sniffer
    method: POST
    data_selector: packets
    params:
      filter: arp
- name: packet_injector
  endpoint:
    path: /hexinject/injector
    method: POST
    data_selector: injected_packets
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /ssl_info
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: directories
  endpoint:
    path: /directories
    method: GET
    data_selector: directories
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: port_scan
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: list shares
  endpoint:
    path: /list_shares
    method: GET
    data_selector: shares
    params:
      dst-ip: 5.6.7.8
      user: login
      password: password
      netbiosname: netbiosname
      device: Eth0
      src-eth: 0:2:3:4:5:6
      dst-eth: 0:8:9:a:b:c
      src-ip: 192.168.11.3
      src-port: '0'
      dst-port: '139'
      ip4opts: ip4opts
      ip6exts: ip6exts
      authversion: '2'
      timeout: '60000'
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
    params:
      timeout: '10'
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
    params: {}
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: user_enumeration
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      file: users.txt
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: sql_injection_check
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: results
    params:
      id: '1'
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: brute_force_services
  endpoint:
    path: /brutespray/services
    method: GET
    data_selector: services
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: hashes
- name: mask
  endpoint:
    path: /mask
    method: GET
- name: cloud_resources
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: resources
- name: metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: url_collection
  endpoint:
    path: /urls
    method: GET
    data_selector: results
- name: password_analysis_toolkit
  endpoint:
    path: /statsgen
    method: GET
- name: mask_generator
  endpoint:
    path: /maskgen
    method: GET
- name: policy_generator
  endpoint:
    path: /policygen
    method: GET
- name: rule_generator
  endpoint:
    path: /rulegen
    method: GET
- name: subdomain_discovery
  endpoint:
    path: /subfinder
    method: GET
    data_selector: results
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: records
    params: {}
- name: chisel_server
  endpoint:
    path: /server
    method: OPTIONS
    data_selector: options
    params: {}
- name: chisel_client
  endpoint:
    path: /client
    method: OPTIONS
    data_selector: options
    params: {}
- name: dhcp_request
  endpoint:
    path: /dhcp_request
    method: GET
    data_selector: response
- name: socks
  endpoint:
    path: /socks
    method: GET
- name: reverse
  endpoint:
    path: /reverse
    method: GET
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: null
    params:
      page: ../../../../../etc/passwd
- name: proxify_logs
  endpoint:
    path: /proxify_logs
    method: GET
    data_selector: logs
- name: redsocks
  endpoint:
    path: /redsocks
    method: GET
    data_selector: data
- name: user_enumeration
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params: {}
- name: target
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: network_tunnel
  endpoint:
    path: /services/data/vXX.X/sobjects/NetworkTunnel
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: session
- name: fuzzing_test
  endpoint:
    path: /FUZZ
    method: GET
- name: dnscat2-server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: none
    params: {}
- name: dnscat-client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: none
    params: {}
- name: services
  endpoint:
    path: /brutespray/services
    method: GET
    data_selector: supported_services
- name: agent
  endpoint:
    path: /agent/checkin
    method: POST
    data_selector: response
    params: {}
- name: hash
  endpoint:
    path: /hash
    method: GET
    data_selector: records
    params: {}
- name: brute_force_authentication
  endpoint:
    path: /api/v1/brute_force
    method: POST
    data_selector: results
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: records
    params: {}
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: records
    params: {}
- name: vm
  endpoint:
    path: /vm
    method: GET
    data_selector: records
    params: {}
- name: usage
  endpoint:
    path: /ncrack/usage
    method: GET
    data_selector: usage
    params: {}
- name: Amap
  endpoint:
    path: /network-tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /network-tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /network-tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
    data_selector: results
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
    data_selector: results
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
    data_selector: results
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: POST
    data_selector: results
    params: {}
- name: pop_login
  endpoint:
    path: /pop_login
    method: POST
    data_selector: results
    params: {}
- name: imap_login
  endpoint:
    path: /imap_login
    method: POST
    data_selector: results
    params: {}
- name: target
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
    params: {}
- name: wordlist
  endpoint:
    path: /api/wordlist
    method: POST
    data_selector: wordlists
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: results
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: ''
    params: {}
- name: tunnel
  endpoint:
    path: /tunnel
    method: POST
    data_selector: tunnel
- name: port_scan
  endpoint:
    path: /nmap
    method: GET
    data_selector: results
    params: {}
- name: ack_scan
  endpoint:
    path: /nmap/ack
    method: GET
    data_selector: results
    params: {}
- name: vuln_scan
  endpoint:
    path: /nmap/vuln
    method: GET
    data_selector: results
    params: {}
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: session_files
  endpoint:
    path: /chaosreader/session
    method: GET
    data_selector: records
- name: socat_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage
    params: {}
- name: sniffing
  endpoint:
    path: /hexinject/sniif
    method: GET
    data_selector: packets
    params: {}
- name: injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: response
    params: {}
- name: ssltraffic
  endpoint:
    path: /
    method: GET
    data_selector: record
- name: dnscat_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: server
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: client
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: tcpick_data
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: tcpreplay_data
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: tshark_data
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: Amap
  endpoint:
    path: /amap
    method: GET
    data_selector: usage
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: usage
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: usage
- name: targets
  endpoint:
    path: /
    method: GET
    data_selector: targets
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
- name: OWASP Amass
  endpoint:
    path: /amass
    method: GET
    data_selector: records
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params:
      ip: 192.168.11.0/24
      ports: 20-25
- name: dns_enum_options
  endpoint:
    path: /dnsenum/options
    method: GET
    data_selector: options
    params: {}
- name: dnsgen_options
  endpoint:
    path: /dnsgen/options
    method: GET
    data_selector: options
    params: {}
- name: dnsrecon_options
  endpoint:
    path: /dnsrecon/options
    method: GET
    data_selector: options
    params: {}
- name: dnstracer_options
  endpoint:
    path: /dnstracer/options
    method: GET
    data_selector: options
    params: {}
- name: dnstwist_options
  endpoint:
    path: /dnstwist/options
    method: GET
    data_selector: options
    params: {}
- name: dns_records
  endpoint:
    path: --domain
    method: GET
    data_selector: records
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: capture_data
  endpoint:
    path: /api/capture
    method: GET
    data_selector: data
    params: {}
- name: packets
  endpoint:
    path: /packets
    method: GET
    data_selector: records
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excludestatuscodes: 404
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: crawled_urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      incremental: page_id
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: results
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: results
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: bettercap
  endpoint:
    path: /api/v1/bettercap
    method: GET
    data_selector: records
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: list_shares
  endpoint:
    path: /198
    method: GET
    data_selector: shares
    params: {}
- name: subdomains
  endpoint:
    path: /subdomain/discovery
    method: GET
    data_selector: subdomains
- name: DNS Enumeration
  endpoint:
    path: /dns/enum
    method: GET
    data_selector: results
    params: {}
- name: Altdns
  endpoint:
    path: /altdns
    method: POST
    data_selector: results
    params: {}
- name: OWASP Amass
  endpoint:
    path: /amass
    method: GET
    data_selector: results
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: dns_query
  endpoint:
    path: /dns_query
    method: GET
    data_selector: records
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: Total Traversals found
- name: urlcrazy
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: parameters
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
    params:
      timeout: '10'
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      extensions: inc
- name: fuzzing
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      query: FUZZ
      wordlist: words.txt
      exclude_status_codes: '404'
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      depth: 5
- name: user_enum
  endpoint:
    path: /
    method: VRFY
    data_selector: results
    params:
      usernames_file: users.txt
      target_host: 192.168.11.4
      port: 25
      timeout: 5
- name: cloud_enum
  endpoint:
    path: --help
    method: GET
    data_selector: records
    params: {}
- name: sql_injection_check
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: results
    params:
      id: '1'
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: session
    params:
      password: hello
- name: filesystem_audit
  endpoint:
    path: /audit_filesystem
    method: GET
    data_selector: audit
    params: {}
- name: image_metadata
  endpoint:
    path: /image/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /audio/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /document/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /epub/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: fuzz
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
- name: exif_tags
  endpoint:
    path: /exif/tags
    method: GET
    data_selector: tags
- name: maskprocessor
  endpoint:
    path: /maskprocessor
    method: GET
    data_selector: records
    params: {}
- name: medusa
  endpoint:
    path: /medusa
    method: GET
    data_selector: records
    params: {}
- name: name_that_hash
  endpoint:
    path: /name_that_hash
    method: GET
    data_selector: records
    params: {}
- name: ncrack
  endpoint:
    path: /ncrack
    method: GET
    data_selector: records
    params: {}
- name: ssh
  endpoint:
    path: ssh://target
    method: POST
- name: ftp
  endpoint:
    path: ftp://target
    method: POST
- name: dav_test
  endpoint:
    path: /uploads/
    method: MKCOL
    data_selector: Created
    params: {}
- name: wordlist
  endpoint:
    path: /wordlistraider
    method: GET
    data_selector: wordlist
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: records
    params: {}
- name: chisel_server
  endpoint:
    path: /server
    method: GET
- name: chisel_client
  endpoint:
    path: /client
    method: GET
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
    data_selector: resources
    params: {}
- name: ligolo-proxy
  endpoint:
    path: /proxy
    method: POST
    data_selector: result
    params: {}
- name: ligolo-agent
  endpoint:
    path: /agent
    method: POST
    data_selector: result
    params: {}
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: user_enumeration
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      method: VRFY
      usernames_file: users.txt
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: tcp_connection
  endpoint:
    path: /tcp/connection
    method: GET
    data_selector: records
    params: {}
- name: target_url
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: records
    params:
      id: '1'
- name: dnscat2_server
  endpoint:
    path: /dnscat2/server
    method: GET
    data_selector: help
- name: dnscat_client
  endpoint:
    path: /dnscat/client
    method: GET
    data_selector: help
- name: supported_services
  endpoint:
    path: /brutespray/supported_services
    method: GET
    data_selector: services
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
- name: listener
  endpoint:
    path: /listener
    method: POST
- name: hash_analysis
  endpoint:
    path: /analyze/hash
    method: POST
    data_selector: results
- name: maskprocessor
  endpoint:
    path: /mp64
    method: GET
    data_selector: usage
    params: {}
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: session_data
- name: password_analysis
  endpoint:
    path: /statsgen
    method: GET
    data_selector: options
- name: mask_generation
  endpoint:
    path: /maskgen
    method: GET
    data_selector: options
- name: policy_generation
  endpoint:
    path: /policygen
    method: GET
    data_selector: options
- name: rule_generation
  endpoint:
    path: /rulegen
    method: GET
    data_selector: options
- name: team_server
  endpoint:
    path: /services/data/vXX.X/sobjects/TeamServer
    method: GET
    data_selector: records
    params: {}
- name: reverse_tcp_multi_handler
  endpoint:
    path: /services/data/vXX.X/sobjects/ReverseTCPMultiHandler
    method: GET
    data_selector: records
    params: {}
- name: hoaxshell_multi_handler
  endpoint:
    path: /services/data/vXX.X/sobjects/HoaxShellMultiHandler
    method: GET
    data_selector: records
    params: {}
- name: http_file_smuggler
  endpoint:
    path: /services/data/vXX.X/sobjects/HTTPFileSmuggler
    method: GET
    data_selector: records
    params: {}
- name: Network Scanning Tools
  endpoint:
    path: /network-scanning
    method: GET
    data_selector: tools
    params: {}
- name: pdfcrack
  endpoint:
    path: /pdfcrack
    method: GET
    data_selector: results
- name: pipal
  endpoint:
    path: /pipal
    method: GET
    data_selector: results
- name: princeprocessor
  endpoint:
    path: /princeprocessor
    method: GET
    data_selector: results
- name: rling
  endpoint:
    path: /rling
    method: GET
    data_selector: results
- name: rsmangler
  endpoint:
    path: /rsmangler
    method: GET
    data_selector: results
- name: statsprocessor
  endpoint:
    path: /statsprocessor
    method: GET
    data_selector: results
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: results
- name: service_scan
  endpoint:
    path: /service-scan
    method: GET
    data_selector: results
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: records
- name: markov_numbers
  endpoint:
    path: /markov-numbers.txt
    method: GET
    data_selector: records
- name: chisel_server
  endpoint:
    path: /server
    method: POST
    data_selector: response
    params: {}
- name: chisel_client
  endpoint:
    path: /client
    method: POST
    data_selector: response
    params: {}
- name: sysDescr
  endpoint:
    path: /.1.3.6.1.2.1.1.1.0
    method: GET
    data_selector: sysDescr
    params: {}
- name: hrStorageAllocationUnits
  endpoint:
    path: /.1.3.6.1.2.1.25.2.3.1.4.1
    method: GET
    data_selector: hrStorageAllocationUnits
    params: {}
- name: hrStorageSize
  endpoint:
    path: /.1.3.6.1.2.1.25.2.3.1.5.1
    method: GET
    data_selector: hrStorageSize
    params: {}
- name: scan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: server
  endpoint:
    path: /ligolo-proxy
    method: GET
    data_selector: info
- name: agent
  endpoint:
    path: /ligolo-agent
    method: GET
    data_selector: info
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: proxify_logs
  endpoint:
    path: /proxify_logs
    method: GET
    data_selector: logs
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: packet_capture
  endpoint:
    path: /capture
    method: POST
    data_selector: capture
- name: dns_proxy
  endpoint:
    path: /dnsproxy
    method: GET
- name: tundeep_interface
  endpoint:
    path: /tundeep/interface
    method: GET
    data_selector: interfaces
    params: {}
- name: packet_sniffer
  endpoint:
    path: /sniff
    method: GET
- name: packet_injector
  endpoint:
    path: /inject
    method: POST
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: session
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat-client
    method: GET
    data_selector: session
    params: {}
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
- name: ssldump
  endpoint:
    path: /ssldump
    method: GET
    data_selector: records
- name: http_request
  endpoint:
    path: /
    method: GET
    data_selector: HTTP
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
    data_selector: results
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: list_shares
  endpoint:
    path: /198
    method: GET
    data_selector: shares
    params: {}
- name: config
  endpoint:
    path: /trivy/config
    method: GET
    data_selector: records
    params: {}
- name: filesystem
  endpoint:
    path: /trivy/filesystem
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /trivy/image
    method: GET
    data_selector: records
    params: {}
- name: kubernetes
  endpoint:
    path: /trivy/kubernetes
    method: GET
    data_selector: records
    params: {}
- name: repository
  endpoint:
    path: /trivy/repository
    method: GET
    data_selector: records
    params: {}
- name: rootfs
  endpoint:
    path: /trivy/rootfs
    method: GET
    data_selector: records
    params: {}
- name: sbom
  endpoint:
    path: /trivy/sbom
    method: GET
    data_selector: records
    params: {}
- name: vm
  endpoint:
    path: /trivy/vm
    method: GET
    data_selector: records
    params: {}
- name: DNS_Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params:
      input: subdomains.txt
      output: out.txt
      wordlist: words.txt
- name: OWASP_Amass
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params:
      domain: digital.go.jp
      whois: true
      config: config.yaml
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: port_scan
  endpoint:
    path: /port/scan
    method: GET
    data_selector: results
- name: service_scan
  endpoint:
    path: /service/scan
    method: GET
    data_selector: results
- name: dnsenum_usage
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: usage
    params: {}
- name: dnsgen_usage
  endpoint:
    path: /dnsgen
    method: GET
    data_selector: usage
    params: {}
- name: dnsrecon_usage
  endpoint:
    path: /dnsrecon
    method: GET
    data_selector: usage
    params: {}
- name: dnstracer_usage
  endpoint:
    path: /dnstracer
    method: GET
    data_selector: usage
    params: {}
- name: dnstwist_usage
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: usage
    params: {}
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params: {}
- name: domain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: crawl
  endpoint:
    path: /
    method: GET
- name: network_sniffing
  endpoint:
    path: /above/sniffing
    method: GET
    data_selector: records
    params: {}
- name: bruteshark
  endpoint:
    path: /bruteshark/analysis
    method: POST
    data_selector: results
    params: {}
- name: subdomains
  endpoint:
    path: /
    method: GET
    data_selector: subdomains
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: url
- name: javascript
  endpoint:
    path: /wp-includes/blocks/navigation/view.min.js?ver=3776ea67846b3bb10fe8f7cdd486b0ba
    method: GET
    data_selector: javascript
- name: wlwmanifest
  endpoint:
    path: /wlwmanifest.xml
    method: GET
    data_selector: url
- name: comments_rss
  endpoint:
    path: /?feed=comments-rss2
    method: GET
    data_selector: url
- name: xmlrpc
  endpoint:
    path: /xmlrpc.php?rsd
    method: GET
    data_selector: url
- name: rss2
  endpoint:
    path: /?feed=rss2
    method: GET
    data_selector: url
- name: page_id_2
  endpoint:
    path: /?page_id=2
    method: GET
    data_selector: url
- name: page_id_733
  endpoint:
    path: /?page_id=733
    method: GET
    data_selector: url
- name: page_id_1977
  endpoint:
    path: /?page_id=1977
    method: GET
    data_selector: url
- name: page_id_701
  endpoint:
    path: /?page_id=701
    method: GET
    data_selector: url
- name: page_id_703
  endpoint:
    path: /?page_id=703
    method: GET
    data_selector: url
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
    params: {}
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: injected_packets
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: payload
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: payload
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: payload
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: results
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: results
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: results
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: dnsenum_usage
  endpoint:
    path: /dnsenum/usage
    method: GET
    data_selector: usage
    params: {}
- name: dnsenum_options
  endpoint:
    path: /dnsenum/options
    method: GET
    data_selector: options
    params: {}
- name: user_enumeration
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: results
    params:
      host: 192.168.11.4
      port: 25
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: URLCrazy Domain Report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: injection_tests
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: payloads
    params:
      level: 5
      risk: 3
      dbms: MySQL
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: response
    params:
      extensions: inc
      wordlist: words.txt
      threads: 50
      timeout: 10
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: response
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: ffuf
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: sfuzz
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: wfuzz
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: wordlist_generation
  endpoint:
    path: /mp64
    method: GET
    data_selector: records
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool/audio
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool/docx
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool/epub
    method: GET
    data_selector: metadata
    params: {}
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
- name: subdomains
  endpoint:
    path: /subfinder
    method: GET
- name: ftp_login
  endpoint:
    path: /ftp/login
    method: POST
    data_selector: results
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh/login
    method: POST
    data_selector: results
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet/login
    method: POST
    data_selector: results
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp/login
    method: POST
    data_selector: results
    params: {}
- name: mysql_login
  endpoint:
    path: /mysql/login
    method: POST
    data_selector: results
    params: {}
- name: subdomain_enumeration
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
- name: wordlist
  endpoint:
    path: /wordlist
    method: GET
    data_selector: records
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: OPTIONS
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: OPTIONS
- name: davtest
  endpoint:
    path: /davdir
    method: GET
- name: dhcpig
  endpoint:
    path: /
    method: GET
- name: dotdotpwn
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: dns_server
  endpoint:
    path: /tunnel
    method: GET
    data_selector: dns_data
    params: {}
- name: ident_user_enum
  endpoint:
    path: /ident-user-enum
    method: GET
    data_selector: response
    params: {}
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
    params: {}
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      max_processes: 5
      port: 25
      timeout: 5
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: session
    params: {}
- name: client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: session
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: brutespray_usage
  endpoint:
    path: /brutespray/help
    method: GET
    data_selector: usage
- name: NetworkTools
  endpoint:
    path: /network/tools
    method: GET
    data_selector: tools
    params: {}
- name: hash
  endpoint:
    path: /hash
    method: GET
    data_selector: hashes
- name: autorecon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
    params: {}
- name: usage
  endpoint:
    path: --help
    method: GET
    data_selector: options
- name: braa_query
  endpoint:
    path: /braa
    method: GET
    data_selector: responses
    params: {}
- name: masscan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: records
    params: {}
- name: server
  endpoint:
    path: /chisel/server
    method: GET
- name: client
  endpoint:
    path: /chisel/client
    method: GET
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: dns
  endpoint:
    path: /api/dns
    method: GET
    data_selector: records
- name: traffic_capture
  endpoint:
    path: /capture
    method: GET
    data_selector: records
- name: tcp
  endpoint:
    path: /tcp
    method: GET
    data_selector: records
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: usage
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: usage
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: usage
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: usage
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: session
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: session
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: records
- name: team_server
  endpoint:
    path: /team_server
    method: GET
- name: reverse_tcp_multi_handler
  endpoint:
    path: /reverse_tcp_multi_handler
    method: GET
- name: hoaxshell_multi_handler
  endpoint:
    path: /hoaxshell_multi_handler
    method: GET
- name: http_file_smuggler
  endpoint:
    path: /http_file_smuggler
    method: GET
- name: general_options
  endpoint:
    path: /dnsenum/general_options
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /dnsenum/google_scraping_options
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /dnsenum/brute_force_options
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /dnsenum/whois_netrange_options
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /dnsenum/reverse_lookup_options
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /dnsenum/output_options
    method: GET
    data_selector: options
    params: {}
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*.jp'
- name: scan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params: {}
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
- name: cloud_services
  endpoint:
    path: /cloud_services
    method: GET
    data_selector: services
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan_single_url
  endpoint:
    path: scan/single
    method: GET
- name: scan_cidr
  endpoint:
    path: scan/cidr
    method: GET
- name: scan_file
  endpoint:
    path: scan/file
    method: GET
- name: scan_nessus
  endpoint:
    path: scan/nessus
    method: GET
- name: scan_nmap
  endpoint:
    path: scan/nmap
    method: GET
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
- name: subdomain
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: list_shares
  endpoint:
    path: /198
    method: GET
    data_selector: shares
    params: {}
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: results
    params: {}
- name: arp_mitm
  endpoint:
    path: /arp_mitm
    method: GET
    data_selector: results
    params: {}
- name: subdomains
  endpoint:
    path: /dnsenum/subdomains
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /dnsenum/dns_records
    method: GET
    data_selector: records
    params: {}
- name: davtest
  endpoint:
    path: /usr/bin/davtest
    method: GET
    data_selector: results
    params: {}
- name: dhcpig
  endpoint:
    path: /usr/bin/dhcpig
    method: GET
    data_selector: results
    params: {}
- name: dotdotpwn
  endpoint:
    path: ./dotdotpwn.pl
    method: GET
    data_selector: results
    params: {}
- name: domain
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: fragrouter_usage
  endpoint:
    path: /fragrouter
    method: GET
    data_selector: usage
    params: {}
- name: ident_user_enum
  endpoint:
    path: /ident-user-enum
    method: GET
    data_selector: usage
    params: {}
- name: ismtp
  endpoint:
    path: /ismtp
    method: GET
    data_selector: usage
    params: {}
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: logs
  endpoint:
    path: /logs
    method: GET
    data_selector: logs
    params: {}
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: payload
    params:
      id: '1'
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
- name: fuzz_tests
  endpoint:
    path: /fuzz
    method: GET
    data_selector: results
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: results
- name: supported_services
  endpoint:
    path: /brutespray/services
    method: GET
    data_selector: services
- name: hash
  endpoint:
    path: /hash
    method: GET
    data_selector: records
    params: {}
- name: module
  endpoint:
    path: /modules
    method: GET
    data_selector: modules
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: records
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: response
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: response
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: response
    params: {}
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
    params:
      enumeration_type: RCPT TO
- name: smtp_user_enum
  endpoint:
    path: ''
    method: smtp
    data_selector: ''
    params:
      mode: VRFY
      usernames_file: users.txt
      target: 192.168.11.4
      port: 25
      timeout: 5
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: payloads
    params:
      id: 1*
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: records
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: records
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: records
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: records
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
    data_selector: records
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
    data_selector: records
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
    data_selector: records
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
    data_selector: records
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
    data_selector: records
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
    data_selector: records
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
    data_selector: records
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
    data_selector: records
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
    data_selector: records
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
    data_selector: records
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
    data_selector: records
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
    data_selector: records
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
    data_selector: records
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
    data_selector: records
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
    data_selector: records
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
    data_selector: records
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
    data_selector: records
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
    data_selector: records
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
    data_selector: records
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
    data_selector: records
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
    data_selector: records
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
    data_selector: records
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
    data_selector: records
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
    data_selector: records
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
    data_selector: records
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
    data_selector: records
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
    data_selector: records
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
    data_selector: records
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
    data_selector: records
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
    data_selector: records
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
    data_selector: records
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
    data_selector: records
- name: supported_services
  endpoint:
    path: /api/v1/services
    method: GET
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: records
- name: hashcat_options
  endpoint:
    path: /hashcat/options
    method: GET
    data_selector: options
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
- name: global_socket
  endpoint:
    path: /gs-netcat
    method: GET
- name: iodine
  endpoint:
    path: /iodined
    method: GET
- name: tunnel
  endpoint:
    path: /tunnel
    method: POST
- name: mask_generator
  endpoint:
    path: /maskprocessor
    method: GET
    data_selector: masks
- name: password_analysis_toolkit
  endpoint:
    path: /statsgen
    method: GET
    data_selector: stats
    params: {}
- name: redsocks
  endpoint:
    path: /redsocks
    method: GET
    data_selector: data
- name: ftp_login
  endpoint:
    path: /ftp/login
    method: POST
    data_selector: results
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh/login
    method: POST
    data_selector: results
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet/login
    method: POST
    data_selector: results
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp/login
    method: POST
    data_selector: results
    params: {}
- name: wordlist_extraction
  endpoint:
    path: /wordlist/extract
    method: POST
    data_selector: results
- name: tundeep
  endpoint:
    path: /tundeep
    method: GET
    data_selector: records
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: POST
    data_selector: connections
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: POST
    data_selector: connections
- name: dnscat2-server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: server_info
    params: {}
- name: dnscat-client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: client_info
    params: {}
- name: agent
  endpoint:
    path: /merlinAgent
    method: POST
- name: server
  endpoint:
    path: /merlinServer
    method: GET
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
    data_selector: records
- name: global_socket
  endpoint:
    path: /global_socket
    method: GET
    data_selector: records
- name: iodine
  endpoint:
    path: /iodine
    method: GET
    data_selector: records
- name: iodined_server
  endpoint:
    path: /iodined/start
    method: POST
    data_selector: response
    params:
      password: hello
- name: iodined_client
  endpoint:
    path: /iodined/connect
    method: POST
    data_selector: response
    params:
      connect_ip: 192.168.11.4
- name: team_server
  endpoint:
    path: /
    method: GET
    data_selector: sessions
    params: {}
- name: reverse_tcp_multi_handler
  endpoint:
    path: /reverse_tcp
    method: GET
    data_selector: sessions
    params: {}
- name: hoaxshell_multi_handler
  endpoint:
    path: /hoaxshell
    method: GET
    data_selector: sessions
    params: {}
- name: http_file_smuggler
  endpoint:
    path: /file_smuggler
    method: GET
    data_selector: files
    params: {}
- name: tcp_connection
  endpoint:
    path: /tcp
    method: GET
    data_selector: connections
- name: TCP4-LISTEN
  endpoint:
    path: TCP4-LISTEN
    method: LISTEN
    data_selector: packet
    params: {}
- name: TCP4-CONNECT
  endpoint:
    path: TCP4-CONNECT
    method: CONNECT
    data_selector: packet
    params: {}
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: hosts
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
- name: tundeep
  endpoint:
    path: /tundeep
    method: GET
    data_selector: data
- name: autorecon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: credential_bruteforcing
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: records
    params: {}
- name: wpscan
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: server
  endpoint:
    path: /dnscat2-server
    method: HELP
    data_selector: commands
    params: {}
- name: client
  endpoint:
    path: /dnscat
    method: HELP
    data_selector: commands
    params: {}
- name: agent
  endpoint:
    path: /merlinAgent
    method: POST
- name: server
  endpoint:
    path: /merlinServer
    method: POST
- name: port_scan
  endpoint:
    path: /scan/port
    method: GET
    data_selector: ports
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /scan/vuln
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: supported_protocols
    params: {}
- name: generate_payload
  endpoint:
    path: /generate
    method: POST
    data_selector: payload
    params:
      os: linux
      mtls: 192.168.11.3:8888
- name: start_mtls_listener
  endpoint:
    path: /mtls
    method: POST
    data_selector: listener
    params: {}
- name: traffic_capture
  endpoint:
    path: /capture
    method: GET
    data_selector: packets
    params: {}
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: results
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: results
    params: {}
- name: ARP_packets
  endpoint:
    path: /sniff/arp
    method: GET
    data_selector: packets
    params: {}
- name: HTTP_requests
  endpoint:
    path: /sniff/http
    method: GET
    data_selector: requests
    params: {}
- name: scan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
- name: above
  endpoint:
    path: --help
    method: GET
    data_selector: options
    params: {}
- name: brutesharkcli
  endpoint:
    path: --help
    method: GET
    data_selector: options
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
- name: firewall_builder
  endpoint:
    path: /fwbuilder
    method: GET
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
- name: OWASP Amass
  endpoint:
    path: /amass
    method: GET
    data_selector: records
- name: dns_query
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: domain
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
    params: {}
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: GUI
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: list_shares
  endpoint:
    path: /smb/list/shares
    method: GET
    data_selector: shares
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params: {}
- name: OWASP Amass
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: urlcrazy
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: report
    params: {}
- name: apache_users
  endpoint:
    path: /apache-users
    method: GET
    data_selector: users
    params: {}
- name: arjun
  endpoint:
    path: /arjun
    method: GET
    data_selector: parameters
    params:
      url: http://192.168.11.4/customers
- name: dirb
  endpoint:
    path: /dirb
    method: GET
    data_selector: directories
    params:
      url_base: http://192.168.11.4/
- name: dirsearch
  endpoint:
    path: /dirsearch
    method: GET
    data_selector: results
    params:
      url: http://192.168.11.4/
      wordlists: words.txt
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
- name: mirror
  endpoint:
    path: /mirror
    method: GET
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: records
    params: {}
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: GET
    data_selector: results
- name: smtp_relay_testing
  endpoint:
    path: /smtp/relay/testing
    method: GET
    data_selector: results
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan_single_url
  endpoint:
    path: /scan/single
    method: GET
    data_selector: results
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      user: user@example.com
- name: sql_injection_check
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: result
    params:
      id: '1'
- name: ffuf
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: responses
    params: {}
- name: sfuzz
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: responses
    params: {}
- name: wfuzz
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: responses
    params: {}
- name: davtest
  endpoint:
    path: /davdir
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcp
    method: GET
- name: dotdotpwn
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: ''
    params: {}
- name: cewl
  endpoint:
    path: /cewl
    method: GET
    data_selector: ''
    params: {}
- name: changeme
  endpoint:
    path: /changeme
    method: GET
    data_selector: ''
    params: {}
- name: crowbar
  endpoint:
    path: /crowbar
    method: GET
    data_selector: ''
    params: {}
- name: crunch
  endpoint:
    path: /crunch
    method: GET
    data_selector: ''
    params: {}
- name: hashID
  endpoint:
    path: /hashid
    method: GET
    data_selector: ''
    params: {}
- name: hashcat
  endpoint:
    path: /hashcat
    method: GET
- name: hydra
  endpoint:
    path: /hydra
    method: GET
- name: john_the_ripper
  endpoint:
    path: /john_the_ripper
    method: GET
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: emails
    params:
      enumeration_type: 2
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: relay_info
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: dns_records
- name: jsql_injection
  endpoint:
    path: /jsql/injection
    method: GET
    data_selector: db_info
- name: nikto_scan
  endpoint:
    path: /nikto/scan
    method: POST
    data_selector: scan_results
- name: maskprocessor
  endpoint:
    path: /mp64
    method: GET
    data_selector: usage
- name: medusa
  endpoint:
    path: /medusa
    method: GET
    data_selector: usage
- name: nth
  endpoint:
    path: /nth
    method: GET
    data_selector: usage
- name: ncrack
  endpoint:
    path: /ncrack
    method: GET
    data_selector: usage
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      usernames_file: users.txt
      target: 192.168.11.4
      port: 25
      timeout: 5
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: session
    params: {}
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: files
    params: {}
- name: hash_analysis
  endpoint:
    path: /analyze
    method: POST
    data_selector: results
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
- name: wordlist
  endpoint:
    path: --wordlist
    method: GET
    data_selector: output
- name: hashes
  endpoint:
    path: /hashes
    method: POST
    data_selector: results
- name: chisel_server
  endpoint:
    path: /server
    method: OPTIONS
- name: chisel_client
  endpoint:
    path: /client
    method: OPTIONS
- name: pg_sql_login
  endpoint:
    path: /patator/pgsql_login
    method: GET
    data_selector: records
    params:
      host: 192.168.11.4
      user: FILE0
      password: FILE1
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
    data_selector: resources
    params: {}
- name: global_socket
  endpoint:
    path: /gs-netcat
    method: GET
    data_selector: resources
    params: {}
- name: iodine
  endpoint:
    path: /iodined
    method: GET
    data_selector: resources
    params: {}
- name: hashes
  endpoint:
    path: /ssdp/device-desc.xml
    method: GET
    data_selector: records
- name: server
  endpoint:
    path: /server
    method: GET
    data_selector: info
- name: client
  endpoint:
    path: /client
    method: GET
    data_selector: info
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
- name: server
  endpoint:
    path: /server
    method: GET
- name: client
  endpoint:
    path: /client
    method: GET
- name: tundeep_usage
  endpoint:
    path: /tundeep/help
    method: GET
    data_selector: usage
    params: {}
- name: dns_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: commands
    params: {}
- name: dns_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: commands
    params: {}
- name: tcp_listen
  endpoint:
    path: TCP4-LISTEN:80,fork
    method: GET
    data_selector: response
    params: {}
- name: tcp_connect
  endpoint:
    path: TCP4-CONNECT:example.com:80
    method: GET
    data_selector: response
    params: {}
- name: tcp_listen_ssh
  endpoint:
    path: TCP4-LISTEN:22,fork
    method: GET
    data_selector: response
    params: {}
- name: tcp_connect_ssh
  endpoint:
    path: TCP4-CONNECT:192.168.56.2:22
    method: GET
    data_selector: response
    params: {}
- name: tcp_listen_exec
  endpoint:
    path: TCP4-LISTEN:4444,fork
    method: GET
    data_selector: response
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: GET
    data_selector: records
- name: sslsplit
  endpoint:
    path: /sslsplit
    method: GET
    data_selector: records
    params: {}
- name: session
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: session
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: session
    params: {}
- name: extract
  endpoint:
    path: /v1/charges
    method: POST
    data_selector: charges
    params: {}
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
    params: {}
- name: directory_scan
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
- name: network_scanning
  endpoint:
    path: /network_scanning
    method: GET
    data_selector: records
    params: {}
- name: arp_scan
  endpoint:
    path: /arp_scan
    method: GET
    data_selector: records
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: records
    params: {}
- name: target
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: scan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: http_directory_scan
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params:
      threads: 40
      wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt
      extensions: .txt,.html,.php,.asp,.aspx,.jsp
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: tcp_packets
  endpoint:
    path: /tcpick/packets
    method: GET
    data_selector: packets
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
- name: configuration_options
  endpoint:
    path: /ftest/configuration
    method: GET
    data_selector: records
- name: timing_options
  endpoint:
    path: /ftest/timing
    method: GET
    data_selector: records
- name: evasion_options
  endpoint:
    path: /ftest/evasion
    method: GET
    data_selector: records
- name: connection_options
  endpoint:
    path: /ftest/connection
    method: GET
    data_selector: records
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: commands
    params: {}
- name: list_shares
  endpoint:
    path: /198
    method: GET
    data_selector: shares
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: usage
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: usage
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: usage
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
- name: OWASP Amass
  endpoint:
    path: /amass
    method: GET
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: configuration_options
  endpoint:
    path: /ftest/configuration
    method: GET
    data_selector: options
- name: timing_options
  endpoint:
    path: /ftest/timing
    method: GET
    data_selector: timing
- name: evasion_options
  endpoint:
    path: /ftest/evasion
    method: GET
    data_selector: evasion
- name: connection_options
  endpoint:
    path: /ftest/connection
    method: GET
    data_selector: connection
- name: domain
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      domain: DOMAIN
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: bettercap_usage
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
    params: {}
- name: URLs
  endpoint:
    path: /
    method: GET
- name: dns_records
  endpoint:
    path: /api/dns_records
    method: GET
    data_selector: records
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: domain
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: targets
  endpoint:
    path: /scan/targets
    method: GET
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: subdomains
  endpoint:
    path: /api/v1/subdomains
    method: GET
    data_selector: results
- name: gobuster
  endpoint:
    path: /dir
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      extensions: php,html
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: cloud_service
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: records
    params: {}
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: records
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: subdomains
  endpoint:
    path: /subfinder
    method: GET
    data_selector: subdomains
- name: user_enumeration
  endpoint:
    path: /
    method: GET
    data_selector: users
    params:
      target: 192.168.11.4
      port: 25
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: payloads
    params:
      id: '1'
- name: subdomain_enumeration
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: brutespray
  endpoint:
    path: /brutespray/help
    method: GET
    data_selector: usage
    params: {}
- name: scan_result
  endpoint:
    path: /scans/results
    method: GET
    data_selector: results
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: maskprocessor
  endpoint:
    path: /maskprocessor
    method: GET
    data_selector: masks
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: response_data
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params:
      timeout: '10'
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
    params: {}
- name: user_enumeration
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      usernames_file: users.txt
      target: 192.168.11.4
      port: 25
      timeout: 5
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: injection_points
    params:
      id: '1'
- name: doona
  endpoint:
    path: /doona
    method: GET
- name: ffuf
  endpoint:
    path: /ffuf
    method: GET
- name: sfuzz
  endpoint:
    path: /sfuzz
    method: GET
- name: wfuzz
  endpoint:
    path: /wfuzz
    method: GET
- name: supported_services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: word_generator
  endpoint:
    path: /mp64
    method: GET
    data_selector: results
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: records
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: records
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: records
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: records
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
    data_selector: records
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
    data_selector: records
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
    data_selector: records
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
    data_selector: records
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
    data_selector: records
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
    data_selector: records
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
    data_selector: records
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
    data_selector: records
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
    data_selector: records
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
    data_selector: records
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
    data_selector: records
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
    data_selector: records
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
    data_selector: records
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
    data_selector: records
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
    data_selector: records
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
    data_selector: records
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
    data_selector: records
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
    data_selector: records
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
    data_selector: records
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
    data_selector: records
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
    data_selector: records
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
    data_selector: records
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
    data_selector: records
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
    data_selector: records
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
    data_selector: records
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
    data_selector: records
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
    data_selector: records
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
    data_selector: records
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
    data_selector: records
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
    data_selector: records
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
    data_selector: records
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
    data_selector: records
- name: ncrack_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: records
    params: {}
- name: markov_numbers
  endpoint:
    path: /markov-numbers.txt
    method: GET
    data_selector: records
    params: {}
- name: chisel_server
  endpoint:
    path: /server
    method: GET
- name: chisel_client
  endpoint:
    path: /client
    method: GET
- name: server
  endpoint:
    path: /ligolo-proxy
    method: GET
- name: agent
  endpoint:
    path: /ligolo-agent
    method: GET
- name: proxy_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: redsocks
  endpoint:
    path: /redsocks
    method: GET
- name: dnscat2-server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: session
    params: {}
- name: dnscat-client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: session
    params: {}
- name: merlinServer
  endpoint:
    path: /merlinServer
    method: GET
- name: merlinCLI
  endpoint:
    path: /merlinCLI
    method: GET
- name: merlinAgent
  endpoint:
    path: /merlinAgent
    method: GET
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: records
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: records
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: records
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: records
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
    data_selector: records
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
    data_selector: records
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
    data_selector: records
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
    data_selector: records
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
    data_selector: records
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
    data_selector: records
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
    data_selector: records
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
    data_selector: records
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
    data_selector: records
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
    data_selector: records
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
    data_selector: records
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
    data_selector: records
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
    data_selector: records
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
    data_selector: records
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
    data_selector: records
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
    data_selector: records
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
    data_selector: records
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
    data_selector: records
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
    data_selector: records
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
    data_selector: records
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
    data_selector: records
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
    data_selector: records
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
    data_selector: records
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
    data_selector: records
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
    data_selector: records
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
    data_selector: records
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
    data_selector: records
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
    data_selector: records
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
    data_selector: records
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
    data_selector: records
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
    data_selector: records
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
    data_selector: records
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
    params: {}
- name: generate_payload
  endpoint:
    path: /generate
    method: POST
    data_selector: result
    params: {}
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: records
- name: file_upload
  endpoint:
    path: /
    method: POST
    data_selector: file
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: records
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: records
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: records
- name: chisel_server
  endpoint:
    path: /
    method: GET
    data_selector: none
    params: {}
- name: chisel_client
  endpoint:
    path: /
    method: GET
    data_selector: none
    params: {}
- name: targets
  endpoint:
    path: /autorecon/targets
    method: GET
    data_selector: results
- name: dns
  endpoint:
    path: /tunnel
    method: GET
- name: network_tunneling
  endpoint:
    path: /tundeep
    method: GET
- name: protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: supported_protocols
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: packets
    params: {}
- name: dns_server
  endpoint:
    path: /dnscat2-server
    method: POST
    data_selector: session
    params: {}
- name: dns_client
  endpoint:
    path: /dnscat
    method: POST
    data_selector: session
    params: {}
- name: merlinServer
  endpoint:
    path: /merlinServer
    method: GET
- name: merlinCLI
  endpoint:
    path: /merlinCLI
    method: GET
- name: merlinAgent
  endpoint:
    path: /merlinAgent
    method: GET
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
- name: tshark
  endpoint:
    path: /tshark
    method: GET
- name: session
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: configuration_options
  endpoint:
    path: /ftest/configuration
    method: GET
    data_selector: options
    params: {}
- name: timing_options
  endpoint:
    path: /ftest/timing
    method: GET
    data_selector: options
    params: {}
- name: evasion_options
  endpoint:
    path: /ftest/evasion
    method: GET
    data_selector: options
    params: {}
- name: connection_options
  endpoint:
    path: /ftest/connection
    method: GET
    data_selector: options
    params: {}
- name: extract
  endpoint:
    path: /v1/charges
    method: POST
    data_selector: charges
    params:
      amount: 1099
      currency: usd
      source: tok_visa
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: network_scanning_amap
  endpoint:
    path: /network/scanning/amap
    method: GET
    data_selector: results
    params: {}
- name: network_scanning_arp_scan
  endpoint:
    path: /network/scanning/arp-scan
    method: GET
    data_selector: results
    params: {}
- name: network_scanning_arping
  endpoint:
    path: /network/scanning/arping
    method: GET
    data_selector: results
    params: {}
- name: targets
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: results
- name: list_shares
  endpoint:
    path: /smbclient/list/shares
    method: GET
    data_selector: shares
- name: create_directory
  endpoint:
    path: /smbclient/create/directory
    method: POST
    data_selector: result
- name: delete_directory
  endpoint:
    path: /smbclient/delete/directory
    method: DELETE
    data_selector: result
- name: rename_directory
  endpoint:
    path: /smbclient/rename/directory
    method: PUT
    data_selector: result
- name: list_contents
  endpoint:
    path: /smbclient/list/contents
    method: GET
    data_selector: contents
- name: delete_file
  endpoint:
    path: /smbclient/delete/file
    method: DELETE
    data_selector: result
- name: rename_file
  endpoint:
    path: /smbclient/rename/file
    method: PUT
    data_selector: result
- name: get_file
  endpoint:
    path: /smbclient/get/file
    method: GET
    data_selector: file
- name: put_file
  endpoint:
    path: /smbclient/put/file
    method: POST
    data_selector: result
- name: recursively_get_directory
  endpoint:
    path: /smbclient/recursively/get/directory
    method: GET
    data_selector: directory
- name: recursively_put_directory
  endpoint:
    path: /smbclient/recursively/put/directory
    method: POST
    data_selector: result
- name: recursively_delete_directory
  endpoint:
    path: /smbclient/recursively/delete/directory
    method: DELETE
    data_selector: result
- name: masscan_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /dns-enumeration
    method: GET
    data_selector: subdomains
    params: {}
- name: Port Scanning
  endpoint:
    path: /port-scanning
    method: GET
    data_selector: ports
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: os_detection
  endpoint:
    path: /os-detection
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: supported_protocols
- name: general_options
  endpoint:
    path: /dnsenum/options
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /dnsenum/google_scraping
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /dnsenum/brute_force
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /dnsenum/whois_netrange
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /dnsenum/reverse_lookup
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /dnsenum/output
    method: GET
    data_selector: options
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: data
    params: {}
- name: domain
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: records
    params: {}
- name: injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: records
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: 404
- name: packet_capture
  endpoint:
    path: /capture
    method: GET
    data_selector: packets
    params: {}
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: usage
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: records
- name: image_metadata
  endpoint:
    path: /image/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: commands
    params: {}
- name: cryptcat_usage
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: commands
    params: {}
- name: dbd_usage
  endpoint:
    path: /dbd
    method: GET
    data_selector: commands
    params: {}
- name: ncat_usage
  endpoint:
    path: /ncat
    method: GET
    data_selector: commands
    params: {}
- name: netwox_usage
  endpoint:
    path: /netwox
    method: GET
    data_selector: commands
    params: {}
- name: domains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
    params:
      input: domains
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: OWASP Amass
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /ssl_info
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: directory
  endpoint:
    path: /directory
    method: GET
    data_selector: directory
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: port_scan
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: records
    params:
      domain: DOMAIN
- name: urlcrazy
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
- name: gobuster_directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      extensions: inc
- name: gobuster_fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: user_enum
  endpoint:
    path: /
    method: VRFY
    data_selector: scan_information
    params:
      mode: VRFY
      usernames_file: users.txt
      target_tcp_port: 25
      query_timeout: 5
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
    data_selector: screenshot_results
    params: {}
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: all
    params: {}
- name: cewl
  endpoint:
    path: /cewl
    method: GET
    data_selector: all
    params: {}
- name: changeme
  endpoint:
    path: /changeme
    method: GET
    data_selector: all
    params: {}
- name: crowbar
  endpoint:
    path: /crowbar
    method: GET
    data_selector: all
    params: {}
- name: crunch
  endpoint:
    path: /crunch
    method: GET
    data_selector: all
    params: {}
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: all
    params: {}
- name: subdomains
  endpoint:
    path: /v1/subdomains
    method: GET
    data_selector: subdomains
    params: {}
- name: password_analysis_tool
  endpoint:
    path: /path/to/password/analysis/tool
    method: N/A
    data_selector: N/A
    params: {}
- name: header_information
  endpoint:
    path: /finalrecon/headers
    method: GET
    data_selector: headers
- name: ssl_certificate_information
  endpoint:
    path: /finalrecon/sslinfo
    method: GET
    data_selector: ssl_info
- name: whois_lookup
  endpoint:
    path: /finalrecon/whois
    method: GET
    data_selector: whois_info
- name: dns_enumeration
  endpoint:
    path: /finalrecon/dns
    method: GET
    data_selector: dns_info
- name: sub_domain_enumeration
  endpoint:
    path: /finalrecon/sub
    method: GET
    data_selector: subdomains
- name: directory_search
  endpoint:
    path: /finalrecon/dir
    method: GET
    data_selector: directory_results
- name: port_scan
  endpoint:
    path: /finalrecon/ps
    method: GET
    data_selector: port_scan_results
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: results
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: results
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: results
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: results
- name: jsql_injection
  endpoint:
    path: /jsql/injection
    method: GET
    data_selector: results
- name: nikto
  endpoint:
    path: /nikto
    method: GET
    data_selector: results
- name: user_check
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      method: VRFY
      timeout: 5
- name: ftp_login
  endpoint:
    path: /ftp/login
    method: GET
- name: ssh_login
  endpoint:
    path: /ssh/login
    method: GET
- name: telnet_login
  endpoint:
    path: /telnet/login
    method: GET
- name: smtp_login
  endpoint:
    path: /smtp/login
    method: GET
- name: smtp_vrfy
  endpoint:
    path: /smtp/vrfy
    method: GET
- name: smtp_rcpt
  endpoint:
    path: /smtp/rcpt
    method: GET
- name: finger_lookup
  endpoint:
    path: /finger/lookup
    method: GET
- name: http_fuzz
  endpoint:
    path: /http/fuzz
    method: GET
- name: rdp_gateway
  endpoint:
    path: /rdp/gateway
    method: GET
- name: ajp_fuzz
  endpoint:
    path: /ajp/fuzz
    method: GET
- name: pop_login
  endpoint:
    path: /pop/login
    method: GET
- name: pop_passd
  endpoint:
    path: /pop/passd
    method: GET
- name: imap_login
  endpoint:
    path: /imap/login
    method: GET
- name: ldap_login
  endpoint:
    path: /ldap/login
    method: GET
- name: dcom_login
  endpoint:
    path: /dcom/login
    method: GET
- name: smb_login
  endpoint:
    path: /smb/login
    method: GET
- name: smb_lookupsid
  endpoint:
    path: /smb/lookupsid
    method: GET
- name: rlogin_login
  endpoint:
    path: /rlogin/login
    method: GET
- name: vmauthd_login
  endpoint:
    path: /vmauthd/login
    method: GET
- name: mssql_login
  endpoint:
    path: /mssql/login
    method: GET
- name: oracle_login
  endpoint:
    path: /oracle/login
    method: GET
- name: mysql_login
  endpoint:
    path: /mysql/login
    method: GET
- name: mysql_query
  endpoint:
    path: /mysql/query
    method: GET
- name: rdp_login
  endpoint:
    path: /rdp/login
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql/login
    method: GET
- name: vnc_login
  endpoint:
    path: /vnc/login
    method: GET
- name: dns_forward
  endpoint:
    path: /dns/forward
    method: GET
- name: dns_reverse
  endpoint:
    path: /dns/reverse
    method: GET
- name: snmp_login
  endpoint:
    path: /snmp/login
    method: GET
- name: ike_enum
  endpoint:
    path: /ike/enum
    method: GET
- name: unzip_pass
  endpoint:
    path: /unzip/pass
    method: GET
- name: keystore_pass
  endpoint:
    path: /keystore/pass
    method: GET
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher/pass
    method: GET
- name: umbraco_crack
  endpoint:
    path: /umbraco/crack
    method: GET
- name: tcp_fuzz
  endpoint:
    path: /tcp/fuzz
    method: GET
- name: dummy_test
  endpoint:
    path: /dummy/test
    method: GET
- name: vulnerabilities
  endpoint:
    path: /dvwa/vulnerabilities/sqli/
    method: GET
    data_selector: records
    params:
      id: '1'
- name: wordlist_extraction
  endpoint:
    path: /wordlist/extract
    method: POST
    data_selector: results
    params: {}
- name: chisel_server
  endpoint:
    path: /server
    method: OPTIONS
    data_selector: ''
    params: {}
- name: chisel_client
  endpoint:
    path: /client
    method: OPTIONS
    data_selector: ''
    params: {}
- name: bruteforcing
  endpoint:
    path: /brutespray
    method: GET
- name: tunnel
  endpoint:
    path: /tunnel
    method: POST
- name: hash
  endpoint:
    path: /hashid
    method: GET
    data_selector: hashes
    params: {}
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: redsocks
  endpoint:
    path: /redsocks
    method: GET
    data_selector: records
    params: {}
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: RUN
    data_selector: none
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: RUN
    data_selector: none
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
    data_selector: records
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
    params: {}
- name: file_upload
  endpoint:
    path: /
    method: POST
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: POST
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: POST
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: POST
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: POST
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: POST
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: POST
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: POST
- name: pop_login
  endpoint:
    path: /pop_login
    method: POST
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: POST
- name: imap_login
  endpoint:
    path: /imap_login
    method: POST
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: POST
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: POST
- name: smb_login
  endpoint:
    path: /smb_login
    method: POST
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: POST
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: POST
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: POST
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: POST
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: POST
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: POST
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: POST
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: POST
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: POST
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: POST
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: POST
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: POST
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: POST
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: POST
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: POST
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: POST
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: POST
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: POST
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: POST
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: POST
- name: embed
  endpoint:
    path: /embed
    method: POST
    data_selector: embedding_options
- name: extract
  endpoint:
    path: /extract
    method: POST
    data_selector: extracting_options
- name: info
  endpoint:
    path: /info
    method: GET
    data_selector: info_command_options
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: records
    params: {}
- name: Amap
  endpoint:
    path: /network/tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /network/tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /network/tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: server
  endpoint:
    path: /server
    method: GET
- name: client
  endpoint:
    path: /client
    method: GET
- name: target
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: SNMP Scanner
  endpoint:
    path: /braa
    method: GET
    data_selector: results
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params:
      timeout: 1000
      retries: 3
      warm_up_time: 2
- name: nbtscan
  endpoint:
    path: /nbtscan
    method: GET
    data_selector: results
    params:
      timeout: 1000
      verbose: true
- name: tundeep_config
  endpoint:
    path: /config
    method: GET
    data_selector: configurations
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: vuln_detection
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: server
  endpoint:
    path: /dnscat2-server
    method: POST
    data_selector: session
    params: {}
- name: client
  endpoint:
    path: /dnscat
    method: POST
    data_selector: session
    params: {}
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: protocols
    params: {}
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: modules
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: records
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
- name: darkstat
  endpoint:
    path: /darkstat
    method: GET
    data_selector: records
- name: dnschef
  endpoint:
    path: /dnschef
    method: GET
    data_selector: records
- name: ettercap
  endpoint:
    path: /ettercap
    method: GET
    data_selector: records
- name: PassDetective
  endpoint:
    path: /PassDetective/extract
    method: GET
- name: pspy
  endpoint:
    path: /pspy
    method: GET
- name: file_upload
  endpoint:
    path: /
    method: POST
- name: ntlm_authentication
  endpoint:
    path: /api/v1/auth/ntlm
    method: POST
    data_selector: response
- name: network_tools
  endpoint:
    path: /network/tools
    method: GET
    data_selector: tools
    params: {}
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: targets
- name: tcpick_usage
  endpoint:
    path: /tcpick/usage
    method: GET
    data_selector: usage
    params: {}
- name: tcpick_options
  endpoint:
    path: /tcpick/options
    method: GET
    data_selector: options
    params: {}
- name: network_protocols
  endpoint:
    path: /api/network_protocols
    method: GET
    data_selector: protocols
- name: Capture interface
  endpoint:
    path: /capture/interface
    method: GET
    data_selector: records
- name: Capture stop conditions
  endpoint:
    path: /capture/stop_conditions
    method: GET
    data_selector: records
- name: Capture output
  endpoint:
    path: /capture/output
    method: GET
    data_selector: records
- name: Input file
  endpoint:
    path: /input/file
    method: GET
    data_selector: records
- name: Processing
  endpoint:
    path: /processing
    method: GET
    data_selector: records
- name: Output
  endpoint:
    path: /output
    method: GET
    data_selector: records
- name: Diagnostic output
  endpoint:
    path: /diagnostic/output
    method: GET
    data_selector: records
- name: Miscellaneous
  endpoint:
    path: /miscellaneous
    method: GET
    data_selector: records
- name: capture_data
  endpoint:
    path: /capture
    method: GET
    data_selector: records
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
    params: {}
- name: packet_injection
  endpoint:
    path: /inject
    method: POST
    data_selector: injected_packets
    params: {}
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: output
    params: {}
- name: amass
  endpoint:
    path: /amass
    method: GET
    data_selector: output
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: output
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: output
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
- name: dnsenum
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: ''
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: ''
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: ''
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: ''
    params: {}
- name: domain_scan
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
    params:
      domain: example.com
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: OWASP Amass
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
    params: {}
- name: crawled_urls
  endpoint:
    path: /crawl
    method: GET
    data_selector: urls
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      domain: DOMAIN
- name: website_mirror
  endpoint:
    path: /
    method: GET
    data_selector: files
    params: {}
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: cloud_resources
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: resources
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions:
      - inc
      wordlist: words.txt
      threads: 10
      timeout: 10
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
    params: {}
- name: subdomain_discovery
  endpoint:
    path: /subdomain_discovery
    method: GET
    data_selector: subdomains
- name: subdomain_enumeration
  endpoint:
    path: /subdomain-enumeration
    method: GET
    data_selector: records
- name: dns_information
  endpoint:
    path: /dns-information
    method: GET
    data_selector: records
- name: ssl_certificate_info
  endpoint:
    path: /ssl-certificate-info
    method: GET
    data_selector: records
- name: whois_lookup
  endpoint:
    path: /whois-lookup
    method: GET
    data_selector: records
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool/audio
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool/document
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool/epub
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: reports
- name: scan_results
  endpoint:
    path: /scan/results
    method: GET
    data_selector: results
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: davtest_operations
  endpoint:
    path: /davtest
    method: GET
    data_selector: results
- name: dav_operations
  endpoint:
    path: /davtest
    method: GET
- name: nikto_scan
  endpoint:
    path: /
    method: GET
    data_selector: host
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
    params: {}
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      user: user@example.com
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: results
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: records
    params:
      id: '1'
- name: weevely_commands
  endpoint:
    path: /weevely/commands
    method: GET
    data_selector: commands
    params: {}
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      max_processes: 5
      mode: VRFY
      timeout: 5
- name: directory_exploration
  endpoint:
    path: /FUZZ
    method: GET
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: brutespray
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: ffuf
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: sfuzz
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: wfuzz
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: wordlist_generator
  endpoint:
    path: /generate/wordlist
    method: POST
    data_selector: output
    params:
      incremental: enabled
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: POST
- name: pop_login
  endpoint:
    path: /pop_login
    method: POST
- name: imap_login
  endpoint:
    path: /imap_login
    method: POST
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: records
- name: markov_numbers
  endpoint:
    path: /markov-numbers.txt
    method: GET
    data_selector: records
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
- name: global_socket
  endpoint:
    path: /gs-netcat
    method: GET
- name: iodine
  endpoint:
    path: /iodined
    method: GET
- name: phishing_page
  endpoint:
    path: /ssdp/present.html
    method: GET
    data_selector: response
- name: device_descriptor
  endpoint:
    path: /ssdp/device-desc.xml
    method: GET
    data_selector: response
- name: service_descriptor
  endpoint:
    path: /ssdp/service-desc.xml
    method: GET
    data_selector: response
- name: tunnel
  endpoint:
    path: /tunnel
    method: POST
    data_selector: session
    params:
      password: hello
- name: chisel_server
  endpoint:
    path: /server
    method: GET
    data_selector: options
- name: chisel_client
  endpoint:
    path: /client
    method: GET
    data_selector: options
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
    data_selector: resources
    params: {}
- name: gs-netcat
  endpoint:
    path: /gs-netcat
    method: GET
    data_selector: resources
    params: {}
- name: server
  endpoint:
    path: /dnscat2-server
    method: POST
    data_selector: response
    params: {}
- name: client
  endpoint:
    path: /dnscat
    method: POST
    data_selector: response
    params: {}
- name: server
  endpoint:
    path: /ligolo-proxy
    method: POST
    data_selector: response
    params:
      certfile: certs/cert.pem
      keyfile: certs/key.pem
- name: agent
  endpoint:
    path: /ligolo-agent
    method: POST
    data_selector: response
    params:
      connect: 192.168.11.3:11601
- name: proxify_logs
  endpoint:
    path: /proxify_logs
    method: GET
    data_selector: logs
- name: merlinAgent
  endpoint:
    path: /merlinAgent
    method: GET
    data_selector: records
- name: merlinCLI
  endpoint:
    path: /merlinCLI
    method: GET
    data_selector: records
- name: merlinServer
  endpoint:
    path: /merlinServer
    method: GET
    data_selector: records
- name: redsocks_configuration
  endpoint:
    path: /redsocks/configuration
    method: GET
    data_selector: records
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: generate_payload
  endpoint:
    path: /generate
    method: POST
    data_selector: payload
- name: file_upload
  endpoint:
    path: /
    method: POST
    data_selector: file
    params: {}
- name: dnscat2-server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: output
    params: {}
- name: dnscat-client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: output
    params: {}
- name: steghide_usage
  endpoint:
    path: /steghide/usage
    method: GET
    data_selector: usage_info
- name: stegseek_usage
  endpoint:
    path: /stegseek/usage
    method: GET
    data_selector: usage_info
- name: agent
  endpoint:
    path: /agent
    method: POST
    data_selector: agent_data
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: hosts
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
    params: {}
- name: sessions
  endpoint:
    path: /sessions
    method: GET
- name: file_upload
  endpoint:
    path: /upload
    method: POST
    data_selector: file
- name: usage
  endpoint:
    path: autorecon --help
    method: GET
    data_selector: usage
    params: {}
- name: snmp_query
  endpoint:
    path: /snmp_query
    method: GET
    data_selector: results
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: protocol_info
    params: {}
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: processing_info
    params: {}
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: hosts
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: GET
    data_selector: packets
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: sessions
    params: {}
- name: darkstat
  endpoint:
    path: /darkstat
    method: GET
    data_selector: traffic
    params: {}
- name: dnschef
  endpoint:
    path: /dnschef
    method: GET
    data_selector: dns_records
    params: {}
- name: ettercap
  endpoint:
    path: /ettercap
    method: GET
    data_selector: mitm_attacks
    params: {}
- name: ntlm_auth
  endpoint:
    path: /ntlm_auth
    method: POST
    data_selector: response
    params: {}
- name: http_auth
  endpoint:
    path: /http_auth
    method: POST
    data_selector: response
    params: {}
- name: snmp_scanner
  endpoint:
    path: /braa
    method: GET
    data_selector: results
- name: packet_capture
  endpoint:
    path: /capture
    method: GET
    data_selector: packets
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: records
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: records
    params: {}
- name: port_scan
  endpoint:
    path: /nmap/port_scan
    method: GET
    data_selector: results
- name: service_detection
  endpoint:
    path: /nmap/service_detection
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /nmap/vulnerability_scan
    method: GET
    data_selector: results
- name: protocol_detection
  endpoint:
    path: /protocols/detect
    method: GET
    data_selector: detected_protocols
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /services/data/vXX.X/sobjects/Shares
    method: GET
    data_selector: shares
    params: {}
- name: capture_data
  endpoint:
    path: /capture
    method: GET
    data_selector: records
- name: application_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: records
- name: hexinject_usage
  endpoint:
    path: /hexinject/usage
    method: GET
    data_selector: usage_info
- name: intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
- name: enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: records
- name: http_request
  endpoint:
    path: /
    method: GET
    data_selector: HTTP/1.1 200 OK
- name: tcp_packets
  endpoint:
    path: /tcp_packets
    method: GET
    data_selector: packets
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
    params: {}
- name: dnsgen
  endpoint:
    path: /dnsgen
    method: GET
    data_selector: records
    params: {}
- name: dnsrecon
  endpoint:
    path: /dnsrecon
    method: GET
    data_selector: records
    params: {}
- name: dnstracer
  endpoint:
    path: /dnstracer
    method: GET
    data_selector: records
    params: {}
- name: dnstwist
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /dns-records
    method: GET
    data_selector: records
    params: {}
- name: configuration_options
  endpoint:
    path: /ftest/configuration
    method: GET
    data_selector: configuration
    params: {}
- name: timing_options
  endpoint:
    path: /ftest/timing
    method: GET
    data_selector: timing
    params: {}
- name: evasion_options
  endpoint:
    path: /ftest/evasion
    method: GET
    data_selector: evasion
    params: {}
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      negative_status_codes: '404'
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: url
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
- name: Amass
  endpoint:
    path: /amass
    method: GET
    data_selector: results
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: eyewitness
  endpoint:
    path: eyewitness
    method: GET
- name: getallurls
  endpoint:
    path: getallurls
    method: GET
- name: goofile
  endpoint:
    path: goofile
    method: GET
- name: gowitness
  endpoint:
    path: gowitness
    method: GET
- name: crawl
  endpoint:
    path: /
    method: GET
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: screenshot
  endpoint:
    path: /scan/single
    method: GET
    data_selector: results
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /ssl_info
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: subdomains
  endpoint:
    path: /v1/subdomains
    method: GET
    data_selector: subdomains
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: subdomain_enumeration
  endpoint:
    path: /subdomain/enumeration
    method: GET
    data_selector: results
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
- name: ident_user_enum
  endpoint:
    path: /ident-user-enum
    method: GET
    data_selector: response
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: GET
    data_selector: results
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
    params: {}
- name: smtp_check
  endpoint:
    path: /smtp/check
    method: GET
    data_selector: results
    params: {}
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      user_file: users.txt
      target: 192.168.11.4
      port: 25
      timeout: 5
- name: user_enum
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params: {}
- name: scan
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: results
    params:
      id: '1'
- name: sqlmap
  endpoint:
    path: /dvwa/vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: wafw00f
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: wapiti
  endpoint:
    path: /dvwa/
    method: GET
    data_selector: results
    params: {}
- name: webacoo
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: results
    params: {}
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: POST
    data_selector: output
    params: {}
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params: {}
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: ''
    params: {}
- name: brutespray
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: brutespray_usage
  endpoint:
    path: /brutespray/help
    method: GET
    data_selector: usage
- name: login_authentication
  endpoint:
    path: /login/authenticate
    method: POST
    data_selector: results
    params: {}
- name: maskprocessor
  endpoint:
    path: /mp64
    method: GET
    data_selector: records
- name: medusa
  endpoint:
    path: /medusa
    method: GET
    data_selector: records
- name: ncrack
  endpoint:
    path: /ncrack
    method: GET
    data_selector: records
- name: ncrack_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage_examples
- name: statsgen_usage
  endpoint:
    path: /statsgen
    method: GET
    data_selector: usage_examples
- name: maskgen_usage
  endpoint:
    path: /maskgen
    method: GET
    data_selector: usage_examples
- name: policygen_usage
  endpoint:
    path: /policygen
    method: GET
    data_selector: usage_examples
- name: rulegen_usage
  endpoint:
    path: /rulegen
    method: GET
    data_selector: usage_examples
- name: rsmangler
  endpoint:
    path: /rsmangler
    method: POST
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: records
    params: {}
- name: chisel_server
  endpoint:
    path: /server
    method: OPTIONS
- name: chisel_client
  endpoint:
    path: /client
    method: OPTIONS
- name: wordlist
  endpoint:
    path: /wordlist
    method: POST
    data_selector: results
    params: {}
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: OPTIONS
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: OPTIONS
- name: server
  endpoint:
    path: /server/start
    method: POST
- name: client
  endpoint:
    path: /client/start
    method: POST
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
    data_selector: resources
    params:
      incremental: key
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: tunnel
  endpoint:
    path: /tunnel
    method: POST
    data_selector: response
    params:
      password: hello
- name: http_proxy
  endpoint:
    path: /
    method: GET
- name: socks5_proxy
  endpoint:
    path: /
    method: GET
- name: tundeep
  endpoint:
    path: /help
    method: GET
- name: bi-address
  endpoint:
    path: <bi-address>
    method: OPTIONS
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: session
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: session
    params: {}
- name: dnscat2-server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: ''
    params: {}
- name: dnscat
  endpoint:
    path: /dnscat
    method: GET
    data_selector: ''
    params: {}
- name: agent
  endpoint:
    path: /merlinAgent
    method: POST
- name: server
  endpoint:
    path: /merlinServer
    method: GET
- name: cli
  endpoint:
    path: /merlinCLI
    method: GET
- name: team_server
  endpoint:
    path: /team_server
    method: GET
- name: reverse_tcp_multi_handler
  endpoint:
    path: /reverse_tcp_multi_handler
    method: GET
- name: hoaxshell_multi_handler
  endpoint:
    path: /hoaxshell_multi_handler
    method: GET
- name: http_file_smuggler
  endpoint:
    path: /http_file_smuggler
    method: GET
- name: generate_payload
  endpoint:
    path: /generate
    method: POST
    data_selector: payload
    params:
      os: linux
      mtls: 192.168.11.3:8888
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: records
    params: {}
- name: PassDetective
  endpoint:
    path: /PassDetective
    method: GET
    data_selector: records
    params: {}
- name: pspy
  endpoint:
    path: /pspy
    method: GET
    data_selector: records
    params: {}
- name: Raven
  endpoint:
    path: /Raven
    method: GET
    data_selector: records
    params: {}
- name: Steghide
  endpoint:
    path: /Steghide
    method: GET
    data_selector: records
    params: {}
- name: Stegseek
  endpoint:
    path: /Stegseek
    method: GET
    data_selector: records
    params: {}
- name: SNOW
  endpoint:
    path: /SNOW
    method: GET
    data_selector: records
    params: {}
- name: PassDetective
  endpoint:
    path: /PassDetective
    method: GET
    data_selector: commands
    params: {}
- name: pspy
  endpoint:
    path: /pspy
    method: GET
    data_selector: commands
    params: {}
- name: Raven
  endpoint:
    path: /raven
    method: GET
    data_selector: commands
    params: {}
- name: Steghide
  endpoint:
    path: /steghide
    method: GET
    data_selector: commands
    params: {}
- name: Stegseek
  endpoint:
    path: /stegseek
    method: GET
    data_selector: commands
    params: {}
- name: Amap
  endpoint:
    path: /kali-tools/amap
    method: GET
    data_selector: usage
- name: arp-scan
  endpoint:
    path: /kali-tools/arp-scan
    method: GET
    data_selector: usage
- name: ARPing
  endpoint:
    path: /kali-tools/arping
    method: GET
    data_selector: usage
- name: targets
  endpoint:
    path: /autorecon/targets
    method: GET
    data_selector: records
- name: reports
  endpoint:
    path: /autorecon/reports
    method: GET
    data_selector: records
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: ''
    params: {}
- name: SNMP
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: masscan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: network_protocols
  endpoint:
    params: {}
- name: sniffing
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
    params:
      filter: arp
- name: injection
  endpoint:
    path: /inject
    method: POST
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: service_detection
  endpoint:
    path: /service_detection
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: snmp_packet
  endpoint:
    path: /snmp
    method: GET
    data_selector: records
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: output
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: usage
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: usage
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: usage
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: usage
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: list_shares
  endpoint:
    path: /smb/shares
    method: GET
    data_selector: shares
    params: {}
- name: subdomains
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
- name: whois_info
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params: {}
- name: OWASP Amass
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: subdomains
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: DNS information
    params: {}
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: general_options
  endpoint:
    path: /options/general
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /options/google_scraping
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /options/brute_force
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /options/whois_netrange
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /options/reverse_lookup
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /options/output
    method: GET
    data_selector: options
    params: {}
- name: domain
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
    params: {}
- name: directory_search
  endpoint:
    path: /includes
    method: GET
    data_selector: results
    params:
      threads: 10
      timeout: 10
- name: fuzz_search
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: 404
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: urls
  endpoint:
    path: /urls
    method: GET
    data_selector: urls
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
      threads: 50
      timeout: 7
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: 404
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
    params: {}
- name: metadata
  endpoint:
    path: /
    method: GET
    data_selector: metadata
    params: {}
- name: cloud_service_resources
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: resources
- name: screenshot
  endpoint:
    path: /screenshot
    method: POST
    data_selector: result
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: reports
- name: scan
  endpoint:
    path: /scan
    method: POST
    data_selector: scan_results
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: subdomain_discovery
  endpoint:
    path: /subdomain_discovery
    method: GET
    data_selector: results
- name: subdomains
  endpoint:
    path: /api/v1/subdomains
    method: GET
    data_selector: subdomains
- name: subdomain
  endpoint:
    path: /subdomains
    method: GET
    data_selector: records
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params:
      type: user
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: reports
    params: {}
- name: fragrouter
  endpoint:
    path: /fragrouter
    method: GET
    data_selector: usage
    params: {}
- name: getsploit
  endpoint:
    path: /getsploit
    method: GET
    data_selector: exploits
    params: {}
- name: humble
  endpoint:
    path: /humble
    method: GET
    data_selector: analysis
    params: {}
- name: ident-user-enum
  endpoint:
    path: /ident-user-enum
    method: GET
    data_selector: user_info
    params: {}
- name: iSMTP
  endpoint:
    path: /iSMTP
    method: GET
    data_selector: smtp_tests
    params: {}
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      max_processes: 5
      port: 25
      timeout: 5
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: GET
    data_selector: results
    params:
      enumeration_type: '2'
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
    params: {}
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: records
    params:
      id: '1'
- name: username_check
  endpoint:
    path: /
    method: POST
    data_selector: usernames
    params:
      mode: VRFY
      max_processes: 5
      port: 25
      timeout: 5
- name: sql_injection_check
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: records
    params:
      id: '1'
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
- name: cewl
  endpoint:
    path: /cewl
    method: GET
- name: changeme
  endpoint:
    path: /changeme
    method: GET
- name: crowbar
  endpoint:
    path: /crowbar
    method: GET
- name: crunch
  endpoint:
    path: /crunch
    method: GET
- name: hashID
  endpoint:
    path: /hashid
    method: GET
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: session
    params: {}
- name: hash_analysis
  endpoint:
    path: /hashid
    method: GET
    data_selector: results
- name: fuzzing_test
  endpoint:
    path: /FUZZ
    method: GET
- name: brute_force_services
  endpoint:
    path: /services/brutespray
    method: GET
    data_selector: services
    params: {}
- name: maskprocessor
  endpoint:
    path: /help
    method: GET
- name: ftp_login
- name: ssh_login
- name: telnet_login
- name: smtp_login
- name: smtp_vrfy
- name: smtp_rcpt
- name: finger_lookup
- name: http_fuzz
- name: rdp_gateway
- name: ajp_fuzz
- name: pop_login
- name: pop_passd
- name: imap_login
- name: ldap_login
- name: dcom_login
- name: smb_login
- name: smb_lookupsid
- name: rlogin_login
- name: vmauthd_login
- name: mssql_login
- name: oracle_login
- name: mysql_login
- name: mysql_query
- name: rdp_login
- name: pgsql_login
- name: vnc_login
- name: dns_forward
- name: dns_reverse
- name: snmp_login
- name: ike_enum
- name: unzip_pass
- name: keystore_pass
- name: sqlcipher_pass
- name: umbraco_crack
- name: tcp_fuzz
- name: dummy_test
- name: wordlist_extraction
  endpoint:
    path: wordlistraider
    method: GET
    data_selector: ''
    params: {}
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: GET
    data_selector: options
    params: {}
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: GET
    data_selector: options
    params: {}
- name: tunnel
  endpoint:
    path: /tunnel
    method: POST
- name: products
  endpoint:
    path: /products
    method: POST
    data_selector: id
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: records
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: records
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: records
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: records
    params: {}
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
    data_selector: records
    params: {}
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
    data_selector: records
    params: {}
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
    data_selector: records
    params: {}
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
    data_selector: records
    params: {}
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
    data_selector: records
    params: {}
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
    data_selector: records
    params: {}
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
    data_selector: records
    params: {}
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
    data_selector: records
    params: {}
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
    data_selector: records
    params: {}
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
    data_selector: records
    params: {}
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
    data_selector: records
    params: {}
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
    data_selector: records
    params: {}
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
    data_selector: records
    params: {}
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
    data_selector: records
    params: {}
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
    data_selector: records
    params: {}
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
    data_selector: records
    params: {}
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
    data_selector: records
    params: {}
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
    data_selector: records
    params: {}
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
    data_selector: records
    params: {}
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
    data_selector: records
    params: {}
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
    data_selector: records
    params: {}
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
    data_selector: records
    params: {}
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
    data_selector: records
    params: {}
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
    data_selector: records
    params: {}
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
    data_selector: records
    params: {}
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
    data_selector: records
    params: {}
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
    data_selector: records
    params: {}
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
    data_selector: records
    params: {}
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
    data_selector: records
    params: {}
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
    data_selector: records
    params: {}
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
    data_selector: records
    params: {}
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
    data_selector: records
    params: {}
- name: dnscat2_server
  endpoint:
    path: /dnscat2/server
    method: GET
    data_selector: records
- name: dnscat_client
  endpoint:
    path: /dnscat/client
    method: GET
    data_selector: records
- name: merlinAgent
  endpoint:
    path: /merlinAgent
    method: GET
    data_selector: data
- name: tunnel
  endpoint:
    path: /tunnel
    method: POST
    data_selector: tunnel_info
- name: redsocks
  endpoint:
    path: /redsocks
    method: GET
    data_selector: output
    params: {}
- name: team_server
  endpoint:
    path: /team
    method: POST
    data_selector: session
    params:
      port: 6501
- name: reverse_tcp_handler
  endpoint:
    path: /reverse_tcp
    method: POST
    data_selector: session
    params:
      port: 4443
- name: hoax_shell_handler
  endpoint:
    path: /hoax_shell
    method: POST
    data_selector: session
    params:
      port: 8080
- name: http_file_smuggler
  endpoint:
    path: /file_smuggler
    method: POST
    data_selector: session
    params:
      port: 8888
- name: TCP4-LISTEN
  endpoint:
    path: TCP4-LISTEN:80,fork
    method: GET
    data_selector: response
- name: TCP4-CONNECT
  endpoint:
    path: TCP4-CONNECT:example.com:80
    method: GET
    data_selector: response
- name: outguess_usage
  endpoint:
    path: outguess
    method: GET
    data_selector: usage
    params: {}
- name: PassDetective
  endpoint:
    path: PassDetective
    method: GET
    data_selector: commands
    params: {}
- name: pspy
  endpoint:
    path: pspy
    method: GET
    data_selector: commands
    params: {}
- name: Raven
  endpoint:
    path: raven
    method: GET
    data_selector: commands
    params: {}
- name: Steghide
  endpoint:
    path: steghide
    method: GET
    data_selector: commands
    params: {}
- name: Stegseek
  endpoint:
    path: stegseek
    method: GET
    data_selector: commands
    params: {}
- name: SNOW
  endpoint:
    path: stegsnow
    method: GET
    data_selector: commands
    params: {}
- name: server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: server_info
    params: {}
- name: client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: client_info
    params: {}
- name: ext4magic
  endpoint:
    path: /ext4magic
    method: GET
    data_selector: records
    params: {}
- name: autopsy
  endpoint:
    path: /autopsy
    method: GET
    data_selector: records
    params: {}
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
    data_selector: records
    params: {}
- name: network_tools
  endpoint:
    path: /api/network_tools
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /api/arp_scan
    method: GET
    data_selector: results
    params: {}
- name: merlinAgent
  endpoint:
    path: /agent
    method: POST
    data_selector: agentData
    params:
      incremental: last_checkin
- name: port_scan
  endpoint:
    path: /scans
    method: GET
    data_selector: results
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: scan
  endpoint:
    path: /masscan
    method: POST
    data_selector: results
    params: {}
- name: command_history
  endpoint:
    path: /api/command_history
    method: GET
    data_selector: history
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: network_sniffing
  endpoint:
    path: /above/network_sniffing
    method: GET
    data_selector: detected_protocols
    params: {}
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: POST
    data_selector: analysis_results
    params: {}
- name: scans
  endpoint:
    path: /scans
    method: GET
    data_selector: results
    params: {}
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
- name: sniffing_arp_packets
  endpoint:
    path: /hexinject/s -i eth0 -f 'arp'
    method: GET
    data_selector: arp_packets
    params: {}
- name: sniffing_http_requests
  endpoint:
    path: /hexinject/s -i eth0 -r
    method: GET
    data_selector: http_requests
    params: {}
- name: scan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: help
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: help
- name: network_recon
  endpoint:
    path: /network/recon
    method: GET
- name: http_proxy
  endpoint:
    path: /http/proxy
    method: POST
- name: arp_spoof
  endpoint:
    path: /arp/spoof
    method: POST
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
- name: network_filtering
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration_options
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: OWASP Amass
  endpoint:
    path: /amass
    method: GET
    data_selector: results
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: subdomains
    params: {}
- name: dns_records
  endpoint:
    path: /domain
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: subdomains
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: dns_records
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
- name: crawl
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      depth: 1
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: url
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: amazon_checks
  endpoint:
    path: /services/data/vXX.X/sobjects/AmazonChecks
    method: GET
    data_selector: results
    params: {}
- name: cloudbrute
  endpoint:
    path: /services/data/vXX.X/sobjects/CloudBrute
    method: GET
    data_selector: results
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_enum/services
    method: GET
    data_selector: resources
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: mp3_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: docx_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: records
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: records
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: subdomain
  endpoint:
    path: /
    method: GET
    data_selector: subdomains
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: results
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: results
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: results
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: response
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
    params:
      timeout: '10'
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params:
      enumeration_type: '2'
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
    params: {}
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: records
    params:
      dnsserver: 8.8.8.8
- name: username_check
  endpoint:
    path: /smtp/user/check
    method: GET
    data_selector: results
    params:
      mode: VRFY
      max_processes: 5
- name: sql_injection
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: payloads
    params:
      id: '1'
- name: user_enumeration
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: results
    params:
      mode: VRFY
      usernames_file: users.txt
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: target
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: results
    params:
      id: '1'
- name: ffuf
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
- name: sfuzz
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
- name: wfuzz
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
- name: hash_analysis
  endpoint:
    path: /hashid/analyze
    method: GET
    data_selector: analysis_result
- name: http
  endpoint:
    path: /medusa/http
    method: POST
- name: mysql
  endpoint:
    path: /medusa/mysql
    method: POST
- name: incremental
  endpoint:
    path: /incremental
    method: GET
    data_selector: records
    params: {}
- name: maskprocessor
  endpoint:
    path: /maskprocessor
    method: GET
    data_selector: records
    params: {}
- name: medusa
  endpoint:
    path: /medusa
    method: GET
    data_selector: records
    params: {}
- name: nth
  endpoint:
    path: /nth
    method: GET
    data_selector: records
    params: {}
- name: ncrack
  endpoint:
    path: /ncrack
    method: GET
    data_selector: records
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: records
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: records
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: records
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: records
    params: {}
- name: wordlist_extraction
  endpoint:
    path: /wordlist/extract
    method: POST
    data_selector: output
    params:
      min: 8
      max: 12
- name: chisel_server
  endpoint:
    path: /server
    method: GET
- name: chisel_client
  endpoint:
    path: /client
    method: GET
- name: wordlist
  endpoint:
    path: /wordlistraider
    method: GET
    data_selector: records
    params: {}
- name: chisel_server
  endpoint:
    path: /server
    method: GET
    data_selector: connections
- name: chisel_client
  endpoint:
    path: /client
    method: POST
    data_selector: tunnels
- name: server
  endpoint:
    path: /server/start
    method: POST
    data_selector: status
- name: client
  endpoint:
    path: /client/start
    method: POST
    data_selector: status
- name: proxy
  endpoint:
    path: /
    method: GET
- name: server
  endpoint:
    path: /server
    method: GET
    data_selector: info
    params: {}
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: records
- name: dnscat2-server
  endpoint:
    path: /dnscat2-server
    method: GET
- name: dnscat-client
  endpoint:
    path: /dnscat
    method: GET
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: commands
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: commands
    params: {}
- name: agent
  endpoint:
    path: /merlinAgent
    method: POST
- name: server
  endpoint:
    path: /merlinServer
    method: POST
- name: cli
  endpoint:
    path: /merlinCLI
    method: POST
- name: agent
  endpoint:
    path: /merlinAgent
    method: POST
    data_selector: results
- name: server
  endpoint:
    path: /merlinServer
    method: GET
    data_selector: status
- name: team_server
  endpoint:
    path: /team/server
    method: GET
    data_selector: sessions
    params: {}
- name: reverse_tcp_multi_handler
  endpoint:
    path: /reverse/tcp/multi-handler
    method: GET
    data_selector: sessions
    params: {}
- name: hoaxshell_multi_handler
  endpoint:
    path: /hoaxshell/multi-handler
    method: GET
    data_selector: sessions
    params: {}
- name: http_file_smuggler
  endpoint:
    path: /http/file/smuggler
    method: GET
    data_selector: sessions
    params: {}
- name: team_server
  endpoint:
    path: /
    method: GET
    data_selector: sessions
- name: reverse_tcp_multi_handler
  endpoint:
    path: /reverse_tcp
    method: GET
    data_selector: sessions
- name: hoaxshell_multi_handler
  endpoint:
    path: /hoaxshell
    method: GET
    data_selector: sessions
- name: http_file_smuggler
  endpoint:
    path: /file_smuggler
    method: GET
    data_selector: files
- name: outguess
  endpoint:
    path: outguess
    method: GET
    data_selector: records
    params: {}
- name: PassDetective
  endpoint:
    path: PassDetective
    method: GET
    data_selector: records
    params: {}
- name: pspy
  endpoint:
    path: pspy
    method: GET
    data_selector: records
    params: {}
- name: Raven
  endpoint:
    path: Raven
    method: GET
    data_selector: records
    params: {}
- name: Steghide
  endpoint:
    path: Steghide
    method: GET
    data_selector: records
    params: {}
- name: Stegseek
  endpoint:
    path: Stegseek
    method: GET
    data_selector: records
    params: {}
- name: SNOW
  endpoint:
    path: SNOW
    method: GET
    data_selector: records
    params: {}
- name: Xspy
  endpoint:
    path: Xspy
    method: GET
    data_selector: records
    params: {}
- name: forensics_tools
  endpoint:
    path: /forensics/tools
    method: GET
    data_selector: tools
    params: {}
- name: PassDetective
  endpoint:
    path: /PassDetective/extract
    method: GET
    data_selector: secrets
- name: pspy
  endpoint:
    path: /pspy
    method: GET
    data_selector: events
- name: Raven
  endpoint:
    path: /raven
    method: POST
    data_selector: uploads
- name: Steghide
  endpoint:
    path: /steghide
    method: POST
    data_selector: embedding
- name: Stegseek
  endpoint:
    path: /stegseek
    method: POST
    data_selector: cracking
- name: SNOW
  endpoint:
    path: /stegsnow
    method: POST
    data_selector: conceal
- name: Amap
  endpoint:
    path: /kali-tools/amap
    method: GET
    data_selector: usage_examples
- name: arp-scan
  endpoint:
    path: /kali-tools/arp-scan
    method: GET
    data_selector: usage_examples
- name: ARPing
  endpoint:
    path: /kali-tools/arping
    method: GET
    data_selector: usage_examples
- name: Network Tools
  endpoint:
    path: /network-tools
    method: GET
    data_selector: tools
    params: {}
- name: Amap
  endpoint:
    path: /network-tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /network-tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /network-tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params:
      ip: 192.168.11.0/24
      ports: 20-25
- name: port_scan
  endpoint:
    path: /autorecon/port_scan
    method: GET
    data_selector: results
- name: service_scan
  endpoint:
    path: /autorecon/service_scan
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader/help
    method: GET
    data_selector: help
    params: {}
- name: packet_sniffer
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: version_detection
  endpoint:
    path: /version
    method: GET
    data_selector: results
- name: vulnerability_detection
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
- name: packet_capture
  endpoint:
    path: /packets/capture
    method: POST
    data_selector: capture_results
- name: packets
  endpoint:
    path: /
    method: GET
    data_selector: packets
    params: {}
- name: chaosreader_usage
  endpoint:
    path: /chaosreader/help
    method: GET
    data_selector: usage
- name: ftest
  endpoint:
    path: /ftest
    method: GET
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: commands
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: commands
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: commands
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: commands
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: records
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: records
    params: {}
- name: general_options
  endpoint:
    path: /options/general
    method: GET
- name: google_scraping_options
  endpoint:
    path: /options/google
    method: GET
- name: brute_force_options
  endpoint:
    path: /options/brute_force
    method: GET
- name: whois_netrange_options
  endpoint:
    path: /options/whois_netrange
    method: GET
- name: reverse_lookup_options
  endpoint:
    path: /options/reverse_lookup
    method: GET
- name: output_options
  endpoint:
    path: /options/output
    method: GET
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
    params: {}
- name: domain_scan
  endpoint:
    path: /domain
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: domain_report
  endpoint:
    path: /domain/report
    method: GET
    data_selector: report
    params: {}
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params: {}
- name: whois_info
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
    params:
      whois: true
- name: dns_query
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: dns_records
    params: {}
- name: scan_directory
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      extensions: php,html
- name: fuzz
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: services
    params: {}
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: crawled_urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      depth: 1
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool/audio
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool/document
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool/epub
    method: GET
    data_selector: metadata
    params: {}
- name: crawl
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: reports
    params: {}
- name: cloud_enum_usage
  endpoint:
    path: /cloud_enum/help
    method: GET
    data_selector: help_info
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: header_info
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: image_metadata
  endpoint:
    path: /image/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /audio/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /document/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /epub/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: reports
- name: payload
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
    params:
      page: TRAVERSAL
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params: {}
- name: sql_injection
  endpoint:
    path: /sql/injection
    method: GET
    data_selector: results
    params: {}
- name: mx_check
  endpoint:
    path: /mx/check
    method: GET
    data_selector: results
    params: {}
- name: net_exec
  endpoint:
    path: /net/exec
    method: GET
    data_selector: results
    params: {}
- name: nikto_scan
  endpoint:
    path: /nikto/scan
    method: GET
    data_selector: results
    params: {}
- name: scan_info
  endpoint:
    path: /scan_information
    method: GET
    data_selector: scan_info
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: user_verification
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: results
    params:
      mode: VRFY
      usernames_file: users.txt
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: example_resource
  endpoint:
    path: /example/path
    method: GET
    data_selector: data
    params: {}
- name: sql_injection_test
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: records
    params:
      id: '1'
      Submit: Submit
- name: hash
  endpoint:
    path: /hash
    method: POST
    data_selector: hashes
    params: {}
- name: fuzzing_test
  endpoint:
    path: /FUZZ
    method: GET
- name: wordlist_generator
  endpoint:
    path: mp64
    method: GET
    data_selector: words
    params: {}
- name: hash_analysis
  endpoint:
    path: /hashid
    method: POST
    data_selector: results
- name: wordlist
  endpoint:
    path: /mp64
    method: GET
    data_selector: words
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: logs
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: logs
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: logs
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: logs
    params: {}
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
    data_selector: logs
    params: {}
- name: hashes
  endpoint:
    path: hashes.txt
    method: GET
    data_selector: ''
    params: {}
- name: server
  endpoint:
    path: /tunnel_ip
    method: POST
    params:
      password: hello
- name: client
  endpoint:
    path: /example.com
    method: POST
    params:
      password: hello
- name: proxy
  endpoint:
    path: /proxify
    method: GET
    data_selector: proxy_data
    params: {}
- name: network
  endpoint:
    path: /network/tundeep
    method: GET
    data_selector: records
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
- name: server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: domains
    params: {}
- name: client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: session
    params: {}
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: records
- name: agent
  endpoint:
    path: /agent
    method: POST
    data_selector: result
    params: {}
- name: listener
  endpoint:
    path: /listener
    method: POST
    data_selector: result
    params: {}
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
- name: global_socket
  endpoint:
    path: /gs-netcat
    method: GET
- name: iodine
  endpoint:
    path: /iodined
    method: GET
- name: dns_traffic
  endpoint:
    path: /dns
    method: GET
    data_selector: traffic
    params: {}
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: outguess_usage
  endpoint:
    path: /outguess/usage
    method: GET
    data_selector: usage_examples
- name: passdetective_usage
  endpoint:
    path: /passdetective/usage
    method: GET
    data_selector: usage_examples
- name: pspy_usage
  endpoint:
    path: /pspy/usage
    method: GET
    data_selector: usage_examples
- name: raven_usage
  endpoint:
    path: /raven/usage
    method: GET
    data_selector: usage_examples
- name: steghide_usage
  endpoint:
    path: /steghide/usage
    method: GET
    data_selector: usage_examples
- name: stegseek_usage
  endpoint:
    path: /stegseek/usage
    method: GET
    data_selector: usage_examples
- name: stegsnow_usage
  endpoint:
    path: /stegsnow/usage
    method: GET
    data_selector: usage_examples
- name: xspy_usage
  endpoint:
    path: /xspy/usage
    method: GET
    data_selector: usage_examples
- name: server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: default
    params: {}
- name: client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: default
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: GET
    data_selector: data
- name: server
  endpoint:
    path: /server
    method: GET
    data_selector: data
- name: xspy
  endpoint:
    path: /xspy
    method: GET
    data_selector: output
- name: autopsy
  endpoint:
    path: /autopsy
    method: GET
    data_selector: output
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
    data_selector: output
- name: dcfldd
  endpoint:
    path: /dcfldd
    method: GET
    data_selector: output
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: recover_files
  endpoint:
    path: /dd_rescue
    method: POST
    data_selector: output
    params: {}
- name: autopsy
  endpoint:
    path: /autopsy
    method: GET
    data_selector: results
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
    data_selector: results
- name: dcfldd
  endpoint:
    path: /dcfldd
    method: GET
    data_selector: results
- name: dd_rescue
  endpoint:
    path: /dd_rescue
    method: GET
    data_selector: results
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage_examples
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage_examples
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage_examples
- name: recover
  endpoint:
    path: /dev/loop0
    method: GET
    data_selector: recovered
    params:
      incremental: deleted_files
- name: autorecon
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: trivy
  endpoint:
    path: /trivy
    method: GET
    data_selector: scanning_commands
    params: {}
- name: nasty
  endpoint:
    path: /nasty
    method: GET
    data_selector: usage
    params: {}
- name: log2timeline
  endpoint:
    path: /log2timeline
    method: GET
    data_selector: records
    params: {}
- name: pinfo
  endpoint:
    path: /pinfo
    method: GET
    data_selector: records
    params: {}
- name: psort
  endpoint:
    path: /psort
    method: GET
    data_selector: records
    params: {}
- name: protocols
  endpoint:
    path: /above/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: tools
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: tools
    params: {}
- name: targets
  endpoint:
    path: targets
    method: GET
    data_selector: records
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: options
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: options
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: ''
    params: {}
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: commands
    params: {}
- name: list_shares
  endpoint:
    path: /services/data/vXX.X/sobjects/Shares
    method: GET
    data_selector: shares
    params: {}
- name: sniffing
  endpoint:
    path: /above
    method: GET
    data_selector: protocols
- name: analysis
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: modules
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: chaos_reader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
    params: {}
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      domain: DOMAIN
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: packets
    params: {}
- name: packet_injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: injected_packets
    params: {}
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
- name: ssldump
  endpoint:
    path: /ssldump
    method: GET
    data_selector: records
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: tcpick
  endpoint:
    path: /
    method: GET
    data_selector: tcp packets
- name: web_pages
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: GUI
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
    data_selector: results
- name: list_shares
  endpoint:
    path: /198
    method: GET
    data_selector: shares
- name: DNS Enumeration
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
- name: subdomain
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: domain
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: response_data
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: POST
    data_selector: results
    params:
      timeout: 10
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: results
- name: version
  endpoint:
    path: /version
    method: GET
    data_selector: results
- name: user_enum
  endpoint:
    path: /smtp/user_enum
    method: GET
    data_selector: results
    params:
      mode: VRFY
      max_processes: 5
      timeout: 5
- name: scan
  endpoint:
    path: /scan/single
    method: GET
    data_selector: results
- name: subdomain
  endpoint:
    path: /subdomain/discovery
    method: GET
    data_selector: results
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: records
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomain_list
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: results
    params: {}
- name: hash_analysis
  endpoint:
    path: /hashid
    method: GET
    data_selector: hashes
- name: password_cracking
  endpoint:
    path: /hashcat
    method: POST
    data_selector: results
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
    params: {}
- name: mask_generation
  endpoint:
    path: /mp64
    method: GET
    data_selector: output
    params: {}
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: POST
    data_selector: results
    params:
      enumeration_type: 2
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
    params: {}
- name: password_analysis
  endpoint:
    path: /passwords
    method: GET
    data_selector: statistics
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: POST
    data_selector: results
    params:
      host: 192.168.11.4
      user: FILE0
      password: FILE1
- name: user_enum
  endpoint:
    path: /
    method: GET
    data_selector: users
    params:
      mode: VRFY
      user_file: users.txt
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: wordlistraider
  endpoint:
    path: wordlistraider
    method: GET
    data_selector: usage
    params: {}
- name: sql_injection
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: results
    params:
      id: 1*
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
    data_selector: resources
    params: {}
- name: global_socket
  endpoint:
    path: /global_socket
    method: GET
    data_selector: connections
    params: {}
- name: server
  endpoint:
    path: /
    method: GET
    data_selector: none
    params: {}
- name: client
  endpoint:
    path: /
    method: GET
    data_selector: none
    params: {}
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: password_analysis_toolkit
  endpoint:
    path: /statsgen
    method: GET
    data_selector: options
    params: {}
- name: tcp_connection
  endpoint:
    path: /tcp
    method: POST
    data_selector: connection
    params: {}
- name: pg_sql_login
  endpoint:
    path: /patator/pgsql_login
    method: POST
    data_selector: results
    params:
      host: 192.168.11.4
      user: FILE0
      password: FILE1
- name: pdf_crack
  endpoint:
    path: /pdfcrack
    method: POST
    data_selector: results
    params:
      file: filename
- name: pipal
  endpoint:
    path: /pipal
    method: POST
    data_selector: results
    params:
      filename: FILENAME
- name: prince_processor
  endpoint:
    path: /princeprocessor
    method: POST
    data_selector: results
    params:
      wordlist: wordlist
- name: rling
  endpoint:
    path: /rling
    method: POST
    data_selector: results
    params:
      input: input
      output: output
- name: rs_mangler
  endpoint:
    path: /rsmangler
    method: POST
    data_selector: results
    params:
      file: wordlist.txt
- name: stats_processor
  endpoint:
    path: /sp64
    method: POST
    data_selector: results
    params:
      hcstat_file: hcstat-file
      filter_mask: filter-mask
- name: dnscat2-server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: sessions
- name: dnscat-client
  endpoint:
    path: /dnscat-client
    method: GET
    data_selector: commands
- name: wordlist
  endpoint:
    path: /wordlist/raid
    method: POST
    data_selector: results
    params:
      min: 8
      max: 12
- name: server
  endpoint:
    path: /ligolo-proxy
    method: GET
    data_selector: info
- name: agent
  endpoint:
    path: /ligolo-agent
    method: GET
    data_selector: info
- name: sessions
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: results
- name: payload
  endpoint:
    path: /api/payloads
    method: POST
    data_selector: results
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
    params: {}
- name: autopsy
  endpoint:
    path: /autopsy
    method: GET
    data_selector: records
    params: {}
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
    data_selector: records
    params: {}
- name: dcfldd
  endpoint:
    path: /dcfldd
    method: GET
    data_selector: records
    params: {}
- name: dd_rescue
  endpoint:
    path: /dd_rescue
    method: GET
    data_selector: records
    params: {}
- name: tundeep_usage
  endpoint:
    path: /help
    method: GET
    data_selector: usage
    params: {}
- name: recover
  endpoint:
    path: /dev/loop0
    method: GET
    data_selector: recovered
    params: {}
- name: server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: ''
    params: {}
- name: client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: ''
    params: {}
- name: hash
  endpoint:
    path: /hash
    method: POST
    data_selector: hash
- name: merlinAgent
  endpoint:
    path: /merlinAgent
    method: POST
    data_selector: response
    params: {}
- name: merlinCLI
  endpoint:
    path: /merlinCLI
    method: POST
    data_selector: response
    params: {}
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: log2timeline
  endpoint:
    path: /log2timeline
    method: GET
    data_selector: usage
    params: {}
- name: pinfo
  endpoint:
    path: /pinfo
    method: GET
    data_selector: usage
    params: {}
- name: psort
  endpoint:
    path: /psort
    method: GET
    data_selector: usage
    params: {}
- name: secrets
  endpoint:
    path: /extract
    method: GET
    data_selector: secrets
    params: {}
- name: Output Arguments
  endpoint:
    path: /output_arguments
    method: GET
    data_selector: arguments
    params: {}
- name: Output Format Arguments
  endpoint:
    path: /output_format_arguments
    method: GET
    data_selector: format_arguments
    params: {}
- name: profiling arguments
  endpoint:
    path: /profiling_arguments
    method: GET
    data_selector: profiling_arguments
    params: {}
- name: xspy_usage
  endpoint:
    path: /xspy/usage
    method: GET
- name: autopsy_usage
  endpoint:
    path: /autopsy/usage
    method: GET
- name: dc3dd_usage
  endpoint:
    path: /dc3dd/usage
    method: GET
- name: dcfldd_usage
  endpoint:
    path: /dcfldd/usage
    method: GET
- name: dd_rescue_usage
  endpoint:
    path: /dd_rescue/usage
    method: GET
- name: port_scan
  endpoint:
    path: /scan/port
    method: GET
    data_selector: results
- name: service_scan
  endpoint:
    path: /scan/service
    method: GET
    data_selector: results
- name: file_recovery
  endpoint:
    path: /dev/loop0
    method: GET
    data_selector: recovered
    params: {}
- name: backup_image
  endpoint:
    path: /backup.img
    method: POST
    data_selector: tasks
    params:
      storage_file: backup.plaso
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
    params: {}
- name: credential_bruteforcing_commands
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: results
    params: {}
- name: wordPress_security_scanner
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      no_update: true
      plugins_detection: aggressive
      plugins_version_detection: aggressive
- name: masscan
  endpoint:
    path: /masscan
    method: GET
    data_selector: results
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: results
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vuln_scan
    method: GET
    data_selector: results
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params:
      dst-ip: 5.6.7.8
      user: login
      password: password
      netbiosname: netbiosname
      device: Eth0
      src-ip: 192.168.11.3
      src-port: '0'
      dst-port: '139'
      authversion: '2'
      timeout: '60000'
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
    params: {}
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: output
    params: {}
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: output
    params: {}
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: output
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: output
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: output
    params: {}
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniif
    method: GET
    data_selector: packets
    params:
      filter: arp
- name: packet_injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: response
    params: {}
- name: general_options
  endpoint:
    path: /options/general
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /options/google_scraping
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /options/brute_force
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /options/whois_netrange
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /options/reverse_lookup
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /options/output
    method: GET
    data_selector: options
    params: {}
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: options
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: options
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: options
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      status_codes: '404'
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: client
  endpoint:
    path: /client
    method: GET
    data_selector: clients
    params: {}
- name: server
  endpoint:
    path: /server
    method: GET
    data_selector: servers
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: pings
    params: {}
- name: traceroute
  endpoint:
    path: /traceroute
    method: GET
    data_selector: traceroutes
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: scans
    params: {}
- name: certificates
  endpoint:
    path: /
    method: GET
    data_selector: certificates
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: services
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
- name: OWASP Amass
  endpoint:
    path: /amass
    method: GET
    data_selector: results
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
    data_selector: records
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
    params: {}
- name: scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: cloud_enum
  endpoint:
    path: --help
    method: GET
    data_selector: options
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
    params:
      timeout: 10
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
    params: {}
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
- name: headers_info
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: POST
    data_selector: results
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: results
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: results
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: results
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: records
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: response
- name: ffuf
  endpoint:
    path: /ffuf
    method: GET
- name: sfuzz
  endpoint:
    path: /sfuzz
    method: GET
- name: wfuzz
  endpoint:
    path: /wfuzz
    method: GET
- name: supported_services
  endpoint:
    path: /brutespray/supported_services
    method: GET
    data_selector: services
- name: brute_force_attempts
  endpoint:
    path: /brutespray/attempts
    method: POST
    data_selector: results
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
    params: {}
- name: mx_check
  endpoint:
    path: /mx/check
    method: GET
    data_selector: results
    params: {}
- name: jsql_injection
  endpoint:
    path: /jsql/injection
    method: GET
    data_selector: results
    params: {}
- name: net_exec
  endpoint:
    path: /net/exec
    method: GET
    data_selector: results
    params: {}
- name: nikto
  endpoint:
    path: /nikto
    method: GET
    data_selector: results
    params: {}
- name: hash_analysis
  endpoint:
    path: /analyze
    method: POST
    data_selector: result
- name: smtp_users
  endpoint:
    path: /smtp/user_enum
    method: GET
    data_selector: users
    params:
      user: ''
      address: user@example.com
      domain: ''
- name: SQL Injection Check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
    data_selector: records
    params:
      host: 192.168.11.4
      user: FILE0
      password: FILE1
- name: pdfcrack
  endpoint:
    path: /pdfcrack
    method: GET
    data_selector: records
    params:
      filename: sample.pdf
- name: pipal
  endpoint:
    path: /pipal
    method: GET
    data_selector: records
    params:
      FILENAME: rockyou.txt
- name: princeprocessor
  endpoint:
    path: /princeprocessor
    method: GET
    data_selector: records
    params:
      wordlist: wordlist.txt
- name: rling
  endpoint:
    path: /rling
    method: GET
    data_selector: records
    params:
      input: all-passwords.txt
      output: new-passwords.txt
- name: rsmangler
  endpoint:
    path: /rsmangler
    method: GET
    data_selector: records
    params:
      file: wordlist.txt
- name: statsprocessor
  endpoint:
    path: /statsprocessor
    method: GET
    data_selector: records
    params:
      hcstat-file: hcstat-file
- name: bruteforce_services
  endpoint:
    path: /brutespray/services
    method: GET
- name: wordlistraider
  endpoint:
    path: /wordlistraider
    method: GET
    data_selector: output
    params:
      min: 8
      max: 12
      numbers: 'true'
- name: increment
  endpoint:
    path: increment
    method: GET
    data_selector: records
- name: mask
  endpoint:
    path: mask
    method: GET
    data_selector: records
- name: custom_charset
  endpoint:
    path: custom_charset
    method: GET
    data_selector: records
- name: chisel_server
  endpoint:
    path: server
    method: GET
    data_selector: options
- name: chisel_client
  endpoint:
    path: client
    method: GET
    data_selector: options
- name: pg_login
  endpoint:
    path: /patator/pgsql_login
    method: POST
    data_selector: results
    params:
      host: 192.168.11.4
      user: FILE0
      password: FILE1
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: records
- name: proxify_logs
  endpoint:
    path: proxify_logs.jsonl
    method: GET
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: records
    params: {}
- name: tcp_connection
  endpoint:
    path: /tcp/connection
    method: GET
    data_selector: records
- name: network_tunneling
  endpoint:
    path: /tundeep
    method: GET
    data_selector: records
- name: server_options
  endpoint:
    path: /server/options
    method: GET
    data_selector: options
- name: client_options
  endpoint:
    path: /client/options
    method: GET
    data_selector: options
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
    data_selector: resources
- name: dnscat2-server
  endpoint:
    path: /dnscat2-server
    method: POST
- name: dnscat-client
  endpoint:
    path: /dnscat-client
    method: POST
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
- name: agent
  endpoint:
    path: /agent
    method: POST
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: extract
  endpoint:
    path: extract
    method: GET
    data_selector: result
    params: {}
- name: tundeep_usage
  endpoint:
    path: /tundeep/help
    method: GET
    data_selector: usage
    params: {}
- name: forensics_tools
  endpoint:
    path: /forensics/tools
    method: GET
    data_selector: tools
    params: {}
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: POST
    data_selector: response
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: POST
    data_selector: response
- name: hash_algorithm
  endpoint:
    path: /hash/algorithms
    method: GET
    data_selector: algorithms
- name: merlin_agent
  endpoint:
    path: /merlinAgent
    method: POST
- name: merlin_server
  endpoint:
    path: /merlinServer
    method: POST
- name: hash
  endpoint:
    path: /hash
    method: GET
    data_selector: records
    params: {}
- name: generate_payload
  endpoint:
    path: /generate
    method: POST
    data_selector: payload
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: active_sessions
- name: storage_file
  endpoint:
    path: --storage_file PATH
    method: GET
- name: output_format
  endpoint:
    path: --output_format FORMAT
    method: GET
- name: outguess_usage
  endpoint:
    path: /outguess/help
    method: GET
    data_selector: usage
- name: forensics_tools
  endpoint:
    path: /forensics/tools
    method: GET
    data_selector: tools
    params: {}
- name: network_tools
  endpoint:
    path: /tools/network
    method: GET
    data_selector: tools
    params: {}
- name: ext4magic_commands
  endpoint:
    path: /ext4magic/commands
    method: GET
    data_selector: commands
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: hash_calculation
  endpoint:
    path: /hashrat
    method: POST
- name: usage
  endpoint:
    path: /scalpel/usage
    method: GET
    data_selector: usage_info
- name: examples
  endpoint:
    path: /scalpel/examples
    method: GET
    data_selector: example_info
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: packet_capture
  endpoint:
    path: /capture/packets
    method: POST
    data_selector: capture_info
    params:
      timer: '120'
- name: image_scan
  endpoint:
    path: /image
    method: GET
    data_selector: results
- name: config_scan
  endpoint:
    path: /config
    method: GET
    data_selector: results
- name: filesystem_scan
  endpoint:
    path: /filesystem
    method: GET
    data_selector: results
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
- name: network_scanning_amap
  endpoint:
    path: /network/scanning/amap
    method: GET
    data_selector: usage_examples
    params: {}
- name: network_scanning_arp_scan
  endpoint:
    path: /network/scanning/arp-scan
    method: GET
    data_selector: usage_examples
    params: {}
- name: network_scanning_arping
  endpoint:
    path: /network/scanning/arping
    method: GET
    data_selector: usage_examples
    params: {}
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: POST
    data_selector: packet_data
- name: packet_injection
  endpoint:
    path: /inject
    method: POST
    data_selector: injection_result
- name: targets
  endpoint:
    path: /targets
    method: GET
- name: masscan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: configuration_options
  endpoint:
    path: /ftest/configuration
    method: GET
    data_selector: options
    params: {}
- name: timing_options
  endpoint:
    path: /ftest/timing
    method: GET
    data_selector: options
    params: {}
- name: evasion_options
  endpoint:
    path: /ftest/evasion
    method: GET
    data_selector: options
    params: {}
- name: connection_options
  endpoint:
    path: /ftest/connection
    method: GET
    data_selector: options
    params: {}
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: results
- name: os_detection
  endpoint:
    path: /os-detection
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vuln-scan
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: chaosreader
  endpoint:
    path: chaosreader
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params: {}
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: result
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: output
    params:
      input: subdomains.txt
      output: out.txt
      wordlist: words.txt
      resolve: true
      save: result.txt
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: domains
    params:
      domain: digital.go.jp
      whois: true
      config: config.yaml
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: output
    params:
      domain: digital.go.jp
      passive: true
      config: config.yaml
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: subdomains
    params:
      subs-only: true
- name: packet_capture
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: domain_scan
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: fuzz
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
- name: dir
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
- name: list_shares
  endpoint:
    path: /smb/shares
    method: GET
    data_selector: shares
    params: {}
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: url
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
    params: {}
- name: amass
  endpoint:
    path: /amass
    method: GET
    data_selector: results
    params: {}
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
    params: {}
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: ''
    params: {}
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: ''
    params: {}
- name: domain_scan
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: records
- name: urlcrazy_usage
  endpoint:
    path: /urlcrazy
    method: GET
    data_selector: results
    params: {}
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
- name: site_crawl
  endpoint:
    path: /
    method: GET
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: exif_metadata
  endpoint:
    path: /path/to/exif/metadata
    method: GET
    data_selector: records
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: smtp_enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: GET
    data_selector: results
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: results
    params: {}
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      max_processes: 5
      timeout: 5
- name: SQL Injection
  endpoint:
    path: /vulnerabilities/sqli
    method: GET
    params:
      id: '1'
- name: test_files
  endpoint:
    path: /davdir
    method: PUT
    data_selector: files
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
- name: fuzzer
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
    params: {}
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
    params: {}
- name: smtp_check
  endpoint:
    path: /smtp/check
    method: GET
    data_selector: results
    params: {}
- name: brutespray_usage
  endpoint:
    path: brutespray --help
    method: GET
    data_selector: usage
    params: {}
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      max_processes: 5
      timeout: 5
- name: scan
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params: {}
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: results
    params: {}
- name: hashcat
  endpoint:
    path: /hashcat
    method: GET
    data_selector: results
    params: {}
- name: hydra
  endpoint:
    path: /hydra
    method: GET
    data_selector: results
    params: {}
- name: john_the_ripper
  endpoint:
    path: /john_the_ripper
    method: GET
    data_selector: results
    params: {}
- name: increment
  endpoint:
    path: --increment=NUM:NUM
    method: GET
    data_selector: resources
    params: {}
- name: output-file
  endpoint:
    path: --output-file=FILE
    method: GET
    data_selector: resources
    params: {}
- name: custom-charset
  endpoint:
    path: --custom-charset1=CS
    method: GET
    data_selector: resources
    params: {}
- name: maskprocessor
  endpoint:
    path: /mp64
    method: GET
    data_selector: resources
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
    data_selector: results
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
    data_selector: results
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
    data_selector: results
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: POST
    data_selector: results
    params: {}
- name: server
  endpoint:
    path: /server
    method: GET
- name: client
  endpoint:
    path: /client
    method: GET
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
- name: proxify_logs
  endpoint:
    path: /proxify_logs
    method: GET
    data_selector: logs
- name: wordlistraider
  endpoint:
    path: /wordlistraider
    method: GET
    data_selector: records
    params: {}
- name: TCP4-LISTEN
  endpoint:
    path: /TCP4-LISTEN
    method: GET
    data_selector: records
    params: {}
- name: TCP4-CONNECT
  endpoint:
    path: /TCP4-CONNECT
    method: GET
    data_selector: records
    params: {}
- name: ssl_connection
  endpoint:
    path: /ssl_connection
    method: POST
    data_selector: connections
- name: server
  endpoint:
    path: /server
    method: GET
- name: client
  endpoint:
    path: /client
    method: GET
- name: server
  endpoint:
    path: /dnscat2-server
    method: HELP
    data_selector: commands
    params: {}
- name: client
  endpoint:
    path: /dnscat
    method: HELP
    data_selector: commands
    params: {}
- name: redsocks
  endpoint:
    path: /redsocks
    method: GET
    data_selector: data
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
    data_selector: agent_data
- name: sliver-server
  endpoint:
    path: /sliver-server
    method: GET
- name: sliver-client
  endpoint:
    path: /sliver-client
    method: GET
- name: network_tunneling
  endpoint:
    path: /help
    method: GET
    data_selector: usage
- name: agent
  endpoint:
    path: /merlinAgent
    method: GET
- name: server
  endpoint:
    path: /merlinServer
    method: GET
- name: autopsy
  endpoint:
    path: --help
    method: GET
    data_selector: options
    params: {}
- name: dc3dd
  endpoint:
    path: --help
    method: GET
    data_selector: options
    params: {}
- name: dcfldd
  endpoint:
    path: --help
    method: GET
    data_selector: options
    params: {}
- name: dd_rescue
  endpoint:
    path: --help
    method: GET
    data_selector: options
    params: {}
- name: sliver_server
  endpoint:
    path: /sliver/server
    method: POST
- name: sliver_client
  endpoint:
    path: /sliver/client
    method: POST
- name: recover
  endpoint:
    path: /dev/loop0
    method: GET
    data_selector: recovered
    params: {}
- name: Autopsy
  endpoint:
    path: /autopsy
    method: GET
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
- name: dcfldd
  endpoint:
    path: /dcfldd
    method: GET
- name: dd_rescue
  endpoint:
    path: /dd_rescue
    method: GET
- name: hash
  endpoint:
    path: /hashdeep
    method: GET
    data_selector: hashes
    params: {}
- name: hash_calculation
  endpoint:
    path: /hashdeep
    method: GET
    data_selector: hashes
    params: {}
- name: backup_image
  endpoint:
    path: backup.img
    method: POST
    data_selector: artifact_definitions
- name: event_sources
  endpoint:
    path: /safecopy/event_sources
    method: GET
    data_selector: records
- name: safecopy_usage
  endpoint:
    path: /safecopy/usage
    method: GET
    data_selector: records
- name: safecopy_usage
  endpoint:
    path: /safecopy/help
    method: GET
    data_selector: usage
    params: {}
- name: binwalk
  endpoint:
    path: /binwalk
    method: GET
    data_selector: results
    params: {}
- name: carved_files
  endpoint:
    path: /carve/files
    method: GET
    data_selector: files
    params: {}
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: network_tools
  endpoint:
    path: /network/tools
    method: GET
    data_selector: tools
- name: targets
  endpoint:
    path: /targets
    method: POST
    data_selector: results
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: credential_bruteforcing_commands
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: records
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vulnerability-scan
    method: GET
    data_selector: results
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params:
      timeout: 5
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: network_capture
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: captures
    params: {}
- name: protocols
  endpoint:
    path: /protocols
    method: GET
    data_selector: protocols
    params: {}
- name: packet_sniffer
  endpoint:
    path: /path/to/sniff/packets
    method: GET
    data_selector: records
- name: chaosreader_commands
  endpoint:
    path: /chaosreader/commands
    method: GET
    data_selector: commands
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: GUI
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: ''
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: ''
    params: {}
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: commands
    params: {}
- name: cryptcat_usage
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: commands
    params: {}
- name: dbd_usage
  endpoint:
    path: /dbd
    method: GET
    data_selector: commands
    params: {}
- name: ncat_usage
  endpoint:
    path: /ncat
    method: GET
    data_selector: commands
    params: {}
- name: netwox_usage
  endpoint:
    path: /netwox
    method: GET
    data_selector: commands
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: bettercap_usage
  endpoint:
    path: /usage/bettercap
    method: GET
    data_selector: usage
- name: cryptcat_usage
  endpoint:
    path: /usage/cryptcat
    method: GET
    data_selector: usage
- name: dbd_usage
  endpoint:
    path: /usage/dbd
    method: GET
    data_selector: usage
- name: ncat_usage
  endpoint:
    path: /usage/ncat
    method: GET
    data_selector: usage
- name: netwox_usage
  endpoint:
    path: /usage/netwox
    method: GET
    data_selector: usage
- name: list_shares
  endpoint:
    path: /smbclient/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: altdns
  endpoint:
    path: /altdns
    method: GET
- name: amass
  endpoint:
    path: /amass
    method: GET
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: records
- name: port_scan
  endpoint:
    path: /port/scan
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: subdomains
  endpoint:
    path: /dns/subdomains
    method: GET
    data_selector: subdomains
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /domain
    method: GET
    data_selector: records
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: crawl
  endpoint:
    path: /
    method: GET
- name: directory_listing
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: url
    params: {}
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: screenshot
  endpoint:
    path: /screenshot
    method: GET
    data_selector: reports
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: ''
    params: {}
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: records
    params: {}
- name: subdomain_enumeration
  endpoint:
    path: /subdomain/enumeration
    method: GET
    data_selector: results
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: status
- name: username_check
  endpoint:
    path: /
    method: VRFY
    data_selector: response
    params:
      timeout: 5
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: results
    params:
      mode: VRFY
      usernames_file: users.txt
      target_host: 192.168.11.4
      port: 25
      timeout: 5
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: parameters
    params:
      id: 1*
- name: weevely_commands
  endpoint:
    path: /weevely/commands
    method: GET
    data_selector: commands
    params: {}
- name: mask
  endpoint:
    path: /maskprocessor
    method: GET
- name: default_credentials
  endpoint:
    path: /brutespray/default_credentials
    method: GET
    data_selector: credentials
    params: {}
- name: hashcat
  endpoint:
    path: /hashcat
    method: GET
    data_selector: options
- name: hydra
  endpoint:
    path: /hydra
    method: GET
    data_selector: options
- name: john_the_ripper
  endpoint:
    path: /john
    method: GET
    data_selector: options
- name: maskprocessor
  endpoint:
    path: mp64
    method: GET
    data_selector: usage
    params: {}
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: hashes
    params: {}
- name: chisel_server_options
  endpoint:
    path: server
    method: GET
    data_selector: options
- name: chisel_client_options
  endpoint:
    path: client
    method: GET
    data_selector: options
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
- name: global_socket
  endpoint:
    path: /global_socket
    method: GET
- name: server
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: client
  endpoint:
    path: /
    method: GET
    data_selector: records
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
- name: proxy_requests
  endpoint:
    path: /proxy
    method: GET
- name: hashes
  endpoint:
    path: /hashes.txt
    method: GET
    data_selector: records
- name: server
  endpoint:
    path: /chisel/server
    method: GET
- name: client
  endpoint:
    path: /chisel/client
    method: GET
- name: TCP4-LISTEN
  endpoint:
    path: /TCP4-LISTEN:80,fork
    method: GET
    data_selector: response
    params: {}
- name: TCP4-CONNECT
  endpoint:
    path: /TCP4-CONNECT:example.com:80
    method: GET
    data_selector: response
    params: {}
- name: usage
  endpoint:
    path: /help
    method: GET
    data_selector: usage
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
- name: global_socket
  endpoint:
    path: /global_socket
    method: GET
- name: iodine
  endpoint:
    path: /iodine
    method: GET
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: help
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: help
    params: {}
- name: proxify_logs
  endpoint:
    path: /proxify_logs
    method: GET
- name: merlin_agent
  endpoint:
    path: /agent
    method: POST
    data_selector: data
    params: {}
- name: generate_payload
  endpoint:
    path: /generate
    method: POST
    data_selector: payload
    params: {}
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
    params: {}
- name: server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: session
    params: {}
- name: client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: command
    params: {}
- name: autopsy
  endpoint:
    path: /autopsy
    method: GET
    data_selector: records
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
    data_selector: records
- name: dcfldd
  endpoint:
    path: /dcfldd
    method: GET
    data_selector: records
- name: dd_rescue
  endpoint:
    path: /dd_rescue
    method: GET
    data_selector: records
- name: merlinAgent
  endpoint:
    path: /merlinAgent
    method: POST
    data_selector: data
    params: {}
- name: merlinServer
  endpoint:
    path: /merlinServer
    method: GET
    data_selector: data
    params: {}
- name: hash_calculation
  endpoint:
    path: /hashdeep
    method: GET
    data_selector: hash_results
- name: sessions
  endpoint:
    path: /sessions
    method: GET
- name: hash_calculation
  endpoint:
    path: /hashrat/calculate
    method: GET
    data_selector: hashes
    params: {}
- name: hash_check
  endpoint:
    path: /hashrat/check
    method: POST
    data_selector: results
    params: {}
- name: logs
  endpoint:
    path: /api/logs
    method: GET
    data_selector: logs
    params: {}
- name: backup
  endpoint:
    path: /log2timeline
    method: POST
    data_selector: tasks
    params:
      storage_file: backup.plaso
      input_file: backup.img
- name: autopsy
  endpoint:
    path: /autopsy
    method: GET
    data_selector: records
    params: {}
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
    data_selector: records
    params: {}
- name: dcfldd
  endpoint:
    path: /dcfldd
    method: GET
    data_selector: records
    params: {}
- name: dd_rescue
  endpoint:
    path: /dd_rescue
    method: GET
    data_selector: records
    params: {}
- name: safecopy
  endpoint:
    path: /safecopy
    method: POST
    data_selector: results
    params: {}
- name: filesystem_recovery
  endpoint:
    path: /dev/loop0
    method: GET
    data_selector: files
    params:
      recovery_type: all
- name: binwalk
  endpoint:
    path: /binwalk
    method: GET
    data_selector: results
- name: hash
  endpoint:
    path: /hashrat
    method: GET
    data_selector: hashes
    params: {}
- name: Network Scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: tools
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: tools
    params: {}
- name: target
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: backup
  endpoint:
    path: /dev/mapper/baddevice
    method: GET
    data_selector: files
    params: {}
- name: file_system
  endpoint:
    path: /services/data/vXX.X/sobjects/FileSystem
    method: GET
    data_selector: records
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: hosts
    params: {}
- name: port_scan
  endpoint:
    path: /nmap/port_scan
    method: GET
    data_selector: results
- name: vuln_scan
  endpoint:
    path: /nmap/vuln_scan
    method: GET
    data_selector: results
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: records
    params: {}
- name: protocol_detection
  endpoint:
    path: /above/protocols
    method: GET
    data_selector: protocols
- name: snmp_scan
  endpoint:
    path: /snmp/scan
    method: GET
    data_selector: results
- name: session_files
  endpoint:
    path: /create_session_files
    method: POST
    data_selector: session_files_created
- name: masscan
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: host_discovery
  endpoint:
    path: /nmap/host_discovery
    method: GET
    data_selector: results
- name: port_scan
  endpoint:
    path: /nmap/port_scan
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: records
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: records
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: records
    params: {}
- name: chaosreader_usage
  endpoint:
    path: /chaosreader/usage
    method: GET
    data_selector: records
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /inject
    method: POST
    data_selector: injections
- name: Capture interface
  endpoint:
    path: /capture/interface
    method: GET
    data_selector: interface
- name: Capture stop conditions
  endpoint:
    path: /capture/stop_conditions
    method: GET
    data_selector: stop_conditions
- name: Capture output
  endpoint:
    path: /capture/output
    method: GET
    data_selector: output
- name: Processing
  endpoint:
    path: /processing
    method: GET
    data_selector: processing
- name: Output
  endpoint:
    path: /output
    method: GET
    data_selector: output
- name: Diagnostic output
  endpoint:
    path: /diagnostic/output
    method: GET
    data_selector: diagnostic
- name: ssldump
  endpoint:
    path: /ssldump
    method: GET
    data_selector: records
    params: {}
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
    params: {}
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: commands
    params: {}
- name: list_shares
  endpoint:
    path: /list/shares
    method: GET
    data_selector: shares
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: ''
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: ''
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: ''
    params: {}
- name: altdns
  endpoint:
    path: /altdns
    method: GET
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
- name: FTester
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: Firewall Builder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: usage
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
    params: {}
- name: dns_records
  endpoint:
    path: /dns
    method: GET
    data_selector: records
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /services/data/vXX.X/sobjects/list_shares
    method: GET
    data_selector: records
    params: {}
- name: domains
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: records
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: domain_scan
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: records
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: cloud_service
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
- name: subdomain_check
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      query: '*.*****.jp'
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: file_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: target_url
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      negative_status_codes: 404
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: reports
- name: screenshot
  endpoint:
    path: /scan
    method: GET
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: results
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: File Size, File Type, MIME Type, Camera Model Name, Make
    params: {}
- name: getallurls
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: davtest_directory_creation
  endpoint:
    path: /uploads/DavTestDir_vz1C_iC2AlPID
    method: MKCOL
    data_selector: SUCCEED
- name: davtest_file_upload
  endpoint:
    path: /uploads/DavTestDir_vz1C_iC2AlPID/davtest_vz1C_iC2AlPID
    method: PUT
    data_selector: SUCCEED
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
    params: {}
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: headers
  endpoint:
    path: /headers
    method: GET
- name: whois
  endpoint:
    path: /whois
    method: GET
- name: ssl_info
  endpoint:
    path: /sslinfo
    method: GET
- name: dns
  endpoint:
    path: /dns
    method: GET
- name: subdomain
  endpoint:
    path: /sub
    method: GET
- name: directory
  endpoint:
    path: /dir
    method: GET
- name: port_scan
  endpoint:
    path: /ps
    method: GET
- name: user_enum
  endpoint:
    path: /
    method: GET
    data_selector: users
    params:
      mode: VRFY
      usernames_file: users.txt
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: cmseek
  endpoint:
    path: /cmseek
    method: GET
    data_selector: results
    params: {}
- name: commix
  endpoint:
    path: /commix
    method: GET
    data_selector: results
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
    params: {}
- name: vulnerability_check
  endpoint:
    path: /dvwa/vulnerabilities/sqli/
    method: GET
    data_selector: requests
    params:
      id: 1*
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
- name: smtp_check
  endpoint:
    path: /smtp/check
    method: GET
- name: fuzzing_test
  endpoint:
    path: /FUZZ
    method: GET
- name: BruteSpray Supported Services
  endpoint:
    path: /brutespray/services
    method: GET
    data_selector: services
    params: {}
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: results
    params:
      mode: VRFY
      max_processes: 5
      timeout: 5
- name: wordlist_generator
  endpoint:
    path: /generate/wordlist
    method: POST
    data_selector: results
    params: {}
- name: sql_injection
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: POST
    data_selector: response
    params: {}
- name: password_analysis
  endpoint:
    path: /statsgen
    method: GET
    data_selector: passwords
    params: {}
- name: mask_generation
  endpoint:
    path: /maskgen
    method: GET
    data_selector: masks
    params: {}
- name: policy_generation
  endpoint:
    path: /policygen
    method: GET
    data_selector: policies
    params: {}
- name: rule_generation
  endpoint:
    path: /rulegen
    method: GET
    data_selector: rules
    params: {}
- name: fuzzing_tests
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: results
    params: {}
- name: brutespray_usage
  endpoint:
    path: /brutespray/help
    method: GET
    data_selector: usage
    params: {}
- name: hash
  endpoint:
    path: /hashcat
    method: POST
- name: nmap_scan
  endpoint:
    path: /nmap/scan
    method: GET
    data_selector: results
    params: {}
- name: password_analysis
  endpoint:
    path: /statsgen
    method: GET
    data_selector: results
- name: mask_generation
  endpoint:
    path: /maskgen
    method: GET
    data_selector: results
- name: rule_generation
  endpoint:
    path: /rulegen
    method: GET
    data_selector: results
- name: wordlistraider_usage
  endpoint:
    path: /wordlistraider/usage
    method: GET
    data_selector: ''
    params: {}
- name: server
  endpoint:
    path: /chisel/server
    method: OPTIONS
    data_selector: options
    params: {}
- name: client
  endpoint:
    path: /chisel/client
    method: OPTIONS
    data_selector: options
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp/login
    method: POST
    data_selector: result
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh/login
    method: POST
    data_selector: result
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet/login
    method: POST
    data_selector: result
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp/login
    method: POST
    data_selector: result
    params: {}
- name: smtp_vrfy
  endpoint:
    path: /smtp/vrfy
    method: POST
    data_selector: result
    params: {}
- name: smtp_rcpt
  endpoint:
    path: /smtp/rcpt
    method: POST
    data_selector: result
    params: {}
- name: finger_lookup
  endpoint:
    path: /finger/lookup
    method: POST
    data_selector: result
    params: {}
- name: http_fuzz
  endpoint:
    path: /http/fuzz
    method: POST
    data_selector: result
    params: {}
- name: rdp_gateway
  endpoint:
    path: /rdp/gateway
    method: POST
    data_selector: result
    params: {}
- name: ajp_fuzz
  endpoint:
    path: /ajp/fuzz
    method: POST
    data_selector: result
    params: {}
- name: pop_login
  endpoint:
    path: /pop/login
    method: POST
    data_selector: result
    params: {}
- name: pop_passd
  endpoint:
    path: /pop/passd
    method: POST
    data_selector: result
    params: {}
- name: imap_login
  endpoint:
    path: /imap/login
    method: POST
    data_selector: result
    params: {}
- name: ldap_login
  endpoint:
    path: /ldap/login
    method: POST
    data_selector: result
    params: {}
- name: dcom_login
  endpoint:
    path: /dcom/login
    method: POST
    data_selector: result
    params: {}
- name: smb_login
  endpoint:
    path: /smb/login
    method: POST
    data_selector: result
    params: {}
- name: smb_lookupsid
  endpoint:
    path: /smb/lookupsid
    method: POST
    data_selector: result
    params: {}
- name: rlogin_login
  endpoint:
    path: /rlogin/login
    method: POST
    data_selector: result
    params: {}
- name: vmauthd_login
  endpoint:
    path: /vmauthd/login
    method: POST
    data_selector: result
    params: {}
- name: mssql_login
  endpoint:
    path: /mssql/login
    method: POST
    data_selector: result
    params: {}
- name: oracle_login
  endpoint:
    path: /oracle/login
    method: POST
    data_selector: result
    params: {}
- name: mysql_login
  endpoint:
    path: /mysql/login
    method: POST
    data_selector: result
    params: {}
- name: mysql_query
  endpoint:
    path: /mysql/query
    method: POST
    data_selector: result
    params: {}
- name: rdp_login
  endpoint:
    path: /rdp/login
    method: POST
    data_selector: result
    params: {}
- name: pgsql_login
  endpoint:
    path: /pgsql/login
    method: POST
    data_selector: result
    params: {}
- name: vnc_login
  endpoint:
    path: /vnc/login
    method: POST
    data_selector: result
    params: {}
- name: dns_forward
  endpoint:
    path: /dns/forward
    method: POST
    data_selector: result
    params: {}
- name: dns_reverse
  endpoint:
    path: /dns/reverse
    method: POST
    data_selector: result
    params: {}
- name: snmp_login
  endpoint:
    path: /snmp/login
    method: POST
    data_selector: result
    params: {}
- name: ike_enum
  endpoint:
    path: /ike/enum
    method: POST
    data_selector: result
    params: {}
- name: unzip_pass
  endpoint:
    path: /unzip/pass
    method: POST
    data_selector: result
    params: {}
- name: keystore_pass
  endpoint:
    path: /keystore/pass
    method: POST
    data_selector: result
    params: {}
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher/pass
    method: POST
    data_selector: result
    params: {}
- name: umbraco_crack
  endpoint:
    path: /umbraco/crack
    method: POST
    data_selector: result
    params: {}
- name: tcp_fuzz
  endpoint:
    path: /tcp/fuzz
    method: POST
    data_selector: result
    params: {}
- name: dummy_test
  endpoint:
    path: /dummy/test
    method: POST
    data_selector: result
    params: {}
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
    data_selector: resources
    params: {}
- name: gs-netcat
  endpoint:
    path: /gs-netcat
    method: POST
    data_selector: secret
    params: {}
- name: wordlistraider
  endpoint:
    path: /wordlist
    method: POST
    data_selector: results
    params:
      min: 8
      max: 12
      numbers: 'true'
- name: server
  endpoint:
    path: /server/start
    method: POST
    data_selector: server_status
- name: client
  endpoint:
    path: /client/start
    method: POST
    data_selector: client_status
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: usage
  endpoint:
    path: /help
    method: GET
    data_selector: usage
- name: server
  endpoint:
    path: /ligolo-proxy
    method: GET
- name: agent
  endpoint:
    path: /ligolo-agent
    method: GET
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: commands
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: commands
    params: {}
- name: tundeep
  endpoint:
    path: /tundeep
    method: GET
    data_selector: records
    params: {}
- name: merlinServer
  endpoint:
    path: /merlinServer
    method: GET
    data_selector: session
    params: {}
- name: merlinCLI
  endpoint:
    path: /merlinCLI
    method: GET
    data_selector: session
    params: {}
- name: merlinAgent
  endpoint:
    path: /merlinAgent
    method: GET
    data_selector: session
    params: {}
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: POST
    data_selector: session
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: POST
    data_selector: session
    params: {}
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: agent
  endpoint:
    path: /agent
    method: POST
    data_selector: checkin
- name: session
  endpoint:
    path: /sessions
    method: GET
    data_selector: records
- name: payload
  endpoint:
    path: /payload
    method: POST
    data_selector: result
- name: xspy
  endpoint:
    path: /xspy
    method: GET
    data_selector: opened
    params: {}
- name: autopsy
  endpoint:
    path: /autopsy
    method: GET
    data_selector: General options
    params: {}
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
    data_selector: usage
    params: {}
- name: dcfldd
  endpoint:
    path: /dcfldd
    method: GET
    data_selector: Usage
    params: {}
- name: dd_rescue
  endpoint:
    path: /dd_rescue
    method: GET
    data_selector: USAGE
    params: {}
- name: autopsy
  endpoint:
    path: /autopsy
    method: GET
    data_selector: output
    params: {}
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
    data_selector: output
    params: {}
- name: dcfldd
  endpoint:
    path: /dcfldd
    method: GET
    data_selector: output
    params: {}
- name: dd_rescue
  endpoint:
    path: /dd_rescue
    method: GET
    data_selector: output
    params: {}
- name: recover
  endpoint:
    path: /dev/loop0
    method: GET
    data_selector: recovered_files
    params: {}
- name: artifact_definitions
  endpoint:
    path: /usr/share/artifacts
    method: GET
    data_selector: artifacts
    params: {}
- name: safecopy_usage
  endpoint:
    path: /safecopy
    method: GET
    data_selector: usage
    params: {}
- name: ssdeep_usage
  endpoint:
    path: /ssdeep/usage
    method: GET
    data_selector: usage
    params: {}
- name: inetsim
  endpoint:
    path: /usr/bin/inetsim
    method: GET
    data_selector: services
    params: {}
- name: binwalk
  endpoint:
    path: /binwalk
    method: GET
    data_selector: results
    params: {}
- name: edb
  endpoint:
    path: /edb
    method: GET
    data_selector: results
    params: {}
- name: ghidra
  endpoint:
    path: /ghidra
    method: GET
    data_selector: results
    params: {}
- name: hexwalk
  endpoint:
    path: /hexwalk
    method: GET
    data_selector: results
    params: {}
- name: imhex
  endpoint:
    path: /imhex
    method: GET
    data_selector: results
    params: {}
- name: inetsim
  endpoint:
    path: /inetsim
    method: GET
    data_selector: results
    params: {}
- name: arp-scan_usage
  endpoint:
    path: /arp-scan --help
    method: GET
    data_selector: usage
- name: arping_usage
  endpoint:
    path: /arping --help
    method: GET
    data_selector: usage
- name: targets
  endpoint:
    path: /autorecon/targets
    method: GET
    data_selector: records
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: snmp_scanner
  endpoint:
    path: /braa
    method: GET
    data_selector: queries
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: POST
    data_selector: targets
- name: port_scan
  endpoint:
    path: /nmap/port_scan
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /nmap/vulnerability_scan
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port-scan
    method: GET
    data_selector: ports
    params: {}
- name: os_detection
  endpoint:
    path: /os-detection
    method: GET
    data_selector: os_info
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vulnerability-scan
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: output
    params: {}
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: output
    params: {}
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: protocols
    params: {}
- name: brutesharkcli
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: modules
    params: {}
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: result
- name: ssldump
  endpoint:
    path: /ssldump
    method: GET
    data_selector: records
    params: {}
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
    params: {}
- name: tcpick_usage
  endpoint:
    path: /tcpick/usage
    method: GET
    data_selector: usage
    params: {}
- name: tcpick_options
  endpoint:
    path: /tcpick/options
    method: GET
    data_selector: options
    params: {}
- name: packet_capture
  endpoint:
    path: /
    method: GET
    data_selector: packets
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: configuration_options
  endpoint:
    path: /ftest/configuration
    method: GET
    data_selector: options
    params: {}
- name: timing_options
  endpoint:
    path: /ftest/timing
    method: GET
    data_selector: timing
    params: {}
- name: evasion_options
  endpoint:
    path: /ftest/evasion
    method: GET
    data_selector: evasion
    params: {}
- name: connection_options
  endpoint:
    path: /ftest/connection
    method: GET
    data_selector: connection
    params: {}
- name: dns_enumeration
  endpoint:
    path: /dns_enumeration
    method: GET
    data_selector: results
- name: port_scanning
  endpoint:
    path: /port_scanning
    method: GET
    data_selector: results
- name: whois_lookup
  endpoint:
    path: /whois_lookup
    method: GET
    data_selector: results
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
- name: information
  endpoint:
    path: /information
    method: GET
- name: network_protocol
  endpoint:
    path: /network_protocol
    method: GET
- name: application_protocol
  endpoint:
    path: /application_protocol
    method: GET
- name: sniff
  endpoint:
    path: /sniff
    method: GET
- name: spoof
  endpoint:
    path: /spoof
    method: GET
- name: record
  endpoint:
    path: /record
    method: GET
- name: client
  endpoint:
    path: /client
    method: GET
- name: server
  endpoint:
    path: /server
    method: GET
- name: ping
  endpoint:
    path: /ping
    method: GET
- name: traceroute
  endpoint:
    path: /traceroute
    method: GET
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: network_audit
  endpoint:
    path: /network_audit
    method: GET
- name: brute_force
  endpoint:
    path: /brute_force
    method: GET
- name: remote_administration
  endpoint:
    path: /remote_administration
    method: GET
- name: tools_not_related_to_network
  endpoint:
    path: /tools_not_related_to_network
    method: GET
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
    params:
      destination_ip: 5.6.7.8
      username: login
      password: password
- name: DNS records
  endpoint:
    path: domain
    method: GET
    data_selector: records
    params:
      domain: DOMAIN
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: results
- name: dnsenum_usage
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: usage
    params: {}
- name: dnsgen_usage
  endpoint:
    path: /dnsgen
    method: GET
    data_selector: usage
    params: {}
- name: dnsrecon_usage
  endpoint:
    path: /dnsrecon
    method: GET
    data_selector: usage
    params: {}
- name: dnstracer_usage
  endpoint:
    path: /dnstracer
    method: GET
    data_selector: usage
    params: {}
- name: dnstwist_usage
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: usage
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
- name: cloud_services
  endpoint:
    path: /services/cloud
    method: GET
    data_selector: services
- name: metadata_extraction
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: directory_contents
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: fuzz_results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: urls
  endpoint:
    path: /urls
    method: GET
    data_selector: urls
- name: subdomain
  endpoint:
    path: /subdomains
    method: GET
    data_selector: domains
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: runscans
  endpoint:
    path: /runscans
    method: POST
    data_selector: results
    params: {}
- name: scan2db
  endpoint:
    path: /scan2db
    method: POST
    data_selector: results
    params: {}
- name: db2view
  endpoint:
    path: /db2view
    method: POST
    data_selector: results
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: results
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: subdomain
  endpoint:
    path: /subdomains
    method: GET
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumerate
    method: GET
    data_selector: results
    params:
      email_list: emails.txt
      enumeration_type: 2
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
    params: {}
- name: scan
  endpoint:
    path: /nuclei/scan
    method: POST
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: results
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: results
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: results
    params: {}
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: POST
    data_selector: results
    params:
      mode: VRFY
      user_file: users.txt
      target: 192.168.11.4
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: records
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: records
    params: {}
- name: user_enumeration
  endpoint:
    path: /
    method: VRFY
    data_selector: users
    params:
      username_file: users.txt
      target: 192.168.11.4
      port: 25
      timeout: 5
- name: supported_services
  endpoint:
    path: /brutespray/services
    method: GET
    data_selector: services
    params: {}
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: injection_points
    params:
      id: 1*
- name: hashcat
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: help
  endpoint:
    path: /help
    method: GET
- name: fuzzing_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
- name: supported_services
  endpoint:
    path: /services
    method: GET
    data_selector: services
- name: maskprocessor
  endpoint:
    path: /
    method: GET
    data_selector: usage
    params: {}
- name: medusa
  endpoint:
    path: /
    method: GET
    data_selector: usage
    params: {}
- name: name_that_hash
  endpoint:
    path: /
    method: GET
    data_selector: usage
    params: {}
- name: ncrack
  endpoint:
    path: /
    method: GET
    data_selector: usage
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: records
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: records
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: records
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: records
    params: {}
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
    data_selector: records
    params: {}
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
    data_selector: records
    params: {}
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
    data_selector: records
    params: {}
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
    data_selector: records
    params: {}
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
    data_selector: records
    params: {}
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
    data_selector: records
    params: {}
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
    data_selector: records
    params: {}
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
    data_selector: records
    params: {}
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
    data_selector: records
    params: {}
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
    data_selector: records
    params: {}
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
    data_selector: records
    params: {}
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
    data_selector: records
    params: {}
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
    data_selector: records
    params: {}
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
    data_selector: records
    params: {}
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
    data_selector: records
    params: {}
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
    data_selector: records
    params: {}
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
    data_selector: records
    params: {}
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
    data_selector: records
    params: {}
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
    data_selector: records
    params: {}
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
    data_selector: records
    params: {}
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
    data_selector: records
    params: {}
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
    data_selector: records
    params: {}
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
    data_selector: records
    params: {}
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
    data_selector: records
    params: {}
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
    data_selector: records
    params: {}
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
    data_selector: records
    params: {}
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
    data_selector: records
    params: {}
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
    data_selector: records
    params: {}
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
    data_selector: records
    params: {}
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
    data_selector: records
    params: {}
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
    data_selector: records
    params: {}
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
    data_selector: records
    params: {}
- name: wordlistraider
  endpoint:
    path: wordlistraider
    method: GET
    data_selector: ''
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: POST
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: POST
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: POST
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: POST
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: POST
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: POST
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: POST
- name: pop_login
  endpoint:
    path: /pop_login
    method: POST
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: POST
- name: imap_login
  endpoint:
    path: /imap_login
    method: POST
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: POST
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: POST
- name: smb_login
  endpoint:
    path: /smb_login
    method: POST
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: POST
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: POST
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: POST
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: POST
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: POST
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: POST
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: POST
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: POST
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: POST
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: POST
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: POST
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: POST
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: POST
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: POST
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: POST
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: POST
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: POST
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: POST
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: POST
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: POST
- name: wordlist_extraction
  endpoint:
    path: ''
    method: CLI
    data_selector: ''
    params: {}
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
    data_selector: resources
    params: {}
- name: global_socket
  endpoint:
    path: /gs-netcat
    method: GET
    data_selector: resources
    params: {}
- name: iodine
  endpoint:
    path: /iodined
    method: GET
    data_selector: resources
    params: {}
- name: server_options
  endpoint:
    path: /server/options
    method: GET
    data_selector: options
- name: client_options
  endpoint:
    path: /client/options
    method: GET
    data_selector: options
- name: iodined
  endpoint:
    path: /iodined
    method: POST
- name: server
  endpoint:
    path: /tunnel
    method: GET
- name: client
  endpoint:
    path: /client
    method: GET
- name: proxify_logs
  endpoint:
    path: /proxify_logs
    method: GET
    data_selector: logs
- name: redsocks
  endpoint:
    path: /redsocks
    method: GET
    data_selector: data
    params: {}
- name: dnscat2_server
  endpoint:
    path: dnscat2-server
    method: GET
    data_selector: commands
    params: {}
- name: dnscat_client
  endpoint:
    path: dnscat
    method: GET
    data_selector: commands
    params: {}
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: server_commands
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: client_commands
- name: merlinAgent
  endpoint:
    path: /merlinAgent
    method: GET
- name: merlinCLI
  endpoint:
    path: /merlinCLI
    method: GET
- name: merlinServer
  endpoint:
    path: /merlinServer
    method: GET
- name: agent
  endpoint:
    path: /agent
    method: POST
    data_selector: results
    params: {}
- name: team_server
  endpoint:
    path: /
    method: GET
    data_selector: info
    params: {}
- name: reverse_tcp_handler
  endpoint:
    path: /reverse_tcp
    method: GET
    data_selector: sessions
    params: {}
- name: hoaxshell_handler
  endpoint:
    path: /hoaxshell
    method: GET
    data_selector: sessions
    params: {}
- name: http_file_smuggler
  endpoint:
    path: /file_smuggler
    method: GET
    data_selector: files
    params: {}
- name: server
  endpoint:
    path: /villain/server
    method: POST
    data_selector: session
    params: {}
- name: client
  endpoint:
    path: /villain/client
    method: POST
    data_selector: session
    params: {}
- name: outguess_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage_info
- name: dd_rescue
  endpoint:
    path: /dd_rescue
    method: GET
    data_selector: records
    params: {}
- name: passdetective
  endpoint:
    path: /passdetective
    method: GET
    data_selector: commands
    params: {}
- name: pspy
  endpoint:
    path: /pspy
    method: GET
    data_selector: commands
    params: {}
- name: raven
  endpoint:
    path: /raven
    method: GET
    data_selector: commands
    params: {}
- name: steghide
  endpoint:
    path: /steghide
    method: GET
    data_selector: commands
    params: {}
- name: stegseek
  endpoint:
    path: /stegseek
    method: GET
    data_selector: commands
    params: {}
- name: stegsnow
  endpoint:
    path: /stegsnow
    method: GET
    data_selector: commands
    params: {}
- name: filesystem_recovery
  endpoint:
    path: /dev/loop0
    method: GET
    data_selector: recovered
    params:
      incremental: Activ Time
- name: hash_calculation
  endpoint:
    path: /hashrat/calculate
    method: POST
    data_selector: hash_result
- name: autopsy
  endpoint:
    path: /autopsy
    method: GET
    data_selector: records
    params: {}
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
    data_selector: records
    params: {}
- name: dcfldd
  endpoint:
    path: /dcfldd
    method: GET
    data_selector: records
    params: {}
- name: dd_rescue
  endpoint:
    path: /dd_rescue
    method: GET
    data_selector: records
    params: {}
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: records
    params: {}
- name: safecopy
  endpoint:
    path: /safecopy
    method: POST
    data_selector: results
    params: {}
- name: binwalk
  endpoint:
    path: /binwalk
    method: GET
    data_selector: results
    params: {}
- name: edb
  endpoint:
    path: /edb
    method: GET
    data_selector: results
    params: {}
- name: ghidra
  endpoint:
    path: /ghidra
    method: GET
    data_selector: results
    params: {}
- name: hexwalk
  endpoint:
    path: /hexwalk
    method: GET
    data_selector: results
    params: {}
- name: imhex
  endpoint:
    path: /imhex
    method: GET
    data_selector: results
    params: {}
- name: inetsim
  endpoint:
    path: /inetsim
    method: GET
    data_selector: results
    params: {}
- name: binwalk
  endpoint:
    path: /binwalk
    method: GET
    data_selector: results
    params: {}
- name: edb
  endpoint:
    path: /edb
    method: GET
    data_selector: results
    params: {}
- name: ghidra
  endpoint:
    path: /ghidra
    method: GET
    data_selector: results
    params: {}
- name: hexwalk
  endpoint:
    path: /hexwalk
    method: GET
    data_selector: results
    params: {}
- name: imhex
  endpoint:
    path: /imhex
    method: GET
    data_selector: results
    params: {}
- name: inetsim
  endpoint:
    path: /inetsim
    method: GET
    data_selector: results
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: hosts
    params: {}
- name: pdf-parser
  endpoint:
    path: /pdf-parser
    method: GET
    data_selector: options
- name: targets
  endpoint:
    path: /targets
    method: GET
- name: amap
  endpoint:
    path: /amap
    method: GET
    data_selector: usage
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: usage
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: usage
- name: braa
  endpoint:
    path: /braa
    method: GET
    data_selector: response
    params: {}
- name: enum4linux-ng
  endpoint:
    path: /enum4linux-ng
    method: GET
    data_selector: response
    params: {}
- name: fping
  endpoint:
    path: /fping
    method: GET
    data_selector: response
    params: {}
- name: hping3
  endpoint:
    path: /hping3
    method: GET
    data_selector: response
    params: {}
- name: target
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: records
    params: {}
- name: bruteshark
  endpoint:
    path: /brutesharkcli
    method: GET
    data_selector: records
    params: {}
- name: network_protocols
  endpoint:
    path: /above/protocols
    method: GET
    data_selector: protocols
- name: capture_data
  endpoint:
    path: /capture
    method: GET
    data_selector: data
- name: capture_data
  endpoint:
    path: /capture/data
    method: GET
    data_selector: records
- name: packet_sniffing
  endpoint:
    path: /packet/sniff
    method: GET
    data_selector: packets
    params: {}
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniff
    method: GET
    data_selector: packets
    params: {}
- name: packet_injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: response
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: packets
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: packets
    params: {}
- name: packet_capture
  endpoint:
    path: /capture
    method: GET
    data_selector: packets
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: list_shares
  endpoint:
    path: /SMB/CIFS/client/list/shares
    method: GET
    data_selector: shares
    params: {}
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
    params:
      input: subdomains.txt
      output: out.txt
      wordlist: words.txt
      resolve: true
      save: result.txt
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
    params:
      domain: digital.go.jp
      whois: true
      config: config.yaml
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
- name: altdns
  endpoint:
    path: /altdns
    method: GET
- name: amass
  endpoint:
    path: /amass
    method: GET
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
- name: domain_scan
  endpoint:
    path: /
    method: GET
    data_selector: results
    params: {}
- name: dnstwist
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
- name: dnsx
  endpoint:
    path: /usr/bin/dnsx
    method: GET
    data_selector: results
- name: fierce
  endpoint:
    path: /usr/bin/fierce
    method: GET
    data_selector: results
- name: massdns
  endpoint:
    path: /usr/bin/massdns
    method: GET
    data_selector: results
- name: subjack
  endpoint:
    path: /usr/bin/subjack
    method: GET
    data_selector: results
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: 404
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
- name: urls
  endpoint:
    path: /urls
    method: GET
- name: javascript
  endpoint:
    path: /javascript
    method: GET
- name: xmlrpc
  endpoint:
    path: /xmlrpc.php
    method: GET
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      negative_status_codes: '404'
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
      wordlist: words.txt
- name: cloud_services
  endpoint:
    path: /cloud_services
    method: GET
- name: image_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: audio_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: document_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: epub_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: urls
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: url_collection
  endpoint:
    path: /getallurls
    method: GET
    data_selector: urls
- name: subdomains
  endpoint:
    path: /api/v1/subdomains
    method: GET
    data_selector: results
    params:
      domain: example.com
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: sublist3r
  endpoint:
    path: /sublist3r
    method: GET
    data_selector: results
    params:
      domain: example.com
- name: theHarvester
  endpoint:
    path: /theHarvester
    method: GET
    data_selector: results
    params:
      domain: example.com
- name: waybackpy
  endpoint:
    path: /waybackpy
    method: GET
    data_selector: results
    params:
      url: https://qiita.com
- name: witnessMe
  endpoint:
    path: /witnessMe
    method: GET
    data_selector: results
    params:
      target: http://192.168.11.4
- name: finalRecon
  endpoint:
    path: /finalRecon
    method: GET
    data_selector: results
    params:
      url: https://x.com
- name: upload_directory
  endpoint:
    path: /uploads/
    method: MKCOL
    data_selector: Created
    params: {}
- name: upload_file
  endpoint:
    path: /uploads/{directory}/
    method: PUT
    data_selector: SUCCEED
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
    data_selector: records
    params: {}
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
    data_selector: records
    params: {}
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
    data_selector: records
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: records
    params: {}
- name: vulnerability_test
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: results
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: results
- name: sql_injection
  endpoint:
    path: /sql/injection
    method: GET
    data_selector: results
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      user_file: users.txt
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: user_enum
  endpoint:
    path: /
    method: VRFY
    data_selector: usernames
    params:
      max_processes: 5
      timeout: 5
- name: scan
  endpoint:
    path: /dvwa/vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: 1*
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: payloads
    params:
      level: 5
      risk: 3
      dbms: MySQL
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: response
    params: {}
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
- name: default_credentials
  endpoint:
    path: /brutespray/default_credentials
    method: GET
    data_selector: credentials
    params: {}
- name: supported_services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: hash_analysis
  endpoint:
    path: /hashid
    method: POST
    data_selector: results
- name: hashcat
  endpoint:
    path: /hashcat
    method: GET
    data_selector: hashcat_options
    params: {}
- name: hydra
  endpoint:
    path: /hydra
    method: GET
    data_selector: hydra_options
    params: {}
- name: john_the_ripper
  endpoint:
    path: /john_the_ripper
    method: GET
    data_selector: john_options
    params: {}
- name: ncrack_usage
  endpoint:
    path: /ncrack/help
    method: GET
    data_selector: usage
    params: {}
- name: statsgen
  endpoint:
    path: /statsgen
    method: GET
- name: maskgen
  endpoint:
    path: /maskgen
    method: GET
- name: policygen
  endpoint:
    path: /policygen
    method: GET
- name: rulegen
  endpoint:
    path: /rulegen
    method: GET
- name: ftp_login
  endpoint:
    path: /api/ftp_login
    method: POST
- name: ssh_login
  endpoint:
    path: /api/ssh_login
    method: POST
- name: telnet_login
  endpoint:
    path: /api/telnet_login
    method: POST
- name: smtp_login
  endpoint:
    path: /api/smtp_login
    method: POST
- name: pop_login
  endpoint:
    path: /api/pop_login
    method: POST
- name: imap_login
  endpoint:
    path: /api/imap_login
    method: POST
- name: mysql_login
  endpoint:
    path: /api/mysql_login
    method: POST
- name: pgsql_login
  endpoint:
    path: /api/pgsql_login
    method: POST
- name: hashes
  endpoint:
    path: /api/hashes
    method: GET
    data_selector: hashes
- name: marks
  endpoint:
    path: /api/marks
    method: GET
    data_selector: marks
- name: chisel_server
  endpoint:
    path: /chisel/server
    method: OPTIONS
    data_selector: options
- name: chisel_client
  endpoint:
    path: /chisel/client
    method: OPTIONS
    data_selector: options
- name: dns2tcp_server
  endpoint:
    path: /dns2tcp/server
    method: GET
    data_selector: resources
    params: {}
- name: dns2tcp_client
  endpoint:
    path: /dns2tcp/client
    method: GET
    data_selector: resources
    params: {}
- name: proxy
  endpoint:
    path: /ligolo-proxy
    method: GET
    data_selector: proxy_info
    params: {}
- name: agent
  endpoint:
    path: /ligolo-agent
    method: GET
    data_selector: agent_info
    params: {}
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
    params: {}
- name: proxify_logs
  endpoint:
    path: /proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: tcp
  endpoint:
    path: /services/data/vXX.X/sobjects/TCP
    method: GET
    data_selector: records
    params: {}
- name: interface
  endpoint:
    path: /tundeep/usage
    method: GET
    data_selector: records
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: POST
    data_selector: session
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: POST
    data_selector: session
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
- name: agent
  endpoint:
    path: /api/agent
    method: POST
- name: session
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: payload
  endpoint:
    path: /payload
    method: POST
    data_selector: result
- name: outguess_usage
  endpoint:
    path: /outguess/help
    method: GET
    data_selector: usage
    params: {}
- name: payload_generation
  endpoint:
    path: /generate
    method: POST
    data_selector: result
- name: session_management
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: outguess_command
  endpoint:
    path: /outguess_command
    method: GET
    data_selector: commands
    params: {}
- name: autopsy
  endpoint:
    path: /autopsy
    method: GET
    data_selector: results
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
    data_selector: results
- name: dcfldd
  endpoint:
    path: /dcfldd
    method: GET
    data_selector: results
- name: dd_rescue
  endpoint:
    path: /dd_rescue
    method: GET
    data_selector: results
- name: forensics_tools
  endpoint:
    path: /forensics/tools
    method: GET
    data_selector: tools
    params: {}
- name: recovery
  endpoint:
    path: /dev/loop0
    method: GET
    data_selector: recovered
    params:
      incremental: Activ Time
- name: recovered_files
  endpoint:
    path: /ext4magic
    method: GET
    data_selector: recovered
    params: {}
- name: safecopy_usage
  endpoint:
    path: /safecopy/help
    method: GET
    data_selector: usage_info
- name: safecopy_example
  endpoint:
    path: /safecopy/example
    method: GET
    data_selector: example_info
- name: hash_calculation
  endpoint:
    path: /hashrat/calculate
    method: GET
    data_selector: hash
    params: {}
- name: file_hashing
  endpoint:
    path: /hashrat/file
    method: GET
    data_selector: file_hash
    params: {}
- name: hash_check
  endpoint:
    path: /hashrat/check
    method: POST
    data_selector: check_result
    params: {}
- name: files
  endpoint:
    path: /services/data/vXX.X/sobjects/File
    method: GET
    data_selector: records
- name: timelines
  endpoint:
    path: /log2timeline
    method: POST
- name: binwalk
  endpoint:
    path: /binwalk
    method: GET
    data_selector: usage
    params: {}
- name: edb
  endpoint:
    path: /edb
    method: GET
    data_selector: usage
    params: {}
- name: ghidra
  endpoint:
    path: /ghidra
    method: GET
    data_selector: usage
    params: {}
- name: hexwalk
  endpoint:
    path: /hexwalk
    method: GET
    data_selector: usage
    params: {}
- name: imhex
  endpoint:
    path: /imhex
    method: GET
    data_selector: usage
    params: {}
- name: inetsim
  endpoint:
    path: /inetsim
    method: GET
    data_selector: usage
    params: {}
- name: safecopy_usage
  endpoint:
    path: /safecopy/help
    method: GET
    data_selector: usage
- name: log
  endpoint:
    path: /var/log/inetsim/
    method: GET
    data_selector: logs
- name: data
  endpoint:
    path: /var/lib/inetsim/
    method: GET
    data_selector: data
- name: report
  endpoint:
    path: /var/log/inetsim/report/
    method: GET
    data_selector: reports
- name: chkrootkit_tests
  endpoint:
    path: --help
    method: GET
    data_selector: options
    params: {}
- name: scan
  endpoint:
    path: /scans
    method: POST
    data_selector: results
    params: {}
- name: binwalk
  endpoint:
    path: /binwalk
    method: GET
    data_selector: results
- name: edb
  endpoint:
    path: /edb
    method: GET
    data_selector: results
- name: ghidra
  endpoint:
    path: /ghidra
    method: GET
    data_selector: results
- name: hexwalk
  endpoint:
    path: /hexwalk
    method: GET
    data_selector: results
- name: imhex
  endpoint:
    path: /imhex
    method: GET
    data_selector: results
- name: inetsim
  endpoint:
    path: /inetsim
    method: GET
    data_selector: results
- name: rootkit_check
  endpoint:
    path: /rkhunter/check
    method: GET
    data_selector: checks
    params: {}
- name: network_tools
  endpoint:
    path: /tools/network
    method: GET
    data_selector: tools
    params: {}
- name: network_tools
  endpoint:
    path: /kali/tools/network
    method: GET
    data_selector: tools
- name: targets
  endpoint:
    path: /autorecon
    method: POST
    data_selector: results
- name: targets
  endpoint:
    path: /autorecon/targets
    method: GET
    data_selector: records
- name: network_sniffing
  endpoint:
    path: /above/network_sniffing
    method: GET
    data_selector: protocols
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: POST
    data_selector: results
- name: above
  endpoint:
    path: /above
    method: GET
    data_selector: protocols
    params: {}
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: GET
    data_selector: analysis
    params: {}
- name: chaosreader_usage
  endpoint:
    path: /chaosreader/help
    method: GET
    data_selector: usage
- name: chaosreader_usage
  endpoint:
    path: --help
    method: GET
- name: tcpick_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage
- name: tcpflow
  endpoint:
    path: /tcpflow
    method: GET
    data_selector: records
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: records
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: usage
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: usage
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: usage
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: usage
- name: list_shares
  endpoint:
    path: /198
    method: GET
    data_selector: shares
    params: {}
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: options
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: options
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: options
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: options
    params: {}
- name: list_shares
  endpoint:
    path: /smb/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: DNS Enumeration
  endpoint:
    path: /dns-enumeration
    method: GET
    data_selector: results
- name: Network Analysis
  endpoint:
    path: /network-analysis
    method: GET
    data_selector: results
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: dnsgen
  endpoint:
    path: /dnsgen
    method: GET
    data_selector: records
- name: dnsrecon
  endpoint:
    path: /dnsrecon
    method: GET
    data_selector: records
- name: dnstracer
  endpoint:
    path: /dnstracer
    method: GET
    data_selector: records
- name: dnstwist
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: dns_records
  endpoint:
    path: /dns_records
    method: GET
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
      threads: 50
      timeout: 7
- name: fuzzing
  endpoint:
    path: /
    method: GET
    data_selector: results
    params:
      query: FUZZ
      wordlist: words.txt
      excluded_status_codes: 404
      threads: 10
      timeout: 10
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
- name: Exif Data
  endpoint:
    path: /exif/data
    method: GET
    data_selector: Exif
    params: {}
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
- name: subdomains
  endpoint:
    path: /find
    method: GET
- name: screenshot
  endpoint:
    path: /eyewitness/screenshot
    method: GET
    data_selector: results
- name: scan_results
  endpoint:
    path: /scan/results
    method: GET
    data_selector: results
- name: domain_subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: DAV_operations
  endpoint:
    path: /uploads/
    method: GET
    data_selector: ''
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: records
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /sslinfo
    method: GET
    data_selector: ssl_info
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/enum
    method: GET
    data_selector: results
- name: smtp_relay_testing
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: ident_service
  endpoint:
    path: /ident
    method: GET
    data_selector: response
    params: {}
- name: user_check
  endpoint:
    path: /
    method: VRFY
    data_selector: response
    params:
      user: user@example.com
- name: SQL Injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
    params:
      timeout: 10
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
    params: {}
- name: mxcheck
  endpoint:
    path: /mxcheck
    method: GET
    data_selector: results
    params: {}
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
- name: user_enumeration
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      usernames_file: users.txt
      target_host: 192.168.11.4
      port: 25
      timeout: 5
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params: {}
- name: BruteSpray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: records
    params: {}
- name: CeWL
  endpoint:
    path: /cewl
    method: GET
    data_selector: records
    params: {}
- name: changeme
  endpoint:
    path: /changeme
    method: GET
    data_selector: records
    params: {}
- name: Crowbar
  endpoint:
    path: /crowbar
    method: GET
    data_selector: records
    params: {}
- name: crunch
  endpoint:
    path: /crunch
    method: GET
    data_selector: records
    params: {}
- name: hashID
  endpoint:
    path: /hashid
    method: GET
    data_selector: records
    params: {}
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: session
    params: {}
- name: wordlist
  endpoint:
    path: /mp64
    method: GET
    data_selector: output-file
    params: {}
- name: fuzz_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: supported_services
  endpoint:
    path: /brutespray/services
    method: GET
    data_selector: services
- name: wordlist
  endpoint:
    path: /wordlistraider
    method: GET
    data_selector: results
    params: {}
- name: hashcat_usage
  endpoint:
    path: /help
    method: GET
    data_selector: usage
    params: {}
- name: authentication
  endpoint:
    path: /auth
    method: GET
    data_selector: auth
    params: {}
- name: output
  endpoint:
    path: /output
    method: GET
    data_selector: output
    params: {}
- name: server
  endpoint:
    path: /ligolo-proxy
    method: GET
- name: agent
  endpoint:
    path: /ligolo-agent
    method: GET
- name: proxify_logs
  endpoint:
    path: /proxify_logs
    method: GET
    data_selector: logs
- name: pdfcrack
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: hashes
  endpoint:
    path: /hashes
    method: POST
    data_selector: results
- name: agent
  endpoint:
    path: /agent
    method: POST
    data_selector: results
- name: server
  endpoint:
    path: /server
    method: GET
    data_selector: status
- name: server
  endpoint:
    path: /server/start
    method: POST
    data_selector: response
    params:
      tunnel_ip: 10.0.0.1
      topdomain: example.com
- name: client
  endpoint:
    path: /client/start
    method: POST
    data_selector: response
    params:
      connect: 192.168.11.4
      topdomain: example.com
- name: file
  endpoint:
    path: /outguess
    method: GET
    data_selector: usage
    params: {}
- name: autopsy
  endpoint:
    path: /autopsy
    method: GET
    data_selector: records
    params: {}
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
    data_selector: records
    params: {}
- name: dcfldd
  endpoint:
    path: /dcfldd
    method: GET
    data_selector: records
    params: {}
- name: dd_rescue
  endpoint:
    path: /dd_rescue
    method: GET
    data_selector: records
    params: {}
- name: tundeep
  endpoint:
    path: /tundeep
    method: GET
- name: server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: commands
- name: client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: commands
- name: hash calculation
  endpoint:
    path: /hashrat
    method: GET
    data_selector: hash
- name: agent
  endpoint:
    path: /merlinAgent
    method: GET
- name: server
  endpoint:
    path: /merlinServer
    method: GET
- name: backup
  endpoint:
    path: /safecopy/backup
    method: POST
    data_selector: results
    params: {}
- name: generate_payload
  endpoint:
    path: /generate
    method: POST
    data_selector: payload
    params:
      os: linux
      mtls: 192.168.11.3:8888
      save: payload
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
    params: {}
- name: binwalk
  endpoint:
    path: /binwalk
    method: GET
    data_selector: results
- name: edb
  endpoint:
    path: /edb
    method: GET
    data_selector: results
- name: ghidra
  endpoint:
    path: /ghidra
    method: GET
    data_selector: results
- name: hexwalk
  endpoint:
    path: /hexwalk
    method: GET
    data_selector: results
- name: imhex
  endpoint:
    path: /imhex
    method: GET
    data_selector: results
- name: inetsim
  endpoint:
    path: /inetsim
    method: GET
    data_selector: results
- name: pdf_parser
  endpoint:
    path: /pdf-parser
    method: GET
    data_selector: records
    params: {}
- name: chkrootkit_usage
  endpoint:
    path: /usr/sbin/chkrootkit
    method: HELP
    data_selector: ''
    params: {}
- name: outguess_usage
  endpoint:
    path: /outguess/help
    method: GET
    data_selector: usage
    params: {}
- name: PassDetective
  endpoint:
    path: /PassDetective/help
    method: GET
    data_selector: usage
    params: {}
- name: pspy
  endpoint:
    path: /pspy/help
    method: GET
    data_selector: usage
    params: {}
- name: Raven
  endpoint:
    path: /raven/help
    method: GET
    data_selector: usage
    params: {}
- name: Steghide
  endpoint:
    path: /steghide/help
    method: GET
    data_selector: usage
    params: {}
- name: Stegseek
  endpoint:
    path: /stegseek/help
    method: GET
    data_selector: usage
    params: {}
- name: SNOW
  endpoint:
    path: /stegsnow/help
    method: GET
    data_selector: usage
    params: {}
- name: Xspy
  endpoint:
    path: /Xspy/help
    method: GET
    data_selector: usage
    params: {}
- name: dc3dd_usage
  endpoint:
    path: /dc3dd/help
    method: GET
    data_selector: usage
- name: clamd
  endpoint:
    path: /clamd
    method: GET
    data_selector: help
    params: {}
- name: clamdscan
  endpoint:
    path: /clamdscan
    method: GET
    data_selector: help
    params: {}
- name: rkhunter
  endpoint:
    path: /rkhunter
    method: GET
    data_selector: help
    params: {}
- name: snort
  endpoint:
    path: /snort
    method: GET
    data_selector: help
    params: {}
- name: scan_rules
  endpoint:
    path: /etc/snort/snort.lua
    method: GET
    data_selector: rules
    params: {}
- name: filesystem_recovery
  endpoint:
    path: /dev/loop0
    method: GET
    data_selector: recovered
    params:
      incremental: deleted
- name: yara_help
  endpoint:
    path: /yara/help
    method: GET
    data_selector: help
- name: hash
  endpoint:
    path: /hashrat
    method: GET
    data_selector: records
- name: Amap
  endpoint:
    path: /amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /arping
    method: GET
    data_selector: usage
    params: {}
- name: backup
  endpoint:
    path: /backup
    method: POST
    data_selector: results
    params: {}
- name: snmp_scan
  endpoint:
    path: /snmp/scan
    method: GET
    data_selector: results
- name: scan
  endpoint:
    path: /scan
    method: POST
    data_selector: results
- name: binwalk
  endpoint:
    path: /binwalk
    method: GET
    data_selector: results
    params: {}
- name: edb
  endpoint:
    path: /edb
    method: GET
    data_selector: results
    params: {}
- name: ghidra
  endpoint:
    path: /ghidra
    method: GET
    data_selector: results
    params: {}
- name: hexwalk
  endpoint:
    path: /hexwalk
    method: GET
    data_selector: results
    params: {}
- name: imhex
  endpoint:
    path: /imhex
    method: GET
    data_selector: results
    params: {}
- name: inetsim
  endpoint:
    path: /inetsim
    method: GET
    data_selector: results
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: network_sniffing
  endpoint:
    path: /network/sniffing
    method: GET
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: GET
- name: tests
  endpoint:
    path: ''
    method: GET
    data_selector: tests
    params: {}
- name: capture_data
  endpoint:
    path: /capture
    method: GET
    data_selector: records
- name: clamscan
  endpoint:
    path: /clamscan
    method: GET
    data_selector: results
- name: clamd
  endpoint:
    path: /clamd
    method: GET
    data_selector: results
- name: clamdscan
  endpoint:
    path: /clamdscan
    method: GET
    data_selector: results
- name: packet_sniffing
  endpoint:
    path: /hexinject/sniif
    method: GET
    data_selector: packets
    params: {}
- name: packet_injection
  endpoint:
    path: /hexinject/inject
    method: POST
    data_selector: response
    params: {}
- name: rkhunter
  endpoint:
    path: /rkhunter
    method: GET
    data_selector: results
- name: http_request
  endpoint:
    path: /
    method: GET
    data_selector: response
- name: Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: records
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: usage
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: net_recon
  endpoint:
    path: /net.recon
    method: GET
    data_selector: records
- name: http_proxy
  endpoint:
    path: /http.proxy
    method: GET
    data_selector: records
- name: arp_spoof
  endpoint:
    path: /arp.spoof
    method: GET
    data_selector: records
- name: list_shares
  endpoint:
    path: /smb/client/list/shares
    method: GET
    data_selector: shares
    params: {}
- name: create_directory
  endpoint:
    path: /smb/client/create/directory
    method: POST
    data_selector: result
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: vuln_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
    params: {}
- name: service_detection
  endpoint:
    path: /service_detection
    method: GET
    data_selector: results
    params: {}
- name: network_packets
  endpoint:
    path: /above/network_packets
    method: GET
    data_selector: packets
    params: {}
- name: altdns
  endpoint:
    path: /altdns
    method: GET
    data_selector: results
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: results
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: results
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: results
- name: capture_data
  endpoint:
    path: /chaosreader/capture
    method: GET
    data_selector: records
    params: {}
- name: dns_enum_options
  endpoint:
    path: /dnsenum/options
    method: GET
- name: dnsgen_options
  endpoint:
    path: /dnsgen/options
    method: GET
- name: dnsrecon_options
  endpoint:
    path: /dnsrecon/options
    method: GET
- name: dnstracer_options
  endpoint:
    path: /dnstracer/options
    method: GET
- name: dnstwist_options
  endpoint:
    path: /dnstwist/options
    method: GET
- name: dns_records
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
    params: {}
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
- name: list_shares
  endpoint:
    path: /SMB/CIFS/client/list/shares
    method: GET
    data_selector: shares
    params: {}
- name: create_directory
  endpoint:
    path: /SMB/CIFS/client/create/directory
    method: POST
    data_selector: result
    params: {}
- name: delete_directory
  endpoint:
    path: /SMB/CIFS/client/delete/directory
    method: DELETE
    data_selector: result
    params: {}
- name: rename_directory
  endpoint:
    path: /SMB/CIFS/client/rename/directory
    method: PUT
    data_selector: result
    params: {}
- name: list_contents
  endpoint:
    path: /SMB/CIFS/client/list/contents
    method: GET
    data_selector: contents
    params: {}
- name: delete_file
  endpoint:
    path: /SMB/CIFS/client/delete/file
    method: DELETE
    data_selector: result
    params: {}
- name: rename_file
  endpoint:
    path: /SMB/CIFS/client/rename/file
    method: PUT
    data_selector: result
    params: {}
- name: get_file
  endpoint:
    path: /SMB/CIFS/client/get/file
    method: GET
    data_selector: file_data
    params: {}
- name: put_file
  endpoint:
    path: /SMB/CIFS/client/put/file
    method: PUT
    data_selector: result
    params: {}
- name: recursively_get_directory
  endpoint:
    path: /SMB/CIFS/client/recursively/get/directory
    method: GET
    data_selector: directory_contents
    params: {}
- name: recursively_put_directory
  endpoint:
    path: /SMB/CIFS/client/recursively/put/directory
    method: PUT
    data_selector: result
    params: {}
- name: recursively_delete_directory
  endpoint:
    path: /SMB/CIFS/client/recursively/delete/directory
    method: DELETE
    data_selector: result
    params: {}
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomain_records
- name: DNS Enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: subdomains
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: general_options
  endpoint:
    path: /general/options
    method: GET
    data_selector: options
    params: {}
- name: google_scraping_options
  endpoint:
    path: /google/scraping/options
    method: GET
    data_selector: options
    params: {}
- name: brute_force_options
  endpoint:
    path: /brute/force/options
    method: GET
    data_selector: options
    params: {}
- name: whois_netrange_options
  endpoint:
    path: /whois/netrange/options
    method: GET
    data_selector: options
    params: {}
- name: reverse_lookup_options
  endpoint:
    path: /reverse/lookup/options
    method: GET
    data_selector: options
    params: {}
- name: output_options
  endpoint:
    path: /output/options
    method: GET
    data_selector: options
    params: {}
- name: uploaded_files
  endpoint:
    path: /uploads/
    method: PUT
    data_selector: files
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: data
    params: {}
- name: dns_records
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: SMTP Relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: smtp_user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: results
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions:
      - php
      - html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes:
      - 404
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: url
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: POST
    data_selector: response
    params: {}
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
- name: Exif Metadata
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: BruteSpray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: records
    params: {}
- name: CeWL
  endpoint:
    path: /cewl
    method: GET
    data_selector: records
    params: {}
- name: changeme
  endpoint:
    path: /changeme
    method: GET
    data_selector: records
    params: {}
- name: Crowbar
  endpoint:
    path: /crowbar
    method: GET
    data_selector: records
    params: {}
- name: crunch
  endpoint:
    path: /crunch
    method: GET
    data_selector: records
    params: {}
- name: hashID
  endpoint:
    path: /hashid
    method: GET
    data_selector: records
    params: {}
- name: subdomain_discovery
  endpoint:
    path: /subfinder
    method: GET
- name: hash_analysis
  endpoint:
    path: /hashid
    method: GET
    data_selector: results
- name: password_analysis_toolkit
  endpoint:
    path: /statsgen
    method: GET
    data_selector: options
    params: {}
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: whois
  endpoint:
    path: /whois
    method: GET
    data_selector: whois
- name: ssl_info
  endpoint:
    path: /sslinfo
    method: GET
    data_selector: ssl_info
- name: dns
  endpoint:
    path: /dns
    method: GET
    data_selector: dns
- name: subdomains
  endpoint:
    path: /sub
    method: GET
    data_selector: subdomains
- name: directory_search
  endpoint:
    path: /dir
    method: GET
    data_selector: directory
- name: port_scan
  endpoint:
    path: /ps
    method: GET
    data_selector: ports
- name: wordlist
  endpoint:
    path: wordlistraider
    method: ''
    data_selector: ''
    params: {}
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: chisel_server_options
  endpoint:
    path: /chisel/server
    method: GET
    data_selector: options
    params: {}
- name: chisel_client_options
  endpoint:
    path: /chisel/client
    method: GET
    data_selector: options
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
    params: {}
- name: server
  endpoint:
    path: /server/start
    method: POST
    data_selector: response
    params: {}
- name: client
  endpoint:
    path: /client/connect
    method: POST
    data_selector: response
    params: {}
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: smtp_check
  endpoint:
    path: /smtp/check
    method: POST
    data_selector: results
- name: proxify_logs
  endpoint:
    path: proxify_logs.jsonl
    method: GET
    data_selector: logs
- name: user_enumeration
  endpoint:
    path: /smtp-user-enum
    method: GET
    data_selector: users
    params:
      mode: VRFY
      user_file: users.txt
      target_host: 192.168.11.4
      port: 25
      timeout: 5
- name: TCP4-LISTEN
  endpoint:
    path: /TCP4-LISTEN
    method: GET
- name: TCP4-CONNECT
  endpoint:
    path: /TCP4-CONNECT
    method: GET
- name: tundeep
  endpoint:
    path: /tundeep
    method: GET
    data_selector: records
- name: sql_injection_check
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: records
    params:
      id: '1'
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: records
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: records
    params: {}
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: session
    params: {}
- name: http_options
  endpoint:
    path: /
    method: GET
    data_selector: responses
    params: {}
- name: supported_services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: GET
- name: server
  endpoint:
    path: /server
    method: GET
- name: hash
  endpoint:
    path: /hash
    method: POST
    data_selector: records
    params: {}
- name: generate_payload
  endpoint:
    path: /generate
    method: POST
    data_selector: payload
    params:
      os: linux
      mtls: 192.168.11.3:8888
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
    params: {}
- name: extract_passwords
  endpoint:
    path: PassDetective extract
    method: GET
    data_selector: passwords
    params: {}
- name: http_auth
  endpoint:
    path: /medusa/http
    method: GET
    data_selector: results
    params: {}
- name: mysql_auth
  endpoint:
    path: /medusa/mysql
    method: GET
    data_selector: results
    params: {}
- name: autopsy
  endpoint:
    path: /autopsy
    method: GET
    data_selector: results
    params: {}
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
    data_selector: results
    params: {}
- name: dcfldd
  endpoint:
    path: /dcfldd
    method: GET
    data_selector: results
    params: {}
- name: dd_rescue
  endpoint:
    path: /dd_rescue
    method: GET
    data_selector: results
    params: {}
- name: recover_file
  endpoint:
    path: /dev/loop0
    method: GET
    data_selector: recovered
    params:
      incremental: deleted_files
- name: statsgen
  endpoint:
    path: /statsgen
    method: GET
    data_selector: output
    params: {}
- name: maskgen
  endpoint:
    path: /maskgen
    method: GET
    data_selector: output
    params: {}
- name: policygen
  endpoint:
    path: /policygen
    method: GET
    data_selector: output
    params: {}
- name: rulegen
  endpoint:
    path: /rulegen
    method: GET
    data_selector: output
    params: {}
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
    data_selector: results
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
    data_selector: results
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
    data_selector: results
    params: {}
- name: wordlist
  endpoint:
    path: /path/to/wordlist
    method: GET
    data_selector: words
    params: {}
- name: dns2tcp
  endpoint:
    path: /dns2tcp
    method: GET
    data_selector: resources
    params: {}
- name: global_socket
  endpoint:
    path: /gs-netcat
    method: GET
    data_selector: resources
    params: {}
- name: iodine
  endpoint:
    path: /iodined
    method: GET
    data_selector: resources
    params: {}
- name: fls
  endpoint:
    path: /fls
    method: GET
    data_selector: records
    params: {}
- name: icat
  endpoint:
    path: /icat
    method: GET
    data_selector: records
    params: {}
- name: ifind
  endpoint:
    path: /ifind
    method: GET
    data_selector: records
    params: {}
- name: istat
  endpoint:
    path: /istat
    method: GET
    data_selector: records
    params: {}
- name: blkcat
  endpoint:
    path: /blkcat
    method: GET
    data_selector: records
    params: {}
- name: blkls
  endpoint:
    path: /blkls
    method: GET
    data_selector: records
    params: {}
- name: tunnel
  endpoint:
    path: /tunnel
    method: POST
    data_selector: session
    params: {}
- name: binwalk
  endpoint:
    path: binwalk
    method: GET
    data_selector: results
- name: edb
  endpoint:
    path: edb
    method: GET
    data_selector: results
- name: ghidra
  endpoint:
    path: ghidra
    method: GET
    data_selector: results
- name: hexwalk
  endpoint:
    path: hexwalk
    method: GET
    data_selector: results
- name: imhex
  endpoint:
    path: imhex
    method: GET
    data_selector: results
- name: inetsim
  endpoint:
    path: inetsim
    method: GET
    data_selector: results
- name: network_tunneling
  endpoint:
    path: /tundeep/config
    method: GET
    data_selector: config
    params: {}
- name: agent
  endpoint:
    path: /merlinAgent
    method: POST
    data_selector: results
    params:
      incremental: checkin
- name: linpeas
  endpoint:
    path: /linpeas.sh
    method: GET
    data_selector: checks
    params: {}
- name: session
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: payload
  endpoint:
    path: /generate
    method: POST
    data_selector: payload
- name: sslscan_results
  endpoint:
    path: /sslscan/results
    method: GET
    data_selector: results
- name: sslscan
  endpoint:
    path: /sslscan
    method: GET
    data_selector: results
- name: recovery_options
  endpoint:
    path: /ext4magic
    method: GET
    data_selector: options
    params: {}
- name: file_recovery
  endpoint:
    path: /ext4magic/recover
    method: POST
    data_selector: recovered_files
    params: {}
- name: security_report
  endpoint:
    path: /var/log/tiger/security.report.kali.241125-03:44
    method: GET
    data_selector: security.report
    params: {}
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: hosts
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
    params: {}
- name: artifact_definitions
  endpoint:
    path: /usr/share/artifacts
    method: GET
- name: targets
  endpoint:
    path: /autorecon
    method: GET
    data_selector: results
- name: safecopy
  endpoint:
    path: /safecopy
    method: GET
    data_selector: output
    params: {}
- name: signature_scan
  endpoint:
    path: /binwalk --signature
    method: GET
    data_selector: results
- name: extract_files
  endpoint:
    path: /binwalk --extract
    method: GET
    data_selector: results
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
- name: packet_capture
  endpoint:
    path: /capture/packets
    method: POST
    data_selector: packets
- name: extract
  endpoint:
    path: /unblob/extract
    method: POST
    data_selector: files
    params:
      extract-dir: output_directory
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
- name: alert
  endpoint:
    path: /alert
    method: GET
    data_selector: alerts
    params: {}
- name: packet_sniffing
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: packet_injection
  endpoint:
    path: /inject
    method: POST
    data_selector: injected_packets
- name: yara_rules
  endpoint:
    path: /rules
    method: GET
    data_selector: rules
    params: {}
- name: linux_exploit_suggester
  endpoint:
    path: /linux-exploit-suggester
    method: GET
    data_selector: results
- name: lynis
  endpoint:
    path: /lynis
    method: GET
    data_selector: results
- name: trivy
  endpoint:
    path: /trivy
    method: GET
    data_selector: results
- name: Network Tools
  endpoint:
    path: /network-tools
    method: GET
    data_selector: tools
    params: {}
- name: Capture interface
  endpoint:
    path: /capture/interface
    method: GET
    data_selector: records
- name: Capture stop conditions
  endpoint:
    path: /capture/stop_conditions
    method: GET
    data_selector: records
- name: Capture output
  endpoint:
    path: /capture/output
    method: GET
    data_selector: records
- name: Input file
  endpoint:
    path: /input/file
    method: GET
    data_selector: records
- name: Processing
  endpoint:
    path: /processing
    method: GET
    data_selector: records
- name: Output
  endpoint:
    path: /output
    method: GET
    data_selector: records
- name: Diagnostic output
  endpoint:
    path: /diagnostic/output
    method: GET
    data_selector: records
- name: Miscellaneous
  endpoint:
    path: /miscellaneous
    method: GET
    data_selector: records
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
- name: service_scan
  endpoint:
    path: /service_scan
    method: GET
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: records
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: records
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: records
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: records
    params: {}
- name: list_shares
  endpoint:
    path: /198
    method: GET
    data_selector: shares
    params: {}
- name: dns_enumeration
  endpoint:
    path: /altdns
    method: GET
    data_selector: records
- name: amass_intel
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: records
- name: amass_enum
  endpoint:
    path: /amass/enum
    method: GET
    data_selector: records
- name: assetfinder
  endpoint:
    path: /assetfinder
    method: GET
    data_selector: records
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
- name: dnsenum
  endpoint:
    path: /dnsenum
    method: GET
    data_selector: records
    params: {}
- name: port_scan
  endpoint:
    path: /nmap/port_scan
    method: GET
    data_selector: results
    params:
      target: 192.168.11.4
- name: ack_scan
  endpoint:
    path: /nmap/ack_scan
    method: GET
    data_selector: results
    params:
      target: 192.168.11.4
- name: vuln_scan
  endpoint:
    path: /nmap/vuln_scan
    method: GET
    data_selector: results
    params:
      target: 192.168.11.4
- name: sniffing
  endpoint:
    path: /above/sniffing
    method: GET
    data_selector: protocols
    params: {}
- name: bruteshark
  endpoint:
    path: /bruteshark
    method: GET
    data_selector: analysis
    params: {}
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      extensions: inc
      wordlist: words.txt
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      excluded_status_codes: '404'
      wordlist: words.txt
- name: ssl_traffic
  endpoint:
    path: /
    method: GET
    data_selector: record
- name: url
  endpoint:
    path: /
    method: GET
    data_selector: url
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: config_options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: config_options
    params: {}
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
    data_selector: options
    params: {}
- name: dbd
  endpoint:
    path: /dbd
    method: GET
    data_selector: options
    params: {}
- name: ncat
  endpoint:
    path: /ncat
    method: GET
    data_selector: options
    params: {}
- name: netwox
  endpoint:
    path: /netwox
    method: GET
    data_selector: options
    params: {}
- name: image_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: File Size, File Type, Make, Camera Model Name, X Resolution, Y
      Resolution, Software
    params: {}
- name: audio_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: File Size, File Type, Audio Bitrate, Sample Rate, Channel Mode
    params: {}
- name: document_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: File Size, File Type, Zip Required Version, Zip Modify Date
    params: {}
- name: epub_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: File Size, File Type, Identifier, Title
    params: {}
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: metadata
  endpoint:
    path: /exif
    method: GET
    data_selector: records
- name: dns_enumeration
  endpoint:
    path: /dns/enumeration
    method: GET
    data_selector: records
- name: subdomain_discovery
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      exclude: '404'
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      exclude: '404'
- name: davtest
  endpoint:
    path: /davtest
    method: GET
- name: dhcpig
  endpoint:
    path: /dhcpig
    method: GET
- name: dotdotpwn
  endpoint:
    path: /dotdotpwn
    method: GET
- name: cloud_service
  endpoint:
    path: /cloud_enum
    method: GET
- name: ident_service
  endpoint:
    path: /ident-service
    method: GET
    data_selector: response
    params: {}
- name: web_screenshot
  endpoint:
    path: /eyewitness
    method: POST
    data_selector: results
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: GET
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: GET
    data_selector: results
- name: subdomain_discovery
  endpoint:
    path: /subdomain/discovery
    method: GET
    data_selector: subdomains
- name: smtp_user_enum
  endpoint:
    path: /
    method: SMTP
    data_selector: usernames
    params:
      method: VRFY
      username_file: users.txt
      target_host: 192.168.11.4
      port: 25
      timeout: 5
- name: headers
  endpoint:
    path: /headers
    method: GET
- name: sql_injection_vulnerabilities
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: 1*
- name: http_fuzz
  endpoint:
    path: /FUZZ
    method: GET
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: payload
    params: {}
- name: brutespray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: results
- name: cewl
  endpoint:
    path: /cewl
    method: GET
    data_selector: results
- name: changeme
  endpoint:
    path: /changeme
    method: GET
    data_selector: results
- name: crowbar
  endpoint:
    path: /crowbar
    method: GET
    data_selector: results
- name: crunch
  endpoint:
    path: /crunch
    method: GET
    data_selector: results
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: results
- name: smtp_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
- name: smtp_relay
  endpoint:
    path: /smtp/relay
    method: POST
    data_selector: results
- name: hashcat
  endpoint:
    path: /hashcat
    method: GET
- name: hydra
  endpoint:
    path: /hydra
    method: GET
- name: john_the_ripper
  endpoint:
    path: /john
    method: GET
- name: user_enum
  endpoint:
    path: /smtp-user-enum
    method: GET
- name: sql_injection_check
  endpoint:
    path: /vuln.php
    method: GET
    data_selector: results
    params:
      id: '1'
- name: wordlist_generation
  endpoint:
    path: /maskprocessor/generate
    method: POST
    data_selector: generated_words
    params: {}
- name: usage
  endpoint:
    path: /help
    method: GET
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: session
    params:
      password: hello
- name: payload
  endpoint:
    path: /
    method: GET
    data_selector: FUZZ
- name: BruteSpray
  endpoint:
    path: /brutespray
    method: GET
    data_selector: service_list
    params: {}
- name: CeWL
  endpoint:
    path: /cewl
    method: GET
    data_selector: wordlist
    params: {}
- name: changeme
  endpoint:
    path: /changeme
    method: GET
    data_selector: credential_check
    params: {}
- name: Crowbar
  endpoint:
    path: /crowbar
    method: GET
    data_selector: brute_force
    params: {}
- name: crunch
  endpoint:
    path: /crunch
    method: GET
    data_selector: wordlist_generation
    params: {}
- name: hashID
  endpoint:
    path: /hashid
    method: GET
    data_selector: hash_identification
    params: {}
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: results
    params: {}
- name: maskprocessor_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage
- name: ftp_login
  endpoint:
    path: /ftp/login
    method: POST
    data_selector: results
- name: ssh_login
  endpoint:
    path: /ssh/login
    method: POST
    data_selector: results
- name: telnet_login
  endpoint:
    path: /telnet/login
    method: POST
    data_selector: results
- name: smtp_login
  endpoint:
    path: /smtp/login
    method: POST
    data_selector: results
- name: wordlist_extraction
  endpoint:
    path: /wordlist/raid
    method: POST
    data_selector: results
    params:
      min: 8
      max: 12
      numbers: 'true'
- name: server_options
  endpoint:
    path: /server/options
    method: GET
    data_selector: options
- name: client_options
  endpoint:
    path: /client/options
    method: GET
    data_selector: options
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: GET
    data_selector: records
    params: {}
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: GET
    data_selector: records
    params: {}
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: GET
    data_selector: records
    params: {}
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: GET
    data_selector: records
    params: {}
- name: smtp_vrfy
  endpoint:
    path: /smtp_vrfy
    method: GET
    data_selector: records
    params: {}
- name: smtp_rcpt
  endpoint:
    path: /smtp_rcpt
    method: GET
    data_selector: records
    params: {}
- name: finger_lookup
  endpoint:
    path: /finger_lookup
    method: GET
    data_selector: records
    params: {}
- name: http_fuzz
  endpoint:
    path: /http_fuzz
    method: GET
    data_selector: records
    params: {}
- name: rdp_gateway
  endpoint:
    path: /rdp_gateway
    method: GET
    data_selector: records
    params: {}
- name: ajp_fuzz
  endpoint:
    path: /ajp_fuzz
    method: GET
    data_selector: records
    params: {}
- name: pop_login
  endpoint:
    path: /pop_login
    method: GET
    data_selector: records
    params: {}
- name: pop_passd
  endpoint:
    path: /pop_passd
    method: GET
    data_selector: records
    params: {}
- name: imap_login
  endpoint:
    path: /imap_login
    method: GET
    data_selector: records
    params: {}
- name: ldap_login
  endpoint:
    path: /ldap_login
    method: GET
    data_selector: records
    params: {}
- name: dcom_login
  endpoint:
    path: /dcom_login
    method: GET
    data_selector: records
    params: {}
- name: smb_login
  endpoint:
    path: /smb_login
    method: GET
    data_selector: records
    params: {}
- name: smb_lookupsid
  endpoint:
    path: /smb_lookupsid
    method: GET
    data_selector: records
    params: {}
- name: rlogin_login
  endpoint:
    path: /rlogin_login
    method: GET
    data_selector: records
    params: {}
- name: vmauthd_login
  endpoint:
    path: /vmauthd_login
    method: GET
    data_selector: records
    params: {}
- name: mssql_login
  endpoint:
    path: /mssql_login
    method: GET
    data_selector: records
    params: {}
- name: oracle_login
  endpoint:
    path: /oracle_login
    method: GET
    data_selector: records
    params: {}
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: GET
    data_selector: records
    params: {}
- name: mysql_query
  endpoint:
    path: /mysql_query
    method: GET
    data_selector: records
    params: {}
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: GET
    data_selector: records
    params: {}
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: GET
    data_selector: records
    params: {}
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: GET
    data_selector: records
    params: {}
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: GET
    data_selector: records
    params: {}
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: GET
    data_selector: records
    params: {}
- name: snmp_login
  endpoint:
    path: /snmp_login
    method: GET
    data_selector: records
    params: {}
- name: ike_enum
  endpoint:
    path: /ike_enum
    method: GET
    data_selector: records
    params: {}
- name: unzip_pass
  endpoint:
    path: /unzip_pass
    method: GET
    data_selector: records
    params: {}
- name: keystore_pass
  endpoint:
    path: /keystore_pass
    method: GET
    data_selector: records
    params: {}
- name: sqlcipher_pass
  endpoint:
    path: /sqlcipher_pass
    method: GET
    data_selector: records
    params: {}
- name: umbraco_crack
  endpoint:
    path: /umbraco_crack
    method: GET
    data_selector: records
    params: {}
- name: tcp_fuzz
  endpoint:
    path: /tcp_fuzz
    method: GET
    data_selector: records
    params: {}
- name: dummy_test
  endpoint:
    path: /dummy_test
    method: GET
    data_selector: records
    params: {}
- name: ssdp_device_desc
  endpoint:
    path: /ssdp/device-desc.xml
    method: GET
- name: ssdp_service_desc
  endpoint:
    path: /ssdp/service-desc.xml
    method: GET
- name: phishing_page
  endpoint:
    path: /ssdp/present.html
    method: GET
- name: proxify_logs
  endpoint:
    path: /proxify_logs
    method: GET
- name: chisel_server
  endpoint:
    path: /server
    method: GET
    data_selector: options
- name: chisel_client
  endpoint:
    path: /client
    method: GET
    data_selector: options
- name: server
  endpoint:
    path: /ligolo-proxy
    method: GET
    params: {}
- name: agent
  endpoint:
    path: /ligolo-agent
    method: GET
    params: {}
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: help
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: help
- name: merlinAgent
  endpoint:
    path: /merlinAgent
    method: GET
- name: merlinCLI
  endpoint:
    path: /merlinCLI
    method: GET
- name: merlinServer
  endpoint:
    path: /merlinServer
    method: GET
- name: session
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: payload
  endpoint:
    path: /payload
    method: POST
    data_selector: payloads
- name: dnscat_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: commands
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: commands
    params: {}
- name: agent
  endpoint:
    path: /agent
    method: POST
- name: file_recovery
  endpoint:
    path: /dev/loop0
    method: GET
    data_selector: recovered_files
- name: session
  endpoint:
    path: /sessions
    method: GET
    data_selector: sessions
- name: outguess
  endpoint:
    path: /outguess
    method: GET
    data_selector: usage
    params: {}
- name: passdetective
  endpoint:
    path: /passdetective
    method: GET
    data_selector: usage
    params: {}
- name: pspy
  endpoint:
    path: /pspy
    method: GET
    data_selector: usage
    params: {}
- name: raven
  endpoint:
    path: /raven
    method: GET
    data_selector: usage
    params: {}
- name: steghide
  endpoint:
    path: /steghide
    method: GET
    data_selector: usage
    params: {}
- name: stegseek
  endpoint:
    path: /stegseek
    method: GET
    data_selector: usage
    params: {}
- name: stegsnow
  endpoint:
    path: /stegsnow
    method: GET
    data_selector: usage
    params: {}
- name: binwalk
  endpoint:
    path: /binwalk
    method: GET
    data_selector: results
    params: {}
- name: edb
  endpoint:
    path: /edb
    method: GET
    data_selector: results
    params: {}
- name: ghidra
  endpoint:
    path: /ghidra
    method: GET
    data_selector: results
    params: {}
- name: hexwalk
  endpoint:
    path: /hexwalk
    method: GET
    data_selector: results
    params: {}
- name: imhex
  endpoint:
    path: /imhex
    method: GET
    data_selector: results
    params: {}
- name: inetsim
  endpoint:
    path: /inetsim
    method: GET
    data_selector: results
    params: {}
- name: forensics_tools
  endpoint:
    path: /forensics/tools
    method: GET
    data_selector: tools
- name: recovery
  endpoint:
    path: /dev/loop0
    method: GET
    data_selector: recovered_files
    params: {}
- name: timeline
  endpoint:
    path: /create_timeline
    method: POST
- name: safecopy_usage
  endpoint:
    path: /safecopy/usage
    method: GET
    data_selector: usage
- name: signature_scan
  endpoint:
    path: --signature
    method: GET
    data_selector: results
    params: {}
- name: extract
  endpoint:
    path: --extract
    method: GET
    data_selector: results
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities
    method: GET
    data_selector: results
- name: config_misconfigurations
  endpoint:
    path: /config
    method: GET
    data_selector: results
- name: filesystem_scan
  endpoint:
    path: /filesystem
    method: GET
    data_selector: results
- name: image_scan
  endpoint:
    path: /image
    method: GET
    data_selector: results
- name: kubernetes_scan
  endpoint:
    path: /kubernetes
    method: GET
    data_selector: results
- name: repository_scan
  endpoint:
    path: /repository
    method: GET
    data_selector: results
- name: rootfs_scan
  endpoint:
    path: /rootfs
    method: GET
    data_selector: results
- name: vm_scan
  endpoint:
    path: /vm
    method: GET
    data_selector: results
- name: security_report
  endpoint:
    path: /var/log/tiger/security.report
    method: GET
    data_selector: report
    params: {}
- name: clamdscan
  endpoint:
    path: /clamdscan
    method: GET
    data_selector: results
- name: freshclam
  endpoint:
    path: /freshclam
    method: GET
    data_selector: results
- name: rkhunter
  endpoint:
    path: /rkhunter
    method: GET
    data_selector: results
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: hosts
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: responses
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: results
- name: scan
  endpoint:
    path: /scan
    method: POST
    data_selector: results
    params:
      target: <ip addresses/ranges>
      ports: 20-25
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: vulnerability_search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      search: keyword
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
    params: {}
- name: os_detection
  endpoint:
    path: /os_detection
    method: GET
    data_selector: results
    params: {}
- name: vulnerability_scan
  endpoint:
    path: /vulnerability_scan
    method: GET
    data_selector: results
    params: {}
- name: sniffing
  endpoint:
    path: /above/sniffing
    method: GET
    data_selector: protocols
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: records
- name: packet_sniffing
  endpoint:
    path: /packet/sniffing
    method: GET
- name: packet_injection
  endpoint:
    path: /packet/injection
    method: POST
- name: config
  endpoint:
    path: /trivy/config
    method: GET
    data_selector: results
- name: filesystem
  endpoint:
    path: /trivy/filesystem
    method: GET
    data_selector: results
- name: image
  endpoint:
    path: /trivy/image
    method: GET
    data_selector: results
- name: kubernetes
  endpoint:
    path: /trivy/kubernetes
    method: GET
    data_selector: results
- name: repository
  endpoint:
    path: /trivy/repository
    method: GET
    data_selector: results
- name: rootfs
  endpoint:
    path: /trivy/rootfs
    method: GET
    data_selector: results
- name: sbom
  endpoint:
    path: /trivy/sbom
    method: GET
    data_selector: results
- name: vm
  endpoint:
    path: /trivy/vm
    method: GET
    data_selector: results
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
    data_selector: usage
    params: {}
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
    data_selector: usage
    params: {}
- name: tshark
  endpoint:
    path: /tshark
    method: GET
    data_selector: usage
    params: {}
- name: network_scanning
  endpoint:
    path: /network/scanning
    method: GET
    data_selector: tools
    params: {}
- name: arp_scan
  endpoint:
    path: /arp/scan
    method: GET
    data_selector: tools
    params: {}
- name: arping
  endpoint:
    path: /arping
    method: GET
    data_selector: tools
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: records
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: records
    params: {}
- name: targets
  endpoint:
    path: /targets
    method: GET
    data_selector: targets
- name: bruteforcing_commands
  endpoint:
    path: /path/to/auth/area
    method: GET
    data_selector: commands
    params: {}
- name: wpscan
  endpoint:
    path: /
    method: GET
    data_selector: scan_results
    params: {}
- name: cryptcat
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: dbd
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ncat
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: netwox
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: list_shares
  endpoint:
    path: /smbclient/listshares
    method: GET
    data_selector: shares
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: scan_results
- name: snmp
  endpoint:
    path: /snmp
    method: GET
    data_selector: detected_packet
    params: {}
- name: traffic
  endpoint:
    path: /traffic
    method: POST
    data_selector: captured_data
    params: {}
- name: domain_scan
  endpoint:
    path: /usr/bin/dnstwist
    method: GET
    data_selector: records
- name: domain_report
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: chaosreader
  endpoint:
    path: /chaosreader
    method: GET
    data_selector: session_files
    params: {}
- name: darkstat
  endpoint:
    path: /darkstat
    method: GET
    data_selector: traffic_statistics
    params: {}
- name: dnschef
  endpoint:
    path: /dnschef
    method: GET
    data_selector: dns_records
    params: {}
- name: ettercap
  endpoint:
    path: /ettercap
    method: GET
    data_selector: mitm_attacks
    params: {}
- name: url_collection
  endpoint:
    path: /
    method: GET
    data_selector: urls
    params:
      depth: 1
- name: ntlm_auth
  endpoint:
    path: /ntlm/auth
    method: GET
    data_selector: records
- name: http_auth
  endpoint:
    path: /http/auth
    method: GET
    data_selector: records
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: url
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
- name: image_metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: ftest
  endpoint:
    path: /ftest
    method: GET
    data_selector: configuration options
    params: {}
- name: ftestd
  endpoint:
    path: /ftestd
    method: GET
    data_selector: configuration options
    params: {}
- name: fwbuilder
  endpoint:
    path: /fwbuilder
    method: GET
    data_selector: usage
    params: {}
- name: bettercap
  endpoint:
    path: /bettercap
    method: GET
    data_selector: usage
    params: {}
- name: screenshot
  endpoint:
    path: /web
    method: GET
    data_selector: results
- name: cryptcat
  endpoint:
    path: /cryptcat
    method: GET
- name: dbd
  endpoint:
    path: /dbd
    method: GET
- name: ncat
  endpoint:
    path: /ncat
    method: GET
- name: netwox
  endpoint:
    path: /netwox
    method: GET
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
    params: {}
- name: input
  endpoint:
    params:
      domains: string[]
      file: string
- name: source
  endpoint:
    params:
      specific_sources: string[]
      exclude_sources: string[]
- name: rate_limit
  endpoint:
    params:
      max_requests: int
      concurrent_goroutines: int
- name: output
  endpoint:
    params:
      file: string
      json_format: boolean
      output_directory: string
- name: configuration
  endpoint:
    params:
      config_file: string
      provider_config_file: string
- name: headers
  endpoint:
    path: /headers
    method: GET
    data_selector: headers
- name: dnsenum_usage
  endpoint:
    path: /dnsenum/usage
    method: GET
    data_selector: records
    params: {}
- name: dnsgen_usage
  endpoint:
    path: /dnsgen/usage
    method: GET
    data_selector: records
    params: {}
- name: dnsrecon_usage
  endpoint:
    path: /dnsrecon/usage
    method: GET
    data_selector: records
    params: {}
- name: dnstracer_usage
  endpoint:
    path: /dnstracer/usage
    method: GET
    data_selector: records
    params: {}
- name: dnstwist_usage
  endpoint:
    path: /dnstwist/usage
    method: GET
    data_selector: records
    params: {}
- name: domain
  endpoint:
    path: /dnstwist
    method: GET
    data_selector: records
- name: dhcp_request
  endpoint:
    path: /dhcp/request
    method: GET
    data_selector: records
    params: {}
- name: directory_enumeration
  endpoint:
    path: /includes/
    method: GET
    data_selector: results
    params:
      depth: 2
      wordlist: words.txt
      extensions: php,html
- name: fuzzing
  endpoint:
    path: /?q=FUZZ
    method: GET
    data_selector: results
    params:
      wordlist: words.txt
      excluded_status_codes: '404'
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: null
    params: {}
- name: subdomains
  endpoint:
    path: /
    method: GET
    data_selector: subdomains
- name: urls
  endpoint:
    path: /
    method: GET
    data_selector: urls
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/enumeration
    method: POST
    data_selector: results
    params: {}
- name: cloud_services
  endpoint:
    path: /cloud_enum
    method: GET
    data_selector: cloud_services
- name: metadata
  endpoint:
    path: /exiftool
    method: GET
    data_selector: metadata
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: reports
    params: {}
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: reports
    params: {}
- name: user_enumeration
  endpoint:
    path: /
    method: VRFY
    data_selector: responses
    params:
      user: username
      domain: example.com
- name: subdomain
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
    params:
      domain: example.com
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: records
- name: headers
  endpoint:
    path: /headers
    method: GET
- name: whois
  endpoint:
    path: /whois
    method: GET
- name: sslinfo
  endpoint:
    path: /sslinfo
    method: GET
- name: dns
  endpoint:
    path: /dns
    method: GET
- name: fuzzing_test
  endpoint:
    path: /FUZZ
    method: GET
    data_selector: response
    params: {}
- name: vulnerabilities
  endpoint:
    path: /vulnerabilities/fi/
    method: GET
    data_selector: vulnerabilities
- name: bruteforce_service
  endpoint:
    path: /brutespray
    method: GET
    data_selector: results
- name: user_enum
  endpoint:
    path: /smtp/user_enum
    method: GET
    data_selector: results
    params:
      mode: VRFY
      user_file: users.txt
      host: 192.168.11.4
      port: 25
      timeout: 5
- name: password_analysis_toolkit
  endpoint:
    path: /statsgen
    method: GET
    data_selector: ''
    params: {}
- name: mask_generator
  endpoint:
    path: /maskgen
    method: GET
    data_selector: ''
    params: {}
- name: policy_generator
  endpoint:
    path: /policygen
    method: GET
    data_selector: ''
    params: {}
- name: rule_generator
  endpoint:
    path: /rulegen
    method: GET
    data_selector: ''
    params: {}
- name: injection_tests
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: results
    params:
      id: '1'
- name: brute_force_modules
  endpoint:
    path: /modules
    method: GET
    data_selector: modules
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: session
    params: {}
- name: hashes
  endpoint:
    path: /hashes
    method: GET
    data_selector: records
    params: {}
- name: server
  endpoint:
    path: /chisel/server
    method: GET
    data_selector: status
- name: client
  endpoint:
    path: /chisel/client
    method: GET
    data_selector: status
- name: BruteSpray
  endpoint:
    path: /brutespray
    method: GET
- name: CeWL
  endpoint:
    path: /cewl
    method: GET
- name: changeme
  endpoint:
    path: /changeme
    method: GET
- name: Crowbar
  endpoint:
    path: /crowbar
    method: GET
- name: crunch
  endpoint:
    path: /crunch
    method: GET
- name: hashID
  endpoint:
    path: /hashid
    method: GET
- name: tunnel
  endpoint:
    path: /tunnel
    method: POST
- name: tundeep
  endpoint:
    path: /tundeep
    method: GET
    data_selector: records
- name: ftp_login
  endpoint:
    path: /ftp_login
    method: POST
- name: ssh_login
  endpoint:
    path: /ssh_login
    method: POST
- name: telnet_login
  endpoint:
    path: /telnet_login
    method: POST
- name: smtp_login
  endpoint:
    path: /smtp_login
    method: POST
- name: pop_login
  endpoint:
    path: /pop_login
    method: POST
- name: imap_login
  endpoint:
    path: /imap_login
    method: POST
- name: mysql_login
  endpoint:
    path: /mysql_login
    method: POST
- name: pgsql_login
  endpoint:
    path: /pgsql_login
    method: POST
- name: rdp_login
  endpoint:
    path: /rdp_login
    method: POST
- name: vnc_login
  endpoint:
    path: /vnc_login
    method: POST
- name: dns_forward
  endpoint:
    path: /dns_forward
    method: POST
- name: dns_reverse
  endpoint:
    path: /dns_reverse
    method: POST
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: ruby
    data_selector: command
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: ruby
    data_selector: command
    params: {}
- name: wordlist
  endpoint:
    path: /wordlist
    method: GET
    data_selector: records
- name: agent
  endpoint:
    path: /agent
    method: POST
- name: chisel_server
  endpoint:
    path: /server
    method: POST
- name: chisel_client
  endpoint:
    path: /client
    method: POST
- name: sessions
  endpoint:
    path: /api/sessions
    method: GET
    data_selector: sessions
    params: {}
- name: generate_payload
  endpoint:
    path: /api/generate
    method: POST
    data_selector: payload
    params: {}
- name: dns2tcp_server
  endpoint:
    path: /dns2tcpd
    method: GET
- name: dns2tcp_client
  endpoint:
    path: /dns2tcpc
    method: GET
- name: global_socket_server
  endpoint:
    path: /gs-netcat
    method: GET
- name: global_socket_client
  endpoint:
    path: /gs-netcat
    method: GET
- name: iodine_server
  endpoint:
    path: /iodined
    method: GET
- name: PassDetective
  endpoint:
    path: PassDetective
    method: extract
    data_selector: passwords
    params: {}
- name: pspy
  endpoint:
    path: pspy
    method: GET
    data_selector: commands
    params: {}
- name: Raven
  endpoint:
    path: raven
    method: POST
    data_selector: file
    params: {}
- name: Steghide
  endpoint:
    path: steghide
    method: embed
    data_selector: data
    params: {}
- name: Stegseek
  endpoint:
    path: stegseek
    method: crack
    data_selector: results
    params: {}
- name: SNOW
  endpoint:
    path: stegsnow
    method: conceal
    data_selector: hidden
    params: {}
- name: server
  endpoint:
    path: /server
    method: GET
- name: client
  endpoint:
    path: /client
    method: GET
- name: autopsy
  endpoint:
    path: /autopsy
    method: GET
    data_selector: records
    params: {}
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
    data_selector: records
    params: {}
- name: dcfldd
  endpoint:
    path: /dcfldd
    method: GET
    data_selector: records
    params: {}
- name: dd_rescue
  endpoint:
    path: /dd_rescue
    method: GET
    data_selector: records
    params: {}
- name: hash_calculation
  endpoint:
    path: /hashdeep
    method: GET
    data_selector: hashes
- name: hash_calculation
  endpoint:
    path: /hashrat/calculate
    method: POST
    data_selector: hashes
- name: hash_check
  endpoint:
    path: /hashrat/check
    method: POST
    data_selector: results
- name: proxy_options
  endpoint:
    path: /proxify
    method: GET
- name: ssl_options
  endpoint:
    path: /ssl
    method: GET
- name: client_replay
  endpoint:
    path: /client_replay
    method: GET
- name: server_replay
  endpoint:
    path: /server_replay
    method: GET
- name: map_remote
  endpoint:
    path: /map_remote
    method: GET
- name: map_local
  endpoint:
    path: /map_local
    method: GET
- name: modify_body
  endpoint:
    path: /modify_body
    method: GET
- name: modify_headers
  endpoint:
    path: /modify_headers
    method: GET
- name: filters
  endpoint:
    path: /filters
    method: GET
- name: backup_image
  endpoint:
    path: /backup.img
    method: POST
    data_selector: tasks
    params:
      storage_file: backup.plaso
- name: safecopy_usage
  endpoint:
    path: --help
    method: GET
    data_selector: usage
    params: {}
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: POST
    data_selector: session
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: POST
    data_selector: session
    params: {}
- name: binwalk
  endpoint:
    path: /binwalk
    method: GET
    data_selector: help
    params: {}
- name: edb
  endpoint:
    path: /edb
    method: GET
    data_selector: help
    params: {}
- name: ghidra
  endpoint:
    path: /ghidra
    method: GET
    data_selector: usage
    params: {}
- name: hexwalk
  endpoint:
    path: /hexwalk
    method: GET
    data_selector: help
    params: {}
- name: imhex
  endpoint:
    path: /imhex
    method: GET
    data_selector: usage
    params: {}
- name: inetsim
  endpoint:
    path: /inetsim
    method: GET
    data_selector: help
    params: {}
- name: sessions
  endpoint:
    path: /sessions
    method: GET
    data_selector: session_records
- name: payload
  endpoint:
    path: /payload
    method: POST
    data_selector: generated_payload
- name: chkrootkit
  endpoint:
    path: /usr/sbin/chkrootkit
    method: GET
    data_selector: options
    params: {}
- name: forensics_tools
  endpoint:
    path: /forensics
    method: GET
- name: recovered_files
  endpoint:
    path: /dev/loop0
    method: GET
    data_selector: recovered
    params: {}
- name: hash
  endpoint:
    path: /hashrat
    method: GET
    data_selector: hashes
- name: logfile
  endpoint:
    path: /pinfo/logfile
    method: GET
    data_selector: logs
- name: process_memory_limit
  endpoint:
    path: /pinfo/process_memory_limit
    method: GET
    data_selector: limits
- name: security_report
  endpoint:
    path: /var/log/tiger/security.report.kali.241125-03:44
    method: GET
    data_selector: report
    params: {}
- name: safecopy_usage
  endpoint:
    path: /safecopy/help
    method: GET
    data_selector: usage
- name: fuzzy_hashing
  endpoint:
    path: /ssdeep
    method: GET
    data_selector: hash_results
- name: filesystem
  endpoint:
    path: /scan/filesystem
    method: GET
    data_selector: records
    params: {}
- name: image
  endpoint:
    path: /scan/image
    method: GET
    data_selector: records
    params: {}
- name: Network Scanning - Amap
  endpoint:
    path: /tools/amap
    method: GET
    data_selector: usage
    params: {}
- name: Network Scanning - arp-scan
  endpoint:
    path: /tools/arp-scan
    method: GET
    data_selector: usage
    params: {}
- name: Network Scanning - ARPing
  endpoint:
    path: /tools/arping
    method: GET
    data_selector: usage
    params: {}
- name: binwalk
  endpoint:
    path: /binwalk
    method: GET
    data_selector: results
    params: {}
- name: edb
  endpoint:
    path: /edb
    method: GET
    data_selector: results
    params: {}
- name: ghidra
  endpoint:
    path: /ghidra
    method: GET
    data_selector: results
    params: {}
- name: hexwalk
  endpoint:
    path: /hexwalk
    method: GET
    data_selector: results
    params: {}
- name: imhex
  endpoint:
    path: /imhex
    method: GET
    data_selector: results
    params: {}
- name: inetsim
  endpoint:
    path: /inetsim
    method: GET
    data_selector: results
    params: {}
- name: port_scan
  endpoint:
    path: /port_scan
    method: GET
    data_selector: results
- name: service_scan
  endpoint:
    path: /service_scan
    method: GET
    data_selector: results
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: results
- name: scan_rule_creation
  endpoint:
    path: /scan/rules
    method: POST
    data_selector: rules
    params: {}
- name: snort_start
  endpoint:
    path: /snort/start
    method: POST
    data_selector: start
    params: {}
- name: port_scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
- name: vulnerability_scan
  endpoint:
    path: /vuln
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: network_protocols
  endpoint:
    path: /network/protocols
    method: GET
    data_selector: protocols
    params: {}
- name: vulnerability_search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params:
      search: keyword
- name: application_session
  endpoint:
    path: /chaosreader/application_session
    method: GET
    data_selector: sessions
- name: packet_sniffer
  endpoint:
    path: /sniff
    method: GET
    data_selector: packets
- name: security_report
  endpoint:
    path: /var/log/tiger/security.report.kali.241125-03:44
    method: GET
    data_selector: report
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
    params: {}
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: records
    params: {}
- name: tcpick
  endpoint:
    path: /tcpick
    method: GET
- name: tcpreplay
  endpoint:
    path: /tcpreplay
    method: GET
- name: tshark
  endpoint:
    path: /tshark
    method: GET
- name: configuration_options
  endpoint:
    path: /ftest/configuration
    method: GET
    data_selector: options
    params: {}
- name: timing_options
  endpoint:
    path: /ftest/timing
    method: GET
    data_selector: timings
    params: {}
- name: evasion_options
  endpoint:
    path: /ftest/evasion
    method: GET
    data_selector: evasions
    params: {}
- name: connection_options
  endpoint:
    path: /ftest/connection
    method: GET
    data_selector: connections
    params: {}
- name: config
  endpoint:
    path: config
    method: SCAN
    data_selector: records
- name: filesystem
  endpoint:
    path: filesystem
    method: SCAN
    data_selector: records
- name: image
  endpoint:
    path: image
    method: SCAN
    data_selector: records
- name: kubernetes
  endpoint:
    path: kubernetes
    method: SCAN
    data_selector: records
- name: repository
  endpoint:
    path: repository
    method: SCAN
    data_selector: records
- name: rootfs
  endpoint:
    path: rootfs
    method: SCAN
    data_selector: records
- name: sbom
  endpoint:
    path: sbom
    method: SCAN
    data_selector: records
- name: vm
  endpoint:
    path: vm
    method: SCAN
    data_selector: records
- name: bettercap_usage
  endpoint:
    path: /usage
    method: GET
    data_selector: usage_info
- name: bettercap_examples
  endpoint:
    path: /examples
    method: GET
    data_selector: examples_info
- name: tags
  endpoint:
    path: /api/v1/tags
    method: GET
    data_selector: tags
- name: user_rankings
  endpoint:
    path: /api/v1/user_rankings
    method: GET
    data_selector: user_rankings
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: users
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: users
- name: list_shares
  endpoint:
    path: /smb/client/list_shares
    method: GET
    data_selector: shares
- name: create_directory
  endpoint:
    path: /smb/client/create_directory
    method: POST
    data_selector: result
- name: delete_directory
  endpoint:
    path: /smb/client/delete_directory
    method: DELETE
    data_selector: result
- name: rename_directory
  endpoint:
    path: /smb/client/rename_directory
    method: PUT
    data_selector: result
- name: list_contents
  endpoint:
    path: /smb/client/list_contents
    method: GET
    data_selector: contents
- name: delete_file
  endpoint:
    path: /smb/client/delete_file
    method: DELETE
    data_selector: result
- name: rename_file
  endpoint:
    path: /smb/client/rename_file
    method: PUT
    data_selector: result
- name: get_file
  endpoint:
    path: /smb/client/get_file
    method: GET
    data_selector: file_content
- name: put_file
  endpoint:
    path: /smb/client/put_file
    method: POST
    data_selector: result
- name: recursively_get_directory
  endpoint:
    path: /smb/client/recursively_get_directory
    method: GET
    data_selector: directory_contents
- name: recursively_put_directory
  endpoint:
    path: /smb/client/recursively_put_directory
    method: POST
    data_selector: result
- name: recursively_delete_directory
  endpoint:
    path: /smb/client/recursively_delete_directory
    method: DELETE
    data_selector: result
- name: DNS Enumeration
  endpoint:
    path: /amass/intel
    method: GET
    data_selector: results
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params: {}
- name: dns_records
  endpoint:
    path: /dns/records
    method: GET
    data_selector: records
- name: subdomain_scan
  endpoint:
    path: /
    method: POST
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /organizations/MIERUNE/items
    method: GET
    data_selector: records
- name: followers
  endpoint:
    path: /organizations/MIERUNE/followers
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: official_events
  endpoint:
    path: /official-events
    method: GET
    data_selector: events
    params: {}
- name: campaigns
  endpoint:
    path: /official-campaigns
    method: GET
    data_selector: campaigns
    params: {}
- name: event_overview
  endpoint:
    path: /tech-festa/2025
    method: GET
    data_selector: event_details
    params: {}
- name: sponsor_info
  endpoint:
    path: /tech-festa/2025/sponsors
    method: GET
    data_selector: sponsors
    params: {}
- name: typo_detection
  endpoint:
    path: /typo-detection
    method: GET
    data_selector: results
    params: {}
- name: target_url
  endpoint:
    path: /
    method: GET
    params:
      q: FUZZ
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params:
      page: '1'
      per_page: '20'
- name: authenticated_user_items
  endpoint:
    path: /api/v2/authenticated_user/items
    method: GET
    data_selector: items
    params: {}
- name: subdomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: urls
  endpoint:
    path: /urls
    method: GET
    data_selector: urls
- name: cloud_enum
  endpoint:
    path: /cloud_enum
    method: GET
- name: access_token
  endpoint:
    path: /api/v2/access_tokens
    method: POST
    data_selector: client_id
    params: {}
- name: items_reactions
  endpoint:
    path: /api/v2/items/reactions
    method: GET
    data_selector: ''
    params:
      page: '1'
      per_page: '20'
      query: created:>=2020-01 created:<=2020-12
- name: authenticated_user
  endpoint:
    path: /api/v2/authenticated_user
    method: GET
    data_selector: ''
    params: {}
- name: comments
  endpoint:
    path: /api/v2/comments/:comment_id
    method: GET
    data_selector: ''
    params: {}
- name: image_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: File Size, File Type, MIME Type, Exif Byte Order, Image Description,
      Make, Camera Model Name, Orientation, X Resolution, Y Resolution, Resolution
      Unit, Software
    params: {}
- name: audio_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: File Size, File Type, MIME Type, MPEG Audio Version, Audio Layer,
      Audio Bitrate, Sample Rate, Channel Mode
    params: {}
- name: document_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: File Size, File Type, MIME Type, Zip Required Version, Zip Bit
      Flag, Zip Compression, Zip Modify Date
    params: {}
- name: epub_metadata
  endpoint:
    path: exiftool
    method: GET
    data_selector: File Size, File Type, MIME Type, Identifier Id, Identifier, Title
      Id, Title
    params: {}
- name: emoji_reaction
  endpoint:
    path: /api/v2/comments/:comment_id/reactions
    method: GET
    data_selector: ''
    params: {}
- name: group
  endpoint:
    path: /api/v2/groups
    method: GET
    data_selector: ''
    params: {}
- name: group_member
  endpoint:
    path: /api/v2/groups/:url_name/members
    method: GET
    data_selector: ''
    params: {}
- name: scan
  endpoint:
    path: /scan
    method: GET
    data_selector: results
    params: {}
- name: report
  endpoint:
    path: /report
    method: GET
    data_selector: reports
    params: {}
- name: team_invitations
  endpoint:
    path: /api/v2/team_invitations
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: records
    params: {}
- name: authenticated_user_items
  endpoint:
    path: /api/v2/authenticated_user/items
    method: GET
    data_selector: records
    params: {}
- name: subdomain
  endpoint:
    path: /subdomains
    method: GET
    data_selector: subdomains
- name: dns
  endpoint:
    path: /dns
    method: GET
- name: subdomain
  endpoint:
    path: /subdomain
    method: GET
- name: whois
  endpoint:
    path: /whois
    method: GET
- name: ssl
  endpoint:
    path: /ssl
    method: GET
- name: items
  endpoint:
    path: /api/v2/items/:item_id
    method: PATCH
    data_selector: items
    params: {}
- name: imported_items
  endpoint:
    path: /api/v2/imported_items
    method: POST
    data_selector: imported_items
    params: {}
- name: tags_items
  endpoint:
    path: /api/v2/tags/:tag_id/items
    method: GET
    data_selector: tags_items
    params: {}
- name: users_items
  endpoint:
    path: /api/v2/users/:user_id/items
    method: GET
    data_selector: users_items
    params: {}
- name: users_stocks
  endpoint:
    path: /api/v2/users/:user_id/stocks
    method: GET
    data_selector: users_stocks
    params: {}
- name: likes
  endpoint:
    path: /api/v2/items/:item_id/likes
    method: GET
    data_selector: '[*]'
    params: {}
- name: tags
  endpoint:
    path: /api/v2/tags
    method: GET
    data_selector: '[*]'
    params:
      page: '1'
      per_page: '20'
      sort: count
- name: team_memberships
  endpoint:
    path: /api/v2/team_memberships
    method: GET
    data_selector: '[*]'
    params:
      page: '1'
      per_page: '20'
- name: templates
  endpoint:
    path: /api/v2/templates
    method: GET
    data_selector: '[*]'
    params:
      page: '1'
      per_page: '20'
- name: http_response_headers
  endpoint:
    path: /
    method: GET
    data_selector: headers
    params: {}
- name: templates
  endpoint:
    path: /api/v2/templates
    method: POST
    data_selector: body
    params: {}
- name: users
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: ''
    params:
      page: '1'
      per_page: '20'
- name: user_followers
  endpoint:
    path: /api/v2/users/:user_id/followers
    method: GET
    data_selector: ''
    params:
      page: '1'
      per_page: '20'
- name: smtp_user_enumeration
  endpoint:
    path: /smtp/user/enumeration
    method: GET
    data_selector: results
- name: smtp_relay_testing
  endpoint:
    path: /smtp/relay/testing
    method: GET
    data_selector: results
- name: user_enumeration
  endpoint:
    path: /
    method: VRFY
    data_selector: users
    params:
      max_processes: 5
      tcp_port: 25
      query_timeout: 5
- name: sql_injection
  endpoint:
    path: /vulnerabilities/sqli/
    method: GET
    data_selector: payloads
- name: articles
  endpoint:
    path: /tikeda123/items
    method: GET
    data_selector: items
- name: questions
  endpoint:
    path: /tikeda123/questions
    method: GET
    data_selector: questions
- name: likes
  endpoint:
    path: /tikeda123/likes
    method: GET
    data_selector: likes
- name: followers
  endpoint:
    path: /tikeda123/followers
    method: GET
    data_selector: followers
- name: following_users
  endpoint:
    path: /tikeda123/following_users
    method: GET
    data_selector: following_users
- name: following_tags
  endpoint:
    path: /tikeda123/following_tags
    method: GET
    data_selector: following_tags
- name: backdoor
  endpoint:
    path: /backdoor.php
    method: GET
    data_selector: response
- name: session
  endpoint:
    path: /session
    method: GET
    data_selector: session_info
- name: supported_services
  endpoint:
    path: /supported_services
    method: GET
    data_selector: services
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: hashid
  endpoint:
    path: /hashid
    method: GET
    data_selector: results
    params: {}
- name: incremental_mode
  endpoint:
    path: /incremental
    method: GET
    data_selector: records
- name: custom_charsets
  endpoint:
    path: /custom_charsets
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /QUANON
    method: GET
    data_selector: data
    params: {}
- name: user_feed
  endpoint:
    path: /QUANON/feed
    method: GET
    data_selector: data
    params: {}
- name: following_tags
  endpoint:
    path: /QUANON/following_tags
    method: GET
    data_selector: data
    params: {}
- name: hashes
  endpoint:
    path: /hashes
    method: POST
    data_selector: results
- name: chisel_server
  endpoint:
    path: /server
    method: POST
    data_selector: response
    params: {}
- name: chisel_client
  endpoint:
    path: /client
    method: POST
    data_selector: response
    params: {}
- name: user
  endpoint:
    path: /api/v2/users/tomo-2525
    method: GET
    data_selector: data
- name: organizations
  endpoint:
    path: /api/v2/users/tomo-2525/organizations
    method: GET
    data_selector: data
- name: following_tags
  endpoint:
    path: /api/v2/users/tomo-2525/following_tags
    method: GET
    data_selector: data
- name: proxy_server
  endpoint:
    path: /start
    method: POST
    data_selector: response
    params:
      password: hello
- name: client
  endpoint:
    path: /connect
    method: POST
    data_selector: response
    params: {}
- name: trend
  endpoint:
    path: /
    method: GET
- name: question_feed
  endpoint:
    path: /question-feed
    method: GET
- name: official_campaigns
  endpoint:
    path: /official-campaigns
    method: GET
- name: official_events
  endpoint:
    path: /official-events
    method: GET
- name: official_columns
  endpoint:
    path: /official-columns
    method: GET
- name: organizations
  endpoint:
    path: /organizations
    method: GET
- name: ai_dev_team
  endpoint:
    path: /official-campaigns/ai-dev-team
    method: GET
- name: tracks
  endpoint:
    path: /v1/tracks
    method: GET
    data_selector: items
- name: artists
  endpoint:
    path: /v1/artists
    method: GET
    data_selector: items
- name: dnscat2_server
  endpoint:
    path: /dnscat2-server
    method: GET
    data_selector: commands
    params: {}
- name: dnscat_client
  endpoint:
    path: /dnscat
    method: GET
    data_selector: commands
    params: {}
- name: agent
  endpoint:
    path: /merlinAgent
    method: GET
- name: server
  endpoint:
    path: /merlinServer
    method: GET
- name: cli
  endpoint:
    path: /merlinCLI
    method: GET
- name: generate_payload
  endpoint:
    path: /generate
    method: POST
    data_selector: payload
- name: mtls_listener
  endpoint:
    path: /mtls
    method: POST
    data_selector: listener
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: PassDetective
  endpoint:
    path: PassDetective
    method: extract
    data_selector: passwords
- name: pspy
  endpoint:
    path: pspy
    method: run
    data_selector: process_events
- name: Raven
  endpoint:
    path: raven
    method: start
    data_selector: file_uploads
- name: Steghide
  endpoint:
    path: steghide
    method: embed
    data_selector: embedding
- name: Stegseek
  endpoint:
    path: stegseek
    method: crack
    data_selector: cracked_data
- name: SNOW
  endpoint:
    path: stegsnow
    method: conceal
    data_selector: hidden_message
- name: dc3dd
  endpoint:
    path: /dc3dd
    method: GET
    data_selector: records
- name: file_recovery
  endpoint:
    path: /dev/loop0
    method: GET
    data_selector: recovered
- name: baddevice
  endpoint:
    path: /dev/mapper/baddevice
    method: GET
    data_selector: records
    params: {}
- name: logging
  endpoint:
    path: /logging
    method: POST
    data_selector: records
- name: binwalk
  endpoint:
    path: binwalk
    method: GET
    data_selector: results
    params: {}
- name: edb
  endpoint:
    path: edb
    method: GET
    data_selector: results
    params: {}
- name: ghidra
  endpoint:
    path: ghidra
    method: GET
    data_selector: results
    params: {}
- name: hexwalk
  endpoint:
    path: hexwalk
    method: GET
    data_selector: results
    params: {}
- name: imhex
  endpoint:
    path: imhex
    method: GET
    data_selector: results
    params: {}
- name: inetsim
  endpoint:
    path: inetsim
    method: GET
    data_selector: results
    params: {}
- name: chkrootkit
  endpoint:
    path: /usr/sbin/chkrootkit
    method: GET
    data_selector: ''
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: vulnerability_search
  endpoint:
    path: /search
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Certificates Information
  endpoint:
    path: /scan/certificates
    method: GET
    data_selector: certificates
    params: {}
- name: TLS 1.3 Cipher Suites
  endpoint:
    path: /scan/tls13/cipher_suites
    method: GET
    data_selector: cipher_suites
    params: {}
- name: TLS 1.2 Cipher Suites
  endpoint:
    path: /scan/tls12/cipher_suites
    method: GET
    data_selector: cipher_suites
    params: {}
- name: Vulnerabilities
  endpoint:
    path: /scan/vulnerabilities
    method: GET
    data_selector: vulnerabilities
    params: {}
- name: security_report
  endpoint:
    path: /var/log/tiger/security.report.kali.241125-03:44
    method: GET
    data_selector: report
    params: {}
- name: posts
  endpoint:
    path: /Sakai_path/posts
    method: GET
    data_selector: posts
- name: followers
  endpoint:
    path: /Sakai_path/followers
    method: GET
    data_selector: followers
- name: followees
  endpoint:
    path: /Sakai_path/following_users
    method: GET
    data_selector: followees
- name: organizations
  endpoint:
    path: /Sakai_path/following_organizations
    method: GET
    data_selector: organizations
- name: tags
  endpoint:
    path: /Sakai_path/following_tags
    method: GET
    data_selector: tags
- name: コードレビュー記事
  endpoint:
    path: /tags/%e3%82%b3%e3%83%bc%e3%83%89%e3%83%ac%e3%83%93%e3%83%a5%e3%83%bc/feed
    method: GET
    data_selector: posts
    params: {}
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: records
    params: {}
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: records
    params: {}
- name: repository
  endpoint:
    path: /repository
    method: GET
    data_selector: records
    params: {}
- name: sbom
  endpoint:
    path: /sbom
    method: GET
    data_selector: records
    params: {}
- name: vm
  endpoint:
    path: /vm
    method: GET
    data_selector: records
    params: {}
- name: article
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: results
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: results
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: results
- name: repository
  endpoint:
    path: /repository
    method: GET
    data_selector: results
- name: vm
  endpoint:
    path: /vm
    method: GET
    data_selector: results
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: user
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: config
  endpoint:
    path: /config
    method: GET
    data_selector: records
- name: filesystem
  endpoint:
    path: /filesystem
    method: GET
    data_selector: records
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: records
- name: kubernetes
  endpoint:
    path: /kubernetes
    method: GET
    data_selector: records
- name: repository
  endpoint:
    path: /repository
    method: GET
    data_selector: records
- name: rootfs
  endpoint:
    path: /rootfs
    method: GET
    data_selector: records
- name: sbom
  endpoint:
    path: /sbom
    method: GET
    data_selector: records
- name: vm
  endpoint:
    path: /vm
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tags
  endpoint:
    path: /api/v2/tags
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: data
- name: knowledge_pipeline
  endpoint:
    path: /api/v1/knowledge_pipeline
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: sample_from_prior
  endpoint:
    path: /sample_from_prior
    method: POST
    data_selector: samples
    params:
      n: 50
- name: save_model
  endpoint:
    path: /save_model
    method: POST
    data_selector: saved_model
    params: {}
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params: {}
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params: {}
- name: example_smiles
  endpoint:
    path: /items
    method: GET
    data_selector: records
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /api/v1/smiles
    method: GET
    data_selector: records
- name: AI Collaboration
  endpoint:
    path: /official-campaigns/ai-dev-team
    method: GET
    data_selector: articles
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /organizations/hitachi-cloud/items
    method: GET
    data_selector: items
    params: {}
- name: followers
  endpoint:
    path: /organizations/hitachi-cloud/followers
    method: GET
    data_selector: followers
    params: {}
- name: campaign
  endpoint:
    path: /official-events
    method: GET
    data_selector: events
- name: smiles
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: items
    params: {}
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: users
    params: {}
- name: smiles
  endpoint:
    path: /api/v1/smiles
    method: GET
    data_selector: records
    params: {}
- name: Event Overview
  endpoint:
    path: /tech-festa/2025
    method: GET
    data_selector: event_details
    params: {}
- name: Qiita Tech Sprint
  endpoint:
    path: /tech-festa/2025/tech-sprint
    method: GET
    data_selector: sprint_details
    params: {}
- name: Qiita Tech Spark
  endpoint:
    path: /tech-festa/2025/tech-spark
    method: GET
    data_selector: spark_details
    params: {}
- name: Ranking
  endpoint:
    path: /tech-festa/2025/ranking
    method: GET
    data_selector: ranking_details
    params: {}
- name: Pickup Articles
  endpoint:
    path: /tech-festa/2025/pickups
    method: GET
    data_selector: pickup_articles
    params: {}
- name: Award
  endpoint:
    path: /tech-festa/2025/award
    method: GET
    data_selector: award_details
    params: {}
- name: training_epoch
  endpoint:
    path: /train/epoch
    method: GET
    data_selector: records
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params:
      page: 1
      per_page: 20
- name: users
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: users
    params: {}
- name: access_token
  endpoint:
    path: /api/v2/access_tokens
    method: POST
- name: authenticated_user
  endpoint:
    path: /api/v2/authenticated_user
    method: GET
- name: comments
  endpoint:
    path: /api/v2/comments/:comment_id
    method: GET
- name: smiles
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: smiles
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: emoji_reaction_comment
  endpoint:
    path: /api/v2/comments/:comment_id/reactions
    method: GET
    data_selector: records
- name: emoji_reaction_item
  endpoint:
    path: /api/v2/items/:item_id/reactions
    method: GET
    data_selector: records
- name: group
  endpoint:
    path: /api/v2/groups
    method: GET
    data_selector: records
- name: group_member
  endpoint:
    path: /api/v2/groups/:url_name/members
    method: GET
    data_selector: records
- name: team_invitations
  endpoint:
    path: /api/v2/team_invitations
    method: GET
    data_selector: ''
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: ''
- name: authenticated_user_items
  endpoint:
    path: /api/v2/authenticated_user/items
    method: GET
    data_selector: ''
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /api/valid_molecules
    method: GET
    data_selector: molecules
    params: {}
- name: items
  endpoint:
    path: /api/v2/items/:item_id
    method: PATCH
    data_selector: body
    params: {}
- name: imported_items
  endpoint:
    path: /api/v2/imported_items
    method: POST
    data_selector: body
    params: {}
- name: tags_items
  endpoint:
    path: /api/v2/tags/:tag_id/items
    method: GET
    data_selector: ''
    params:
      page: '1'
      per_page: '20'
- name: users_items
  endpoint:
    path: /api/v2/users/:user_id/items
    method: GET
    data_selector: ''
    params:
      page: '1'
      per_page: '20'
- name: users_stocks
  endpoint:
    path: /api/v2/users/:user_id/stocks
    method: GET
    data_selector: ''
    params:
      page: '1'
      per_page: '20'
- name: likes
  endpoint:
    path: /api/v2/items/:item_id/likes
    method: GET
    data_selector: likes
    params: {}
- name: tags
  endpoint:
    path: /api/v2/tags
    method: GET
    data_selector: tags
    params:
      page: '1'
      per_page: '20'
      sort: count
- name: team_memberships
  endpoint:
    path: /api/v2/team_memberships
    method: GET
    data_selector: members
    params:
      page: '1'
      per_page: '20'
- name: templates
  endpoint:
    path: /api/v2/templates
    method: GET
    data_selector: templates
    params:
      page: '1'
      per_page: '20'
- name: training_results
  endpoint:
    path: /services/data/vXX.X/sobjects/TrainingResults
    method: GET
    data_selector: records
    params: {}
- name: templates
  endpoint:
    path: /api/v2/templates
    method: POST
    data_selector: ''
    params: {}
- name: users
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: ''
    params: {}
- name: user_followers
  endpoint:
    path: /api/v2/users/:user_id/followers
    method: GET
    data_selector: ''
    params: {}
- name: user_followees
  endpoint:
    path: /api/v2/users/:user_id/followees
    method: GET
    data_selector: ''
    params: {}
- name: user
  endpoint:
    path: /api/v2/users/:user_id
    method: GET
    data_selector: ''
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: Django Overview
  endpoint:
    path: /tags/django
    method: GET
    data_selector: posts
    params: {}
- name: solubility_data
  endpoint:
    path: /solubility/train
    method: GET
    data_selector: records
    params: {}
- name: smiles_data
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: data
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: posted_articles
  endpoint:
    path: /tikeda123#items
    method: GET
    data_selector: articles
    params: {}
- name: answered_questions
  endpoint:
    path: /tikeda123/questions#items
    method: GET
    data_selector: questions
    params: {}
- name: liked_articles
  endpoint:
    path: /tikeda123/likes#items
    method: GET
    data_selector: likes
    params: {}
- name: public_stock_list
  endpoint:
    path: /tikeda123/stocks#items
    method: GET
    data_selector: stocks
    params: {}
- name: molecule_samples
  endpoint:
    path: /molecules/samples
    method: GET
    data_selector: samples
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: contributions
  endpoint:
    path: /minorun365/contributions
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /minorun365/posts
    method: GET
    data_selector: records
- name: followees
  endpoint:
    path: /minorun365/following_users
    method: GET
    data_selector: records
- name: followers
  endpoint:
    path: /minorun365/followers
    method: GET
    data_selector: records
- name: solubility_data
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /QUANON/posts
    method: GET
    data_selector: posts
- name: followers
  endpoint:
    path: /QUANON/followers
    method: GET
    data_selector: followers
- name: followees
  endpoint:
    path: /QUANON/following_users
    method: GET
    data_selector: followees
- name: training_results
  endpoint:
    path: /services/data/vXX.X/sobjects/TrainingResults
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: user
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: items
- name: organizations
  endpoint:
    path: /api/v2/organizations
    method: GET
    data_selector: items
- name: tags
  endpoint:
    path: /api/v2/tags
    method: GET
    data_selector: items
- name: articles
  endpoint:
    path: /organizations/brainpad/items
    method: GET
    data_selector: items
- name: members
  endpoint:
    path: /organizations/brainpad/members
    method: GET
    data_selector: members
- name: profile
  endpoint:
    path: /organizations/brainpad/profile
    method: GET
    data_selector: profile
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: 記事
  endpoint:
    path: /tags/%e6%96%b0%e5%8d%92%e3%82%a8%e3%83%b3%e3%82%b8%e3%83%8b%e3%82%a2/feed
    method: GET
    data_selector: posts
    params: {}
- name: フォロワー
  endpoint:
    path: /tags/%e6%96%b0%e5%8d%92%e3%82%a8%e3%83%b3%e3%82%b8%e3%83%8b%e3%82%a2/followers
    method: GET
    data_selector: followers
    params: {}
- name: smiles_data
  endpoint:
    path: /smiles.csv
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: tracks
  endpoint:
    path: /v1/tracks
    method: GET
    data_selector: items
- name: artists
  endpoint:
    path: /v1/artists
    method: GET
    data_selector: items
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: solubility_data
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles_data
  endpoint:
    path: /services/data/vXX.X/sobjects/SmilesData
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: molecules
  endpoint:
    path: /diverse/molecules
    method: GET
    data_selector: records
- name: molecule
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
- name: smiles
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: smiles
    params: {}
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: molecules
  endpoint:
    path: /diverse/molecules
    method: GET
    data_selector: molecules
    params: {}
- name: rss_feed
  endpoint:
    path: /Sakai_path/feed
    method: GET
    data_selector: records
- name: contributions
  endpoint:
    path: /Sakai_path/contributions
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /Sakai_path/posts
    method: GET
    data_selector: records
- name: followees
  endpoint:
    path: /Sakai_path/following_users
    method: GET
    data_selector: records
- name: followers
  endpoint:
    path: /Sakai_path/followers
    method: GET
    data_selector: records
- name: following_organizations
  endpoint:
    path: /Sakai_path/following_organizations
    method: GET
    data_selector: records
- name: following_tags
  endpoint:
    path: /Sakai_path/following_tags
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: records
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
    params: {}
- name: gradio
  endpoint:
    path: /settings/gradio
    method: GET
- name: model
  endpoint:
    path: /settings/model
    method: GET
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: SMILES
  endpoint:
    path: /smiles/parse
    method: POST
    data_selector: parsed_smiles
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: solubility
  endpoint:
    path: solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: smiles_data
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: records
    params: {}
- name: solubility
  endpoint:
    path: solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: smiles
    params: {}
- name: smiles
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: solubility_dataset
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles_dataset
  endpoint:
    path: /services/data/vXX.X/sobjects/SmilesDataset
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: records
    params: {}
- name: solubility_dataset
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /generate/valid_molecules
    method: POST
    data_selector: molecules
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: records
    params: {}
- name: solubility_data
  endpoint:
    path: /data/solubility.train.sdf
    method: GET
    data_selector: records
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: smiles
    params: {}
- name: smiles
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles_data
  endpoint:
    path: /path/to/smiles_endpoint
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /path/to/smiles
    method: GET
    data_selector: records
- name: solubility_data
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /valid_molecules
    method: GET
    data_selector: molecules
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /path/to/smiles/endpoint
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_dataset
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_data
  endpoint:
    path: /rdkit/rdkit/master/Docs/Book/data/solubility.train.sdf
    method: GET
    data_selector: records
- name: epoch_results
  endpoint:
    path: /services/data/vXX.X/sobjects/EpochResults
    method: GET
    data_selector: records
    params: {}
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecule_list
- name: example
  endpoint:
    path: /items
    method: GET
    data_selector: records
    params: {}
- name: molecules
  endpoint:
    path: /api/v1/molecules
    method: GET
    data_selector: records
    params: {}
- name: solubility_dataset
  endpoint:
    path: solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles_data
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: smiles
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: solubility_data
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /api/valid_molecules
    method: GET
    data_selector: molecules
- name: smiles_data
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
    params: {}
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: records
    params: {}
- name: epoch_results
  endpoint:
    path: /services/data/vXX.X/sobjects/EpochResults
    method: GET
    data_selector: records
- name: solubility_dataset
  endpoint:
    path: /rdkit/rdkit/master/Docs/Book/data/solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
    params: {}
- name: sample_diverse
  endpoint:
    path: /services/data/vXX.X/sobjects/SampleDiverse
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: smiles
    params: {}
- name: molecule
  endpoint:
    path: /parse/smiles
    method: POST
    data_selector: parsed_molecules
    params: {}
- name: example_resource
  endpoint:
    path: /example/path
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles_data
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: smiles
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: solubility_dataset
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: smiles
- name: valid_molecules
  endpoint:
    path: /v1/molecules/valid
    method: GET
    data_selector: molecules
- name: model_save
  endpoint:
    path: /v1/model/save
    method: POST
    data_selector: status
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /valid_molecules
    method: GET
    data_selector: molecules
- name: molecule_samples
  endpoint:
    path: /path/to/molecules
    method: GET
    data_selector: samples
- name: molecule
  endpoint:
    path: /services/data/vXX.X/sobjects/Molecule
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: smiles
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: smiles
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles_data
  endpoint:
    path: /services/data/vXX.X/sobjects/SmilesData
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: generated_molecules
  endpoint:
    path: /api/v1/molecules/generate
    method: POST
    data_selector: molecules
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: items
- name: smiles_dataset
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
- name: solubility_dataset
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /generated/valid_molecules
    method: GET
    data_selector: valid_molecules
- name: smiles
  endpoint:
    path: /api/v1/smiles
    method: GET
    data_selector: records
    params: {}
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: valid_molecules
  endpoint:
    path: /api/valid_molecules
    method: GET
    data_selector: molecules
    params: {}
- name: model_save
  endpoint:
    path: /api/model/save
    method: POST
    data_selector: status
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: POST
    data_selector: records
- name: valid_molecules
  endpoint:
    path: /path/to/valid_molecules
    method: GET
    data_selector: records
- name: generated_models
  endpoint:
    path: /path/to/generated_models
    method: POST
    data_selector: records
- name: sample_diverse
  endpoint:
    path: /v1/sample_diverse
    method: POST
    data_selector: results
- name: epoch_results
  endpoint:
    path: /services/data/vXX.X/sobjects/EpochResults
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: molecules
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: records
    params: {}
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
- name: valid_molecules
  endpoint:
    path: /api/generated_molecules
    method: GET
    data_selector: molecules
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: smiles_generation
  endpoint:
    path: /generate/smiles
    method: POST
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: training_epoch
  endpoint:
    path: /services/data/vXX.X/train
    method: POST
    data_selector: results
    params: {}
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: smiles
  endpoint:
    path: /api/v1/smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: model
  endpoint:
    path: /services/data/vXX.X/sobjects/Model
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: solubility_dataset
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: solubility_data
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: smiles_data
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /valid/molecules
    method: GET
    data_selector: records
- name: model_save
  endpoint:
    path: /model/save
    method: POST
    data_selector: status
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /generated/valid_molecules
    method: GET
    data_selector: molecules
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: training
  endpoint:
    path: /services/data/vXX.X/sobjects/Training
    method: POST
    data_selector: records
    params: {}
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: smiles
    params: {}
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sample_diverse
  endpoint:
    path: /services/data/vXX.X/sobjects/SampleDiverse
    method: GET
    data_selector: records
    params: {}
- name: training_results
  endpoint:
    path: /api/v1/training/results
    method: GET
    data_selector: results
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: records
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles_data
  endpoint:
    path: /api/v1/smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_train
  endpoint:
    path: solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /api/v1/smiles
    method: POST
    data_selector: results
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: training_results
  endpoint:
    path: /train/results
    method: GET
    data_selector: results
    params: {}
- name: valid_molecules
  endpoint:
    path: /generated/valid_molecules
    method: GET
    data_selector: molecules
    params: {}
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles_data
  endpoint:
    path: /smiles/data
    method: GET
    data_selector: records
- name: example_smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles_data
  endpoint:
    path: /api/smiles
    method: POST
    data_selector: smiles
    params: {}
- name: molecule
  endpoint:
    path: /services/data/vXX.X/sobjects/Molecule
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
- name: training_results
  endpoint:
    path: /training/results
    method: GET
    data_selector: results
    params: {}
- name: example
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: example_data
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles_dataset
  endpoint:
    path: /api/smiles
    method: POST
    data_selector: records
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /api/v1/valid_molecules
    method: GET
    data_selector: molecules
    params: {}
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_dataset
  endpoint:
    path: solubility.train.sdf
    method: GET
    data_selector: records
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: POST
    data_selector: results
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /molecules/valid
    method: GET
    data_selector: molecules
    params: {}
- name: model_save
  endpoint:
    path: /model/save
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Epoch
  endpoint:
    path: /services/data/vXX.X/sobjects/Epoch
    method: GET
    data_selector: records
    params: {}
- name: training_epoch
  endpoint:
    path: /services/data/vXX.X/sobjects/TrainingEpoch
    method: GET
    data_selector: records
    params: {}
- name: SMILES Generation
  endpoint:
    path: /generate/smiles
    method: POST
    data_selector: generated_smiles
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles_data
  endpoint:
    path: /services/data/vXX.X/sobjects/SmilesData
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: training_metrics
  endpoint:
    path: /training/metrics
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: sample_diverse
  endpoint:
    path: /services/data/vXX.X/sobjects/SampleDiverse
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: records
- name: solubility_train
  endpoint:
    path: /solubility/train
    method: GET
    data_selector: records
    params: {}
- name: epoch_results
  endpoint:
    path: /services/data/vXX.X/sobjects/EpochResults
    method: POST
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
- name: valid_smiles
  endpoint:
    path: /valid_smiles
    method: GET
    data_selector: results
- name: invalid_smiles
  endpoint:
    path: /invalid_smiles
    method: GET
    data_selector: results
- name: epoch_results
  endpoint:
    path: /services/data/vXX.X/epoch_results
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /path/to/smiles/endpoint
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_dataset
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: diverse_molecules
  endpoint:
    path: /molecules/diverse
    method: GET
    data_selector: molecules
    params: {}
- name: smiles_data
  endpoint:
    path: /services/data/vXX.X/sobjects/SmilesData
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: POST
    data_selector: records
- name: smiles
  endpoint:
    path: /maskot1977/items/
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: solubility_train
  endpoint:
    path: /rdkit/rdkit/master/Docs/Book/data/solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: improved_seqvae
  endpoint:
    path: /api/improved_seqvae
    method: POST
    data_selector: output
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: records
- name: solubility_train
  endpoint:
    path: /rdkit/rdkit/master/Docs/Book/data/solubility.train.sdf
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: training_results
  endpoint:
    path: /training/results
    method: GET
    data_selector: results
    params: {}
- name: smiles_generation
  endpoint:
    path: /generate/smiles
    method: POST
    data_selector: results
- name: smiles
  endpoint:
    path: /smiles/parse
    method: POST
    data_selector: molecules
    params: {}
- name: example_smiles
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: smiles
    params: {}
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: sample
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: items
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: POST
    data_selector: results
    params: {}
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /api/smiles
    method: POST
    data_selector: smiles_list
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /generated/valid_molecules
    method: GET
    data_selector: molecules
- name: model
  endpoint:
    path: /api/v1/model
    method: POST
    data_selector: model_data
- name: solubility_data
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: solubility_data
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: valid_molecules
  endpoint:
    path: /valid_molecules
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: smiles
    params: {}
- name: model
  endpoint:
    path: /v1/model
    method: POST
    data_selector: model_data
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: records
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: molecules
  endpoint:
    path: /services/data/vXX.X/sobjects/Molecule
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: training_results
  endpoint:
    path: /services/data/vXX.X/training/results
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: records
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: molecule_generation
  endpoint:
    path: /generate/molecule
    method: POST
    data_selector: generated_molecules
    params:
      temperature: 1.0
      max_len: 100
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: solubility_train
  endpoint:
    path: /rdkit/rdkit/master/Docs/Book/data/solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /api/v1/smiles
    method: POST
    data_selector: records
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /smiles
    method: POST
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: epoch_results
  endpoint:
    path: /services/data/vXX.X/sobjects/EpochResults
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /smiles/validate
    method: POST
    data_selector: valid_smiles
- name: training_results
  endpoint:
    path: /api/v1/training/results
    method: GET
    data_selector: results
- name: solubility_dataset
  endpoint:
    path: /rdkit/rdkit/master/Docs/Book/data/solubility.train.sdf
    method: GET
    data_selector: records
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /api/smiles
    method: POST
    data_selector: results
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /generated/valid_molecules
    method: GET
    data_selector: molecules
- name: epoch_data
  endpoint:
    path: /api/v1/epochs
    method: GET
    data_selector: records
- name: valid_molecules
  endpoint:
    path: /api/v1/valid_molecules
    method: GET
    data_selector: records
- name: epoch_results
  endpoint:
    path: /services/data/vXX.X/epoch_results
    method: GET
    data_selector: records
    params: {}
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: smiles_data
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: solubility_data
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: smiles_data
  endpoint:
    path: /services/data/vXX.X/sobjects/SmilesData
    method: GET
    data_selector: records
    params: {}
- name: molecules
  endpoint:
    path: /services/data/vXX.X/sobjects/Molecule
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: epoch_results
  endpoint:
    path: /services/data/vXX.X/sobjects/EpochResults
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: solubility_dataset
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: solubility_data
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles_dataset
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: records
- name: solubility_dataset
  endpoint:
    path: solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: solubility_dataset
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: smiles_list
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: records
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: solubility_dataset
  endpoint:
    path: /rdkit/rdkit/master/Docs/Book/data/solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles_data
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: training_logs
  endpoint:
    path: /logs/training
    method: GET
    data_selector: logs
    params: {}
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: model
  endpoint:
    path: /model
    method: POST
    data_selector: model_data
- name: smiles_data
  endpoint:
    path: /api/smiles/data
    method: GET
    data_selector: records
- name: valid_molecules
  endpoint:
    path: /generated_molecules
    method: GET
    data_selector: molecules
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: molecule_samples
  endpoint:
    path: /molecules/samples
    method: GET
    data_selector: samples
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: records
- name: solubility_data
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: smiles_data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: model_training
  endpoint:
    path: /train
    method: POST
    data_selector: results
- name: model_generation
  endpoint:
    path: /generate
    method: POST
    data_selector: samples
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: records
    params: {}
- name: improved_seqvae
  endpoint:
    path: /model/improved_seqvae
    method: POST
    data_selector: model_output
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /generated/valid_molecules
    method: GET
    data_selector: molecules
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: model
  endpoint:
    path: /models/improved_seqvae
    method: POST
    data_selector: results
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: records
    params: {}
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: generated_molecules
  endpoint:
    path: /api/v1/generated_molecules
    method: GET
    data_selector: molecules
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
- name: vae_loss_with_freebits
  endpoint:
    path: /services/data/vXX.X/sobjects/VaeLoss
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: improved_seq_vae
  endpoint:
    path: /services/data/vXX.X/sobjects/ImprovedSeqVAE
    method: POST
    data_selector: results
    params: {}
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_dataset
  endpoint:
    path: /rdkit/rdkit/master/Docs/Book/data/solubility.train.sdf
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles_dataset
  endpoint:
    path: /smiles
    method: GET
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles_data
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
    params: {}
- name: diverse_molecules
  endpoint:
    path: /molecules/diverse
    method: GET
    data_selector: molecules
    params: {}
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: smiles
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: valid_molecules
  endpoint:
    path: /api/valid_molecules
    method: GET
    data_selector: records
- name: valid_molecules
  endpoint:
    path: /services/data/vXX.X/sobjects/ValidMolecules
    method: GET
    data_selector: records
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles_data
  endpoint:
    path: /services/data/vXX.X/sobjects/SmilesData
    method: GET
    data_selector: records
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
    params: {}
- name: epoch_results
  endpoint:
    path: /services/data/vXX.X/sobjects/EpochResults
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: molecules
    params: {}
- name: model
  endpoint:
    path: /api/v1/model
    method: POST
    data_selector: model_output
- name: molecules
  endpoint:
    path: /smiles
    method: GET
    data_selector: smiles
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: smiles_data
  endpoint:
    path: /services/data/vXX.X/sobjects/SmilesData
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: model_training
  endpoint:
    path: /services/data/vXX.X/sobjects/ModelTraining
    method: POST
    data_selector: results
    params: {}
- name: molecule_samples
  endpoint:
    path: /molecules/samples
    method: GET
    data_selector: samples
- name: smiles
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: smiles
    params: {}
- name: training_metrics
  endpoint:
    path: /train/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: POST
    data_selector: data
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
- name: solubility_dataset
  endpoint:
    path: solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /smiles
    method: GET
- name: molecule_validation
  endpoint:
    path: /validate
    method: POST
    data_selector: results
- name: improved_seqvae
  endpoint:
    path: /services/data/vXX.X/sobjects/ImprovedSeqVAE
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /generate/valid_molecules
    method: GET
    data_selector: molecules
    params: {}
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_dataset
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles_data
  endpoint:
    path: /api/smiles
    method: POST
    data_selector: smiles_records
- name: smiles
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: smiles
    params: {}
- name: molecules
  endpoint:
    path: /services/data/vXX.X/sobjects/Molecule
    method: GET
    data_selector: records
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /molecules/valid
    method: GET
    data_selector: molecules
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: training_epoch
  endpoint:
    path: /services/data/vXX.X/sobjects/TrainingEpoch
    method: GET
    data_selector: records
    params: {}
- name: diverse_molecules
  endpoint:
    path: /diverse_molecules
    method: GET
    data_selector: molecules
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: diverse_molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: molecule
  endpoint:
    path: /api/v1/molecules
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /path/to/smiles/endpoint
    method: GET
    data_selector: smiles_data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: epoch_metrics
  endpoint:
    path: /metrics/epochs
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /molecules/smiles
    method: GET
    data_selector: results
    params: {}
- name: model_training
  endpoint:
    path: /api/v1/model_training
    method: POST
    data_selector: training_results
- name: model_sampling
  endpoint:
    path: /api/v1/model_sampling
    method: GET
    data_selector: samples
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_data
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: training_progress
  endpoint:
    path: /services/data/vXX.X/sobjects/TrainingProgress
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: smiles
  endpoint:
    path: /smiles
    method: POST
    data_selector: valid_smiles
    params: {}
- name: smiles_data
  endpoint:
    path: /v1/smiles
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: diverse_molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: chat_completion
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: general_embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: data
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: smiles_data
  endpoint:
    path: /services/data/vXX.X/sobjects/SmilesData
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /api/v2/users/{user_id}
    method: GET
    data_selector: data
    params: {}
- name: item
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /api/v2/users/{id}
    method: GET
    data_selector: user
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: results
    params: {}
- name: user
  endpoint:
    path: /NoHeartPen
    method: GET
    data_selector: user_data
- name: solubility_train
  endpoint:
    path: /rdkit/rdkit/master/Docs/Book/data/solubility.train.sdf
    method: GET
    data_selector: records
- name: smiles_data
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
    params: {}
- name: user_articles
  endpoint:
    path: /OGasa29/items
    method: GET
    data_selector: items
    params: {}
- name: user_followers
  endpoint:
    path: /OGasa29/followers
    method: GET
    data_selector: followers
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /qiita_kuru/items
    method: GET
    data_selector: items
- name: likes
  endpoint:
    path: /qiita_kuru/likes
    method: GET
    data_selector: likes
- name: followers
  endpoint:
    path: /qiita_kuru/followers
    method: GET
    data_selector: followers
- name: valid_molecules
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: mibushi
  endpoint:
    path: /mibushi
    method: GET
    data_selector: user_data
    params: {}
- name: solubility_train
  endpoint:
    path: solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: folder_picker
  endpoint:
    path: /pick_folder
    method: POST
    data_selector: folder_path
- name: smiles
  endpoint:
    path: /api/smiles
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: recon
  endpoint:
    path: /services/data/vXX.X/sobjects/recon
    method: GET
    data_selector: records
- name: kld
  endpoint:
    path: /services/data/vXX.X/sobjects/kld
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: user
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: smiles
    params: {}
- name: user_profile
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: data
    params: {}
- name: user_profile
  endpoint:
    path: /shinonome_taku
    method: GET
    data_selector: user
- name: following_organizations
  endpoint:
    path: /shinonome_taku/following_organizations
    method: GET
    data_selector: organizations
- name: following_tags
  endpoint:
    path: /shinonome_taku/following_tags
    method: GET
    data_selector: tags
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_profile
  endpoint:
    path: /hirokidaichi
    method: GET
    data_selector: user_data
- name: organization
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations_data
- name: smiles_data
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: data
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: generated_molecules
  endpoint:
    path: /api/generate_molecules
    method: POST
    data_selector: molecules
- name: mock_exam
  endpoint:
    path: /mock_exam
    method: GET
    data_selector: results
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: following_tags
  endpoint:
    path: /Rabbit_booK/following_tags
    method: GET
    data_selector: tags
    params: {}
- name: following_organizations
  endpoint:
    path: /Rabbit_booK/following_organizations
    method: GET
    data_selector: organizations
    params: {}
- name: user
  endpoint:
    path: /KNR109
    method: GET
    data_selector: user_data
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations_data
- name: following_tags
  endpoint:
    path: /KNR109/following_tags
    method: GET
    data_selector: tags_data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: solubility_dataset
  endpoint:
    path: solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /v2/items
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: articles
  endpoint:
    path: /nagi-0106#items
    method: GET
    data_selector: items
    params: {}
- name: questions
  endpoint:
    path: /nagi-0106/questions#items
    method: GET
    data_selector: items
    params: {}
- name: likes
  endpoint:
    path: /nagi-0106/likes#items
    method: GET
    data_selector: items
    params: {}
- name: stocks
  endpoint:
    path: /nagi-0106/stocks#items
    method: GET
    data_selector: items
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: 備忘録
  endpoint:
    path: /tags/%e5%82%99%e5%bf%98%e9%8c%b2
    method: GET
    data_selector: posts
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: POST
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sample_resource
  endpoint:
    path: /sample/path
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /tetsuro-seki/items
    method: GET
    data_selector: items
    params: {}
- name: followers
  endpoint:
    path: /tetsuro-seki/followers
    method: GET
    data_selector: followers
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: smiles
    params: {}
- name: solubility_data
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /kazukichi#items
    method: GET
    data_selector: items
- name: questions
  endpoint:
    path: /kazukichi/questions#items
    method: GET
    data_selector: items
- name: likes
  endpoint:
    path: /kazukichi/likes#items
    method: GET
    data_selector: items
- name: stocks
  endpoint:
    path: /kazukichi/stocks#items
    method: GET
    data_selector: items
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: Epoch
  endpoint:
    path: /services/data/vXX.X/sobjects/Epoch
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: smiles
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: solubility
  endpoint:
    path: solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: following_organizations
  endpoint:
    path: /Haru_K0720/following_organizations
    method: GET
    data_selector: organizations
- name: following_tags
  endpoint:
    path: /Haru_K0720/following_tags
    method: GET
    data_selector: tags
- name: posted_articles
  endpoint:
    path: /Haru_K0720#items
    method: GET
    data_selector: articles
- name: smiles
  endpoint:
    path: /api/smiles
    method: POST
    data_selector: smiles_data
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: rss_feed
  endpoint:
    path: /ohisama@github/feed
    method: GET
    data_selector: items
- name: contributions
  endpoint:
    path: /ohisama@github/contributions
    method: GET
    data_selector: items
- name: posts
  endpoint:
    path: /ohisama@github
    method: GET
    data_selector: items
- name: followers
  endpoint:
    path: /ohisama@github/followers
    method: GET
    data_selector: items
- name: following_users
  endpoint:
    path: /ohisama@github/following_users
    method: GET
    data_selector: items
- name: following_organizations
  endpoint:
    path: /ohisama@github/following_organizations
    method: GET
    data_selector: items
- name: following_tags
  endpoint:
    path: /ohisama@github/following_tags
    method: GET
    data_selector: items
- name: users
  endpoint:
    path: /users/:id
    method: GET
    data_selector: user
    params: {}
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items
    method: GET
    data_selector: smiles
    params: {}
- name: posts
  endpoint:
    path: /tags/mac/feed
    method: GET
    data_selector: posts
- name: followers
  endpoint:
    path: /tags/mac/followers
    method: GET
    data_selector: followers
- name: solubility
  endpoint:
    path: solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: user_rankings
  endpoint:
    path: /users/rankings
    method: GET
- name: organizations_rankings
  endpoint:
    path: /organizations/rankings
    method: GET
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/SMILES
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /Jochun/posts
    method: GET
    data_selector: records
- name: followers
  endpoint:
    path: /Jochun/followers
    method: GET
    data_selector: records
- name: following_users
  endpoint:
    path: /Jochun/following_users
    method: GET
    data_selector: records
- name: following_organizations
  endpoint:
    path: /Jochun/following_organizations
    method: GET
    data_selector: records
- name: following_tags
  endpoint:
    path: /Jochun/following_tags
    method: GET
    data_selector: records
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: generated_molecules
  endpoint:
    path: /api/generate_molecules
    method: POST
    data_selector: generated_molecules
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: smiles
  endpoint:
    path: /items
    method: GET
    data_selector: smiles
    params: {}
- name: user
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: data
    params: {}
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: user_profile
  endpoint:
    path: /api/v2/users/{user_id}
    method: GET
    data_selector: user
    params: {}
- name: smiles
  endpoint:
    path: /services/data/vXX.X/sobjects/Smiles
    method: GET
    data_selector: records
    params: {}
- name: valid_molecules
  endpoint:
    path: /generated/valid_molecules
    method: GET
    data_selector: molecules
    params: {}
- name: vocab_size
  endpoint:
    path: /model/vocab_size
    method: GET
    data_selector: size
    params: {}
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: user
  endpoint:
    path: /users/:id
    method: GET
    data_selector: user
    params: {}
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: posts
  endpoint:
    path: /tags/vue3/feed
    method: GET
    data_selector: posts
    params: {}
- name: smiles
  endpoint:
    path: /smiles
    method: GET
    data_selector: records
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: solubility
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
    params: {}
- name: smiles
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: valid_molecules
  endpoint:
    path: /generated/valid_molecules
    method: GET
    data_selector: molecules
- name: articles
  endpoint:
    path: /H-Iida#items
    method: GET
    data_selector: articles
    params: {}
- name: questions
  endpoint:
    path: /H-Iida/questions#items
    method: GET
    data_selector: questions
    params: {}
- name: likes
  endpoint:
    path: /H-Iida/likes#items
    method: GET
    data_selector: likes
    params: {}
- name: molecules
  endpoint:
    path: /molecules
    method: GET
    data_selector: molecules
    params: {}
- name: chat_history
  endpoint:
    path: /ChatGPTSearcher/index4.html
    method: GET
    data_selector: data
    params: {}
- name: smiles
  endpoint:
    path: /maskot1977/items/77008b9737218fa1c21d
    method: GET
    data_selector: smiles
- name: user_profile
  endpoint:
    path: /uni928
    method: GET
    data_selector: profile
- name: user_articles
  endpoint:
    path: /uni928/items
    method: GET
    data_selector: items
- name: solubility_train
  endpoint:
    path: /solubility.train.sdf
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /users/:id
    method: GET
    data_selector: user
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: posts
  endpoint:
    path: /posts
    method: GET
    data_selector: records
- name: followers
  endpoint:
    path: /followers
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /api/v1/posts
    method: GET
    data_selector: data
    params: {}
- name: followers
  endpoint:
    path: /api/v1/followers
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /ishi720#items
    method: GET
    data_selector: items
    params: {}
- name: followers
  endpoint:
    path: /ishi720/followers
    method: GET
    data_selector: followers
    params: {}
- name: following_users
  endpoint:
    path: /ishi720/following_users
    method: GET
    data_selector: following_users
    params: {}
- name: user_profile
  endpoint:
    path: /api/v2/users/{id}
    method: GET
    data_selector: data
    params: {}
- name: user_articles
  endpoint:
    path: /api/v2/users/{id}/items
    method: GET
    data_selector: data
    params: {}
- name: smiles_data
  endpoint:
    path: /smiles/data
    method: GET
    data_selector: records
    params: {}
- name: messages
  endpoint:
    path: /v1/messages
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: organizations
  endpoint:
    path: /api/v2/organizations
    method: GET
    data_selector: organizations
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
- name: articles
  endpoint:
    path: /makotosaekit/items
    method: GET
    data_selector: items
    params: {}
- name: user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: user
    params: {}
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: 通知
  endpoint:
    path: /notifications
    method: GET
- name: 投稿
  endpoint:
    path: /posts
    method: POST
- name: rss_feed
  endpoint:
    path: /qwer123123/feed
    method: GET
    data_selector: items
    params: {}
- name: contributions
  endpoint:
    path: /qwer123123/contributions
    method: GET
    data_selector: items
    params: {}
- name: posts
  endpoint:
    path: /qwer123123
    method: GET
    data_selector: items
    params: {}
- name: followees
  endpoint:
    path: /qwer123123/following_users
    method: GET
    data_selector: items
    params: {}
- name: followers
  endpoint:
    path: /qwer123123/followers
    method: GET
    data_selector: items
    params: {}
- name: tags
  endpoint:
    path: /qwer123123/following_tags
    method: GET
    data_selector: items
    params: {}
- name: articles
  endpoint:
    path: /uzuki_aoba/items
    method: GET
    data_selector: items
- name: questions
  endpoint:
    path: /uzuki_aoba/questions
    method: GET
    data_selector: items
- name: likes
  endpoint:
    path: /uzuki_aoba/likes
    method: GET
    data_selector: items
- name: midi_file_upload
  endpoint:
    path: /files/upload
    method: POST
    data_selector: uploaded_files
    params: {}
- name: midi_data_reading
  endpoint:
    path: /midi/read
    method: GET
    data_selector: midi_tracks
    params: {}
- name: midi_transcription
  endpoint:
    path: /midi/transcribe
    method: POST
    data_selector: transcription_output
    params: {}
- name: following_organizations
  endpoint:
    path: /555hamano/following_organizations
    method: GET
    data_selector: organizations
    params: {}
- name: following_tags
  endpoint:
    path: /555hamano/following_tags
    method: GET
    data_selector: tags
    params: {}
- name: posts
  endpoint:
    path: /555hamano/posts
    method: GET
    data_selector: posts
    params: {}
- name: followers
  endpoint:
    path: /555hamano/followers
    method: GET
    data_selector: followers
    params: {}
- name: contributions
  endpoint:
    path: /555hamano/contributions
    method: GET
    data_selector: contributions
    params: {}
- name: Following Organizations
  endpoint:
    path: /NoHeartPen/following_organizations
    method: GET
    data_selector: organizations
    params: {}
- name: Following tags
  endpoint:
    path: /NoHeartPen/following_tags
    method: GET
    data_selector: tags
    params: {}
- name: Posted Articles
  endpoint:
    path: /NoHeartPen#items
    method: GET
    data_selector: articles
    params: {}
- name: Commented Articles
  endpoint:
    path: /NoHeartPen/comments#items
    method: GET
    data_selector: comments
    params: {}
- name: posted_articles
  endpoint:
    path: /qiita_kuru#items
    method: GET
    data_selector: articles
- name: answered_questions
  endpoint:
    path: /qiita_kuru/questions#items
    method: GET
    data_selector: questions
- name: likes
  endpoint:
    path: /qiita_kuru/likes#items
    method: GET
    data_selector: likes
- name: public_stock_list
  endpoint:
    path: /qiita_kuru/stocks#items
    method: GET
    data_selector: stocks
- name: user
  endpoint:
    path: /users/mihosato
    method: GET
    data_selector: user
- name: organizations
  endpoint:
    path: /users/mihosato/organizations
    method: GET
    data_selector: organizations
- name: tags
  endpoint:
    path: /users/mihosato/tags
    method: GET
    data_selector: tags
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: items
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: folder_picker
  endpoint:
    path: /folder/picker
    method: POST
    data_selector: result
- name: posts
  endpoint:
    path: /siruku6/posts
    method: GET
    data_selector: posts
- name: followers
  endpoint:
    path: /siruku6/followers
    method: GET
    data_selector: followers
- name: gemini_results
  endpoint:
    path: /api/gemini/results
    method: GET
    data_selector: results
- name: gpt5_results
  endpoint:
    path: /api/gpt5/results
    method: GET
    data_selector: results
- name: claude_results
  endpoint:
    path: /api/claude/results
    method: GET
    data_selector: results
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: user
  endpoint:
    path: /api/v2/users/:id
    method: GET
    data_selector: data
- name: tags
  endpoint:
    path: /api/v2/tags
    method: GET
    data_selector: data
- name: PythonでSQLiteを使ってみる
  endpoint:
    path: /tags/python
    method: GET
    data_selector: items
    params: {}
- name: JupyterNotebookをアプリ化して社内展開した話
  endpoint:
    path: /tags/jupyternotebook
    method: GET
    data_selector: items
    params: {}
- name: articles
  endpoint:
    path: /ym2024/articles
    method: GET
    data_selector: items
- name: questions
  endpoint:
    path: /ym2024/questions
    method: GET
    data_selector: items
- name: likes
  endpoint:
    path: /ym2024/likes
    method: GET
    data_selector: items
- name: stocks
  endpoint:
    path: /ym2024/stocks
    method: GET
    data_selector: items
- name: user
  endpoint:
    path: /users/:id
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
- name: user
  endpoint:
    path: /users/:id
    method: GET
    data_selector: user
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: articles
  endpoint:
    path: /kitamura-yzrh#items
    method: GET
    data_selector: posted articles
    params: {}
- name: questions
  endpoint:
    path: /kitamura-yzrh/questions#items
    method: GET
    data_selector: answered questions
    params: {}
- name: likes
  endpoint:
    path: /kitamura-yzrh/likes#items
    method: GET
    data_selector: liked items
    params: {}
- name: stocks
  endpoint:
    path: /kitamura-yzrh/stocks#items
    method: GET
    data_selector: public stock list
    params: {}
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_profile
  endpoint:
    path: /hirokidaichi
    method: GET
    data_selector: user_data
- name: following_organizations
  endpoint:
    path: /hirokidaichi/following_organizations
    method: GET
    data_selector: organizations
- name: following_tags
  endpoint:
    path: /hirokidaichi/following_tags
    method: GET
    data_selector: tags
- name: posts
  endpoint:
    path: /hirokidaichi/posts
    method: GET
    data_selector: posts
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
    params: {}
- name: item
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /api/v1/items
    method: GET
    data_selector: items
- name: tags
  endpoint:
    path: /api/v1/tags
    method: GET
    data_selector: tags
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /non_cal/items
    method: GET
    data_selector: items
    params: {}
- name: rss_feed
  endpoint:
    path: /_kawauso_/feed
    method: GET
    data_selector: records
    params: {}
- name: contributions
  endpoint:
    path: /_kawauso_/contributions
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /_kawauso_/items
    method: GET
    data_selector: records
    params: {}
- name: following_users
  endpoint:
    path: /_kawauso_/following_users
    method: GET
    data_selector: records
    params: {}
- name: followers
  endpoint:
    path: /_kawauso_/followers
    method: GET
    data_selector: records
    params: {}
- name: following_organizations
  endpoint:
    path: /_kawauso_/following_organizations
    method: GET
    data_selector: records
    params: {}
- name: following_tags
  endpoint:
    path: /_kawauso_/following_tags
    method: GET
    data_selector: records
    params: {}
- name: 模擬試験
  endpoint:
    path: /services/data/vXX.X/sobjects/MockExam
    method: GET
    data_selector: records
- name: vocab
  endpoint:
    path: /vocab
    method: POST
    data_selector: id
    params: {}
- name: vocab
  endpoint:
    path: /vocab
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: following_organizations
  endpoint:
    path: /Rabbit_booK/following_organizations
    method: GET
- name: following_tags
  endpoint:
    path: /Rabbit_booK/following_tags
    method: GET
- name: user_articles
  endpoint:
    path: /natua_tcmm/items
    method: GET
    data_selector: items
- name: user_followers
  endpoint:
    path: /natua_tcmm/followers
    method: GET
    data_selector: followers
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: user
  endpoint:
    path: /satoshissss
    method: GET
    data_selector: data
- name: user_posts
  endpoint:
    path: /nagi-0106/items
    method: GET
    data_selector: items
- name: user_followers
  endpoint:
    path: /nagi-0106/followers
    method: GET
    data_selector: followers
- name: user_following
  endpoint:
    path: /nagi-0106/following_users
    method: GET
    data_selector: following_users
- name: user_contributions
  endpoint:
    path: /nagi-0106/contributions
    method: GET
    data_selector: contributions
- name: logs
  endpoint:
    path: /api/logs
    method: GET
    data_selector: logs
    params: {}
- name: 備忘録
  endpoint:
    path: /tags/%e5%82%99%e5%bf%98%e9%8c%b2
    method: GET
    data_selector: posts
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /tetsuro-seki
    method: GET
    data_selector: user
    params: {}
- name: articles
  endpoint:
    path: /tetsuro-seki/items
    method: GET
    data_selector: items
    params: {}
- name: following_tags
  endpoint:
    path: /tetsuro-seki/following_tags
    method: GET
    data_selector: tags
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: user
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: posts
  endpoint:
    path: /nokonoko_1203/posts
    method: GET
    data_selector: articles
- name: followers
  endpoint:
    path: /nokonoko_1203/followers
    method: GET
    data_selector: followers
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: tags
  endpoint:
    path: /api/v2/tags
    method: GET
    data_selector: tags
    params: {}
- name: user_profile
  endpoint:
    path: /api/v2/users/{id}
    method: GET
    data_selector: user
    params: {}
- name: user_articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params:
      user_id: '{id}'
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: user
  endpoint:
    path: /api/v2/users/{id}
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: user
  endpoint:
    path: /users/:id
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: articles
  endpoint:
    path: /Sicut_study/articles
    method: GET
    data_selector: items
    params: {}
- name: followers
  endpoint:
    path: /Sicut_study/followers
    method: GET
    data_selector: items
    params: {}
- name: followees
  endpoint:
    path: /Sicut_study/following_users
    method: GET
    data_selector: items
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
    params: {}
- name: api_call
  endpoint:
    path: /api/calls
    method: GET
    data_selector: calls
- name: following_organizations
  endpoint:
    path: /Haru_K0720/following_organizations
    method: GET
    data_selector: organizations
    params: {}
- name: following_tags
  endpoint:
    path: /Haru_K0720/following_tags
    method: GET
    data_selector: tags
    params: {}
- name: todo-cicd
  endpoint:
    path: /todo-cicd
    method: GET
- name: contributions
  endpoint:
    path: /text-sakura-ne-jp/contributions
    method: GET
- name: posts
  endpoint:
    path: /text-sakura-ne-jp/posts
    method: GET
- name: followees
  endpoint:
    path: /text-sakura-ne-jp/following_users
    method: GET
- name: followers
  endpoint:
    path: /text-sakura-ne-jp/followers
    method: GET
- name: todos
  endpoint:
    path: /api/todos
    method: GET
    data_selector: todos
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: test_sample
  endpoint:
    path: /src/__tests__/sample.test.ts
    method: GET
    data_selector: records
- name: app_test
  endpoint:
    path: /src/__tests__/App.test.tsx
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /ohisama@github/items
    method: GET
    data_selector: items
- name: followers
  endpoint:
    path: /ohisama@github/followers
    method: GET
    data_selector: followers
- name: todos
  endpoint:
    path: /api/todos
    method: GET
    data_selector: todos
    params: {}
- name: hosting
  endpoint:
    path: /project/cicd-todo-app/overview
    method: GET
- name: user
  endpoint:
    path: /users/:id
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: Mac
  endpoint:
    path: https://www.apple.com/mac/
    method: GET
- name: build
  endpoint:
    path: /.github/workflows/pipeline.yaml
    method: POST
    data_selector: jobs.build
- name: test
  endpoint:
    path: /.github/workflows/pipeline.yaml
    method: POST
    data_selector: jobs.test
- name: deploy
  endpoint:
    path: /.github/workflows/pipeline.yaml
    method: POST
    data_selector: jobs.deploy
- name: tutorial
  endpoint:
    path: /Sicut_study/items/9792f2f01dc887d4cb31
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /Jochun/posts
    method: GET
    data_selector: posts
    params: {}
- name: followers
  endpoint:
    path: /Jochun/followers
    method: GET
    data_selector: followers
    params: {}
- name: following_users
  endpoint:
    path: /Jochun/following_users
    method: GET
    data_selector: following_users
    params: {}
- name: contributions
  endpoint:
    path: /Jochun/contributions
    method: GET
    data_selector: contributions
    params: {}
- name: tags
  endpoint:
    path: /Jochun/following_tags
    method: GET
    data_selector: tags
    params: {}
- name: organizations
  endpoint:
    path: /Jochun/following_organizations
    method: GET
    data_selector: organizations
    params: {}
- name: todo
  endpoint:
    path: /todos
    method: GET
    data_selector: todos
- name: articles
  endpoint:
    path: /rytaTechNote#items
    method: GET
    data_selector: items
- name: questions
  endpoint:
    path: /rytaTechNote/questions#items
    method: GET
    data_selector: items
- name: likes
  endpoint:
    path: /rytaTechNote/likes#items
    method: GET
    data_selector: items
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_profile
  endpoint:
    path: /mashuel
    method: GET
- name: user_contributions
  endpoint:
    path: /mashuel/contributions
    method: GET
- name: user_followers
  endpoint:
    path: /mashuel/followers
    method: GET
- name: user_following_users
  endpoint:
    path: /mashuel/following_users
    method: GET
- name: user_following_tags
  endpoint:
    path: /mashuel/following_tags
    method: GET
- name: firebase
  endpoint:
    path: /hosting
    method: GET
    data_selector: hosting
    params: {}
- name: build-files
  endpoint:
    path: /dist/
    method: UPLOAD
    data_selector: artifacts
    params:
      retention-days: 1
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: user
  endpoint:
    path: /users/{user_id}
    method: GET
    data_selector: user
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: ping
  endpoint:
    path: /systems/ping
    method: GET
    data_selector: message
    params: {}
- name: todos
  endpoint:
    path: /todos
    method: GET
    data_selector: ''
    params: {}
- name: todos_create
  endpoint:
    path: /todos
    method: POST
    data_selector: ''
    params: {}
- name: todos_update
  endpoint:
    path: /todos/:id
    method: PUT
    data_selector: ''
    params: {}
- name: todos_delete
  endpoint:
    path: /todos/:id
    method: DELETE
    data_selector: ''
    params: {}
- name: Docker + Viteで Vue3 + TypeScriptの爆速開発環境を構築する
  endpoint:
    path: /genimura/items/88742085294bd0b234a6
    method: GET
- name: Vue.js emitについて理解する
  endpoint:
    path: /daichiccchi/items/9a76314f59f2d9b15ba1
    method: GET
- name: Nuxt3：useAsyncDataの基本的な使い方
  endpoint:
    path: /kins/items/8db1e920674675698541
    method: GET
- name: 動的コンポーネントの基本
  endpoint:
    path: /puro1999/items/33bf1bd8e118844e0e7b
    method: GET
- name: Vue3のComposition APIを使っているとストレスが溜まるのでこの記事で発散することにします
  endpoint:
    path: /manjukowai/items/bb780466fc7481d0d9b4
    method: GET
- name: Vue3のv-modelを調べてみた
  endpoint:
    path: /NakajimaSH/items/8892a623228e1600028c
    method: GET
- name: Vue3のpropsについて調べてみた
  endpoint:
    path: /NakajimaSH/items/795d33e06efb1a3e10d6
    method: GET
- name: Vue3のウォッチャーについて調べてみた
  endpoint:
    path: /NakajimaSH/items/adab9bfb7ac293ae48b8
    method: GET
- name: Vue3の算出プロパティについて調べてみた
  endpoint:
    path: /NakajimaSH/items/b8287f1a5ed7179252a5
    method: GET
- name: Vueのデータバインディングについて調べてみた
  endpoint:
    path: /NakajimaSH/items/e894e39a5e6314ab8de8
    method: GET
- name: Vue3 shallowRefについて調べてみた
  endpoint:
    path: /NakajimaSH/items/27b4289c9036b8a288e8
    method: GET
- name: addTodoItem
  endpoint:
    path: /todos
    method: POST
    data_selector: content
- name: deleteTodoItem
  endpoint:
    path: /todos/{id}
    method: DELETE
    data_selector: content
- name: updateTodoItem
  endpoint:
    path: /todos/{id}
    method: PUT
    data_selector: content
- name: todos
  endpoint:
    path: /todos
    method: GET
    data_selector: records
- name: todos
  endpoint:
    path: /todos
    method: GET
    data_selector: todos
    params: {}
- name: chat
  endpoint:
    path: /api/chat
    method: POST
    data_selector: messages
- name: todos
  endpoint:
    path: /todos
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /H-Iida/posts
    method: GET
    data_selector: articles
- name: followers
  endpoint:
    path: /H-Iida/followers
    method: GET
    data_selector: followers
- name: following_users
  endpoint:
    path: /H-Iida/following_users
    method: GET
    data_selector: followees
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: records
    params: {}
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: records
    params: {}
- name: user_messages
  endpoint:
    path: /api/user/messages
    method: GET
    data_selector: messages
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: text
    params: {}
- name: customers
  endpoint:
    path: /query/customers
    method: GET
    data_selector: json
    params: {}
- name: posts
  endpoint:
    path: /uni928/posts
    method: GET
    data_selector: articles
- name: followers
  endpoint:
    path: /uni928/followers
    method: GET
    data_selector: followers
- name: followees
  endpoint:
    path: /uni928/following_users
    method: GET
    data_selector: followees
- name: CustomInput
  endpoint:
    path: /CustomInput
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: followers
  endpoint:
    path: /rana_kualu/followers
    method: GET
    data_selector: followers
    params: {}
- name: posts
  endpoint:
    path: /rana_kualu/posts
    method: GET
    data_selector: posts
    params: {}
- name: following_users
  endpoint:
    path: /rana_kualu/following_users
    method: GET
    data_selector: followees
    params: {}
- name: contributions
  endpoint:
    path: /rana_kualu/contributions
    method: GET
    data_selector: contributions
    params: {}
- name: following_organizations
  endpoint:
    path: /yniji/following_organizations
    method: GET
    data_selector: organizations
- name: following_tags
  endpoint:
    path: /yniji/following_tags
    method: GET
    data_selector: tags
- name: posts
  endpoint:
    path: /yniji/posts
    method: GET
    data_selector: articles
- name: contributions
  endpoint:
    path: /yniji/contributions
    method: GET
    data_selector: contributions
- name: following_organizations
  endpoint:
    path: /ishi720/following_organizations
    method: GET
    data_selector: organizations
- name: following_tags
  endpoint:
    path: /ishi720/following_tags
    method: GET
    data_selector: tags
- name: posts
  endpoint:
    path: /ishi720/posts
    method: GET
    data_selector: posts
- name: followers
  endpoint:
    path: /ishi720/followers
    method: GET
    data_selector: followers
- name: kanji_to_hiragana
  endpoint:
    path: /v1/convert
    method: POST
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: user_profile
  endpoint:
    path: /jnchito
    method: GET
    data_selector: profile
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: Typed List Performance
  endpoint:
    path: /numba/typed/list/performance
    method: GET
    data_selector: performance_data
- name: Reflected List Performance
  endpoint:
    path: /numba/reflected/list/performance
    method: GET
    data_selector: performance_data
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: user_articles
  endpoint:
    path: /penicillin0/items
    method: GET
    data_selector: articles
- name: user_questions
  endpoint:
    path: /penicillin0/questions
    method: GET
    data_selector: questions
- name: user_likes
  endpoint:
    path: /penicillin0/likes
    method: GET
    data_selector: likes
- name: articles
  endpoint:
    path: /makotosaekit/articles
    method: GET
    data_selector: articles
    params: {}
- name: followers
  endpoint:
    path: /makotosaekit/followers
    method: GET
    data_selector: followers
    params: {}
- name: following_users
  endpoint:
    path: /makotosaekit/following_users
    method: GET
    data_selector: following_users
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: weather_data
  endpoint:
    path: /data/excel-xlwings/data2015-2017.csv
    method: GET
    data_selector: data
    params: {}
- name: weather_data
  endpoint:
    path: /data
    method: GET
    data_selector: records
    params: {}
- name: 通知・バッジに関する要件
  endpoint:
    path: /requirements/notifications
    method: GET
    data_selector: requirements
    params: {}
- name: 継続利用促進に関する要件
  endpoint:
    path: /requirements/engagement
    method: GET
    data_selector: requirements
    params: {}
- name: テキスト編集に関する要件
  endpoint:
    path: /requirements/text-editing
    method: GET
    data_selector: requirements
    params: {}
- name: データ管理に関する非機能要件
  endpoint:
    path: /requirements/data-management
    method: GET
    data_selector: requirements
    params: {}
- name: 請求書データ
  endpoint:
    path: /請求データ.xlsx
    method: GET
    data_selector: 顧客リスト
    params: {}
- name: 請求書様式
  endpoint:
    path: /請求書様式.xlsx
    method: GET
    data_selector: 請求書様式
    params: {}
- name: articles
  endpoint:
    path: /uzuki_aoba/articles
    method: GET
    data_selector: items
- name: tags
  endpoint:
    path: /uzuki_aoba/following_tags
    method: GET
    data_selector: tags
- name: followers
  endpoint:
    path: /uzuki_aoba/followers
    method: GET
    data_selector: followers
- name: C# Overview
  endpoint:
    path: /tags/csharp
    method: GET
    data_selector: posts
    params: {}
- name: Excel Reader
  endpoint:
    path: /read/excel
    method: GET
    data_selector: data
    params: {}
- name: Python Installation
  endpoint:
    path: /ftp/python/3.8.0/Python-3.8.0.tar.xz
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: user
  endpoint:
    path: /users/mihosato
    method: GET
    data_selector: data
    params: {}
- name: organizations
  endpoint:
    path: /users/mihosato/organizations
    method: GET
    data_selector: data
    params: {}
- name: tags
  endpoint:
    path: /users/mihosato/tags
    method: GET
    data_selector: data
    params: {}
- name: bootstrap
  endpoint:
    path: /install
    method: GET
    data_selector: scripts
- name: Taipy
  endpoint:
    path: /Avaiga/taipy
    method: GET
    data_selector: records
- name: FastAPI
  endpoint:
    path: /tiangolo/fastapi
    method: GET
    data_selector: records
- name: Apidog
  endpoint:
    path: /apidog.com/jp
    method: GET
    data_selector: records
- name: Composio
  endpoint:
    path: /ComposioHQ/composio
    method: GET
    data_selector: records
- name: Shadcn/UI
  endpoint:
    path: /shadcn/ui
    method: GET
    data_selector: records
- name: Apache Superset
  endpoint:
    path: /apache/superset
    method: GET
    data_selector: records
- name: Continue.dev
  endpoint:
    path: /continuedev/continue
    method: GET
    data_selector: records
- name: dvc_data_management
  endpoint:
    path: /dvc/data/management
    method: GET
    data_selector: records
- name: posted_articles
  endpoint:
    path: /JavaLangRuntimeException/items
    method: GET
    data_selector: articles
- name: answered_questions
  endpoint:
    path: /JavaLangRuntimeException/questions
    method: GET
    data_selector: questions
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: data
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: transcriptions
  endpoint:
    path: /audio/transcriptions
    method: POST
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /users/:id
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: isort_test
  endpoint:
    path: /isort_test.py
    method: GET
    data_selector: records
    params: {}
- name: following_tags
  endpoint:
    path: /s-age/following_tags
    method: GET
    data_selector: tags
    params: {}
- name: posted_articles
  endpoint:
    path: /s-age#items
    method: GET
    data_selector: articles
    params: {}
- name: answered_questions
  endpoint:
    path: /s-age/questions#items
    method: GET
    data_selector: questions
    params: {}
- name: chatgpt
  endpoint:
    path: /callback
    method: POST
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: weekrange
  endpoint:
    path: /weekrange
    method: GET
    data_selector: records
- name: daterange
  endpoint:
    path: /daterange
    method: GET
    data_selector: records
- name: hourrange
  endpoint:
    path: /hourrange
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /users/:id
    method: GET
    data_selector: data
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
- name: weekrange
  endpoint:
    path: /weekrange
    method: GET
    data_selector: records
- name: daterange
  endpoint:
    path: /daterange
    method: GET
    data_selector: records
- name: hourrange
  endpoint:
    path: /hourrange
    method: GET
    data_selector: records
- name: timedeltarange
  endpoint:
    path: /timedeltarange
    method: GET
    data_selector: records
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: data
    params: {}
- name: chat_completions
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: choices
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: vim_overview
  endpoint:
    path: /vim/overview
    method: GET
    data_selector: overview_data
- name: vim_features
  endpoint:
    path: /vim/features
    method: GET
    data_selector: features_data
- name: vocab
  endpoint:
    path: /vocab
    method: POST
    data_selector: records
    params: {}
- name: vocab
  endpoint:
    path: /vocab
    method: POST
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: rss_feed
  endpoint:
    path: /7mpy/feed
    method: GET
    data_selector: items
    params: {}
- name: posts
  endpoint:
    path: /7mpy
    method: GET
    data_selector: items
    params: {}
- name: followers
  endpoint:
    path: /7mpy/followers
    method: GET
    data_selector: items
    params: {}
- name: following_users
  endpoint:
    path: /7mpy/following_users
    method: GET
    data_selector: items
    params: {}
- name: following_organizations
  endpoint:
    path: /7mpy/following_organizations
    method: GET
    data_selector: items
    params: {}
- name: following_tags
  endpoint:
    path: /7mpy/following_tags
    method: GET
    data_selector: items
    params: {}
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: database_management
  endpoint:
    path: /database_management
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /satoshissss
    method: GET
    data_selector: user
- name: articles
  endpoint:
    path: /satoshissss/items
    method: GET
    data_selector: items
- name: followers
  endpoint:
    path: /satoshissss/followers
    method: GET
    data_selector: followers
- name: gemini-robotics-er-1.5-preview
  endpoint:
    path: /models/gemini-robotics-er-1.5-preview
    method: POST
    data_selector: results
    params: {}
- name: logs
  endpoint:
    path: /logs
    method: GET
    data_selector: logs
    params: {}
- name: 追跡機能
  endpoint:
    path: /api/tracking
    method: GET
    data_selector: trackingInfo
    params: {}
- name: ウォーターマーキング
  endpoint:
    path: /api/watermarking
    method: GET
    data_selector: watermarkInfo
    params: {}
- name: image_examples
  endpoint:
    path: /images
    method: GET
    data_selector: records
    params: {}
- name: example11
  endpoint:
    path: /example11
    method: POST
    data_selector: output
- name: example12
  endpoint:
    path: /example12
    method: POST
    data_selector: output
- name: example13
  endpoint:
    path: /example13
    method: POST
    data_selector: output
- name: example14
  endpoint:
    path: /example14
    method: POST
    data_selector: output
- name: example15
  endpoint:
    path: /example15
    method: POST
    data_selector: output
- name: example16
  endpoint:
    path: /example16
    method: POST
    data_selector: output
- name: example17
  endpoint:
    path: /example17
    method: POST
    data_selector: output
- name: example18
  endpoint:
    path: /example18
    method: POST
    data_selector: output
- name: example19
  endpoint:
    path: /example19
    method: POST
    data_selector: output
- name: example20
  endpoint:
    path: /example20
    method: POST
    data_selector: output
- name: example21
  endpoint:
    path: /example21
    method: POST
    data_selector: output
- name: example22
  endpoint:
    path: /example22
    method: POST
    data_selector: output
- name: posts
  endpoint:
    path: /xxyc/posts
    method: GET
    data_selector: posts
    params: {}
- name: followers
  endpoint:
    path: /xxyc/followers
    method: GET
    data_selector: followers
    params: {}
- name: following_users
  endpoint:
    path: /xxyc/following_users
    method: GET
    data_selector: following_users
    params: {}
- name: input_image
  endpoint:
    path: /input
    method: POST
    data_selector: input
    params: {}
- name: output_result
  endpoint:
    path: /output
    method: GET
    data_selector: output
    params: {}
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: input_image
  endpoint:
    path: /input
    method: POST
    data_selector: input
    params: {}
- name: output_image
  endpoint:
    path: /output
    method: GET
    data_selector: output
    params: {}
- name: examples
  endpoint:
    path: /examples
    method: GET
    data_selector: examples
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: following_tags
  endpoint:
    path: /nokonoko_1203/following_tags
    method: GET
    data_selector: tags
    params: {}
- name: following_organizations
  endpoint:
    path: /nokonoko_1203/following_organizations
    method: GET
    data_selector: organizations
    params: {}
- name: rss_feed
  endpoint:
    path: /nakaizumi_slj/feed
    method: GET
    data_selector: records
    params: {}
- name: contributions
  endpoint:
    path: /nakaizumi_slj/contributions
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /nakaizumi_slj/posts
    method: GET
    data_selector: records
    params: {}
- name: followees
  endpoint:
    path: /nakaizumi_slj/following_users
    method: GET
    data_selector: records
    params: {}
- name: followers
  endpoint:
    path: /nakaizumi_slj/followers
    method: GET
    data_selector: records
    params: {}
- name: notePosts
  endpoint:
    path: /organizations/offgrid/items
    method: GET
    data_selector: items
- name: followers
  endpoint:
    path: /organizations/offgrid/followers
    method: GET
    data_selector: followers
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: articles
  endpoint:
    path: /Sicut_study/articles
    method: GET
    data_selector: articles
- name: followers
  endpoint:
    path: /Sicut_study/followers
    method: GET
    data_selector: followers
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params:
      incremental: created_at
- name: APG4b
  endpoint:
    path: /contests/APG4bpython
    method: GET
    data_selector: problems
    params: {}
- name: ABC
  endpoint:
    path: /contests/ABC
    method: GET
    data_selector: problems
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: trace
  endpoint:
    path: /api/traces
    method: GET
    data_selector: traces
- name: metrics
  endpoint:
    path: /api/metrics
    method: GET
    data_selector: metrics
- name: tasks
  endpoint:
    path: /tasks
    method: POST
    data_selector: result
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: todos
  endpoint:
    path: /todos
    method: GET
    data_selector: todos
    params: {}
- name: todos
  endpoint:
    path: /api/todos
    method: GET
    data_selector: todos
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: sample_test
  endpoint:
    path: /src/__tests__/sample.test.ts
    method: GET
    data_selector: records
- name: app_test
  endpoint:
    path: /src/__tests__/App.test.tsx
    method: GET
    data_selector: records
- name: todos
  endpoint:
    path: /api/todos
    method: GET
    data_selector: todos
    params: {}
- name: following_tags
  endpoint:
    path: /umekikazuya/following_tags
    method: GET
    data_selector: tags
- name: contributions
  endpoint:
    path: /umekikazuya/contributions
    method: GET
    data_selector: contributions
- name: hosting
  endpoint:
    path: /hosting
    method: GET
- name: build
  endpoint:
    path: /.github/workflows/pipeline.yaml
    method: POST
    data_selector: jobs.build
- name: test
  endpoint:
    path: /.github/workflows/pipeline.yaml
    method: POST
    data_selector: jobs.test
- name: deploy
  endpoint:
    path: /.github/workflows/pipeline.yaml
    method: POST
    data_selector: jobs.deploy
- name: data_query
  endpoint:
    path: /query
    method: GET
    data_selector: records
    params: {}
- name: data_manipulation
  endpoint:
    path: /manipulate
    method: POST
    data_selector: result
    params: {}
- name: tutorial
  endpoint:
    path: /tutorials/ci-cd
    method: GET
    data_selector: tutorials
    params: {}
- name: todos
  endpoint:
    path: /api/todos
    method: GET
    data_selector: todos
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /tags/issue
    method: GET
    data_selector: posts
    params: {}
- name: todo
  endpoint:
    path: /api/todos
    method: GET
    data_selector: todos
- name: issues
  endpoint:
    path: /api/v2/issues
    method: GET
    data_selector: issues
    params: {}
- name: distinct_terms
  endpoint:
    path: /api/euler/terms
    method: GET
    data_selector: terms
    params: {}
- name: build
  endpoint:
    path: /dist/
    method: POST
    data_selector: build-files
    params:
      retention-days: 1
- name: test
  endpoint:
    path: /test
    method: POST
    data_selector: test-results
    params: {}
- name: deploy
  endpoint:
    path: /firebase/deploy
    method: POST
    data_selector: deployment-status
    params: {}
- name: articles
  endpoint:
    path: /tags/projecteuler/feed
    method: GET
    data_selector: posts
    params: {}
- name: questions
  endpoint:
    path: /question-feed
    method: GET
    data_selector: questions
    params: {}
- name: problem_8
  endpoint:
    path: /problems/8
    method: GET
    data_selector: problem_statement
    params: {}
- name: ping
  endpoint:
    path: /systems/ping
    method: GET
    data_selector: message
    params: {}
- name: qiita
  endpoint:
    path: /app.external.qiita
    method: GET
- name: zenn
  endpoint:
    path: /app.external.zenn
    method: GET
- name: note
  endpoint:
    path: /app.external.note
    method: GET
- name: todos
  endpoint:
    path: /todos
    method: GET
    data_selector: todos
    params: {}
- name: todos_create
  endpoint:
    path: /todos
    method: POST
    data_selector: todos
    params: {}
- name: todos_update
  endpoint:
    path: /todos/:id
    method: PUT
    data_selector: todos
    params: {}
- name: todos_delete
  endpoint:
    path: /todos/:id
    method: DELETE
    data_selector: todos
    params: {}
- name: addTodoItem
  endpoint:
    path: /todos
    method: POST
    data_selector: ''
    params: {}
- name: deleteTodoItem
  endpoint:
    path: /todos/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: updateTodoItem
  endpoint:
    path: /todos/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: todoServer
  endpoint:
    path: /sse
    method: GET
    data_selector: todos
- name: todos
  endpoint:
    path: /todos
    method: GET
    data_selector: todos
    params: {}
- name: chat
  endpoint:
    path: /api/chat
    method: POST
    data_selector: messages
    params: {}
- name: todos
  endpoint:
    path: /todos
    method: GET
    data_selector: data
    params: {}
- name: rss_feed
  endpoint:
    path: /nogataka/feed
    method: GET
    data_selector: items
    params: {}
- name: contributions
  endpoint:
    path: /nogataka/contributions
    method: GET
    data_selector: items
    params: {}
- name: posts
  endpoint:
    path: /nogataka/posts
    method: GET
    data_selector: items
    params: {}
- name: followees
  endpoint:
    path: /nogataka/following_users
    method: GET
    data_selector: items
    params: {}
- name: followers
  endpoint:
    path: /nogataka/followers
    method: GET
    data_selector: items
    params: {}
- name: following_organizations
  endpoint:
    path: /nogataka/following_organizations
    method: GET
    data_selector: items
    params: {}
- name: following_tags
  endpoint:
    path: /nogataka/following_tags
    method: GET
    data_selector: items
    params: {}
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: text
    params: {}
- name: customers
  endpoint:
    path: /query/customers
    method: GET
    data_selector: json
    params: {}
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /yniji/posts
    method: GET
    data_selector: articles
- name: followers
  endpoint:
    path: /yniji/followers
    method: GET
    data_selector: followers
- name: followees
  endpoint:
    path: /yniji/following_users
    method: GET
    data_selector: followees
- name: tags
  endpoint:
    path: /yniji/following_tags
    method: GET
    data_selector: tags
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: static_analysis
  endpoint:
    path: /codeclimate/analyze
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: main2
  endpoint:
    path: /api/v2/docs
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: xlwings
  endpoint:
    path: /xlwings
    method: GET
    data_selector: records
- name: issue
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: weather_data
  endpoint:
    path: /data2015-2017
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ExcelData
  endpoint:
    path: /excel/data
    method: GET
    data_selector: data
- name: install_from_source
  endpoint:
    path: /ftp/python/3.8.0/Python-3.8.0.tar.xz
    method: GET
    data_selector: tar.xz
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: data
    params: {}
- name: action_items
  endpoint:
    path: /action_items
    method: GET
    data_selector: items
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
- name: custom_css
  endpoint:
    path: /custom/css
    method: POST
    data_selector: css
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: Taipy
  endpoint:
    path: /tags/%e9%96%8b%e7%99%ba%e3%83%84%e3%83%bc%e3%83%ab
    method: GET
    data_selector: records
    params: {}
- name: FastAPI
  endpoint:
    path: /tags/api%e9%96%8b%e7%99%ba
    method: GET
    data_selector: records
    params: {}
- name: Apidog
  endpoint:
    path: /tags/api%e9%96%8b%e7%99%ba
    method: GET
    data_selector: records
    params: {}
- name: Composio
  endpoint:
    path: /tags/api%e9%96%8b%e7%99%ba
    method: GET
    data_selector: records
    params: {}
- name: Shadcn/UI
  endpoint:
    path: /tags/api%e9%96%8b%e7%99%ba
    method: GET
    data_selector: records
    params: {}
- name: Apache Superset
  endpoint:
    path: /tags/api%e9%96%8b%e7%99%ba
    method: GET
    data_selector: records
    params: {}
- name: Continue.dev
  endpoint:
    path: /tags/api%e9%96%8b%e7%99%ba
    method: GET
    data_selector: records
    params: {}
- name: data_versioning
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: items
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Error Lens
  endpoint:
    path: /marketplace.visualstudio.com/items?itemName=usernamehw.errorlens
    method: GET
- name: indent-rainbow
  endpoint:
    path: /marketplace.visualstudio.com/items?itemName=oderwat.indent-rainbow
    method: GET
- name: Trailing Space
  endpoint:
    path: /marketplace.visualstudio.com/items?itemName=shardulm94.trailing-spaces
    method: GET
- name: 'autoDocstring: VSCode Python Docstring Generator'
  endpoint:
    path: /marketplace.visualstudio.com/items?itemName=njpwerner.autodocstring
    method: GET
- name: context_file
  endpoint:
    path: .ai/team/context.md
    method: GET
    data_selector: content
    params: {}
- name: architecture_file
  endpoint:
    path: .ai/team/architecture.md
    method: GET
    data_selector: content
    params: {}
- name: conventions_file
  endpoint:
    path: .ai/team/conventions.md
    method: GET
    data_selector: content
    params: {}
- name: glossary_file
  endpoint:
    path: .ai/team/glossary.md
    method: GET
    data_selector: content
    params: {}
- name: adr_files
  endpoint:
    path: .ai/team/adr/
    method: GET
    data_selector: content
    params: {}
- name: domain_context_files
  endpoint:
    path: .ai/domains/*/context.md
    method: GET
    data_selector: content
    params: {}
- name: isort_test
  endpoint:
    path: /isort_test.py
    method: GET
    data_selector: records
    params: {}
- name: messages
  endpoint:
    path: /v2/bot/message
    method: POST
    data_selector: messages
    params: {}
- name: ai_validate
  endpoint:
    path: npm run ai:validate
    method: GET
    data_selector: ''
    params: {}
- name: ai_generate
  endpoint:
    path: npm run ai:generate
    method: GET
    data_selector: ''
    params: {}
- name: ai_search
  endpoint:
    path: npm run ai:search
    method: GET
    data_selector: ''
    params: {}
- name: ai_diff
  endpoint:
    path: npm run ai:diff
    method: GET
    data_selector: ''
    params: {}
- name: ai_changelog
  endpoint:
    path: npm run ai:changelog
    method: GET
    data_selector: ''
    params: {}
- name: ai_onboarding
  endpoint:
    path: npm run ai:onboarding
    method: GET
    data_selector: ''
    params: {}
- name: precommit
  endpoint:
    path: git commit -m "Add payment context"
    method: GET
    data_selector: ''
    params: {}
- name: message
  endpoint:
    path: /callback
    method: POST
    data_selector: request.body
- name: context
  endpoint:
    path: /ai/team/context.md
    method: GET
    data_selector: context_data
- name: callback
  endpoint:
    path: /callback
    method: POST
- name: ai_validate
  endpoint:
    path: /ai/scripts/validate-context.ts
    method: POST
- name: ai_generate
  endpoint:
    path: /ai/scripts/generate-context.ts
    method: POST
- name: ai_search
  endpoint:
    path: /ai/scripts/search-context.ts
    method: POST
- name: ai_diff
  endpoint:
    path: /ai/scripts/diff-context.ts
    method: POST
- name: ai_changelog
  endpoint:
    path: /ai/scripts/diff-context.ts
    method: POST
- name: ai_onboarding
  endpoint:
    path: /ai/scripts/onboarding-tracker.ts
    method: POST
- name: context_search
  endpoint:
    path: /search
    method: POST
    data_selector: results
- name: weekrange
  endpoint:
    path: /weekrange
    method: GET
    data_selector: records
    params: {}
- name: daterange
  endpoint:
    path: /daterange
    method: GET
    data_selector: records
    params: {}
- name: hourrange
  endpoint:
    path: /hourrange
    method: GET
    data_selector: records
    params: {}
- name: timedeltarange
  endpoint:
    path: /timedeltarange
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: create_comment
  endpoint:
    path: /repos/{owner}/{repo}/issues/{issue_number}/comments
    method: POST
    data_selector: comment
    params: {}
- name: user
  endpoint:
    path: /chomado
    method: GET
    data_selector: user
    params: {}
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params: {}
- name: articles
  endpoint:
    path: /chomado/items
    method: GET
    data_selector: items
    params: {}
- name: package_json_scripts
  endpoint:
    path: /ai/scripts
    method: GET
    data_selector: scripts
- name: Vim Overview
  endpoint:
    path: /vim/overview
    method: GET
    data_selector: records
- name: Vim Features
  endpoint:
    path: /vim/features
    method: GET
    data_selector: records
- name: context_changes
  endpoint:
    path: /context-changes
    method: GET
    data_selector: changes
- name: issues
  endpoint:
    path: /repos/{owner}/{repo}/issues/{issue_number}/comments
    method: POST
    data_selector: data
    params: {}
- name: LSTMネットワークの概要
  endpoint:
    path: /tags/deeplearning/items/89cd7b69a8a6239d67ca
    method: GET
- name: アルゴリズムとは何か！？ ～ 文系理系問わず楽しめる精選 6 問 ～
  endpoint:
    path: /tags/deeplearning/items/f909b79ee03e679c7142
    method: GET
- name: 無料、独学で機械学習エンジニアになる！~機械学習が学べる無料サイト、書籍~
  endpoint:
    path: /tags/deeplearning/items/73b748414567d27a9c52
    method: GET
- name: 【深層学習】図で理解するAttention機構
  endpoint:
    path: /tags/deeplearning/items/0bb2931b666fa602d0fc
    method: GET
- name: Kaggle Expertになるまで勉強したことを全て書く
  endpoint:
    path: /tags/deeplearning/items/8ffe2ffa6f020e09cfd3
    method: GET
- name: AI-OCR入門：代表的なAIモデルと精度検証まとめ
  endpoint:
    path: /tags/deeplearning/items/87912f13651fc6865224
    method: GET
- name: (Supervised) Contrastive Learning入門 - 数式アリでざっと理解 -
  endpoint:
    path: /tags/deeplearning/items/453c52eb4e30d4971844
    method: GET
- name: E資格2025#2に挑戦してきた話
  endpoint:
    path: /tags/deeplearning/items/e9ac01bce5279ea224cd
    method: GET
- name: AI素人の非IT系社員が独学で一発でG検定に合格した勉強法
  endpoint:
    path: /tags/deeplearning/items/b9b80e24eb97fb29003d
    method: GET
- name: 【E資格合格体験記】勉強法と意識したこと
  endpoint:
    path: /tags/deeplearning/items/62d0741cbe5685fa9d9d
    method: GET
- name: context
  endpoint:
    path: context.md
    method: GET
    data_selector: content
    params: {}
- name: adr
  endpoint:
    path: adr/
    method: GET
    data_selector: records
    params: {}
- name: onboarding_items
  endpoint:
    path: .ai/scripts/onboarding-tracker.ts
    method: GET
    data_selector: ONBOARDING_ITEMS
    params: {}
- name: neuron
  endpoint:
    path: /neurons
    method: GET
    data_selector: neurons
    params: {}
- name: synapse
  endpoint:
    path: /synapses
    method: GET
    data_selector: synapses
    params: {}
- name: neural_network
  endpoint:
    path: /neural_networks
    method: GET
    data_selector: neural_networks
    params: {}
- name: neuron_model
  endpoint:
    path: /api/neuron_model
    method: GET
    data_selector: records
- name: ニューロン
  endpoint:
    path: /neuron
    method: GET
    data_selector: records
- name: シナプス
  endpoint:
    path: /synapse
    method: GET
    data_selector: records
- name: ヘッブ則
  endpoint:
    path: /hebbian
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: video_generation
  endpoint:
    path: /api/video/generate
    method: POST
- name: changelog
  endpoint:
    path: /changelog
    method: GET
    data_selector: changes
- name: diff
  endpoint:
    path: /diff
    method: GET
    data_selector: diffs
- name: onboarding_checklist
  endpoint:
    path: /onboarding/checklist
    method: POST
    data_selector: checklist
    params: {}
- name: gemini-robotics-er-1.5-preview
  endpoint:
    path: /models/gemini-robotics-er-1.5-preview
    method: POST
    data_selector: response
    params: {}
- name: pipeline
  endpoint:
    path: /.ai/multi-agent/pipeline.yml
    method: GET
    data_selector: pipeline
    params: {}
- name: parallel
  endpoint:
    path: /.ai/multi-agent/parallel.yml
    method: GET
    data_selector: parallel_agents
    params: {}
- name: example_1
  endpoint:
    path: /example1
    method: GET
    data_selector: records
- name: example_2
  endpoint:
    path: /example2
    method: GET
    data_selector: records
- name: example_11
  endpoint:
    path: /example11
    method: GET
    data_selector: input_output
- name: example_12
  endpoint:
    path: /example12
    method: GET
    data_selector: input_output
- name: example_13
  endpoint:
    path: /example13
    method: GET
    data_selector: input_output
- name: example_14
  endpoint:
    path: /example14
    method: GET
    data_selector: input_output
- name: example_15
  endpoint:
    path: /example15
    method: GET
    data_selector: input_output
- name: example_16
  endpoint:
    path: /example16
    method: GET
    data_selector: input_output
- name: example_17
  endpoint:
    path: /example17
    method: GET
    data_selector: input_output
- name: example_18
  endpoint:
    path: /example18
    method: GET
    data_selector: input_output
- name: example_19
  endpoint:
    path: /example19
    method: GET
    data_selector: input_output
- name: example_20
  endpoint:
    path: /example20
    method: GET
    data_selector: input_output
- name: example_21
  endpoint:
    path: /example21
    method: GET
    data_selector: input_output
- name: example_22
  endpoint:
    path: /example22
    method: GET
    data_selector: input_output
- name: マルチエージェントアーキテクチャ
  endpoint:
    path: /multi-agent-architecture
    method: GET
    data_selector: details
    params: {}
- name: makeup_analysis
  endpoint:
    path: /makeup_analysis
    method: POST
    data_selector: result
- name: character_pose_generation
  endpoint:
    path: /character_pose_generation
    method: POST
    data_selector: result
- name: product_package_generation
  endpoint:
    path: /product_package_generation
    method: POST
    data_selector: result
- name: filter_texture_overlay
  endpoint:
    path: /filter_texture_overlay
    method: POST
    data_selector: result
- name: character_face_shape_control
  endpoint:
    path: /character_face_shape_control
    method: POST
    data_selector: result
- name: light_shadow_control
  endpoint:
    path: /light_shadow_control
    method: POST
    data_selector: result
- name: lego_minifigure
  endpoint:
    path: /lego_minifigure
    method: POST
    data_selector: result
- name: gundam_model_figure
  endpoint:
    path: /gundam_model_figure
    method: POST
    data_selector: result
- name: hardware_diagram
  endpoint:
    path: /hardware_diagram
    method: POST
    data_selector: result
- name: food_calorie_display
  endpoint:
    path: /food_calorie_display
    method: POST
    data_selector: result
- name: transparent_layer_extraction
  endpoint:
    path: /transparent_layer_extraction
    method: POST
    data_selector: result
- name: image_extension_repair
  endpoint:
    path: /image_extension_repair
    method: POST
    data_selector: result
- name: ancient_landscape_generation
  endpoint:
    path: /ancient_landscape_generation
    method: POST
    data_selector: result
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: context_window
  endpoint:
    path: /multi-agent/context-window
    method: GET
    data_selector: context_records
- name: agent_limitations
  endpoint:
    path: /multi-agent/limitations
    method: GET
    data_selector: limitations_records
- name: example_52
  endpoint:
    path: /path/to/example_52
    method: GET
    data_selector: records
- name: example_53
  endpoint:
    path: /path/to/example_53
    method: GET
    data_selector: records
- name: example_54
  endpoint:
    path: /path/to/example_54
    method: GET
    data_selector: records
- name: example_55
  endpoint:
    path: /path/to/example_55
    method: GET
    data_selector: records
- name: example_56
  endpoint:
    path: /path/to/example_56
    method: GET
    data_selector: records
- name: example_57
  endpoint:
    path: /path/to/example_57
    method: GET
    data_selector: records
- name: example_58
  endpoint:
    path: /path/to/example_58
    method: GET
    data_selector: records
- name: example_59
  endpoint:
    path: /path/to/example_59
    method: GET
    data_selector: records
- name: example_60
  endpoint:
    path: /path/to/example_60
    method: GET
    data_selector: records
- name: example_61
  endpoint:
    path: /path/to/example_61
    method: GET
    data_selector: records
- name: example_62
  endpoint:
    path: /path/to/example_62
    method: GET
    data_selector: records
- name: example_63
  endpoint:
    path: /path/to/example_63
    method: GET
    data_selector: records
- name: example_64
  endpoint:
    path: /path/to/example_64
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: context_engineering
  endpoint:
    path: /api/v1/multi-agent
    method: GET
    data_selector: data
    params: {}
- name: rss_feed
  endpoint:
    path: /nakaizumi_slj/feed
    method: GET
    data_selector: records
    params: {}
- name: contributions
  endpoint:
    path: /nakaizumi_slj/contributions
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /nakaizumi_slj/posts
    method: GET
    data_selector: records
    params: {}
- name: followees
  endpoint:
    path: /nakaizumi_slj/following_users
    method: GET
    data_selector: records
    params: {}
- name: followers
  endpoint:
    path: /nakaizumi_slj/followers
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: auth_service
  endpoint:
    path: /src/modules/auth/auth.service.ts
    method: GET
    data_selector: auth_logic
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: context_engineering
  endpoint:
    path: /context_engineering
    method: GET
    data_selector: articles
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: tags
  endpoint:
    path: /api/v2/tags
    method: GET
    data_selector: tags
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: auth_service
  endpoint:
    path: /services/data/vXX.X/sobjects/AuthService
    method: GET
    data_selector: records
    params: {}
- name: posts
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: context_cache
  endpoint:
    path: .ai/scripts/context-cache.ts
    method: GET
    data_selector: cache
    params: {}
- name: adaptive_parallelism
  endpoint:
    path: .ai/scripts/adaptive-parallelism.ts
    method: GET
    data_selector: adaptive_parallel
    params: {}
- name: pipeline
  endpoint:
    path: /.ai/multi-agent/pipeline.yml
    method: GET
    data_selector: pipeline
    params: {}
- name: parallel
  endpoint:
    path: /.ai/multi-agent/parallel.yml
    method: GET
    data_selector: parallel_agents
    params: {}
- name: theme
  endpoint:
    path: /wp-content/themes/mytheme/
    method: GET
    data_selector: theme_data
    params: {}
- name: screenshot_commands
  endpoint:
    path: /commands/screenshot
    method: GET
    data_selector: commands
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: auth_service
  endpoint:
    path: /src/modules/auth/auth.service.ts
    method: GET
    data_selector: service_methods
    params: {}
- name: workflow_engine
  endpoint:
    path: /.ai/scripts/workflow-engine.ts
    method: GET
    data_selector: workflow_execution
    params: {}
- name: campaign
  endpoint:
    path: /official-events
    method: GET
    data_selector: posts
- name: participating_users
  endpoint:
    path: /participating-users
    method: GET
    data_selector: users
- name: refactor_groups
  endpoint:
    path: /ai/outputs/refactor-groups.json
    method: GET
    data_selector: groups
    params: {}
- name: microservices
  endpoint:
    path: /ai/multi-agent/microservices.yml
    method: GET
    data_selector: services
    params: {}
- name: task_management
  endpoint:
    path: /content
    method: POST
    data_selector: response
    params: {}
- name: multi_agent_context
  endpoint:
    path: /multi-agent/context
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: following_tags
  endpoint:
    path: /umekikazuya/following_tags
    method: GET
    data_selector: tags
- name: posts
  endpoint:
    path: /umekikazuya/posts
    method: GET
    data_selector: articles
- name: followers
  endpoint:
    path: /umekikazuya/followers
    method: GET
    data_selector: followers
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: queries
  endpoint:
    path: /queries
    method: GET
    data_selector: results
    params: {}
- name: tables
  endpoint:
    path: /tables
    method: GET
    data_selector: results
    params: {}
- name: auth_service
  endpoint:
    path: /auth/login
    method: POST
    data_selector: data
    params: {}
- name: register_service
  endpoint:
    path: /auth/register
    method: POST
    data_selector: data
    params: {}
- name: validate_token_service
  endpoint:
    path: /auth/validate-token
    method: POST
    data_selector: data
    params: {}
- name: EntityListBuilder
  endpoint:
    path: /core/lib/Drupal/Core/Entity/EntityListBuilder.php
    method: GET
    data_selector: operations
    params: {}
- name: docker-compose_overview
  endpoint:
    path: /docker-compose/overview
    method: GET
    data_selector: overview_data
- name: docker-compose_features
  endpoint:
    path: /docker-compose/features
    method: GET
    data_selector: features_data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: context_engineering
  endpoint:
    path: /context_engineering
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /tags/projecteuler/feed
    method: GET
    data_selector: posts
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: problem_8
  endpoint:
    path: /problems/8
    method: GET
    data_selector: records
- name: problem_006
  endpoint:
    path: /project-euler/006
    method: GET
    data_selector: problem
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: qiita
  endpoint:
    path: /app.external.qiita
    method: GET
    data_selector: records
    params: {}
- name: zenn
  endpoint:
    path: /app.external.zenn
    method: GET
    data_selector: records
    params: {}
- name: note
  endpoint:
    path: /app.external.note
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /komikomi/articles
    method: GET
    data_selector: items
    params: {}
- name: followers
  endpoint:
    path: /komikomi/followers
    method: GET
    data_selector: items
    params: {}
- name: schedule_query_iam_role
  endpoint:
    path: /iam/roles/redshift-sche-role
    method: GET
    data_selector: policies
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_following
  endpoint:
    path: /api/v2/users/{user_id}/following_users
    method: GET
    data_selector: following_users
    params: {}
- name: user_followers
  endpoint:
    path: /api/v2/users/{user_id}/followers
    method: GET
    data_selector: followers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: 設計
  endpoint:
    path: /api/design
    method: GET
    data_selector: records
- name: Gate 0
  endpoint:
    path: /gate0
    method: GET
    data_selector: checklist
    params: {}
- name: Gate 1
  endpoint:
    path: /gate1
    method: GET
    data_selector: details
    params: {}
- name: Build Phase
  endpoint:
    path: /build_phase
    method: GET
    data_selector: implementation
    params: {}
- name: Gate 2
  endpoint:
    path: /gate2
    method: GET
    data_selector: release_preparation
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: 'Gate 0: スコープ定義の深堀り'
  endpoint:
    path: /path/to/gate0
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: issue
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_registration
  endpoint:
    path: /api/auth/register
    method: POST
    data_selector: response
    params: {}
- name: user_login
  endpoint:
    path: /api/auth/login
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: weekly_retrospective
  endpoint:
    path: /weekly/retrospective
    method: GET
    data_selector: metrics
- name: monthly_metrics_review
  endpoint:
    path: /monthly/metrics/review
    method: GET
    data_selector: trends
- name: context_health_report
  endpoint:
    path: /api/context-health-report
    method: GET
    data_selector: metrics
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: auth
  endpoint:
    path: /auth
    method: POST
    data_selector: records
    params: {}
- name: payment
  endpoint:
    path: /payment
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
- name: game_rankings
  endpoint:
    path: /api/game_rankings
    method: GET
    data_selector: records
    params: {}
- name: context_update_prefix
  endpoint:
    path: /context/update/prefix
    method: GET
    data_selector: records
    params: {}
- name: adr_addition
  endpoint:
    path: /adr/addition
    method: GET
    data_selector: records
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params:
      incremental: updated_at
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: user_profile
  endpoint:
    path: /api/v2/users/:id
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: user
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: context_file
  endpoint:
    path: .ai/team/context.md
    method: GET
    data_selector: contents
    params: {}
- name: architecture_file
  endpoint:
    path: .ai/team/architecture.md
    method: GET
    data_selector: contents
    params: {}
- name: conventions_file
  endpoint:
    path: .ai/team/conventions.md
    method: GET
    data_selector: contents
    params: {}
- name: glossary_file
  endpoint:
    path: .ai/team/glossary.md
    method: GET
    data_selector: contents
    params: {}
- name: adr_file
  endpoint:
    path: .ai/team/adr/
    method: GET
    data_selector: contents
    params: {}
- name: domain_context_file
  endpoint:
    path: .ai/domains/*/context.md
    method: GET
    data_selector: contents
    params: {}
- name: ai_validate
  endpoint:
    path: npm run ai:validate
    method: GET
    data_selector: results
- name: ai_generate
  endpoint:
    path: npm run ai:generate
    method: GET
    data_selector: results
- name: ai_search
  endpoint:
    path: npm run ai:search
    method: GET
    data_selector: results
- name: ai_diff
  endpoint:
    path: npm run ai:diff
    method: GET
    data_selector: results
- name: ai_changelog
  endpoint:
    path: npm run ai:changelog
    method: GET
    data_selector: results
- name: ai_onboarding
  endpoint:
    path: npm run ai:onboarding
    method: GET
    data_selector: results
- name: precommit
  endpoint:
    path: git commit -m
    method: POST
    data_selector: results
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: context_validation
  endpoint:
    path: .ai/team/context.md
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: items
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: context
  endpoint:
    path: /team/context.md
    method: GET
    data_selector: content
- name: architecture
  endpoint:
    path: /team/architecture.md
    method: GET
    data_selector: content
- name: adr
  endpoint:
    path: /team/adr/
    method: GET
    data_selector: content
- name: auth_domain
  endpoint:
    path: /domains/auth/
    method: GET
    data_selector: content
- name: payment_domain
  endpoint:
    path: /domains/payment/
    method: GET
    data_selector: content
- name: notification_domain
  endpoint:
    path: /domains/notification/
    method: GET
    data_selector: content
- name: personal
  endpoint:
    path: /personal/
    method: GET
    data_selector: content
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: チーム開発
  endpoint:
    path: /team-development
    method: GET
    data_selector: content
    params: {}
- name: コンテキスト共有
  endpoint:
    path: /context-sharing
    method: GET
    data_selector: content
    params: {}
- name: posted_articles
  endpoint:
    path: /emiki#items
    method: GET
    data_selector: articles
    params: {}
- name: answered_questions
  endpoint:
    path: /emiki/questions#items
    method: GET
    data_selector: questions
    params: {}
- name: likes
  endpoint:
    path: /emiki/likes#items
    method: GET
    data_selector: likes
    params: {}
- name: createComment
  endpoint:
    path: /repos/{owner}/{repo}/issues/{issue_number}/comments
    method: POST
    data_selector: comment
- name: budgets
  endpoint:
    path: /services/data/v1/budgets
    method: GET
    data_selector: records
- name: context
  endpoint:
    path: team/context.md
    method: GET
    data_selector: ''
- name: async_decisions
  endpoint:
    path: team/async-decisions.md
    method: GET
    data_selector: ''
- name: user
  endpoint:
    path: /api/v2/users/:id
    method: GET
    data_selector: user
    params: {}
- name: organizations
  endpoint:
    path: /api/v2/users/:id/organizations
    method: GET
    data_selector: organizations
    params: {}
- name: tags
  endpoint:
    path: /api/v2/users/:id/tags
    method: GET
    data_selector: tags
    params: {}
- name: A Record
  endpoint:
    path: /createRecord
    method: POST
    data_selector: record
    params:
      record_name: ''
      record_type: A
      value: インスタンスのパブリックIPv4アドレスを入力
      routing_policy: シンプルルーティング
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user_following_organizations
  endpoint:
    path: /nozomi_sb/following_organizations
    method: GET
    data_selector: organizations
    params: {}
- name: user_following_tags
  endpoint:
    path: /nozomi_sb/following_tags
    method: GET
    data_selector: tags
    params: {}
- name: issues
  endpoint:
    path: /repos/{owner}/{repo}/issues
    method: GET
    data_selector: issues
- name: comments
  endpoint:
    path: /repos/{owner}/{repo}/issues/{issue_number}/comments
    method: POST
    data_selector: comments
- name: domain_transfer
  endpoint:
    path: /domain-transfer
    method: POST
    data_selector: transferStatus
    params: {}
- name: host_zone
  endpoint:
    path: /host-zone
    method: POST
    data_selector: zoneStatus
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /ry-harada
    method: GET
    data_selector: user_data
    params: {}
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations_data
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags_data
    params: {}
- name: onboarding_tracker
  endpoint:
    path: .ai/scripts/onboarding-tracker.ts
    method: GET
    data_selector: checklist
    params: {}
- name: notePosts
  endpoint:
    path: /organizations/kddi/items
    method: GET
- name: favoriteLikes
  endpoint:
    path: /organizations/kddi/followers
    method: GET
- name: チーム開発のためのコンテキスト共有戦略
  endpoint:
    path: /context-sharing-strategy
    method: GET
    data_selector: contents
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: context
  endpoint:
    path: /ai/team/context.md
    method: GET
    data_selector: content
- name: async_decisions
  endpoint:
    path: /ai/team/async-decisions.md
    method: GET
    data_selector: decisions
- name: GCE_instance
  endpoint:
    path: /compute/v1/projects/{project}/zones/{zone}/instances
    method: POST
    data_selector: instances
    params:
      region: us-west1
      machine_type: e2-micro
      boot_disk:
        image: projects/ubuntu-os-cloud/global/images/ubuntu-2404-bionic-v20210927
        type: standard
        size_gb: 30
- name: plantuml-server
  endpoint:
    path: /docker/plantuml-server/docker-compose.yml
    method: CREATE
    data_selector: services.plantuml-server
- name: nginx
  endpoint:
    path: /nginx
    method: GET
    data_selector: records
    params: {}
- name: certbot
  endpoint:
    path: /certbot
    method: GET
    data_selector: records
    params: {}
- name: GCE_instance
  endpoint:
    path: /compute/v1/projects/{project}/zones/{zone}/instances
    method: POST
    data_selector: instances
- name: docker-compose
  endpoint:
    path: /plantuml-server/docker-compose.yml
    method: GET
    data_selector: services
- name: pipeline
  endpoint:
    path: /.ai/multi-agent/pipeline.yml
    method: GET
    data_selector: pipeline
    params: {}
- name: parallel
  endpoint:
    path: /.ai/multi-agent/parallel.yml
    method: GET
    data_selector: parallel_agents
    params: {}
- name: articles
  endpoint:
    path: /potofo/items
    method: GET
    data_selector: items
- name: tags
  endpoint:
    path: /potofo/following_tags
    method: GET
    data_selector: tags
- name: organizations
  endpoint:
    path: /potofo/following_organizations
    method: GET
    data_selector: organizations
- name: domain_registration
  endpoint:
    path: /domain-registration
    method: POST
    data_selector: domain
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: domain_registration
  endpoint:
    path: /domains/register
    method: POST
    data_selector: registration_status
    params: {}
- name: domain_verification
  endpoint:
    path: /domains/verify
    method: GET
    data_selector: verification_status
    params: {}
- name: multi_agent_architecture
  endpoint:
    path: /multi_agent/architecture
    method: GET
    data_selector: architecture_data
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: user_authentication
  endpoint:
    path: /api/v1/auth
    method: POST
    data_selector: data
    params:
      incremental: updated_at
- name: DNS_query_logs
  endpoint:
    path: /MyApplication/Logs
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: auth_service
  endpoint:
    path: /src/modules/auth/auth.service.ts
    method: GET
    data_selector: login, register, validateToken
    params: {}
- name: auth_controller
  endpoint:
    path: /src/modules/auth/auth.controller.ts
    method: GET
    data_selector: test cases
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
- name: posts
  endpoint:
    path: /vallack5296/feed
    method: GET
    data_selector: posts
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /pommny_dev
    method: GET
    data_selector: user_data
- name: articles
  endpoint:
    path: /pommny_dev/items
    method: GET
    data_selector: items
- name: followers
  endpoint:
    path: /pommny_dev/followers
    method: GET
    data_selector: followers
- name: following_organizations
  endpoint:
    path: /pommny_dev/following_organizations
    method: GET
    data_selector: organizations
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: workflow
  endpoint:
    path: workflow.yml
    method: GET
    data_selector: workflow
    params: {}
- name: latency_based_routing
  endpoint:
    path: /routing-policy/latency
    method: GET
    data_selector: routingPolicies
    params: {}
- name: geolocation_routing
  endpoint:
    path: /routing-policy/geolocation
    method: GET
    data_selector: routingPolicies
    params: {}
- name: pipeline
  endpoint:
    path: /.ai/multi-agent/pipeline.yml
    method: GET
    data_selector: pipeline
- name: parallel
  endpoint:
    path: /.ai/multi-agent/parallel.yml
    method: GET
    data_selector: parallel_agents
- name: user
  endpoint:
    path: /users/:id
    method: GET
    data_selector: user
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: articles
  endpoint:
    path: /okayu__11#items
    method: GET
    data_selector: items
- name: questions
  endpoint:
    path: /okayu__11/questions#items
    method: GET
    data_selector: items
- name: likes
  endpoint:
    path: /okayu__11/likes#items
    method: GET
    data_selector: items
- name: workflow
  endpoint:
    path: /workflow.yml
    method: GET
    data_selector: stages
    params: {}
- name: following_tags
  endpoint:
    path: /mukai3/following_tags
    method: GET
    data_selector: tags
- name: refactor_groups
  endpoint:
    path: /ai/outputs/refactor-groups.json
    method: GET
    data_selector: groups
    params: {}
- name: microservices
  endpoint:
    path: /ai/multi-agent/microservices.yml
    method: GET
    data_selector: services
    params: {}
- name: following_organizations
  endpoint:
    path: /revsystem/following_organizations
    method: GET
    data_selector: organizations
- name: following_tags
  endpoint:
    path: /revsystem/following_tags
    method: GET
    data_selector: tags
- name: posted_articles
  endpoint:
    path: /revsystem/posts
    method: GET
    data_selector: articles
- name: event
  endpoint:
    path: /official-events/790c6f4b38708f87e854
    method: GET
    data_selector: posts
- name: user_auth
  endpoint:
    path: /auth/user
    method: POST
    data_selector: data
    params: {}
- name: auth_service
  endpoint:
    path: /src/modules/auth/auth.service.ts
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: registered_domains
  endpoint:
    path: /domains
    method: GET
    data_selector: domains
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: マルチエージェントシステム
  endpoint:
    path: /multi-agent
    method: GET
    data_selector: agents
    params: {}
- name: following_organizations
  endpoint:
    path: /mob_engineer/following_organizations
    method: GET
    data_selector: organizations
    params: {}
- name: following_tags
  endpoint:
    path: /mob_engineer/following_tags
    method: GET
    data_selector: tags
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: user
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: user
  endpoint:
    path: /users/:id
    method: GET
    data_selector: user
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: data
- name: followers
  endpoint:
    path: /api/v2/users/yushibats/followers
    method: GET
    data_selector: followers
    params: {}
- name: followees
  endpoint:
    path: /api/v2/users/yushibats/followees
    method: GET
    data_selector: followees
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: find_command
  endpoint:
    path: /find
    method: GET
    data_selector: records
- name: process_display
  endpoint:
    path: /ps
    method: GET
    data_selector: records
- name: env_variables
  endpoint:
    path: /env
    method: GET
    data_selector: records
- name: permissions
  endpoint:
    path: /permissions
    method: GET
    data_selector: records
- name: log_monitoring
  endpoint:
    path: /logs
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: order_processing
  endpoint:
    path: /workflows/order-processing.yaml
    method: GET
    data_selector: agents
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: context_validation
  endpoint:
    path: /ai/scripts/validate-context
    method: POST
    data_selector: results
- name: contradiction_detection
  endpoint:
    path: /ai/scripts/detect-contradictions
    method: POST
    data_selector: results
- name: token_estimation
  endpoint:
    path: /ai/scripts/estimate-tokens
    method: POST
    data_selector: results
- name: staleness_check
  endpoint:
    path: /ai/scripts/check-staleness
    method: POST
    data_selector: results
- name: performance_profiling
  endpoint:
    path: /ai/scripts/profile-performance
    method: POST
    data_selector: results
- name: pollution_detection
  endpoint:
    path: /ai/scripts/detect-pollution
    method: POST
    data_selector: results
- name: report_generation
  endpoint:
    path: /ai/scripts/generate-report
    method: POST
    data_selector: results
- name: health_check
  endpoint:
    path: /ai/scripts/health-check
    method: POST
    data_selector: results
- name: common_issue_fixing
  endpoint:
    path: /ai/scripts/auto-fix
    method: POST
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: users
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: users
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
    params: {}
- name: user_profile
  endpoint:
    path: /api/v1/users/takaki-inokuchi
    method: GET
    data_selector: user
    params: {}
- name: user_articles
  endpoint:
    path: /api/v1/users/takaki-inokuchi/items
    method: GET
    data_selector: items
    params: {}
- name: user
  endpoint:
    path: /users/:id
    method: GET
    data_selector: user
- name: official_events
  endpoint:
    path: /official-events
    method: GET
    data_selector: events
    params: {}
- name: MCP SDK
  endpoint:
    path: /services/data/vXX.X/sobjects/MCP
    method: GET
    data_selector: records
- name: user_profile
  endpoint:
    path: /api/v2/users/takeda_h
    method: GET
    data_selector: user_data
- name: articles
  endpoint:
    path: /api/v2/users/takeda_h/articles
    method: GET
    data_selector: articles
- name: followers
  endpoint:
    path: /api/v2/users/takeda_h/followers
    method: GET
    data_selector: followers
- name: user
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: items
    params: {}
- name: article
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: ec2_instance
  endpoint:
    path: /services/ec2/instances
    method: GET
- name: posted_articles
  endpoint:
    path: /emiki#items
    method: GET
    data_selector: articles
    params: {}
- name: answered_questions
  endpoint:
    path: /emiki/questions#items
    method: GET
    data_selector: questions
    params: {}
- name: liked_items
  endpoint:
    path: /emiki/likes#items
    method: GET
    data_selector: likes
    params: {}
- name: articles
  endpoint:
    path: /TAKAHASHI_AIRI#items
    method: GET
    data_selector: items
- name: questions
  endpoint:
    path: /TAKAHASHI_AIRI/questions#items
    method: GET
    data_selector: items
- name: likes
  endpoint:
    path: /TAKAHASHI_AIRI/likes#items
    method: GET
    data_selector: items
- name: followers
  endpoint:
    path: /TAKAHASHI_AIRI/followers
    method: GET
    data_selector: followers
- name: followees
  endpoint:
    path: /TAKAHASHI_AIRI/following_users
    method: GET
    data_selector: followees
- name: record
  endpoint:
    path: /route53/create_record
    method: POST
    data_selector: records
    params:
      record_name: ''
      record_type: A
      routing_policy: simple
      value: インスタンスのパブリックIPv4アドレスを入力
- name: user
  endpoint:
    path: /users/:id
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: articles
  endpoint:
    path: /LodeRunner/items
    method: GET
    data_selector: items
- name: questions
  endpoint:
    path: /LodeRunner/questions
    method: GET
    data_selector: questions
- name: likes
  endpoint:
    path: /LodeRunner/likes
    method: GET
    data_selector: likes
- name: user
  endpoint:
    path: /api/v2/users/{id}
    method: GET
    data_selector: user
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: notePosts
  endpoint:
    path: /organizations/kddi/items
    method: GET
- name: members
  endpoint:
    path: /organizations/kddi/members
    method: GET
- name: profile
  endpoint:
    path: /organizations/kddi/profile
    method: GET
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /api/v2/users
    method: GET
    data_selector: users
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: gce_instance
  endpoint:
    path: /compute/v1/projects/{project_id}/zones/us-west1/instances
    method: GET
    data_selector: items
    params: {}
- name: plantuml-server
  endpoint:
    path: /docker/plantuml-server/docker-compose.yml
    method: GET
    data_selector: services
    params: {}
- name: GCE_instance
  endpoint:
    path: /compute/v1/projects/{project}/zones/{zone}/instances
    method: GET
    data_selector: items
    params: {}
- name: certbot
  endpoint:
    path: /var/www/certbot
    method: GET
    data_selector: certificates
    params: {}
- name: following_tags
  endpoint:
    path: /potofo/following_tags
    method: GET
    data_selector: tags
- name: pickup_articles
  endpoint:
    path: /potofo/pickup_articles
    method: GET
    data_selector: articles
- name: domain_registration
  endpoint:
    path: /v1/domains
    method: POST
    data_selector: domain
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: following_tags
  endpoint:
    path: /zukizukizukizuki/following_tags
    method: GET
    data_selector: tags
- name: posted_articles
  endpoint:
    path: /zukizukizukizuki#items
    method: GET
    data_selector: articles
- name: CloudWatchLogsToS3
  endpoint:
    path: /services/data/vXX.X/sobjects/CloudWatchLogsToS3
    method: POST
    data_selector: records
    params: {}
- name: ApplicationLogGroup
  endpoint:
    path: /services/data/vXX.X/sobjects/ApplicationLogGroup
    method: POST
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /Yamato1923#items
    method: GET
    data_selector: items
    params: {}
- name: questions
  endpoint:
    path: /Yamato1923/questions#items
    method: GET
    data_selector: items
    params: {}
- name: likes
  endpoint:
    path: /Yamato1923/likes#items
    method: GET
    data_selector: items
    params: {}
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: articles
  endpoint:
    path: /chiaoi/items
    method: GET
    data_selector: items
- name: organizations
  endpoint:
    path: /chiaoi/organizations
    method: GET
    data_selector: organizations
- name: tags
  endpoint:
    path: /chiaoi/tags
    method: GET
    data_selector: tags
- name: contributions
  endpoint:
    path: /vallack5296/contributions
    method: GET
    data_selector: records
- name: posts
  endpoint:
    path: /vallack5296/posts
    method: GET
    data_selector: records
- name: following_users
  endpoint:
    path: /vallack5296/following_users
    method: GET
    data_selector: records
- name: followers
  endpoint:
    path: /vallack5296/followers
    method: GET
    data_selector: records
- name: following_organizations
  endpoint:
    path: /vallack5296/following_organizations
    method: GET
    data_selector: records
- name: following_tags
  endpoint:
    path: /vallack5296/following_tags
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /organizations/beex-inc/items
    method: GET
    data_selector: items
    params: {}
- name: members
  endpoint:
    path: /organizations/beex-inc/members
    method: GET
    data_selector: members
    params: {}
- name: pommny_dev
  endpoint:
    path: /pommny_dev
    method: GET
    data_selector: items
- name: following_organizations
  endpoint:
    path: /zumax/following_organizations
    method: GET
    data_selector: organizations
- name: following_tags
  endpoint:
    path: /zumax/following_tags
    method: GET
    data_selector: tags
- name: posted_articles
  endpoint:
    path: /zumax#items
    method: GET
    data_selector: articles
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: posted_articles
  endpoint:
    path: /aws-training#items
    method: GET
    data_selector: articles
    params: {}
- name: commented_articles
  endpoint:
    path: /aws-training/comments#items
    method: GET
    data_selector: comments
    params: {}
- name: likes
  endpoint:
    path: /aws-training/likes#items
    method: GET
    data_selector: likes
    params: {}
- name: public_stock_list
  endpoint:
    path: /aws-training/stocks#items
    method: GET
    data_selector: stocks
    params: {}
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: user
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: mukai3_feed
  endpoint:
    path: /mukai3/feed
    method: GET
- name: mukai3_contributions
  endpoint:
    path: /mukai3/contributions
    method: GET
- name: mukai3_articles
  endpoint:
    path: /mukai3/items
    method: GET
- name: mukai3_following_users
  endpoint:
    path: /mukai3/following_users
    method: GET
- name: mukai3_followers
  endpoint:
    path: /mukai3/followers
    method: GET
- name: mukai3_following_organizations
  endpoint:
    path: /mukai3/following_organizations
    method: GET
- name: mukai3_following_tags
  endpoint:
    path: /mukai3/following_tags
    method: GET
- name: articles
  endpoint:
    path: /revsystem/articles
    method: GET
    data_selector: records
    params: {}
- name: organizations
  endpoint:
    path: /revsystem/organizations
    method: GET
    data_selector: records
    params: {}
- name: tags
  endpoint:
    path: /revsystem/tags
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v2/items
    method: GET
    data_selector: items
- name: registered_domains
  endpoint:
    path: /route53/registered_domains
    method: GET
    data_selector: domains
    params: {}
- name: domain_pricing
  endpoint:
    path: /pricing
    method: GET
    data_selector: domains
    params: {}
- name: user
  endpoint:
    path: /users/{id}
    method: GET
    data_selector: data
    params: {}
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: items
- name: items
  endpoint:
    path: /items
    method: GET
    data_selector: items
- name: user
  endpoint:
    path: /users
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /items
    method: GET
    data_selector: data
- name: organizations
  endpoint:
    path: /organizations
    method: GET
    data_selector: organizations
    params: {}
- name: tags
  endpoint:
    path: /tags
    method: GET
    data_selector: tags
    params: {}
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: articles
    params: {}
- name: search_file
  endpoint:
    path: /search/file
    method: GET
    data_selector: results
    params:
      incremental: updated_at
- name: current_process
  endpoint:
    path: /process/current
    method: GET
    data_selector: processes
    params: {}
- name: environment_variable
  endpoint:
    path: /environment/variables
    method: GET
    data_selector: variables
    params: {}
- name: permissions_check
  endpoint:
    path: /permissions/check
    method: GET
    data_selector: permissions
    params: {}
notes:
- Some tools may require specific configurations or setups.
- 全ツールの5割程度のご紹介となります。
- Network reconnaissance tool to port scan and automatically enumerate services found
  on multiple targets.
- Uses RPC for enumeration.
- Some tools may require elevated privileges to run.
- Uses HTTP for communication.
- 'Scan a container image with the command: trivy image sample-app:latest'
- Enable OS detection, version detection, script scanning, and traceroute with -A
  option
- Amap detects applications running on specified ports.
- AutoRecon performs port scanning and service detection.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses Nmap for network scanning and vulnerability detection.
- Uses T50 for generating and sending data packets.
- Uses SNMP for querying host information
- High-speed scanning across multiple hosts
- Naabu is a port scanning tool written in Go that allows you to enumerate open ports
  for hosts in a fast and reliable manner.
- Nmap can be used for network exploration and security auditing.
- Tools may not work if the environment is not properly set up.
- Uses various scanning commands to detect vulnerabilities and misconfigurations.
- Usage examples provided for arp-scan and ARPing commands.
- Supports live capture and packet analysis from network interfaces
- May require super user privileges for promiscuous mode
- Uses unauthenticated SMB session for enumeration.
- 数が多過ぎてブラウザが固まってしまうため一部割愛させて頂きました。
- Use --script=vuln for vulnerability detection.
- SNMPスキャナーです。大量のホストに対して高速でスキャンを行うことができます。
- Uses HTTP protocol for communication
- Tested with HTTP requests and responses
- Windows版ではGUIによる操作も可能です。
- Uses various scanning techniques to detect services and versions
- Can pass hostnames, IP addresses, networks as targets
- 大量のホストのポートを高速でスキャンします。
- number of retries for the port scan (default 3)
- millisecond to wait before timing out (default 1000)
- time in seconds between scan phases (default 2)
- display version of naabu
- Fast scanning for a large number of hosts using SNMP.
- Displays information about detected network protocols.
- Create application session files, indexes
- Output all files to specified directory
- ポートスキャン＋OSやソフトウェアのバージョンの検出を有効化
- ACKスキャンでファイアウォールによるフィルタリングをチェック
- ポートスキャン＋ソフトウェアの脆弱性の検出を有効化
- ARPプロトコルを使ってローカルネットワーク上のIPv4ホストを検出します
- High-speed port scanning for large numbers of hosts.
- Uses optimized parameters for scanning
- Defaults include a timeout of 1000 ms and a warm-up time of 2 seconds
- Nmap can be used for network scanning and vulnerability detection.
- Nmap can be used for various types of scans including port scanning and vulnerability
  detection.
- Make sure to have appropriate permissions before scanning networks.
- Uses live capture mode to analyze packets
- SNMP scanner that can perform high-speed scans on multiple hosts.
- 大量のホストのポートを高速でスキャンします
- Credential bruteforcing commands should be modified before running
- WordPress Security Scanner is useful if WordPress is found
- Uses various scanning techniques for host and service detection.
- Output can vary based on scan options and network configuration.
- Uses default timeout of 1000 milliseconds
- Default number of retries for the port scan is 3
- Default warm-up time between scan phases is 2 seconds
- Uses Command Line for operations
- Can perform various types of scans including port and vulnerability scans
- Nmap can be used for scanning and detecting services and versions.
- Network sniffing tool for various protocols.
- Supports capturing and displaying information on multiple protocols.
- Various tools for network traffic analysis and manipulation.
- 標的ホストでgoogle.comへのリクエスト（攻撃者ホストに立てたWebサーバーにリクエストされる）
- Uses various network tools available in Kali Linux.
- Trivy scans for vulnerabilities, misconfigurations, and secrets.
- Some tools may not have been verified due to lack of testing environment.
- Multiple port scanning techniques supported, including version detection and TCP/IP
  fingerprinting.
- Nmap can detect open ports and services running on those ports.
- Nmap supports various scanning techniques and scripts for detailed information.
- Uses SYN stealth scan to identify open ports on hosts.
- Default timeout is 1000 milliseconds
- Default warm-up time is 2 seconds
- Network sniffing tool for protocol detection and information display.
- Creates application session files and indexes from network traffic logs
- Nmap can perform various types of scans including port scanning and vulnerability
  detection.
- Uses DNS proxy functionality
- Default nameserver is 8.8.8.8 for IPv4 and 2001:4860:4860::8888 for IPv6
- Analyzes captured network traffic logs and produces reports.
- Tools are tested and verified to work in the Kali Linux environment.
- Limitations exist on the number of tools introduced.
- Credential bruteforcing commands (don't run these without modifying them)
- This document provides usage examples for various network scanning tools available
  in Kali Linux.
- Supports various scanning techniques and service/version detection
- Can specify targets using IP addresses, hostnames, or networks
- Supports multiple protocols including ICMP, TCP, UDP, GRE, IPSec, RSVP, RIP, EIGRP,
  OSPF
- Some commands are marked as EXPERIMENTAL
- Nmap supports various scanning techniques including SYN scan, ACK scan, and version
  detection.
- Some scans may require elevated privileges.
- Creates application session files, indexes from network traffic logs.
- Exits after the specified number of hosts have responded.
- Don't run these commands without modifying them.
- Tools may require specific permissions to run effectively
- Some tools may produce varying results based on network configuration
- run diagnostic check up
- display debugging information
- display verbose output
- disable colors in CLI output
- display only results in output
- display stats of the running scan (deprecated)
- number of seconds to wait between showing a statistics update (deprecated) (default
  5)
- port to expose naabu metrics on (default 63636)
- Uses various scanning techniques including TCP, UDP, and others.
- Uses Ettercap for DNS spoofing
- Requires setup of attacker host for intercepting requests
- Nmap is used for network discovery and security auditing.
- Uses hex mode for packet sniffing and injection.
- Uses json format for output
- Some commands are experimental
- Uses various network scanning tools available in Kali Linux.
- Use ssldump to sniff any TCP connection.
- Credential bruteforcing commands should be modified before running.
- Number of retries for the port scan (default 3)
- Milliseconds to wait before timing out (default 1000)
- Time in seconds between scan phases (default 2)
- Number of seconds to wait between showing a statistics update (deprecated) (default
  5)
- Port to expose naabu metrics on (default 63636)
- Time to sleep between each ARP request (milliseconds)
- Number of times to send each ARP request (for nets with packet loss)
- Maximum packets per second rate (default 1000)
- ping probes for verification of host
- validate the ports again with TCP verification
- Nmap can be used to detect open ports and services running on a host.
- Nmap is a tool for network discovery and security auditing.
- It can be used to discover hosts and services on a network.
- Can create application session files, indexes and export them.
- パケットのスニッフィングやインジェクションを16進数で行います。
- Creates application session files, indexes
- Output files can be specified with -D
- Uses hexadecimal mode for packet sniffing.
- This tool allows you to see SSLv3/TLS traffic in real time.
- Specifying -j option changes output format to JSON.
- Some tools may not be verified due to lack of testing environments.
- 使用方法に従ってスキャンを実行します。
- 複数のターゲットを指定することができます。
- Nmap supports various scanning options including service detection and vulnerability
  scanning.
- Analyzes capture data from network traffic logs and outputs reports for various
  application protocols.
- Supports NTLMv1/NTLMv2/LMv2, NTLMSSP, Basic HTTP authentication.
- Uses HTTP for requests
- Responder is in quiet mode. No NBT-NS, LLMNR, MDNS messages will print to screen.
- Uses default cache directory at /root/.cache/trivy
- Default config path is trivy.yaml
- Nmap can scan for ports and detect OS and software versions.
- Can perform vulnerability scanning using scripts.
- 全ツールの5割程度のご紹介となります
- 数が多過ぎてブラウザが固まってしまうため一部割愛させて頂きました
- show stats of the running scan (deprecated)
- Nmap can perform OS detection, version detection, and vulnerability detection.
- Output files can be saved to a specified directory
- Supports NTLMv1/NTLMv2/LMv2, NTLMSSP, Basic HTTP authentication
- Performs LLMNR/NBT-NS/mDNS spoofing
- Port scanning and software version detection capabilities.
- Captures packets for specified time and interfaces.
- tcpick is a packet capture tool that reconstructs and displays data streams.
- Uses command line interface for packet sniffing and injection
- Uses a cache directory by default at '/root/.cache/trivy'
- The config path is defaulted to 'trivy.yaml'
- Trivy can scan various targets including filesystems, container images, and repositories.
- Uses ARP protocol to detect IPv4 hosts on local network.
- Uses JSON output format when -j is specified
- Tools may require elevated permissions to run.
- Some tools may not be compatible with certain network configurations.
- Uses SYN Stealth Scan
- Nmap is a powerful network scanning tool that can scan ports and detect vulnerabilities.
- Nmap supports multiple scanning techniques and protocols.
- Ensure to have the proper permissions for scanning networks.
- Displays information about various network protocols.
- Provides functionality to analyze captured data from network traffic logs.
- Allows packet sniffing and injection in hexadecimal mode.
- SSLv3/TLS network protocol analyzer that displays traffic.
- Can be used to sniff any TCP connection.
- Tools were not tested for all scenarios, only a portion was validated.
- Some tools may have limitations in functionality or usability.
- -timeout int       millisecond to wait before timing out (default 1000)
- -t timeout      wait timeout milliseconds for response. Default 1000.
- -T <n>    Timeout the no-responses in <n> seconds (default=2 secs)
- -m retransmits  Number of retransmits. Default 0.
- masscan allows scanning of a range of IP addresses.
- naabu quickly enumerates open ports for hosts.
- Uses a default timeout of 1000 milliseconds for responses.
- Number of retries for port scans defaults to 3.
- Nmap can scan for open ports and detect OS and software versions.
- Various options can be used to customize scans.
- Uses TCP for communication.
- Creates application session files, indexes, and HTML reports.
- Uses various tools for packet manipulation and sniffing.
- Some commands are experimental.
- Defaults for various options are provided in the documentation.
- Uses TCP for port verification.
- Uses various scanning techniques to detect open ports and services
- Can perform OS and software version detection
- Uses various application protocols for session and file data reporting.
- -retries int number of retries for the port scan (default 3)
- -timeout int millisecond to wait before timing out (default 1000)
- -warm-up-time int time in seconds between scan phases (default 2)
- -ping ping probes for verification of host
- -verify validate the ports again with TCP verification
- -health-check, -hc run diagnostic check up
- -debug display debugging information
- -verbose, -v display verbose output
- -no-color, -nc disable colors in CLI output
- -silent display only results in output
- -version display version of naabu
- -mp, -metrics-port int port to expose naabu metrics on (default 63636)
- Uses custom pcap filter for packet sniffing
- Injection options include disabling packet checksum
- Nmap can detect OS and software versions.
- Uses quiet mode — disables a bunch of printing from the poisoners.
- Some options like -w start the WPAD rogue proxy server.
- Analyzes network traffic logs
- Scanning commands include config, filesystem, image, kubernetes, repository, rootfs,
  sbom, vm.
- Management commands include module, plugin, vex, and utility commands include clean,
  completion, convert, help, registry, server, version.
- Uses ARP protocol to detect IPv4 hosts on the local network.
- Usage of hexinject for packet sniffing and injection in hexadecimal mode.
- Works with SMB to enumerate users and OS information.
- Uses Twofish encryption
- Uses Nmap to perform network scanning and service detection
- Uses various protocols for network sniffing and spoofing.
- Captures packets on specified network interfaces.
- This documentation provides usage examples for various network tools.
- Network traffic monitoring and analysis tool.
- Includes LLMNR/NBT-NS/mDNS spoofing.
- SSLv3/TLS network protocol analyzer.
- Use of various tools for credential bruteforcing and scanning.
- FTester is used for testing firewall filtering policies.
- Uses CLI for interaction and reporting
- Supports various scanning techniques
- Uses a rogue WPAD proxy server.
- Can poison requests with alternate IPs.
- 'masscan: can scan large number of hosts rapidly.'
- 'naabu: allows fast enumeration of open ports.'
- Nmap can be used to scan for open ports and services on a target host.
- Uses tcpflow to capture packets
- Non-flag arguments are treated as input files
- Uses various scan techniques to detect open ports and services.
- Can also check for vulnerabilities in services.
- Network traffic logs analysis tool
- Supports various application protocols
- Can function in quiet mode
- ツールのカテゴリーは私が大雑把に付けただけなので適していないかもしれません。
- Credential bruteforcing commands don't run these without modifying them
- tcpick is a packet capture tool for reconstructing and displaying data streams.
- Scans a range of IPs for open ports quickly.
- Uses TCP verification for port validation
- HTTP proxy started with SSL strip enabled.
- Various command line options are available for different scanning techniques.
- Some tools may require specific configurations to run properly
- This tool analyzes network traffic logs and outputs reports for various application
  protocols.
- Use caution with credential bruteforcing commands.
- Modify commands before executing.
- SYN Stealth Scan
- Supports scanning of specified IP addresses or ranges
- Uses TCP and UDP protocols for communication.
- Enables capturing and decoding SSL/TLS traffic.
- Uses various scanning techniques to detect open ports and services.
- Uses various configuration options for packet filtering and testing.
- Uses BPF filters for live traffic processing
- Each tool operates via command line interface with specific arguments.
- パケットキャプチャツールです。データストリームを再構築・並び替えて表示します。
- Supports various scanning techniques including TCP, UDP, and ICMP.
- Uses SMB/CIFS protocol for file sharing
- Captures and analyzes network traffic data.
- Reports various application protocols.
- Uses pwncat for network operations
- Trivy scans for vulnerabilities in filesystem and images
- Uses ARP packet sniffing to extract IP addresses
- Can modify HTTP headers in real-time
- Scapy is a versatile packet manipulation tool.
- tcpdump is used for capturing packets on the network.
- Uses command line interface with various scanning commands.
- Supports scanning for vulnerabilities in filesystems, container images, and repositories.
- Uses ftest for firewall filtering policy testing
- ftestd is required to receive packets
- Uses various connection options including TCP, UDP, SSL, and proxy support.
- Commands provided for credential bruteforcing should be modified before running.
- wpscan can be used for WordPress security scanning.
- 多くのポートスキャン技術、バージョン検出、TCP/IPフィンガープリントをサポートしたネットワークスキャナーです。
- Scan multiple hosts with specified port ranges
- Can detect open ports and services running on a host.
- Nmap supports multiple protocols including ICMP, TCP, UDP.
- Some features require elevated permissions.
- Creates HTML reports from captured network traffic logs.
- Configures whether to start live capture with promiscuous mode (sometimes needs
  super user privileges to do so), use along with -l for live capture.
- Capture and process packets live from a network interface.
- Uses bettercap for network monitoring and attacks
- Uses various modes for enhanced network functionalities.
- Involves encryption in data transmission.
- 紹介していないツールは検証環境が用意できなかったり、エラーで確認できない、使い方がよく分からないなどが主な理由です。
- Default statistics interval is 5 seconds (deprecated)
- Default metrics port is 63636
- Default number of retransmits is 0
- Default tick rate is 1
- Default frame rate is 10
- Default timeout for no-responses is 2 seconds
- Default wait time after each write is 10 milliseconds
- Default number of tries for each address is 1
- Nmap is a command-line tool for network exploration and security auditing.
- wait timeout milliseconds for response (default 1000)
- verbose output. Print all names received from each host
- dump packets. Print whole packet contents.
- Format output in /etc/hosts format.
- Format output in lmhosts format.
- Suppress banners and error messages
- show Version information
- generate HTTP headers
- turn on more Verbose debugging
- No looking up inverse names of IP addresses responding
- include MAC address in response (implied by '-f')
- Timeout the no-responses in <n> seconds (default=2 secs)
- Wait <n> msecs after each write (default=10 ms)
- Try each address <n> tries (default=1)
- Nmap can be used for port scanning and vulnerability detection.
- Default SNMP community string is 'public'.
- Supports packet sniffing and injection in hexadecimal mode.
- Captures and analyzes network traffic logs.
- Supports exporting various application protocol sessions.
- tcpdump is a command-line packet capturing tool.
- tcpick is used to reconstruct and display data streams.
- Uses a variety of networking tools for different purposes.
- The tool processes various log files and forensic artifacts to create correlated
  timelines.
- If no -f tag supplied will default to /usr/share/dnsenum/dns.txt or the dns.txt
  file in the same directory as dnsenum
- Uses REST API to scan for vulnerabilities.
- Scan results can be output in different formats.
- Nmap supports multiple scan types including TCP/IP stack fingerprinting, OS detection,
  and version detection.
- Nmap can be used for network discovery and security auditing.
- Various scan types can be performed such as TCP, UDP, and SYN scans.
- Handles various application protocols such as HTTP and FTP.
- Output files to specified directory
- Supports NTLMv1/NTLMv2/LMv2 and Basic HTTP authentication
- Includes LLMNR/NBT-NS/mDNS spoofing capabilities
- Uses HexInject for packet sniffing and injection.
- Uses Basic authentication — requires setup of connected app in responder
- tcpdumpでパケットをキャプチャ
- Configuration options include -f, -c, -v.
- Timing options include -d and -s.
- Evasion options include -e and -t.
- Connection options include -r, -F, -g, -p, -k, -m.
- Uses various techniques for DNS enumeration
- Uses command line interface for DNS record querying
- Supports brute forcing subdomains and various DNS record types
- Various options available for port scanning, service detection, and vulnerability
  detection.
- Supports various types of scans including port scans and service version detection
- Can identify vulnerabilities in services
- Creates application session files and indexes.
- Uses command line interface for packet manipulation.
- tcpick is used for reconstructing and displaying data streams.
- tcpreplay can replay traffic from pcap files.
- SSLv3/TLS network protocol analyzer
- Allows you to see HTTPS CONNECT behavior as well as SMTP STARTTLS
- Uses various network-related tools for different functionalities
- Uses OAuth2 with refresh token — requires setup of connected app in ftester
- Some options may have default values that are not explicitly stated
- Uses default file /usr/share/dnsenum/dns.txt if no -f tag supplied
- 'Warning: can generate very large netranges and take a lot of time for reverse lookups'
- Uses fuzzing algorithms to generate and detect spoofed domains.
- Find those hidden gems by sending requests to every URL.
- Force HTTPS connections may increase accuracy.
- ARP scanning can detect IPv4 hosts on the local network.
- Usage of URLCrazy involves generating and detecting spoofed domains.
- Masscan is a port scanning tool that scans large numbers of hosts quickly.
- Nmap provides multiple scanning functionalities including port scanning and vulnerability
  detection.
- Nmap is a network scanning tool that can detect open ports and running services.
- Supports multiple protocols for packet sniffing.
- Creates application session files for various protocols.
- Creates application session files, indexes.
- Output files are generated in the specified directory.
- Uses a rogue proxy server.
- Does not require authentication.
- tcpdump captures packets from the network interface
- tcpick reconstructs and displays data streams
- Use -f to specify configuration file
- Use -d for delay in seconds
- Uses basic authentication with username and password.
- Requires valid credentials for access
- Multiple tools available for DNS enumeration and information gathering.
- Print all DNS records instead of the first ones
- Determine HTTP and SMTP service banners
- Uses default output format as cli
- Generates and detects spoofed domains using fuzzing algorithms
- SNMP scanner capable of scanning multiple hosts quickly.
- Supports various types of network scanning including port scanning and service version
  detection.
- Can output results in different formats.
- Network protocol detection tool
- Can capture packets for a specified time
- Analyzes capture data from network traffic logs
- Supports various application protocols (HTTP/FTP/...)
- Uses SYN stealth scanning to identify open ports.
- HexInject can perform packet sniffing and injection in hexadecimal mode.
- Custom pcap filters can be applied during sniffing.
- Uses TCP verification for port validation.
- tcpickでパケットをキャプチャ
- Nmap can be operated from a GUI for scanning and results verification.
- Supports a variety of network protocols including SNMP, ARP, ICMP, OSPF, and EIGRP.
- Uses JSON output for traffic monitoring
- Handles various network protocols including DNS and HTTP
- Uses standard command line options for DNS scanning tools.
- Some tools may require specific privileges to run.
- Uses SMB/CIFS protocol
- Output files can be specified using -D dir
- Supports sniffing and injection of packets in hexadecimal mode.
- Uses URLCrazy for domain fuzzing and detection
- Apache Users tool checks for username enumeration via HTTP
- Uses -a to specify your custom USER_AGENT.
- Use -c to set a cookie for the HTTP request.
- Tools may require specific configurations or permissions to operate correctly.
- tcpreplay allows replay of traffic traced with tcpdump.
- Nmap is a network scanning tool that can discover hosts and services on a computer
  network.
- Can create application session files, indexes
- Requires input file for analysis
- Uses multiple data sources for DNS enumeration.
- Integration with various command line tools for network analysis.
- Supports LLMNR/NBT-NS/mDNS spoofing
- Uses DNS scanning to find non-contiguous IP space and hostnames.
- Responder is a tool for analyzing network traffic.
- Fuzzing algorithm generates similar domains to detect spoofing domains.
- tcpdump is a command-line packet capture tool.
- Uses GET method by default
- Rate limit is set to default of 9999 requests per second
- Requires SMB/CIFS authentication
- Can list shares and perform file operations
- SNMP scanner for high-speed scanning across numerous hosts.
- Supports port scanning and vulnerability detection.
- Can operate with multiple protocols including ICMP, TCP, UDP.
- Uses DNS to scan for subdomains.
- Uses various tools for network analysis and manipulation.
- Supports multiple URL input methods including file and STDIN
- Can customize wordlists and extensions
- tcpdump can capture packets on specified interface.
- Nmap can be used for network mapping and security auditing
- Uses various scanning techniques to identify open ports and services
- Uses various public/private data sources for domain information collection.
- Provides DNS spoofing functionality.
- Uses a word list for web content exploration.
- tcpdump is a command-line packet analyzer.
- Uses various network tools for scanning and ARP requests
- Uses -f <conf_file> option to specify the configuration file for ftest.
- Uses SYN Stealth Scan to discover open ports.
- Uses SYN scan with CAP_NET_RAW privileges
- Uses multiple scanning techniques including port scanning and vulnerability detection
- Requires specifying destination IP and user credentials.
- SSLv3/TLS network protocol analyzer that identifies traffic and decodes records.
- Prints all DNS records instead of the first ones when using -a, --all option
- The API provides a search endpoint to enumerate subdomains.
- Uses HTTP GET method for requests.
- Uses a default depth of 2 for crawling
- Page size limit is set to -1 (no limit)
- Default number of threads is 80
- Default timeout per request is 10 seconds
- Default output file is out.txt
- Default config path is /etc/cloudbrute/config
- Uses default User-Agent as Mozilla/5.0 (linux 64-bit) dnstwist/20240812
- Fast scanning of hosts' ports.
- Multiple targets can be specified.
- ARPプロトコルを使ってローカルネットワーク上のIPv4ホストを検出します。
- Uses live capture to analyze network packets.
- Allows you to enumerate open ports for hosts in a fast and reliable manner.
- Uses default values for retries, timeout, warm-up-time.
- Verbose output available.
- tcpdump is a packet capture tool
- It can capture packets and display or save them for analysis
- Nmap can perform various types of scans and provide detailed information about hosts
  and services.
- Can output files to a specified directory
- Uses multiple data sources for domain information gathering
- May require additional configuration for specific data sources
- Uses CLI commands for DNS scanning and brute forcing.
- Uses fuzzing algorithms to generate and detect phishing domains.
- Uses default user-agent 'web'
- Recursion limit is set to 1
- Uses cloud enumeration to explore resources on cloud services.
- Scapy is primarily used for packet manipulation and network scanning.
- Ensure you have the necessary permissions before scanning networks.
- Credential bruteforcing commands should be modified before execution.
- WordPress Security Scanner is useful if WordPress is found.
- Default timeout is 1000 milliseconds.
- Default number of retries for scans is 3.
- Default warm-up time between scan phases is 2 seconds.
- Uses default settings with no authentication required.
- Supports crawling and collecting URLs from specified sites.
- Uses multi-threaded scanning for large networks
- Can detect software versions and potential vulnerabilities
- Debug mode available
- Allows insecure server connections
- Create application session files for various application protocols.
- Uses HTTP for communication
- Can capture various network protocols
- Default buffer size is 2MB.
- Snaplen defaults to appropriate maximum.
- Fast scanning over a large number of hosts.
- Uses bettercap for network attacks and monitoring
- Uses SYN stealth scan to discover open ports.
- Uses TCP for port scanning
- Run with CAP_NET_RAW privileges for SYN scans
- Supports various scanning techniques including OS and software version detection.
- Ensure to provide valid SMB credentials for access.
- Uses various DNS query types.
- Output format can be cli, csv, json, list.
- Options include checking domain popularity and showing invalid domain names.
- Uses ARP spoofing for network attacks
- Can execute commands on connected hosts
- Automatically filter 404-like responses
- Allows for extension and depth parameters
- The tool has various functionalities for packet manipulation and analysis.
- Prints file structure and metadata of images.
- SNMP scanner capable of high-speed scanning across many hosts
- Allows scanning of IP address ranges at high speeds.
- Include certificates from CDNs with -cdn option.
- Use -depth to set maximum BFS depth.
- Nmap can perform various types of network scans.
- Supports service version detection and vulnerability scanning.
- Supports various network protocols for analysis and sniffing.
- Tools are categorized and listed in alphabetical order.
- Tcpdump captures packets from the network interface.
- Tcpick reconstructs and displays data streams.
- Initiating SYN Stealth Scan
- Discovered open ports during scans
- Nmap is primarily a CLI tool for network discovery and security auditing.
- Multiple scan types are available including port scanning and vulnerability detection.
- Uses a wordlist for directory and fuzzing enumeration
- Uses multiple command-line options for configuration.
- Uses hexadecimal mode for packet sniffing and injection
- Usage requires destination IP address and valid authentication credentials.
- Specifies the port(s) to be scanned using -p
- Multiple targets can be specified in various formats
- Scapy is a powerful Python-based interactive packet manipulation program.
- Nmap can perform various types of network scanning.
- It supports service detection and vulnerability scanning.
- Creates HTML reports from network traffic logs.
- Uses hexadecimal mode for packet sniffing and injection.
- Uses DHCP and WPAD for network traffic.
- Uses fuzzing algorithm to generate similar domains.
- Uses a default depth of 2 for crawling.
- Uses AWS checks for S3 buckets
- 'Supports multiple cloud providers: Amazon, Google, Microsoft'
- Outputs file structure and metadata of images.
- Tools may require specific network configurations to function properly.
- Performance may vary based on network conditions and configurations.
- Uses SYN stealth scan to discover open ports
- Uses a default timeout of 1000 milliseconds
- Default warm-up time is 2 seconds between scan phases
- Automatically filters out responses with status code 404
- Supports setting multiple extensions for search
- Supports a variety of network protocols for analysis and sniffing.
- Supports reading and writing various file metadata.
- Uses DNS spoofing techniques to redirect traffic
- 'Returns a Basic HTTP authentication. Default: NTLM'
- Configuration options include -f, -c, -v for ftest and -i, -g, -v for ftestd.
- Timing options include -d for delay and -s for sleep time.
- Evasion options include -e for evasion method.
- Uses SMB protocol for file sharing
- Masscan is used for high-speed scanning of host ports.
- Default number of retries is 3
- Nmap supports various scanning techniques including TCP connect, SYN scan, and UDP
  scan.
- The tool can identify OS versions and software vulnerabilities.
- Uses HTTP and HTTPS protocols for communication.
- Can operate in quiet mode to suppress output.
- '対応クラウド: Amazon, Google, Microsoft'
- tcpdump is used for packet capturing.
- Ensure the destination IP is reachable.
- All tools are tested to ensure functionality.
- Some tools may have specific prerequisites or limitations.
- 'Output format can be cli, csv, json, list (default: cli)'
- Masscan is capable of scanning large ranges of IPs rapidly.
- Use caution with the rate of scanning to avoid overwhelming the network.
- Uses multi-threaded scanning for large networks.
- Depth to crawl can be specified with -d option.
- Uses hexadecimal mode for packet injection.
- Supports various file formats for reading and writing metadata.
- Supports email pattern matching from input or file
- Uses multiple API services for data breach checks
- Uses netcat with encryption — requires secret password for connection
- Uses SMB/CIFS to access network shares
- Output format supports cli, csv, json, list.
- Supports multiple scan types, including TCP, UDP, and SYN scans.
- API does not require authentication.
- Creates application session files and HTML reports from network traffic logs.
- Uses a wordlist for scanning
- Supports various request methods
- SSLv3/TLS network protocol analyzer that decodes records and displays them in text
  format.
- Uses cloud service enumeration to discover public resources.
- Requires a valid SMB/CIFS client configuration
- Braa can perform high-speed scans across many hosts.
- enum4linux-ng is designed primarily for SMB enumeration.
- fping allows for pinging multiple targets simultaneously.
- hping3 enables sending custom packets for various protocols.
- Discovered open ports on hosts
- Uses DNS for reconnaissance
- Nmap can perform port scanning, OS detection, and software version detection.
- Uses a wordlist for directory and fuzzing searches.
- Allows for setting custom user agents and request timeouts.
- '対応プロトコル: MACSec, EAPOL, ARP, CDP, DTP, LLDP, VLAN, S7COMM, OMRON, TACACS+, ModbusTCP,
  STP, OSPF, EIGRP, BGP, VRRP, HSRP, GLBP, IGMP, LLMNR, NBT-NS, MDNS, DHCP, DHCPv6,
  ICMPv6, SSDP, MNDP, SNMP, RADIUS'
- Uses application sessions to analyze network traffic logs.
- Various file metadata reading and writing is possible.
- tcpick can reconstruct and display data streams.
- tshark is the CLI version of Wireshark.
- Uses Selenium for HTTP Screenshot
- Default timeout for requests is 7 seconds
- Uses Chrome for screenshotting
- Some objects may not return complete data
- Supports SNMPv2C.
- Requires community string for SNMP queries.
- Uses various algorithms for DNS enumeration and brute-forcing.
- Default timeout for responses is 1000 milliseconds.
- Port scan retries default to 3.
- Uses a specific User-Agent for requests
- Nmap can scan ports and detect software versions.
- Crawls site for URL collection using specified depth.
- Supports various authentication protocols including NTLMv1/NTLMv2/LMv2.
- Can spoof LLMNR/NBT-NS/mDNS.
- Supports reading and writing metadata for various file types.
- Uses command line interface for scanning URLs and generating reports.
- tcpick is a tool for reconstructing and displaying data streams.
- It can display data in various formats, including hexadecimal and ASCII.
- 無償で利用可能なコミュニティエディションはMaltego Graphの標準トランスフォーマーのみのサポートとなります。
- 外部サービスとの連携には別途ライセンスの購入が必要です。
- Uses AutoRecon's configuration and global files located at /root/.config/AutoRecon/config.toml
  and /root/.config/AutoRecon/global.toml
- Can list shares on SMB/CIFS servers
- Requires destination IP address
- Scapy is a powerful interactive packet manipulation program.
- Nmap can perform various types of scans including port scanning and OS detection.
- It supports multiple protocols including TCP and UDP.
- Uses command-line options for network packet capture and analysis.
- Uses hex mode for packet injection and sniffing.
- Commands for sniffing ARP packets and modifying HTTP headers.
- Uses tcpick for packet capturing and displaying data streams.
- Automatically filters 404 responses
- Can configure thread count and timeout for requests
- Supports Amazon, Google, Microsoft cloud services.
- Usage examples provided for various commands.
- Ensure to input correct IP addresses and credentials for connection.
- Scapy is a powerful Python-based network tool.
- Can be used for a variety of tasks including DNS queries and packet manipulation.
- No writers have been configured. to persist probe results, add writers using --write-*
  flags.
- wpscan is useful if WordPress is found.
- Uses fuzzing algorithm to generate and detect spoofed domains.
- Default number of retries is 3.
- Default warm-up time is 2 seconds.
- Uses a wordlist for searching.
- Supports multiple file extensions.
- Nmap can be used from the command line with various options for scanning.
- 対応クラウドにはAmazon、Google、Microsoftが含まれます。
- Uses hex mode for packet sniffer
- Supports raw mode for more detailed packet analysis
- Handles shares and directories on SMB/CIFS
- No authentication required for basic operations
- Braa is a SNMP scanner that can perform fast scans on a large number of hosts.
- Nmap can perform various types of network scans including port scanning, service
  detection, and vulnerability detection.
- Uses hexadecimal mode for packet injection
- tcpdump captures packets from network interfaces.
- Uses bettercap for network attack and monitoring
- Some commands may have specific parameters or requirements
- Uses various cloud services for checking resources
- Uses SMB protocol for file sharing and network resource access.
- Supports various file formats including JPEG, MP3, DOCX, and EPUB.
- Automatically lower scan rate when an excessive amount of errors are encountered
- Automatically stop scanning when an excessive amount of errors are encountered
- Make requests over Tor; increases runtime; requires Tor to be installed and in system
  path.
- Crawling site requires specifying a root URL.
- Uses various cloud services for enumeration
- Supports multiple cloud providers
- Various file metadata reading and writing capabilities.
- Braa is a SNMP scanner that can scan many hosts quickly.
- Nmap provides various scanning features including OS detection and vulnerability
  scanning.
- Tools are categorized loosely and may not fit perfectly.
- Can output HTML reports for analyzed data
- Supports HTTP/SMB/MSSQL/FTP/LDAP authentication spoofing.
- Default number of retries for the port scan is 3.
- Uses command line interface for operation.
- Analyzes capture data from network traffic logs.
- Requires an API key for access
- Uses various options for DNS queries
- May require specific DNS server setup
- Some functions may require additional permissions or configurations.
- Uses various options to scan for subdomains and DNS records.
- Uses DNS for domain scanning.
- Default recursion depth is 1, set to 0 for infinite.
- Uses REST API to check for subdomains.
- Scrapes hostnames from Bing search results.
- Uses various cloud service checks.
- Default mutations list is located at /usr/lib/cloud-enum/enum_tools/fuzz.txt.
- Crawls specified URLs to collect URLs and other data.
- Default mutations file is /usr/lib/cloud-enum/enum_tools/fuzz.txt
- Default brute-list file is /usr/lib/cloud-enum/enum_tools/fuzz.txt
- Some objects may return nulls in deeply nested fields
- Can make requests over Tor; requires Tor to be installed.
- Supports output in CSV and xlsx formats.
- Requires API key for access
- Uses CLI interface for scanning various targets.
- Some tools may require specific setup or configurations.
- Ensure network permissions are set correctly for scanning tools.
- Masscan can be used for scanning a large number of hosts quickly.
- Performs SYN stealth scans on specified IPs.
- Some commands may require elevated privileges.
- Creates HTML reports for analyzed traffic.
- Nmap can perform various types of scans including port scans and vulnerability detection.
- The tool is command-line based and does not require a web API.
- Can analyze various application protocols.
- 使用するには管理者権限が必要
- 特定のネットワークデバイスでのみ機能
- Tcpick is used for reconstructing and displaying data streams.
- Ensure to handle rate limiting as per API documentation.
- This tool requires a valid SMB/CIFS server address and credentials.
- API key required for access
- Uses various DNS tools for enumeration and analysis.
- Supports querying A records, CNAME records, and more
- Uses DNS to scan for domain name variations.
- May require additional setup for specific domain queries.
- Default timeout is 7 seconds for the requests.
- Default number of concurrent threads is 50.
- Uses directory/file enumeration mode
- Uses keyword and wordlist for scanning cloud resources.
- Supports Amazon, Google, and Microsoft cloud services.
- Supports various file types including JPEG, MP3, DOCX, and EPUB.
- Uses multiple scanning capabilities
- Uses ProjectDiscovery Cloud API key by default
- Default timeout is 10 seconds
- Nmap supports various scanning techniques including port scans and OS detection.
- Nmap can be used for various scanning techniques including port scanning and service
  detection.
- Version detection is enabled with the '-A' option.
- Provides DNS proxy functionality.
- Uses application session files for analysis
- Default behavior includes various network protocols
- Tcpdump captures packets over a network interface.
- Tcpick can be used to reconstruct and display data streams.
- Supports various connection options including evasion and timing.
- Configuration can be set through a file.
- Uses bettercap for network attacks
- Supports various network protocols
- Uses SMB protocol for file sharing.
- Uses DNS records to identify potential domain name variations.
- Uses a fuzzing algorithm to generate similar domains.
- Uses default dns.txt if no -f tag supplied
- 'Warning: whois queries can generate large netranges'
- Uses a wordlist for directory and fuzzing scans
- Supports specifying extensions for search
- Various file metadata read and write capabilities.
- Enable debug logging with -D flag
- Various file metadata reading and writing.
- ExifTool can handle different file types.
- No writers have been configured. to persist probe results, add writers using --write-*
  flags
- Uses multiple sources for subdomain discovery.
- default timeout is 10 seconds
- default response size limits are 2147483647 bytes
- Network reconnaissance framework for passive DNS services and network intelligence.
- Introduces tools verified on Kali Linux environment
- Some tools may require specific user permissions
- Uses DNS cache snooping technique to check for visited domains
- 全ツールの5割程度のご紹介となります。紹介していないツールは検証環境が用意できなかったり、エラーで確認できない、使い方がよく分からないなどが主な理由ですが、数が多過ぎてブラウザが固まってしまうため一部割愛させて頂きました。
- Supports multiple protocols including FTP, SSH, Telnet, SMTP, and HTTP
- Supports multiple network protocols for packet capture and analysis
- SSLv3/TLS network protocol analyzer for decoding traffic.
- Creates application session files and indexes from network traffic logs.
- Uses configuration options for network filtering and packet capturing
- Uses various networking protocols for packet manipulation and analysis
- Default recursion depth is set to 1 but can be adjusted.
- The SMB/CIFS client requires valid credentials to access shares.
- Depth to crawl can be set using the -d option.
- Custom headers can be added using the -h option.
- no writers have been configured. to persist probe results, add writers using --write-*
  flags
- Uses cookies for session management
- Content type is application/json for API responses
- Uses default 50 threads and has a timeout of 7 seconds
- Automatically filters out 404 responses
- Uses JSON format for output.
- Default cache directory is '/root/.cache/trivy'.
- Default config path is 'trivy.yaml'.
- Uses API key for authentication
- Various command line options available for executing OS injection tests.
- Some scripts may require additional privileges to execute.
- Supports various application protocols for traffic analysis.
- Supports NTLMv1/NTLMv2/LMv2 authentication.
- tcpdump is used for capturing packets from network interfaces.
- 'Configuration options include: -f, -c, -v for verbose output.'
- 'Timing options include: -d for delay and -s for sleep time.'
- Various tools for network management and penetration testing.
- Uses Nmap to detect open ports and services.
- Supports operations like listing shares, creating directories, deleting files, etc.
- Supports various application protocols (HTTP/FTP/...) for session and file data
  reporting.
- Uses various options for DNS queries and enumerations
- tcpreplay replays traffic captured with tcpdump.
- Automatically filters found 404-like responses.
- Various file types supported including JPEG, MP3, DOCX, EPUB.
- Uses various online sources to discover valid subdomains.
- Uses default timeout of 7 seconds.
- Default number of threads is 50.
- ARP protocol used to detect IPv4 hosts on local network
- Various options available for output format and host selection
- Uses various online sources for subdomain discovery
- Can be slow when using all sources
- Nmap can perform various types of scanning and service detection.
- Default timeout is 30 seconds
- Max time for enumeration results is 10 minutes
- Uses the command line for packet analysis.
- Scans for vulnerabilities in filesystems, container images, and more.
- Can detect vulnerabilities in services.
- Scapy is used for packet manipulation and networking tasks.
- Uses SSL/TLS for secure communication
- tcpflow reconstructs data streams accurately
- Uses DNS server for A, NS and MX queries
- Default timeout value is 10s
- Default number of google search pages to process is 5
- Default maximum number of subdomains to scrape from Google is 15
- 'Warning: can generate very large netranges and it will take lot of time to perform
  reverse lookups'
- データストリームを再構築・並び替えて表示します。
- Uses SMB/CIFS for file sharing operations
- Default timeout is 7 seconds for requests.
- Number of threads can be set to a maximum of 50.
- Uses multiple data sources to search for subdomains.
- Crawls specified URL to collect URLs from the site.
- ターゲットとなる企業などのクラウドサービス上の公開リソースを探索します。
- MaxDepth limits the recursion depth of visited URLs.
- ExifTool reads and writes metadata for various file types.
- Comprehensive tool for web reconnaissance including header info, WHOIS, SSL info,
  and more.
- Comprehensive functions for header information retrieval, WHOIS information acquisition,
  SSL certificate data collection, DNS information gathering, subdomain exploration,
  directory search, and port scanning.
- Uses multiple DNS records to provide insights
- Scans filesystems, container images, code repositories, VM images for vulnerabilities,
  misconfigurations, secrets.
- Commands should be modified before running.
- HTTP requests can be sent to the target server.
- To use getsploit you need to obtain Vulners API key at https://vulners.com
- Uses SNMPv1 with community 'public' to gather information.
- Uses DNS server 8.8.8.8 by default
- Supports various network protocols including OSPF, EIGRP, and SNMP.
- Some objects like Tcpick may return nulls in deeply nested fields
- Outputs reports for various application protocols
- Uses SMB/CIFS protocol for file sharing and operations.
- Uses multiple data sources for subdomain enumeration
- Uses API for subdomain search
- Number of concurrent threads is 50
- Default timeout is 7 seconds
- Uses a simple GET request to fetch subdomains from Certificate Transparency logs.
- Uses a default of 10 seconds for tcp and udp timeout values
- Default number of google search pages is 5
- Checks for bucket existence and permission settings in various cloud providers.
- Usage of dnstwist requires a domain name or URL to scan.
- Uses HTTP for querying DNS records
- ターゲットとなる企業などのクラウドサービス上の公開リソース（オブジェクトストレージなど）を探索します。
- Uses multiple output flags to save results in different formats
- Uses various online sources for subdomain discovery.
- Nmap can perform port scanning and vulnerability detection.
- Supports various network protocols for packet sniffing.
- Includes options for ARP and VLAN search.
- Create application session files and indexes
- Output all files to a specified directory
- identサービス (113/TCP) に問い合わせを行い指定したポートをリッスンしているプロセスのオーナーを割り出します。
- Enables SMTP spoof testing.
- Includes options for user enumeration testing.
- Default method for username guessing is VRFY
- Scapy is a powerful Python-based interactive packet manipulation program and library.
- 指定されたドメインと類似したドメインをファジングアルゴリズムで生成し、なりすましドメインを生成・検出します。
- Uses command line interface for scanning and detection.
- Set recursion depth to 0 for infinite recursion.
- Mirrors the specified site locally.
- Can analyze network traffic logs for various application protocols.
- Supports multiple cloud service providers.
- Default values are set for mutations and brute force lists.
- Various file metadata reading and writing capabilities
- tcpick and tcpreplay can be used for analyzing and replaying captured traffic.
- Warn no writers have been configured. to persist probe results, add writers using
  --write-* flags
- Capture and output options can be configured via command line arguments.
- User authentication is required to access shares.
- Use a wildcard query to search for subdomains.
- Default timeout value is 10 seconds.
- Requires setup of connected app in api
- 'Warning: This flag has the potential to make your storage explode in size'
- Provides comprehensive functionality for obtaining header information, WHOIS information,
  SSL certificate information, DNS information, subdomain discovery, directory exploration,
  and port scanning.
- Apache/2.2.8 appears to be outdated (current is at least Apache/2.4.54).
- PHP reveals potentially sensitive information via certain HTTP requests that contain
  specific QUERY strings.
- Uses HTTP/HTTPS for requests.
- Can operate in quiet mode.
- Requires authentication using username and password.
- Various parameters available for connection and operation.
- Braa is a SNMP scanner capable of scanning many hosts quickly.
- SYN stealth scanning tool for fast port scanning.
- Supports multiple types of scans including ACK and SYN scans.
- Default output format is cli
- Requires setup of DNS servers for specific queries
- パケットのスニッフィングやインジェクションを16進数で行います
- Uses cloud services to explore public resources.
- Uses various file formats for extracting metadata
- Requires username and password for authentication.
- SMTP user enumeration can expose valid user emails.
- Crawls the specified site and collects URLs.
- sqlmap can process Google dork results as target URLs
- Custom injection marker ('*') found in option '-u'
- Network reconnaissance tool to port scan and automatically enumerate services.
- SYN stealth scan available.
- Supports scanning multiple targets.
- Provides comprehensive features for web reconnaissance and scanning
- Nmap supports various scan types including TCP connect, SYN scan, and UDP scan.
- Some scan types may require elevated privileges.
- This tool captures and analyzes network packets.
- It supports various protocols for detection and analysis.
- Creates application session files, HTML reports, and indexes from network traffic
  logs.
- Scan various web application vulnerabilities
- Commands include options for sniffing and injecting packets.
- Some endpoints may expose sensitive information.
- tcpdump is used to capture packets, and tcpreplay is used to replay traffic.
- Uses various configuration options for network filtering and packet capture.
- Use with caution.
- Number of retries for the port scan is 3 by default
- Timeout is set to 1000 milliseconds by default
- Warm-up time is 2 seconds by default between scan phases
- Uses DNS for information gathering and enumeration.
- Nmap is a network scanning tool that can detect open ports and services.
- It supports various scanning techniques including ACK scan and port scanning.
- Uses hex inject for packet sniffing and injection.
- Uses CLI for DNS record scanning.
- Automatically discovers extensions and adds them to the search.
- Uses various configurations for network filtering and testing.
- Includes evasion methods and connection options.
- Default mutation file is /usr/lib/cloud-enum/enum_tools/fuzz.txt
- Allows reading and writing of metadata for various file types
- Uses GET method to retrieve logs.
- Default depth is set to 2.
- Output format can be in JSON.
- Default timeout is 10 seconds.
- Use -n option to skip prompts.
- Directory indexing found.
- Default email address for MAIL FROM is user@example.com
- Maximum number of processes is 5
- Uses GET method with URL parameter for injection testing.
- Cookie handling is supported.
- Includes various options for reconnaissance such as header, SSL, WHOIS, DNS, sub-domain
  enumeration, and directory search.
- Uses various network scanning tools available in Kali Linux
- Some tools may require specific permissions to run
- Uses SYN Stealth Scan for determining open ports
- Fuzz testing finished after 0.43 minutes (26 seconds)
- 'Total Traversals found: 1'
- 'Report saved: Reports/192.168.11.4_09-29-2024_03-17.txt'
- Nmap can be operated from the GUI for result confirmation.
- Pnscan allows high-speed port scanning across large networks using multithreading.
- Handle SMTP enumeration and relay testing with caution.
- Ensure proper permissions when accessing mail servers.
- Server may leak inodes via ETags, header found with file /robots.txt
- Apache/2.2.8 appears to be outdated (current is at least Apache/2.4.54)
- Output to specified directory
- Uses various SQL injection techniques to test for vulnerabilities.
- Uses packet sniffing and injection methods
- Requires specific commands and options for operation
- Use the 'generate' command to create a backdoor script.
- Commands can be executed on the target host through the shell.
- Uses HTTP requests to determine technology stack of web applications.
- ftest is used for testing firewall filtering policies.
- ftestd is used for sniffing and comparing packets.
- Supports various scanning techniques including TCP, UDP, SYN, and ACK scans.
- Can perform version detection and OS detection.
- Requires valid SMB credentials.
- Various tools for network security and exploitation.
- Some tools require specific network configurations.
- Default timeout is 10s.
- Using the -f tag will read subdomains from a specified file.
- tcpdump captures packets and can display them in various formats.
- Outputs results in CLI, CSV, JSON, or list format.
- Uses command line interface for execution.
- Multiple modules can be auto-started.
- Uses SMB/CIFS client for file operations
- Defaults to crawling robots.txt
- Crawls specified URLs to collect URLs and other resources.
- Uses default mutation list from /usr/lib/cloud-enum/enum_tools/fuzz.txt
- Uses various file formats for metadata reading and writing.
- Uses Selenium to capture screenshots of webpages.
- Uses subdomain enumeration techniques with multiple search engines.
- Disable Azure and GCP checks with --disable-azure and --disable-gcp options.
- Timeout value defaults to 10 seconds.
- Command line interface for metadata manipulation.
- HTTP TRACE method is active which suggests the host is vulnerable to XST.
- Default SMTP port is 25
- Method to use for username guessing is VRFY
- Uses SQL injection techniques to test for vulnerabilities.
- Uses HTTP GET requests to scan web applications.
- 'Payload with: ../etc/passwd'
- 'Payload with: ../../etc/passwd'
- 'Payload with: ../../../etc/passwd'
- 'Payload with: ../../../../etc/passwd'
- Includes various tools for SMTP enumeration, relay testing, SQL injection, and web
  application scanning.
- Webアプリケーションに対してセキュリティスキャンを行います。
- Supports various port scanning techniques, version detection, and TCP/IP fingerprinting.
- Uses various scanning techniques to assess network security.
- Detailed output includes open ports and service versions.
- Custom injection marker ('*') found in option '-u'.
- データストリームを再構築・並び替えて表示します
- Generates backdoor scripts for remote execution.
- Supports various services for brute forcing.
- SMB client can create, delete, and rename directories and files.
- The program can scan multiple hosts
- 'Number of retries for the port scan: 3'
- 'Timeout: 1000 milliseconds'
- 'Warm-up time: 2 seconds'
- General options can be specified for all tools.
- Default timeout value for requests is 10 seconds.
- Nmap supports various types of scans including TCP SYN scan, ACK scan, and version
  detection.
- Uses various protocols for network packet capture and analysis
- Uses hex mode for packet injection.
- Uses wordlist for URL discovery.
- Uses HTTP for traffic monitoring
- SSLDump supports JSON output format
- Uses a configuration file for testing firewall policies.
- Uses various file formats to read and write metadata.
- Some options like -bucket-file or -provider may require additional configuration.
- Uses command line interface for DNS scanning.
- Usage of --help to display help for commands
- Apache 2.2.8 appears to be outdated.
- warn no writers have been configured. to persist probe results, add writers using
  --write-* flags
- Uses various tools for vulnerability scanning and exploitation.
- Uses various SQL injection techniques to test vulnerabilities.
- Uses commix for command injection testing.
- Ensure to run on a controlled environment to avoid legal issues.
- Can scan a range of ports
- The anti-clickjacking X-Frame-Options header is not present.
- The X-Content-Type-Options header is not set.
- Apache/2.2.8 appears to be outdated.
- Apache mod_negotiation is enabled with MultiViews.
- PHP is installed, and a test script which runs phpinfo() was found.
- Nmap is a network scanning tool used for discovering hosts and services on a computer
  network.
- Supports various network protocols including OSPF, EIGRP, BGP, and more.
- Default TCP port on which smtp service runs is 25.
- Uses HTTP GET method for scanning.
- Requires a valid target URL for operation.
- Performs LLMNR/NBT-NS/mDNS spoofing.
- Multiple services can be checked for default credentials.
- Scans for vulnerabilities in various targets including filesystems and container
  images.
- Uses SMB protocol for file sharing and management
- Uses command-line interface for DNS scanning
- Output format can be adjusted to cli, csv, json, list
- Uses a wordlist to find links and files.
- Disable TLS verification using -insecure option.
- Page size limit can be set using -size option.
- tcpick is a packet capturing tool that reconstructs and displays data streams.
- Uses multiple cloud providers including Amazon, Google, and Microsoft.
- SMTP enumeration can expose valid email addresses.
- Relay testing can reveal open relays which are a security risk.
- 'Output format: cli, csv, json, list (default: cli)'
- Default TCP port for smtp service is 25.
- Uses default timeout of 7 seconds
- Supports multiple methods for specifying extensions and URLs
- Supports various services for brute-force checks.
- Default port will be used if not specified.
- Uses various providers to fetch URLs for a given domain.
- No writers have been configured to persist probe results.
- Uses subdomains enumeration from multiple sources.
- Nmap can operate from a GUI for results verification.
- レスポンスに"root:"が含まれている場合は脆弱性ありと判断して終了する
- Supports a variety of network protocols for packet sniffing.
- Can capture packets for specified time and interface.
- Uses command line interface for operation
- Loaded 123 default credential profiles
- Loaded 398 default credentials
- SYN/Stealth Scan
- Uses command line options for scanning
- Nmap can be executed from the command line for various types of scans including
  port scanning and service detection.
- Uses multiple data sources for domain information gathering.
- Uses TCP to capture HTTP requests
- Uses directory enumeration for finding files
- Can filter based on status codes such as 404
- tcpreplay is used to replay traffic traced with tcpdump.
- Scapy is a powerful Python library for packet manipulation.
- Ensure you have the necessary permissions to use Scapy.
- Uses various algorithms for generating permutations of domain names.
- Uses default timeout of 10 seconds for requests
- Supports multiple threads for concurrent requests
- 'Crawling site: http://192.168.11.4/'
- Enables SMTP user enumeration testing and imports email list.
- Supports JPEG, MP3, DOCX, EPUB formats.
- Use -q for quiet mode
- Scan for all protocols
- Documentation contains example usage for various tools.
- Uses SYN scanning for host discovery.
- Some commands require root privileges
- Uses various scanning techniques such as ACK scan, port scanning and software vulnerability
  detection.
- Supports various network protocols like SNMP, OSPF, EIGRP, etc.
- Usage includes capturing packets and analyzing them.
- Various fuzzing tools available for testing.
- Scan for default credentials across various services.
- Uses ftest for packet generation and ftestd for packet sniffing.
- Multiple tools and usage examples provided.
- Nmap is primarily a command-line tool and does not have a formal API.
- Uses default mutations list from /usr/lib/cloud-enum/enum_tools/fuzz.txt
- Configuration options include -f for config file and -v for verbose output.
- Uses ARP spoofing and HTTP proxy injection techniques.
- Some shares may return nulls in deeply nested fields
- Uses DNS records for scanning and brute-forcing domain names.
- SMTP enumeration may require a valid email list for testing.
- Ensure that the SMTP server allows for enumeration tests without causing bans.
- Default recursion depth is 1; set to 0 for infinite recursion.
- Used for username guessing via SMTP service
- Uses default depth of 2 for crawling.
- Check if the target URL content is stable.
- Uses various HTTP methods for requests
- Can specify custom headers and cookies
- Uses a wordlist for bruteforcing various services.
- Uses various network scanning tools to identify devices and services.
- Uses HTTP requests to identify technologies used by websites.
- Reports on service versions and vulnerabilities detected during scans.
- Default timeout for SMTP commands is 10 seconds.
- Supports various application protocols (HTTP/FTP/...).
- Generates backdoor scripts and executes commands on the target.
- Configuration options include various parameters for connection and timing.
- Uses CLI commands for scanning various targets
- Supports a variety of network protocols for packet sniffing and spoofing.
- Capabilities include password extraction, network mapping, and TCP session reconstruction.
- Uses CLI commands for DNS scanning.
- Output format can be specified as cli, csv, json, or list.
- ARP packet extraction is possible.
- Responderを起動するには -I eth0 -w -Q のオプションを使う
- tcpflowでパケットをキャプチャするには -c -i eth0 -T'%T %N %A:%a > %B:%b' のオプションを使用
- Uses a wordlist for URL enumeration.
- Crawls the specified URL and collects URLs.
- Uses various network tools for different functionalities
- Scapy is used for network packet manipulation and analysis.
- Outputs various DNS records and domain information.
- Uses GET method for retrieving logs.
- May return various status codes depending on the resource state.
- Default mutations list path is /usr/lib/cloud-enum/enum_tools/fuzz.txt
- Default brute-force list path is /usr/lib/cloud-enum/enum_tools/fuzz.txt
- Default number of threads for HTTP brute-force is 5
- Default format for log file is text
- Supports various online sources for subdomain discovery.
- Use 'weevely generate <password> <path>' to create a backdoor script.
- Use 'weevely <URL> <password>' to execute commands on the target.
- Uses projectdiscovery cloud (pdcp) API key
- Shows statistics of the performed analysis.
- An analysis grade of D indicates a need to review 'Deprecated/Insecure headers'.
- Some tools may not have been tested due to environmental constraints.
- Mode defaults to VRFY
- Uses HTTP requests to interact with the target.
- Supports various HTTP methods and payloads for fuzzing
- Nmap can detect software versions and potential vulnerabilities.
- Different scanning techniques are available such as ACK scans and SYN scans.
- Supports multiple hash algorithms and modes for password recovery
- Has options for session management and output formatting
- Tools in Kali Linux may not have been tested due to various reasons such as lack
  of an environment or errors.
- Includes various scanning options for network discovery and security auditing
- Supports multiple protocols including TCP and UDP
- Uses options for configuring firewall filtering policies.
- Examples provided for usage and testing scenarios.
- Create application session files for various protocols.
- Uses standard input for specifying files to analyze.
- Requires a list of subdomains and a wordlist for generation.
- tcpick can display data in various formats using different flags.
- Uses various flags for DNS record types
- Uses HTTP proxy for injecting JavaScript into responses
- Some shares may not return a comment.
- 'Select the language for use in the setlang parameter (Default: en-us).'
- Default output format is CLI, can be set to csv, json, list.
- Supports various flags for additional functionalities.
- Supports multiple cloud providers including Amazon, Google, and Microsoft.
- Uses ExifTool for reading and writing metadata.
- Automatically discover extensions and add them to --extensions
- Use a random User-Agent for requests
- 'Supported clouds: Amazon, Google, Microsoft'
- Allows taking screenshots of specified URLs
- Uses HTTP requests to probe various protocols and configurations.
- Nikto performs security scans on web applications.
- The timeout value is default 10 seconds.
- Web Server returns a valid response with junk HTTP methods which may cause false
  positives.
- Default HTTP method is GET.
- Responses can be filtered by status codes.
- Uses command line interface for password cracking
- Supports various hash types and attack modes
- ツールのカテゴリーは私が大雑把に付けただけなので適していないかもしれません（ツールの並び順はA～Zの順で試してまとめただけで特に意味はありません）
- Uses command line interface for interaction
- Supports multiple hash types and attack modes
- Various protocols for password authentication can be tested.
- Analyzes network traffic logs and outputs session and file data for various application
  protocols.
- Allows for GUI operation and result confirmation.
- Can perform port scanning and detect software vulnerabilities.
- Can output to HTML
- IPv4/IPv6ネットワーク、Wi-Fiネットワーク、BLEデバイスなど、複数のターゲットに対して偵察や攻撃を行うためのネットワークセキュリティフレームワークです。
- Uses SMB/CIFS protocol for file share operations.
- Uses SMB/CIFS protocol for file sharing and network resource access.
- Crawls websites to gather URLs, email addresses, and static file URLs.
- Supports multiple cloud services including Amazon, Google, and Microsoft.
- Use the provided wordlists for effective scanning.
- ExifTool allows reading and writing of metadata for various file types.
- No writers have been configured to persist probe results, add writers using --write-*
  flags
- Default mutations list is /usr/lib/cloud-enum/enum_tools/fuzz.txt
- Ident service query to determine the owner of processes listening on specified ports.
- Uses a custom injection marker in URL.
- Use -w for specifying a wordlist.
- Use -u to specify the target URL.
- SMTP enumeration testing can identify valid email addresses.
- SMTP relay testing checks if the server allows relaying.
- Apache 2.2.8 appears to be outdated (current is at least Apache/2.4.54).
- Uses command line interface for SQL injection checks
- Requires target URL to be specified
- Uses command line interface for interaction.
- Supports multiple hash types and attack modes.
- High-Performance word generator with a per-position configurable charset
- Supports GET/POST parameter fuzzing and directory discovery.
- Some tools may require elevated privileges to run effectively.
- Usage examples provided in the documentation.
- Runs benchmark of selected hash-modes
- Initiates SYN Stealth Scan
- Can perform host discovery
- Tools may have varying levels of documentation and support.
- Uses various scanning techniques to discover hosts and services.
- Nmap is a powerful network scanning tool that can detect services and versions.
- Uses various application protocols (HTTP/FTP/...) for session and file data reporting.
- Nmap can be used for scanning hosts and discovering vulnerabilities.
- Uses various protocols for packet sniffing and analysis.
- Allows for packet sniffing and injection in hexadecimal format.
- Show DNS names instead of IP addresses
- Configuration options include -f for configuration file and -c for connection details
- Evasion options available for testing firewall rules
- Uses specific modules for network attacks
- Commands can be executed interactively
- Uses DNS server for queries — may impact response times
- Scapy can be used for various network packet manipulation and analysis tasks.
- Uses a wordlist for target URL content discovery
- Supports both GET method and extensions filtering
- Uses DNS queries to find domain and subdomain information
- Supports various output formats including cli, csv, json, and list
- Extracts image metadata
- Supports various file types like JPEG, MP3, DOCX, EPUB
- Uses default configurations for mutations and brute lists.
- Can disable checks for specific cloud providers.
- Uses multiple online sources for subdomain discovery.
- Uses various file formats to extract metadata.
- Enumeration type default is 3.
- Uses API key for authentication — configure projectdiscovery cloud API key
- Ensure correct payloads are used for testing.
- Monitor the server for errors during fuzzing.
- Uses SMTP for testing e-mail
- Supports user enumeration and relay testing
- Supports multiple login authentication protocols for brute force attacks.
- Default TCP port for SMTP is 25.
- It is capable of discovering hosts and services on a computer network.
- Creates HTML 2-way & hex files for everything
- Some tools may not have been tested due to lack of environment or errors.
- tcpdump captures packets on specified network interfaces
- Use caution when running credential bruteforcing commands.
- Uses various encryption and networking techniques.
- Some scans may require elevated permissions.
- Uses various public/private data sources for domain information collection
- 'Warning: this can generate very large netranges and it will take lot of time to
  perform reverse lookups.'
- Version 2.3.4 of vsFTPd has a known backdoor vulnerability.
- Scan results include detailed service and version information.
- Default number of items to request per page is 12
- Creates application session files, indexes for analyzed packets.
- Supports NTLMv1/NTLMv2/LMv2 and Basic HTTP authentication.
- Incorporates LLMNR/NBT-NS/mDNS spoofing capabilities.
- tcpreplay is for replaying traffic captured with tcpdump.
- Warns if no writers have been configured.
- Requires username and password for authentication
- Uses Scapy for packet manipulation and analysis.
- Supports multiple protocols and packet crafting.
- Use -d option to specify the domain.
- Output format can be specified using --format.
- Uses GET method to check subdomains
- Fuzz testing finished after 0.43 minutes
- Uses SMTP for testing and enumeration.
- Targets public resources on cloud services such as Amazon, Google, and Microsoft.
- Supports various file types for metadata extraction and manipulation.
- Default TCP port for SMTP service is 25.
- Maximum number of processes is 5.
- Specify URL to capture screenshots
- Supports scanning multiple URLs
- Generate backdoor agent with a command.
- Execute commands on the target using shell.
- Use all sources for enumeration (slow)
- Requires configuration file for provider settings
- Scan for default credentials across various services
- Trivy detects vulnerabilities, misconfigurations, and secrets in various resources.
- Default timeout for requests is 10 seconds.
- This tool allows for various types of packet scanning.
- Generates a backdoor script and executes commands on the target host.
- Supports various services for checking default credentials.
- tcpdump captures packets from the network interface.
- Uses various command-line options for configurations.
- Masscan is used for high-speed port scanning.
- Uses various scanning techniques to identify open ports and services.
- Can analyze various application protocols (HTTP/FTP/...)
- Default timeout is 7 seconds.
- Supports exploration of public resources on cloud services.
- Requires Scapy 2.6.0 and IPython 8.20.0
- Uses command line interface for DNS scanning
- Users can set a custom user-agent.
- The default timeout for requests is 7 seconds.
- Crawls specified URL to collect URLs.
- Uses multiple cloud services for exploration
- Supports Amazon, Google, and Microsoft
- Uses custom HTTP headers for requests
- Supports multiple back-end DBMS
- Supports scanning targets from a file or directly
- Can scan CIDR targets on a network
- Handles directory discovery and fuzzing of GET/POST parameters.
- Provides comprehensive functionalities including header information retrieval, WHOIS
  information, SSL certificate information, DNS information retrieval, subdomain enumeration,
  directory exploration, and port scanning.
- Uses various HTTP headers and configurations as shown in the documentation.
- Various brute-force modules available.
- Uses HTTP GET method to retrieve vulnerabilities.
- Uses custom injection markers for testing.
- Uses SNMP protocol for enumeration.
- Requires SNMP version 2c.
- Various fuzzing methods available including HTTP, FTP, and more.
- Custom configurations can be loaded from specific files.
- Uses various hash types for password cracking.
- Uses Nmap's output formats for input.
- Discovered credentials may vary based on the service specified.
- Scans file systems, container images, code repositories, and VM images for vulnerabilities,
  misconfigurations, and secrets.
- Can perform OS and software version detection.
- Supports scanning for vulnerabilities using scripts.
- Tools may have usage limitations based on the environment.
- Some tools require specific configurations to function correctly.
- Can create HTML reports for analyzed traffic.
- Usage includes capturing packets from a specific interface.
- Uses various scanning techniques including SYN, ACK, and UDP scans.
- Supports detection of OS and software versions.
- Uses passive ARP for host discovery.
- Supports various network protocol detection.
- tshark is the CLI version of Wireshark for packet capture.
- Uses username and password for authentication
- Uses a simple GET request to retrieve log files
- Output as JSON.
- Depth to crawl can be adjusted with -d option.
- Uses multiple data sources for domain information collection
- Includes various DNS enumeration and subdomain discovery techniques
- 使用方法に従ってコマンドラインインターフェースでの操作が必要
- Uses DNS queries to gather information about domains.
- Supports reading and writing of various file metadata.
- Command-line usage for file operations.
- Prints all DNS records instead of the first ones
- Supports GeoIP location lookup
- Uses a GET method to retrieve log files.
- Uses external cloud services to enumerate resources.
- Various file metadata reading and writing functionalities.
- Ensure SMTP server is configured for testing.
- Use -d to specify domains for subdomain discovery.
- Use -dL to specify a file containing domains.
- Output from the phpinfo() function was found.
- Supports various methods for fuzzing tests
- Can use custom configuration files for test settings
- Uses API key for authentication.
- パスワードの解読を行います。
- Uses a local server for testing
- Ncrack is a password analysis toolkit.
- 'Method to use for username guessing EXPN, VRFY or RCPT (default: VRFY)'
- Uses SQL injection techniques to test vulnerabilities.
- Extracts words matching specified conditions from a wordlist.
- Use HTTP method to specify requests
- Max length of requests may lead to 414 errors
- Uses WebSocket to establish secure tunnel connections between server and client.
- When the chisel server has --socks5 enabled, remotes can specify 'socks' in place
  of remote-host and remote-port.
- When the chisel server has --reverse enabled, remotes can be prefixed with R to
  denote that they are reversed.
- When stdio is used as local-host, the tunnel will connect standard input/output
  of this program with the remote.
- Trivy scans file systems, container images, code repositories, and VM images for
  vulnerabilities and misconfigurations.
- Tools may fail due to lack of testing environment or errors.
- Some tools may not be fully introduced due to excessive number.
- Supports various scanning techniques and version detection.
- The tool supports a wide array of scanning techniques.
- Includes LLMNR/NBT-NS/mDNS spoofing
- Uses tcpdump for packet capturing.
- tcpick is a tool to reconstruct and display data streams.
- Default cache directory is '/root/.cache/trivy'
- Default config path is 'trivy.yaml'
- Default timeout is '5m0s'
- Uses SNMP protocol to gather data from the host.
- Uses DNS queries for subdomain enumeration.
- Generates and detects impersonating domains using a fuzzing algorithm.
- Default recursion depth is 1, can set to 0 for infinite recursion
- Includes support for crawling sitemap.xml and robots.txt
- Supports various file types for metadata extraction.
- May require administrative privileges for certain operations.
- Use with proper network permissions.
- May require elevated privileges for certain operations.
- -nf, -no-fallback                  display both probed protocol (HTTPS and HTTP)
- -nfs, -no-fallback-scheme          probe with protocol scheme specified in input
- -maxhr, -max-host-error int        max error count per host before skipping remaining
  path/s (default 30)
- -e, -exclude string[]              exclude host matching specified filter ('cdn',
  'private-ips', cidr, ip, regex)
- -retries int                       number of retries
- -timeout int                       timeout in seconds (default 10)
- '-delay value                       duration between each http request (eg: 200ms,
  1s) (default -1ns)'
- -rsts, -response-size-to-save int  max response size to save in bytes (default 2147483647)
- -rstr, -response-size-to-read int  max response size to read in bytes (default 2147483647)
- tcpreplay allows replaying traffic traced by tcpdump.
- Supports various SMTP enumeration and relay testing options.
- Uses various techniques for SQL injection checks.
- Provides options for verbosity and request customization.
- Uses password lists for brute-force attacks
- Supports multiple protocols like SSH and FTP
- Uses a fuzzing algorithm to generate and detect spoof domains
- Uses Amazon, Google, Microsoft cloud services.
- 様々なファイルのメタ情報の読み書きを行います。
- Supports multiple functions including header information retrieval and subdomain
  enumeration.
- 'Maximum number of processes (default: 5)'
- Discovered open ports
- Nmap can be used to scan for open ports and detect OS/software versions.
- Different scans have different command-line options.
- Supports various protocols such as OSPF, EIGRP, BGP, etc.
- Uses HTTP and HTTPS for communication
- Uses HTTP for testing with various modules
- Supports fuzzing with specified payloads
- Requires a valid username and password for authentication.
- Uses various service specifications for brute force attacks.
- Uses CLI for interaction
- Patator is a multi-purpose brute-forcer.
- Uses a query parameter to search for subdomains.
- Uses MD5 hashing for password cracking
- Handles both brute-force and dictionary attacks
- Directory exploration with specified suffixes.
- Uses WebSocket to establish a secure tunnel connection between server and client.
- Scan config files for misconfigurations
- Scan local filesystem
- Scan a container image
- Scan a repository
- Scan a virtual machine image
- The documentation provides usage examples for various network scanning tools.
- Nmap can be used to perform network scans and security assessments.
- HTTP TRACE method is active which suggests the host is vulnerable to XST
- Resolves host names from IP addresses.
- Enables answers for DHCP broadcast requests.
- tcpdump is a command-line packet capture tool
- Use FUZZ keyword in the URL for payload replacement.
- Supports various services for credential checking.
- hashid analyzes various hash types.
- High-Performance word generator with a per-position configurable charset.
- Supports various password analysis and cracking modules.
- Patator is a multi-threaded brute-forcer and credential testing tool
- Uses MD5 hashing algorithm
- Session details are available in the output
- Uses WebSocket for secure tunneling between server and client.
- Uses depth parameter for recursive scanning
- The tools may vary in functionality and compatibility with different systems.
- Uses various commands for scanning and reporting.
- Specifies the desired rate for transmitting packets.
- Can perform various types of scans including port, OS detection, and vulnerability
  detection.
- 使用例では、パケットを分析し、HTTP/FTPなどのセッションとファイルデータをレポートに出力する
- Captures various network traffic
- tcpdump captures packets for analysis.
- tcpick reconstructs and displays data streams.
- SMTP enumeration allows testing for valid users.
- SMTP relay testing can help confirm relay configurations.
- Uses custom injection marker ('*') for target URL.
- Requires setup of user credentials for access.
- Various services are checked for default credentials.
- Uses CLI for DNS scanning and domain permutations.
- Uses fuzzing algorithm to generate and detect spoof domains.
- Use various online sources for subdomain discovery.
- The tool extracts words from the provided wordlist based on specified conditions.
- Ident service (113/TCP) can reveal the owner of processes listening on specified
  ports.
- Defaults to HTTP listening port 8080.
- Defaults to 0.0.0.0 for the HTTP listening host.
- The default timeout value is 10 seconds.
- Apache/2.2.8 appears to be outdated
- Uses a secret for authentication
- Encryption is SRP-AES-256-CBC-SHA-End2End
- Tools are tested and verified from the Kali Tools list.
- Some tools may have limitations due to environment setup.
- Masscan rapidly scans large numbers of hosts for open ports.
- Uses various scanning methods including port scanning and vulnerability detection.
- Supports various network protocols for monitoring.
- Can capture packets from specified network interfaces.
- Multiple brute-force modules available for various protocols.
- Uses hexadecimal mode for packet injection and sniffing.
- Uses a file for hashes
- Supports various attack modes for cracking
- SSLv3/TLS traffic can be identified and decoded.
- Output can be formatted in JSON.
- Requires setup of connected app for OAuth2
- Use of configuration files is required in ftest.
- Automatically requests letsencrypt certificates, requires port 80 to be accessible
- Dynamically generates self-signed certificates
- Uses various network tools and protocols for different types of operations.
- Some tools may not be fully functional due to environmental constraints.
- Make sure to have appropriate permissions for network operations.
- Supports multiple protocols including ICMP, TCP, UDP, GRE, IPSec, RSVP, RIP, EIGRP,
  OSPF.
- Uses DNS records to find subdomains and check for availability.
- Supports various network protocols including SNMP, OSPF, EIGRP, and others.
- tcpdump allows saving traffic to a file for later analysis.
- Threads can be configured up to a maximum of 50
- Crawls specified URLs to collect URLs.
- Uses depth to specify how deep to crawl.
- Default brute list is /usr/lib/cloud-enum/enum_tools/fuzz.txt
- Default threads for HTTP brute-force is 5
- Supports various file types including JPEG, MP3, DOCX, EPUB.
- Can read, write, and delete metadata.
- Usage includes scanning URLs and generating reports.
- No writers have been configured to persist probe results, add writers using --write-*
  flags.
- If no -f tag supplied will default to /usr/share/dnsenum/dns.txt or the dns.txt
  file in the same directory as dnsenum.
- Output format can be cli, csv, json, or list.
- Uses SMTP commands for enumeration.
- Some objects like Contact may return nulls in deeply nested fields.
- Supports GET/POST parameter fuzzing
- Allows recursive scanning and follows redirects
- Ensure to configure writers using --write-* flags to persist probe results.
- Includes features for header information retrieval, WHOIS, SSL certificate info,
  DNS enumeration, subdomain discovery, directory exploration, and port scanning.
- Uses Project Discovery cloud API key by default
- Patator is a multi-purpose brute-forcer, with various modules for different protocols.
- Uses hashcat for password cracking
- Supports both dictionary and brute-force attacks
- Reverse remotes specifying 'R:socks' will listen on the server's default socks port
  (1080)
- Uses TLS when connecting to the server with 'https' or 'wss'
- Uses custom injection marker ('*') in option '-u'.
- Uses password for authentication (max 32 chars will be used)
- Provides options for directory traversal and parameter fuzzing tests.
- Masscan supports scanning multiple ports and IP addresses/ranges.
- Can pass hostnames, IP addresses, networks, etc.
- Service arguments can be specified to be host-specific, type of service-specific
  (-m) or global (-g).
- Uses various scanning techniques to gather information about network services and
  vulnerabilities.
- This tool is designed to crack passwords for PDF files.
- Requires the filename of the PDF document as input.
- Extracts capture data from network traffic logs.
- Supports various application protocols like HTTP and FTP.
- Uses a custom password generation technique based on Markov statistics
- Handles MD5 hashes for password cracking
- tcpdump is a command-line packet analysis tool.
- Use at your own risk as it can cause high load on a target server.
- Default retries is 3
- Uses CLI for scanning and enumeration
- Supports multiple scanning techniques and options
- Can output reports in various formats.
- Supports HTTP/SMB/MSSQL/FTP/LDAP authentication spoofing
- SSLv3/TLS network protocol analyzer identifies SSLv3/TLS traffic.
- Depth to crawl can be set with -d option.
- Page size limit can be set with -size option.
- 使用方法に従ってオプションを指定する必要があります。
- Enable debug logging with the -D flag
- Requires SMB client authentication with username and password
- Use `-d` for single domains or `-dL` for a list of domains.
- Uses DNS enumeration techniques and tools like Altdns and OWASP Amass.
- Max error count per host is 30 before skipping remaining paths.
- Nuclei is used for security scanning of web applications.
- Works with various file formats to read and write metadata.
- Uses a custom injection marker ('*') in the URL.
- Provides comprehensive functionality including header retrieval, WHOIS information,
  SSL certificate information, DNS information, subdomain exploration, directory exploration,
  and port scanning.
- Various fuzz testing options available for network and web applications.
- Defaults to scanning all protocols if not specified
- Handles various hash types for password cracking
- Supports multiple attack modes
- Includes support for SMTP user enumeration testing.
- Uncommon header 'tcn' found.
- Directory indexing found in /config/.
- Used for username guessing on SMTP services
- Supports various fuzzing techniques across multiple tools.
- Each tool has different parameters and options for configuration.
- BruteSpray checks for default credentials across multiple services.
- Extracts words from a wordlist based on specified conditions.
- Uses WebSocket for secure tunneling connections
- Discovered credentials on ftp://192.168.11.4:21 'hello' 'hello'
- 'Ncrack done: 1 service scanned in 3.03 seconds.'
- Uses password for authentication — max 32 chars will be used
- Requires port 80 to be accessible for automatically requesting Letsencrypt certificates.
- This API provides access to various network tools available in Kali Linux.
- Nmap can be used to scan ports and detect OS and software versions.
- The default local host and port for a 'socks' remote is 127.0.0.1:1080.
- 'Proxy: listening on 127.0.0.1:1234'
- Supports live capture from network interfaces.
- SSL/TLS対応した対話型のインターセプトプロキシです。
- CA証明書をダウンロードする必要があります。
- SSLv3/TLS network protocol analyzer; decodes records and shows output in text format
- All tools can be executed from the command line in Kali Linux.
- Default number of retries for port scan is 3.
- Uses multiple protocols for scanning and vulnerability detection.
- Provides detailed service versioning and operating system detection.
- Uses username and password for authentication.
- Crawls the specified URL to collect URLs.
- Requires valid SMB credentials for access.
- Uses a keyword to search for public resources on cloud services.
- Uses various public/private data sources for information gathering
- Uses various command-line options for metadata extraction and manipulation.
- Crawls the specified site to collect URLs.
- Use -dL to specify a file containing a list of domains.
- Includes comprehensive features for header information retrieval, WHOIS lookup,
  SSL certificate information, DNS enumeration, sub-domain enumeration, directory
  exploration, and port scanning.
- Uses AWS checks for S3 buckets and other services
- Uses a command line interface for reading and writing metadata.
- Uses ProjectDiscovery cloud API key — configure if using cloud features
- Includes functionality for SMTP enumeration and relay testing.
- Uses SMTP service for username enumeration
- Uses custom injection marker ('*') for testing.
- Uses SMTP for email communication and testing.
- Ensure the SMTP server is configured properly for tests.
- Supports various hash algorithms including salted passwords.
- Supports multiple protocols including HTTP, SMB, SSH, FTP, RDBMS
- Uses SQL injection techniques to identify vulnerabilities
- Uses WebSocket for secure tunneling
- Uses a variety of attack modes for password cracking
- Supports many hash types and configurations
- Supports brute force attacks on various protocols including HTTP, SMB, SSH, FTP,
  POP3, IMAP, RDBMS.
- Ncrack can be used with various services like SSH, FTP, etc.
- Allows sending custom ICMP/UDP/TCP packets to target and displays replies.
- Uses SYN scan method for port scanning.
- Can scan multiple IPs/ranges.
- nmap supports a wide range of scanning techniques including TCP/IP fingerprinting
  and version detection.
- Uses various scanning techniques to determine open ports and services
- Supports various protocols including ICMP, TCP, UDP, GRE, IPSec, RSVP
- Uses basic authentication for client connections
- Some configurations are mandatory, such as domain for dns2tcp
- Use -P password for authentication
- プロキシ経由で外部APIを実行
- Uses command line interface for packet sniffing and injection.
- Uses default listening HTTP IP and Port address
- Consider using -i option for interface selection.
- Tools may have specific dependencies that need to be installed separately.
- Some tools may not function as expected in virtualized environments.
- Use of directory-list-2.3-medium.txt for fuzzing
- Default number of retries for port scan is 3
- No authentication required for basic usage.
- Nmap is a command-line tool for network discovery and security auditing.
- It's capable of scanning ports, detecting services and versions, and identifying
  vulnerabilities.
- Uses a variety of DNS querying methods and checks for subdomain takeovers.
- Analyses captured data from network traffic logs and generates reports.
- Uses TCP for communication
- Uses cloud service enumeration for public resources.
- Uses various online sources for subdomain enumeration.
- Uses various HTTP header configurations.
- Content Security Policy has specific domain allowances.
- Uses HTTP requests to probe and analyze technology stacks.
- Analyzes the HTTP response headers.
- Automatically filters responses based on status codes.
- Crawls websites to collect URLs.
- Enable headless mode requires root user on Linux
- Use -D option to guess valid email addresses instead of just usernames.
- Uses randomly selected HTTP User-Agent header value.
- Supports screenshot capture of specified URLs.
- Discovered credentials can be printed to the console.
- Supports various protocols including FTP and SSH.
- Server may leak inodes via ETags, header found with file /robots.txt.
- Defaults to minimum length of password being 8
- Defaults to maximum length of password being undefined
- Defaults to password must include numbers being false
- Defaults to including passwords with special characters being false
- Set browser to use proxy http://127.0.0.1:1234
- Supports SSL/TLS interception.
- Default number of threads is 40.
- Various services can be brute-forced for default credentials.
- Uses custom charsets for word generation
- Supports various modes for generating password candidates
- SNMP scanner for fast scanning of multiple hosts.
- Uses SYN/CONNECT scanning methods
- Options include specifying ports and IP ranges
- Use appropriate privileges for certain scans.
- Supports NTLMv1/NTLMv2/LMv2, NTLMSSP, Basic HTTP auth
- Uses DHCP broadcast for responses
- Supports multiple server types including HTTP, HTTPS, and SMB
- Uses MD5 hashing for password recovery.
- Defaults for host and port are 0.0.0.0 and 8080 respectively.
- Uses SMB/CIFS for file sharing and management.
- Reverse tunneling enabled with SOCKS5 proxy
- Requires proper setup of secret for secure connection
- Uses password for authentication — maximum 32 characters.
- プロキシ未設定時はリクエストが直接外部APIに送信される
- リクエストの内容を書き換えることができる
- Supports scanning of various targets including file systems and container images.
- Use --help for command options and flags.
- Uses directory and file enumeration mode
- Uses command line for metadata extraction and manipulation
- Recursive subdomain discovery is supported
- Default output format is plain text
- Uses default timeout of 30 seconds
- Maximum wait for results is 10 minutes
- Uses CLI for scanning and enumeration.
- SMTP enumeration and relay testing available.
- Use caution when testing to avoid service interruptions.
- tcpdump can capture network packets
- Use with caution on high-traffic networks
- Apache mod_negotiation is enabled with MultiViews, which allows attackers to easily
  brute force file names.
- Uses CLI commands for operation.
- Flush session file for current target.
- Uses HTTP requests to communicate with the target.
- Supports various fuzzing techniques including buffer overflow and format string
  attacks.
- Includes options for concurrent requests and request delays.
- Uses a wordlist to search for unlinked content within target directories.
- Handles multiple service specifications.
- Can perform password cracking via various protocols.
- Supports Amazon, Google, Microsoft cloud services
- Extracts words from a given list based on specified conditions.
- Uses WebSocket for secure tunneling connection.
- Proxy listening on 127.0.0.1:1234
- Current proxify version v0.0.15 (latest)
- 'Fallback Resolver: 8.8.8.8:53'
- The API allows retrieval of vulnerabilities through a specified payload.
- Supports multiple SMTP testing options.
- Timeout defaults to 10 seconds.
- 'Mode: VRFY, Worker Processes: 5, Usernames file: users.txt'
- Uses SQL injection techniques to identify vulnerabilities.
- Various tools for brute forcing and credential stuffing across multiple services.
- Uses command line interface for operations
- Requires proper permissions for certain scans
- Can produce output in various formats.
- tcpickはパケットキャプチャツールです。
- Usage involves various command line options for flexible password cracking.
- Supports multiple output formats for results.
- Minimum length of password defaults to 8
- Maximum length of password can be specified
- Uses WebSocket for secure tunnel connections between server and client.
- Debug options.c:97   Add resource ssh:127.0.0.1 port 22
- Debug socket.c:54    Listening on 0.0.0.0:53 for domain 86world.dev
- プロキシサーバーはデフォルトで8080ポートをリッスンします。
- HTTP/2サポートはデフォルトで有効です。
- Uses ARP protocol to detect IPv4 hosts on a local network.
- Uses DNS records to identify potential domain vulnerabilities.
- Masscan can scan large numbers of hosts quickly.
- Uses a wordlist for requests
- Supports multiple HTTP methods
- Nmap can be operated from a GUI for result verification.
- Uses cloud services enumeration
- Uses SMTP protocol for email testing and enumeration
- Requires valid email addresses for testing
- Uses CLI for security scanning of web applications.
- Supports custom headers and various HTTP methods for requests.
- Allows for specifying cookies and post data for requests.
- Supports Amazon, Google, and Microsoft cloud services
- Various tools for brute forcing and credential checking.
- CLI usage examples provided for each tool.
- Supports various hash types and modes for password cracking.
- Default timeout is set to 30 seconds
- Use multiple threads for directory enumeration and port scanning
- Supports SMTP user enumeration testing and relay testing.
- Uses SQL injection techniques for vulnerability checks.
- Supports various fuzzing techniques and HTTP methods.
- Detailed usage instructions are available in the help documentation.
- High-Performance word generator with a per-position configureable charset
- Uses MD5 for hashing.
- Handles a large number of digests efficiently.
- Supports various brute-force login methods.
- Can be used for testing the strength of passwords.
- Supports WebSocket for secure tunneling.
- Reverse remotes specifying 'R:socks' will listen on the server's default socks port
  (1080) and terminate the connection at the client's internal SOCKS5 proxy.
- Password used for authentication (max 32 chars will be used)
- Uses password for authentication with a max length of 32 characters.
- Uses ICMP echo requests and responses for tunneling TCP connections.
- Nmap is a network scanning tool that can identify open ports and services.
- Output generated HTML reports
- Nmap allows for various scanning techniques including OS detection and vulnerability
  checks.
- SSLv3/TLS traffic analyzer.
- Can sniff any TCP connection with application data traffic.
- Automatically detects ASCII data and displays it directly to the screen.
- netcat and its variations provide various networking tools with encryption options.
- Bettercap can be used for network attacks and monitoring.
- Uses Scapy for packet manipulation and analysis
- Uses DNS queries to enumerate records.
- Default timeout for TCP/UDP queries is 10 seconds.
- Requires authentication with username and password.
- Uses a command line interface for DNS record scanning
- Generates and detects spoofed domains using fuzzing algorithms.
- Crawls specified site to collect URLs.
- Default recursion depth is 1.
- 対応クラウドにはAmazon, Google, Microsoftが含まれる
- Allows reading, writing, and deleting of metadata for various file types.
- Checks for the existence and permission settings of buckets in cloud providers like
  AWS, GCP, DigitalOcean, and Linode.
- Uses directory/file enumeration mode.
- Crawls specified URLs and collects various data.
- Use -q flag to silence logging
- no writers have been configured to persist probe results
- Analysis done in 0.79 seconds
- Includes .txt attachment with spoofed email.
- Uses Nuclei for security scanning of web applications
- Used for checking if users exist on a remote SMTP service.
- Vulnerabilities can be tested using the path /vulnerabilities/fi/?page=../../../../../etc/passwd
- SMTP enumeration can be done using VRFY or RCPT TO methods.
- Various services can be checked for default credentials.
- Default method for username guessing is VRFY.
- Executes shell commands remotely.
- Can generate backdoor agent scripts.
- Supports various HTTP methods for fuzzing.
- Can specify multiple headers, cookies, and post data.
- Uses hashcat for cracking hashes
- Supports MD5, SHA1, SHA256, etc.
- Extracts words from a specified wordlist based on length criteria.
- Can include numbers and special characters based on user input.
- Nmap can be run with various options for scanning.
- Results may vary based on network configuration.
- Includes spoofing for LLMNR/NBT-NS/mDNS.
- Listening HTTP IP and Port address is default 127.0.0.1:8888
- Listening SOCKS IP and Port address is default 127.0.0.1:10080
- Configuration options include -f for configuration file and -c for connection details.
- Provides tools for network scanning and ARP requests.
- Ensure to have the necessary permissions for the APIs used
- Uses multiple protocols including ICMP, TCP, UDP, GRE, IPSec, RSVP, RIP, EIGRP,
  OSPF for scanning.
- Print all DNS records instead of the first ones with -a option
- Output format can be set using --format option
- Can capture and analyze packets across various protocols.
- Uses a fuzzing algorithm to generate and detect spoofed domains.
- Creates application session files and indexes from capture data.
- Uses directory enumeration and fuzzing modes.
- Uses HTTP and HTTPS protocols
- Can be used for both capturing and poisoning network requests
- Depth to crawl is configurable using -d option.
- Output format can be set to JSON.
- 'Configuration options include: -f <conf_file>, -c <source_ip>:<source_port>:<dest_ip>:<dest_port>:<flags>:<protocol>:<tos>,
  -v <verbose>'
- 'Timing options include: -d <delay, 0.25 = 250 ms>, -s <sleep time, 1 = 1 s>'
- Uses built-in encryption methods in cryptcat and dbd.
- Uses a variety of data sources for DNS enumeration
- Uses projectdiscovery cloud API key
- Use --suffixes .log to target log files.
- Uses various algorithms for password cracking.
- Supports multiple output formats.
- Various tools for password analysis, mask generation, policy generation, and rule
  generation.
- Support for custom input files and options.
- Supports SMTP user enumeration and relay testing
- PHP reveals potentially sensitive information via certain HTTP requests that contain
  specific QUERY strings
- Uses custom injection marker in option '-u'.
- Supports multiple services for brute forcing.
- Requires setup of connected app in API
- Uses ICMP echo requests for tunneling TCP connections
- Requires privileged mode for reliable operation
- Some tools may require specific configurations depending on the environment.
- Allows fast scanning of a large number of hosts
- SYN stealth scanning is the primary method used
- Supports various types of scanning including ACK and vulnerability detection.
- Can display detailed information about services and versions.
- Supports various network protocols for sniffing and analysis.
- Output files can be written to a specified directory.
- Uses hex representation for packet manipulation.
- Various tools for network filtering and firewall rule management.
- Uses CLI for execution and does not require API authentication.
- Uses bettercap for network attack simulations
- Some commands may require elevated privileges
- Uses SOCKS5 protocol for tunneling
- Requires setup of the chisel server
- Default file for subdomains is /usr/share/dnsenum/dns.txt if no -f tag is supplied.
- Uses SOCKS or HTTPS proxy for TCP connections
- Uses DNS queries for domain scanning.
- This documentation provides usage examples for various network scanning tools.
- サブドメインのリストに対してチェックを実行
- 指定されたユーザーが存在し、ユーザーのホームディレクトリにWebサーバーのアクセス権限がない場合
- Uses SYN scans to detect open ports across multiple hosts.
- Timeout in milliseconds to wait before timing out (default 1000)
- Verbose output available with -v option
- Run diagnostic check up with -hc option
- Display version of naabu with -version option
- Nmap supports various scanning techniques including TCP, UDP, and service detection.
- ExifTool supports a wide variety of file types including JPEG, MP3, DOCX, and EPUB.
- Metadata extraction can be performed using various command-line options.
- No writers have been configured. To persist probe results, add writers using --write-*
  flags.
- Uses a rogue proxy for HTTP requests
- Can capture and display HTTP traffic
- Default max-time is 10 minutes
- Includes various network tools for different purposes
- 'Random string for this session: vz1C_iC2AlPID'
- Checking for test file execution
- Uses HTTP GET requests to check for vulnerabilities
- Uses CLI for DNS record scanning and subdomain brute-forcing.
- Generate backdoor agent with 'weevely generate <password> <path>'
- Run backdoor script by posting to the target URL
- Various fuzzing options available for testing
- Supports multiple protocols and HTTP methods
- Supports standard and non-standard notation for service specification.
- Provides comprehensive functions including header information retrieval, WHOIS information
  retrieval, SSL certificate information retrieval, DNS information retrieval, subdomain
  exploration, directory exploration, and port scanning.
- default delay between each http request is -1ns
- max response size to save is 2147483647 bytes
- max response size to read is 2147483647 bytes
- Maximum length of password can be set
- Check for potential vulnerabilities in the provided payload.
- Reverse remotes specifying 'R:socks' will listen on the server's default socks port
  (1080).
- Uses password for authentication.
- Server should listen on port 53.
- Generated 'backdoor.php' with password 'hello' of 692 byte size.
- Uses CLI for scanning various targets
- Introduces various security tools available in Kali Linux
- Each tool has specific usage and options
- Supports various hash types and formats.
- Service arguments can be specified to be host-specific, type of service-specific
  (-m) or global (-g)
- Supports various scanning techniques such as port scanning, OS detection, and service
  version detection.
- Can create HTML reports
- Uses SSLv3/TLS for network traffic analysis.
- Uses SMB/CIFS protocol for file sharing operations
- Uses MD5 hashing for password cracking.
- When the chisel server has --reverse enabled, remotes can be prefixed with R to
  denote that they are reversed. That is, the server will listen and accept connections,
  and they will be proxied through the client which specified the remote.
- Uses a wordlist for directory enumeration and fuzzing.
- Listening HTTP Proxy on 127.0.0.1:8888
- Output logs will be stored in proxify_logs.jsonl
- Crawls specified URL to collect URLs and resources.
- A tool for scanning large numbers of hosts' ports quickly.
- Nmap can be used for various types of network scans including port scans and vulnerability
  detection.
- The output format can be customized using various command line options.
- The payload can be tested using specific URL paths.
- Uses CLI commands for packet sniffing and injection.
- Requires proper network permissions to operate.
- Configuration options include -f for config file, -c for source and destination
  settings.
- Custom injection marker ('*') found in option '-u'. Do you want to process it? [Y/n/q]
  y
- 'Usage: ffuf --help for detailed options.'
- Uses fuzzing algorithm to generate similar domains and detect spoofed domains.
- Default number of threads is 50
- Crawls specified URL and collects URLs.
- Module for brute-forcing various services.
- Uses WebSocket for secure tunnel connections.
- Uses a secret for authentication.
- Connections will terminate at the server's internal SOCKS5 proxy.
- Proxy server enabled by default on port 8080.
- Logs stored in proxify_logs.jsonl.
- Tools may not have been tested due to lack of environment.
- Port scanning can detect open ports and services running on them.
- Service detection provides version information about the services.
- No CGI Directories found (use '-C all' to force check all possible dirs)
- Can output HTML reports for analyzed data.
- Generates backdoor agent with specified password
- Can execute shell commands on target host
- tcpdump is used for capturing packet data.
- Supports various password analysis and generation tools.
- Uses various DNS enumeration techniques to discover DNS records.
- Can generate large amounts of data depending on the queries performed.
- Uses DNS to scan specified domains.
- Evil SSDP allows for the creation of fake UPnP devices to capture authentication
  information.
- Uses SMTP service to check for valid usernames.
- Requires valid URLs for testing.
- All communication is done on port 53.
- Output can be formatted in JSON or other formats.
- 'Runs in inetd mode: use stdin/stdout instead of network listen'
- Brute force module for various protocols including HTTP, SMB, SSH
- Starting Patator 1.1-dev with python-3.12.6
- Masscan scans ports quickly on a large number of hosts.
- Hashcat provides a variety of attack modes for cracking hashes.
- Performance varies based on the hardware used.
- Nmap supports a wide range of scanning techniques.
- Version detection is performed using service signatures.
- Default listening port is 8080.
- This tool is used for packet sniffing and injection in hexadecimal mode.
- Host header is required for HTTP requests to forward to example.com
- Uses a variety of poisoning techniques including LLMNR, NBT-NS, and MDNS.
- Can be configured to run in quiet mode.
- Tools were tested and may not represent all tools available.
- Some tools may have limited documentation.
- Uses basic authentication with username and password
- Usage includes options for keyboard layout, output format, and debug mode.
- Default number of concurrent threads is 10.
- Configuration file is required for ftest.
- Verbose mode provides additional output.
- Uses various data sources for information gathering and DNS enumeration
- Generates and detects spoofed domains using a fuzzing algorithm.
- Use --suffixes .log for targeting log files
- Enable debug mode for detailed output
- Uses SMTP for testing email configurations and vulnerabilities.
- Crawls specified URLs to collect URLs
- Server may leak inodes via ETags
- Default port for SMTP service is 25.
- Supports a variety of file formats including JPEG, MP3, DOCX, EPUB.
- SQL injection vulnerability check tool.
- Tools are used for different types of brute force attacks and credential checks.
- The tool analyzes hash algorithms and may not be able to identify all hashes.
- Uses basic auth with username and password.
- Supports multiple protocols including SSH, RDP, FTP, etc.
- Can handle both username and password files.
- Various modules for password cracking and enumeration.
- Uses GET and POST methods for vulnerabilities scanning
- Device descriptor and service descriptor are served from the SSDP responses.
- Generates backdoor scripts and allows command execution on the target host.
- Supports secure tunneling using WebSocket
- Defaults to HTTP for transport
- Uses password for authentication — max 32 characters will be used
- This tool analyzes hash input and identifies possible algorithms.
- Uses SSL/TLS encryption for network connections
- ARPs can be used to detect IPv4 hosts on the local network.
- Can analyze capture data and provide reports for various application protocols.
- Uses MD5 hashing for passwords
- Requires input file for hashes
- tcpick allows for reconstruction and display of data streams.
- Uses password for authentication
- Make sure to set the correct listening address and port
- ファイアウォールのフィルタリングポリシーのテストを行います。
- プロキシサーバーを起動します。
- TCP接続をSOCKSプロキシもしくはHTTPSプロキシにリダイレクトします。
- Requires valid SMB credentials for access
- Run in foreground instead of as a daemon
- Set up as a transparent proxy
- Introduces various security tools available in Kali Linux.
- Includes options for DNS record types and output formats.
- Specify your custom USER_AGENT.
- Add a cookie for the HTTP request.
- Fast port scanning tool for large host ranges.
- Uses a specific user agent for requests
- Crawls specified site for URLs.
- Nmap can be used to perform various types of network scans.
- Uses default mutations list located at /usr/lib/cloud-enum/enum_tools/fuzz.txt
- Supports searching in Amazon, Google, and Microsoft clouds
- Uses various application protocols (HTTP/FTP...) for session and file data reporting
- tcpdump captures packets.
- tcpick reconstructs data streams from packets.
- Configuration options for ftest include -f, -c, -v
- ftestd has options like -i and -g for configuration
- SMTP enumeration may return false positives, verify results manually.
- SMTP relay tests should comply with legal guidelines.
- Some objects may return nulls in deeply nested fields.
- Used for username enumeration against SMTP services
- Various functions for packet manipulation and analysis.
- Uses a variety of options to perform DNS scans, including fuzzers and output formats.
- Supports various types of fuzzing techniques based on configuration files.
- Uses fuzzing algorithm to generate and detect spoofed domains
- Automatically filters out 404-like responses and creates new filters.
- This tool is designed for brute-forcing various login protocols.
- 使用例では複数のコマンドラインツールが紹介されているが、具体的なAPI情報は提供されていない。
- Reverse tunneling enabled
- Listening on 0.0.0.0:4444
- Requires port 80 to be accessible for automatic certificate requests.
- Uses TLS certificates for connections.
- Uses ProjectDiscovery's API for scan results
- Rate limits may apply based on the API key
- 'Server starts on default port: 12345'
- Allows TCP connection redirection through SOCKS or HTTPS proxy
- Example Domain for use in illustrative examples in documents.
- Uses SSL/TLS for encryption
- Logs contain request and response data
- Timeout value can be set using -t option.
- SMTP enumeration can be enabled with -e option.
- This data source includes tools for network scanning and ARP requests.
- Concurrent connections default to 10.
- Nmap supports multiple scanning techniques including TCP, UDP, SYN, and others.
- It can also detect OS and software versions.
- Uses various protocols for network analysis.
- Supports capturing and analyzing network packets.
- Uses a password for authentication (max 32 chars will be used)
- Output format can be cli, csv, json, list
- Uses a default timeout of 7 seconds for requests.
- Supports multiple concurrent threads with a default of 50.
- Crawling depth can be specified with the -d option.
- 'Default mutations path: /usr/lib/cloud-enum/enum_tools/fuzz.txt'
- 'Default threads for HTTP brute-force: 5'
- Uses CLI for operations
- Can handle recursive subdomain searches.
- Uses application session files to report on various application protocols.
- Uses ProjectDiscovery Cloud (pdcp) API key by default
- May require root access for certain operations.
- Uses TCP/IP for communication
- Can run in quiet mode to suppress output
- Uses SMB/CIFS protocol.
- Scapy can be used for packet manipulation and network analysis.
- Each command needs to be executed in a specific context.
- Use caution when testing SMTP servers.
- Uses DNS enumeration techniques to find subdomains
- May return large datasets depending on the domain queried
- Maximum wait for reply is 5 seconds
- Prints all DNS records instead of the first ones with the -a option
- Output format can be specified using the -f option
- Use randomly selected HTTP User-Agent header value.
- Run terminal to the target
- Supports various fuzzing techniques and methods.
- Can perform GET and POST requests with customizable parameters.
- Automatically filters out 404-like responses
- Supports multiple input formats for extensions and wordlists
- Crawls site to collect URLs.
- Options which take <time> are in seconds, unless you append 'ms', 'm', or 'h' to
  the value.
- Uses multiple online sources for discovery.
- Uses command-line interface for OS injection testing.
- Uses GET method with payload for vulnerabilities
- Supports MD5 hashing and cracking.
- Uses HTTP for transport, defaults to port 8080
- Supports both normal and reverse port forwarding
- Various services are supported including ssh, ftp, telnet, etc.
- Server defaults to port 12345
- Client uses TCP connections via SOCKS proxy
- Scans for vulnerabilities, misconfigurations, and secrets in filesystems, container
  images, code repositories, and VM images.
- 使用例では、hashcatを使用してMD5ハッシュを解読する方法が示されています。
- Fast scanning of large numbers of hosts.
- Server requires a listening address and port to be specified.
- Client needs to connect to the proxy server for DNS queries.
- プロキシサーバーを起動するためには --server フラグが必要です。
- CA証明書をダウンロードするためのコマンドが提供されています。
- Number of seconds to wait between showing a statistics update (default 5)
- Number of retransmits (default 0)
- 'Tick rate, i.e. number of ticks per second [default: 1]'
- 'Frame rate, i.e. number of frames per second [default: 10]'
- Uses TCP connections for redirecting through SOCKS or HTTPS proxy.
- Nmap can perform network discovery and security auditing.
- Logs include sent POST data and responses
- Can analyze capture data from network traffic logs.
- Uses packet sniffing and injection in hexadecimal mode.
- Port scanning can identify open ports and services running on a target.
- OS detection can provide information about the operating system of the target.
- Network traffic log analysis.
- Uses Scapy for network packet manipulation and protocol implementation.
- Uses DNS to scan for domain names
- Uses CLI commands for execution
- Various options available for traffic monitoring and capture
- Uses fuzzing algorithms to generate and detect impersonating domains
- Logs directory contains various log files
- HTTP method used is GET
- Uses AWS, Azure, and GCP checks for cloud resources.
- Capture stop conditions include packet count, duration, and filesize.
- Connection options include resetting connection and end connection.
- Uses various online sources to find valid subdomains.
- Uses various protocols and methods for network analysis.
- Check for missing HTTP Security Headers
- Identifies fingerprint HTTP Response Headers
- Automatically filters 404-like responses
- Allows setting multiple values for extensions, headers, and queries
- Apache/2.2.8 appears to be outdated (current is at least Apache/2.4.54). Apache
  2.2.34 is the EOL for the 2.x branch.
- Provides comprehensive functionality for web reconnaissance including header info,
  WHOIS, SSL, DNS, subdomain enumeration, directory search, and port scanning.
- This tool supports both GET and POST methods for fuzzing.
- Fuzzing can be performed with various types of payloads.
- Uses command line interface for analysis
- patator can perform brute-force attacks on various protocols and applications.
- SMTP external relay testing requires proper permissions.
- Extracts words from a source file based on specified conditions.
- Uses HTTP for scanning web applications.
- Default port for SMTP service is 25
- Debugging output can be enabled with -d option
- Uses WebSocket for secure tunneling connections.
- You must specify a time with a unit for keepalive, for example '5s' or '2m'. Defaults
  to '25s'.
- Uses a password for authentication (max 32 chars will be used).
- Some options may require additional setup.
- Supports various HTTP methods and request configurations for fuzzing tests.
- The default regular HTTP proxy spawns on port 8080.
- Logs are saved to proxify_logs.jsonl.
- SSL/TLS encryption tool for man-in-the-middle attacks on network connections.
- Uses encrypted command and control channel over DNS.
- Supports various hash algorithms including salted passwords
- ARP scanning can detect hosts on the local network.
- Starting Patator 1.1-dev (https://github.com/lanjelot/patator) with python-3.12.6
  at 2024-11-01 12:28 UTC
- Chisel can create secure tunnels using WebSockets.
- Use appropriate privileges to access certain features.
- The password used for authentication is limited to a maximum of 32 characters.
- Uses HTTP proxy on port 8888 by default.
- Redirects TCP connections to SOCKS or HTTPS proxy
- tcpick is a packet capture tool.
- Uses an interface for network tunneling.
- Supports both IPv4 and IPv6 modes.
- Tools categorized may not fit perfectly into the provided categories.
- Some tools may not have been tested due to lack of testing environment.
- Uses various scanning techniques including ACK, FTP, SSH, and SNMP.
- Can detect software versions and vulnerabilities.
- The logs directory contains various log files.
- Can generate HTML reports for analyzed data.
- tcpdump can capture packets on a specific interface.
- tcpick tool can reconstruct and display data streams.
- Uses various file formats to extract metadata
- Uses various network manipulation techniques
- Includes options for various scanning techniques and specifying targets.
- Default file path for subdomains is /usr/share/dnsenum/dns.txt
- Various tools for fuzzing and testing web applications.
- Uses DNS for domain scanning
- Can generate domains using a dictionary file
- Supports various modes and hash types.
- Can perform benchmark tests.
- Output file can be specified for results.
- Targets public resources on cloud services like Amazon, Google, and Microsoft.
- Uses ProjectDiscovery cloud API key
- Uses SMTP commands for testing various functionalities.
- Uses Nuclei for web application security scanning.
- Uses hping3 for packet crafting and scanning
- Default TCP port for SMTP service is 25
- Uses various scanning techniques including port scanning and vulnerability detection.
- Supports a variety of hash types and attack modes.
- Brute-force tool for various protocols.
- Credential Harvester is running on port 80
- Uses password authentication with a maximum of 32 characters
- Ncat is a network tool with enhanced functionality over netcat.
- プロキシサーバーを起動するには、mitmproxyを使用する
- Creates an encrypted command-and-control channel over DNS protocol.
- The server listens on port 53 by default.
- 使用画像：https://github.com/ianare/exif-samples
- Gowitness captures screenshots of websites.
- Uses multiple online sources for subdomain discovery
- No authentication required for accessing the API.
- Uses various scanning techniques including port scanning, OS detection, and vulnerability
  detection.
- Uses hexadecimal mode for packet operations.
- Use -e to enable SMTP user enumeration testing
- Use -t to set the timeout value
- Enable passive HTTP response processing mode
- Use a project folder to avoid sending same request multiple times
- Requires setup of the API key in the environment.
- Uses SQL injection techniques to test for vulnerabilities
- Uses standard DNS queries for enumeration
- Can perform both forward and reverse lookups
- Uses HTTP requests to interact with the target
- This tool analyzes password hashes to identify the hashing algorithm.
- Uses default User-Agent 'web'
- Recursion depth is set to 1 by default
- Uses various command line options for different functionalities.
- Uses command line interface for reading and writing metadata
- Allows scanning of URLs and generating reports.
- Uses SOCKS5 for remote connections
- Reverse tunnelling enabled with default socks port 1080
- Can use a list of domains for discovery.
- Uses multiple search engines for subdomain enumeration.
- Some options may require specific configurations.
- Uses TCP connections for proxy.
- Default proxy listens on port 8080.
- Requires valid authorization (user:password) for operations
- 特定のポートで受け入れたパケットを、プロトコルに応じて対応するアドレスに転送します
- Default host (0.0.0.0) and port (53), with no specific domain
- 'Security policy changed: All connections must be encrypted'
- The external WP-Cron seems to be enabled.
- WordPress version 5.9.3 identified.
- Uses PHP for remote operations
- Access to MySQL without a password for root user
- Various options available for fuzzing HTTP endpoints.
- Use appropriate flags for specific testing needs.
- Can ping multiple targets specified in a CIDR format
- Nmap is primarily a command-line tool.
- Uses TCP and UDP protocols for communication
- The server requires a password for authentication.
- Requires SMB/CIFS client configuration.
- Ensure proper permissions for accessing shares.
- Supports various network layer functions.
- Uses DNS queries for A, NS and MX records.
- Uses a fuzzing algorithm to generate similar domains for detection.
- Supports reading and writing various file metadata formats.
- Uses command line interface for packet manipulation
- Supports raw and hexadecimal modes for packet capturing
- Uses a custom injection marker ('*') found in option '-u'.
- Uses command line options for DNS record querying.
- Uses a wordlist for directory enumeration
- Supports fuzzing mode with query parameter 'q=FUZZ'
- Uses various cloud service checks including Amazon, Google, Microsoft.
- The tool has default configurations for threads and timeout.
- Various options for password analysis and cracking are available.
- No authentication is required to use the tools.
- Can handle recursive subdomain enumeration.
- Uses MD5 hash algorithm for cracking.
- Uses a default listening HTTP IP and Port address of 127.0.0.1:8888
- Allows mapping remote resources to local files
- Uses TCP connections to redirect to SOCKS or HTTPS proxies.
- Use -D to guess valid email addresses instead of just usernames
- Uses GET method to retrieve vulnerabilities
- Requires valid URL to test for SQL injection
- Requires setup of connected app in tundeep
- Some features may not be supported in older versions
- Default host for server is 0.0.0.0 and default port is 53
- Security policy requires encrypted connections
- Supports multiple services for credential checking.
- Uses HTTP/2 for communication
- Agent can connect to the server using specified protocol
- Uses OpenCL for hash cracking
- 'Minimum password length supported by kernel: 0'
- 'Maximum password length supported by kernel: 256'
- Supports multiple protocols including HTTP and FTP for brute force attacks.
- Includes tools for network scanning and ARP requests.
- Patator is a multi-purpose brute-forcer that can be used for various protocols.
- Ensure to check the usage limits and legalities of using this tool.
- Uses SOCKS5 proxy for tunneling connections
- Requires correct setup for DNS queries to work
- Uses CLI for operation and output.
- SSLv3/TLS traffic is identified and decoded.
- Uses OPAQUE authentication method
- Uses internal Journal at Inode 8 for recovery
- Firewall rules can be created and compiled using Firewall Builder.
- Requires valid SMB credentials and network access.
- Masscan is a fast port scanner for large networks.
- Nmap supports various scan types including TCP, UDP, and OS detection.
- Use 'nmap -h' for a list of command line options.
- Can analyze various application protocols (HTTP/FTP...)
- Uses a wordlist for scanning directories and fuzzing endpoints.
- Depth can be adjusted using the '-d' option.
- ftestd acts as a sniffer for capturing packets
- Requires Python environment with Scapy installed.
- May require additional permissions for certain operations.
- SMTP enumeration type can be specified as 1, 2, or 3.
- Uses a wordlist to find disconnected content within a target directory.
- Allows recursive scanning with specified depth.
- Depth to crawl can be specified with the -d option.
- ターゲットとなる企業などのクラウドサービス上の公開リソース（オブジェクトストレージなど）を探索します
- Uses command line arguments for configuration
- Uses CLI commands for interaction
- Supports various output formats
- Service arguments can be specified to be host-specific or global.
- Extracts words from a specified list based on given conditions.
- Supports minimum and maximum length specifications.
- Ensure to use the correct secret for authentication
- Connections may terminate if fingerprint mismatches occur
- Requires port 80 to be accessible for letsencrypt certificates
- Uses HTTP proxy listening on 127.0.0.1:8888
- Logs stored in proxify_logs.jsonl
- Uses PHPSESSID for session management
- Uses TCP connections for data transfer
- Various tools available for fuzzing HTTP requests.
- Use appropriate configurations based on the tool selected.
- Various services supported for credential checks.
- mTLSリスナーを起動する必要があります
- オペレーター用の設定ファイルを作成する必要があります
- Tools were verified to be operational.
- Uses MD5 hashing
- 10 hashes are cracked from the provided list
- Uses SOCKS5 for remote connections.
- Masscan can scan a range of IPs and ports quickly.
- Uses default timeout of 1000 milliseconds.
- Uses password for authentication (max 32 chars).
- Uses a variety of scanning techniques including ACK scan and version detection.
- Requires proper permissions to access certain features.
- プロキシサーバーを起動するには 'mitmproxy' コマンドを実行します。
- HTTP proxy listening on 127.0.0.1:8888
- Uses DNS protocol for communication
- Supports multiple domains
- Uses SSLv3/TLS for secure connections
- tcpflow captures packets and reconstructs data streams
- tcpdump is used for network packet capture.
- Uses HTTP/2 for communication.
- Uses SMB/CIFS for file sharing.
- Trivy scans for vulnerabilities in filesystems, container images, code repositories,
  and VM images.
- This API provides information on various security tools available in Kali Linux.
- Usage examples for each tool are provided.
- Uses various scanning techniques including TCP SYN, UDP scans, and service/version
  detection.
- Supports output in multiple formats including normal, XML, and grepable.
- Default recursion depth is 1; set to 0 for infinite recursion
- Uses a variety of scanning techniques including TCP connect scan and SYN scan.
- Supports VLAN search.
- Outputs HTML report
- 使用方法に従ってコマンドを実行する必要があります
- ARPパケットのスニッフィングが可能です
- Allows scanning of various URL targets and capturing screenshots.
- Uses a variety of online sources for subdomain discovery.
- tcpick can reconstruct and display data streams
- tcpreplay replays traffic captured by tcpdump
- Uses a configuration file for testing firewall filtering policies.
- 'SMB/CIFS client: list shares'
- Uses various techniques for DNS enumeration and scanning
- SMTP enumeration can be enabled using the -e flag with an email list.
- Default keyboard layout is qwerty
- Output format can be human readable, JSON, or CSV
- Uses SQL injection tests for vulnerabilities.
- Uses HTTP GET method for requests
- Metadata can be read, written, or deleted.
- Uses various brute-force strategies across multiple protocols
- Extracts words based on specified conditions from a source wordlist.
- default response size to save is 2147483647 bytes
- default response size to read is 2147483647 bytes
- Default MAIL FROM address is user@example.com
- Commands can be executed once a session is established between server and client.
- Uses HTTP/1.1, HTTP/2, HTTP/3 for command and control channels.
- Supports various HTTP methods for fuzzing tests.
- Allows for configuration of payloads and parameters.
- Supports conversion of binary executable files to ASCII text format
- Verbose mode available for detailed output
- Tools are presented based on functionality and tested availability
- Uses various modes for password cracking.
- Supports SNMP v2c agent claiming
- Patator is a versatile brute-forcing tool.
- MD5 hashes are processed using hashcat.
- Nmap can perform port scanning and OS detection.
- Uses a command line interface for packet analysis.
- Can monitor SSLv3/TLS traffic
- Uses TCP for connections.
- GUIでiptablesのルールを作成
- Default host is 0.0.0.0 and default port is 53.
- Uses HTTP/1.1, HTTP/2, HTTP/3 for command and control channels
- Supports multi-user mode, mTLS, WireGuard, and command-and-control channels
- Nmap can be used to scan for open ports and detect software versions.
- Uses cloud enumeration to detect public resources across various cloud providers
- Supports various file formats including JPEG, MP3, DOCX, EPUB.
- 'WARNING: This flag has the potential to make your storage explode in size'
- Uses configuration options with various flags for functionality.
- Uses various network utilities such as cryptcat, dbd, ncat, and netwox.
- Scapy is primarily used for packet manipulation and analysis.
- Uses Project Discovery Cloud API key for configuration
- Uses domain name to scan.
- Uses fuzzing algorithm to generate and detect similar domains.
- The logs directory may contain various log files.
- Uses concurrent requests for performance.
- Supports a variety of payloads and encoders.
- Password cracking tool with various options and modes.
- Supports brute force attacks on various login protocols including HTTP, SMB, SSH,
  FTP, POP3, IMAP, RDBMS.
- Uses subbrute bruteforce module for subdomain enumeration
- Discovered credentials are shown in the output.
- Uses GET method for API calls
- No authentication required for endpoints
- Supports SMTP user enumeration testing.
- Uses custom injection marker ('*') in URL.
- Various tools for fuzzing tests with specific command-line options.
- Use default credentials for brute force testing.
- Supports various protocols for password cracking
- Can perform brute force attacks with specified options
- Uses SOCKS5 proxy when specified
- Proxy server starts by default on port 8080
- Default output format is jsonl
- Uses Ncrack for password analysis.
- Supports various output formats.
- Uses SOCKS or HTTPS proxy to redirect TCP connections.
- Specific ports can be listened on and forwarded based on protocol.
- Minimum length of password is default 8.
- Maximum length of password is adjustable.
- Network tunneling tool supporting layer 2 Ethernet protocol.
- Chisel uses WebSocket for secure tunneling.
- Defaults for host and port can be set through environment variables.
- The client uses the server's IP to establish a connection.
- The tools listed have been tested and verified to work.
- Uses DNS protocol to create encrypted command-and-control channel.
- Requires TLS certificate validation for HTTP communications
- For best results, ensure the target is reachable and not behind a firewall.
- Supports multi-user mode and command and control channels over HTTP(S) and DNS.
- Implant creation requires specifying the target OS.
- exe2hex v1.5.1
- Captures and analyzes network traffic logs for various application protocols.
- Uses ARP spoofing to capture packets
- Supports HTTP header extraction
- A fast port scanning tool that can scan a large number of hosts quickly.
- Uses NTLM/Basic authentication
- quiet mode disables printing from the poisoners
- Uses application session files for data extraction
- Supports multiple application protocols for analysis
- tcpdump captures packets on the specified interface.
- Default file is /usr/share/dnsenum/dns.txt if no -f tag is supplied.
- Scapy is a packet manipulation tool used for network discovery and security auditing.
- Various files can be read and written metadata.
- Special options available for different file types.
- Uses ProjectDiscovery Cloud API key for authentication
- Uses a wordlist to perform directory enumeration and fuzzing
- Uses HTTP responses to analyze security headers.
- Handles various file types including JPEG, MP3, DOCX, and EPUB.
- Enables screenshots of specified URLs.
- Used for username enumeration on SMTP services.
- Uses a custom User-Agent for requests.
- Various fuzzing tools available for testing vulnerabilities.
- Supports HTTP methods for testing endpoints.
- Mode default is VRFY.
- Maximum number of processes default is 5.
- Uses custom injection markers in option '-u'.
- Supports various hash algorithms.
- Uses MD5 hashing for the password cracking process.
- Uses Patator for password brute-forcing
- Can generate passwords based on Markov statistics.
- Uses WebSocket for secure tunneling between server and client
- Reverse tunneling can be enabled with --reverse option
- Proxy server starts with default settings on port 8080.
- Logs saved to proxify_logs.jsonl.
- Uses a proxy server to forward traffic.
- Default HTTP proxy spawns on port 8080.
- Uses DNS protocol for encrypted command and control channel
- マルチユーザーモードを搭載し、HTTP/1.1、HTTP/2、HTTP/3上でコマンド・アンド・コントロール チャネルを作成します。
- マルチユーザーモードを搭載
- mTLS、WireGuard、HTTP(S)およびDNS上でコマンド・アンド・コントロール チャネルを作成
- Default host is 0.0.0.0 and port is 53
- Clients connect directly on UDP port 53
- Help message for PassDetective
- Server requires TLS certificate validation for HTTP communications
- Uses multi-user mode with reverse TCP shells
- Command line tool for directory brute-forcing
- Scans a specified range of IP addresses and ports quickly.
- Captures packets and displays protocol information.
- Supports various network protocols including OSPF and EIGRP.
- Uses HTTP GET requests for directory scanning
- Nmap can be used for network scanning and security auditing.
- Various scripts can be used to detect vulnerabilities.
- Uses command line interface for packet capture and display.
- Configuration options can include file configuration and connection parameters.
- Timing options allow for precise control over packet generation timing.
- Uses bettercap for network monitoring and attacks.
- Supports multiple SMB/CIFS operations.
- tcpdump is a packet capture tool used to capture network packets.
- Uses DNS for domain name scanning
- Uses bettercap tool for network attacks and monitoring
- Requires login and password for access.
- Can use multiple methods for specifying extensions
- Supports various DNS enumeration techniques.
- Can utilize multiple data sources for domain information.
- Uses default dns.txt file if no -f tag supplied
- 'Warning: whois queries can generate large netranges and take time'
- Uses various options for DNS record queries and domain scanning
- Use -d for defining domains to find subdomains for.
- Use -dL for specifying a file containing the list of domains.
- Comprehensive functionality including header information retrieval, WHOIS info,
  SSL certificate info, DNS info, subdomain exploration, directory search, and port
  scanning.
- Uses HTTP GET method
- Default number of concurrent threads is 50
- Timeout is set to 7 seconds
- Uses various payloads for testing vulnerabilities.
- Uses HTTP Screenshot using Selenium
- Uses VRFY method for username guessing
- Uses multiple search engines for enumeration
- Can specify a delay to avoid 429 status codes.
- API key is required for accessing the API.
- Uses command line interface with various options.
- Uses HTTP GET method to access vulnerabilities
- PHP allows retrieval of the source code via the -s parameter, and may allow command
  execution.
- 'Specify a combo wordlist deiminated by '':'', example: user1:password'
- Default port will be used if not specified
- Multiple service specifications can be passed.
- Command line options control various parameters for the scanning process.
- Uses MD5 for hash cracking
- Requires a valid list of hashes to crack
- Output format defaults to jsonl.
- Uses DNS protocol for command and control channel
- Requires pre-shared secret for secure connections
- マルチユーザーモードを搭載し、HTTP/1.1、HTTP/2、HTTP/3上でコマンド・アンド・コントロール チャネルを作成
- Supports multiple user modes and can create command and control channels over mTLS,
  WireGuard, HTTP(S) and DNS.
- Uses hashcat for password cracking.
- Session status can indicate if hashes are cracked.
- Reverse tunnelling enabled
- Fingerprints must be 44 characters containing a trailing equals (=)
- Proxy server starts by default on port 8080.
- Default upstream HTTP proxy port is unspecified.
- Can perform various types of network scans including version detection and vulnerability
  assessment.
- The server can listen on multiple domains by specifying them in the command.
- Uses multi-user mode with HTTP/1.1, HTTP/2, HTTP/3 for command and control channels.
- Supports multiple reverse TCP shells
- Requires port configuration for proper operation
- Helps detect accidentally written passwords or API keys in shell command history.
- Tools require proper permissions to execute on the system.
- Can specify any number of targets to ping.
- Supports scanning multiple IP addresses or ranges.
- Fast port scanning tool.
- Scapy uses Python for packet manipulation and analysis.
- Requires administrative privileges for certain operations.
- Use caution when scanning public networks.
- Uses a variety of DNS scanning and brute-forcing techniques.
- Packet sniffing and injection are performed in hexadecimal mode.
- tcpreplay allows replaying of traffic captured by tcpdump.
- Depth to crawl defaults to 2.
- Various file formats supported for reading and writing metadata
- No authentication required for usage commands.
- Commands can be executed interactively.
- Requires SMB/CIFS setup.
- Ensure correct network configurations.
- Uses projectdiscovery cloud API key by default
- Output format can be specified using --format option
- 使用方法はコマンドライン引数を使用して指定します。
- Default depth for crawling is 2
- Page size limit is in KB
- Can be configured with a custom config file.
- パスワード分析を行うためのツールキットです。
- Uses Project Discovery Cloud API key by default
- Uses CLI for security scanning of web applications
- Default mode for username guessing is VRFY
- Default minimum length of password is 8.
- Default maximum length of password is not set.
- Uses various fuzzing tools for testing endpoints.
- Fingerprints must be 44 characters containing a trailing equals (=).
- Fingerprints are generated by hashing the ECDSA public key using SHA256 and encoding
  the result in base64.
- Various services are supported for brute force checks.
- Proxy server starts by default and listens on port 8080.
- Allows mapping remote resources to local files.
- Uses SOCKS proxy or HTTPS proxy for redirecting TCP connections.
- Uses TCP4 for connections
- HTTP/1.1、HTTP/2、HTTP/3上でコマンド・アンド・コントロール チャネルを作成
- Supports multi-user mode and mTLS.
- Commands can be executed remotely from the server.
- Listener access is unrestricted
- Uploads will be saved in /root
- Uses a passphrase for embedding and extracting data.
- Hashcat can crack hashes using a wordlist or brute-force methods
- Some tools may require specific configurations or permissions to operate correctly.
- Uses SOCKS or HTTPS proxy to redirect TCP connections
- Uses TCP and UDP for data transfer
- Can listen on specified ports and forward to other addresses
- The default timeout for responses is 1000 milliseconds.
- The default number of retries for scans is 3.
- Supports layer 2 Ethernet protocol for network tunneling.
- Uses command line interface for scanning and detecting vulnerabilities.
- Requires specific domain to listen on
- Uses command line options for configuration
- Supports multiple network interfaces
- Uses default number of retries for the port scan as 3
- Uses default warm-up time of 2 seconds between scan phases
- Nmap provides a variety of scanning options for network exploration.
- Outputs HTML report from network traffic logs
- Uses hex mode for packet manipulation.
- Supports various network devices.
- Uses SMB/CIFS protocol to list shares
- Prints all DNS records instead of the first ones with -a option.
- Supports various network-related functionalities.
- Requires valid username and password for access
- Crawls specified sites to collect URLs.
- Handles recursion depth with configurable limits.
- Generate more domains using dictionary file
- Mirrors websites allowing for offline browsing.
- Can handle various link types and structures.
- Max recursion depth defaults to 4.
- Subfinder uses various online sources for subdomain discovery.
- Supports reading and writing of metadata for various file types.
- Enable debug logging for troubleshooting
- Max error count per host is 30
- Uses HTTP for scanning web applications
- Timeout value is 10 seconds by default.
- Uses GET requests to check SQL injection vulnerabilities.
- The tool generates backdoor agents and supports various command executions.
- Uses GET method for testing the target URL.
- パスワードの解読を行います
- Supports various attack modes for password recovery.
- Enable base64 authentication for templates and write credentials to log file.
- The server requires a password for authentication, max 32 chars will be used.
- Uses SOCKS5 with reverse tunneling enabled
- Requires setup of secret for communication
- Uses DNS protocol for command-and-control communication.
- Uses a password for authentication.
- Ensure to specify the correct certificate and key file paths.
- Proxy server starts on port 8080 by default.
- Uses multi-user mode over HTTP/1.1, HTTP/2, and HTTP/3.
- TCP connection can be redirected to SOCKS or HTTPS proxy.
- 特定のポートで受け入れたパケットを、プロトコルに応じて対応するアドレスに転送します。
- Uses multi-user mode with mTLS and HTTP(S) for communication.
- Payload creation requires specifying target OS.
- Creates an encrypted command-and-control channel over DNS.
- Uses specified passphrase for embedding and extracting data
- Some commands may require additional parameters
- Multi-user mode with HTTP/1.1, HTTP/2, HTTP/3 support
- Uses ARP protocol to detect IPv4 hosts on local network
- Fast port scanning tool for large ranges of hosts.
- Nmap can perform a variety of network scans and security assessments.
- Some tools may require specific interface configurations.
- Resolves host names from IP addresses require setup
- Some options may cause a login prompt
- Uses command line interface for execution
- Requires appropriate permissions for certain scans
- Uses bettercap for network monitoring and manipulation.
- Ensure proper network permissions are set to avoid disruptions.
- Provides analysis of captured network traffic logs.
- Utilizes various public/private data sources for domain information gathering.
- Can perform WHOIS lookups and DNS enumeration.
- Configuration options include packet filtering and timing adjustments.
- Evasion methods can be specified for testing against firewall policies.
- Uses wordlist for directory enumeration and fuzzing.
- Crawls the site to collect URLs.
- Supports various data sources for DNS enumeration and reconnaissance.
- Default timeout for queries is 10s.
- Depth to crawl can be specified using -d option
- Custom headers can be added using -h option
- Uses HTTP requests to capture screenshots of web pages
- Requires configuration of writers for persisting results
- Subfinder uses various online sources to find valid subdomains for websites.
- Uses HTTP methods for scanning
- This tool enumerates subdomains using multiple search engines.
- The timeout value defaults to 10 seconds
- Uses GET method for scanning.
- Requires a target URL to be specified.
- Uses PHP for backdoor scripting.
- Uses HTTP for communication with the target.
- Supports multiple protocols including HTTP, SMB, SSH, FTP, POP3, and IMAP.
- Uses various options to manipulate word lists for password generation.
- Hashcat is used for cracking hashes.
- MD5 hash mode is supported.
- Minimum length of password is 8 (default).
- Maximum length of password can be specified.
- Uses TCP and DNS protocols for communication.
- Uses TCP connections through HTTP/HTTPS proxies.
- Can modify requests and responses in real-time.
- Uses DNS for command and control channel
- The agent's authentication method is OPAQUE.
- The server requires TLS certificate validation for HTTP communications.
- Xspy is a keylogger for sniffing key inputs on remote or local X-Windows servers.
- Can be used in scripts to check if fewer hosts respond without having to parse the
  output.
- Uses raw mode for packet manipulation
- Can extract IP addresses from ARP packets
- Nmap can perform various types of scans including port scanning and service detection.
- Uses NTLM/Basic authentication for proxy.
- Uses hex injection for packet sniffing and manipulation.
- tcpick is a tool to reconstruct and display data streams
- tcpreplay allows replaying traffic captured in pcap files.
- Bettercap can be used to perform network attacks.
- Cryptcat offers encrypted communication.
- Uses basic authentication for SMB/CIFS client.
- SMB client requires valid credentials to access shares.
- 'Warning: this can generate very large netranges and it will take a lot of time
  to perform reverse lookups.'
- Scapy is used for various network operations including packet manipulation and crafting.
- Uses DNS and WHOIS lookups to find domain information
- This API does not require authentication.
- Generate more domains using dictionary FILE
- Lookup for GeoIP location
- 'Evaluate web page similarity with LSH algorithm: ssdeep, tlsh (default: ssdeep)'
- Check if MX host can be used to intercept emails
- Crawls specified URL to collect URLs and other data.
- Uses AWS, Azure, and GCP for checks
- Default mutation list is /usr/lib/cloud-enum/enum_tools/fuzz.txt
- Comprehensive functions for web reconnaissance including headers, WHOIS, SSL info,
  DNS, subdomain exploration, directory search, and port scanning.
- Supports multiple search engines for subdomain enumeration.
- Uses ProjectDiscovery API key for authentication
- SMTP relay testing may require specific configurations.
- Uses CLI for web application security scans.
- Uses various fuzzing methods for testing endpoints
- Use --url to specify the target URL.
- This tool analyzes various hash types.
- Allows secure tunneling using WebSocket connections.
- Uses various protocols for data transfer
- SSL/TLS encryption tool for man-in-the-middle attacks.
- Uses DNS protocol for command and control over encrypted channels.
- エージェントはHTTP/1.1、HTTP/2、HTTP/3で接続可能
- Fingerprint must be 44 characters containing a trailing equals (=)
- Supports multi-user mode with reverse TCP shells and HoaxShell-based shells
- Create encrypted command-and-control channels over DNS.
- The tools are tested based on their functionality on the Kali Linux platform.
- Agent can connect using various protocols
- Multi-user mode supports multiple reverse TCP shells and HoaxShell based shells.
- Specifies the port(s) to be scanned.
- Supports multiple target formats such as single IPv4 address, range, or CIDR address.
- Usage instructions provided for multiple network scanning tools.
- Default parameters specified for various scanning options.
- The tool can scan ports, detect services and versions, and perform OS detection.
- ツールのカテゴリーは私が大雑把に付けただけなので適していないかもしれません
- Fast scanning tool for open ports
- Uses a command-line interface for network scanning and service detection.
- Nmap supports a variety of scanning techniques and options.
- Supports multiple network protocols detection.
- Captures and analyzes network packets.
- tcpreplay allows replaying traffic captured with tcpdump.
- Output files can be specified with -D dir
- Supports NTLMv1/NTLMv2/LMv2, NTLMSSP, and Basic HTTP authentication
- Uses a variety of network attack techniques like ARP spoofing and HTTP proxy injection.
- Responderはポートスキャンやリッスンなどの機能を持つツールです。
- デフォルトでは、HTTPサーバーがONになっています。
- 設定が反映されている
- Uses various data sources for information gathering
- Uses SMB/CIFS for file sharing
- Uses CLI for various DNS record queries
- Output format options include cli, csv, json, list
- Uses default file if no -f tag supplied
- The API does not require authentication.
- Uses default User-Agent if not specified.
- Supports various file formats for metadata extraction.
- Various options available for reading and writing metadata.
- Usage of gowitness includes various commands for scanning and reporting.
- Includes comprehensive functionality for obtaining header information, WHOIS data,
  SSL certificate information, DNS information, subdomain enumeration, directory exploration,
  and port scanning.
- Avoid using potentially dangerous payloads in production environments.
- Includes options for SMTP enumeration and relay testing.
- Supports SMTP enumeration testing with various options.
- Can perform MX record checks and related DNS queries.
- Directory indexing found
- Uses SQL injection vulnerabilities to test database security.
- Uses custom injection markers
- Check for dynamic parameters
- Supports various hash analysis including WordPress, Joomla, and PHPass.
- Command line tool for password recovery.
- Supports brute force attacks on various protocols including HTTP, SMB, SSH, FTP,
  and RDBMS.
- Uses HTTP for tunneling connections.
- Fingerprint is required for host-key validation
- The server defaults to listening on 0.0.0.0:8080.
- Listening on http://0.0.0.0:4444
- プロキシサーバーを起動
- CA証明書をダウンロード
- Default listening address is 0.0.0.0
- Uses proxify for HTTP proxying with various options
- Uses SOCKS or HTTPS proxy for TCP connection redirection
- Uses DNS protocol for encrypted command and control channel.
- Uses a multi-user mode with command-and-control channels over HTTP/1.1, HTTP/2,
  and HTTP/3
- Use of TLS is recommended for secure communication
- Supports multiple reverse TCP shells and HoaxShell-based shells.
- Multiple users can connect to the team server.
- Sessions are established through reverse TCP.
- Payloads can be generated for various operating systems.
- This documentation provides usage examples and commands for various security tools
  in Kali Linux.
- Discovered open ports on specified IP addresses
- Default number of seconds to wait between showing a statistics update is 5
- Default port to expose naabu metrics on is 63636
- Uses various scanning techniques including ACK and OS detection
- Provides detailed output including service versions and vulnerabilities
- Can analyze network traffic logs and output various application protocol sessions
  and files.
- Default values may apply if not specified.
- Supports sniffing and injecting packets in hexadecimal mode.
- Requires root privileges to run.
- Nmap supports various scanning techniques including TCP, UDP, and service version
  detection.
- Supports various network protocols for packet capturing and analysis.
- Various application protocols (HTTP/FTP/...) session and file data reporting.
- Firewall filtering policy testing tool.
- Multiple target reconnaissance and attacks.
- Default output format is cli, can be changed to csv, json, list
- Supports various flags for DNS lookup
- Generates and detects spoof domains using fuzzing algorithms.
- Scapy is used for packet manipulation and analysis.
- Amass can gather domain information using various data sources.
- Crawl depth is configurable with the -d option (default is 2)
- Custom headers can be added with the -h option
- Allows for comprehensive web reconnaissance including header, SSL, WHOIS, DNS, subdomain
  enumeration, and directory searching.
- Command-line interface.
- Supports scanning various targets, including CIDR, files, and single URLs.
- Commands can be run using various options specific to each tool.
- SMTP enumeration can identify valid users.
- Test fuzzing with various methods and configurations.
- Ensure to check for request limits and handle errors appropriately.
- 'Total requests: 124992'
- Use randomly selected HTTP User-Agent header value
- Supports various hash types and attack modes.
- Uses SOCKS5 proxy for remote connections
- Reverse tunneling enabled on server
- Default HTTP proxy spawns on port 8080
- Listening HTTP IP and Port address defaults to 127.0.0.1:8888
- Default host is 0.0.0.0 and port is 53.
- Uses hashcat for cracking MD5 hashes.
- Requires setup of TLS certificates for secure connections
- Uses basic authentication for connections.
- Default listening port is 53
- Uses multi-user mode with mTLS, WireGuard, and HTTP(S) for command and control channels.
- This program is useful to rescue data in case of I/O errors, because it does not
  normally abort or truncate the output.
- 標準入力やファイルのハッシュ値を計算します。
- 対応するハッシュアルゴリズムにはmd5、sha1、sha256、sha512などがあります。
- Uses various command line options for configuration.
- No authentication required for usage.
- Can analyze network traffic logs and output reports
- tcpdumpでパケットをキャプチャするためのツールです。
- tcpickはデータストリームを再構築し、並び替えて表示します。
- SYN Stealth Scan to discover open ports.
- Uses netcat and cryptcat for network connections.
- Uses CLI for network scanning and service detection.
- Uses custom wordlist for subdomain generation.
- Uses various flags for DNS scanning
- HexInject is used for packet sniffing and injection in hexadecimal.
- Ensure appropriate permissions are set for network device access.
- Supports multiple extensions for searching
- Uses Selenium for HTTP screenshots
- Default dns.txt file is used if no -f tag is supplied.
- The tcp and udp timeout values default to 10s.
- Uses various flags for different operations, such as -a for all DNS records and
  -r for registered domains.
- Uses ProjectDiscovery Cloud API key for authentication.
- Ensure to set the necessary permissions for the API key.
- Uses keyword argument for searches.
- Default mutation list and brute-force list paths specified.
- Uses PHP version 5.2.4-2ubuntu5.10.
- Custom injection markers can be used in URL
- Backup scripts are generated using a specified password.
- Commands can be executed on the target host after placing the backdoor.
- Uses subbrute for bruteforce enumeration
- Supports directory discovery and GET/POST parameter fuzzing.
- Specifies a combo wordlist delimited by ':' for authentication attempts
- Supports multiple services for brute forcing
- Uses hash analysis and password cracking capabilities.
- Supports SMTP user enumeration and relay testing.
- Uses standard input for usernames and passwords
- Can output results in normal and XML format
- Supports various brute-force login methods
- Default minimum length of password is 8
- Default maximum length of password is not specified
- Use strong fingerprint for host-key validation
- Default keepalive interval is 25s
- TCP connection redirection using SOCKS or HTTPS proxy
- The server listens on wss://0.0.0.0:40056
- Clients can connect to the server using a pre-shared secret.
- Minimum length of password defaults to 8.
- Requires specific setup for TLS certificate validation
- Server listens on port 4444
- Requires setup of server to initiate connections.
- Uses a proxy server to forward traffic
- Default HTTP proxy listens on port 8080
- It may also help data protection by securely overwriting data.
- Default host (0.0.0.0) and port (53), with no specific domain.
- 'Security policy changed: All connections must be encrypted.'
- Handles various hash algorithms including md5, sha1, sha256, sha512, and whirlpool.
- Uses OPAQUE authentication method.
- Supports multiple reverse TCP shells and HoaxShell-based shells for command and
  control channels.
- Uses various command line options for data processing.
- This program is useful to rescue data in case of I/O errors.
- Using backup images to create timelines.
- Nmap is a powerful network scanning tool.
- Version detection and OS detection features are available.
- Uses synchronized read calls (disable driver buffering).
- Uses default configurations for scans.
- Output directory for results defaults to 'results'.
- No authentication required
- Uses SYN Stealth Scan for port scanning.
- Can scan multiple IPs or ranges.
- Configuration file format is source_ip:source_port:dest_ip:dest_port:flags:protocol:tos
- Creates application session files and indexes
- Uses HTTP/HTTPS protocols.
- Various file types supported for metadata reading and writing.
- Default timeout value is 10 seconds
- Default port for SMTP is 25
- Uses custom HTTP requests to check for SQL injection vulnerabilities
- Supports various services including ssh, ftp, telnet, mssql, postgresql, etc.
- Commands are run from a command line interface.
- 'Method to use for username guessing: VRFY'
- Default TCP port on which SMTP service runs is 25
- Minimum length of password is configurable, default is 8.
- Maximum length of password is configurable.
- Using -p which will be applied to all hosts in non-standard notation.
- Uses a brute-force approach to test login credentials.
- Uses SOCKS or HTTPS proxy redirection for TCP connections.
- The default HTTP listening port is 8080.
- Reverse tunneling allows connections from server to client
- Default host (0.0.0.0) and port (53) for the DNS server.
- Requires a pre-shared secret for secure connections.
- Uses password for authentication, max 32 chars will be used.
- Proxy server listens on 127.0.0.1:8888 by default.
- Default output format is jsonl.
- Uses HTTP/2 for communications
- Multi-user mode with multiple reverse TCP shells and HoaxShell-based shells.
- Creates an encrypted command-and-control channel over DNS protocol
- Uses HTTP/2 for agent communication
- Default password is 'merlin'
- Supports multiple hashing algorithms including md5, sha1, sha256, sha512.
- Supports mTLS and HTTP(S) communication.
- Requires setup for server and client configurations.
- Uses xspy to monitor key inputs on remote hosts.
- Some tools may not function correctly due to environmental constraints.
- Uses various hash algorithms including md5, sha1, sha256, and more.
- This tool creates timelines from backup images.
- 'Low level device calls enabled mode: 1'
- 'Reported hw blocksize: 4096'
- Filesize not reported by stat(), trying seek().
- 'Fault skip blocksize: 65536'
- The command line interface allows various options for scanning.
- Allows scanning of various targets including images, configs, and filesystems.
- Can analyze various application protocols
- Create HTML 2-way & hex files for everything
- HexInject can be used for packet sniffing and injection in hexadecimal mode.
- Uses CLI for execution
- Monitoring capabilities for SSLv3/TLS traffic
- Uses evasion and connection options for firewall testing
- Requires valid credentials to access shares
- Commands may vary depending on the version of the tool.
- Refer to the specific tool documentation for detailed usage.
- Uses various flags for domain scanning.
- Various file types are supported for reading and writing metadata.
- Default timeout for requests is 10 seconds
- Default number of threads is 40
- 'Specifies a combo wordlist deiminated by '':'', example: user1:password'
- Supports various HTTP methods
- Use with caution as this tool can lead to account lockouts.
- Defaults to 0.0.0.0 for listening host
- Defaults to port 8080 for listening port
- Proxy server listening on 127.0.0.1:8888 by default
- Default maximum length of password is unspecified.
- Designed for man-in-the-middle attacks on SSL/TLS encrypted connections
- Starts a DNS server on 0.0.0.0:53
- Can set security level and use pre-shared secret
- Supports multiple user mode and creates command and control channels over HTTP/1.1,
  HTTP/2, and HTTP/3
- Uses a multi-user mode with command and control channels over HTTP/1.1, HTTP/2,
  HTTP/3.
- This program is useful to rescue data in case of I/O errors
- It may also help data protection by securely overwriting data
- Calculates hash values from standard input or files.
- Uses various stages for data recovery with defined presets.
- Default block size reported by OS may vary.
- Fuzzy Hashing tool for recursive calculation and matching.
- Uses low level device calls for error recovery.
- Default block size is reported by the OS, otherwise 4096.
- Carve files based on headers and footers from various file systems.
- Fuzzy Hashing tool for finding similar files.
- The tool can perform port scanning, OS detection, and software version detection.
- Uses SYN scan method by default for detecting open ports.
- May require elevated privileges for certain scans.
- Captures data from various application protocols and outputs reports.
- ARPパケットをスニッフィングしてIPアドレスを抽出
- tcpdump is used for capturing packets.
- Uses SMB/CIFS for file sharing operations.
- Uses configurable DNS server for queries.
- Default timeout values are set to 10 seconds
- Uses default CLI options.
- Set recursion depth to 0 for infinite recursion
- Uses a wordlist for scanning.
- max error count per host before skipping remaining path/s (default 30)
- timeout in seconds (default 10)
- 'duration between each http request (eg: 200ms, 1s) (default -1ns)'
- max response size to save in bytes (default 2147483647)
- max response size to read in bytes (default 2147483647)
- Uses HTTP response header checks
- Uses various command modules for different functionalities.
- Available commands include file operations, system info gathering, and backdoor
  actions.
- Uses various methods for fuzzing HTTP requests including GET and POST.
- Supports multiple services for brute force attacks.
- Supports brute force and dictionary attacks
- Uses SOCKS5 proxy for communication.
- Requires specific secret for authentication.
- Enables modification of request and response headers.
- Can listen on specific ports for incoming connections
- Uses DNS protocol to create a command and control channel
- Proxy server runs by default on port 8080.
- If SSL is active, stop using it after CONNECT.
- サーバーを起動（デフォルトポート：12345）
- SSHをSOCKSサーバーとして起動
- Uses mTLS for secure communication
- Supports multiple user modes
- Uses DNS protocol for command and control
- Supports multiple users and requires setup of TLS certificates.
- Supports multiple hash algorithms including md5, sha1, sha256, sha512.
- Can handle input from standard input and files.
- Requires Java to be installed.
- Presets available for different stages of data recovery.
- Fuzzy Hashingの再帰的な計算とマッチングのためのツールです。
- MD5ハッシュを確認（ハッシュ値が一致するファイルはない）
- Uses various hash algorithms including md5, sha1, sha256, sha512, and others.
- This can be significantly slower when processing file entries embedded in archives.
- Use '--archives list' to list the available archive types.
- Uses various tools for network scanning and ARP requests
- Filesize not reported by stat(), trying seek()
- 'File size: 105930752'
- 'Blocksize: 4096'
- 'Resolution: 4096'
- 'Min read attempts: 3'
- 'Head moves on read error: 1'
- Uses various command line options for file system interaction
- ARPs the local network to detect IPv4 hosts
- Uses command line interface for scanning and enumeration
- Supports a variety of network protocols for packet analysis.
- Fast scanning for a large number of hosts.
- tshark is the CLI version of Wireshark for packet capturing.
- Uses ARP spoofing to intercept packets.
- Can display HTTP Host header information.
- Uses various flags and parameters for configuration of network capture.
- Uses CLI to interact with the services.
- tcpdump is used for capturing packets
- tcpick is a packet capture tool that reconstructs and displays data streams
- Uses DNS enumeration techniques to gather data.
- Uses DNS records to find variations of domain names.
- Uses SMB/CIFS client for listing shares
- Subdomain enumeration using the provided API endpoint.
- 'Default: /usr/lib/cloud-enum/enum_tools/fuzz.txt for mutations and brute'
- Checks the existence and permission settings of buckets in various cloud providers.
- Creates 'ismtp-results' directory and writes output to ismtp-results/smtp_<service>_<ip>(port).txt
- Uses HTTP requests to scan and detect various aspects of target sites.
- Ncrack can utilize multiple services for authentication.
- CIDR ranges supported for target specification.
- Handles multiple protocols including SSH, FTP, and HTTP(S)
- Supports various output formats including XML and normal formats
- Uses SOCKS5 protocol for connectivity
- Ensure the correct server settings are configured for reverse tunneling
- Minimum length of password is 8
- Maximum length of password is 12
- Client and server need to match configuration settings
- Requires setup of connected app for authentication
- Requires configuration of domains for the server
- Uses authentication method opaque
- Default address for server is 127.0.0.1:50051
- Uses DNS protocol for command and control channel.
- Uses a custom agent for communication with the server
- Uses various hash algorithms including md5, sha1, sha256, sha512, whirlpool, etc.
- Supports reading from stdin and files for hash calculations.
- Activate magic-scan or disaster-recovery function, may be some command line options
  ignored
- Output directory cannot be on the same filesystem to be tested filesystem, and should
  have sufficient space to write the recovered files.
- Processes backup images to create timelines
- Uses low level device calls for error recovery
- Default block size is 4096
- Command line usage for file system analysis and recovery
- Provides dummy HTTP and FTP servers for malware analysis.
- arp-scan uses ARP protocol to discover IPv4 hosts on the local network.
- GUIによる操作も可能
- Nmap can be operated through a GUI for execution and result checking.
- Nmap can perform various types of network scans and OS detection.
- 対応プロトコル includes MACSec, EAPOL, ARP, CDP, DTP, LLDP, VLAN, S7COMM, OMRON, TACACS+,
  ModbusTCP, STP, OSPF, EIGRP, BGP, VRRP, HSRP, GLBP, IGMP, LLMNR, NBT-NS, MDNS, DHCP,
  DHCPv6, ICMPv6, SSDP, MNDP, SNMP, RADIUS.
- Various options available for network traffic analysis and manipulation.
- Supports NTLMv1/NTLMv2/LMv2 and various authentication methods.
- Uses hex mode for packet injection
- Supports custom pcap filters
- Analyzes network protocols and traffic.
- Uses quiet mode — disables printing of certain messages
- tcpick allows for the reconstruction and display of data streams.
- FTTester is used to test firewall filtering policies.
- Configuration options include source IP, source port, destination IP, and destination
  port.
- Scapy is primarily a command line tool and does not have a conventional API.
- 'Default output format: cli'
- Use of dictionary file for domain generation
- The tool supports various protocols and can manipulate packets.
- Automatically filters out 404 responses in fuzzing mode
- Handles reading and writing of metadata for various file types.
- Uses depth for recursion limiting
- Timeout is set to 10 seconds
- Crawling depth can be adjusted using the -d parameter.
- Uses multiple search engines to enumerate subdomains.
- ExifTool can read/write metadata from various file types.
- Network reconnaissance framework that can execute passive DNS services.
- Supports SMTP enumeration and relay testing
- Enable loading fuzzing templates.
- Run diagnostic check up.
- Uses HTTP protocol
- Uses command-line interface for operations.
- Custom payloads can be specified for testing.
- PHP is installed, and a test script which runs phpinfo() was found
- Defaults to 5 simultaneous hosts for bruteforce.
- Supports multiple HTTP methods for requests.
- Can be configured to handle different output formats.
- Uses default credential profiles for brute force checks.
- Proxify has built-in DNS server functionalities.
- Requires specific domain setup for server.
- Requires setting up the server and connecting agents
- Requires setup of Merlin server with appropriate configurations
- Supports multi-user mode with reverse TCP shells.
- dc3dd is an enhanced version of GNU dd with additional features.
- 'Warning: Activate magic-scan or disaster-recovery function, may be some command
  line options ignored.'
- Supports multiple hash algorithms including md5, sha1, sha256, and more.
- The default limit for process memory is 4294967296 bytes (4 GiB).
- The default limit for worker memory is 2147483648 bytes (2 GiB).
- The default timeout for worker processes is 15.0 minutes.
- Uses direct access methods for data recovery.
- This tool is used to create timelines from backup images.
- INetSimのDNSがエラーで動作しないため別途DNSプロキシを起動
- 'Uses a default log directory: /var/log/inetsim/'
- 'Uses a default data directory: /var/lib/inetsim/'
- 'Uses a default report directory: /var/log/inetsim/report/'
- Session ID defaults to main process id.
- Use --no-update with wpscan
- Nmap is a network scanning tool used to discover hosts and services on a computer
  network.
- Uses application session files to analyze network traffic.
- Uses command line for packet sniffing and injection.
- May require root privileges to run.
- Uses CLI for operation
- Supports hexadecimal mode for packet manipulation
- Uses TCP/IP for network communication
- Can capture various types of network traffic including HTTP, HTTPS, and DNS
- Uses a command line interface for configuration and testing
- Requires valid username and password for authentication
- Uses various data sources for DNS enumeration and information gathering.
- Default timeout is set to 7 seconds.
- Uses wordlist for searching
- Can specify multiple extensions for file searches
- Use of various online sources for subdomain discovery
- Can handle subdomains recursively
- Uses basic authentication with user:password
- Can perform MX record checks and SQL injection testing.
- Uses custom injection marker ('*') in URL option.
- 'Generate backdoor agent with command: weevely generate <password> <path>'
- Execute commands on target with :shell_sh
- Various tools for fuzzing web applications.
- Supports various services including ssh, ftp, telnet, mssql, postgresql, imap, pop3,
  smbnt, smtp, snmp, mysql, vmauthd, vnc, mongodb, nntp, asterisk, teamspeak, oracle,
  xmpp, and rdp.
- Uses command line arguments for configuration.
- Multiple modules available for different services.
- Commands can be used in the terminal to execute various brute-force attacks
- Hashcat requires a valid configuration to function properly.
- Connections to this remote will terminate at the server's internal SOCKS5 proxy
- Ensure to specify the domain and resources in the configuration file.
- Requires setup of certificates for TLS.
- Uses proxy server on port 8888.
- Some objects like TCP may return nulls in deeply nested fields
- Uses DNS protocol for communication.
- Supports multi-user mode with mTLS.
- Commands available for session management.
- Multi-user mode is supported.
- mTLS and HTTP(S) communication for command and control.
- 'Warning: Activate magic-scan or disaster-recovery function, may be some command
  line options ignored'
- 'WARNING: this can make processing significantly slower.'
- WARNING credentials passed via command line arguments can end up in logs, so use
  this option with care.
- Can recover data from damaged disks.
- Can process input from stdin or files.
- Safecopy is used for data recovery from damaged media.
- 通常のハッシュ(md5sum、sha1sumなど)のようにファイルを比較するのに使用できますが、ほとんど違いのない類似ファイルを見つけることができます。
- Scan can be performed on files, directories, and archives.
- Uses various command line options for configuration and execution
- Contains various network tools for scanning and detection.
- Some tools may not function correctly if the environment is not set up properly.
- Uses default configurations for retries and timeouts
- Uses various scanning techniques including SYN scan, ACK scan, and service/version
  detection.
- Captures packets from specified network interface.
- Analyzes captured packets for protocol detection and information gathering.
- Output generated in HTML format
- Uses ftest for firewall filtering policy testing.
- ftestd is used to run the sniffer.
- Uses various commands for network interactions and monitoring
- Multiple functions available for network scanning, DNS resolution, and protocol
  analysis.
- Uses Basic Authentication for SMB client
- Ensure the correct user credentials are provided
- Uses various DNS and network protocols for enumeration and analysis.
- Automatically discovers important words from within responses and adds them to the
  wordlist.
- Uses various file metadata formats including JPEG, MP3, DOCX, EPUB.
- Various metadata reading and writing capabilities.
- Uses a GET method for retrieving scan results.
- If too small delay, Google may block your IP.
- If too big delay, search may take a while.
- Provides comprehensive features including header retrieval, WHOIS information, SSL
  certificate information, and DNS enumeration.
- Uses HTTP as the primary protocol for communication.
- Default method to use for username guessing is VRFY
- Uses command line interface for SQL injection testing.
- Uses OpenCL for GPU acceleration
- Generated 'backdoor.php' with password 'hello'.
- Uses various algorithms for password recovery.
- Uses the --help command for usage information
- Supports various services for password cracking
- Can input from Nmap's output formats
- Uses password for authentication, limited to 32 characters.
- TCP connection is redirected to SOCKS or HTTPS proxy.
- The tool can crack MD5 hashes using a wordlist or brute force.
- Uses WebSocket for secure tunneling.
- プロキシサーバーを起動するには 'mitmproxy' を実行する必要があります
- Supports multiple hash algorithms including md5, sha1, sha256, sha512, whirlpool,
  etc.
- Can read from stdin or files for hashing.
- エージェントとの通信チャネルはHTTP2を使用
- Uses mTLS for secure communication.
- Sessions are established once the implant is executed on the target.
- Uses PDF parsing to identify basic elements used in documents.
- Detects signs of rootkit infections.
- Uses Lua configuration for Snort.
- pcap DAQ configured to passive.
- YARA can identify malware or potential threats based on defined patterns.
- Can recover data from damaged drives using different preset stages.
- Masscan is designed for fast port scanning.
- Supports multiple scanning techniques including TCP SYN scan and UDP scan.
- Nmap supports various scanning techniques including port scanning and OS detection.
- Specific options can be used for different types of scans.
- Displays available tests with '-l' option
- To exclude files/dirs, use '-e 'FILE1 FILE2' option
- Create application session files and indexes.
- Uses command line interface for scanning and configuration
- Supports options for debugging and configuration management
- スニッフィング状態でhttpリクエストを送信可能
- Checks for known and unknown rootkits, backdoors, sniffers, and exploits.
- Uses curl for HTTP requests
- tcpflow captures packets from the specified interface
- Requires authentication with username and password
- Nmap supports multiple scan types including TCP, UDP, and service/version detection.
- Be aware of network policies and regulations when conducting scans.
- Creates application session files, indexes and reports on various application protocols.
- Outputs DNS records or domain variations.
- Supports multiple output formats including cli, csv, json, list.
- Uses fuzzing algorithms to generate and detect impersonation domains.
- Method to use for username guessing can be EXPN, VRFY or RCPT.
- Timeout is set to 7 seconds for requests.
- Generate backdoor agent using 'weevely generate <password> <path>'
- Load session file using 'weevely session <path>'
- Various tools for password analysis and generation.
- Tools include statsgen, maskgen, policygen, and rulegen.
- Includes multiple functionalities for comprehensive reconnaissance.
- The server must be started before the client.
- Enables SMTP spoof testing and enumeration.
- Redirects TCP connections to SOCKS or HTTPS proxy.
- Specific port packet acceptance and forwarding based on protocol.
- Uses GET and POST methods for requests.
- Supports various services for default credential checks.
- Supports various hash types and attack modes for password cracking.
- Supports multi-user mode and command-and-control channels.
- Uses internal Journal for recovery
- Output directory must not be on the same filesystem as the one being tested
- CLI tool for brute-forcing various services
- The default limit for process memory is 4294967296 (4 GiB).
- The default limit for worker memory is 2147483648 (2 GiB).
- Extracts matching words from a given wordlist based on specified criteria.
- 破損したハードディスク、CD-ROM、DVD、フラッシュドライブなどから読み取り可能なデータを別のファイルまたはブロックデバイスにコピーします。
- Uses WebSockets to establish secure tunnel connections.
- Uses HTTP/2 as the communication protocol.
- Uses multi-user mode and supports mTLS connections.
- Requires setup of operator configurations.
- Uses SSL/TLS protocols to query services
- Uses command line options for configuration.
- Security report is in `/var/log/tiger/security.report.kali.241125-03:44`.
- ARP scanning detects IPv4 hosts in the local network.
- Arping broadcasts ARP packets to specified IP addresses.
- Uses a storage file in .plaso format
- Check the availability and versions of dependencies
- Uses CLI for data recovery from damaged storage devices.
- Supports extraction of known file types.
- Can scan for common file signatures.
- 使用例は特定のコマンドライン操作を示しています。
- Nmapはネットワークスキャンのためのツールです。
- Can detect multiple protocols and provide relevant information.
- Extracts multiple archive formats including ZIP, TAR, and GZIP.
- Can output HTML reports for analyzed traffic
- YARA can scan both text and binary data.
- Tools may not be verified due to lack of testing environment.
- Some tools may not operate as expected due to browser limitations.
- Nmap can be used to visualize space and tabs.
- Multiple types of scans can be performed including port scans and vulnerability
  detection.
- Uses SSLv3/TLS protocol to analyze traffic.
- tcpdump can capture packets from network interfaces.
- Crawls specified URL to collect URLs
- Can include subdomains for crawling
- Uses command line options for operation
- Uses various data sources for DNS enumeration
- Number of concurrent threads is 10.
- Enable SMTP spoof testing with the -m flag.
- Uses --header flags to add extra headers to requests.
- Default screenshot format is jpeg.
- No CGI Directories found
- Apache 2.2.8 appears to be outdated
- Provides comprehensive features including header information retrieval, WHOIS information,
  SSL certificate information, DNS information retrieval, subdomain enumeration, directory
  exploration, and port scanning.
- Uses a custom injection marker ('*') in URL.
- Bruteforcing can be resource-intensive and should be used responsibly.
- Default credentials can often be found in documentation for specific services.
- Uses SMTP for email testing and enumeration.
- Timeout value is set to 10 seconds by default.
- Uses various hash algorithms for identification.
- Various authentication methods supported including brute-force.
- Default maximum length of password is not specified.
- SSDP responses can be spoofed to create fake UPnP devices.
- プロキシサーバーを起動するには mitmproxy コマンドを使用します。
- CA証明書をダウンロードするには curl コマンドを使用します。
- Connections to this remote will terminate at the server's internal SOCKS5 proxy.
- Requires configuration of the proxy and agent
- Uses a password for authentication
- プロキシサーバーを起動するための基本的な設定を含む
- Uses socat to establish connections and transfer data between addresses
- Default host (0.0.0.0) and port (53)
- Requires a pre-shared secret to prevent man-in-the-middle attacks
- This tool is designed for keylogging and may raise legal concerns.
- Fuzzy Hashingの再帰的な計算とマッチングのためのツールです
- Similar files can be found using ssdeep
- SSL/TLS service queries for protocol versions, cipher suites, key exchanges, signature
  algorithms, and certificates.
- Uses command line options for execution
- Scans for vulnerabilities, misconfigurations, and secrets in various targets.
- Ensure to configure the database directory for clamav properly.
- Use caution while executing bytecode from untrusted sources.
- Tools are categorized by functionality.
- SYN Stealth Scan for open ports
- Searches multiple vulnerability databases for specified keywords.
- Testing SSL server example.com on port 443 using SNI name example.com
- Create application session files and indexes from network traffic logs
- Uses Hexadecimal mode for packet injection
- ARP packet filtering is supported
- Scans for vulnerabilities, misconfigurations, and secrets in various filesystems
  and container images.
- Tools listed may vary based on the version of Kali Linux.
- Some tools may require specific permissions to run.
- Uses -f option for configuration file
- Uses -i option to specify the interface
- Default statistics interval is 5 seconds, deprecated
- Nmap can be used to detect open ports and services on a network.
- Default output format is cli but can be changed to csv, json, or list.
- Uses netcat, cryptcat, and dbd for various network operations.
- Uses SMB/CIFS protocol for file sharing.
- Requires destination IP address for connection.
- Uses DNS reconnaissance to locate non-contiguous IP space.
- Automatically filter responses based on status codes.
- 'Missing headers: Cache-Control, Clear-Site-Data, Cross-Origin-Embedder-Policy,
  Cross-Origin-Opener-Policy, Cross-Origin-Resource-Policy, Content-Security-Policy,
  NEL (Experimental HTTP header), Permissions-Policy, Referrer-Policy, Strict-Transport-Security,
  X-Content-Type-Options, X-Permitted-Cross-Domain-Policies, X-Frame-Options'
- 'Fingerprint headers: Server'
- 'Deprecated/Insecure headers: Set-Cookie (Insecure Attributes), Vary (Potentially
  Unsafe Header)'
- 'Analysis Grade: D (Review ''Deprecated/Insecure headers'')'
- Nikto is a web server scanner that performs security scans.
- Handles various file metadata reading and writing.
- Default TCP port for SMTP is 25
- Can handle recursive subdomain enumeration
- Check for vulnerabilities in file inclusion
- Various services are supported for brute forcing default credentials.
- Use '--help' for basic help message and exit.
- Fuzzing test tool that operates with specified payloads.
- Uses MD5 for hashing
- Total number of guesses is 100000000
- Uses WebSocket to establish secure tunnel connections.
- Uses SOCKS5 for tunneling connections.
- Uses DNS protocol for command-and-control channel
- Multi-user mode with command and control channels over HTTP/1.1, HTTP/2, HTTP/3
- Multi-user mode enabled with mTLS, WireGuard, HTTP(S), and DNS for command and control
  channels.
- Keep running in foreground using -f option
- Use -P for password authentication
- Supports various hash algorithms including md5, sha256, sha512
- Can process input from stdin or files
- Processing may be significantly slower if using certain options.
- 'Minimum read attempts: 3'
- Requires configuration of the DNS server
- Uses fuzzy hashing for comparing similar files.
- Uses mTLS for secure connections.
- Supports multiple user modes.
- Detects signs of rootkit infection in the system.
- Activate magic-scan or disaster-recovery function may cause some command line options
  to be ignored.
- Handles various hash algorithms including md5, sha1, sha256, sha512
- Can compute hashes from standard input or files
- ソフトウェア開発ライフサイクル全体にわたってセキュリティツールを統合
- アプリケーションのリスクを継続的に管理
- SSL/TLS services query to display protocol versions, cipher suites, key exchanges,
  signature algorithms, and used certificates.
- 'Path of the file in which to store log messages, by default this file will be named:
  "pinfo-YYYYMMDDThhmmss.log.gz". Note that the file will be gzip compressed if the
  extension is ".gz".'
- Uses command line interface to analyze server's SSL/TLS configurations.
- Fuzzy Hashing tool for finding similar files
- Can compare files like normal hashes but for similar files
- Supports scanning of various targets including filesystems and container images.
- Handles various scanning techniques including port scanning and OS detection.
- Network sniffing and spoofing capabilities.
- Searches for vulnerabilities across multiple databases.
- Captures and analyzes network traffic logs
- Uses OpenSSL for SSL/TLS testing
- Uses SSL/TLS configurations including support for various cipher suites.
- Uses packet sniffing and injection techniques.
- Supports multiple network devices.
- Uses bettercap for various network attacks and reconnaissance.
- ファイルシステム、コンテナイメージ、コードリポジトリ、VMイメージなどの脆弱性、設定ミス、シークレットなどを検出します。
- The Rankings are updated every 24 hours
- Requires OAuth2 setup for accessing the API.
- Uses various data sources for enumeration.
- Uses DNS server for queries.
- Defaults to /usr/share/dnsenum/dns.txt if no -f tag is supplied.
- Uses various flags for different functionalities such as querying DNS records and
  scanning subdomains.
- Positioning technology professional group from Hokkaido's open-source community.
- Requires setup of connected app in Qiita
- Ensure compliance with community guidelines for posts
- Requires user login to access event details.
- Some resources may be limited based on user permissions.
- Uses fuzzing algorithms to generate similar domains for detection.
- Requires secure connections with TLS to access the all endpoints of our API.
- The limitation count per hour of authenticated request is 1000.
- Crawls websites to gather URLs and other resources.
- POST /api/v2/projects/:project_id/reactions has been abolished since Oct 1 2022.
- Default number of threads for directory enum is 30
- Default number of threads for port scan is 50
- The Like API on Qiita Team has been abolished since Nov 4 2020. Please use the Emoji
  reaction API instead.
- 'Missing headers: 13'
- 'Fingerprint headers: 1'
- 'Deprecated/Insecure headers: 2'
- 'Empty headers: 0'
- 誰でも無料トライアルできます
- Uses SMTP commands for testing user enumeration and relaying.
- Djangoは、認証、URLルーティング、テンプレートエンジン、フォーム処理、管理インターフェースなど、Webアプリケーションの開発に必要な全ての機能を一元的に提供します。
- Djangoは再利用可能なコンポーネント、DRY（Don't Repeat Yourself）原則、迅速な開発、セキュリティ機能などを重視して設計されています。
- Uses basic authentication
- Various tools available for fuzzing tests including ffuf, simple fuzz, and wfuzz.
- Tools support multiple HTTP methods and customizable payloads.
- Requires OAuth2 authentication with a connected app.
- Requires OAuth2 authentication
- Uses CLI commands for various brute-force attacks
- No Organizations you are following
- Some objects may have missing fields
- Uses hashcat for cracking hashes.
- The API requires authentication for all requests.
- Login or Sign up with GitHub
- Login or Sign up with Google
- Login or Sign up with X(Twitter)
- Uses password for authentication with a maximum length of 32 characters.
- Supports TCP connections to SOCKS or HTTPS proxies
- Uses OAuth2 with refresh token — requires setup of application in Spotify Developer
  Dashboard.
- Requires authentication via OAuth2 to access data.
- API calls require proper OAuth setup.
- Rate limits apply based on user authentication.
- リトライ機能付きAPI呼び出し
- 最大リトライ数に到達
- ログからの認証情報漏洩
- コンプライアンス違反のリスク
- サーバーとクライアントで時刻がずれる
- 夏時間切り替え時に予期しない動作
- 国際展開時にタイムゾーンバグが頻発
- 浮動小数点の丸め誤差で比較が失敗
- 金融系では計算結果が狂う重大バグ
- 条件分岐が期待通りに動かない
- 'Uses low level device calls enabled mode: 1'
- 元のデータが変更されない場合がある
- データ更新が反映されずサイレント障害
- 大規模データ処理で気づきにくいバグ
- Avoid using print statements and instead use the logging module.
- 非同期の恩恵が全くない（むしろ遅い）
- イベントループがブロックされる
- 高負荷時にアプリケーション全体が停止
- ファイルハンドルリーク
- too many open filesエラーでアプリ停止
- メモリリークやリソース枯渇
- INetSim's DNS is not working due to an error, hence a separate DNS proxy is started.
- '"too many open files"エラーでアプリ停止'
- 環境切り替え時の設定ミス
- 秘密情報がソースコードに露出
- デプロイ時の設定変更で障害発生
- パフォーマンスが悪く、セキュリティリスクもあります。
- AI生成コードを安全にするために、最低限これらのツールを導入してみてください。
- SSL/TLS service query to display protocol versions, cipher suites, key exchange,
  signature algorithms, and certificates.
- Uses SSLyze for scanning SSL/TLS configurations.
- Login required to access data.
- Uses various scanning commands for different resources.
- Requires setup of application in Qiita to obtain credentials
- Uses RDKit for molecular validation.
- Colab の RDKit のインストールは環境によって変わります（`rdkit-pypi` / `rdkit` / conda を試してみてください）。うまく入らない場合は
  `condacolab` を使って conda 環境に入れる方法もあります。
- データが小さいと過学習しやすいのでデータ拡張や正則化、dropout を検討してください。
- SMILES の最大長 `MAX_LEN` はデータに合わせて調整してください。短すぎると分子が切れてしまいます。
- Requires OAuth2 authentication setup.
- Rate limiting is enforced on the API.
- Model generates SMILES structures from random latent space samples.
- The implementation includes improvements to enhance valid SMILES generation.
- KL重みを線形アニーリング＋最終的にβ=1.0超も選択可能にして disentanglement を改善。
- Encoder/Decoder両方に導入し、学習安定性向上。
- 生成時の多様性制御に `temperature` を導入。
- '`torch.nn.utils.clip_grad_norm_` により安定化。'
- Loss推移を簡易プロット。
- canonical=Falseを確率的に採用。
- 長時間学習での過学習回避。
- state_dict＋語彙情報＋パラメータを統合保存。
- ColabのRDKitのインストールは環境によって変わります（rdkit-pypi / rdkit / condaを試してみてください）。
- SDF file contains molecular information with properties like SOL and SOL_classification.
- Uses special tokenization for SMILES strings.
- Ensure to validate SMILES using RDKit.
- API supports pagination via cursor.
- Participate requires logged in user.
- RDKit installation may vary depending on the environment.
- Small datasets can lead to overfitting, consider data augmentation and regularization.
- Uses OAuth2 with refresh token — requires setup of connected app in Qiita
- SDF内のプロパティ名はファイルにより異なるので、ここでは 'SOL', 'SOL_classification', 'ID', 'NAME' を探す実装にしています。
- RDKitのSDMolSupplier(..., sanitize=False)としてからChem.SanitizeMol()を個別に試すのは、読み込みで停止しないための実務的な対処です。
- Requires logged in for participate.
- トークン化を導入し、より正確なSMILES生成を目指します。
- デコーダの出力を確率的サンプリングに変更し、多様性を向上させます。
- EOSトークンの生成を強調学習し、文の終了を促進します。
- Uses OAuth2 with refresh token
- Requires secure connections with TLS to access all endpoints
- Rate limit is 1000 requests per hour for authenticated requests
- Uses standardization for SMILES.
- Ensure valid SMILES for molecular generation.
- SDF contains multiple molecular properties.
- SMILES and properties extraction is done with RDKit.
- POST, DELETE, and GET methods have specific endpoints for emoji reactions.
- Some endpoints have been abolished since Oct 1 2022.
- Ensure RDKit is installed for SMILES processing
- Adjust MAX_LEN based on dataset characteristics
- Model shows signs of mode collapse, generating repetitive structures.
- Uses a custom implementation of VAE with sampling.
- Colab の RDKit のインストールは環境によって変わります（rdkit-pypi / rdkit / conda を試してみてください）。
- Ensure correct property names when reading SDF.
- Uses RDKit for SMILES validation and canonicalization.
- Tokenization is performed at the SMILES token level to improve generation quality.
- Generates diverse SMILES structures.
- Requires OAuth2 authentication.
- RDKit のインストールは環境によって変わります（rdkit-pypi / rdkit / conda を試してみてください）。
- SDF files contain molecular information that can be used for training models.
- Some responses may contain null values in optional fields.
- Ensure proper setup of the environment for RDKit.
- Model training shows convergence with stable KLD values.
- 新卒エンジニアとは、開発に役立つ使い方、トレンド記事やtipsを扱うタグです。
- 769件の投稿と89人のフォロワーがいます。
- Requires a dataset of valid SMILES for training.
- Uses RDKit for molecular structure and property extraction.
- Uses OAuth2 with refresh token — requires setup of application in Spotify Developer
  Dashboard
- 動くコードと安全なコードは別物です。
- 本番環境では、パフォーマンスやセキュリティ、保守性まで考慮する必要があります。
- Some objects like Smiles may return nulls in deeply nested fields
- Requires setup of OAuth application on Qiita
- Check rate limits to avoid throttling
- API may have rate limits that need to be considered during integration.
- リトライ機能付きAPI呼び出しの実装例が提供されています。
- 最大リトライ数に到達した場合、RuntimeErrorが発生します。
- モデルが単調な構造を過剰学習している
- KLが小さくなりすぎないように下限値を設ける
- Generates diverse SMILES molecules.
- Invalid SMILES may occur due to structural errors.
- Uses teacher forcing ratio for improved generation stability.
- Incorporates top-k sampling to reduce syntax errors.
- Google Colaboratory での動作を前提としています。
- RDKit のインストールは環境によって変わります。
- Input SDF file contains molecular information used for training.
- Requires RDKit for processing SMILES and molecular structures.
- Uses a tokenized approach for SMILES generation.
- Implements a probabilistic sampling method for output diversity.
- SMILES generation may include invalid structures due to syntax errors.
- Uses a specific tokenizer for SMILES strings.
- Consider implementing top-k sampling for better output quality.
- Ensure to handle API rate limits to avoid throttling.
- 使用するライブラリに応じて環境設定が必要です。
- SDF contains multiple molecular information.
- RDKit may include a <smiles> property already, but ensure canonical SMILES via MolToSmiles.
- 実行時にAttributeErrorで即座にクラッシュ
- テストしていないとデプロイ後に発覚
- API仕様を間違えると予期しない動作
- 文字列結合：データ量に比例してメモリ使用量が爆発
- 大ファイル読み込み：OutOfMemoryErrorでアプリ停止
- 二重ループ：処理時間が二乗で増加し応答不能に
- 予測可能な乱数でトークンが推測される
- セッションハイジャック・なりすましのリスク
- 暗号学的強度が不十分で攻撃を受ける
- Uses SMILES tokenization for improved generation accuracy.
- Incorporates probabilistic sampling to enhance output diversity.
- ログに秘密情報を出力
- 時刻・タイムゾーンの無自覚
- 浮動小数点の直接比較
- Pandasの警告を無視したチェーン代入
- 非同期処理でのブロッキングI/O
- リソースの未解放
- ハードコードされた値
- 存在しない引数・関数名（ハルシネーション）
- パフォーマンス地雷
- セキュリティ用途での一般乱数使用
- ログ出力でのf文字列使用
- Valid SMILES generation may yield error messages due to syntax issues.
- Colab の RDKit のインストールは環境によって変わります。
- SDF contains multiple molecular information for solubility.
- Requires authentication to access user-specific data.
- トークナイズが SMILES トークン単位で行われ、生成物の多様性が改善される。
- EOSトークンの学習が強化され、無限ループを防ぐ。
- Uses pydantic for settings management
- Config values can be loaded from environment variables or .env file
- Uses a VAE architecture for diverse molecule generation.
- API requires OAuth2 authentication.
- Rate limits apply to API requests.
- Generated SMILES may contain invalid structures due to parsing errors.
- Uses improved SeqVAE for enhanced diversity and Free Bits with probability sampling.
- Colabの環境に依存するため、RDKitのインストール方法は環境によって変わることがあります。
- Requires OAuth2 authentication for API access
- Ensure RDKit is installed and properly configured in the environment.
- Handle potential SMILES parsing errors during model training.
- トークン化を文字単位からSMILESトークン単位に変更しました。
- デコーダの出力を確率的サンプリングに変更しました。
- EOSトークンが自然に出力されるようにMAX_LENを調整しました。
- Uses RDKit for SMILES validation and generation.
- モデルがトークン単位（1文字単位）で SMILES を生成している
- デコーダが greedy 出力（argmax）で固定
- EOS トークン生成が弱い
- SDF file contains multiple molecular information including properties.
- SMILES の最大長 MAX_LEN はデータに合わせて調整してください。短すぎると分子が切れてしまいます。
- SDF files may contain varying property names.
- Uses custom tokenization for SMILES strings to improve grammar adherence.
- Incorporates probabilistic sampling in the decoding process.
- The script requires RDKit and PyTorch for molecular generation.
- Uses RDKit to process SDF files and extract SMILES.
- Invalid SMILES are filtered out during preprocessing.
- Generates valid SMILES with EOS token to indicate end of sequence.
- Output may include simple molecule structures if model is not fine-tuned.
- SMILES Parse Error indicates syntax issues in generated SMILES.
- データ拡張（ランダム SMILES）を使って学習データを多様化する
- 生成した文字列が分子として構文的・化学的に成立するかを RDKit でチェックする
- Colab の RDKit のインストールは環境によって変わります（rdkit-pypi / rdkit / conda を試してみてください）。うまく入らない場合は
  condacolab を使って conda 環境に入れる方法もあります。
- SDF files may have varying property names, check with GetPropsAsDict() for accuracy.
- Use sanitize=False for initial loading to avoid stopping on errors.
- SDF file contains molecular information for solubility data.
- Uses tokenization for SMILES strings.
- Incorporates probabilistic sampling for output generation.
- Uses tokenized SMILES representation for improved accuracy.
- Incorporates probabilistic sampling for diverse output.
- モデルはImprovedSeqVAEを使用しています。
- エポックごとの再構成損失とKL損失が記録されています。
- Uses LSTM for encoding and decoding SMILES sequences
- Implements teacher forcing with adjustable ratio
- モデルが単調な構造を過剰学習しているため、出力がすべて同じ分子になっている。
- 生成された SMILES のうち有効な分子がいくつかあり、無効な構文も多数出ています。
- 特に SMILES のような厳密構文を持つシーケンスでは半分〜9割が invalid になることもあります。
- Uses teacher forcing ratio to increase model output reliance over time.
- Recommended to use a tokenizer that handles specific tokens like 'Cl', 'Br', '[N+]',
  '[O-]'.
- Uses RDKit to process SDF files for molecular data extraction.
- Requires installation of RDKit and PyTorch.
- Uses tokenized SMILES for improved generation.
- Probability sampling implemented for diverse output.
- データ拡張のためのランダム SMILES の生成と RDKit によるバリデーションが含まれています。
- SDF file contains molecular information for training.
- Ensure RDKit is installed in the environment.
- Uses SMILES representation for molecular structures.
- Ensure proper validation of SMILES strings during preprocessing.
- モデルが単調な構造を過剰学習しているため、生成が単純な分子に偏っている。
- 温度・確率を調整することで生成多様性を向上できる。
- Uses teacher forcing ratio to improve sequence quality
- Top-k sampling reduces invalid sequences
- Uses a sequence VAE model for molecular generation.
- Improvements include LSTM-based encoding and validation with RDKit.
- Uses RDKit for SMILES generation and validation.
- The dataset may contain malformed entries that need to be handled.
- Uses improved sampling methods to enhance diversity.
- Includes regularization techniques to prevent mode collapse.
- SDF file contains molecular information for solubility training.
- RDKit used for SMILES generation and validation.
- Uses token-based authentication with an API key.
- Ensure valid SMILES strings are provided to avoid processing errors.
- ColabのRDKitのインストールは環境によって変わります。
- SDF file contains molecular information for solubility analysis.
- Encodes SMILES using a Variational Autoencoder.
- Epoch training results show reconstruction and KL divergence metrics.
- Generates diverse molecules using a probabilistic sampling method.
- SMILES の最大長 MAX_LEN はデータに合わせて調整してください。
- SDF format is used for molecular information.
- RDKit provides functionality for handling SMILES and molecular properties.
- モデルが単調な構造を過剰学習しているため、より多様な分子構造を生成する改良が必要
- Uses tokenization for SMILES strings to enhance model accuracy.
- Model incorporates probabilistic sampling to improve output diversity.
- Uses LSTM-based sequence VAE for molecule generation with enhancements.
- Ensure to validate generated SMILES using RDKit.
- Uses RDKit for molecular processing.
- Input data is sourced from a provided SDF file.
- 'モデル保存完了: improved_seqvae_smiles.pth'
- Uses tokenized SMILES for better accuracy.
- EOS token generation is crucial for valid SMILES.
- Uses probability sampling to generate diverse structures from the same latent variable
- Free bits prevents KL term from becoming extremely small, effectively utilizing
  latent space
- Dropout and LayerNorm help prevent overfitting and stabilize representations
- The model can be easily extended for conditional molecular generation.
- Some objects like SMILES may return invalid structures.
- Ensure proper sanitization of molecules after loading.
- Uses tokenization for SMILES in a single character.
- Implements a probabilistic sampling method for the decoder.
- Uses improved sampling techniques for diversity in generated SMILES.
- RDKitのインストールは環境によって変わります。
- モデルが単調な構造を過剰学習している（モード崩壊気味）
- Ensure SMILES strings are valid before parsing to avoid errors.
- Uses probability sampling in decoding
- Implements a free bits threshold for KL divergence
- RDKit requires valid SMILES for molecule processing.
- Ensure to handle unclosed rings and invalid SMILES appropriately.
- Uses LSTM for encoding and decoding SMILES strings
- Includes KL divergence for regularization
- Supports temperature sampling for diverse outputs
- Uses a tokenizer for SMILES that supports complex tokens like 'Cl' and 'Br'.
- The model uses probabilistic sampling to improve output diversity.
- Valid SMILES generation may contain errors due to complex syntax.
- Uses teacher forcing decay to improve sequence quality.
- Model converges well with stable KLD, but generated molecules are overly simplistic.
- Consider implementing temperature and probability sampling for diversity.
- SDF contains various molecular properties.
- Ensure to handle malformed entries during processing.
- Uses a token-based system for SMILES generation
- Uses a modified SeqVAE for enhanced diversity and Free Bits with probability sampling
- データが小さいと過学習しやすいのでデータ拡張や正則化、dropoutを検討してください。
- Ensure to validate SMILES before submission.
- Model training may require significant compute resources.
- SDF file contains molecular information.
- Uses tokenized SMILES for improved generation accuracy.
- Includes probability sampling for diverse output.
- Generated SMILES may contain invalid structures due to the nature of the generation
  process.
- Some objects like Molecule may return nulls in deeply nested fields
- Uses teacher forcing ratio to improve sequence quality.
- Incorporates Free Bits to enhance latent diversity.
- RDKitのインストールは環境によって変わります（rdkit-pypi / rdkit / condaを試してみてください）。
- 'SMILES Parse Error: unclosed ring for input indicates invalid SMILES strings.'
- SDF file contains molecular information for VAE input.
- Uses a tokenized approach for SMILES representation.
- Includes a probabilistic sampling method for generating sequences.
- トークン化を導入し、SMILESトークン単位での処理を行う
- デコーダ出力を確率的サンプリングに変更
- EOSトークンの生成を強化するためにMAX_LENを短縮またはpaddingを調整
- Incorporates improved sampling techniques for diverse molecule generation.
- Utilizes Free Bits trick to prevent KL divergence from falling too low.
- Uses probability sampling to generate diverse structures from the same latent variables.
- Free bits prevent the KL term from becoming extremely small, effectively utilizing
  the latent space.
- Dropout and LayerNorm are used to suppress overfitting and stabilize representations.
- Enhanced data augmentation allows for grammar learning without bias towards canonical
  structures.
- SMILES parsing errors may occur due to syntax issues.
- Generated molecules may contain invalid SMILES.
- Uses Teacher Forcing decay to increase model stability
- Top-k Sampling reduces invalid outputs
- SMILES syntax errors are common with generated outputs.
- Uses Free Bits to enhance diversity and stability in latent space
- SMILES may return parse errors if unclosed rings or invalid structures are present.
- Data augmentation is implemented using randomized SMILES.
- Uses tokenized SMILES for better structure representation.
- Implements sampling with softmax to enhance variability.
- SDF file contains molecular information including SMILES.
- Invalid SMILES may be excluded during processing.
- モデルが単調な構造を過剰学習しているため、生成される分子の多様性が少ない
- Uses a custom tokenizer for SMILES to handle multi-character tokens.
- データ拡張（ランダム SMILES）を使って学習データを多様化します
- 生成後の RDKit バリデーションを行います
- SDF may contain various property names, so ensure to check field names in your specific
  file.
- Model can generate diverse SMILES structures
- Ensure correct setup for OAuth2 connected application
- Uses a tokenization method to ensure valid SMILES strings.
- Model outputs are now probabilistic to improve diversity.
- Generated SMILES may contain invalid structures due to the nature of probabilistic
  sampling.
- Uses improved sampling techniques to promote diversity in generated molecules
- Includes KL divergence regularization to prevent collapse
- Uses a probabilistic sampling method for diverse molecule generation.
- 生成された SMILES の中に無効な構文が多く見られる
- Uses Teacher Forcing decay to improve sequence quality.
- Free Bits threshold can be increased for more diversity.
- SDF file contains molecular information for solubility prediction.
- SDF file contains molecular information including properties.
- The SDF file is used as input for molecular generation VAE.
- トークン化を文字単位からSMILESトークン単位に変更
- EOSを強調学習するためにMAX_LENを調整
- Uses β-VAE for improved disentanglement in latent space.
- Includes LayerNorm and Dropout for training stability.
- Temperature sampling allows control over generation diversity.
- 'Includes special tokens: <PAD>, <SOS>, <EOS>, <UNK>.'
- Implements VAE for generating valid SMILES.
- Free bits prevent KL term from becoming extremely small, effectively utilizing the
  latent space.
- Dropout and LayerNorm help suppress overfitting and stabilize representations.
- Enhanced data augmentation promotes grammar learning without bias towards canonical
  structures.
- Free Bits λ=3.0 may enhance latent diversity.
- Epochs are trained with varying recon and kld values.
- Ensure RDKit is installed in the environment for processing SDF files
- The dataset may contain invalid SMILES which should be filtered out
- 生成された SMILES の中には無効な構文が含まれることがあります
- 特に SMILES のような厳密構文を持つシーケンスでは無効な生成が多い
- 'Uses special tokens: <PAD>, <SOS>, <EOS>, <UNK>'
- Tokenization is based on single character SMILES representation.
- Some objects like SMILES may return nulls in deeply nested fields
- Uses RDKit to process SDF files and generate SMILES.
- Invalid SMILES entries are filtered out.
- トークン単位でのSMILES生成を使用
- 確率的サンプリングを追加
- Invalid SMILES structures may occur due to parsing errors.
- Uses LSTM-based VAE for molecule generation
- Implements KL annealing and teacher forcing for training stability
- The dataset contains molecular information in SDF format.
- Invalid SMILES will be excluded from processing.
- Uses canonical SMILES for normalization.
- Valid SMILES are filtered before processing.
- Ensure RDKit is installed for proper molecule handling.
- Model generates SMILES using token-level representation.
- Includes special tokens for padding and start/end of sequences.
- Model may require tuning to avoid mode collapse.
- Ensure diverse sampling to enhance output variety.
- The SDF file contains multiple molecular information.
- Invalid SMILES or malformed entries are skipped during processing.
- Uses token-based authentication
- Model outputs may require post-processing to ensure valid SMILES
- Uses RDKit for SMILES validation.
- Ensure that the maximum length of SMILES is adjusted according to the data.
- Uses RDKit for molecular data processing.
- Uses a dropout layer and layer normalization to prevent overfitting.
- SMILES は実際には文脈依存構造が強いため、RNN では完璧に文法を維持しづらいです。
- The model can be extended for conditional molecule generation.
- Uses Teacher Forcing ratio for training stability
- Implements Free Bits for latent diversity enhancement
- Generates a variety of SMILES strings, but many may be invalid due to structural
  errors.
- Handles invalid SMILES and performs sanitization.
- Uses tokenization based on SMILES structure to improve output validity.
- Implemented probabilistic sampling in the decoder for better diversity.
- Uses RDKit for SMILES processing and validation.
- Uses tokenized input for SMILES generation.
- Implements sampling using softmax probabilities for next token selection.
- SDF file contains molecular information including SMILES and solubility properties.
- Invalid SMILES may occur due to parsing errors.
- Model training involves variational autoencoder architecture.
- SMILES generation may result in invalid structures, check for parsing errors.
- モデルが単調な構造を過剰学習しているため、生成結果が単純なアルカンに偏っている。
- 学習済モデルを読み込んで続きから訓練可能。
- Free bits prevent the KL term from becoming too small, effectively utilizing the
  latent space.
- Enhanced data augmentation promotes grammar learning that is not biased towards
  canonical structures.
- SDF file contains molecular information used for training.
- Ensure valid SMILES and handle errors during parsing.
- Uses SMILES format for chemical structure representation.
- Uses softmax sampling for more diverse molecule generation.
- Incorporates Free Bits trick for KL divergence stabilization.
- 'SMILES Parse Error: syntax error while parsing.'
- Generates invalid SMILES structurally.
- Uses RDKit for molecular handling and validation
- Handles invalid SMILES and duplicates
- SMILES tokenization implemented to support 2-character tokens.
- Implemented sampling with softmax for diverse output.
- Uses LSTM for encoding and decoding sequences.
- Includes dropout for regularization.
- モデルが単調な構造を過剰学習しているため、生成された分子が単純なアルカン鎖になることがある。
- Uses probability sampling to generate diverse structures from the same latent variable.
- Free bits ensure the KL term is not excessively small, effectively utilizing the
  latent space.
- Uses RDKit for SMILES validation
- Ensure proper environment setup for RDKit in Google Colaboratory
- 生成は成功していますが、無効な構文も多数出ています。
- SDF format contains molecular information including solubility and classification.
- Ensure to handle malformed entries and avoid duplicates.
- Improvements made for tokenization by changing to token-level instead of character-level.
- Invalid SMILES will be filtered out during processing.
- Uses tokenized SMILES with special tokens <PAD>, <SOS>, <EOS>, <UNK>
- Implements probabilistic sampling for diverse SMILES generation
- モデルが単調な構造を過剰学習しているため、より多様な分子構造を生成できる改良版を提案
- Model generates valid SMILES strings.
- Ensure proper temperature settings for diverse outputs.
- Uses RDKit for molecular validation and SMILES processing.
- SDF file contains various molecular information.
- Ensure to handle sanitization and validation of SMILES.
- Uses RDKit for molecular data processing
- Handle invalid SMILES gracefully during processing
- Implements probability-based sampling for generating SMILES.
- Uses a custom tokenizer for SMILES strings.
- The decoder uses probabilistic sampling for diverse output.
- Includes temperature sampling for diversity.
- Model training converges well with proper KLD.
- Output molecules may lack diversity.
- Uses a custom training loop with VAE
- Dynamic beta adjustment during training
- Incorporates Top-k sampling for improved output quality
- Utilizes teacher forcing decay to enhance model stability
- 生成された SMILES のうち有効な分子がいくつかあり、無効な構文も多数出ている。
- RDKit provides a demo dataset for solubility in SDF format.
- Free Bits：KL項の下限を設定することで、潜在変数が早期に「死んでしまう」現象を防ぎます
- KLアニーリング（β）：学習初期はKL項の影響を抑え、徐々に増やすことで安定した学習が可能
- Model structure is based on a Variational Autoencoder (VAE) with LSTM.
- SDF file includes solubility data for various molecules.
- Use canonical SMILES for molecule representation.
- Utilizes improved sampling techniques for diverse molecule generation.
- Model performance can vary with adjustments to hyperparameters.
- データ拡張（ランダム SMILES）を使い、モデルは表現の冗長性に強くなる。
- 生成した文字列が実際に分子として構文的・化学的に成立するかを RDKit でチェックするのは必須。
- SDF files can contain variable property names; ensure to check the specific field
  names used.
- Implements tokenization for SMILES strings.
- 生成されたSMILESのうち無効な構文が多数出現する可能性があります。
- 生成は成功していますが、文法的構造を維持するための改善が必要です。
- Uses LSTM-based sequence VAE for molecular generation.
- Includes data augmentation with randomized SMILES.
- SMILES generation may produce invalid structures due to the complex syntax.
- Use RDKit for SMILES extraction and property retrieval.
- Uses RDKit for SMILES validation and canonicalization
- Randomized SMILES generation for data augmentation
- Uses token-based SMILES representation for improved generation accuracy.
- Incorporates probabilistic sampling to enhance diversity of generated SMILES.
- Uses RDKit for molecule processing and SMILES generation
- 生成された SMILES の中には無効なものが多く含まれることがあります。
- 特に SMILES の構文は厳密なので、生成物の半分は無効になることがあります。
- Some objects like SmilesData may return nulls in deeply nested fields
- Improved diversity with Free Bits and probability sampling.
- Uses LayerNorm and Dropout for stability
- Supports temperature sampling for diversity control
- Invalid SMILES may occur during processing.
- Uses tokenized SMILES generation with vocabulary adjustments.
- Includes KL annealing for better training stability.
- Uses RDKit for molecular validation
- Uses a combination of Free Bits and KL annealing for loss calculation
- Incorporates top-k sampling for improved diversity in outputs
- The SDF file contains molecular information used for VAE input data.
- Uses tokenization for SMILES strings to improve generation quality.
- Implements probabilistic sampling for diverse output.
- Some SMILES may return parsing errors due to invalid syntax.
- Top-k sampling reduces invalid SMILES generation
- Generated SMILES may contain syntax errors or invalid structures.
- Uses teacher forcing decay to improve generation stability.
- Free Bits threshold set to 3.0 to enhance latent diversity.
- The SDF file contains molecular information for solubility.
- ColabのRDKitのインストールは環境によって変わる
- データが小さいと過学習しやすい
- トークン化を導入し、SMILESを正しく分割します。
- 確率的サンプリングを導入して、多様性のある生成を実現します。
- EOSトークンを強調学習し、生成の終了を促します。
- SDF内のプロパティ名はファイルにより異なるので、ここでは'SOL', 'SOL_classification', 'ID', 'NAME'を探す実装にしています。
- RDKitのSDMolSupplierはファイル内のすべての分子を読み込みます。
- 大きなSDFを扱う場合はメモリに注意。
- Uses tokenization for SMILES generation.
- Implements probabilistic sampling for diverse outputs.
- モデルが単調な構造を過剰学習しているため、多様な分子構造が生成されない。
- 温度・確率サンプリングの導入で多様性を強化。
- KLダイバージェンスの下限設定を追加することで潜在空間の有効利用を促進。
- 生成された SMILES のうち有効な分子がいくつかあり、無効な構文も多数出ています
- 無効な SMILES の生成は自然な現象で、特に厳密構文を持つシーケンスでは半分〜9割が invalid になることもあります
- Incorporates Free Bits for better latent diversity
- SDF file contains multiple molecular information.
- Ensure to handle invalid SMILES and duplicate entries.
- Uses tokenization for proper SMILES structure.
- RDKit supports reading SDF files for molecular data extraction.
- Handling of invalid SMILES and sanitization is included in the code.
- Uses token-based SMILES encoding.
- Implements a variational autoencoder for SMILES generation.
- 生成された SMILES のうち無効な構文が多数出ているが、多様性を獲得している
- Uses temperature sampling for generating diverse outputs.
- Generated molecules from the model may exhibit mode collapse, producing similar
  results.
- Improvement suggestions include using probabilistic sampling instead of argmax.
- データが小さいと過学習しやすいのでデータ拡張や正則化を検討してください。
- Uses teacher forcing decay to improve sequence quality
- Utilizes RDKit for SMILES parsing and validation.
- Uses Google Colaboratory for implementation.
- Ensure RDKit installation is compatible with the environment.
- RDKit is used for processing molecular data.
- The SDF file contains multiple molecular properties that can be extracted.
- Probability sampling is applied during decoding.
- Model may generate repetitive sequences if not properly regularized.
- Ensure to implement sampling with temperature for diverse outputs.
- SMILES generation may produce invalid structures due to syntax errors.
- SDF 内のプロパティ名はファイルにより異なるため、確認が必要。
- RDKit の SDMolSupplier はファイル内のすべての分子を読み込む。
- 重複 SMILES を削除する処理あり。
- 無効 SMILES を除外するための処理が含まれている。
- Uses improved sampling techniques for molecule generation.
- Incorporates teacher forcing decay for better sequence quality.
- モデルのトレーニングにはデータ拡張が必要です。
- SDF contains molecular information for training.
- Ensure to handle invalid SMILES appropriately.
- Model generates SMILES using a variational autoencoder.
- Tokenization is done at the character level for SMILES strings.
- Implement a probabilistic sampling method to enhance diversity.
- Uses a sequence variational autoencoder for molecular generation.
- The model includes enhancements for stability and diversity.
- Model incorporates dropout and layer normalization for stability.
- Generates molecules with potential structural errors in SMILES format.
- Uses a probabilistic sampling method to generate diverse outputs.
- SMILESの最大長MAX_LENはデータに合わせて調整してください。短すぎると分子が切れてしまいます。
- SDF file contains molecular information for SMILES generation.
- SDF file contains multiple molecular data.
- Invalid SMILES strings may occur during processing.
- 'Uses tokenization for SMILES strings with special tokens: <PAD>, <SOS>, <EOS>,
  <UNK>'
- Improved sampling diversity using probabilistic methods.
- Uses token-based authentication.
- The SMILES format requires proper tokenization to avoid invalid outputs.
- Uses a modified VAE model to enhance diversity in generated molecules.
- Incorporates sampling temperature adjustment for more varied outputs.
- Model training shows convergence with stable KL divergence.
- Potential mode collapse due to high likelihood sampling.
- Uses LSTM-based VAE for molecular generation
- Ensure valid SMILES using RDKit
- RDKit のインストールは環境によって変わります（`rdkit-pypi` / `rdkit` / conda を試してみてください）。
- SDF file contains various molecular information for training.
- Ensure proper handling of SMILES parsing errors.
- SDF file contains molecular information including solubility and classification.
- Uses tokenized SMILES for better parsing.
- Generates valid SMILES with EOS token management.
- Uses tokenization for SMILES based on characters, ensuring valid molecular representations.
- Outputs valid SMILES structures after generating sequences.
- Epoch logging shows reconstruction and KLD values over training.
- 生成された SMILES の一部に無効な構文が含まれています。
- SDF file contains solubility data for various molecules.
- Common error includes unclosed ring in SMILES parsing.
- Uses RDKit for SMILES parsing and validation.
- Handles malformed entries and duplicates during processing.
- Model generates SMILES sequences using a VAE architecture.
- 生成は成功しています
- Includes data augmentation and validation with RDKit.
- SMILES parsing errors may occur due to unclosed rings.
- SDF file contains molecular information, including solubility.
- トークン化をSMILESトークン単位に変更しました。
- EOSトークン生成を強化しました。
- Uses token-based vocabulary for SMILES generation.
- Implements probabilistic sampling in the decoding process.
- KLが小さくなりすぎないように、下限値を設ける（Free bits trick）を追加します。
- Uses dropout and layer normalization for stabilization
- Model can be easily extended for conditional molecule generation
- Uses teacher forcing ratio to improve generation stability
- Top-k sampling to reduce syntax errors
- RDKitのインストールは環境によって変わることがあります。
- SDF file contains multiple molecular information
- Ensure valid SMILES during processing
- Uses tokenization for SMILES strings to improve generation accuracy.
- Includes probabilistic sampling for diversity in generated SMILES.
- Uses tokenization for SMILES to improve generation accuracy.
- Incorporates probabilistic sampling to enhance diversity of outputs.
- SMILES parsing errors indicate issues with molecule structures.
- Invalid SMILES may cause parsing errors.
- Uses a modified VAE implementation with diverse sampling and free bits.
- Tokenization is done at the SMILES token level for improved validity.
- Colab上ではrdkitまたはrdkit-pypiが使えるケースが多いです（環境差あり）。
- Valid SMILES are required for molecule processing.
- SDF files may contain malformed entries which should be skipped.
- Generated SMILES may contain invalid structures.
- Ensure SMILES are validated before processing.
- Use tokenized outputs for better SMILES generation.
- 'Free Bits: Setting a lower limit on the KL term prevents latent variables from
  ''dying'' too early.'
- 'KL Annealing (β): Initially suppress the influence of the KL term and gradually
  increase it for stable learning.'
- Potential issues with unclosed rings in SMILES during parsing
- トークン化を導入し、SMILES生成を改善した。
- 確率的サンプリングを導入し、多様性を向上させた。
- EOSトークンの出力を強化するため、MAX_LENを調整した。
- Ensure to monitor model performance closely to avoid mode collapse.
- Generates diverse molecules but may produce invalid SMILES.
- Uses teacher forcing to improve sequence quality.
- Recommended to use tokenization for specific SMILES tokens.
- 生成されたSMILESの中には無効な構文が含まれることがある。
- Uses a diverse sampling method for molecule generation
- Incorporates teacher forcing decay for improved sequence quality
- Requires RDKit for processing SMILES.
- Uses tokenized SMILES for better structural generation.
- Sampling is based on probabilistic models to enhance diversity.
- SDF file includes various molecular information.
- Handle invalid SMILES and sanitize molecules during processing.
- Probability sampling is used for decoding.
- Free Bits λ=3.0 may increase latent diversity.
- エラー原因にはSMILESの構文不整合が含まれる
- Invalid SMILES will lead to parsing errors.
- Uses Free Bits with KL annealing for enhanced diversity
- Implements Top-k Sampling for improved sequence generation
- Uses LSTM-based VAE for molecular generation.
- Uses tokenization for SMILES to improve generation quality.
- SDF may contain various property names, ensure to check for 'SOL', 'SOL_classification',
  'ID', and 'NAME'.
- Use Chem.SanitizeMol for individual molecules to handle potential valence errors.
- Uses tokenization for SMILES processing.
- 'Includes special tokens: <PAD>, <SOS>, <EOS>, <UNK>'
- Uses a VAE model for molecular generation.
- SMILESの文法に従っていない場合が多い
- Authentication is not required for accessing public articles.
- Invalid SMILES will be excluded during processing.
- Uses a tokenized approach for SMILES generation
- Implements probabilistic sampling for output diversity
- Improved model performance observed over 50 epochs.
- Free Bits λ=3.0 to increase latent diversity.
- Teacher forcing decay to improve sequence quality.
- Free Bits prevents latent variables from dying early by setting a lower bound on
  the KL term.
- KL annealing (β) allows for stable learning by gradually increasing the KL term's
  influence.
- 生成は成功していますが、文法的構造を維持するのが難しい
- RDKit のインストールは環境によって変わります（rdkit-pypi / rdkit / conda を試してみてください）
- Uses character-level tokenization for SMILES representation.
- Implements sampling with softmax probabilities for diverse outputs.
- 学習はきちんと収束していて、KLDも安定しており、VAEとしては健全な挙動です。
- モデルが単調な構造を過剰学習している（モード崩壊気味）ため、出力された分子が単純なアルカン鎖になってしまっている。
- SDF files may contain varying property names
- Uses tokenization to handle multi-character SMILES tokens.
- Implements probabilistic sampling to enhance output diversity.
- Ensure maximum length (MAX_LEN) is adjusted according to the dataset.
- Ensure to handle potential SMILES parse errors when processing input data.
- Model is capable of generating valid SMILES strings.
- Training process involves multiple epochs to refine the model.
- Epochs run from 1 to 50 with varying recon and kld values.
- β value reaches 1.00 by epoch 15 and remains constant thereafter.
- Uses LayerNorm and Dropout for stability in LSTM
- Temperature sampling allows for diversity control in generation
- 生成された SMILES のうち無効な構文が多数出ている
- Model may exhibit mode collapse if not properly regularized
- Uses RDKit for handling SMILES and molecular data processing.
- Improved generation diversity with sampling.
- トークン化をSMILESトークン単位に変更
- 確率的サンプリングを導入
- EOSトークンの強調学習を行った
- SDF file contains molecular data including SMILES and solubility properties.
- Ensure RDKit is installed for processing SMILES.
- Model generates simple linear alkanes, suggesting mode collapse.
- Consider implementing softmax sampling for diversity.
- Valid SMILES are filtered and canonicalized before processing
- Valid SMILES validation is included.
- モデルが単調な構造を過剰学習しているため、より多様な分子構造を生成できる改良が必要
- KLが小さくなりすぎないように、下限値を設ける（Free bits trick）を追加
- SMILES generation may produce invalid structures due to the complexity of chemical
  notation.
- 'SMILES Parse Error: syntax error while parsing'
- Top-k sampling with k=20 to reduce invalid SMILES
- Colab 上で動作する VAE（SMILES 用・改良版）
- データ拡張としてランダム SMILES を使用
- 最大長 MAX_LEN はデータに合わせて調整してください。
- SDF contains molecular information including solubility and classification.
- Some properties may vary in naming within different SDF files.
- Uses character-level tokenization for SMILES strings.
- Implements probabilistic sampling for improved diversity in generated SMILES.
- Uses RDKit for SMILES validation and randomization.
- Training can be sensitive to data size, consider augmentation.
- Uses a variational autoencoder for molecular generation.
- Uses RDKit for molecule processing and validation.
- Uses a probabilistic sampling approach for generating diverse molecules.
- Some generated SMILES may fail to parse due to structural errors.
- Canonical SMILES are generated for validity.
- Uses tokenization for SMILES strings to ensure valid chemical structures.
- Includes probability-based sampling for diverse output generation.
- Ensure proper SMILES syntax to avoid parsing errors.
- Invalid SMILES may occur due to unbalanced parentheses.
- Uses teacher forcing ratio decay to improve generation stability.
- Top-k sampling improves validity rates in generated sequences.
- Uses advanced sampling methods to improve molecule generation quality.
- Incorporates Free Bits and KL annealing for better latent space diversity.
- Uses RDKit to parse SDF files and extract molecular data.
- Ensure SMILES are valid before processing.
- Handle potential unclosed ring errors in SMILES.
- SMILES may return nulls in deeply nested fields.
- Uses tokenization to handle SMILES format correctly.
- Generates valid SMILES with improved sampling strategy.
- 生成されたSMILESのうち有効な分子がいくつかあり、無効な構文も多数出ています
- データ拡張のためにランダムな SMILES 表現を生成する
- 生成した文字列が分子として構文的・化学的に成立するかを RDKit でチェックする必要がある
- Contains a dataset for solubility with several molecular information.
- 'SMILES Parse Error: syntax error while parsing: c11cccH]c2c[nH]c1'
- 'SMILES Parse Error: extra close parentheses while parsing: Cc1cccc(CCl)cc1CCC)CC#CCCCO'
- SMILES generation uses tokenized representation for improved accuracy.
- Special tokens include <PAD>, <SOS>, <EOS>, <UNK>.
- 生成した文字列が実際に分子として構文的・化学的に成立するかを RDKit でチェックするのは必須です
- SDF file contains molecule information with properties such as SOL and SOL_classification.
- Uses tokenized SMILES strings for generation.
- Model incorporates probabilistic sampling for diverse output.
- Uses improved VAE for conditional molecular generation
- Dropout and LayerNorm used to stabilize representations
- 生成された分子の中には無効なSMILESが含まれる場合があります。
- Some objects like molecule may return nulls in deeply nested fields
- Uses teacher forcing ratio decay to improve generation stability
- Utilizes top-k sampling to reduce structural errors
- Uses a sequence-based VAE for molecular generation.
- Implements KL annealing and teacher forcing.
- Uses RDKit for molecular processing and SMILES generation.
- Some molecules may produce invalid SMILES due to parsing errors.
- Uses tokenized representation for SMILES generation
- Model includes probabilistic sampling to enhance diversity of outputs
- 'Uses special tokens for SMILES: <PAD>, <SOS>, <EOS>, <UNK>'
- The vocabulary size is dynamically created based on the dataset.
- モデルが単調な構造を過剰学習しているため、より多様な分子構造を生成する必要がある。
- サンプル多様化のため、softmax確率に基づくサンプリングを導入する。
- Uses Free bits for effective latent space utilization
- Improvements in dropout and layer normalization for stability
- トークン境界の誤りや括弧の不整合が原因で無効な SMILES が生成されることがあります。
- 生成された SMILES の一部には無効な構文が含まれる可能性があります。
- Uses improved SeqVAE model for molecular generation.
- Incorporates Free Bits and Top-k sampling for enhanced diversity.
- RDKitのインストールは環境によって変わるため、適切な方法を選択する必要がある。
- データが小さいと過学習しやすいのでデータ拡張や正則化、dropoutを検討する必要がある。
- Ensure to sanitize and validate SMILES.
- Uses KL divergence for loss calculation
- Training involves varying beta from 0 to 1
- Uses SMILES format for molecular representation.
- The API can return various molecular structures.
- Uses LSTM for encoding of token sequences
- Adjust teacher_forcing_ratio for training stability
- Uses teacher_forcing_ratio to control input ratio of correct next tokens during
  training
- Adjusting temperature varies the diversity of generated molecules
- SMILES generation may produce invalid outputs due to structural complexities.
- Top-k sampling (k=20) to reduce invalid structures.
- Use LSTM-based VAE for molecular generation.
- Implement data augmentation using randomized SMILES.
- Uses OAuth2 with refresh token — requires setup of connected app in OpenAI
- Ensure to handle SMILES parsing errors.
- Requires authentication using OAuth2.
- Ensure valid SMILES format for accurate processing
- Requires OAuth2 authentication setup
- Requires OAuth2 setup for GitHub or Google.
- 生成は成功していますが、特に SMILES のような厳密構文を持つシーケンスでは半分〜9割が invalid になることもあります
- Some API endpoints may require specific user permissions.
- Consider data augmentation for better generalization.
- Login or Sign up required to access user data
- SDF file contains molecular information including solubility data.
- Handle potential errors when parsing SMILES strings.
- Model utilizes a variational autoencoder for generating SMILES strings.
- Requires OAuth2 authentication for access.
- Requires OAuth2 setup for access
- Rate limits may apply
- 生成された分子の中には無効な SMILES が多く含まれることがあります
- Requires OAuth2 setup for integration
- SDF files can include varied property names; check with mol.GetPropsAsDict() for
  accurate field names.
- Use Chem.SanitizeMol() to validate molecular structures after reading.
- Uses FilePicker to select folders
- Uses tokenization to handle SMILES strings
- Incorporates probabilistic sampling in the decoding process
- 情報が見つけられなくて困ったことと、その対策を記事にしています。Giverな皆さんに恩返し。
- Uses OAuth2 with refresh token — requires setup of connected app in qiita
- Ensure to check API rate limits and user permissions.
- RDKit installation may vary in Colab environments.
- Rate limits apply to API requests
- Login required to access user data
- Free bits prevent KL term from becoming too small, effectively utilizing the latent
  space.
- Dropout and LayerNorm help in suppressing overfitting and stabilizing representations.
- Enhanced data augmentation supports grammar learning without biasing towards canonical
  structures.
- SMILES parsing errors may occur due to structural inconsistencies.
- API rate limits apply.
- プログラミング言語のエラーメッセージや、ライブラリの出力するエラーメッセージは問題箇所を特定するために、人間が人間のために記述した情報だ。
- 問題が発生してから、行動し始める前に「さて、どうしようか」と問題特定の戦略を話してもらう。そのために必要な情報収集をどのようにするか、現時点でどこまでは正常だろうか、など質問をしていく中で戦略を立てさせる。
- プログラムのエラーが発生したということは、本来「完成に近づいた」一つの証跡であるはずだ。
- 良い習慣は良い道具によって定着しやすくなる。
- Small datasets can lead to overfitting.
- SDF内のプロパティ名はファイルにより異なるので、必要なら確認すること。
- RDKitのSDMolSupplierは読み込み時に例外で停止することがあるため、個別にサニタイズを行っている。
- Uses VAE for SMILES generation
- Trained with canonicalized SMILES
- モデルが単調な構造を過剰学習しているため、多様性が不足している
- OAuth2 authentication is required.
- API usage may be limited based on request frequency.
- 生成された SMILES の一部に無効な構文が含まれる場合があります。
- 投稿内容は私個人の見解に基づくものであり、所属企業・部門見解を代表するものではありません。
- Requires setup of OAuth2 authentication.
- RDKit is used for handling SDF files and converting to SMILES.
- トークン化を導入することで、生成する SMILES の文法的精度が向上します。
- 出力の多様性を高めるために、確率的サンプリングを実施します。
- EOSトークンが出現しやすいように、パディングの設定を調整します。
- Various articles and tips related to development.
- Uses LayerNorm and Dropout for stability.
- Temperature sampling allows for diversity control.
- SMILESの最大長 MAX_LEN はデータに合わせて調整してください。短すぎると分子が切れてしまいます。
- SDF contains molecular information.
- ID and NAME properties may vary in SDF files.
- Pagination supported through page parameter
- Model generates SMILES strings using a VAE architecture.
- Incorporates tokenization of SMILES strings for improved generation.
- Login required to access the API
- Some fields may return nulls in user data
- Uses OAuth2 with refresh token — requires setup of OAuth application in Qiita
- 生成された SMILES のうち有効な分子がいくつかあり、無効な構文も多数出ています（Parse Error の部分）。
- Uses RDKit for SMILES validation and conversion.
- Requires OAuth2 authentication to access data.
- Input data is an SDF file containing molecular information.
- The dataset has been verified and cleaned for valid SMILES.
- Requires OAuth2 token for authentication.
- Top-k sampling helps reduce invalid SMILES.
- Includes random SMILES for data augmentation.
- Ensure to sanitize molecules after reading.
- Uses tokenized SMILES for better accuracy in generation.
- Sampling uses a probabilistic approach to enhance diversity.
- Model shows mode collapse; consider improving diversity with sampling.
- Introduce softmax sampling to enhance structural variability.
- API requires OAuth2 authentication for access.
- Requires user authentication via OAuth2
- SDF file contains multiple molecular properties.
- Uses tokenization for SMILES strings — requires adjustment of vocabulary for special
  tokens.
- Incorporates random sampling for generating diverse SMILES outputs.
- Requires OAuth2 authentication with access tokens
- Rate limits apply to API usage
- Requires OAuth2 authentication for accessing user data.
- Uses OAuth2 with refresh token for authentication
- Requires an OAuth2 application to be set up in Qiita
- API may have rate limits
- 生成されたSMILESのうち有効な分子がいくつかあり、無効な構文も多数出ています。
- 特にSMILESのような厳密構文を持つシーケンスでは半分〜9割がinvalidになることもあります。
- Contains various articles and tips related to Vue3
- Uses LSTM for sequence modeling.
- Implements KL annealing.
- Uses tokenized SMILES for improved structure generation.
- Generates valid SMILES sequences with better diversity.
- Model shows signs of mode collapse; outputs are too similar.
- Login to continue?
- Some molecules may return parsing errors.
- Invalid SMILES strings are common in generated outputs.
- 自分の発言のみを表示する機能が必要
- Public profile information is accessible without authentication.
- Input data is in SDF format
- Uses token-based approach for SMILES generation.
- Implements VAE model for learning SMILES sequences.
- Public user data accessible without authentication.
- Data is available in Japanese.
- モデルが単調な構造を過剰学習しているため、生成物の多様性が不足しています。
- Uses teacher forcing ratio to improve sequence generation quality.
- Incorporates top-k sampling to reduce invalid sequences.
- Uses teacher forcing ratio to control input of correct next token during training
- Adjusts diversity of generated molecules by changing temperature
- Requires OAuth2 setup for accessing user profiles and articles.
- Uses LSTM for encoding and decoding of SMILES sequences
- Adjustments of temperature and teacher forcing ratio control output diversity
- Uses Free Bits to prevent latent variables from 'dying' early.
- KL annealing allows for stable training by adjusting the influence of the KL term.
- ChatGPT offers advanced natural language understanding and generation capabilities.
- Uses OAuth2 with refresh token for access.
- Uses OAuth2 with refresh token — requires setup of application in Qiita.
- Some API responses may contain pagination.
- Claudeは、Anthropic社が開発した大規模言語モデル（LLM）です。
- 特に、倫理的かつ有害性の低い応答を生成する能力に重点が置かれている点が大きな特徴です。
- Requires OAuth2 setup for access tokens.
- Uses AI for enhanced creative brainstorming and thought organization
- Requires user authentication via OAuth2.
- Push通知を実装しない
- バッジとして情報を表示しない
- Login required to access API
- Requires OAuth2 authentication for access
- Rate limits apply — check the API documentation for more details.
- API requires OAuth2 authentication with a connected app setup.
- Requires OAuth2 authentication to access user and article data
- Login required to access user-specific data
- All models consistently selected Python as one of the languages.
- チーム開発において各メンバーが異なる開発環境を持つ場合の「独自設定」管理方法について説明します。
- この手法の主な利点は、cherry-pickとrebase/squashを活用することで、必要な変更のみを確実に取り込むことができます。
- Some endpoints may have rate limits
- Dockerは、アプリケーションとその依存関係を一つの「コンテナ」にパッケージ化することで、どの環境でも一貫して動作させることができます。
- Dockerは、軽量でポータブルなコンテナを使用することで、仮想マシン（VM）よりも効率的なリソース利用を実現します。
- Requires setup of OAuth2 for API access
- Requires user authorization for API access
- GOOGLE_API_KEY(GEMINIのAPI_KEY)を設定しておく必要があります。
- Uses OAuth2 with refresh token — requires setup of connected app in Qiita API
- More than 5 years have passed since last update.
- エラーを恐れず、重要な情報として理解するために最小ケースを作る
- API server must be running locally on port 8000
- Requires OAuth2 authentication for API access.
- API rate limits may apply.
- Data available includes posts and tags.
- Login or Sign up with social account
- Login or Sign up with your email address
- Requires user authentication to access personal data.
- Uses Udemy mock exams for AWS certification preparation.
- Uses PostgreSQL for storage
- Markdown format is used for output
- Some endpoints may have rate limits.
- Requires login to access user data
- MCP provides standardized interfaces for communication between LLM applications
  and data sources.
- MCPはAnthropicが開発した比較的新しいプロトコルです。最新の情報については、公式ドキュメントを参照してください。
- エンタープライズレベルのセキュリティを徹底的に保証します
- 備忘録に関するトレンド記事やtipsが含まれています
- Some endpoints may return nulls in deeply nested fields
- Public profile data available for extraction.
- The API does not require authentication for public data access.
- API usage is subject to rate limits.
- OAuth2 authentication is required for accessing the API.
- Requires OAuth2 authentication to access user data.
- Requires setup of Oauth app in Qiita
- Some API calls may have rate limits
- API limits may apply based on user account type.
- Require logged in for participate.
- Check API rate limits to avoid throttling.
- CI/CDは網羅的にテストをすることが重要なので(テストが通ったらリリースできる状態と信じる)
- React環境の構築にはNode.jsが必要
- TailwindCSSを使用することでCSSのスタイリングが簡単に行える
- Requires OAuth2 setup for authentication
- The API supports fetching user articles and followers.
- Initial state shows no tasks message when there are no todos.
- 手動でアプリをデプロイできました！
- Requires OAuth2 for authentication
- Macは、その美しいデザインと高性能なハードウェアにより、多くのクリエイティブプロフェッショナルに選ばれています。
- Pipeline is triggered on push to main branch.
- Build artifacts are retained for 1 day.
- Requires login to access content
- This tutorial helps beginners understand CI/CD.
- It involves developing a TODO app using React.
- Login is required to access user-related data.
- Some API endpoints might have rate limits.
- Uses Firebase Hosting for deployment
- Rate limits apply.
- The encrypted key is decoded and saved as private-key.json
- After deployment, the private key is removed
- MCPを実装して理解することが目的のチュートリアルです。
- 初心者でも2時間程度で行うことが可能です。
- MCPサーバーはポート3001で起動します
- CORS configuration is required for localhost:3000
- Gemini API requires an API token for usage.
- Some packages may fail to install due to peer dependency issues in npm
- Ensure to handle API calls within the allowed methods to avoid errors.
- Uses Hono framework for API routing
- Uses forwardRef to allow parent component to interact with child component's methods.
- Requires API token for access
- Some API endpoints may have usage limits
- バージョンを古いものをいれると今は解決できます。
- Requires an active subscription to use the conversion functionality
- Requires setup of OAuth application in Qiita
- API requires authentication to access data.
- Popular articles available.
- Frequently used tags include Go, Python, JavaScript, Ansible, Docker, Terraform,
  AI, MySQL, SharePoint, AWS.
- Numba 0.52.0 is required for Typed List and Reflected List improvements.
- 倫理的な原則と安全性を重視して設計されているため、ビジネス利用において信頼性が高く、AI導入リスクを最小限に抑えられます。
- Linux版では、'.bashrc'で Anacondaの/binにPATHを設定するのを止めて、以下のコードが'.bashrc'に追加されるので、conda
  コマンドだけを有効にするようになっています。
- 実際は、'conda.sh'の方も必ずしも使う必要はありません。
- Numba を使うとどの程度の効果があるかを知るために、ベンチマークをしてみました。
- AtCoderはJavaで2倍の余裕があるようにしています
- Numba は、関数の頭に @jit を付けるだけで使えるが、Python と Numpy の一部の型や関数しか使えないため、Python のように使い易いわけではない。
- Numba の典型的な使い方は、2次元配列の高速化にある。
- Numba では、最近 @jitclass, str, list, Typed Dict が使えるようになったが、初心者は使わない方が良い。
- AtCoder では、必要な領域の最大を事前に計算し、ndarray を作っておくと良い。
- Requires user authentication to access user-specific items.
- 自分でテストする場合は、実行可能ファイルにする必要はないので、以下のコマンドの方が簡単です。
- No authentication required for accessing user profile data.
- xlwings は、ファイルではなくて Excel そのものを操作するライブラリーです。
- xlwings は Linux では使うことができません。
- Uses xlwings to interact with Excel from Jupyter Notebook
- Requires enabling macros in Excel for UDF usage
- 従来のプロンプトでは詳細な仕様書を記述し、AIに再現させる作業だった。
- 思考のパートナーシップを築く新常識
- このアプリはユーザーをどこにも導かない。書かなくてもいい。続けなくてもいい。ただユーザーが書きたい瞬間に、最高の「余白」を提供する。
- ユーザーの日記は、魂の記録である。我々はそれを分析も、広告利用も、インサイトの提供もしない。
- Excel の VBA の場合は、標準モジュール、クラスモジュール等 5 種類のモジュールがありますが、いずれも Excel の xlsm ファイルの中にシートのデータと合わして保存され、専用のエディターを使って編集をおこないますが、xlwings
  の場合は、別の独立した Pythonスクリプト (.py) ファイルになります。
- スクリプトが別ファイルになることで、デバッガーがどうなるか心配する人もいるかもしれませんが、xlwings は、デバッグの機能も用意しています
- User has posted articles on various topics including RaspberryPi, Markdown, and
  JavaScript.
- C# is developed by Microsoft and runs on .NET Core.
- C# is widely used for desktop applications, web applications, game development,
  and cloud applications.
- High-speed processing for reading Excel files
- Compatible with both .NET Framework and .NET Core
- Basic installation involves downloading source from python.org and compiling.
- ExcelにPythonを搭載することが検討されている
- Bootstrap 4 Alpha が最初に公開されたのは2015年の8月ですが、それから2年経ってやっと Beta が公開されました。
- Requires setup of connected app in qiita
- DVCでデータとモデルをバージョン管理できる。
- すべてのLLMでPythonが100%選ばれたという事実は、AIがこの言語を「初心者向けの最適解」として強く認識していることを示しています。
- GPT-5は安定志向、Geminiはバランス型、Claudeは教育的な多様性重視のアプローチ。
- Some articles may not include associated tags.
- API responses may vary based on user permissions.
- API has rate limits that need to be managed.
- Input audio file must be in specific formats.
- Rate limits apply based on usage.
- Requires OAuth2 setup with GitHub or Google for login.
- 保存時にisortが自動で実行される
- 現在は完全招待制になっています。
- 同時に生成できるのは5つまで。
- 24時間以内に100件しか生成できないリミット
- Uses API key for authentication — requires setup of LINE official account
- エンドポイントが /callback だから今回の場合はこうなるよ。
- Requires OAuth2 setup.
- Uses OpenAI compatible API server
- Vim is a cross-platform text editor.
- Efficient text editing capabilities for programmers and system administrators.
- vLLMは推論特化です
- 第三次 AI ブームは一般の人たちも巻き込んでいる
- PostgreSQL接続情報は環境変数から取得する必要がある。
- Provides infrastructure, platform, and software services through global data centers
- PostgreSQL connection string is required for database operations.
- Requires setup of API token for authentication
- MySQL is an open-source relational database management system.
- It is widely used in web applications.
- API提供予定
- ER 1.5は空間理解や長期タスク計画に長けたロボットの高次推論モデル
- 公開情報：2025-09-25にGemini Robotics-ER 1.5（プレビュー）がリリース
- Uses standard interface for logging between LLM applications and data sources.
- These cases were mainly collected from social media platforms like Twitter/X and
  小紅書 (RED).
- MCPは主にLLMとデータソース間の通信を標準化することを目的としています。
- ウォーターマーキング技術をMCPと組み合わせることで、コンテンツ自体に追跡情報を埋め込みます。
- Input images must be uploaded in the specified format.
- Prompts can include specific instructions for generating images.
- All posts are solely my personal views and are not related to any organization.
- Images should be uploaded for processing.
- 'Note: Change the text within brackets as necessary.'
- No specific authentication required for accessing the examples.
- Endpoint for following tags and organizations available.
- Requires Google account for sign-in
- Free to use
- 散歩は、お金がかからず・準備もいらず・今日から始められる最強の自己メンテナンスです。
- firebase-admin does not support onSnapshot for real-time listeners.
- API requires authentication to access user-specific data.
- Requires OAuth2 authentication for accessing user-specific data.
- Requires setup of OAuth app in Qiita
- Some API responses may include rate limits
- ファイルを保存しないと変更は反映されません（自動保存ONもおすすめ）
- ローカルサーバーなので、ネット公開はされていません（安心）
- Requires a valid access token to access the API.
- Rate limits apply to API calls.
- AtCoderは、プログラミング問題を解くためのオンラインジャッジサイトです。
- 初心者にとっても非常に良い練習環境
- Various commands can be utilized in Chrome's developer tools.
- API rate limits apply — check documentation for details.
- Campaign runs from 2024/12/26 to 2025/02/12
- CI/CDは網羅的にテストをすることが重要
- Some endpoints may require pagination.
- 手動手順書は人間が書いて人間が実行するため、環境変更の度に更新が必要でした。CI/CDでは、デプロイ手順自体がコードとして管理され、環境変更があれば自動的に検知・反映されます。
- 手動リリースでは「何かあった時に対応できる人員」を確保するため大人数が必要でした。自動化により、日中の業務時間内に1人がボタンを押すだけでリリースが完了します。
- この会社では半年間開発してからテストするため、バグの原因特定が困難でした。CI/CDでは、コードを書く度に自動テストが走り、どの変更が問題を引き起こしたかが明確になります。
- 半年分の変更を一度にリリースすることは、大きな爆弾を抱えるようなものです。CI/CDでは週単位や日単位でリリースするため、問題が起きても影響範囲が限定的です。
- 手動環境では「戻す作業」も複雑な手順が必要でした。CI/CDでは、過去のバージョンがすべて管理されており、問題発生時には数分で元の状態に戻せます。
- この会社のように長時間サービスが止まることで、顧客離れや信頼失墜のリスクがありました。CI/CDでは迅速な復旧により、ビジネスインパクトを最小限に抑えられます。
- 半年に一度の大リリースは、開発者にとって大きなストレスでした。CI/CDにより、リリースが日常的な作業になり、精神的負担が大幅に軽減されます。
- この会社では半年間ユーザーは新機能を使えませんでした。CI/CDにより、競合他社より早く新機能を市場に投入でき、ビジネス優位性を確保できます。
- Uses vitest for testing JavaScript functions and logic
- Public profile data is accessible without authentication.
- Hosting URLをスマホで打ち込めばTodoアプリをスマホからも利用することが可能です！
- Pipeline triggers on push to the main branch.
- Uses GitHub Actions to automate CI/CD.
- SQL is standardized by ANSI and ISO, supported by many databases.
- Complex data operations can be easily performed.
- This tutorial is suitable for beginners.
- CI/CD understanding is essential for modern development.
- Docker Composeは、複数のDockerコンテナを定義・管理するためのツールです。
- Composeファイルを使用することで、ローカル開発環境と本番環境の設定を同一に保つことができます。
- Uses GitHub API for issue management.
- Initial state of todos is an empty array.
- Validation for empty todos is implemented.
- Uses npm for dependency management and Firebase for hosting
- Build and test phases must succeed for deployment to occur
- Uses Next.js and Hono for implementation
- Recommended to use Streamable HTTP transport for MCP communication
- This problem involves calculating the maximum product of consecutive digits in a
  number.
- New API additions do not require modifications to existing code.
- Server runs on port 3001.
- IAMロール + DB権限の設定が必要
- 実行時の「ロールの指定」を忘れると動かない
- 権限を最小限に絞ることでセキュリティを担保できる
- CORS error may occur if the API does not allow requests from http://localhost:3000
- Water-Scrum-Fast is a concept developed for AI-driven development.
- It emphasizes rapid iterations in the implementation phase.
- Geminiを呼び出すにはAPIトークンが必要
- Next.jsを14系に変更しまして治りました
- 15系ではnext-on-pageが対応できていないのかエラーが発生しているようです
- Requires OAuth2 setup for access tokens
- Uses process.env.DB to connect to the database
- Requires drizzle-orm and hono libraries
- スコープが曖昧なままAIに突入すると、必ず迷走します
- Gate 0で作成する「スコープ定義書」は、プロジェクトの憲法です
- React19以降を利用している場合は不要
- AI駆動開発では致命的な設計ミスを避けるため、明確なアーキテクチャを定義することが重要
- AIが生成したコードの品質が不安定で、レビューに時間がかかる
- スプリント計画が従来の2週間では長すぎて、AIの速度に合わない
- 設計ドキュメントが不十分で、AIが迷走してしまう
- 技術的負債が急速に蓄積されていく
- Requires OAuth2 authentication with a valid access token.
- '推奨所要時間: 1-2日'
- '参加者: プロダクトオーナー, テックリード, エンジニア代表 1-2名, デザイナー'
- The API doesn't require authentication.
- Login required to access API endpoints
- Uses OAuth2 with refresh token — requires app registration on Qiita
- API responses may include pagination for large datasets
- Uses static analysis tools for detecting technical debt.
- 全てクリアなら、Gate 2（リリース準備）に進んでOKです。
- APIは認証を必要としない
- Numba のメリットはなんといっても、pythonのコードを手軽に高速化できることです。
- AtCoder への提出は、自分でコンパイルをしてバイナリを提出することで行っています。
- エイリアス mylab で jupyterlab を起動できる
- Uses conda commands to manage environments
- The installation does not prepend Anaconda's path to .bashrc
- Numba JIT can significantly improve performance for Python code.
- Cython is also supported, providing additional options for optimization.
- Numbaは、関数の頭に @jit を付けるだけで使えるが、Python と Numpy の一部の型や関数しか使えないため、Python のように使い易いわけではない。
- Numbaを使う前にNumpyを学習すべき。
- Numbaの典型的な使い方は、2次元配列の高速化のようなケースである。
- Objectモードの場合には毎回コンパイルが走るので、@njitを使うことを勧める。
- To run the provided code, compile with the given commands.
- Ensure to handle rate limits defined in the API documentation.
- xlwings requires Excel to be installed on the same machine.
- Linear APIでタスクステータスを更新
- xlwings allows using Python in Excel via macros and UDFs.
- Requires Excel add-in for full functionality.
- Uses Python libraries for data manipulation and retrieval.
- Requires OAuth2 setup with authorization code flow
- C#は、Microsoftによって開発されたオブジェクト指向プログラミング言語で、.NET Core上で動作します。
- デスクトップアプリケーション、ウェブアプリケーション、ゲーム開発など、多様な用途で広く使用されています。
- クロスプラットフォーム開発も可能です。
- ExcelDataReader is a read-only library and processes data quickly.
- Handles both Excel 2.0 and Open XML formats.
- Make altinstall is recommended to avoid overwriting python3 binary.
- Use ./configure --enable-optimizations for faster processing.
- Pandas is useful for reading and writing Excel files.
- 実データは、Water-Scrum-Fastが単なる理論ではなく、実際に効果を発揮する手法であることを示しています。
- Requires OAuth2 authentication for accessing items and tags.
- AI技術の進化は指数関数的です。
- 開発プロセスが劇的に変わる可能性があります。
- ExcelにPythonが搭載されることについては、驚くべきことではありません。
- Bootstrap 4 Betaでは、公式のビルドツールがGruntを使うのを止めてnpm-scriptsに変更されました。
- npm-scriptsは簡単に書けるのがわかりました。
- Scratch領域を必ず確保（最低15-30%）
- RAGの冗長排除で効率アップ
- 長文ログは要約＋ハンドル化
- 定期的な/compactで健全性維持
- ウィンドウ使用率の継続的モニタリング
- JWT認証を採用 — アクセストークン15分、リフレッシュトークン7日
- DVC allows version control for data and models.
- 'APIレスポンス: 95%ile < 200ms'
- 個人利用からチーム利用への壁がある
- コンテキスト共有の欠如が問題の根本原因
- Uses OAuth2 with authorization code — requires setup of application in Qiita
- ファイルの保存時、最終行に改行を自動で入れてくれる機能
- 不要な末尾の空白を自動で削除してくれる機能
- Uses isort for automatic import sorting on save.
- JWT認証を使用しています。アクセストークンの有効期限は15分、リフレッシュトークンは7日です。
- '段階的に移行: 一度に全てを変えず、1ドメインずつ分離'
- 'チームに周知: 新しい構造を全員で共有し、どこに何があるかを明確に'
- '古いファイルは残す: 移行期間中は旧context.mdも参照できるようにしておく'
- 'リンクを更新: エージェントの設定やREADMEのリンクを新しい構造に合わせる'
- Uses OAuth2 with refresh token — requires setup of LINE Messaging API
- Be aware of rate limits for sending messages
- Linebot requires user authentication for access.
- 個人利用からチーム利用への壁
- コンテキスト共有がないチームでは、4つの典型的な問題が発生します。
- 無料で使える！ただし完全招待制
- 同時生成は5つまで
- 'プロジェクト名: SaaS Platform XYZ'
- 中小企業向けの統合業務管理プラットフォーム
- 'API設計: RESTful API（一部GraphQL検討中）'
- CIパイプラインにコンテキスト検証を組み込むことで、品質を自動的に保証します。
- GitHub Actionsを使ったコンテキスト検証を5分でセットアップできます。
- Requires setup of LINE Official Account
- Use ngrok for local development
- 全員が全てを知る必要がなくなる
- エンドポイントが /callback
- コンテキスト管理を自動化するために、スクリプトを使用します。
- 新メンバーでも、npm run ai:validateと入力するだけで、コンテキストの妥当性を確認できます。
- dt-range library allows iteration over date ranges in various intervals.
- Use --no-deps option to avoid building documentation for dependencies.
- 2024年Q4にβ版リリース予定
- GitHub ActionsでCIパイプラインにコンテキスト検証を組み込むことで、品質を自動的に保証します。
- PRが作成されるたびに、コンテキストの妥当性がチェックされ、問題があれば即座にフィードバックされます。
- Rate limits may apply depending on usage.
- コンテキスト関連の操作を標準化されたnpmスクリプトとして提供することで、「やり方がわからない」という障壁をなくします。新メンバーでも、`npm run ai:validate`と入力するだけで、コンテキストの妥当性を確認できます。
- Vim is a text editor based on the Vi editor with added features.
- Context should be updated immediately after important decisions.
- AI models like Backpropagation and Deep Learning have evolved significantly over
  the years.
- JWT認証を採用
- 'アクセストークン: 15分'
- 'リフレッシュトークン: 7日'
- コンテキストファイルの品質を保つには、人間の目によるレビューだけでは限界があります。
- Rate limiting is enforced on the GitHub API. Make sure to handle rate limit errors.
- 新構造を全員で共有し、どこに何があるかを明確に
- コンテキスト管理を「頑張って手動で更新する」だけでは、いずれ破綻します。
- This documentation serves as an introductory guide to neural networks.
- ヒトの脳内では、何百億個ものニューロンが情報のやり取りをしている
- ディープラーニングは中間層の層の数を増やすことによって実現される
- MySQL is an open-source relational database management system (RDBMS) that uses
  SQL to manage data.
- MySQL is widely used in web applications due to its reliability and performance.
- コンテキスト管理を「頑張って手動で更新する」だけでは、いずれ破綻します。検証、生成、検索といった定型作業は、スクリプトで自動化し、開発者は本質的な内容の改善に集中すべきです。
- Initial rollout in the US and Canada
- Future API availability planned
- Ensure to keep the context updated regularly.
- Important changes should always be documented.
- ER 1.5は空間理解や長期タスク計画に特化したモデルです。
- 2025年9月25日にGemini API（プレビュー）として公開されました。
- API allows for image uploads and transformations
- シンプルで理解しやすい
- Gitでバージョン管理できる
- 人間が中間成果物をレビュー可能
- 手動での受け渡しが必要
- ファイル名の命名規則が重要
- エージェント間で情報を渡す方法が重要
- ハイブリッドアプローチが最も実用的
- Multi-agent systems require careful orchestration for efficiency.
- マルチエージェントアプローチは大規模開発の必然です
- 各エージェントが専門領域に集中することで品質が向上する
- 最も頻繁に起こる問題——マージ競合の対処法を知っておきましょう。
- 多くのチームが、この30分の投資で、開発効率が20-30%向上したと報告しています。
- firebase-admin does not support onSnapshot for real-time updates.
- マルチエージェントアプローチは、単なる「数の増加」ではなく、「質的な変化」をもたらす
- API does not require authentication for basic access
- Some endpoints might have rate limits
- エラーハンドリングを追加
- トランザクション処理が必要
- Requires user to be logged in to participate
- Uses YAML definitions for workflow execution
- Optimizations can lead to significant performance improvements
- AtCoderは競技じゃない、実践教材だ。
- 特に「APG4b」から始めて、ABCの過去問を少しずつ解いていけば、自然とPythonの書き方や考え方が身についていきます。
- マルチエージェントは選択肢ではなく、大規模開発の必然です。
- Uses HTML/CSS and PHP for theme development.
- Various commands are available for different functionalities.
- Uses multi-agent architecture for efficient development
- Emphasizes parallel execution for time-saving
- Campaign participation requires logged-in users
- レガシーモダナイゼーションは、分析と設計に時間をかけることで、実装フェーズを大幅に短縮できる。
- Uses a simple REST API for task management.
- 複数のエージェントを協調させる設計と実装に関する記事
- API requires authentication and supports various endpoints.
- API provides user contributions and following information.
- SQL is a standard programming language for managing and manipulating relational
  databases.
- Login required to access API endpoints.
- EntityListBuilder can be extended for custom entities.
- Docker Compose allows management of multiple containers with a single YAML file.
- Commands like docker-compose up and docker-compose down can operate all defined
  services.
- 失敗から学ぶ。最初の試みは実験と割り切る。
- エージェント間の情報受け渡しが重要です。
- Some API endpoints may require specific permissions.
- This problem involves finding the maximum product of 13 consecutive digits in a
  1000-digit number.
- 大規模なタスクは、適切に分割することで、驚くほど高速化できる。
- API契約を最初に定義することで、サービス間の依存を最小化し、並列開発が可能になる。
- Each Processor is treated as a singleton in the service container.
- エラーは必ず起きます——適切なハンドリングとリトライ戦略が必須です。
- Requires login to access user-specific data.
- IAM role configuration is necessary for querying and scheduling.
- Permissions must be minimal for security.
- Requires OAuth2 authentication for data access.
- プロジェクトの憲法としてスコープ定義書を作成することが重要
- 非機能要件の定義を忘れないこと
- 完璧を目指さず、まず始めましょう。小さな一歩が、大きな変化につながります。
- AIにとりあえず作らせてみようという衝動に駆られる気持ちは分かりますが、スコープが曖昧なままAIに突入すると、必ず迷走します。
- AIエージェントが期待通りに動かない時の診断と対処法に焦点を当てています
- レビュー待ち時間が長い（平均2時間）
- プロジェクトが成長し、チームが拡大すると、運用上の問題が顕在化します。
- 問題が発生したとき、闇雲に対処するのではなく、体系的なアプローチに従うことで、効率的に根本原因を特定できます。
- エージェントの最も厄介な問題の一つが「コンテキスト汚染」です。
- 長時間のセッションや複数タスクの連続実行により、異なる文脈の情報が混ざり合ってしまう現象です。
- コンテキスト汚染を早期に発見するために、自動検出ツールを活用しましょう。
- 測定できないものは改善できないという原則に従い、まずはパフォーマンスを定量的に測定します。
- 最初は5秒だったのに、今は30秒かかる — これは偶然ではありません。
- Gate 0は1-2日投資することで、Build Phaseでの迷走を防げる
- AIエージェントは必ずしも期待通りに動作するとは限りません。
- デバッグなしの開発は、暗闇で手探りするようなものです。
- AI駆動開発では設計が重要
- AIが指示通りに実装するが全体的な設計思想は理解していない
- コーディング規約とAIガイドラインが重要
- AIとのペアプログラミング実践パターンは3つのスタイルがある
- 技術的負債の早期検知方法には自動検知ツールを活用することが推奨される
- 技術的な制約を無視すると、必ず痛い目に遭います。
- トークン数、レート制限、メモリ——これらの制約を理解し、適切に管理することが重要です。
- コンテキスト汚染は複数のタスクを連続して実行すると発生する。
- エージェントの応答が遅くなった、タイムアウトが頻発するようになった場合は測定し、分析し、最適化することが必要。
- 即座にレビューする文化を作る
- PRサイズの上限を設定（200行以下推奨）
- テストなしのコミットは禁止
- CI/CDでテストカバレッジをゲート条件に
- 実装と同時にドキュメント更新
- ADRで重要な判断を記録
- AIにとりあえず作らせてみようという衝動に駆られる気持ちは分かります。しかし、スコープが曖昧なままAIに突入すると、必ず迷走します。
- Gate 0の目的は、AIが迷わないレベルまでスコープを具体化することです。
- 設計書はAIが参照できる実行可能なドキュメント
- 重要な判断があった場合はADRを追加
- AIが作ったコードだからすぐリリースは危険です。
- AI開発では特に忘れられがちな非機能要件を定義することが重要
- AIとのペアプログラミング実践パターンが記載されている
- Uses a structured agenda for weekly retrospective meetings.
- Monthly reviews focus on strategic adjustments.
- Dashboard provides metrics about context health including token counts, contradictions,
  and stale files.
- AI時代の開発手法の一つの解
- 長時間のセッションは、コンテキスト汚染の温床です。
- AIモデルには物理的な限界があります。トークン数、レート制限、メモリ——これらの制約を理解し、適切に管理することが重要です。
- プロジェクトが成長し、チームが拡大すると、運用上の問題が顕在化します。バージョン管理、チーム共有、継続的改善——これらを怠ると、カオスに陥ります。
- 「治療より予防」という原則は、デバッグにも当てはまります。問題が発生してから対処するのではなく、問題が起きにくいシステムを構築することで、デバッグの労力を大幅に削減できます。
- 'DB クエリ: N+1問題を避ける'
- API access requires an OAuth2 token.
- コンテキストを適切に共有することで、チーム全体のAIエージェント活用が次のレベルに到達します。
- 個人の生産性向上だけでなく、チーム全体としての一貫性、効率性、品質のすべてが向上します。
- 'アクセストークン: 15分、リフレッシュトークン: 7日'
- API requires user authentication to access data.
- Rate limits apply for API requests.
- 新メンバーのオンボーディングは、チームの生産性を測る重要な指標です。
- 適切に整備されたコンテキストがあれば、新メンバーは「何から学べばいいか」が明確になり、自律的にキャッチアップできます。
- コンテキスト管理の複雑さが指数関数的に増加します。
- チーム全員が一貫した前提で開発できる環境を構築する必要性
- JWT有効期限を24時間→15分に変更
- Redis導入
- GitHub Actionsでのコンテキスト検証を5分でセットアップできます
- 段階的に移行 — 一度に全てを変えず、1ドメインずつ分離
- チームに周知 — 新しい構造を全員で共有し、どこに何があるかを明確に
- OAuth2.0に関する情報が含まれています
- Requires user to be logged in to participate in campaigns.
- PostgreSQLは、オープンソースのリレーショナルデータベース管理システム（RDBMS）です。高い拡張性と標準への準拠、信頼性と性能を特徴としています。
- コンテキストファイルの品質を保つには、人間の目によるレビューだけでは限界があります
- CIで自動的に検出できます
- コンテキストオーナー制による明確な責任分担が必要
- ADRによる重要な決定の記録が必須
- 初回セットアップは5分で完了します。
- 'トラブルシューティング: command not found: tsx - tsxがインストールされていない'
- OAuth2 setup required for access to user data
- '認証: JWT（アクセストークン15分、リフレッシュトークン7日）'
- '暗号化: すべての機密データはAES-256'
- コンテキストが共有されていないチームでは、知識の分断や重複作業が発生する
- 効果的なコンテキスト共有には、適切なレイヤー分けが不可欠
- Requires setup of AWS account and permissions
- 非同期コミュニケーションをコンテキスト化
- タイムゾーン情報をコンテキストに含める
- Requires user authentication to access user-specific data.
- メールアドレスなどの登録も不要で、パスワード設定のみですぐに取得できるため大変簡単です。
- 更新も不要、料金も永久無料なので、テストサイトを公開してみたいとか、学習用などに使用するのにおススメだと思います。
- Requires OAuth2 authentication to access user-specific data
- Dual-ACT構成では、Weight操作とヘルスチェック状態の両方を考慮
- 正当な視聴者のみがアクセスできる仕組みが必要
- Rate limits are applied, consider implementing exponential backoff.
- Ensure to authenticate before accessing private repositories.
- ドメイン移管元のAWSアカウントが存在していること。また、このアカウントのRoute 53でドメインを取得済みであること
- ドメイン移管先のAWSアカウントが存在していること
- ドメインの移管には料金はかかりません。
- ホストゾーンは移管されません。
- ホストゾーンの移管は手動じゃなくてコマンドで実施することをお勧めします
- 検証、生成、検索といった定型作業は、スクリプトで自動化し、開発者は本質的な内容の改善に集中すべきです。
- User data is public and does not require authentication.
- 個人からチームへスケールアップする際の課題と解決策を扱います。
- Uses GitHub Actions for context validation
- Automatically checks for Markdown syntax errors and required sections
- Non-synchronous communication is essential for remote teams.
- All important decisions should be documented in context files.
- Uses e2-micro instance type in us-west1 region for free tier.
- Boot disk is limited to 30GB and must be of type standard.
- Docker version 28.4.0, build d8eb465
- Docker Compose version v2.39.4
- Ensure context is updated promptly after important decisions.
- Record reasons for changes to enhance organizational learning.
- Include specific examples to clarify principles.
- Nginx can manage server certificates centrally for containerized applications.
- コンテキストファイルは、全メンバーのAIエージェントが読み込む「プログラムの入力」です。
- 不適切なコンテキスト変更は、全メンバーのエージェント出力に影響を与える可能性があります。
- GCE offers a permanent free tier that includes specific machine types and configurations.
- Docker version 28.4.0 is installed.
- Docker Compose version v2.39.4 is installed.
- Uses a hybrid architecture for agent coordination.
- 証明書の有効期限が3ヶ月と短く、定期的な更新が必要
- 証明書を自動的に更新するプログラムも利用できる
- 独自ドメインの取得にはお金がかかります。
- 更新忘れでドメインを失効するリスクがありますので、自動更新もONにしました。
- プライバシーの保護が有効になっていることを確認すること
- TLDによっては仕様差があります（例：.jp は非対応）
- 複数のエージェントを協調させ、最大のパフォーマンスを引き出すための実践的アプローチ
- Some fields may return nulls
- Claude Codeで構造を作り、Cursorで実装を埋める——効率的な二段構えです。
- 依存関係のないタスクは、Claude CodeとCursorで並列実行できます。テスト作成と実装を同時進行することで、時間を節約できます。
- 既に同じレコードが存在するというエラーが発生することがある
- Terraform Planの表示と実際の挙動のギャップ
- Terraformの`plan`が示す内容と、実際の`apply`の挙動にギャップがある
- Uses a multi-agent architecture for efficient task handling.
- Cross-region references require specific configurations in CDK
- Authentication logic needs to be implemented.
- Registration logic needs to be implemented.
- Token validation logic needs to be implemented.
- Requires OAuth2 authentication to access the API
- 2つのツールで異なる実装パターンが使われる——一貫性を保つ方法です。
- 複雑なワークフローを制御する——依存関係の明示化と自動化が鍵です。
- Requires login to access user-related data.
- 掲載内容はあくまで個人の見解であり、所属組織を代表するものではありません。
- なお、掲載した内容を実践したことによって損害が生じた場合でも、一切の責任を負いかねます。
- Uses parallel execution for agents — optimize for performance.
- Latency Based Routing optimizes user experience based on network latency.
- Geolocation Routing provides regional control based on client IP.
- 実際のプロジェクト開発では、完全な直列でも完全な並列でもありません。
- Uses YAML for workflow definitions.
- Stages include design, database, implementation, integration, testing, and review.
- API supports OAuth2 authentication.
- Requires OAuth2 token for all requests
- Ensure the token is refreshed regularly to avoid authentication failures
- Requires OAuth2 authentication via GitHub or email.
- Uses a hybrid approach combining pipeline and parallel execution.
- .clickが頭一つ抜けて安いことがわかります。
- コストを最優先するなら、Route 53の.clickドメインは最高の選択肢
- Requires OAuth2 authentication to access user and item data.
- Requires OAuth2 authorization for API access
- 最も深刻な問題——認識のズレは、矛盾した実装を生みます。
- The commands provided are for Linux systems.
- デバッグなしの開発では問題の根本原因を特定できない
- トークン数、レート制限、メモリの制約を理解し、適切に管理することが重要
- AIエージェントの最も厄介な問題の一つが「コンテキスト汚染」です。複数のタスクを連続して実行すると、前のタスクの情報が次のタスクに混入し、不適切な提案を引き起こします。
- エージェントが期待通りに動作しない時の診断と対処法に焦点を当てる
- デバッグすることで問題の根本原因を特定し再発防止策を講じる
- AIエージェントの「おかしな動作」を診断・修正・予防するための実践的トラブルシューティング
- 週に一度、コンテキストの健全性をチェックする習慣をつけましょう。このチェックリストに従えば、情報の鮮度、品質、最適性を維持できます。
- これらのツールは、実際のプロジェクトで磨かれた、実戦投入可能なものです。そのままコピー&ペーストしても動作します。
- 自動修正は慎重に——必ずレビューしてからコミットしましょう。
- 8時間ぶっ通しで使っている——人間でさえ集中力が続かないのに、エージェントが大丈夫なはずがありません。
- コンテキスト汚染が発生すると、エージェントは現在のタスクとは無関係なコードや概念を混入させます。
- 問題が発生してから対処するのではなく、問題が起きにくいシステムを構築することで、デバッグの労力を大幅に削減できます。
- Weekly maintenance is recommended to ensure context health.
- Metrics such as token count and contradictions should be monitored.
- デバッグを恐れるな、楽しめ。
- 15年を標準的リスク評価期間として採用
- 量子計算機による暗号脆弱化は15年以内に現実的脅威
- Requires User authentication via OAuth2.
- Uses OAuth2 for authentication.
- Requires logged in for participation.
- PostgreSQLは、オープンソースのリレーショナルデータベース管理システム（RDBMS）です。
- 高い拡張性と標準への準拠、信頼性と性能を特徴としています。
- Uses OAuth2 with refresh token — requires setup of connected app in MCP
- Some features may not yet be fully implemented
- Public user profile, no authentication required.
- No authentication required for public data access.
- Amazon Elastic Compute Cloud（EC2）は、Amazon Web Services（AWS）が提供するクラウドベースの仮想サーバー（インスタンス）を利用できるサービスです。
- NSレコードは他のレコード/サブドメイン/ワイルドカードと同時に使用できません。
- Aレコードタイプが作成されます
- 反映にしばらく時間が掛かりますが、（10分～15分程度？）ドメイン名でWEBページにアクセスが出来るようになります
- Some endpoints may require specific user permissions.
- WBC配信は有料サービスのため、正当な視聴者のみがアクセスできる仕組みが必要です。
- 不正アクセスを遮断しながら、正当な視聴者には遅延なく配信を提供できます。
- No authentication required.
- 移管元のAWSアカウントが存在していること。また、このアカウントのRoute 53でドメインを取得済みであること
- 移管元AWSアカウントで以下のいずれかの権限を保持しているユーザアカウントで操作可能なこと
- ホストゾーンは移管されませんが、DNSの名前解決には影響が生じません
- TTLを60秒~900秒に設定することが推奨されています
- Uses OAuth2 with refresh token — requires setup of application in Qiita
- Some API responses may contain null values for optional fields
- Data may vary based on user permissions and setups.
- リージョン：us-west1(オレゴン)
- マシンタイプ：e2-micro
- ブートディスク：Ubuntu 24.04 LTS Minimal
- ブートディスクの種類：標準永続ディスク
- ブートディスクの容量：30GB
- 正しくインストールできるとDockerのバージョン28.4.0がインストールされます。
- 初回はdockerイメージファイルをダウンロードするため、少し時間が掛ります。
- GCEでは外部IPが無料で利用できますが、こちらはエフェメラルとしてインスタンス起動時に一時的に割り当てられるIPアドレスです。
- 外部IPでもインターネット通信は可能ですが、ドメインに割り当てたり、サーバ証明書を設定する際には固定の静的外部IPアドレスが必要です。
- 外部IP(エフェメラル)は静的外部IP(Static)にオンライン中に昇格できるので、以下のメニューか実施します。
- GCEの永久無料枠があるため、小規模な仮想コンピュータを無料で利用可能
- 仮想メモリは「swapon —show」コマンドで確認できるので、確認してみます。
- 一般ユーザから仮想メモリファイルを壊されてはいけないので、/swapfileはrootのRead/Write可能(chmod 600 /swapfile）に設定しておきます。
- DockerのGPGキーをインストールして、Dockerのリポジトリから最新版を導入する必要があります。
- 途中で継続するかキャンセルするかを「Press [ENTER] to continue or Ctrl-c to cancel.」というメッセージで質問されますのでEnterキーを押します。
- Nginx container serves as a front to manage server certificates.
- 最近は証明書を自動的に更新するプログラムも利用できるので、そちらを活用するのが良い
- Utilizes AWS services for domain registration and DNS management
- Domain registration requires payment for the service
- 必ず「プライバシーの保護」が有効になっていることを確認しましょう。有効にすることで、ドメイン登録者の個人情報が公開されないようになります。
- 多くのTLDでは保護されますが、TLDによって仕様差があります（例：.jp は非対応）
- Requires setup of OAuth2 application on Qiita
- エラーの原因は、Terraform（およびAWS API）が「加重レコード」から「シンプルレコード」への変更をアトミックな「更新(Update)」として扱えない
- Requires creation of log group in Virginia region.
- CDK simplifies cross-region configuration.
- No data available for answered questions.
- API access requires user authentication.
- Requires login to access user-specific data
- Some objects like contributions may return nulls in deeply nested fields
- 掲載内容はあくまで個人の見解であり、所属組織を代表するものではありません
- レイテンシーベース：速さ重視
- 位置情報：場所重視
- Requires OAuth2 authentication to access user and article data.
- Public API, no authentication required.
- .click domain is available for $3 annually
- The API may limit the number of requests per hour.
- Requires user authentication to access the API.
- Requires OAuth2 authentication with access token
- 高いスケーラビリティと可用性：大規模なデータベース環境でも高いパフォーマンスを発揮し、24時間365日の稼働をサポート。
- 高度なセキュリティ機能：データの暗号化、アクセス制御、監査機能など、高度なセキュリティ機能を提供。
- Commands may require root privileges for certain operations.
- Ensure to handle errors gracefully for commands that may fail.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'CONNECTION_REFUSED: Check SNMP service on the target'
- 'TIMEOUT: Ensure the target is reachable and SNMP is enabled'
- 'Invalid IP address format: Ensure the IP address is correctly formatted.'
- 'Port range out of bounds: Port numbers must be between 1 and 65535.'
- 'Invalid IP address: Ensure the target IP is valid.'
- 'Permission denied: Check user permissions for executing scans.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Could not connect to LDAP on 389/tcp: connection refused'
- 'Could not connect to LDAPS on 636/tcp: connection refused'
- SMB is accessible on 445/tcp
- 'ERROR: Script execution failed'
- 0% packet loss indicates successful communication
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'sslv2-drown: ERROR: Script execution failed (use -d to debug)'
- 'Invalid IP address: Check the format of the IP address.'
- 'Permission denied: Ensure you have the necessary permissions to execute a scan.'
- 'ERROR: Script execution failed (use -d to debug)'
- 'TIMEOUT: Increase timeout duration for slow responses'
- 'Connection Timeout: Check your network settings.'
- 'Invalid Command: Ensure usage syntax is correct.'
- 'Invalid target specification: Ensure correct format for IP addresses or networks'
- 'Scan failed: Check network connectivity or permissions'
- 'NmapError: Unable to access the target host.'
- 'NmapTimeout: The scan took too long to complete.'
- Exit status 1 if the number of responding hosts is less than the limit.
- '0: Success'
- '1: Operation not permitted'
- '2: No such file or directory'
- 'Invalid target: Ensure the target IP address is correct.'
- 'Permission denied: Run the command with sufficient privileges.'
- Invalid filter specified
- File not found
- 'Invalid interface: Ensure specified interface is available.'
- 'File not found: Ensure the specified keyfile exists.'
- 'No input file specified: Provide a valid pcap file'
- 'Invalid command: Check the syntax or options used'
- 'Permission denied: Run as administrator or root.'
- 'Command not found: Ensure the tool is installed.'
- 'Timeout: The target did not respond in time.'
- 'HOST_UNREACHABLE: The target host is unreachable.'
- 'PROTOCOL_UNSUPPORTED: The protocol used is not supported by Nmap.'
- 'Invalid command line options: Check usage instructions.'
- 'Unable to connect: Check the target IP address.'
- 'Timeout: Increase the timeout value for slow networks.'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: Retry the request.'
- 'INVALID_MODE: Specified mode is not supported.'
- 'DEVICE_NOT_FOUND: Specified network device not found.'
- 'Invalid IP address: Ensure the target IP is valid'
- 'Timeout: Check network connectivity and firewall settings'
- 'Timeout: Check the timeout setting.'
- 'Invalid configuration: Verify the config path.'
- 'Insecure connection: Ensure the server is secure.'
- 'LDAP_CONNECTION_REFUSED: Could not connect to LDAP on 389/tcp'
- 'SMB_CONNECTION_REFUSED: Could not connect to SMB on 445/tcp'
- 'INVALID_ARGUMENT: Check the provided command line arguments.'
- 'INVALID_ARGUMENT: Check the syntax of your command'
- 'HOST_UNREACHABLE: Target host is not reachable'
- 'FILE_NOT_FOUND: Ensure the capture file exists'
- 'PERMISSION_DENIED: Check user permissions for accessing network interfaces'
- 'Invalid interface specified: Choose an existing network interface.'
- 'Packet capture failed: Ensure you have the necessary permissions.'
- 'FILE_NOT_FOUND: Ensure the specified input file exists.'
- 'INVALID_FILTER: Check the syntax of the provided BPF filter.'
- 'Connection refused: Check service availability.'
- 'Invalid login message: Ensure correct credentials.'
- '404 Not Found: Check the endpoint path.'
- '500 Internal Server Error: Server encountered an unexpected condition.'
- 'Error: Invalid interface specified.'
- 'Error: Packet capture failed.'
- '404 Not Found: Check the endpoint path or parameters.'
- '500 Internal Server Error: Server-side issue, try again later.'
- '401 Unauthorized: Recheck login credentials'
- 'TARGET_TIMEOUT: Specifies the maximum amount of time in minutes that a target should
  be scanned for before abandoning it'
- 'NmapScanError: Unable to complete scan due to network issues.'
- 'NmapTimeout: Scan timed out, consider increasing timeout settings.'
- 'ERROR: Invalid argument provided.'
- 'ERROR: Permission denied while accessing certain features.'
- 'Usage: tcpick [ -a ] [ -n ] [ -C ]'
- 'Usage: tcpreplay [ -<flag> [<val>] | --<name>[{=| }<val>] ]... <pcap_file(s)> |
  <pcap_dir(s)>'
- 'Connection failed: Check if the target is reachable.'
- 'Authentication failed: Verify credentials if applicable.'
- 'Invalid IP address: Ensure the target IP is correct.'
- 'Timeout: Increase timeout settings for slow responses.'
- 'FILE_NOT_FOUND: Ensure the capture file exists.'
- 'PARSE_ERROR: Check the format of the input file.'
- 'FILTER_ERROR: Check your filter syntax.'
- 'INTERFACE_ERROR: Ensure the specified interface is valid.'
- 'TIMEOUT: Increase the timeout duration or check the server status.'
- 'INVALID_FORMAT: Ensure the input format is correct.'
- 'ERROR: No route to host: Verify the target IP address.'
- 'ERROR: Permission denied: Run Nmap with root privileges for certain scans.'
- 'NmapError: Invalid command line options provided.'
- 'ConnectionTimeout: Unable to connect to the target host.'
- 'File not found: Ensure the input file exists'
- 'Invalid format: Check the format of the input file'
- '401 Unauthorized: Recheck Basic authentication credentials'
- 'Invalid domain: Check the domain format'
- 'Rate limit exceeded: Reduce the number of requests'
- 'Invalid interface: Ensure the specified interface is available.'
- 'File not found: Check the path to the pcap file.'
- 'Invalid interface: Ensure the specified network interface exists'
- 'INVALID_OPTION: Check the provided options and try again'
- 'TIMEOUT: Increase the delay or check the connection'
- 'Invalid target IP: Ensure the target IP address is valid.'
- 'Scan failed: Check if the target is reachable.'
- 'FILE_NOT_FOUND: Ensure the input file exists.'
- 'INVALID_FILTER: Check the syntax of the filter provided.'
- 'INVALID_PARAMETER: Check the command line arguments.'
- '401 Unauthorized: Check your username and password'
- '404 Not Found: Ensure the endpoint URL is correct'
- 'Invalid command: Ensure the command syntax is correct.'
- 'Device not found: Verify the specified network device is available.'
- 'TIMEOUT: Request took too long to complete'
- 'INVALID_ARGUMENT: Check the provided arguments for errors'
- 'Invalid option: Check command syntax or available options.'
- 'Network unreachable: Ensure the target network is accessible.'
- 'Invalid interface specified: Check the interface name.'
- 'File not found: Ensure the pcap file exists.'
- '401 Unauthorized: Check your credentials'
- '403 Forbidden: Access denied'
- 'ACCESS_DENIED: Check user permissions'
- 'CONNECTION_TIMEOUT: Ensure server is reachable'
- 'INVALID_CREDENTIALS: Verify username and password'
- 'Invalid target: Ensure the target is a valid IP address or hostname.'
- 'SCRIPT_EXECUTION_FAILED: Use -d to debug.'
- 'REQUEST_TIMEOUT: Check network connectivity.'
- 'Invalid target: Check the IP address or hostname'
- 'Permission denied: Run as root for certain scans'
- No errors specified.
- 'Invalid interface specified: Use -i to specify a valid network interface.'
- 'Permission denied: Run tcpdump with elevated privileges.'
- '401 Unauthorized: Invalid username or password.'
- '404: Page not found'
- '403: Forbidden'
- Exit after the specified number of hosts have responded.
- 'Invalid port specification: Ensure the ports are formatted correctly.'
- 'Host unreachable: Check network connectivity.'
- 'ERROR: Script execution failed: use -d to debug'
- 'NETWORK_UNREACHABLE: Verify server IP address'
- 'Permission Denied: Ensure you are running with the necessary privileges.'
- 'Invalid Argument: Check the command syntax and provided parameters.'
- '404: Not Found'
- 'REQUEST_TIMEOUT: Increase timeout or check network connectivity'
- 'INVALID_ARGUMENT: Check the command syntax or parameters'
- 'Could not connect to LDAP: connection refused'
- 'Could not connect to LDAPS: connection refused'
- 'TIMEOUT: The request took too long to respond.'
- 'INVALID_ARGUMENT: Check the input parameters.'
- 'No targets specified: At least one target must be specified.'
- 'TIMEOUT: Increase the timeout value with -timeout.'
- 'INVALID_DOMAIN: Check if the domain is registered.'
- 'Invalid option: Ensure command line options are correct.'
- 'Timeout: Increase timeout value for slow networks.'
- '401 Unauthorized: Recheck credentials'
- '404 Not Found: Resource not found'
- 'ERROR: Invalid input - Check command syntax.'
- '401 Unauthorized: Invalid username or password'
- '404 Not Found: Endpoint does not exist'
- 'ERROR: Unable to connect to the target host.'
- 'ERROR: Scan timed out.'
- 'Invalid domain: Check the domain format.'
- Invalid IP address/range specified
- Port range is invalid
- '403 Forbidden: Access denied to the share'
- 'Nmap Error: Unable to connect to the specified host'
- 'Nmap Error: Permission denied on the target machine'
- '400 Bad Request: Check the input parameters.'
- '401 Unauthorized: Verify login credentials.'
- 'Connection timeout: Check target IP address or network availability.'
- 'INVALID_MODE: Check the specified mode in the command.'
- 'TARGET_NOT_FOUND: Ensure the target IP address is reachable.'
- 'PERMISSION_DENIED: Check if you have sufficient privileges to run the scan.'
- '404: Resource not found'
- '403: Forbidden access'
- '401 Unauthorized: Check username and password'
- '404 Not Found: Ensure the endpoint is correct'
- '500 Internal Server Error: Contact support'
- '404 Not Found: Check the domain name or URL format'
- '404: Resource not found.'
- '403: Access forbidden.'
- 'TIMEOUT: Page took too long to load'
- 'DNS_ERROR: Unable to resolve the domain'
- 'Timeout: No response from the target.'
- 'Connection refused: The target is not reachable.'
- '401 Unauthorized: Check credentials and permissions.'
- '503 Service Unavailable: Ensure the service is running.'
- 'Invalid option: Check the command syntax.'
- 'Permission denied: Ensure you have the necessary permissions to capture packets.'
- 'Invalid arguments: Check your command syntax.'
- 'Permission denied: Run with elevated privileges.'
- '400 Bad Request: Check the parameters provided.'
- '403 Forbidden: Ensure you have the right permissions.'
- '404 Not Found: Verify the endpoint URL.'
- 'INVALID_OPTION: Check your command options and syntax'
- 'DEVICE_NOT_FOUND: Ensure the specified network device is available'
- 'Invalid option: Check the usage details for valid commands.'
- 'Connection failed: Check IP address and network connectivity'
- 'Permission denied: Check user permissions on SMB share'
- 'Invalid domain name: Check input format.'
- '401 Unauthorized: Recheck user credentials or permissions'
- '403: Protected resource - check permissions'
- 'DNS Timeout: Investigate possible connectivity issues'
- '401 Unauthorized: Check your API key'
- '404 Not Found: The requested IP address is invalid'
- 'INVALID_ARGUMENT: Check input parameters for correctness'
- 'TIMEOUT: Increase the timeout setting or check network connectivity'
- '429 Too Many Requests: Reduce the frequency of requests.'
- '404 Not Found: Check the endpoint URL'
- 'Invalid target specification: Ensure valid IP address or range.'
- 'Rate limit exceeded: Adjust packets-per-second rate.'
- 'FILE_NOT_FOUND: Check if the input file exists.'
- 'PARSE_ERROR: Ensure the input file format is correct.'
- 'Nmap timeout: Check network connectivity or target availability.'
- 'Permission denied: Run as root for certain operations.'
- '404 Not Found: The requested resource does not exist'
- '401 Unauthorized: Check API key validity'
- '429 Too Many Requests: Rate limit exceeded'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '200: Successful request'
- 'FILE_NOT_FOUND: Ensure the file path is correct.'
- 'INVALID_FORMAT: Check the file format compatibility.'
- '403: Protected resource - check access permissions.'
- 'RATE_LIMIT_EXCEEDED: Reduce the number of concurrent requests'
- 'Permission denied: Check access rights'
- '200: Found'
- '429 Too Many Requests: Rate limit exceeded, try reducing the number of requests.'
- 'Invalid options provided: Check the command syntax.'
- Throttle API calls or reduce frequency
- Break down filters or add selectivity
- '403 Forbidden: Check permissions'
- '404 Not Found: Verify the endpoint URL'
- '500 Internal Server Error: Try again later'
- 'Timeout: default is 5m0s.'
- 'Insecure connection: allow insecure server connections.'
- 'ERROR: Connection timed out'
- 'ERROR: No route to host'
- 'ERROR: Permission denied'
- '401 Unauthorized: Check authentication headers.'
- '403 Forbidden: Access denied to the requested resource.'
- 'Invalid target: Ensure the target is reachable'
- 'Timeout: Target took too long to respond'
- 'INVALID_OPTION: Check your command line options.'
- 'CONNECTION_TIMEOUT: Ensure the target address is reachable.'
- 'Scan timeout: Break down filters or reduce scan range.'
- 'File not found: Ensure the file path is correct.'
- 'Invalid file type: Check supported file formats.'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'TIMEOUT: Increase timeout value or check the server status'
- 'Invalid arguments: Ensure all command line options are correct.'
- 'TIMEOUT: The request timed out.'
- 'INVALID_IMAGE: The specified image could not be found.'
- 'INVALID_IP: Check your IP address format.'
- 'TIMEOUT: Increase scan timeout or check network connectivity.'
- 'Invalid option: Check command syntax'
- 'Permission denied: Ensure appropriate privileges'
- '403 Forbidden: Check permissions or access rights.'
- '404 Not Found: Ensure the URL is correct.'
- 'Invalid interface: Ensure the specified network interface exists.'
- 'Capture timeout: Ensure sufficient time is allocated for packet capture.'
- 'Host Unreachable: The target host is not reachable.'
- 'Permission Denied: You do not have permission to access the specified resource.'
- '404 Not Found: Check the endpoint URL.'
- '500 Internal Server Error: Try again later.'
- 'Invalid domain name: Ensure the domain is formatted correctly.'
- 'FILE_NOT_FOUND: Ensure the file path is correct'
- 'UNSUPPORTED_FORMAT: Check if the file type is supported'
- 'Query timeout: Wait a maximum of n seconds for reply (default: 5)'
- '404 Not Found: Check the URL'
- 'INVALID_OPTION: Check command-line options for errors'
- 'INTERFACE_NOT_FOUND: Ensure the specified interface is available'
- Recheck OAuth scopes or token expiration
- 'INVALID_ARGUMENT: Check the syntax of the provided options.'
- 'TIMEOUT: The operation took too long to complete.'
- '401 Unauthorized: Recheck username and password'
- 'Invalid IP address: Check the format of the IP address provided.'
- 'Permission denied: Ensure Nmap has the necessary permissions to run.'
- 'No data found: Verify input file path'
- '401 Unauthorized: Recheck username or password'
- 'Connection refused: Could not connect to specified port.'
- 'Invalid parameter: Check the command-line options.'
- 'SCAN_TIMEOUT: Increase timeout for larger networks.'
- 'REQUEST_LIMIT_EXCEEDED: Reduce scan speed or target fewer hosts.'
- 'DOMAIN_NOT_FOUND: Check the provided domain'
- 'USER_NOT_FOUND: The specified user does not exist.'
- 'SERVER_ERROR: The server encountered an error processing your request.'
- 'ERROR: Invalid syntax. Please check the command structure.'
- 'ERROR: Permission denied. Run with elevated privileges.'
- 'Invalid URL: Ensure the target URL is correct.'
- 'INVALID_ARGUMENT: Check the parameters provided for the command.'
- 'HOST_UNREACHABLE: The target host is not reachable.'
- 'TIMEOUT: The operation timed out.'
- 'INVALID_MODE: Check the specified mode.'
- 'DEVICE_NOT_FOUND: Ensure the network device exists.'
- 'File not found: Ensure the file path is correct'
- 'Unsupported file type: Check the file format'
- '404 Not Found: The requested log file does not exist.'
- 'Invalid option: Check the syntax for the command'
- 'Permission denied: Ensure you have the necessary permissions to run the tool'
- 'INVALID_EMAIL: Check the email format.'
- 'TIMEOUT: Increase the timeout value.'
- 'UNKNOWN_HOST: Verify the host address.'
- 'Query timeout: 5 secs'
- 'INVALID_COMMAND: Check syntax and options'
- 'INTERFACE_NOT_FOUND: Verify network device availability'
- 'No traffic detected: Ensure the network interface is active.'
- 'Invalid filter: Check your filter syntax.'
- 'AUTHENTICATION_FAILED: Check username and password.'
- 'DIRECTORY_NOT_FOUND: Ensure the directory exists.'
- 'FILE_NOT_FOUND: Ensure the file exists.'
- '404 Not Found: Check the URL provided.'
- '500 Internal Server Error: Server encountered an error.'
- 'CONNECTION_TIMEOUT: Server not reachable.'
- 'AUTHENTICATION_FAILED: Invalid credentials provided.'
- 'Invalid command: Check syntax or options used.'
- '401 Unauthorized: Invalid credentials'
- 'Connection failed: Retry after receiving connection failed.'
- '0: OK'
- '1: ERROR'
- Invalid IP address format
- Scan timeout reached
- 'INVALID_DOMAIN: Check if the domain is valid.'
- 'CONNECTION_TIMEOUT: Increase the timeout value or check your network connection.'
- 'File not found: Ensure the input file exists.'
- 'Invalid filter: Check the capture BPF filter syntax.'
- 'Invalid option: Check command line arguments'
- '404 Not Found: Share does not exist or cannot be accessed'
- 'ERROR: Script execution failed: Check script arguments.'
- 'ERROR: Connection timed out: Ensure the target is reachable.'
- Error while reading file contents.
- 'INVALID_OPTION: Check the command line options for correctness'
- 'PERMISSION_DENIED: Run with appropriate permissions to capture packets'
- 'TIMEOUT: Ensure the SMTP server is reachable.'
- 'AUTH_FAILURE: Provide valid authentication credentials.'
- 'Debugging output: Check for syntax errors in command'
- 'Invalid syntax: Check your command line arguments.'
- 'Network unreachable: Ensure the target IP is reachable.'
- 'InvalidParameter: Ensure all required parameters are provided.'
- 'ConnectionFailed: Check your network connection.'
- 'Invalid parameters: Check the input email list format.'
- 'Connection error: Ensure the SMTP server is reachable.'
- 'INVALID_EMAIL: Check the email format and try again.'
- 'HOST_UNREACHABLE: Ensure the server is reachable and running.'
- 'AUTHORIZATION_FAILED: Verify SMTP credentials or permissions.'
- '403: Protected - Check permissions'
- '429 Too Many Requests: Implement delays to avoid hitting rate limits.'
- '400 Bad Request: Check the request format and parameters.'
- '404 Not Found: Verify the endpoint exists.'
- 'INVALID_COMMAND: Check the command syntax and options.'
- 'TIMEOUT: The scan took too long to complete.'
- 'NETWORK_UNREACHABLE: Unable to reach the target network.'
- 'ERROR: User does not exist'
- 'ERROR: Connection timeout'
- 'Invalid target: Ensure the target exists and is accessible'
- 'NmapError: Unable to scan the specified host.'
- 'Invalid domain: Check the domain name format.'
- 'Rate limit exceeded: Reduce the frequency of scans.'
- '404 Not Found: Resource does not exist.'
- '401 Unauthorized: Recheck credentials or permissions'
- 'Query timeout: Wait a maximum of 5 seconds for reply'
- 'Invalid hash: Ensure that the hash format is supported'
- 'Session not found: Check if the session name is correct'
- 'Invalid options: Verify the command-line arguments provided'
- 'FILE_NOT_FOUND: Ensure the specified file exists.'
- 'INVALID_INPUT: Check the provided parameters.'
- '400 Bad Request: Check input parameters.'
- '404 Not Found: Ensure the endpoint exists.'
- '429 Too Many Requests: Reduce request frequency.'
- 0 error(s) and 27 item(s) reported on remote host
- Invalid hash type specified
- Connection timed out
- Insufficient resources to run hashcat
- 'Invalid hash type: Ensure correct hash type is specified'
- 'Invalid attack mode: Check available modes'
- 'Cracking failed: Review input parameters'
- 'INVALID_ARGUMENT: Check the parameters passed to the command.'
- 'Invalid packet: Check packet structure and fields.'
- 'TIMEOUT: The request took too long to complete.'
- 'INVALID_EMAIL: The provided email address is not valid.'
- 'CONNECTION_FAILED: Unable to connect to the SMTP server.'
- 'INVALID_HASH: The provided hash is not recognized.'
- 'UNSUPPORTED_HASH_TYPE: The specified hash type is not supported.'
- Invalid IP address or range specified
- Rate limit exceeded
- 'Invalid IP address: Check the format of the target IP.'
- 'Permission denied: Ensure you have the necessary access rights.'
- 'TIMEOUT: Connection timed out during scan.'
- 'UNKNOWN_HOST: Unable to resolve specified host.'
- 'INVALID_MODE: Check the specified mode for hexinject.'
- 'DEVICE_NOT_FOUND: Ensure the specified device exists.'
- 'Invalid command: Ensure syntax is correct'
- 'Connection timed out: Check network settings'
- '404 Not Found: Check the target URL or the wordlist provided'
- '403 Forbidden: Ensure the correct permissions are set on the target'
- 'Unsupported file type: Check if the file format is supported'
- '414 Request-URI Too Large: Reduce the size of the request URI.'
- 'TIMEOUT: The request to scan the target timed out.'
- 'INVALID_ARGUMENT: Check the provided parameters.'
- 'ERROR: Script execution failed: Check the command syntax and options.'
- 'ERROR: File not found'
- 'ERROR: Unsupported format'
- 'Invalid domain: Check the format of the domain name.'
- 'SMTP_TIMEOUT: Server did not respond in time.'
- Debugging output available.
- Use -h for help message.
- 'TIMEOUT: Request took too long.'
- 'SERVER_ERROR: Unable to connect to the server.'
- 'Connection timeout: Increase wait time'
- 'No response: Check the SMTP server status'
- 'Request failed: check network connectivity'
- 'FILE_NOT_FOUND: Ensure the input files exist'
- 'PARSE_ERROR: Check the format of the input files'
- 'Invalid domain: Check if the domain is correctly formatted'
- '400 Bad Request: Check your target URL format'
- '403 Forbidden: Ensure the target is accessible'
- '500 Internal Server Error: Check for server-side issues'
- 'TIMEOUT: Check network connectivity or SNMP configuration.'
- 'NO_RESPONSE: Ensure SNMP service is running on the target.'
- 'Unknown error occurred: Check your command syntax or target.'
- 'No vulnerabilities found: The target is secure.'
- 'TIMEOUT: Scanning took too long.'
- 'UNKNOWN_HOST: Unable to resolve host.'
- 'INVALID_OPTIONS: Check command line arguments.'
- 'INVALID_ARGUMENT: Check the command syntax and parameters'
- 'TIMEOUT: Increase the response wait timeout'
- 'UNKNOWN_TOOL: Verify the tool name or path'
- 'Invalid target IP address: Check the syntax of the IP address.'
- 'Invalid argument: Ensure correct flags and parameters are used.'
- 'Invalid domain name: Check the syntax of the provided domain'
- 'No data found: Ensure the domain has active records'
- 'Invalid domain: Ensure the domain name is correct'
- 'Rate limit exceeded: Reduce the frequency of requests'
- '401 Unauthorized: Recheck API key or permissions'
- Default timeout is 5 seconds
- '404 Not Found: Check the target URL.'
- '414 Request-URI Too Large: Reduce request size'
- '400 Bad Request: Check request format'
- 'TIMEOUT: The scan took too long and was aborted.'
- 'TIMEOUT: Ensure the target is reachable and SNMP is enabled.'
- 'Error: Script execution failed (use -d to debug)'
- 'Exhausted: No credentials found'
- 'Connection timeout: Check target availability'
- '401 Unauthorized: Check username and password.'
- '404 Not Found: Ensure the share exists.'
- 'INVALID_DOMAIN: Check the domain format.'
- 'REQUEST_TIMEOUT: Increase the timeout settings.'
- 'InvalidIP: Ensure the IP address format is correct.'
- 'NetworkTimeout: Check network connectivity.'
- 'PermissionDenied: Run with sufficient privileges.'
- Invalid interface specified.
- Unable to read key file.
- 'Invalid option: Check command syntax for correct usage.'
- 'Network interface not found: Ensure the specified interface is available.'
- 'INVALID_ARGUMENT: Check the provided arguments.'
- 'NETWORK_ERROR: Ensure you are connected to the network.'
- 'Connection timeout: Check target IP or hostname.'
- 'Invalid arguments: Ensure all required parameters are provided.'
- '404 Not Found: Resource does not exist'
- '403: Protected - Investigate if there are many of these.'
- 'INVALID_EMAIL: Check the email format provided.'
- 'SERVICE_UNAVAILABLE: SMTP service not reachable.'
- No writers have been configured.
- '414 Request-URI Too Large: Reduce the length of the request URI.'
- '400 Bad Request: Check the request format or parameters.'
- Invalid IP address or range specified.
- Port not found.
- 'Invalid option: Ensure correct flags are used.'
- 'Permission denied: Run with appropriate privileges.'
- '404 Not Found: Verify share path'
- '429 Too Many Requests: Reduce the rate limit or try again later.'
- 'INVALID_EMAIL: Check the email formats provided.'
- '429 Too Many Requests: Consider increasing delay or reducing concurrent attempts'
- 'TIMEOUT: Connection timed out after 10 seconds'
- 'Connection failed: Ensure the target is reachable.'
- 'Authentication failed: Check provided credentials.'
- 'Connection timed out: Ensure the target host is reachable.'
- '401 Unauthorized: Recheck credentials or token expiration'
- 'RATE_LIMIT_EXCEEDED: Reduce the number of concurrent requests.'
- 'User not found: Check username'
- 'Connection refused: Ensure SMTP service is running'
- 421 Service not available, closing transmission channel
- '450 Requested mail action not taken: mailbox unavailable'
- '550 Requested action not taken: mailbox unavailable'
- '401 Unauthorized: Recheck credentials or access rights'
- 'Invalid options: Check command syntax and available options.'
- 'Invalid IP address format: Ensure correct format for input.'
- 'Port out of range: Ports must be between 1 and 65535.'
- 'INVALID_ARGUMENT: Check provided parameters'
- 'AUTHENTICATION_FAILED: Verify credentials'
- '400 Bad Request: Check if the request format is correct'
- 'Invalid interface: Ensure the specified interface exists.'
- 'Permission denied: Run as root or use sudo for access.'
- '401 Unauthorized: Recheck authentication credentials'
- 'Permission denied: Run as root for certain options.'
- '404: Not Found - Check the URL.'
- '403: Forbidden - Check permissions.'
- 'INVALID_EMAIL: Check the format of the email address provided.'
- 'Timeout: Wait a maximum of n seconds for reply (default: 5).'
- '429 Too Many Requests: Adjust the frequency of requests.'
- 'INVALID_MODE: Ensure the mode specified is correct'
- 'FILE_NOT_FOUND: Check if the file path is valid'
- 'Invalid IP address format: Ensure correct syntax'
- 'Port not open: Check target availability'
- 'Scan timeout: Increase wait time or check network stability'
- 'Invalid option: Check command syntax and options.'
- 'Permission denied: Ensure proper privileges for executing scans.'
- 'Connection refused: Check that the server is running'
- 'Unauthorized: Verify the provided secret'
- '401 Unauthorized: Recheck password or permissions'
- 'Invalid Command: Check the tool usage instructions.'
- 'Permission Denied: Run as root to execute this command.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'Invalid option: Ensure correct flags are used'
- 'Permission denied: Run with appropriate privileges'
- '401 Unauthorized: Check your username and password.'
- '414 Request-URI Too Large: The request URI exceeds the server''s limit.'
- '400 Bad Request: The server could not understand the request due to invalid syntax.'
- '401 Unauthorized: Check your password'
- 'REQUEST_TIMEOUT: Increase timeout value.'
- 'INVALID_EMAIL: Check email format.'
- 'SERVER_UNREACHABLE: Verify server address.'
- 'Unable to resolve host: Check network connectivity'
- 'Permission denied: Run as root for privileged scans'
- Invalid hash type specified.
- No hashes found in the input file.
- Fingerprint mismatches will close the connection.
- Defaults to '25s' (set to 0s to disable).
- Defaults to unlimited.
- Defaults to 5 minutes.
- 'REQUEST_LIMIT_EXCEEDED: Reduce the number of requests per second.'
- 'EMPTY_OUTPUT: No subdomains found for the provided domain.'
- 'Connection timed out: Ensure the server is reachable'
- 'Invalid credentials: Check username and password.'
- 'Connection timed out: Ensure the target is reachable.'
- '403 Forbidden: You do not have permission to access this resource.'
- 'INVALID_DOMAIN: Check if the domain format is correct'
- 'CONNECTION_TIMEOUT: Increase timeout settings or check network connectivity'
- 'D: Review ''Deprecated/Insecure headers'''
- 'TIMEOUT: The request to the SMTP server timed out.'
- '429 Too Many Requests: Adjust the delay to avoid this status.'
- 'INVALID_HASH: Check the format of the hash'
- 'OUT_OF_MEMORY: Reduce the workload or use a device with more memory'
- 'AUTHENTICATION_FAILED: Check the password used for authentication'
- 'INVALID_WORDLIST: Check the path to the source file.'
- 'EMPTY_OUTPUT: No words matched the specified criteria.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle DNS queries or reduce frequency'
- '404: Not Found - The requested log file does not exist.'
- 'Invalid options: Check the command syntax and available options.'
- custom injection marker ('*') found in option '-u'. Do you want to process it? [Y/n/q]
  y
- 'Invalid IP address: Check the format of the IP address or range'
- 'INVALID_ARGUMENT: Check the command line options for typos.'
- 'CONNECTION_TIMEOUT: The target host is unreachable.'
- 'INVALID_MODE: Check the operation mode specified.'
- 'DEVICE_NOT_FOUND: Ensure the network device is correctly specified.'
- '401 Unauthorized: Recheck credentials or access'
- 'INVALID_DOMAIN: Check the provided domain name.'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- Default timeout is 1000 milliseconds
- Number of retransmits (default 0)
- 'ERROR: Scanning timed out.'
- 'Invalid domain: Ensure the domain format is correct.'
- '401 Unauthorized: Check credentials or permissions'
- 'Invalid file: Check the file type and format'
- '400 Bad Request: Check the provided parameters.'
- '401 Unauthorized: Invalid authentication credentials.'
- 'Invalid input file: Check file path and format'
- 'Permission denied: Check user permissions for accessing the network'
- '403: Access denied'
- 'Invalid hash: Ensure the hash format is correct.'
- 'Connection failed: Check network settings.'
- 'TIMEOUT: The command took too long to complete.'
- 'INVALID_ARGUMENT: Check the provided IP address or options.'
- 'ERROR: Unable to read file - Check file permissions.'
- 'ERROR: Unsupported format - Ensure the input file is in the correct format.'
- '414 Request-URI Too Large: Adjust the request size.'
- '400 Bad Request: Check the request format.'
- 'Invalid IP format: Ensure the IP address or range is correct.'
- 'Failed to initialize network interface: Check the network configuration.'
- 'INVALID_HASH: The provided hash is not supported.'
- 'DEVICE_NOT_FOUND: No compatible devices found for cracking.'
- 'Nmap scan failed: Check network connectivity.'
- 'Invalid option: Ensure correct command syntax.'
- 'Connection refused: Ensure the server is running and reachable.'
- 'Authentication failed: Check your username and password.'
- '401 Unauthorized: Enter valid password.'
- 'Invalid packet format: Ensure the packet format is correct.'
- 'Network device not found: Check if the specified network device is available.'
- An error occurred while processing the request.
- 'Invalid usage: Check command syntax for correct options.'
- 'Connection timeout: Ensure the target address is reachable.'
- 'Invalid option: Check command line for errors.'
- 'Invalid input: Check the input parameters for correctness'
- 'Connection error: Ensure the DNS server is reachable'
- 'Domain not found: Check the domain name provided.'
- 'ERROR: Unable to read file - check file path and permissions.'
- 'ERROR: Unsupported file format.'
- 'INVALID_INPUT: Check the format of provided files.'
- 'CONNECTION_FAILED: Ensure the target is reachable.'
- '500 Internal Server Error: Check server configuration'
- '401 Unauthorized: Check authentication credentials'
- '200 OK: Request was successful'
- '400 Bad Request: Check the request payload format'
- 'ERROR: Invalid command line arguments provided'
- 'ERROR: Unable to connect to target'
- 'Connection failed: Check if the server is running and accessible'
- 'Invalid credentials: Recheck the provided password'
- '404 Not Found: Verify the share path'
- '404 Not Found: Check the URL and try again'
- 'INVALID_EMAIL: The email address provided is not valid.'
- '401 Unauthorized: Recheck credentials.'
- 'INVALID_CREDENTIALS: The username or password is incorrect.'
- 'CONNECTION_TIMEOUT: Unable to connect to the target host.'
- 'TIMEOUT: Check the timeout value and server response.'
- 'INVALID_EMAIL: Check the format of provided email addresses.'
- 'EACCES: Permission denied, check your user permissions.'
- 'EINVAL: Invalid argument, ensure correct parameters are used.'
- '500 Internal Server Error: Check server logs for more details.'
- '403 Forbidden: Ensure you have permission to access the requested resource.'
- '404: Not Found - Check the URL or wordlist'
- '403: Forbidden - Potential permission issues with the target'
- 'REQUEST_FAILED: Ensure the target URL is reachable.'
- 'VRFY: User does not exist'
- 'EXPN: Email address does not exist'
- 'RCPT: Invalid recipient'
- '429 Too Many Requests: Adjust the delay to avoid rate limiting'
- 'CONNECTION_REFUSED: Check if the server is running'
- 'TIMEOUT: Increase timeout settings or check network connectivity'
- No specific error patterns documented.
- 'ERROR: Connection timed out: Check if the host is reachable.'
- 'ERROR: Permission denied: Check user permissions.'
- 'Invalid filter: Ensure that the BPF filter syntax is correct.'
- 'File not found: Check the input file path.'
- 'Invalid interface: Check if the specified interface exists.'
- '500 Internal Server Error: Server encountered an error'
- 'Unsupported format: Check if the file type is supported.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle requests to the SMTP server.'
- 'TIMEOUT: Increase timeout value for slower servers.'
- '400 Bad Request: The request was malformed.'
- '414 Request-URI Too Large: The request URL was too long.'
- No open connections left
- 'Error: Service not available'
- 'INVALID_PASSWORD: Check the provided password for authentication.'
- 'CONNECTION_FAILED: Ensure the server is reachable.'
- 'INVALID_HASH: Check the format of the provided hash'
- 'Host unreachable: Ensure the target host is online.'
- '401 Unauthorized: Check authentication credentials.'
- '404 Not Found: The requested share does not exist.'
- 'VULNERABLE: Indicates a security vulnerability was found.'
- 'ERROR: Script execution failed.'
- 'INVALID_INPUT: Check your input parameters.'
- '404: File not found'
- 'File not found: Check the file path and try again.'
- Unable to correctly determine your language settings. Using english as default.
- 'READ_ERROR: Ensure the input file exists and is accessible'
- '401 Unauthorized: Check API key validity.'
- '404 Not Found: Ensure the endpoint path is correct.'
- 'TIMEOUT: Increase timeout value in options'
- 'NOT_FOUND: Ensure the domain is correct'
- '401 Unauthorized: Recheck API key or token.'
- 'Invalid proxy address: Check the proxy IP and port.'
- 'Connection refused: Ensure the proxy server is running.'
- No plugins Found.
- No Config Backups Found.
- 'Access denied: Check user credentials'
- 'Invalid filter: Ensure the BPF filter syntax is correct.'
- 'Invalid Interface: Ensure the specified interface is available.'
- 'File Not Found: Check the path to the pcap file.'
- '401 Unauthorized: Recheck password or access rights'
- 'SHARE_NOT_FOUND: Verify the share name is correct.'
- 'CONNECTION_TIMEOUT: Ensure the server is reachable.'
- '-m n: Maximum number of processes (default: 5)'
- '-M mode: Method to use for username guessing EXPN, VRFY or RCPT (default: VRFY)'
- 'CONNECTION_FAILED: Check if the endpoint is reachable'
- 'TIMEOUT: Adjust the timeout settings or check network conditions'
- '401 Unauthorized: Ensure valid OAuth tokens'
- Session established!
- Creating DNS driver failed
- 'Connection refused: Check if the server is running'
- '401 Unauthorized: Check your authentication method'
- '401 Unauthorized: Check if the username and password are correct.'
- 'Connection Timeout: Ensure the target host is reachable.'
- 'ERROR: Invalid credentials provided.'
- 'ERROR: Connection timed out.'
- 'ERROR: Too many requests.'
- 'INVALID_CREDENTIALS: Check the password and try again'
- 'CONNECTION_FAILED: Ensure the server is reachable'
- Peer verified with pre-shared secret!
- 'Invalid target: Ensure the target IP is correct.'
- 'Permission denied: Run Nmap with elevated privileges.'
- 'FILE_NOT_FOUND: Ensure the input file exists'
- 'PARSE_ERROR: Check the file format and contents'
- '403: Access forbidden'
- 'INVALID_ARGUMENT: Check input parameters.'
- 'NETWORK_ERROR: Ensure network connectivity.'
- 'INVALID_EMAIL: Check the format of the provided email addresses.'
- 'TIMEOUT: Connection to the SMTP server timed out.'
- 'UNAUTHORIZED: Authentication failed for the provided credentials.'
- 'UNSUPPORTED_FORMAT: Check if the file type is supported.'
- 'ERR_CONNECTION_REFUSED: Check if the server is running'
- 'INVALID_SECRET: Ensure the secret matches the server''s'
- '429: Too many requests, reduce frequency.'
- 'Unauthorized: Recheck authentication credentials'
- 'Timeout: Check server availability or network issues'
- 'TIMEOUT: Increase timeout duration for slow responses.'
- 'INVALID_PARAMETERS: Check the command syntax or parameters.'
- 'Invalid command line option: Check the flags provided.'
- 'Failed to connect: Check server address and port'
- 'Invalid secret: Ensure the same secret is used on both server and client'
- 'Invalid interface: Ensure the network interface is correct'
- 'Connection timeout: Check network connectivity'
- '401 Unauthorized: Recheck authentication method.'
- 'Invalid email format: Ensure the email addresses are correctly formatted.'
- 'Connection timed out: Check the network connection to the SMTP server.'
- 'Permission denied: Check file permissions.'
- 'USER_NOT_FOUND: The specified user does not exist'
- 'INVALID_CREDENTIALS: The username or password is incorrect'
- 'Invalid password: Check the authentication password used'
- 'NETWORK_ERROR: Ensure the server is reachable'
- Invalid IP address or range
- Port out of range
- '404: Log file not found'
- '400 Bad Request: Check your request format.'
- '414 Request-URI Too Large: Reduce the size of the request.'
- 'INVALID_EMAIL: The provided email address is invalid.'
- 'REQUEST_TIMEOUT: The request to the SMTP server timed out.'
- 'Invalid hash type: Check the hash type and try again'
- 'Session failed: Restore from session file'
- 'Invalid mode: Ensure the mode specified is supported'
- 'UNKNOWN_ERROR: Check server connection and configurations'
- 'AUTH_FAILURE: Verify user credentials or auth file'
- '401 Unauthorized: Recheck authentication method or credentials'
- 'INVALID_TARGET: The specified target is not valid.'
- Request rate exceeds limit.
- 'INVALID_FILTER: Check the syntax of the provided BPF filter'
- 'File Not Found: Ensure the file path is correct.'
- 'Unsupported File Type: The file type is not supported for metadata extraction.'
- '400 Bad Request: The server cannot process the request due to client error.'
- custom injection marker ('*') found in option '-u'.
- '401 Unauthorized: Recheck password'
- 'Failed to connect to server: Check server address and port'
- 'Invalid secret: Recheck shared secret'
- '401 Unauthorized: Recheck Agent''s authentication method or credentials'
- 'Connection timeout: Ensure server is running and reachable'
- '404 Not Found: Check if the endpoint is correct'
- '403 Forbidden: Ensure proper permissions are set'
- 'INVALID_CONFIGURATION: Check your configuration file for syntax errors.'
- 'CONNECTION_FAILED: Unable to establish a connection, check network settings.'
- 'Invalid interface specified: Check if the interface exists or is up.'
- 'Permission denied: Run with sufficient privileges.'
- 'Invalid domain: Check the format of the domain name'
- 'Request limit exceeded: Reduce the number of requests'
- 'INVALID_COMMAND: Check the syntax of your command'
- 'CONNECTION_FAILED: Unable to connect to target host'
- '401 Unauthorized: Verify API key.'
- '429 Too Many Requests: Rate limit exceeded.'
- 'Connection refused: Ensure the server is running and accessible'
- 'Invalid payload format: Check the generated payload syntax'
- 'Invalid API Key: Check the provided API key for correctness.'
- 'Invalid IP address format: Ensure the correct syntax is used.'
- 'Rate limit exceeded: Reduce the number of packets sent per second.'
- 'Host unreachable: Check target IP and network connectivity.'
- 'Permission denied: Run as administrator or check privileges.'
- 'Connection timed out: Verify target IP address.'
- 'Invalid domain: Check the domain name syntax'
- 'Connection failed: Ensure the DNS server is reachable'
- 'Connection Refused: Check if the server is running'
- 'Unauthorized: Check the credentials'
- 'Connection refused: Ensure the server is running.'
- 'Unauthorized: Check your credentials.'
- 'Unable to connect: Check the target host''s IP and ensure it is reachable.'
- 'Permission denied: Ensure you have the required permissions to perform the scan.'
- 'Connection failed: Check server address and port'
- 'Session timeout: Ensure client is active'
- 'REQUEST_ERROR: Check input parameters or paths'
- 'FILE_NOT_FOUND: Verify the provided input file exists'
- '401 Unauthorized: Incorrect password provided.'
- 'Connection failed: Check server availability'
- 'Authentication failed: Verify credentials'
- '400 Bad Request: Check request parameters.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'Connection failed: Recheck server address or port'
- 'Authentication failed: Verify password or authentication method'
- 'INVALID_ARGUMENT: Check command line arguments.'
- 'CONNECTION_FAILED: Unable to connect to specified host.'
- 'Connection refused: Ensure server is running and address is correct.'
- 'Invalid payload type: Check the specified payload format.'
- 'Unauthorized: Check authentication details'
- 'Connection failed: Verify server address and port'
- 'REQUEST_FAILED: Ensure the target is reachable'
- 'INVALID_ARGUMENT: Check the command syntax'
- 'Port range error: Ensure the port range is valid.'
- 'ERROR: Invalid options provided'
- '400 Bad Request: Check command syntax.'
- '404 Not Found: Endpoint does not exist.'
- 'Rate limit exceeded: Reduce the number of concurrent requests.'
- 'Invalid domain: Check the domain format or existence.'
- 'TIMEOUT: Increase the timeout or check your DNS server settings.'
- 'INVALID_DOMAIN: Ensure the domain name is correctly formatted.'
- 'TIMEOUT: Increase the timeout setting'
- 'INVALID_DOMAIN: Check the provided domain name'
- '401 Unauthorized: Recheck password or credentials'
- 'Connection failed: Check your network settings'
- 'Session timeout: Ensure the session is active'
- 'INVALID_MODE: Check the usage mode specified'
- 'FILTER_NOT_FOUND: Ensure the custom filter is correctly applied'
- 'Invalid IP address: Ensure the target IP is correctly formatted.'
- 'Scan timeout: Increase timeout settings if the scan takes too long.'
- '404 Not Found: The specified share does not exist.'
- 'INVALID_EMAIL: Ensure the email format is correct.'
- 'REQUEST_FAILED: Check server status or network connection.'
- '401 Unauthorized: Recheck authentication method'
- 'Connection Timeout: Ensure the server is reachable'
- '400 Bad Request: Verify request parameters'
- '404 Not Found: Check the endpoint path'
- 'Nmap scan failed: Check if the target host is reachable or if the port is open.'
- 'Invalid filter: Check the BPF filter syntax.'
- Connection closed due to fingerprint mismatch
- 'INVALID_CREDENTIALS: Check the provided password.'
- '400 Bad Request: Check the request parameters and format'
- 'Invalid payload: Check the payload generation parameters.'
- 'Invalid target specification: Ensure at least one valid IP address or range is
  specified'
- 'ERR_NO_PRIVILEGE: Requires root privileges to execute.'
- 'ERR_INVALID_MODE: Specified mode is not supported.'
- 'NmapError: Unable to connect to target'
- 'NmapError: Invalid argument provided'
- 'Connection Refused: Ensure the SMB service is running.'
- 'SERVER_UNREACHABLE: Unable to connect to the SMTP server.'
- '414 Request-URI Too Large: Adjust the payload size or structure.'
- '400 Bad Request: Verify request format and parameters.'
- '401 Unauthorized: Check agent credentials'
- '403 Forbidden: Check permissions for the requested resource'
- 'REQUEST_TIMEOUT: Check server availability'
- '401 Unauthorized: Verify password'
- 'Invalid target format: Ensure IP addresses or hostnames are valid.'
- 'Request limit exceeded: Reduce frequency of requests'
- 'INVALID_ARGUMENT: Check the command syntax and options.'
- 'DEVICE_NOT_FOUND: Ensure the specified network device exists.'
- '404 Not Found: The requested resource could not be found'
- '403 Forbidden: Access denied to the requested resource'
- '403 Forbidden: Check your API key permissions.'
- '429 Too Many Requests: Implement delays to avoid hitting rate limits'
- 'Invalid mask format: Ensure the mask is correctly specified.'
- 'SERVER_UNREACHABLE: Unable to reach the SMTP server.'
- 'Connection error: Check server availability'
- 'Connection failed: Verify server address and port.'
- 'Authentication failed: Check the shared secret.'
- Input/output error
- Bad block reading
- '404 Not Found: Verify the requested share exists'
- '500 Internal Server Error: Check server status'
- 'Invalid input: Ensure the source file path is correct.'
- 'File not found: Check the specified wordlist path.'
- 'Authentication failed: Verify user credentials'
- 'Connection refused: Check if the server is running.'
- 'Invalid domain: Ensure the domain is correctly specified.'
- '401 Unauthorized: Invalid authentication credentials'
- 'Connection refused: Ensure the server is running and accessible.'
- 'Input/output error: Occurs when reading from a device fails.'
- 'CONNECTION_FAILED: Check the server address and port.'
- 'SESSION_TIMEOUT: Ensure the session is still active.'
- 'COMMAND_NOT_FOUND: Ensure the tool is installed'
- 'INVALID_ARGUMENT: Check the syntax and options used'
- 'Invalid IP address: Please provide a valid target IP address.'
- 'INVALID_ARGUMENT: Check provided arguments for validity'
- 'INVALID_MODE: Check the mode specified in the command'
- 'DEVICE_NOT_FOUND: Ensure the specified network device exists'
- '404 Not Found: Share does not exist'
- '400 Bad Request: Check your request parameters'
- '414 Request-URI Too Large: Reduce the length of the request URI'
- 'INVALID_CREDENTIALS: Check username and password.'
- 'CONNECTION_TIMEOUT: Ensure the target service is reachable.'
- 'INVALID_CERTIFICATE: Certificate verification failed'
- 'CONNECTION_TIMEOUT: Unable to establish connection'
- 'No response from server: Check server status or network connectivity'
- 'Connection error: Check if the server is reachable.'
- 'Authentication failed: Verify the provided credentials.'
- 'Input/output error: src read failed'
- Low level device calls enabled mode may cause additional strain.
- File size not reported by stat(), trying seek.
- 'Invalid target: Ensure the IP address or hostname is correct.'
- 'Permission denied: Check user permissions or run as administrator.'
- 'UNKNOWN_HOST: The target host could not be resolved.'
- 'RATE_LIMIT_EXCEEDED: Reduce the number of requests per second.'
- 'STATUS: Cracked'
- 'HASH.TARGET: hashes.txt'
- 'Connection failed: Check secret or server status.'
- 'Timeout: Ensure server is reachable and listening.'
- 'Invalid payload format: Ensure the payload syntax is correct'
- '401 Unauthorized: Check authentication method and credentials'
- '500 Internal Server Error: Verify server status and logs'
- 'Input/output error: Check the input file or device.'
- 'Unsupported hash algorithm: Verify the specified algorithm.'
- '400 Bad Request: Invalid parameters provided.'
- '500 Internal Server Error: Unexpected server error.'
- 'Error reading block: Check device integrity.'
- 'Insufficient permissions: Run with elevated privileges.'
- '1 unrecoverable bad blocks (bytes): 49152'
- 'FILE_NOT_FOUND: Check if the input file exists'
- 'INVALID_FORMAT: Ensure the input file is in the correct format'
- 'Invalid option: Check for typos in command.'
- 'INVALID_ARGUMENT: Check your command line arguments'
- 'INVALID_ARGUMENT: Check command options for validity.'
- 'DEVICE_NOT_FOUND: Ensure the specified network interface exists.'
- 'Invalid option: see help for usage instructions'
- 'Timeout: Wait a maximum of n seconds for reply (default: 5)'
- 'Invalid option: Check usage with --help'
- 'INVALID_TARGET: Ensure the target format is correct'
- 'AUTH_FAILED: Check username and password for correctness'
- 'Connection failed: Check your secret or server address'
- 'Timeout: Ensure the server is running and accessible'
- 'INVALID_PASSWORD: Check the provided password'
- 'CONNECTION_FAILED: Verify network settings and IP addresses'
- 'Connection refused: Ensure the server is running'
- 'Connection failed: Check server address and port.'
- '401 Unauthorized: Check agent authentication method'
- 'Session expired: Reconnect to the server'
- 'Input/output error: Indicates a read failure during hash calculation.'
- 'Low level device calls enabled mode: 1'
- Filesize not reported by stat(), trying seek()
- 'INVALID_ARGUMENT: Check the input parameters for correctness.'
- Error with DNS causing INetSim to fail; use an external DNS proxy.
- status 1 if fewer hosts respond than the specified limit.
- 'INVALID_ARGUMENT: Check your command line options'
- 'TIMEOUT: The scan took too long and was aborted'
- 'INVALID_ARGUMENT: Check the command line arguments'
- 'PERMISSION_DENIED: Run with elevated privileges'
- 'UNKNOWN_ERROR: An unexpected error occurred'
- 'REQUEST_FAILED: Check network connectivity or command syntax'
- 'INVALID_OPTION: Check the provided options for correctness.'
- 'CONNECTION_FAILED: Unable to establish a connection to the specified endpoint.'
- 'INVALID_EMAIL: Check the email format'
- 'TIMEOUT: Increase the timeout value'
- 'TESTPARAMETER: Invalid parameter provided.'
- 'HTTP/1.1 400 Bad Request: Indicates an invalid request format.'
- 'HTTP/1.1 404 Not Found: The requested resource could not be found.'
- '401 Unauthorized: Recheck password or token expiration'
- 'Connection failed: Recheck server address and port'
- 'Authentication error: Verify credentials'
- '401 Unauthorized: Recheck Agent authentication'
- 'Invalid payload: Check the syntax of the generated payload.'
- '-s ipos: start position in input file (default=0)'
- '-e maxerr: exit after maxerr errors (def=0=infinite)'
- Input/output error!
- There were errors!
- 'ERROR: Unable to open source device or file.'
- 'ERROR: Read error encountered during operation.'
- Can be used in scripts to check if fewer hosts respond without having to parse the
  output.
- 'Invalid options: Check command syntax and available options'
- 'INVALID_FILTER: Check the syntax of the BPF filter.'
- 'Permission Denied: Ensure you have the necessary privileges to execute.'
- 'INVALID_MODE: Specify a valid mode for operation'
- 'INTERFACE_NOT_FOUND: Check if the specified network device exists'
- '404 Not Found: Check the endpoint path or resource availability'
- '403 Forbidden: Verify permissions or authentication requirements'
- 'Permission denied: Run tcpdump with appropriate privileges.'
- '500 Internal Server Error: Server error, please try again later'
- '401 Unauthorized: Check credentials'
- '404 Not Found: Verify the target URL'
- '400 Bad Request: Check the request syntax.'
- '400 Bad Request: Invalid input provided.'
- '404 Not Found: The requested resource does not exist.'
- Fingerprint mismatches will close the connection
- 'ERROR: Invalid domain specified.'
- 'ERROR: Resource not found.'
- 'Invalid command: Ensure correct usage of command line arguments.'
- 'SESSION_NOT_FOUND: Check session ID.'
- 'INVALID_COMMAND: Verify command syntax.'
- 'Connection timeout: Check network configuration.'
- 'Invalid command: Ensure correct syntax.'
- No errors specified in documentation.
- 'INPUT_OUTPUT_ERROR: Check the input file or path.'
- 'HASH_CALCULATION_FAILED: Ensure valid input data.'
- 'DEVICE_ERROR: Check if the source device is accessible.'
- 'FILE_NOT_FOUND: Ensure the specified source file exists.'
- '403 Forbidden: Check API key and permissions'
- '500 Internal Server Error: Retry the request later'
- 'Invalid option: Check the command syntax and options.'
- '404 Not Found: Verify the SMB server''s URL and shared resource'
- 'REQUEST_FAILED: Check the network connection.'
- '403 Forbidden: Access is denied.'
- '401 Unauthorized: Authentication is required.'
- 'Invalid credentials: Recheck password.'
- 'Input/output error: indicates a failure in reading the source.'
- 'RESULTS_NOT_FOUND: 検索結果が見つかりません'
- 'AGENT_CONNECTION_FAILED: エージェントとの接続に失敗しました'
- 'ERROR: Could not read from device'
- 'ERROR: Bad block detected'
- 'CONNECTION_FAILED: The target host could not be reached.'
- 'SESSION_NOT_FOUND: The specified session ID does not exist.'
- 'Invalid command: Check the command syntax or options.'
- 'Reported low level blocksize: 4096'
- 'curl: Could not resolve host: example.com'
- 'ERROR: Invalid IP address format.'
- 'ERROR: Scan timeout exceeded.'
- 'TIMEOUT: Request took too long to respond.'
- 'NOT_FOUND: The specified resource could not be found.'
- 'Timeout: Increase the timeout value'
- 'Invalid URL: Ensure the URL is correctly formatted'
- 'ACCOUNT FOUND: [http] Host: 192.168.11.4 User: hello Password: hello [SUCCESS]'
- '401 Unauthorized: Recheck agent authentication or connection details.'
- 'Connection failed: Check if server is running and reachable.'
- 'Payload generation failed: Ensure correct parameters are provided.'
- 'HTTP request failed: Check the server URL or certificate'
- 'Invalid input file: Ensure the file exists and is accessible.'
- 'ERROR: Unable to create specified directory.'
- 'ERROR: Invalid file format for extraction.'
- 'ERROR: Extraction failed due to insufficient permissions.'
- 'Invalid rules file: Ensure the rules file is correctly formatted.'
- 'No response from target: Check if the target is up.'
- 'Permission denied: Ensure you have the necessary permissions to perform the scan.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle SMTP requests or reduce frequency.'
- 'INVALID_EMAIL: Check the format of the email addresses provided.'
- '429 Too Many Requests: Reduce the rate of requests to avoid being throttled.'
- '404 Not Found: Ensure the target service is accessible.'
- 'INVALID_ARGUMENT: Check the provided arguments and their formats'
- 'HASH_NOT_FOUND: No hash information available.'
- 'CONNECTION_TIMEOUT: Ensure the target server is reachable.'
- 'Invalid parameters: Ensure -w and -t paths are correctly specified.'
- 'Connection failed: Ensure server is running and reachable'
- 'Invalid secret: Check that the correct secret is being used'
- 'Invalid credentials: Ensure the correct password is provided'
- 'unable to determine version information for: flor'
- 'INVALID_HOST: Please check the host address.'
- 'CONNECTION_FAILED: Unable to connect to the specified host.'
- 'Invalid source or target path: Ensure the specified paths are correct.'
- 'Read error: Try using lower resolution or different block sizes.'
- 'HTTP request failed: Check connection or endpoint configuration.'
- 'Invalid command line option: Check --help for available options'
- 'INVALID_COMMAND: Check the syntax of your command.'
- 'TIMEOUT: The target did not respond in time.'
- 'UNKNOWN_HOST: The specified host could not be found.'
- Invalid target range specified
- 'failed to open stream: HTTP request failed!'
- 'Invalid input file: Ensure the file exists and is accessible'
- No errors documented.
- '404 Not Found: Ensure the share path is correct.'
- 'CONNECTION_FAILED: Check IP address and network connectivity.'
- 'AUTHENTICATION_FAILED: Verify username and password.'
- 'Connection failed: Check server address and authentication details'
- 'INVALID_COMMAND: Ensure command syntax is correct.'
- 'CONNECTION_TIMEOUT: Verify network connectivity.'
- 'INVALID_ARGUMENT: Check input parameters'
- 'CONNECTION_TIMEOUT: Verify server availability'
- 'INPUT_OUTPUT_ERROR: Ensure the input file is accessible'
- 'HASH_CALCULATION_FAILED: Check the hash algorithm and input data'
- 'fopen() error: Abort on fopen() error'
- 'CONNECTION_FAILED: Check network settings or server status.'
- 'INVALID_PAYLOAD: Ensure payload format is correct.'
- 'SESSION_TIMEOUT: Reconnect to the server.'
- 'fopen() error: Aborts on fopen() error'
- 'FILE_NOT_FOUND: Check if the file exists'
- 'INVALID_FORMAT: Ensure the input file format is correct'
- 'Invalid arguments: Ensure correct syntax and options are used.'
- 'FILE_NOT_FOUND: Ensure the specified input file exists'
- 'INVALID_ARGUMENT: Check the command line options'
- 'ERROR: Invalid filter provided.'
- 'ERROR: Device not found.'
- '0-5: Debugging output level must be in the range.'
- 'greater than or equal to 0: Loop must be a non-negative integer.'
- '403 Forbidden: Permissions issue, check user roles'
- '401 Unauthorized: Check your OAuth token.'
- '429 Too Many Requests: You have exceeded the API rate limit.'
- '400: Bad Request'
- '401: Unauthorized'
- '404: Not found'
- '401 Unauthorized: Recheck credentials or session status'
- '401 Unauthorized: Check your access token.'
- 'INVALID_HASH: The provided hash is not valid'
- 'HASH_NOT_FOUND: No hash algorithms found for the input'
- '401 Unauthorized: Check token validity'
- '403 Forbidden: Check API permissions'
- '404 Not Found: Check if the resource exists'
- '403 Forbidden: Ensure you have permission to access this resource'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: The requested resource could not be found.'
- 'Invalid Password: Ensure the password is correct and adheres to the length restriction.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- 'Unauthorized: Recheck authentication method'
- '403 Forbidden: Insufficient permissions or rate limit exceeded.'
- 'ERROR: Check input/output specifications.'
- 'ERROR: Input device not found.'
- 'ERROR: Bad sector encountered during read.'
- 'Fault skip blocksize: 65536'
- 'Min read attempts: 3'
- 'INVALID_INPUT: Ensure the input follows the required format.'
- '401 Unauthorized: Recheck the access token'
- Timeouts or errors may occur if the connection between host and server is slow.
- '401 Unauthorized: Invalid access token'
- '403 Forbidden: Insufficient permissions.'
- 'SMILES Parse Error: unclosed ring for input'
- 'Invalid SMILES: Check the SMILES format and structure.'
- 'Tokenization error: Ensure that the tokenizer is correctly implemented.'
- '403 Forbidden: Insufficient permissions'
- 'SMILES Parse Error: unclosed ring for input: ''C1ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc'''
- 'SMILES Parse Error: unclosed ring'
- '404 Not Found: Check if the endpoint is valid or if the resource exists.'
- 'SMILES Parse Error: syntax error while parsing'
- 'SMILES Parse Error: check for mistakes around position'
- 'SMILES Parse Error: Failed parsing SMILES'
- 'INVALID_SMILES: Check the SMILES format and try again.'
- 'SMILES Parse Error: extra close parentheses while parsing'
- '401 Unauthorized: Check your access token or OAuth scopes.'
- '404 Not Found: Validate the endpoint URL or resource ID.'
- '401 Unauthorized: Invalid token or insufficient scope'
- '401 Unauthorized: Check OAuth token'
- '401 Unauthorized: Check your credentials and permissions.'
- 'SettingWithCopyWarningが出る: 元のデータが変更されない場合がある'
- 'データ更新が反映されずサイレント障害: 大規模データ処理で気づきにくいバグ'
- 'SMILES Parse Error: extra open parentheses while parsing'
- 'INVALID_SMILES: Input SMILES string is not valid.'
- 'API_RATE_LIMIT: Too many requests. Please try again later.'
- '401 Unauthorized: Check your access token and permissions.'
- '403 Forbidden: Ensure the API key has the required permissions.'
- '401 Unauthorized: Check your authentication credentials.'
- '404 Not Found: The specified resource could not be found.'
- 'SMILES Parse Error: failed parsing SMILES for input'
- '401 Unauthorized: Check client credentials or token validity'
- 'INVALID_SMILES: Check the structural validity of the SMILES string.'
- 'TOKENIZATION_ERROR: Ensure correct tokenization of SMILES.'
- '400 Bad Request: Ensure input data format is correct.'
- 'Parse Error: check for mistakes around position'
- 'Installing RDKit in Google Colab - python: Issues with installation.'
- 'Parse Error: extra close parentheses while parsing'
- 'Parse Error: extra open parentheses while parsing'
- 'Parse Error: syntax error while parsing'
- 'SMILES Parse Error: unclosed ring for input.'
- 'Overfitting: Consider adjusting model complexity or adding dropout layers.'
- 'INVALID_SMILES: Ensure the SMILES string format is correct.'
- 'UNAUTHORIZED: Check your API key and permissions.'
- 'INVALID_SMILES: Check the SMILES format or structure.'
- 'OUT_OF_MEMORY: Reduce the batch size or model size.'
- 'Failed parsing SMILES ''...'' for input: ''...'''
- 'INVALID_SMILES: Ensure input SMILES strings are valid.'
- 'TOKENIZATION_ERROR: Check the tokenization process for unsupported characters.'
- Installation issues may arise with RDKit in Google Colab.
- 'INVALID_SMILES: Ensure the SMILES string is valid.'
- 'TOKENIZATION_ERROR: Check the tokenization process.'
- インストールに失敗する場合は環境を確認してください。
- 'Invalid_SMILES: The provided SMILES string cannot be parsed'
- 'Out_of_memory: Reduce batch size or model complexity'
- 'INVALID_SMILES: Check the SMILES syntax for errors.'
- 'SAMPLE_LIMIT_EXCEEDED: Reduce the number of samples requested.'
- 'INVALID_SMILES: Input SMILES string is not valid'
- 'API_CALL_FAILED: Unable to connect to the API'
- '400 Bad Request: Check your input data for validity.'
- データが小さいと過学習しやすいのでデータ拡張や正則化、dropoutを検討してください。
- Failed parsing SMILES
- 'Invalid SMILES: Check the format of the SMILES string.'
- 'Installation issues: Ensure RDKit is installed correctly in the environment.'
- 'Invalid SMILES: Check the input format.'
- '400 Bad Request: Check the input data format'
- '401 Unauthorized: Verify authentication credentials'
- '500 Internal Server Error: Retry the request after a few minutes'
- 'INVALID_SMILES: Check the format of the generated SMILES strings.'
- 'OUT_OF_VOCABULARY: Token not found in the vocabulary.'
- 'MODEL_NOT_FOUND: Ensure the model path is correct'
- 'INVALID_INPUT: Check the format of the input molecules'
- 'INVALID_INPUT: Check the input format for SMILES strings.'
- 'MODEL_TIMEOUT: Increase the batch size or reduce the length of sequences.'
- Colab の RDKit のインストールに失敗する場合がある
- 'Invalid_SMILES: Check the SMILES format.'
- 'Model_Error: Ensure the model is properly trained.'
- 'INVALID_SMILES: Check the generated SMILES format.'
- 'Failed parsing SMILES: check for mistakes around position'
- 'INVALID_SMILES: Ensure SMILES format is correct'
- 'TOKENIZATION_ERROR: Check input for valid characters'
- 'INVALID_SMILES: Ensure valid SMILES format.'
- 'EXCEEDS_MAX_LEN: Check the length of input SMILES.'
- '400 Bad Request: Check input data format and SMILES validity'
- '500 Internal Server Error: Server-side issue, retry later'
- Installation issues with RDKit may occur depending on the environment.
- 'extra close parentheses: check for mistakes around position'
- 'extra open parentheses: check for mistakes around position'
- 'syntax error while parsing: check for mistakes around position'
- 'SMILES Parse Error: syntax error'
- 'SMILES Parse Error: extra close parentheses'
- 'INVALID_SMILES: Ensure the SMILES string is correctly formatted.'
- 'TIMEOUT: Check the server response time and retry the request.'
- データが小さいと過学習しやすいのでデータ拡張や正則化、dropout を検討してください。
- 'INVALID_SMILES: Check input structure.'
- 'TOKENIZATION_ERROR: Ensure valid SMILES tokens.'
- '400 Bad Request: Check the input SMILES format.'
- 'Parse Error: extra close parentheses while parsing.'
- 'Parse Error: extra open parentheses while parsing.'
- 'Out of memory: Reduce batch size.'
- 'Invalid SMILES: Check the generated SMILES strings for validity'
- 'Environment error: Ensure RDKit is installed correctly'
- extra close parentheses while parsing
- extra open parentheses while parsing
- syntax error while parsing
- 'INVALID_SMILES: Check the SMILES input format.'
- 'TOKENIZATION_ERROR: Ensure that the input is correctly tokenized.'
- 'MODEL_TIMEOUT: Increase model inference timeout settings.'
- インストールは環境によって変わります（rdkit-pypi / rdkit / conda を試してみてください）。うまく入らない場合は condacolab
  を使って conda 環境に入れる方法もあります。
- 'INVALID_SMILES: Ensure SMILES format is correct.'
- 'Invalid SMILES: Check the input SMILES format.'
- 'Model not trained: Ensure the model is trained before sampling.'
- '400 Bad Request: Check input data format.'
- '500 Internal Server Error: Retry after a few minutes.'
- 'Epoch limit reached: Check training duration'
- もし手元にない場合は自分で small_sample.csv を作るか、ZINCのサブセット等を用意してください。
- 'INVALID_SMILES: The provided SMILES is not valid according to RDKit.'
- 'TOKENIZATION_ERROR: Issue encountered during SMILES tokenization.'
- 'INVALID_PARAMETER: Check the input parameters for correctness.'
- 'MODEL_NOT_FOUND: Ensure the specified model is available.'
- 'INVALID_SMILES: Check the SMILES format'
- 'QUERY_TIMEOUT: Reduce query complexity'
- 'Invalid SMILES: Ensure the input is a valid SMILES string'
- 'MemoryError: Reduce batch size or sequence length'
- RDKit のインストールは環境によって変わります（rdkit-pypi / rdkit / conda を試してみてください）。
- 'INVALID_SMILES: Ensure valid SMILES format before processing.'
- 'TOKENIZATION_ERROR: Check tokenizer implementation for special characters.'
- 'INVALID_INPUT: Ensure the input data format is correct'
- 'OUT_OF_MEMORY: Reduce batch size or model size'
- 'SMILES Parse Error: failed parsing SMILES'
- '400 Bad Request: Check input format and parameters'
- '500 Internal Server Error: Server encountered an unexpected condition'
- '400 Bad Request: Review SMILES format.'
- '500 Internal Server Error: Check server logs.'
- '400 Bad Request: Check input data format'
- 'INVALID_SMILES: Check the generated SMILES for validity.'
- 'SAMPLING_ERROR: Ensure proper sampling parameters.'
- 'Parse Error: invalid SMILES structure.'
- 'INVALID_INPUT: Check the input format for molecule generation.'
- 'TIMEOUT: Increase the timeout settings for large molecule requests.'
- 'INVALID_SMILES: Verify the SMILES structure.'
- 'TOKENIZATION_ERROR: Ensure the input is correctly tokenized.'
- 'OUT_OF_MEMORY: Reduce batch size or sequence length.'
- 'SMILES Parse Error: Failed parsing SMILES for input'
- '400 Bad Request: Check input parameters'
- 'INVALID_SMILES: The input SMILES string is not valid.'
- 'TOKENIZATION_ERROR: Failed to tokenize the input string.'
- 'SERVER_ERROR: An unexpected server error occurred.'
- 'INVALID_INPUT: Ensure input data is correctly formatted.'
- 'MODEL_NOT_FOUND: Check model path and existence.'
- 'INVALID_SMILES: Check formatting and structure of SMILES string.'
- 'INVALID_SMILES: Ensure the SMILES string follows correct syntax.'
- 'INVALID_SMILES: Ensure input SMILES are valid.'
- 'Environment issues: RDKit installation may vary in Colab.'
- 'INVALID_SMILES: Check the SMILES format.'
- 'TOKENIZATION_ERROR: Ensure the tokenizer is correctly implemented.'
- 'INVALID_SMILES: Check the input for invalid SMILES strings.'
- 'INVALID_SMILES: Check the structure of the SMILES input.'
- 'INVALID_SMILES: Check if the provided SMILES string is valid.'
- 'API_RATE_LIMIT_EXCEEDED: Reduce the frequency of API calls.'
- データが小さいと過学習しやすいのでデータ拡張や正則化を検討してください。
- '400 Bad Request: Check input format and ensure all required fields are included.'
- '401 Unauthorized: Verify OAuth token validity.'
- '429 Too Many Requests: Implement exponential backoff for retries.'
- 'Invalid_SMILES: Ensure the SMILES string is valid.'
- 'Tokenization_Error: Check the input for unsupported characters.'
- 'INVALID_INPUT: Check the input data format.'
- 'OUT_OF_MEMORY: Reduce batch size or model complexity.'
- Invalid rate significantly reduced with Grammar Mask.
- Valid rate increased with Top-k Sampling.
- 'INVALID_SMILES: Input does not conform to SMILES format.'
- 'INVALID_SMILES: Check the SMILES format and try again'
- 'DATA_NOT_FOUND: Ensure the requested SMILES exists in the dataset'
- 'Parse Error: Check for mistakes in SMILES syntax.'
- 'VALIDATION_ERROR: Check for valid SMILES format'
- 'TIMEOUT: Increase timeout settings if requests are taking too long.'
- Installation issues with RDKit on Colab may vary.
- Small datasets may lead to overfitting.
- 'Invalid input: Ensure the input data is correctly formatted.'
- 'Training timeout: Consider increasing the timeout settings.'
- Failed parsing SMILES for input
- 'SMILES Parse Error: Failed parsing SMILES ''c11cccH]c2c[nH]c1'' for input: ''c11cccH]c2c[nH]c1'''
- 'SMILES Parse Error: check for mistakes around position 19: Cc1cccc(CCl)cc1CCC)CC#CCCCO'
- 'INVALID_SMILES: Input is not a valid SMILES string.'
- 'INVALID_SMILES: Check input for valid SMILES format.'
- 'Invalid SMILES: Ensure the SMILES string is valid.'
- '400 Bad Request: Check input SMILES format'
- '500 Internal Server Error: API service unavailable'
- '400 Bad Request: Check input data format and parameters.'
- '500 Internal Server Error: Retry after some time or check server status.'
- '400 Bad Request: Invalid SMILES string or format.'
- '401 Unauthorized: API key is missing or invalid.'
- '401 Unauthorized: Invalid access token.'
- '401 Unauthorized: Check your OAuth token and permissions'
- '404 Not Found: Ensure the resource exists.'
- 'INVALID_SMILES: The provided SMILES string is not valid.'
- 'TOKENIZATION_ERROR: Failed to tokenize the SMILES string.'
- '401 Unauthorized: Recheck OAuth token or scopes'
- '404 Not Found: Ensure the endpoint and parameters are correct'
- '401 Unauthorized: Check your OAuth token'
- '404 Not Found: Verify the endpoint path'
- 'SMILES Parse Error: unclosed ring for input: ...'
- Skipping malformed entries during processing.
- 'INVALID_TOKEN: Check if the access token is valid.'
- 'RESOURCE_NOT_FOUND: Verify the resource ID or URL.'
- '403 Forbidden: You do not have permission to access this resource'
- エラーメッセージを読まない場合、バグの発生箇所の可能性は無限に存在しうる。
- その一つの例としては、「失敗するはずのテストをなかなか動かそうとしない」という現象としても現れる。
- 実際には、本番のエラーはさておき、開発環境上でのエラーなんて起きたところで誰も困らない。
- 'INVALID_SMILES: Check the generated SMILES for validity'
- 'OUT_OF_MEMORY: Reduce batch size or input length'
- 'Model underfitting: Increase model complexity or data diversity.'
- '401 Unauthorized: Recheck OAuth token.'
- '401 Unauthorized: Check your access token'
- '400 Bad Request: Check the SMILES format.'
- '404 Not Found: Requested resource does not exist.'
- 'INVALID_SMILES: Check the formatting of the SMILES string.'
- 'API_RATE_LIMIT: Reduce the frequency of API calls.'
- '401 Unauthorized: Verify access token.'
- '404 Not Found: Check endpoint path.'
- '404 Not Found: Verify the endpoint path or resource ID'
- '401 Unauthorized: Check your credentials or tokens'
- 'INVALID_SMILES: The provided SMILES string is invalid — check format and structure.'
- '404 Not Found: User does not exist.'
- '401 Unauthorized: Invalid token or expired token'
- データが小さいと過学習しやすい
- '401 Unauthorized: Check your token and permissions'
- '403 Forbidden: Insufficient permissions to access this resource'
- 'Invalid_SMILES: Check the SMILES format being inputted'
- 'Model_Training_Error: Ensure proper configuration of training parameters'
- '401 Unauthorized: Check your API key or token.'
- '401 Unauthorized: Check your authentication tokens.'
- '404 Not Found: Resource not found.'
- '401 Unauthorized: Check the access token validity.'
- '404 Not Found: Resource may not exist or URL is incorrect.'
- '401 Unauthorized: Check your token or permissions'
- '404 Not Found: Verify the endpoint or resource'
- '401 Unauthorized: Check OAuth token and scopes.'
- 'API_ERROR: Check request format and parameters'
- '401 Unauthorized: Ensure valid credentials and token'
- '403 Forbidden: API token is invalid or does not have permission'
- '404 Not Found: The requested resource was not found'
- '401 Unauthorized: Check access token validity'
- '403 Forbidden: Insufficient permissions for this action'
- '401 Unauthorized: Check your access token or permissions'
- '404 Not Found: Resource does not exist or is inaccessible'
- 'エラー: GOOGLE_API_KEY環境変数が設定されていません。'
- 'エラー: 指示をコマンドライン引数として渡してください。'
- '401 Unauthorized: Check API key'
- '400 Bad Request: Invalid request format'
- '403 Forbidden: You do not have permission to view this resource.'
- '403 Forbidden: Check your access rights.'
- '401 Unauthorized: Check your authentication details.'
- '401 Unauthorized: Check your token validity.'
- '404 Not Found: Verify the requested resource exists'
- '404 Not Found: Check the endpoint path or parameters'
- '404 Not Found: User not found.'
- '401 Unauthorized: Check access token'
- '401 Unauthorized: Verify API key and permissions.'
- '401 Unauthorized: Check your API token and permissions'
- Empty todos cannot be added.
- 'AUTHORIZATION_FAILED: Check your GitHub token permissions or secrets configuration.'
- '401 Unauthorized: Check your token.'
- 'CORS_ERROR: API access is denied due to CORS policy'
- '500 Internal Server Error: Check if the API endpoint is valid and working.'
- 'INVALID_REQUEST: Ensure all required parameters are included'
- 'UNAUTHORIZED: Check your API key and permissions'
- 'RATE_LIMIT_EXCEEDED: Reduce the frequency of requests'
- '401 Unauthorized: Check your API token.'
- '403 Forbidden: Access denied, check permissions'
- '404 Not Found: Check the requested resource path'
- '403 Forbidden: Access denied.'
- '403 Forbidden: You do not have access to this resource.'
- '404 Not Found: The requested endpoint does not exist.'
- 'FILE_NOT_FOUND: Check if the specified file path is correct'
- 'INVALID_FILE_FORMAT: Ensure the file is in a supported format'
- '403 Forbidden: Check if your token has the necessary permissions.'
- '404 Not Found: Ensure the endpoint is correct and the resource exists.'
- '400 Bad Request: Check audio format and parameters'
- '401 Unauthorized: Invalid API key'
- 法的リスクに注意 - 著作権や利用規約を必ず確認しよう
- '404 Not Found: Check the endpoint or resource ID'
- '429 Too Many Requests: Throttle API calls'
- '404 Not Found: Check the resource path.'
- 'CUDA out of memory: Use quantized models'
- 'Docker error: Insufficient /dev/shm, use --shm-size 2g'
- '404 Not Found: Check the endpoint and resource id'
- '401 Unauthorized: Check access token.'
- 'INVALID_INPUT: Ensure the input format and images are correct.'
- 'PROCESSING_ERROR: Check the prompt and try again.'
- '404 Not Found: Ensure the resource path is correct'
- '401 Unauthorized: Check the access token validity'
- '404 Not Found: Ensure the endpoint exists'
- '401 Unauthorized: Check your access token and its expiration.'
- '403 Forbidden: Check your access token and permissions.'
- '403 Forbidden: Check if access is allowed for the resource'
- '403 Forbidden: Check your access permissions.'
- Cannot participate because closed.
- '401 Unauthorized: Check your API key.'
- '403 Forbidden: Ensure you have the correct permissions'
- '401 Unauthorized: Check OAuth token or scopes'
- '429 Too Many Requests: Throttle your requests'
- 'SYNTAX_ERROR: Check SQL syntax and try again'
- 'TIMEOUT: Optimize queries or increase timeout settings'
- '404 Not Found: Check if the endpoint is correct or if the resource exists.'
- 'TestingLibraryElementError: Unable to find an element with the text: 完了済み: 1 /
  5'
- '400: Title is required'
- '404: Todo not found'
- '401 Unauthorized: Check API token'
- 'Disallowed operation called within global scope. Asynchronous I/O (ex: fetch()
  or connect()), setting a timeout, and generating random values are not allowed within
  global scope.'
- '401 Unauthorized: Check token validity or scopes'
- '404 Not Found: Verify endpoint path'
- 'TLE: Time Limit Exceeded'
- Objectモードになった場合にエラーになることがある。
- '404 Not Found: Verify the endpoint and resource.'
- 'FileNotFoundException: Ensure the input file path is correct.'
- 'InvalidFormatException: The file format is not supported.'
- '403 Forbidden: You don’t have permission to access this resource.'
- Insufficient scratch space
- '403 Forbidden: Check API access permissions'
- '400 Bad Request: Check your request payload'
- '403 Forbidden: You''ve exceeded the access limits'
- '401 Unauthorized: Check the provided credentials.'
- 24時間以内に100件しか生成できないリミット
- 'command not found: tsx: tsxがインストールされていない'
- 'Cannot find module: スクリプトファイルが存在しない'
- 'Permission denied: 実行権限がない'
- 'error[E0658]: linking to associated items of raw pointers is experimental'
- 'SQL injection対策: ORMのパラメータ化クエリ'
- 'XSS対策: 出力時エスケープ'
- 'CSRF対策: トークン検証'
- '404 Not Found: Check the owner and repo names.'
- '422 Unprocessable Entity: Ensure that your request body is correctly formatted.'
- '`command not found: tsx`: tsxがインストールされていない'
- '`Cannot find module`: スクリプトファイルが存在しない'
- '`Permission denied`: 実行権限がない'
- 手動での受け渡しが必要
- ファイル名の命名規則が重要
- 'INVALID_CONTEXT: コンテキストウィンドウの限界に到達'
- 'AGENT_FAILURE: エージェントのハルシネーション'
- '500 Internal Server Error: Retry the request'
- '403 Forbidden: Check if the user has sufficient permissions'
- '403 Forbidden: Check permissions or authentication.'
- '404 Not Found: Verify endpoint or resource existence.'
- 'SYNTAX_ERROR: Check your SQL syntax.'
- 'ACCESS_DENIED: Ensure you have the necessary permissions.'
- 'TIMEOUT: The query took too long to execute.'
- 'CONFLICT (content): Merge conflict in src/shared/types.ts'
- 'CONFLICT (content): Merge conflict in src/shared/constants.ts'
- '401 Unauthorized: Check the access token.'
- '403 Forbidden: Ensure you have permissions to access this resource.'
- 'スコープクリープ: 明確な要件定義が必要'
- トークン数が多すぎて遅い
- ネットワークが遅い
- 'API仕様の変更: 高 | モックサーバー準備'
- '外部ライブラリの互換性: 中 | 事前検証スパイク'
- '500 Internal Server Error: Server issues'
- 'Scratch使用率: < 15%'
- 'History使用率: > 30%'
- 'Evidence使用率: > 60%'
- '総ウィンドウ使用率: > 90%'
- '/compact実行間隔: > 30ターン'
- '401 Unauthorized: Check if the access token is valid.'
- '知識の分断: Aさんが決めた設計をBさんのエージェントが知らない'
- '重複作業: 同じコンテキストを各メンバーが個別に整備'
- 'オンボーディング困難: 新メンバーが「暗黙知」を引き継げない'
- 'デバッグ不能: エージェントの出力根拠が追跡できない'
- '403 Forbidden: Check API permissions and scopes'
- '404 Not Found: Verify endpoint path and parameters'
- '401 Unauthorized: Check OAuth token validity'
- '知識の分断: 一貫性の欠如'
- '重複作業: 時間の無駄'
- 'オンボーディング困難: 生産性低下'
- 'デバッグ不能: 品質リスク'
- '403 Forbidden: Check if user is logged in and has necessary permissions.'
- '404 Not Found: Verify the endpoint and requested resource.'
- 必須セクションが見つかりません
- 'バージョン情報が見つかりません（形式: バージョン: X.Y.Z）'
- '最終更新日が見つかりません（形式: 最終更新: YYYY-MM-DD）'
- '401 Unauthorized: Check your token or authorization settings'
- '404 Not Found: Verify the endpoint and resource IDs'
- '401 Unauthorized: Check your authentication credentials'
- '403 Forbidden: Check your permissions.'
- '401 Unauthorized: Check OAuth token validity.'
- 'Usage: npm run ai:onboarding complete <item-id>'
- 'INVALID_CREDENTIALS: Check username and password'
- 'InvalidChangeBatch: [RRSet with DNS name your-domain.com., type A cannot be created
  as other RRSets exist with the same name and type.]'
- 'InvalidChangeBatch: 同じ名前とタイプのレコードが共存できない'
- '401 Unauthorized: Check your access token or client credentials'
- '401 Unauthorized: Invalid token or expired session.'
- 'Error: Your local changes would be overwritten by merge.'
- 'Error: Agent depends on another agent that has not completed yet.'
- 'TOKEN_EXPIRED: Refresh the token'
- '403 FORBIDDEN: Check user permissions'
- '401 Unauthorized: Invalid credentials or token expired'
- '401 Unauthorized: Invalid token provided'
- '出力品質の低下: 突然コードの質が悪くなった'
- '応答の遅延: 以前は5秒、今は30秒'
- '矛盾した提案: 前回と違う実装を提案'
- トークン超過を考慮していない。入るだけ入れようは危険——トークン上限は厳格です。
- APIレート制限を無視。連続で100回リクエストは避けるべきです。
- 'TOKEN_COUNT_EXCEEDED: Reduce context size or optimize.'
- 'CONTRADICTION_DETECTED: Resolve conflicts between context files.'
- 'STALE_FILES_FOUND: Review and update old context files.'
- '403 Forbidden: Check user permissions'
- '404 Not Found: Ensure the resource exists'
- '404 Not Found: Verify the resource path.'
- 不正な視聴者を配信システムに入れる前に遮断します。
- '401 Unauthorized: Ensure valid OAuth token'
- '401 Unauthorized: Check client credentials and token validity.'
- '403 Forbidden: Verify user permissions for requested data.'
- '404 Not Found: Confirm endpoint URL and resource availability.'
- Key is stored in legacy trusted.gpg keyring, see the DEPRECATION section in apt-key(8)
  for details.
- '401 Unauthorized: Check your certificate or domain configuration.'
- '401 Unauthorized: Check your token'
- 'InvalidChangeBatch: 既に同じレコードが存在する'
- '404 Not Found: The specified user or article does not exist.'
- '404 Not Found: Check the endpoint path or resource identifier.'
- '404 Not Found: Ensure the endpoint and parameters are correct.'
- '403 Forbidden: You don’t have permission to access this resource'
- '404 Not Found: Verify endpoint and resource existence'
- 'EACCES: Permission denied - Check user permissions.'
- 'ENOENT: No such file or directory - Verify the command or path.'
- 'EINVAL: Invalid argument - Ensure correct syntax for commands.'
auth_info:
  mentioned_objects:
  - NTLMv1
  - NTLMv2
  - LMv2
  - NTLMSSP
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Basic HTTP
  - Agent
  - Merlin
  - CLI RPC clients
  - HTTP Host header
  - Listener
  - OAuthToken
  - AccessToken
  - AuthorizationCodeFlow
  - AuthorizationCode
  - ClientCredentials
  - User
  - Oauth2
  - OAuth
  - OAuth2
  - RefreshToken
  - secrets.GOOGLE_APPLICATION_CREDENTIALS
  - API key
  - LINE_CHANNEL_SECRET
  - LINE_CHANNEL_ACCESS_TOKEN
  - GOOGLE_APPLICATION_CREDENTIALS
  - Authorization
  - MessagingApi
  - Token
  - Item
client:
  base_url: http://192.168.11.4
source_metadata: null
