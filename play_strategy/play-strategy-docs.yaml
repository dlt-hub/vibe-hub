resources:
- name: user_activity
  endpoint:
    path: /player/activity
    method: GET
    data_selector: activity
    params:
      username: string
- name: get_users_by_id
  endpoint:
    path: /users
    method: POST
    data_selector: users
- name: get_members_of_a_team
  endpoint:
    path: /team/{teamId}/members
    method: GET
    data_selector: members
- name: get_live_streamers
  endpoint:
    path: /streamers
    method: GET
    data_selector: streamers
- name: get_crosstable
  endpoint:
    path: /crosstable
    method: GET
    data_selector: crosstable
- name: autocomplete_usernames
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: usernames
- name: get_users_followed_by_a_user
  endpoint:
    path: /users/{username}/followed
    method: GET
    data_selector: followed_users
- name: get_users_who_follow_a_user
  endpoint:
    path: /users/{username}/followers
    method: GET
    data_selector: followers
- name: export_one_game
  endpoint:
    path: /games/{gameId}/export
    method: GET
    data_selector: exported_game
- name: export_ongoing_game_of_a_user
  endpoint:
    path: /users/{username}/game/export
    method: GET
    data_selector: ongoing_game
- name: export_games_by_ids
  endpoint:
    path: /games/export
    method: POST
    data_selector: exported_games
- name: stream_current_games
  endpoint:
    path: /games/stream
    method: POST
    data_selector: current_games
- name: get_current_tv_games
  endpoint:
    path: /tv/games
    method: GET
    data_selector: tv_games
- name: stream_current_tv_game
  endpoint:
    path: /tv/feed
    method: GET
    data_selector: tv_game_feed
- name: stream_moves_of_a_game
  endpoint:
    path: /games/{gameId}/stream
    method: GET
    data_selector: game_moves
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: ok
    params:
      teamId: coders
- name: get_teams
  endpoint:
    path: /team
    method: GET
    data_selector: teams
    params: {}
- name: account
  endpoint:
    path: /api/account
    method: GET
    data_selector: data
- name: users_status
  endpoint:
    path: /api/users/status
    method: GET
    data_selector: data
    params:
      ids: required
- name: rating_history
  endpoint:
    path: /api/user/{username}/rating-history
    method: GET
    data_selector: rating history
- name: user_activity
  endpoint:
    path: /api/user/{username}/activity
    method: GET
    data_selector: activity feed
- name: users_by_id
  endpoint:
    path: /api/users
    method: POST
    data_selector: users
    params: {}
- name: team_members
  endpoint:
    path: /api/team/{teamId}/users
    method: GET
    data_selector: members
- name: live_streamers
  endpoint:
    path: /streamer/live
    method: GET
    data_selector: live streamers
- name: crosstable
  endpoint:
    path: /api/crosstable/{user1}/{user2}
    method: GET
    data_selector: crosstable data
- name: autocomplete_usernames
  endpoint:
    path: /api/player/autocomplete
    method: GET
    data_selector: autocomplete results
- name: following_users
  endpoint:
    path: /api/user/{username}/following
    method: GET
    data_selector: followed users
- name: user_activity
  endpoint:
    path: /player/activity
    method: GET
    data_selector: records
    params: {}
- name: user_public_data
  endpoint:
    path: /player
    method: GET
    data_selector: records
    params: {}
- name: rating_history
  endpoint:
    path: /player/rating-history
    method: GET
    data_selector: records
    params: {}
- name: user_followers
  endpoint:
    path: /api/user/{username}/followers
    method: GET
    data_selector: followers
- name: export_game
  endpoint:
    path: /game/export/{gameId}
    method: GET
    data_selector: game
- name: current_game
  endpoint:
    path: /api/user/{username}/current-game
    method: GET
    data_selector: current_game
- name: user_games
  endpoint:
    path: /api/games/user/{username}
    method: GET
    data_selector: games
- name: export_games_by_ids
  endpoint:
    path: /games/export/_ids
    method: POST
    data_selector: games
- name: stream_games_by_users
  endpoint:
    path: /api/stream/games-by-users
    method: POST
    data_selector: games
- name: ongoing_games
  endpoint:
    path: /api/account/playing
    method: GET
    data_selector: nowPlaying
- name: current_tv_games
  endpoint:
    path: /api/tv/channels
    method: GET
    data_selector: channels
- name: current_tv_game
  endpoint:
    path: /tv/feed
    method: GET
    data_selector: stream of the current TV game
- name: game_stream
  endpoint:
    path: /stream/game/{id}
    method: GET
    data_selector: stream of the game moves
- name: import_game
  endpoint:
    path: /import
    method: POST
    data_selector: game import response
- name: get_team_swiss_tournaments
  endpoint:
    path: /team/{teamId}/swiss
    method: GET
    data_selector: list of Swiss tournaments of a team
- name: get_single_team
  endpoint:
    path: /team/{teamId}
    method: GET
    data_selector: information about the team
- name: get_popular_teams
  endpoint:
    path: /team/all
    method: GET
    data_selector: paginated list of the most popular teams
- name: get_teams_of_player
  endpoint:
    path: /team/of/{username}
    method: GET
    data_selector: list of teams the user is a member of
- name: search_teams
  endpoint:
    path: /team/search
    method: GET
    data_selector: paginated list of teams
- name: get_members_of_team
  endpoint:
    path: /team/{teamId}/users
    method: GET
    data_selector: list of users in the team
- name: get_team_arena_tournaments
  endpoint:
    path: /team/{teamId}/arena
    method: GET
    data_selector: list of Arena tournaments of a team
- name: get_users_by_id
  endpoint:
    path: /users
    method: POST
    data_selector: users
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: message
- name: get_members_of_a_team
  endpoint:
    path: /team/{teamId}/members
    method: GET
    data_selector: members
- name: get_live_streamers
  endpoint:
    path: /live_streamers
    method: GET
    data_selector: streamers
- name: get_crosstable
  endpoint:
    path: /crosstable
    method: GET
    data_selector: crosstable
- name: autocomplete_usernames
  endpoint:
    path: /autocomplete
    method: GET
    data_selector: usernames
- name: get_users_followed_by_user
  endpoint:
    path: /users/{username}/followed
    method: GET
    data_selector: followed_users
- name: get_users_who_follow_user
  endpoint:
    path: /users/{username}/followers
    method: GET
    data_selector: followers
- name: export_one_game
  endpoint:
    path: /games/{gameId}/export
    method: GET
    data_selector: game_export
- name: export_ongoing_game_of_user
  endpoint:
    path: /users/{username}/ongoing_game/export
    method: GET
    data_selector: ongoing_game_export
- name: export_games_by_ids
  endpoint:
    path: /games/export
    method: POST
    data_selector: games_export
- name: stream_current_games
  endpoint:
    path: /games/stream
    method: POST
    data_selector: current_games
- name: get_current_tv_games
  endpoint:
    path: /tv/games
    method: GET
    data_selector: tv_games
- name: stream_current_tv_game
  endpoint:
    path: /tv/feed
    method: GET
    data_selector: tv_game_feed
- name: stream_moves_of_a_game
  endpoint:
    path: /games/{gameId}/stream
    method: GET
    data_selector: game_moves
- name: join_team
  endpoint:
    path: /team/{teamId}/join
    method: POST
- name: leave_team
  endpoint:
    path: /team/{teamId}/quit
    method: POST
- name: kick_user
  endpoint:
    path: /team/{teamId}/kick/{userId}
    method: POST
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: ok
    params:
      teamId: string
- name: get_teams
  endpoint:
    path: /team
    method: GET
    data_selector: teams
    params: {}
- name: get_team_members
  endpoint:
    path: /team/{teamId}/members
    method: GET
    data_selector: members
    params:
      teamId: string
- name: get_popular_teams
  endpoint:
    path: /team/popular
    method: GET
    data_selector: popular_teams
    params:
      page: number
- name: search_teams
  endpoint:
    path: /team/search
    method: GET
    data_selector: search_results
    params:
      text: string
      page: number
- name: stream_event
  endpoint:
    path: /stream/event
    method: GET
    data_selector: events
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: message
- name: challenge_create
  endpoint:
    path: /api/challenge/{username}
    method: POST
    data_selector: challenge
- name: account
  endpoint:
    path: /api/account
    method: GET
    data_selector: profile
- name: users_status
  endpoint:
    path: /api/users/status
    method: GET
    data_selector: users
- name: top_players
  endpoint:
    path: /player
    method: GET
    data_selector: players
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: ok
    params:
      teamId: string
- name: current_tournaments
  endpoint:
    path: /api/tournament
    method: GET
    data_selector: tournaments
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
- name: rating_history
  endpoint:
    path: /api/user/{username}/rating-history
    method: GET
- name: user_activity
  endpoint:
    path: /api/user/{username}/activity
    method: GET
- name: users_by_id
  endpoint:
    path: /api/users
    method: POST
- name: team_members
  endpoint:
    path: /api/team/{teamId}/users
    method: GET
- name: live_streamers
  endpoint:
    path: /streamer/live
    method: GET
- name: crosstable
  endpoint:
    path: /api/crosstable/{user1}/{user2}
    method: GET
- name: autocomplete_usernames
  endpoint:
    path: /api/player/autocomplete
    method: GET
- name: following_users
  endpoint:
    path: /api/user/{username}/following
    method: GET
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: ok
    params:
      teamId: coders
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: ok
    params: {}
- name: create_swiss_tournament
  endpoint:
    path: /api/swiss/new/{teamId}
    method: POST
    data_selector: ok
    params: {}
- name: export_all_chapters
  endpoint:
    path: /study/{studyId}/{chapterId}.pgn
    method: GET
    data_selector: ok
    params: {}
- name: export_all_studies
  endpoint:
    path: /user/{username}/studies
    method: GET
    data_selector: ok
    params: {}
- name: create_broadcast
  endpoint:
    path: /broadcast/new
    method: POST
    data_selector: ok
    params: {}
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: message
- name: user_followers
  endpoint:
    path: /api/user/{username}/followers
    method: GET
    data_selector: follower_list
- name: user_current_game
  endpoint:
    path: /api/user/{username}/current-game
    method: GET
    data_selector: current_game
- name: user_games
  endpoint:
    path: /api/games/user/{username}
    method: GET
    data_selector: games_list
- name: games_export_ids
  endpoint:
    path: /games/export/_ids
    method: POST
    data_selector: games_export
- name: stream_games_by_users
  endpoint:
    path: /api/stream/games-by-users
    method: POST
    data_selector: streamed_games
- name: ongoing_games
  endpoint:
    path: /api/account/playing
    method: GET
    data_selector: nowPlaying
- name: current_tv_games
  endpoint:
    path: /api/tv/channels
    method: GET
    data_selector: tv_games
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: ok
    params: {}
- name: cloud_eval
  endpoint:
    path: /api/cloud-eval
    method: GET
    data_selector: fen
    params: {}
- name: account_info
  endpoint:
    path: /api/account
    method: GET
    data_selector: id
    params: {}
- name: broadcast
  endpoint:
    path: /broadcast/new
    method: POST
    data_selector: broadcast
    params: {}
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: message
    params:
      teamId: coders
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: ok
- name: current_tv_game
  endpoint:
    path: /api/tv/feed
    method: GET
    data_selector: stream
    params: {}
- name: game_stream
  endpoint:
    path: /api/stream/game/{id}
    method: GET
    data_selector: stream
    params: {}
- name: import_game
  endpoint:
    path: /api/import
    method: POST
    data_selector: game_import
    params: {}
- name: team_swiss_tournaments
  endpoint:
    path: /api/team/{teamId}/swiss
    method: GET
    data_selector: swiss_tournaments
    params: {}
- name: single_team
  endpoint:
    path: /api/team/{teamId}
    method: GET
    data_selector: team_info
    params: {}
- name: popular_teams
  endpoint:
    path: /api/team/all
    method: GET
    data_selector: popular_teams
    params: {}
- name: teams_of_player
  endpoint:
    path: /api/team/of/{username}
    method: GET
    data_selector: teams
    params: {}
- name: search_teams
  endpoint:
    path: /api/team/search
    method: GET
    data_selector: search_results
    params: {}
- name: team_members
  endpoint:
    path: /api/team/{teamId}/users
    method: GET
    data_selector: team_members
    params: {}
- name: team_arena_tournaments
  endpoint:
    path: /api/team/{teamId}/arena
    method: GET
    data_selector: arena_tournaments
    params: {}
- name: swiss_tournaments
  endpoint:
    path: /swiss
    method: GET
    data_selector: tournaments
    params: {}
- name: join_team
  endpoint:
    path: /team/{teamId}/join
    method: POST
    data_selector: ok
    params: {}
- name: leave_team
  endpoint:
    path: /team/{teamId}/quit
    method: POST
    data_selector: ok
    params: {}
- name: kick_user
  endpoint:
    path: /team/{teamId}/kick/{userId}
    method: POST
    data_selector: ok
    params: {}
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: ok
    params: {}
- name: stream_event
  endpoint:
    path: /api/stream/event
    method: GET
    data_selector: events
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: response
- name: create_challenge
  endpoint:
    path: /api/challenge/{username}
    method: POST
    data_selector: response
- name: game_stream
  endpoint:
    path: /api/board/game/stream/{gameId}
    method: GET
    data_selector: response
- name: game_move
  endpoint:
    path: /api/board/game/{gameId}/move/{move}
    method: POST
    data_selector: response
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: ok
    params:
      teamId: required
- name: current_tournaments
  endpoint:
    path: /api/tournament
    method: GET
    data_selector: tournaments
- name: bulk_pairing
  endpoint:
    path: /api/bulk-pairing
    method: GET
    data_selector: bulk_pairing
- name: activity
  endpoint:
    path: /@/CapeTownPlayer/activity
    method: GET
    data_selector: activity_records
- name: games
  endpoint:
    path: /@/CapeTownPlayer/all
    method: GET
    data_selector: game_records
- name: followers
  endpoint:
    path: /@/CapeTownPlayer/followers
    method: GET
    data_selector: follower_records
- name: forum_posts
  endpoint:
    path: /forum/search?text=user%3ACapeTownPlayer
    method: GET
    data_selector: forum_post_records
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: id
    params:
      teamId: string
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: ok
    params:
      teamId: coders
- name: games
  endpoint:
    path: /@/K2N_coach/all
    method: GET
    data_selector: games
    params: {}
- name: tournaments
  endpoint:
    path: /@/K2N_coach/tournaments/recent
    method: GET
    data_selector: tournaments
    params: {}
- name: studies
  endpoint:
    path: /study/by/K2N_coach
    method: GET
    data_selector: studies
    params: {}
- name: forum_posts
  endpoint:
    path: /forum/search?text=user%3AK2N_coach
    method: GET
    data_selector: forum_posts
    params: {}
- name: activity
  endpoint:
    path: /@/Iceicle/activity
    method: GET
    data_selector: games
    params: {}
- name: games
  endpoint:
    path: /@/Iceicle/all
    method: GET
    data_selector: games
    params: {}
- name: followers
  endpoint:
    path: /@/Iceicle/followers
    method: GET
    data_selector: followers
    params: {}
- name: forum_posts
  endpoint:
    path: /forum/search?text=user%3AIceicle
    method: GET
    data_selector: forum_posts
    params: {}
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: ok
    params: {}
- name: create_swiss_tournament
  endpoint:
    path: /api/swiss/new/{teamId}
    method: POST
    data_selector: ok
    params: {}
- name: get_simuls
  endpoint:
    path: /api/simul
    method: GET
    data_selector: ''
    params: {}
- name: export_study_chapters
  endpoint:
    path: /study/{studyId}/{chapterId}.pgn
    method: GET
    data_selector: ''
    params: {}
- name: export_user_studies
  endpoint:
    path: /api/studies/{username}
    method: GET
    data_selector: ''
    params: {}
- name: create_broadcast
  endpoint:
    path: /broadcast/new
    method: POST
    data_selector: ''
    params: {}
- name: activity
  endpoint:
    path: /@/WildWizard/activity
    method: GET
    data_selector: records
- name: games
  endpoint:
    path: /@/WildWizard/all
    method: GET
    data_selector: records
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: message
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: ok
    params:
      teamId: coders
- name: cloud_eval
  endpoint:
    path: /api/cloud-eval
    method: GET
    data_selector: fen
- name: account_info
  endpoint:
    path: /api/account
    method: GET
    data_selector: id
- name: games
  endpoint:
    path: /@/e-pluszak/games
    method: GET
    data_selector: games
    params: {}
- name: performance
  endpoint:
    path: /@/e-pluszak/perf
    method: GET
    data_selector: performance
    params: {}
- name: create_broadcast
  endpoint:
    path: /broadcast/new
    method: POST
    data_selector: broadcast
    params: {}
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: message
    params: {}
- name: LowestPosWinRate
  endpoint:
    path: /@/LowestPosWinRate
    method: GET
    data_selector: records
- name: message_all_members
  endpoint:
    path: /team/{teamId}/pm-all
    method: POST
    data_selector: ok
    params:
      teamId: required
- name: game_library
  endpoint:
    path: /library
    method: GET
    data_selector: games
    params: {}
- name: tournaments
  endpoint:
    path: /tournament
    method: GET
    data_selector: tournaments
    params: {}
- name: players
  endpoint:
    path: /player
    method: GET
    data_selector: players
    params: {}
- name: game_library
  endpoint:
    path: /library
    method: GET
- name: tournaments
  endpoint:
    path: /tournament
    method: GET
- name: community
  endpoint:
    path: /player
    method: GET
- name: Contact
  endpoint:
    path: /contact
    method: GET
- name: Account Support
  endpoint:
    path: /account
    method: GET
- name: swiss_tournaments
  endpoint:
    path: /swiss
    method: GET
    data_selector: tournaments
    params: {}
- name: user_information
  endpoint:
    path: /api/user_information
    method: GET
    data_selector: user_data
    params: {}
- name: game_statistics
  endpoint:
    path: /api/game_statistics
    method: GET
    data_selector: game_data
    params: {}
- name: fischer
  endpoint:
    path: /page/clocks/fischer
    method: GET
    data_selector: examples
- name: byoyomi
  endpoint:
    path: /page/clocks/byoyomi
    method: GET
    data_selector: examples
- name: bronstein
  endpoint:
    path: /page/clocks/bronstein
    method: GET
    data_selector: examples
- name: simple_delay
  endpoint:
    path: /page/clocks/simple_delay
    method: GET
    data_selector: examples
- name: correspondence
  endpoint:
    path: /page/clocks/correspondence
    method: GET
    data_selector: examples
- name: unlimited
  endpoint:
    path: /page/clocks/unlimited
    method: GET
    data_selector: examples
- name: create_game
  endpoint:
    path: /create/game
    method: POST
    data_selector: game_details
- name: tournament_winners
  endpoint:
    path: /tournament/leaderboard
    method: GET
    data_selector: records
- name: open_tournaments
  endpoint:
    path: /tournament
    method: GET
    data_selector: records
- name: latest_forum_posts
  endpoint:
    path: /forum
    method: GET
    data_selector: records
- name: games
  endpoint:
    path: /@/CapeTownPlayer/all
    method: GET
    data_selector: games
    params: {}
- name: activity
  endpoint:
    path: /@/CapeTownPlayer
    method: GET
    data_selector: activity
    params: {}
- name: forum_posts
  endpoint:
    path: /forum/search?text=user%3ACapeTownPlayer
    method: GET
    data_selector: forum posts
    params: {}
- name: K2N_coach
  endpoint:
    path: /@/K2N_coach
    method: GET
- name: activity
  endpoint:
    path: /@/Iceicle
    method: GET
    data_selector: activity
    params: {}
- name: games
  endpoint:
    path: /@/Iceicle/all
    method: GET
    data_selector: games
    params: {}
- name: activity
  endpoint:
    path: /@/Iceicle
    method: GET
    data_selector: activity
    params: {}
- name: games
  endpoint:
    path: /@/Iceicle/all
    method: GET
    data_selector: games
    params: {}
- name: forum_posts
  endpoint:
    path: /forum/search?text=user%3AIceicle
    method: GET
    data_selector: forum_posts
    params: {}
- name: activity
  endpoint:
    path: /@/oruro
    method: GET
    data_selector: records
- name: games
  endpoint:
    path: /games
    method: GET
    data_selector: records
- name: tournaments
  endpoint:
    path: /tournament
    method: GET
    data_selector: records
- name: players
  endpoint:
    path: /player
    method: GET
    data_selector: records
- name: LowestPosWinRate
  endpoint:
    path: /@/LowestPosWinRate
    method: GET
    data_selector: records
notes:
- All requests are rate limited using various strategies, to ensure the API remains
  responsive for everyone.
- You must own the team to send messages.
- API supports multiple endpoints for user-related data.
- Requires OAuth for certain functionalities.
- All requests are rate limited. Only make one request at a time.
- 'Bots can only play challenge games: pools and tournaments are off-limits'
- Bots cannot play UltraBullet (¼+0) because it requires making too many requests.
  But 0+1 and ½+0 are allowed.
- All requests are rate limited; only make one request at a time.
- You must own the team to send a message.
- OAuth2 is required for all operations involving teams.
- PlayStrategy is a real-time platform to play two-player Mind Sports board games.
- Over 30 different games available including Chess, Go, Othello, Mancala, Draughts.
- You must own the team.
- Requires OAuth2 authentication.
- Enable blind mode
- For Play Strategy internal usage only. You are not allowed to use this flag.
- DNS issues can affect access to playstrategy.org
- User information is collected for registration and moderation purposes.
- Cookies are used to save site preferences.
- Enable blind mode for accessibility.
- Uses OAuth2 for authentication.
- No authentication is required to access the endpoints.
- Member since 24 Aug 2022
- Active 7 hours ago
errors:
- '429: Too Many Requests - wait a full minute before resuming API usage.'
- '400: The sending of message to all team members has failed.'
- '429: Too Many Requests - please wait a full minute before resuming API usage.'
- '401 Unauthorized: Check authentication credentials.'
- '404 Not Found: Ensure the username or endpoint path is correct.'
- '429: Too Many Requests - Please wait a full minute before resuming API usage.'
- '403 Forbidden: If the team join policy requires confirmation and the team owner
  is not the oAuth app owner and the message field is not set'
- '400: The sending of message to all team members has failed'
- '400: The creation of the challenge failed.'
- '429 Too Many Requests: Please wait a full minute before resuming API usage.'
- '403 Forbidden: Team join policy requires confirmation or message field is not set.'
auth_info:
  mentioned_objects:
  - OAuth2
  - OauthToken
client:
  base_url: https://playstrategy.org
source_metadata: null
