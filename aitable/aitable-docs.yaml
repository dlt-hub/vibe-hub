resources:
- name: records
  endpoint:
    path: /fusion/v1/datasheets/{datasheetId}/records
    method: GET
    data_selector: records
- name: delete_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}
    method: DELETE
    data_selector: success
    params: {}
- name: create_records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: POST
    data_selector: records
    params: {}
- name: update_records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: PATCH
    data_selector: records
    params: {}
- name: delete_records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: DELETE
    data_selector: success
    params:
      recordIds: array of strings
- name: records
  endpoint:
    path: /fusion/v1/datasheets/{datasheetId}/records
    method: GET
    data_selector: data.records
    params:
      pageSize: 100
      maxRecords: 1000
- name: create_records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: POST
    data_selector: records
- name: update_records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: PATCH
    data_selector: records
- name: delete_records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: DELETE
    data_selector: data
- name: field_types
  endpoint:
    path: /field_types
    method: GET
    data_selector: field_types
- name: style
  endpoint:
    path: /widget/styles
    method: GET
    data_selector: styles
    params: {}
- name: action
  endpoint:
    path: /widget/actions
    method: GET
    data_selector: actions
    params: {}
- name: get_node_list
  endpoint:
    path: /v1/spaces/{spaceId}/nodes
    method: GET
- name: get_view
  endpoint:
    path: /v1/datasheets/{datasheetId}/views
    method: GET
- name: get_field
  endpoint:
    path: /v1/datasheets/{datasheetId}/fields
    method: GET
- name: delete_role
  endpoint:
    path: /v1/spaces/{spaceId}/roles/{unitId}
    method: DELETE
- name: create_datasheet
  endpoint:
    path: /v1/spaces/{spaceId}/datasheets
    method: POST
- name: upload_attachment
  endpoint:
    path: /v1/datasheets/{datasheetId}/attachments
    method: POST
- name: get_spaces
  endpoint:
    path: /v1/spaces
    method: GET
- name: delete_role
  endpoint:
    path: /fusion/v1/spaces/{spaceId}/roles/{unitId}
    method: DELETE
- name: get_member
  endpoint:
    path: /fusion/v1/spaces/{spaceId}/members/{unitId}
    method: GET
    params:
      sensitiveData: sensitiveData=true
- name: create_chat_completions
  endpoint:
    path: /fusion/v1/ai/{ai_id}/chat/completions
    method: POST
- name: delete_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}
    method: DELETE
    params:
      spaceId: required
      unitId: required
- name: records
  endpoint:
    path: /fusion/v1/datasheets/{datasheetId}/records
    method: GET
    data_selector: records
- name: delete_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}
    method: DELETE
    params: {}
- name: create_records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: POST
    params: {}
- name: update_records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: PATCH
    params: {}
- name: delete_records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: DELETE
    params: {}
- name: datasheet_records
  endpoint:
    path: /fusion/v1/datasheets/{datasheetId}/records
    method: GET
    data_selector: records
    params:
      pageSize: '100'
- name: create_records
  endpoint:
    path: /fusion/v1/datasheets/{datasheetId}/records
    method: POST
    data_selector: records
- name: update_records
  endpoint:
    path: /fusion/v1/datasheets/{datasheetId}/records
    method: PATCH
    data_selector: records
- name: delete_records
  endpoint:
    path: /fusion/v1/datasheets/{datasheetId}/records
    method: DELETE
    data_selector: records
- name: Field
  endpoint:
    path: /widget/fields
    method: GET
    data_selector: records
- name: style
  endpoint:
    path: /widget/styles
    method: GET
    data_selector: records
- name: action
  endpoint:
    path: /widget/actions
    method: GET
    data_selector: records
- name: openLink
  endpoint:
    path: /widget/openLinks
    method: GET
    data_selector: records
- name: get_fields
  endpoint:
    path: /datasheets/{datasheetId}/fields
    method: GET
- name: delete_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}
    method: DELETE
- name: get_views
  endpoint:
    path: /datasheets/{datasheetId}/views
    method: GET
- name: create_datasheet
  endpoint:
    path: /spaces/{spaceId}/datasheets
    method: POST
- name: upload_attachment
  endpoint:
    path: /datasheets/{datasheetId}/attachments
    method: POST
- name: get_list_of_spaces
  endpoint:
    path: /spaces
    method: GET
- name: get_node_list
  endpoint:
    path: /spaces/{spaceId}/nodes
    method: GET
    data_selector: success
    params: {}
- name: delete_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}
    method: DELETE
    data_selector: success
    params: {}
- name: get_member
  endpoint:
    path: /spaces/{spaceId}/members/{unitId}
    method: GET
    data_selector: success
    params:
      sensitiveData: sensitiveData=true
- name: delete_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}
    method: DELETE
- name: list_team_members
  endpoint:
    path: /spaces/{spaceId}/teams/{unitId}/members
    method: GET
- name: list_units_under_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}/units
    method: GET
- name: datasheet
  endpoint:
    path: /api/v1/datasheet
    method: GET
    data_selector: data
    params: {}
- name: datasheet
  endpoint:
    path: /v1/datasheets
    method: GET
    data_selector: data
    params: {}
- name: records
  endpoint:
    path: /fusion/v1/datasheets/{datasheetId}/records
    method: GET
    data_selector: records
    params:
      pageSize: 100
- name: delete_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}
    method: DELETE
    params: {}
- name: create_records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: POST
    params: {}
- name: update_records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: PATCH
    params: {}
- name: delete_records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: DELETE
    params: {}
- name: records
  endpoint:
    path: /fusion/v1/datasheets/{datasheetId}/records
    method: GET
    data_selector: data.records
    params:
      pageSize: '100'
- name: create_records
  endpoint:
    path: /fusion/v1/datasheets/{datasheetId}/records
    method: POST
    data_selector: records
    params: {}
- name: update_records
  endpoint:
    path: /fusion/v1/datasheets/{datasheetId}/records
    method: PATCH
    data_selector: records
    params: {}
- name: delete_records
  endpoint:
    path: /fusion/v1/datasheets/{datasheetId}/records
    method: DELETE
    data_selector: records
    params: {}
- name: Field
  endpoint:
    path: /widget/fields
    method: GET
    data_selector: records
    params: {}
- name: style
  endpoint:
    path: /widget/styles
    method: GET
    data_selector: records
    params: {}
- name: action
  endpoint:
    path: /widget/actions
    method: GET
    data_selector: records
    params: {}
- name: get_node_list
  endpoint:
    path: /v1/spaces/{spaceId}/nodes
    method: GET
- name: get_field
  endpoint:
    path: /v1/datasheets/{datasheetId}/fields
    method: GET
- name: get_view
  endpoint:
    path: /v1/datasheets/{datasheetId}/views
    method: GET
- name: delete_role
  endpoint:
    path: /v1/spaces/{spaceId}/roles/{unitId}
    method: DELETE
- name: create_datasheet
  endpoint:
    path: /v1/spaces/{spaceId}/datasheets
    method: POST
- name: upload_attachment
  endpoint:
    path: /v1/datasheets/{datasheetId}/attachments
    method: POST
- name: get_spaces
  endpoint:
    path: /v1/spaces
    method: GET
- name: delete_role
  endpoint:
    path: /fusion/v1/spaces/{spaceId}/roles/{unitId}
    method: DELETE
- name: get_member
  endpoint:
    path: /fusion/v1/spaces/{spaceId}/members/{unitId}
    method: GET
    params:
      sensitiveData: sensitiveData=true
- name: create_chat_completions
  endpoint:
    path: /fusion/v1/ai/{ai_id}/chat/completions
    method: POST
- name: delete_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}
    method: DELETE
- name: list_team_members
  endpoint:
    path: /spaces/{spaceId}/teams/{unitId}/members
    method: GET
- name: list_units_under_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}/units
    method: GET
- name: list_roles
  endpoint:
    path: /spaces/{spaceId}/roles
    method: GET
- name: delete_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}
    method: DELETE
    data_selector: success
    params:
      spaceId: string
      unitId: string
- name: contacts
  endpoint:
    path: /api/contacts
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: GET
    data_selector: records
    params:
      pageSize: 100
      pageNum: 1
- name: delete_record
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: DELETE
    params:
      recordIds: recwZ6yV3Srv3,recwXXyV12454
- name: create_record
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: POST
- name: update_record
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: PATCH
- name: records
  endpoint:
    path: /fusion/v1/datasheets/{datasheetId}/records
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: GET
    data_selector: records
- name: SingleText
  endpoint:
    path: /获取字段
    method: GET
    data_selector: type
    params: {}
- name: SingleSelect
  endpoint:
    path: /获取字段
    method: GET
    data_selector: options
    params: {}
- name: MultiSelect
  endpoint:
    path: /获取字段
    method: GET
    data_selector: options
    params: {}
- name: Number
  endpoint:
    path: /获取字段
    method: GET
    data_selector: property
    params: {}
- name: Currency
  endpoint:
    path: /获取字段
    method: GET
    data_selector: property
    params: {}
- name: Percent
  endpoint:
    path: /获取字段
    method: GET
    data_selector: property
    params: {}
- name: DateTime
  endpoint:
    path: /获取字段
    method: GET
    data_selector: property
    params: {}
- name: Attachment
  endpoint:
    path: /获取字段
    method: GET
    data_selector: type
    params: {}
- name: Member
  endpoint:
    path: /获取字段
    method: GET
    data_selector: property
    params: {}
- name: Checkbox
  endpoint:
    path: /获取字段
    method: GET
    data_selector: property
    params: {}
- name: Rating
  endpoint:
    path: /获取字段
    method: GET
    data_selector: property
    params: {}
- name: OneWayLink
  endpoint:
    path: /获取字段
    method: GET
    data_selector: property
    params: {}
- name: TwoWayLink
  endpoint:
    path: /获取字段
    method: GET
    data_selector: property
    params: {}
- name: MagicLookUp
  endpoint:
    path: /获取字段
    method: GET
    data_selector: property
    params: {}
- name: Formula
  endpoint:
    path: /获取字段
    method: GET
    data_selector: property
    params: {}
- name: CreatedTime
  endpoint:
    path: /获取字段
    method: GET
    data_selector: type
    params: {}
- name: LastModifiedTime
  endpoint:
    path: /获取字段
    method: GET
    data_selector: type
    params: {}
- name: CreatedBy
  endpoint:
    path: /获取字段
    method: GET
    data_selector: options
    params: {}
- name: LastModifiedBy
  endpoint:
    path: /获取字段
    method: GET
    data_selector: options
    params: {}
- name: Button
  endpoint:
    path: /widget/button
    method: GET
    data_selector: property
    params: {}
- name: 获取字段
  endpoint:
    path: /datasheets/{datasheetId}/fields
    method: GET
- name: 删除角色
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}
    method: DELETE
- name: 获取视图
  endpoint:
    path: /datasheets/{datasheetId}/views
    method: GET
- name: 创建表格
  endpoint:
    path: /spaces/{spaceId}/datasheets
    method: POST
- name: 上传附件
  endpoint:
    path: /datasheets/{datasheetId}/attachments
    method: POST
- name: 获取空间站列表
  endpoint:
    path: /spaces
    method: GET
- name: get_file_nodes
  endpoint:
    path: /spaces/{spaceId}/nodes
    method: GET
- name: delete_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}
    method: DELETE
- name: chat_completions
  endpoint:
    path: /ai/{ai_id}/chat/completions
    method: POST
- name: get_members
  endpoint:
    path: /spaces/{spaceId}/members/{unitId}
    method: GET
- name: delete_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}
    method: DELETE
- name: get_team_members
  endpoint:
    path: /spaces/{spaceId}/teams/{unitId}/members
    method: GET
- name: get_roles_units
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}/units
    method: GET
    data_selector: success
    params:
      sensitiveData: string
- name: delete_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}
    method: DELETE
    data_selector: success
    params: {}
- name: space
  endpoint:
    path: /script/api/reference/classes/space.Space
    method: GET
- name: datasheet
  endpoint:
    path: /script/api/reference/classes/datasheet.Datasheet
    method: GET
- name: view
  endpoint:
    path: /script/api/reference/classes/view.View
    method: GET
- name: field
  endpoint:
    path: /script/api/reference/classes/field.Field
    method: GET
- name: record
  endpoint:
    path: /script/api/reference/classes/record.Record
    method: GET
- name: datasheet_records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /datasheets/{dstId}/records
    method: GET
- name: Get Records
  endpoint:
    path: /api/get-records
    method: GET
- name: Create Records
  endpoint:
    path: /api/create-records
    method: POST
- name: Update Records
  endpoint:
    path: /api/update-records
    method: PUT
- name: Delete Records
  endpoint:
    path: /api/delete-records
    method: DELETE
- name: records
  endpoint:
    path: /fusion/v1/datasheets/{datasheetId}/records
    method: GET
    data_selector: records
- name: records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: GET
    data_selector: records
    params:
      filterByFormula: OR(find("Vacuum", {main selling point}) > 0, find("Thermal
        insulation", {main selling point}) > 0)
      maxRecords: '3'
      sort: '{"field": "promotion price", "order": "desc"}'
- name: records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: POST
    data_selector: data.records
- name: records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: PATCH
    data_selector: data.records
    params: {}
- name: delete_records
  endpoint:
    path: /datasheets/{datasheetId}/records
    method: DELETE
    data_selector: data
    params: {}
- name: member
  endpoint:
    path: /api/member
    method: GET
- name: team
  endpoint:
    path: /api/team
    method: GET
- name: role
  endpoint:
    path: /api/role
    method: GET
- name: fields
  endpoint:
    path: /datasheets/{datasheetId}/fields
    method: GET
    data_selector: data.fields
    params: {}
- name: fields
  endpoint:
    path: /spaces/{spaceId}/datasheets/{datasheetId}/fields
    method: POST
    data_selector: data
    params: {}
- name: Delete Fields
  endpoint:
    path: /fusion/v1/spaces/{spaceId}/datasheets/{datasheetId}/fields/{fieldId}
    method: DELETE
    data_selector: success
- name: views
  endpoint:
    path: /api/get-views
    method: GET
    data_selector: data
    params: {}
- name: views
  endpoint:
    path: /datasheets/{datasheetId}/views
    method: GET
    data_selector: data.views
- name: Get Records
  endpoint:
    path: /api/get-records
    method: GET
- name: Create Records
  endpoint:
    path: /api/create-records
    method: POST
- name: Update Records
  endpoint:
    path: /api/update-records
    method: PUT
- name: Delete Records
  endpoint:
    path: /api/delete-records
    method: DELETE
- name: Get Views
  endpoint:
    path: /api/get-views
    method: GET
- name: Create Datasheet
  endpoint:
    path: /api/create-datasheets
    method: POST
- name: datasheet
  endpoint:
    path: /spaces/{spaceId}/datasheets
    method: POST
    data_selector: data
    params: {}
- name: attachments
  endpoint:
    path: /datasheets/{datasheetId}/attachments
    method: POST
    data_selector: data
- name: spaces
  endpoint:
    path: /api/get-spaces
    method: GET
- name: nodes
  endpoint:
    path: /api/get-nodes
    method: GET
- name: spaces
  endpoint:
    path: /spaces
    method: GET
    data_selector: data.spaces
- name: Get Node List
  endpoint:
    path: /api/get-nodes
    method: GET
- name: Search Nodes
  endpoint:
    path: /api/search-nodes
    method: GET
- name: Get Node Details
  endpoint:
    path: /api/get-node-details
    method: GET
- name: node_list
  endpoint:
    path: /spaces/{spaceId}/nodes
    method: GET
    data_selector: nodes
- name: search_nodes
  endpoint:
    path: /fusion/v2/spaces/{spaceId}/nodes
    method: GET
    data_selector: data.nodes
    params:
      type: Datasheet
      permissions: 0,1
- name: node_details
  endpoint:
    path: /spaces/{spaceId}/nodes/{nodeId}
    method: GET
    data_selector: data
- name: create_embedded_links
  endpoint:
    path: /fusion/v1/spaces/{spaceId}/nodes/{datasheetId}/embedlinks
    method: POST
    data_selector: data
    params: {}
- name: embed_links
  endpoint:
    path: /fusion/v1/spaces/{spaceId}/nodes/{datasheetId}/embedlinks
    method: GET
    data_selector: data
- name: delete_embed_link
  endpoint:
    path: /fusion/v1/spaces/{spaceId}/nodes/{datasheetId}/embedlinks/{linkId}
    method: DELETE
    data_selector: success
- name: member
  endpoint:
    path: /api/member
    method: GET
- name: team
  endpoint:
    path: /api/team
    method: GET
- name: role
  endpoint:
    path: /api/role
    method: GET
- name: member
  endpoint:
    path: /api/member
    method: GET
    data_selector: data
    params: {}
- name: member
  endpoint:
    path: /fusion/v1/spaces/{spaceId}/members/{unitId}
    method: GET
    data_selector: data
    params:
      sensitiveData: 'true'
- name: member
  endpoint:
    path: /fusion/v1/spaces/{spaceId}/members/{memberId}
    method: PUT
    data_selector: data.member
- name: delete_member
  endpoint:
    path: /spaces/{spaceId}/members/{unitId}
    method: DELETE
    data_selector: success
    params: {}
- name: team
  endpoint:
    path: /api/team
    method: GET
- name: member
  endpoint:
    path: /api/member
    method: GET
- name: teams
  endpoint:
    path: /spaces/{spaceId}/teams/{unitId}/children
    method: GET
    data_selector: data.teams
    params:
      pageSize: 2
      pageNum: 1
- name: team_members
  endpoint:
    path: /fusion/v1/spaces/{spaceId}/teams/{unitId}/members
    method: GET
    data_selector: data.members
    params:
      pageSize: '2'
      sensitiveData: 'true'
- name: team
  endpoint:
    path: /fusion/v1/spaces/{spaceId}/teams
    method: POST
    data_selector: data.team
    params: {}
- name: update_team
  endpoint:
    path: /spaces/{spaceId}/teams/{unitId}
    method: PUT
    data_selector: data.team
- name: delete_team
  endpoint:
    path: /spaces/{spaceId}/teams/{unitId}
    method: DELETE
    data_selector: success
    params: {}
- name: roles
  endpoint:
    path: /api/list-roles
    method: GET
- name: units
  endpoint:
    path: /api/list-units-under-the-role
    method: GET
- name: create_role
  endpoint:
    path: /api/create-a-role
    method: POST
- name: update_role
  endpoint:
    path: /api/update-a-role
    method: PUT
- name: delete_role
  endpoint:
    path: /api/delete-a-role
    method: DELETE
- name: roles
  endpoint:
    path: /spaces/{spaceId}/roles
    method: GET
    data_selector: data.roles
    params:
      pageSize: 2
      pageNum: 1
- name: list_units_under_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}/units
    method: GET
    data_selector: data
- name: role
  endpoint:
    path: /spaces/{spaceId}/roles
    method: POST
    data_selector: data.role
- name: update_role
  endpoint:
    path: /fusion/v1/spaces/{spaceId}/roles/{unitId}
    method: PUT
    data_selector: data.role
- name: delete_role
  endpoint:
    path: /spaces/{spaceId}/roles/{unitId}
    method: DELETE
- name: chat_completions
  endpoint:
    path: /ai/{agent_id}/chat/completions
    method: POST
    data_selector: choices
    params: {}
notes:
- The API returns various field types and their attributes.
- Requests for fields return the results in a single pass, without paging.
- A maximum of 200 fields can be created in a single datasheet.
- A maximum of 10 records can be created or updated in a single request.
- A maximum of 10 records can be deleted in a single request.
- 请求频率限制因空间级别而异，青铜级（免费版）：2 QPS，白银级：5 QPS，黄金级：10 QPS，企业级：20 QPS
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Requires setup of connected app in AITable
- 脚本相比较小程序来说更易入门，建议初学者或者编程小白可以依据以下路径进行学习
- Different space levels will have the following API request rates limits when requesting
  the API using user tokens.
- Must use HTTPS requests, HTTP requests are not allowed.
- 单次请求最多可以创建 10 条记录。
- 单次请求最多可删除 10 条记录。
- Please secure your API Token, if API Token leaks, others may tamper with data in
  your datasheet.
- Currently only supports get records interfaces
- When sending query requests via cURL, the encodeURIComponent() function is required
  to escape the values of the query parameters.
- The 'id' attribute in the member field may be deprecated in the future.
- Need to get the API Token before making requests.
- Need to get the ID of the datasheet before making requests.
- Need to download and initialize Javascript SDK first
- Need to download and initialize the Python SDK first
- Need to download and initialize Javascript SDK first, and then execute the command.
- You need to download and initialize the Python SDK first, and then execute the command.
- Requires OAuth2 authentication with refresh token.
- Need to download and initialize Javascript SDK first.
- You need to download and initialize the Python SDK first.
- Need to Download and initialize Javascript SDK first
- You need to download and initialize the Python SDK first
- Need to Download and initialize Javascript SDK first.
- Get your API Token from the quick start guide.
- Need to download and initialize the Python SDK first.
- Embedded Links are only available for the spaces on the paid Pro or higher plan
  in AITable Cloud and Enterprise self-hosted edition.
- Embedded Links are only available for the spaces on the paid Pro or higher plan
  in AITable Cloud as well as Enterprise self-hosted edition.
- Requires authentication to access member data.
- This API is only available for spaces on the enterprise plan.
- Only the primary admin and sub-admins who can manage members can use this API.
- Only the primary admin and sub-admins who can manage members and roles can use this
  API.
- Only the primary admin and sub-admins who can manage teams can use this API.
- Only the primary admin and sub-admins who can manage teams and members can use this
  API.
- Only the primary admin and sub-admins who can manage teams and roles can use this
  API.
- Only the primary admin and sub-admins who can manage roles can use this API.
- This API is only available to whitelisted users.
errors:
- '401 Authentication failure: Possible scenarios: ① API Token is not passed in the
  request header ② API Token is incorrect'
- '429 Operate too often: The maximum request frequency has been exceeded'
- '401 Authentication failure: Possible scenarios: API Token is not passed in the
  request header or API Token is incorrect'
- '429 Operate too often: The maximum request frequency exceeded'
- '401 Authentication failure: API Token is not passed in the request header or API
  Token is incorrect'
- '401: Authentication failure'
- '429: Operate too often'
- '404: Interface does not exist'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403: Prohibit access'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '429: 操作太频繁'
- '401: 身份认证失败'
- '403: 禁止访问'
- '404: 接口不存在'
- '200: SUCCESS'
- '401: Unauthorized'
- '400: Bad Request'
- Handling abnormal situations
- '401 Unauthorized: Check your access token'
- 'code: 200, message: SUCCESS'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://aitable.ai/fusion/v1
  headers:
    Authorization: Bearer {Your API Token}
    Content-Type: application/json
source_metadata: null
