resources:
- name: selfie_bot
  endpoint:
    path: /selfie
    method: POST
    data_selector: generated_image
- name: glif_tv
  endpoint:
    path: /glif_tv
    method: POST
    data_selector: generated_video
- name: glif
  endpoint:
    path: /glif
    method: POST
    data_selector: generated_image
- name: metaglif
  endpoint:
    path: /metaglif
    method: POST
    data_selector: generated_image
- name: input_data
  endpoint:
    path: /api/v1/inputs
    method: GET
    data_selector: inputs
    params: {}
- name: multipick_block
  endpoint:
    path: /blocks/inputs/multipick
    method: GET
- name: text_block
  endpoint:
    path: /api/text_block
    method: POST
    data_selector: output
    params: {}
- name: image_to_text
  endpoint:
    path: /image_to_text
    method: POST
    data_selector: results
    params: {}
- name: workflow
  endpoint:
    path: /api/workflows
    method: GET
    data_selector: data
    params: {}
- name: json_extractor
  endpoint:
    path: /blocks/tools/json-extractor-block
    method: GET
- name: audio_input
  endpoint:
    path: /blocks/advanced-experimental/audio-input
    method: GET
- name: audio_input
  endpoint:
    path: /blocks/advanced-experimental/audio-input
    method: GET
    data_selector: data
    params: {}
- name: workflow_block
  endpoint:
    path: /blocks/advanced-experimental/glif-block
    method: GET
    data_selector: data
    params: {}
- name: web_fetcher
  endpoint:
    path: /blocks/advanced-experimental/web-fetcher-block
    method: GET
    data_selector: data
    params: {}
- name: audio_input
  endpoint:
    path: /blocks/advanced-experimental/audio-input
    method: GET
    data_selector: audio_inputs
    params: {}
- name: POST JSON data
  endpoint:
    path: /POSTing JSON data
    method: POST
    data_selector: body
    params: {}
- name: GET specific fields
  endpoint:
    path: /Selecting specific fields using JSON Path
    method: GET
    data_selector: data
    params: {}
- name: audio_generation
  endpoint:
    path: /api/audio/generate
    method: POST
    data_selector: audio
    params: {}
- name: ComfyUI
  endpoint:
    path: /blocks/advanced-experimental/comfyui-block
    method: GET
- name: Audio Generation
  endpoint:
    path: /api/audio/generate
    method: POST
    data_selector: audio_output
    params: {}
- name: AnimateDiff
  endpoint:
    path: /AnimateDiff
    method: GET
    data_selector: workflow
    params: {}
- name: IPAdapter
  endpoint:
    path: /IPAdapter
    method: GET
    data_selector: workflow
    params: {}
- name: Txt2Image
  endpoint:
    path: /Txt2Image
    method: GET
    data_selector: workflow
    params: {}
- name: ComfyUI Custom Nodes List
  endpoint:
    path: /blocks/advanced-experimental/comfyui-block
    method: GET
    data_selector: nodes
    params: {}
- name: audio_to_text
  endpoint:
    path: /blocks/advanced-experimental/audio-to-text-block
    method: GET
    data_selector: audio
- name: video_input
  endpoint:
    path: /blocks/advanced-experimental/video-input-block
    method: GET
    data_selector: videoOptions
    params: {}
- name: json_repair
  endpoint:
    path: /api/json-repair
    method: POST
    data_selector: repaired_json
- name: character
  endpoint:
    path: /character
    method: POST
- name: KSampler
  endpoint:
    path: /KSampler
    method: POST
    data_selector: inputs
    params: {}
- name: CheckpointLoaderSimple
  endpoint:
    path: /CheckpointLoaderSimple
    method: POST
    data_selector: inputs
    params: {}
- name: EmptyLatentImage
  endpoint:
    path: /EmptyLatentImage
    method: POST
    data_selector: inputs
    params: {}
- name: CLIPTextEncode
  endpoint:
    path: /CLIPTextEncode
    method: POST
    data_selector: inputs
    params: {}
- name: VAEDecode
  endpoint:
    path: /VAEDecode
    method: POST
    data_selector: inputs
    params: {}
- name: SaveImage
  endpoint:
    path: /SaveImage
    method: POST
    data_selector: inputs
    params: {}
- name: LoraLoader
  endpoint:
    path: /LoraLoader
    method: POST
    data_selector: inputs
    params: {}
- name: IPAdapterModelLoader
  endpoint:
    path: /IPAdapterModelLoader
    method: POST
    data_selector: inputs
    params: {}
- name: IPAdapterApply
  endpoint:
    path: /IPAdapterApply
    method: POST
    data_selector: inputs
    params: {}
- name: CLIPVisionLoader
  endpoint:
    path: /CLIPVisionLoader
    method: POST
    data_selector: inputs
    params: {}
- name: LoadImage
  endpoint:
    path: /LoadImage
    method: POST
    data_selector: inputs
    params: {}
- name: meme_generation
  endpoint:
    path: /generate/meme
    method: POST
    data_selector: data
    params:
      input1: user prompt
- name: audio_to_text
  endpoint:
    path: /api/audio-to-text
    method: POST
    data_selector: text
    params: {}
- name: meme_generation
  endpoint:
    path: /generate/meme
    method: POST
    data_selector: output
    params: {}
- name: video_input
  endpoint:
    path: /video/input
    method: POST
    data_selector: data
    params: {}
- name: text_generation
  endpoint:
    path: /text/generation
    method: POST
    data_selector: results
- name: json_repair
  endpoint:
    path: /blocks/advanced-experimental/json-repair-block
    method: POST
    data_selector: output
- name: LivePortraitModels
  endpoint:
    path: /livePortrait/models
    method: GET
    data_selector: models
- name: LivePortraitProcess
  endpoint:
    path: /livePortrait/process
    method: POST
    data_selector: results
- name: GPT Vision Input
  endpoint:
    path: /gpt_vision/input
    method: POST
    data_selector: inputs
    params: {}
- name: Claude 3.5 Input
  endpoint:
    path: /claude_3_5/input
    method: POST
    data_selector: inputs
    params: {}
- name: ComfyUI JSON
  endpoint:
    path: /comfyui/json
    method: POST
    data_selector: inputs
    params: {}
- name: meme_generator
  endpoint:
    path: /api/meme_generator
    method: POST
    data_selector: data
    params:
      prompt: 'Now do: {input1}'
      max_tokens: 2000
      model: Claude-3.5-sonnet
      system_prompt: 'You are simulating a most unhinged "Expanding Brain Meme" terminally
        online meme creator. Be stupid and hilarious. The "Expanding Brain Meme" meme
        typically juxtaposes four versions of a human brain at different levels of
        conciousness: a shrunken brain that represents very little activity, a slightly
        lit up brain which represents super average activity, a glowing brain which
        represents more awareness, and a galaxy brain which represents transcending
        normal human thought to an epic BASED extreme. The meme format is used to
        compare four thoughts stemming from a topic, where shrunken brain represents
        a sub-optimal response and the response becomes more complex as one moves
        up the brain list, finally resulting in galaxy brain which is so outside the
        box it ends up being stupid. Be clever about it please and unpredictable.'
- name: storyboard
  endpoint:
    path: /create/storyboard
    method: POST
    data_selector: results
- name: meme_generation
  endpoint:
    path: /generate/meme
    method: POST
    data_selector: output
    params: {}
- name: recipe
  endpoint:
    path: /generate/recipe
    method: POST
    data_selector: json
- name: Apply InstantID
  endpoint:
    path: /apply-instantid
    method: POST
- name: Load Checkpoint
  endpoint:
    path: /load-checkpoint
    method: GET
- name: text_generation
  endpoint:
    path: /text/generate
    method: POST
    data_selector: data
    params:
      max_tokens: 200
      model: claude-3.5-sonnet
- name: workflow
  endpoint:
    path: /api/workflows
    method: GET
    data_selector: records
    params: {}
- name: GPT Vision Prompts
  endpoint:
    path: /glif-university/video-tutorials/how-to-create-a-simple-cartoon-portrait-animation
    method: GET
    data_selector: inputs
- name: Live Portrait Animator
  endpoint:
    path: /glif-university/video-tutorials/how-to-create-a-simple-cartoon-portrait-animation
    method: GET
    data_selector: inputs
- name: ComfyUI
  endpoint:
    path: /comfyui
    method: POST
    data_selector: inputs
    params: {}
- name: Text Generation
  endpoint:
    path: /textgeneration
    method: POST
    data_selector: results
- name: Image Generation
  endpoint:
    path: /imagegeneration
    method: POST
    data_selector: results
- name: workflow
  endpoint:
    path: /clgh1vxtu0011mo081dplq3xs
    method: POST
    data_selector: output
    params: {}
- name: recipe
  endpoint:
    path: /generate/recipe
    method: POST
    data_selector: json
    params: {}
- name: ComfyUI
  endpoint:
    path: /api/comfyui
    method: POST
    data_selector: responses
    params: {}
- name: workflow
  endpoint:
    path: /glifs
    method: GET
    data_selector: data
- name: user
  endpoint:
    path: /user
    method: GET
    data_selector: data
- name: runs
  endpoint:
    path: /runs
    method: GET
    data_selector: data
- name: workflow
  endpoint:
    path: /
    method: POST
    data_selector: output
- name: social_media_bots
  endpoint:
    path: /api/social_media_bots
    method: GET
    data_selector: bots
    params: {}
- name: workflow
  endpoint:
    path: /glifs
    method: GET
    data_selector: data
    params: {}
- name: runs
  endpoint:
    path: /runs
    method: GET
    data_selector: data
    params: {}
- name: user_info
  endpoint:
    path: /me
    method: GET
    data_selector: data
    params: {}
- name: law_enforcement_inquiries
  endpoint:
    path: /contact-us/information-for-law-enforcement
    method: GET
    data_selector: inquiries
    params: {}
- name: workflow
  endpoint:
    path: /
    method: POST
    data_selector: output
    params: {}
- name: social_media_bots
  endpoint:
    path: /api/what-can-i-make-with-the-glif-api/social-media-bots
    method: GET
    data_selector: bots
    params: {}
- name: experimental_projects
  endpoint:
    path: /api/what-can-i-make-with-the-glif-api/experimental-projects
    method: GET
- name: law_enforcement_inquiries
  endpoint:
    path: /contact-us/information-for-law-enforcement
    method: GET
- name: workflow
  endpoint:
    path: /
    method: POST
    data_selector: output
    params: {}
notes:
- Two minutes is the maximum time that a workflow can run before it times out and
  returns an error.
- Ensure to configure OAuth2 correctly before accessing the API
- Uses various AI models for text generation.
- Image-to-text blocks generate text based on an image.
- Requires setup of connected app in Glif
- API may have rate limits
- Uses OAuth2 with refresh token — requires setup of connected app in api
- OAuth2 with refresh token — requires setup of connected app in Glif
- Uses OAuth2 with refresh token — requires setup of connected app in Glif
- 'Known bug: All of the other workflow''s inputs show up as text inputs.'
- 'No safety checks: If you make changes to the other workflow, you might break any
  dependent workflows!'
- 'Annoyingly: Finding workflows and pasting in workflow IDs is very annoying.'
- 'No error bubbling: Errors inside the other workflow aren''t surfaced well.'
- Uses advanced technology from Eleven Labs, Suno, and others for audio generation.
- The WebFetcher block can be used to make GET and POST requests to HTTP endpoints
- You can build a JSON payload inside the body field that re-uses {variables} from
  other blocks
- Uses advanced technology from Eleven Labs for text to speech.
- Supports music generation and sound effects.
- Requires setup of connected app in api
- Audio-to-text blocks generate text based on Audio file
- Automatically repair and fix invalid JSON using the jsonrepair library.
- If the block can't repair your input then it will throw an error.
- This workflow demonstrates how to create a basic meme generator for a classic meme
  format.
- Ensure input blocks are named correctly to match expected inputs.
- The video used should be 30 seconds or less in length.
- Leave the Comfy tab open for execution of the flow.
- Use ComfyUI Block for JSON input.
- Adjust the LLM model to Claude 3.5 Sonnet.
- Each frame should be very similar to the frame before in description because it
  is just going to represent the specific storyboard.
- Keep the dialogue under 50 characters.
- Always use the format specified by the user.
- Uses a text generation block for character descriptions
- Ensure that the image input and text prompt input are formatted correctly.
- The API is currently subject to the same limits as user accounts.
- The API is unstable and in beta.
- Always returns 200 OK (check error field in response)
- Rate limits and timeouts should be handled
- CORS enabled for browser requests
- Return only JSON in the specified format.
- Be specific on measurements and cooking times and temps.
- Glif API is in beta and subject to change.
- Paginate using ?page= when applicable.
- This feature is now deprecated and won't work without beta access anymore.
- This API is unstable and in beta.
- Examples of social media bots created using the Glif API.
- No training on clearly protected IP.
- Keep all training community-friendly. No NSFW material allowed.
- You can paginate using ?page= when applicable.
- Glif is a playful low-code platform for creating AI agents and workflows.
- The API is currently subject to the same limits as user accounts
- The API is unstable and in beta
- Examples of other experimental projects created using the Glif API.
- 'Focus on innovation: Aim to create unique styles rather than replicating existing
  ones.'
errors:
- Something in your prompt or output violates our content guidelines.
- One of the external services use to generate a workflow had a technical hiccup.
- We broke something. Oopsies! Please send feedback about potential bugs to us via
  email or Discord.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check the input data format'
- '401 Unauthorized: Verify client ID and secret'
- '429 Too Many Requests: Rate limit exceeded, try again later'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Recheck OAuth token'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '200 OK: The Simple API always returns 200 OK even in case of an error.'
- error message if any
- '200 OK: Response status may not reflect actual success due to legacy reasons.'
- '200 OK: Response will always return 200 OK even if there''s an error'
- '200 OK: Response will always return 200 OK even in case of error'
auth_info:
  mentioned_objects: []
client:
  base_url: https://glif.app
  auth:
    type: oauth2
source_metadata: null
