resources:
- name: Product search
  endpoint:
    path: /products
    method: GET
    data_selector: data
    params:
      filter.term: string
      filter.locationId: string
      filter.productId: string
      filter.brand: string
      filter.fulfillment: string
      filter.start: integer
      filter.limit: integer
- name: Product details
  endpoint:
    path: /products/{id}
    method: GET
    data_selector: data
    params: {}
- name: Authorization Endpoints (Partner)
  endpoint:
    path: /api/products/api/authorization-endpoints-partner
    method: GET
- name: Authorization Endpoints (Public)
  endpoint:
    path: /api/products/api/authorization-endpoints-public
    method: GET
- name: Cart API (Partner)
  endpoint:
    path: /api/products/api/cart-api-partner
    method: GET
- name: Cart API (Public)
  endpoint:
    path: /api/products/api/cart-api-public
    method: GET
- name: Catalog API
  endpoint:
    path: /api/products/api/catalog-api
    method: GET
- name: Catalog API V2
  endpoint:
    path: /api/products/api/catalog-api-v2
    method: GET
- name: Identity API (Partner)
  endpoint:
    path: /api/products/api/identity-api-partner
    method: GET
- name: Identity API (Public)
  endpoint:
    path: /api/products/api/identity-api-public
    method: GET
- name: Location API (Partner)
  endpoint:
    path: /api/products/api/location-api-partner
    method: GET
- name: Location API (Public)
  endpoint:
    path: /api/products/api/location-api-public
    method: GET
- name: Product API (Partner)
  endpoint:
    path: /api/products/api/product-api-partner
    method: GET
- name: Product API (Public)
  endpoint:
    path: /api/products/api/product-api-public
    method: GET
- name: Seamless Delivery API
  endpoint:
    path: /api/products/api/seamless-delivery-api
    method: GET
- name: Unattended Locker Pickup
  endpoint:
    path: /api/products/api/unattended-locker-pickup
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: resource_name
  endpoint:
    path: /services/data/vXX.X/sobjects/resource_name
    method: GET
    data_selector: records
    params: {}
- name: add_to_cart
  endpoint:
    path: /v1/cart/add
    method: PUT
- name: user_profile
  endpoint:
    path: /v1/identity/profile
    method: GET
    data_selector: data
    params: {}
- name: location_list
  endpoint:
    path: /v1/locations
    method: GET
    data_selector: results
    params:
      filter.limit: 10
- name: location_details
  endpoint:
    path: /v1/locations/{locationId}
    method: GET
    data_selector: details
    params: {}
- name: chain_list
  endpoint:
    path: /v1/chains
    method: GET
    data_selector: chains
    params: {}
- name: chain_details
  endpoint:
    path: /v1/chains/{name}
    method: GET
    data_selector: chainDetails
    params: {}
- name: department_list
  endpoint:
    path: /v1/departments
    method: GET
    data_selector: departments
    params: {}
- name: department_details
  endpoint:
    path: /v1/departments/{id}
    method: GET
    data_selector: departmentDetails
    params: {}
- name: product_search
  endpoint:
    path: /products
    method: GET
    data_selector: data
    params:
      filter.term: string
      filter.locationId: string
      filter.productId: string
      filter.brand: string
      filter.fulfillment: string
      filter.start: integer
      filter.limit: integer
- name: product_details
  endpoint:
    path: /products/{id}
    method: GET
    data_selector: data
    params: {}
notes:
- The Public Products API has a 10,000 call per day rate limit.
- An initial search value is required for all requests.
- Access tokens are valid for 1800 seconds (30 minutes).
- Refresh tokens are valid for 15,768,000 seconds (6 months).
- A refresh token is only returned when using the Authorization Code Grant Type.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- The customer must be authenticated using the OAuth2 Authorization Code grant type.
- The Public Locations API has a 1,600 call a day per endpoint rate limit.
- The Locations API does not support pagination.
errors:
- 400 Bad Request
- 401 Unauthorized
- 403 Forbidden
- 500 Internal Server Error
- 'invalid_request: The redirect_uri did not match the registered redirect_uri for
  this application'
- 'invalid_token: The access token is invalid or has expired'
- 'unauthorized: invalid credentials'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 404 Not Found
- '400: Bad Request'
- '401: Unauthorized'
- '404: Not Found'
- '500: Internal Server Error'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.kroger.com/v1/products
source_metadata: null
