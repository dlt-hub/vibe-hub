resources:
- name: fetch_shipping_details
  endpoint:
    path: /api/v2/products
    method: POST
- name: fetch_shipping_details
  endpoint:
    path: /api/v2/products
    method: POST
- name: consignments
  endpoint:
    path: /shipping/guide
    method: GET
    data_selector: consignments
    params: {}
- name: consignments
  endpoint:
    path: /shipping/guide
    method: GET
    data_selector: consignments
    params: {}
- name: consignments
  endpoint:
    path: /ShippingGuideRequest
    method: POST
    data_selector: Consignments
- name: consignment
  endpoint:
    path: /ShippingGuideRequest
    method: POST
    data_selector: Consignments
    params: {}
- name: consignments
  endpoint:
    path: /consignments
    method: GET
    data_selector: consignments
    params: {}
- name: consignment
  endpoint:
    path: /ShippingGuideResponse
    method: GET
    data_selector: Consignments
    params:
      uniqueId: 66091c94-6565-4c42-9c49-34bab012236d
- name: consignment
  endpoint:
    path: /ShippingGuideResponse
    method: GET
    data_selector: Consignments
    params: {}
- name: consignments
  endpoint:
    path: /shipping/guide
    method: GET
    data_selector: consignments
- name: Shipping Guide API
  endpoint:
    path: /api/shipping-guide_2/
    method: GET
- name: Pickup Point API
  endpoint:
    path: /api/pickup-point/
    method: GET
- name: Address API
  endpoint:
    path: /api/address/
    method: GET
- name: Postal Code API
  endpoint:
    path: /api/postal-code/
    method: GET
- name: Booking API
  endpoint:
    path: /api/booking/
    method: GET
- name: Pickup API
  endpoint:
    path: /api/pickup/
    method: GET
- name: Shipment API
  endpoint:
    path: /api/shipment/
    method: GET
- name: Tracking API
  endpoint:
    path: /api/tracking/
    method: GET
- name: Event Cast API
  endpoint:
    path: /api/event-cast/
    method: GET
- name: Modify Delivery API
  endpoint:
    path: /api/modify-delivery/
    method: GET
- name: Send order/article update
  endpoint:
    path: /api/warehousing/
    method: GET
- name: Receive order/article update
  endpoint:
    path: /api/warehousing3/
    method: GET
- name: Pull order/article
  endpoint:
    path: /api/warehousing4/
    method: GET
- name: Reports API
  endpoint:
    path: /api/reports/
    method: GET
- name: Invoice API
  endpoint:
    path: /api/invoice/
    method: GET
- name: Documents API
  endpoint:
    path: /api/document-search/
    method: GET
- name: Order Management API
  endpoint:
    path: /api/order-management/
    method: GET
- name: Shipping Guide API
  endpoint:
    path: /api/shipping-guide_2/
    method: GET
- name: Pickup Point API
  endpoint:
    path: /api/pickup-point/
    method: GET
- name: Address API
  endpoint:
    path: /api/address/
    method: GET
- name: Postal Code API
  endpoint:
    path: /api/postal-code/
    method: GET
- name: Booking API
  endpoint:
    path: /api/booking/
    method: GET
- name: Pickup API
  endpoint:
    path: /api/pickup/
    method: GET
- name: Shipment API
  endpoint:
    path: /api/shipment/
    method: GET
- name: Tracking API
  endpoint:
    path: /api/tracking/
    method: GET
- name: Event Cast API
  endpoint:
    path: /api/event-cast/
    method: GET
- name: Modify Delivery API
  endpoint:
    path: /api/modify-delivery/
    method: GET
- name: Send order/article update
  endpoint:
    path: /api/warehousing/
    method: GET
- name: Receive order/article update
  endpoint:
    path: /api/warehousing3/
    method: GET
- name: Pull order/article
  endpoint:
    path: /api/warehousing4/
    method: GET
- name: Reports API
  endpoint:
    path: /api/reports/
    method: GET
- name: Invoice API
  endpoint:
    path: /api/invoice/
    method: GET
- name: Documents API
  endpoint:
    path: /api/documents/
    method: GET
- name: Order Management API
  endpoint:
    path: /api/order-management/
    method: GET
- name: Shipping Guide API
  endpoint:
    path: /api/shipping-guide_2/
    method: GET
- name: Booking API
  endpoint:
    path: /api/booking/
    method: GET
- name: Tracking API
  endpoint:
    path: /api/tracking/
    method: GET
- name: Pickup Point API
  endpoint:
    path: /api/pickup-point/
    method: GET
- name: Postal Code API
  endpoint:
    path: /api/postal-code/
    method: GET
- name: Shipping Guide API
  endpoint:
    path: /api/shipping-guide_2/
    method: GET
- name: Booking API
  endpoint:
    path: /api/booking/
    method: GET
- name: Tracking API
  endpoint:
    path: /api/tracking/
    method: GET
- name: Event Cast API
  endpoint:
    path: /api/event-cast/
    method: GET
- name: Postal Code API
  endpoint:
    path: /api/postal-code/
    method: GET
- name: Pickup Point API
  endpoint:
    path: /api/pickup-point/
    method: GET
- name: Pickup parcel
  endpoint:
    path: /services/data/v1.0/pickup_parcel
    method: GET
    data_selector: records
    params:
      customer_number: Main customer number
      code: '5800'
- name: Parcel home plus
  endpoint:
    path: /services/data/v1.0/parcel_home_plus
    method: GET
    data_selector: records
    params:
      customer_number: Main customer number
      code: '5600'
- name: Home mailbox parcel
  endpoint:
    path: /services/data/v1.0/home_mailbox_parcel
    method: GET
    data_selector: records
    params:
      customer_number: Main customer number
      code: '3584'
- name: Business parcel
  endpoint:
    path: /services/data/v1.0/business_parcel
    method: GET
    data_selector: records
    params:
      customer_number: Main customer number
      code: '5000'
- name: Return from pick-up point
  endpoint:
    path: /services/data/v1.0/return_pick_up_point
    method: GET
    data_selector: records
    params:
      customer_number: Main customer number
      code: '9300'
- name: Pickup parcel
  endpoint:
    path: /services/data/v1/sobjects/PickupParcel
    method: GET
    data_selector: records
    params: {}
- name: Parcel home plus
  endpoint:
    path: /services/data/v1/sobjects/ParcelHomePlus
    method: GET
    data_selector: records
    params: {}
- name: Home mailbox parcel
  endpoint:
    path: /services/data/v1/sobjects/HomeMailboxParcel
    method: GET
    data_selector: records
    params: {}
- name: Business parcel
  endpoint:
    path: /services/data/v1/sobjects/BusinessParcel
    method: GET
    data_selector: records
    params: {}
- name: Return from pick-up point
  endpoint:
    path: /services/data/v1/sobjects/ReturnFromPickupPoint
    method: GET
    data_selector: records
    params: {}
- name: PickUp Parcel
  endpoint:
    path: /api/v1/pickup-parcel
    method: GET
    data_selector: services
    params:
      service_type: B2C
- name: Business groupage
  endpoint:
    path: /api/v1/business-groupage
    method: GET
    data_selector: services
    params:
      service_type: B2B
- name: Boat Delivery
  endpoint:
    path: /api/v1/boat-delivery
    method: GET
    data_selector: services
    params:
      service_type: B2C
- name: Booking
  endpoint:
    path: /api/booking
    method: POST
    data_selector: additionalServices
    params: {}
- name: Shipping Guide
  endpoint:
    path: /api/shipping_guide
    method: GET
    data_selector: shippingGuide
    params: {}
- name: additional_services
  endpoint:
    path: /additionalServices
    method: GET
    data_selector: additionalServices
    params: {}
- name: additional_services
  endpoint:
    path: /additionalServices
    method: GET
    data_selector: additionalServices
- name: additional_services
  endpoint:
    path: /services/data/vXX.X/sobjects/AdditionalService
    method: GET
    data_selector: additionalServices
    params: {}
- name: additional_services
  endpoint:
    path: /additionalServices
    method: POST
    data_selector: additionalServices
    params: {}
- name: business_parcel
  endpoint:
    path: /business_parcel
    method: GET
    data_selector: records
    params: {}
- name: home_delivery_parcel
  endpoint:
    path: /home_delivery_parcel
    method: GET
    data_selector: records
    params: {}
- name: pickup_parcel
  endpoint:
    path: /pickup_parcel
    method: GET
    data_selector: records
    params: {}
- name: business_parcel_return
  endpoint:
    path: /business_parcel_return
    method: GET
    data_selector: records
    params: {}
- name: business_parcel_return_bulk
  endpoint:
    path: /business_parcel_return_bulk
    method: GET
    data_selector: records
    params: {}
- name: pickup_parcel_return
  endpoint:
    path: /pickup_parcel_return
    method: GET
    data_selector: records
    params: {}
- name: pickup_parcel_return_bulk
  endpoint:
    path: /pickup_parcel_return_bulk
    method: GET
    data_selector: records
    params: {}
- name: Business Parcel
  endpoint:
    path: /services/data/vXX.X/sobjects/BUSINESS_PARCEL
    method: GET
    data_selector: records
    params: {}
- name: Home Delivery Parcel
  endpoint:
    path: /services/data/vXX.X/sobjects/HOME_DELIVERY_PARCEL
    method: GET
    data_selector: records
    params: {}
- name: PickUp Parcel
  endpoint:
    path: /services/data/vXX.X/sobjects/PICKUP_PARCEL
    method: GET
    data_selector: records
    params: {}
- name: Business Parcel Return
  endpoint:
    path: /services/data/vXX.X/sobjects/BUSINESS_PARCEL_RETURN
    method: GET
    data_selector: records
    params: {}
- name: Business Parcel Return Bulk
  endpoint:
    path: /services/data/vXX.X/sobjects/BUSINESS_PARCEL_RETURN_BULK
    method: GET
    data_selector: records
    params: {}
- name: PickUp Parcel Return
  endpoint:
    path: /services/data/vXX.X/sobjects/PICKUP_PARCEL_RETURN
    method: GET
    data_selector: records
    params: {}
- name: PickUp Parcel Return Bulk
  endpoint:
    path: /services/data/vXX.X/sobjects/PICKUP_PARCEL_RETURN_BULK
    method: GET
    data_selector: records
    params: {}
- name: additionalServices
  endpoint:
    path: /api/booking/#lq---limited-quantities-of-dangerous-goods
    method: GET
    data_selector: additionalServices
    params: {}
- name: customerSpecifiedDeliveryDateTime
  endpoint:
    path: /api/booking/#specifying-requested-delivery-date
    method: GET
    data_selector: customerSpecifiedDeliveryDateTime
    params: {}
- name: pickupPoint
  endpoint:
    path: /api/pickup-point/
    method: GET
    data_selector: pickupPoint
    params: {}
- name: additionalServices
  endpoint:
    path: /api/booking/#lq---limited-quantities-of-dangerous-goods
    method: GET
    data_selector: additionalServices
    params: {}
- name: customerSpecifiedDeliveryDateTime
  endpoint:
    path: /api/booking/#customer-specified-delivery-date-time
    method: GET
    data_selector: customerSpecifiedDeliveryDateTime
    params: {}
- name: pickupPoint
  endpoint:
    path: /api/pickup-point/
    method: GET
    data_selector: pickupPoint
    params: {}
- name: pickup_point
  endpoint:
    path: /api/pickup-point/
    method: GET
    data_selector: pickupPoint
    params: {}
- name: additional_services
  endpoint:
    path: /api/additional-services/
    method: POST
    data_selector: additionalServices
    params: {}
- name: pickup_point
  endpoint:
    path: /api/pickup-point/
    method: GET
    data_selector: pickupPoint
    params: {}
- name: additional_services
  endpoint:
    path: /api/additional-services/
    method: GET
    data_selector: additionalServices
    params: {}
- name: deliveryAttempts
  endpoint:
    path: /deliveryAttempts
    method: GET
    data_selector: services.deliveryOption
    params: {}
- name: optionalDriverInstructions
  endpoint:
    path: /optionalDriverInstructions
    method: POST
    data_selector: additionalServices
    params: {}
- name: unwrapping
  endpoint:
    path: /unwrapping
    method: POST
    data_selector: additionalServices
    params: {}
- name: deliveryOption
  endpoint:
    path: /services/deliveryOption
    method: GET
    data_selector: deliveryOption
    params: {}
- name: additionalServices
  endpoint:
    path: /services/additionalServices
    method: GET
    data_selector: additionalServices
    params: {}
- name: reports
  endpoint:
    path: /services/analytics/reports
    method: GET
    data_selector: records
    params: {}
- name: Best practice checkout
  endpoint:
    path: /api/e-commerce-solutions/best-practice-checkout/norway/
    method: GET
- name: Checkout tool
  endpoint:
    path: /api/shipping-guide/integration/checkout
    method: GET
- name: E-commerce platform plugins
  endpoint:
    path: /api/e-commerce-solutions/plugins/
    method: GET
- name: Environmental info
  endpoint:
    path: /api/e-commerce-solutions/environmental-info/
    method: GET
- name: Shipping Guide API
  endpoint:
    path: /api/shipping-guide_2/
    method: GET
- name: Pickup Point API
  endpoint:
    path: /api/pickup-point/
    method: GET
- name: Address API
  endpoint:
    path: /api/address/
    method: GET
- name: Postal Code API
  endpoint:
    path: /api/postal-code/
    method: GET
- name: Booking API
  endpoint:
    path: /api/booking/
    method: GET
- name: Pickup API
  endpoint:
    path: /api/pickup/
    method: GET
- name: Shipment API
  endpoint:
    path: /api/shipment/
    method: GET
- name: Tracking API
  endpoint:
    path: /api/tracking/
    method: GET
- name: Reports API
  endpoint:
    path: /api/reports/
    method: GET
- name: Documents API
  endpoint:
    path: /api/documents/
    method: GET
- name: Invoice API
  endpoint:
    path: /api/invoice/
    method: GET
- name: Order Management API
  endpoint:
    path: /api/order-management/
    method: GET
- name: get_all_pickup_points
  endpoint:
    path: /api/pickuppoint/{countryCode}/all
    method: GET
    data_selector: pickupPoints
    params: {}
- name: get_pickup_point_by_id
  endpoint:
    path: /api/pickuppoint/{countryCode}/id/{id}
    method: GET
    data_selector: pickupPoint
    params: {}
- name: get_pickup_points_by_geolocation
  endpoint:
    path: /api/pickuppoint/{countryCode}/location/{latitude},{longitude}
    method: GET
    data_selector: pickupPoints
    params: {}
- name: get_pickup_points_by_address
  endpoint:
    path: /api/pickuppoint/{countryCode}/postalCode/{postalCode}
    method: GET
    data_selector: pickupPoints
    params: {}
- name: get_default_pickup_point_by_postal_code
  endpoint:
    path: /api/pickuppoint/{countryCode}/postalCode/{postalCode}/default
    method: GET
    data_selector: pickupPoint
    params: {}
- name: pickupPoint
  endpoint:
    path: /pickupPoints
    method: GET
    data_selector: pickupPoint
    params: {}
- name: default_pickup_point
  endpoint:
    path: /pickuppoint/{countryCode}/postalCode/{postalCode}/default
    method: GET
- name: pickupPoint
  endpoint:
    path: /getPickupPointById
    method: GET
    data_selector: pickupPoint
- name: get_all_pickup_points
  endpoint:
    path: /api/pickuppoint/{countryCode}/all
    method: GET
    data_selector: pickupPoints
    params:
      countryCode: 'NO'
- name: get_pickup_point_by_id
  endpoint:
    path: /api/pickuppoint/{countryCode}/id/{id}
    method: GET
    data_selector: pickupPoint
    params:
      countryCode: 'NO'
- name: get_pickup_points_by_geolocation
  endpoint:
    path: /api/pickuppoint/{countryCode}/location/{latitude},{longitude}
    method: GET
    data_selector: pickupPoints
    params:
      countryCode: 'NO'
- name: get_pickup_points_by_address
  endpoint:
    path: /api/pickuppoint/{countryCode}/postalCode/{postalCode}
    method: GET
    data_selector: pickupPoints
    params:
      countryCode: 'NO'
- name: get_default_pickup_point_by_postal_code
  endpoint:
    path: /api/pickuppoint/{countryCode}/postalCode/{postalCode}/default
    method: GET
    data_selector: pickupPoint
    params:
      countryCode: 'NO'
- name: pickupPoint
  endpoint:
    path: /pickupPoints
    method: GET
    data_selector: pickupPoint
    params: {}
- name: default_pickup_point
  endpoint:
    path: /pickuppoint/api/pickuppoint/{countryCode}/postalCode/{postalCode}/default
    method: GET
- name: pickupPoint
  endpoint:
    path: /getPickupPointsByGeolocation
    method: GET
    data_selector: pickupPoint
    params: {}
- name: default_pickup_point
  endpoint:
    path: /pickuppoint/api/pickuppoint/{countryCode}/postalCode/{postalCode}/default
    method: GET
- name: pickupPoint
  endpoint:
    path: /pickupPoints
    method: GET
    data_selector: pickupPoint
- name: default_pickup_point
  endpoint:
    path: /pickuppoint/{countryCode}/postalCode/{postalCode}/default
    method: GET
    data_selector: pickupPoint
- name: pickupPoint
  endpoint:
    path: /pickupPoints
    method: GET
    data_selector: pickupPoint
    params: {}
- name: default_pickup_point
  endpoint:
    path: /pickuppoint/{countryCode}/postalCode/{postalCode}/default
    method: GET
    data_selector: pickupPoint
- name: default_pickup_point
  endpoint:
    path: /pickuppoint/{countryCode}/postalCode/{postalCode}/default
    method: GET
- name: pickupPoint
  endpoint:
    path: /pickupPoints
    method: GET
    data_selector: pickupPoint
- name: pickupPoint
  endpoint:
    path: /pickupPoint
    method: GET
    data_selector: pickupPoint
    params: {}
- name: default_pickup_point
  endpoint:
    path: /pickuppoint/{countryCode}/postalCode/{postalCode}/default
    method: GET
- name: default_pickup_point
  endpoint:
    path: /pickuppoint/{countryCode}/postalCode/{postalCode}/default
    method: GET
- name: pickupPoint
  endpoint:
    path: /pickupPoints
    method: GET
    data_selector: pickupPoint
    params: {}
- name: default_pickup_point
  endpoint:
    path: /pickuppoint/{countryCode}/postalCode/{postalCode}/default
    method: GET
    params: {}
- name: pickupPoint
  endpoint:
    path: /default/pickupPoint
    method: GET
    data_selector: pickupPoint
    params: {}
- name: Get addresses matching query
  endpoint:
    path: /api/{country-code}/addresses
    method: GET
- name: Get address suggestions
  endpoint:
    path: /api/{country-code}/addresses/suggestions
    method: GET
- name: Get address
  endpoint:
    path: /api/{country-code}/addresses/{id}
    method: GET
- name: Get street
  endpoint:
    path: /api/{country-code}/streets/{id}
    method: GET
- name: Get available street numbers
  endpoint:
    path: /api/{country-code}/streets/{id}/numbers
    method: GET
- name: Get street or place suggestions
  endpoint:
    path: /api/{country-code}/suggestions
    method: GET
- name: Validate provided address
  endpoint:
    path: /api/{country-code}/validation
    method: GET
- name: default_pickup_point
  endpoint:
    path: /pickuppoint/{countryCode}/postalCode/{postalCode}/default
    method: GET
    data_selector: pickupPoint
    params: {}
- name: addresses
  endpoint:
    path: /GetAddressesMatchingQuery
    method: GET
    data_selector: match
- name: validate_address
  endpoint:
    path: /address/api/{country-code}/validation
    method: GET
    data_selector: address
    params: {}
- name: get_addresses_matching_query
  endpoint:
    path: /api/{country-code}/addresses
    method: GET
    params:
      country-code: 'no'
- name: get_address_suggestions
  endpoint:
    path: /api/{country-code}/addresses/suggestions
    method: GET
- name: get_address
  endpoint:
    path: /api/{country-code}/addresses/{id}
    method: GET
- name: get_street
  endpoint:
    path: /api/{country-code}/streets/{id}
    method: GET
- name: get_available_street_numbers
  endpoint:
    path: /api/{country-code}/streets/{id}/numbers
    method: GET
- name: get_street_or_place_suggestions
  endpoint:
    path: /api/{country-code}/suggestions
    method: GET
- name: validate_provided_address
  endpoint:
    path: /api/{country-code}/validation
    method: GET
- name: address_suggestions
  endpoint:
    path: /address/suggestions
    method: GET
    data_selector: match
    params:
      country-code: 'no'
      q: Street address, place or po box name/number to filter for
- name: addresses
  endpoint:
    path: /GetAddressesMatchingQuery
    method: GET
- name: address_validation
  endpoint:
    path: /{country-code}/validation
    method: GET
    params:
      country-code: 'no'
      id: '2264429'
      request: Required
- name: address
  endpoint:
    path: /address
    method: GET
    data_selector: match
    params: {}
- name: address_validation
  endpoint:
    path: /{country-code}/validation
    method: GET
- name: address_validation
  endpoint:
    path: /address/api/{country-code}/validation
    method: GET
- name: address
  endpoint:
    path: /address
    method: GET
    data_selector: match
    params: {}
- name: address_suggestions
  endpoint:
    path: /address/suggestions
    method: GET
    data_selector: match
    params:
      country-code: 'no'
      q: street address or place name
      page: page number
      limit: number of results per page
- name: validate_address
  endpoint:
    path: /{country-code}/validation
    method: GET
    data_selector: reasons
    params:
      request: required
- name: address
  endpoint:
    path: /getAddress
    method: GET
    data_selector: match
    params: {}
- name: available_street_numbers
  endpoint:
    path: /available/street/numbers
    method: GET
    data_selector: match
    params: {}
- name: address_validation
  endpoint:
    path: /{country-code}/validation
    method: GET
    data_selector: valid
    params: {}
- name: address_validation
  endpoint:
    path: /address/api/{country-code}/validation
    method: GET
    data_selector: reasons
    params:
      q: Street or place name to filter for
- name: address_validation
  endpoint:
    path: /address/validate
    method: GET
    data_selector: match
    params: {}
- name: suggestions
  endpoint:
    path: /suggestions
    method: GET
    data_selector: suggestions
- name: AddressValidation
  endpoint:
    path: /AddressValidation
    method: GET
    data_selector: AddressValidation
- name: address_validation
  endpoint:
    path: /{country-code}/validation
    method: GET
    params:
      country-code: 'no'
      id: NO-3019-04900
- name: address_validation
  endpoint:
    path: /address/validation
    method: GET
    data_selector: match
    params: {}
- name: validate_address
  endpoint:
    path: /validate_address
    method: GET
    params:
      country-code: 'no'
- name: address_suggestions
  endpoint:
    path: /address/suggestions
    method: GET
    data_selector: suggestions
- name: address_validation
  endpoint:
    path: /address/validation
    method: GET
    data_selector: AddressValidation
- name: address_validation
  endpoint:
    path: /address/api/{country-code}/validation
    method: GET
    data_selector: Address
    params: {}
- name: validate_address
  endpoint:
    path: /validate
    method: GET
    params:
      country-code: 'no'
      address: ''
      street_or_place: ''
      address_type: ''
      po_box_number: ''
      po_box_facility: ''
      postal_code: ''
      city: ''
      street_number: ''
      letter: ''
- name: postal_codes_matching_query
  endpoint:
    path: /api/{country-code}/postal-codes
    method: GET
    params:
      postal_code: ''
      city: ''
      county: ''
      municipality: ''
      postal_code_type: ''
      page: ''
      limit: ''
- name: postal_code_suggestions
  endpoint:
    path: /api/{country-code}/postal-codes/suggestions
    method: GET
- name: get_postal_code
  endpoint:
    path: /api/{country-code}/postal-codes/{postal-code}
    method: GET
- name: mailbox_delivery_dates
  endpoint:
    path: /api/{country-code}/postal-codes/{postal-code}/mailbox-delivery-dates
    method: GET
- name: mailbox_delivery_dates
  endpoint:
    path: /address/api/{country-code}/postal-codes/{postal-code}/mailbox-delivery-dates
    method: GET
    data_selector: delivery_dates
    params:
      country-code: 'no'
      request: any
- name: postal_codes_matching_query
  endpoint:
    path: /api/{country-code}/postal-codes
    method: GET
    data_selector: delivery_dates
    params: {}
- name: postal_code_suggestions
  endpoint:
    path: /api/{country-code}/postal-codes/suggestions
    method: GET
    data_selector: suggestions
    params: {}
- name: postal_code_details
  endpoint:
    path: /api/{country-code}/postal-codes/{postal-code}
    method: GET
    data_selector: details
    params: {}
- name: mailbox_delivery_dates
  endpoint:
    path: /api/{country-code}/postal-codes/{postal-code}/mailbox-delivery-dates
    method: GET
    data_selector: delivery_dates
    params: {}
- name: mailbox_delivery_dates
  endpoint:
    path: /{country-code}/postal-codes/{postal-code}/mailbox-delivery-dates
    method: GET
    data_selector: delivery_dates
- name: mailbox_delivery_dates
  endpoint:
    path: /{country-code}/postal-codes/{postal-code}/mailbox-delivery-dates
    method: GET
    data_selector: delivery_dates
    params:
      country-code: 'no'
      request: ''
- name: mailbox_delivery_dates
  endpoint:
    path: /{country-code}/postal-codes/{postal-code}/mailbox-delivery-dates
    method: GET
- name: make_a_booking
  endpoint:
    path: /api/create
    method: POST
- name: list_customer_numbers_and_services
  endpoint:
    path: /api/customers
    method: GET
- name: error_codes
  endpoint:
    path: /api/errors
    method: GET
- name: make_booking
  endpoint:
    path: /api/create
    method: POST
- name: list_customer_numbers_and_services
  endpoint:
    path: /api/customers
    method: GET
- name: error_codes
  endpoint:
    path: /api/errors
    method: GET
- name: goods
  endpoint:
    path: /booking/goods
    method: POST
    data_selector: goods
    params: {}
- name: goods
  endpoint:
    path: /goods
    method: POST
    data_selector: goods
    params: {}
- name: order_pickup
  endpoint:
    path: /api/create
    method: POST
- name: pickup_order_request
  endpoint:
    path: /order/pickup
    method: POST
    data_selector: ''
    params: {}
- name: send_shipment
  endpoint:
    path: /sendshipment?shipmentId={createShipmentId}&packageIds={createPackageId}
    method: POST
- name: send_booking
  endpoint:
    path: /sendbooking?shipmentId={createShipmentId}&packageIds={createPackageId}
    method: POST
- name: create_shipment_booking
  endpoint:
    path: /shipment/sendbooking
    method: POST
- name: order_pickup
  endpoint:
    path: /api/create
    method: POST
- name: pickup_order_request
  endpoint:
    path: /booking/
    method: POST
    data_selector: pickupOrderRequest
- name: allowed_modifications
  endpoint:
    path: /modify-delivery/allowed-modification
    method: GET
    data_selector: ''
    params: {}
- name: isAdmin
  endpoint:
    path: /modify-delivery/isAdmin
    method: GET
    data_selector: ''
    params: {}
- name: change_recipient_address
  endpoint:
    path: /modify-delivery/modifications/address
    method: POST
    data_selector: ''
    params: {}
- name: change_address_cost
  endpoint:
    path: /modify-delivery/modifications/changeAddress/price/{shipmentNumber}/{newPostalCode}
    method: GET
    data_selector: ''
    params: {}
- name: get_city
  endpoint:
    path: /modify-delivery/modifications/city
    method: GET
    data_selector: ''
    params: {}
- name: change_cash_on_delivery
  endpoint:
    path: /modify-delivery/modifications/cod
    method: POST
    data_selector: ''
    params: {}
- name: update_contact_details
  endpoint:
    path: /modify-delivery/modifications/contactDetails
    method: POST
    data_selector: ''
    params: {}
- name: modifications_history
  endpoint:
    path: /modify-delivery/modifications/customer/{customerNumber}
    method: GET
    data_selector: ''
    params: {}
- name: current_recipient_address
  endpoint:
    path: /modify-delivery/modifications/fetchChangeAddressData/{shipmentNumber}
    method: GET
    data_selector: ''
    params: {}
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: ''
    params: {}
- name: stop_shipment
  endpoint:
    path: /modify-delivery/modifications/stop
    method: POST
    data_selector: ''
    params: {}
- name: send_shipment
  endpoint:
    path: /sendshipment?shipmentId={createShipmentId}&packageIds={createPackageId}
    method: POST
- name: send_booking
  endpoint:
    path: /sendbooking?shipmentId={createShipmentId}&packageIds={createPackageId}
    method: POST
- name: create_shipment_booking
  endpoint:
    path: /shipment/sendbooking
    method: POST
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: shipmentNumber
    params: {}
- name: stop_delivery
  endpoint:
    path: /modify-delivery/stop
    method: POST
    data_selector: code
    params: {}
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: ''
    params: {}
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: records
    params:
      pnr: ''
      country: ''
- name: allowed_modifications
  endpoint:
    path: /modify-delivery/allowed-modification
    method: GET
- name: isAdmin
  endpoint:
    path: /modify-delivery/isAdmin
    method: GET
- name: change_recipient_address
  endpoint:
    path: /modify-delivery/modifications/address
    method: POST
- name: change_address_cost
  endpoint:
    path: /modify-delivery/modifications/changeAddress/price/{shipmentNumber}/{newPostalCode}
    method: GET
- name: get_city
  endpoint:
    path: /modify-delivery/modifications/city
    method: GET
- name: change_cash_on_delivery
  endpoint:
    path: /modify-delivery/modifications/cod
    method: POST
- name: update_contact_details
  endpoint:
    path: /modify-delivery/modifications/contactDetails
    method: POST
- name: modifications_history
  endpoint:
    path: /modify-delivery/modifications/customer/{customerNumber}
    method: GET
- name: current_recipient_address
  endpoint:
    path: /modify-delivery/modifications/fetchChangeAddressData/{shipmentNumber}
    method: GET
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
- name: stop_shipment
  endpoint:
    path: /modify-delivery/modifications/stop
    method: POST
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: ''
    params: {}
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: null
    params: {}
- name: stop_shipment
  endpoint:
    path: /modify-delivery/stop
    method: POST
    data_selector: message
    params: {}
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: records
    params: {}
- name: stop_delivery_order
  endpoint:
    path: /stop-delivery
    method: POST
    data_selector: message
    params: {}
- name: update_contact_data
  endpoint:
    path: /modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: records
    params: {}
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: null
    params:
      pnr: string
      country: string
- name: stop_delivery
  endpoint:
    path: /modify-delivery/stop
    method: POST
    data_selector: message
    params: {}
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: records
    params: {}
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: data
    params: {}
- name: stop_shipment
  endpoint:
    path: /stop_shipment
    method: POST
    data_selector: data
    params: {}
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: response
    params: {}
- name: stop_delivery_order
  endpoint:
    path: /modify-delivery/stop
    method: POST
    data_selector: message
    params: {}
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: records
    params: {}
- name: stop_delivery_order
  endpoint:
    path: /stop_delivery_order
    method: POST
    data_selector: message
    params: {}
- name: stop_shipment
  endpoint:
    path: /modify-delivery/stop-shipment
    method: POST
    data_selector: message
    params: {}
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: records
    params: {}
- name: stop_shipment
  endpoint:
    path: /modify-delivery/stop-shipment
    method: POST
    data_selector: message
    params: {}
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: message
    params:
      shipmentNumber: SHIPMENT_NUMBER
- name: stop_shipment
  endpoint:
    path: /stop_shipment
    method: POST
    data_selector: message
    params: {}
- name: tracking
  endpoint:
    path: /api/{version}/tracking.{extension}
    method: GET
    data_selector: tracking_info
- name: stop_shipment
  endpoint:
    path: /modify-delivery/stop
    method: POST
    data_selector: message
    params: {}
- name: update_contact_data
  endpoint:
    path: /modify-delivery/modifications/fetchUpdateContactData/{shipmentNumber}
    method: GET
    data_selector: message
    params: {}
- name: shipment
  endpoint:
    path: /api/{version}/tracking.{extension}
    method: GET
    data_selector: response
    params: {}
- name: consignment
  endpoint:
    path: /consignments
    method: GET
    data_selector: consignmentSet
    params: {}
- name: consignment
  endpoint:
    path: /Consignment
    method: GET
    data_selector: ConsignmentSet
- name: consignment
  endpoint:
    path: /api/consignment
    method: GET
    data_selector: consignmentSet
- name: consignment
  endpoint:
    path: /consignment
    method: GET
    data_selector: consignmentSet
- name: consignment
  endpoint:
    path: /sporing/2.0/consignment
    method: GET
    data_selector: consignmentSet
    params: {}
- name: consignment
  endpoint:
    path: /sporing/2.0
    method: GET
    data_selector: ConsignmentSet
    params: {}
- name: consignment
  endpoint:
    path: /sporing/2.0/Consignment
    method: GET
    data_selector: ConsignmentSet
    params: {}
- name: customer_number_subscription
  endpoint:
    path: /api/event-cast/customer-number-subscription
    method: POST
    data_selector: eventSet
- name: tracking_number_subscription
  endpoint:
    path: /api/event-cast/tracking-number-subscription
    method: POST
    data_selector: event_groups
- name: customer_webhooks
  endpoint:
    path: /event-cast/api/v1/customer/webhooks
    method: GET
- name: register_customer_webhook
  endpoint:
    path: /event-cast/api/v1/customer/webhooks
    method: POST
- name: all_customer_webhooks
  endpoint:
    path: /event-cast/api/v1/customer/webhooks/all
    method: GET
- name: renew_customer_webhook
  endpoint:
    path: /event-cast/api/v1/customer/webhooks/renew/{webhookSubscriptionId}
    method: POST
- name: delete_customer_webhook
  endpoint:
    path: /event-cast/api/v1/customer/webhooks/{webhookSubscriptionId}
    method: DELETE
- name: get_customer_webhook_by_id
  endpoint:
    path: /event-cast/api/v1/customer/webhooks/{webhookSubscriptionId}
    method: GET
- name: registered_tracking_subscriptions
  endpoint:
    path: /event-cast/api/v1/webhooks
    method: GET
- name: register_tracking_webhook
  endpoint:
    path: /event-cast/api/v1/webhooks
    method: POST
- name: delete_tracking_webhook
  endpoint:
    path: /event-cast/api/v1/webhooks/{webhookSubscriptionId}
    method: DELETE
- name: get_tracking_webhook_by_id
  endpoint:
    path: /event-cast/api/v1/webhooks/{webhookSubscriptionId}
    method: GET
- name: trigger_webhook_test
  endpoint:
    path: /event-cast/api/v1/webhooks/{webhookSubscriptionId}/test
    method: POST
- name: register_webhook_multiple_tracking_numbers
  endpoint:
    path: /event-cast/batch/api/v1/webhooks
    method: POST
- name: webhook_test
  endpoint:
    path: /event-cast/api/v1/webhooks/{webhookSubscriptionId}/test
    method: POST
    data_selector: ''
    params: {}
- name: customer_webhooks
  endpoint:
    path: /event-cast/api/v1/customer/webhooks
    method: GET
    data_selector: ''
    params: {}
- name: register_customer_webhook
  endpoint:
    path: /event-cast/api/v1/customer/webhooks
    method: POST
    data_selector: ''
    params: {}
- name: all_customer_webhooks
  endpoint:
    path: /event-cast/api/v1/customer/webhooks/all
    method: GET
    data_selector: ''
    params: {}
- name: renew_webhook
  endpoint:
    path: /event-cast/api/v1/customer/webhooks/renew/{webhookSubscriptionId}
    method: POST
    data_selector: ''
    params: {}
- name: delete_customer_webhook
  endpoint:
    path: /event-cast/api/v1/customer/webhooks/{webhookSubscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_webhook_by_id
  endpoint:
    path: /event-cast/api/v1/customer/webhooks/{webhookSubscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: all_tracking_webhooks
  endpoint:
    path: /event-cast/api/v1/webhooks
    method: GET
    data_selector: ''
    params: {}
- name: register_tracking_webhook
  endpoint:
    path: /event-cast/api/v1/webhooks
    method: POST
    data_selector: ''
    params: {}
- name: delete_tracking_webhook
  endpoint:
    path: /event-cast/api/v1/webhooks/{webhookSubscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_tracking_webhook_by_id
  endpoint:
    path: /event-cast/api/v1/webhooks/{webhookSubscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: trigger_webhook_test
  endpoint:
    path: /event-cast/api/v1/webhooks/{webhookSubscriptionId}/test
    method: POST
    data_selector: ''
    params: {}
- name: register_multiple_tracking_webhooks
  endpoint:
    path: /event-cast/batch/api/v1/webhooks
    method: POST
    data_selector: ''
    params: {}
- name: send_order
  endpoint:
    path: /order
    method: POST
- name: post_item_data
  endpoint:
    path: /itemdata
    method: POST
- name: list_error_codes
  endpoint:
    path: /errorCodes
    method: GET
- name: webhook
  endpoint:
    path: /event-cast/api/v1/webhooks/{webhookSubscriptionId}/test
    method: POST
    data_selector: configuration
    params: {}
- name: CreateOrderRequest
  endpoint:
    path: /createOrder
    method: POST
    data_selector: orderDetails
- name: order_line_set
  endpoint:
    path: /order/line/set
    method: POST
    data_selector: orderLineSet
    params: {}
- name: send_order
  endpoint:
    path: /order
    method: POST
- name: post_item_data
  endpoint:
    path: /itemdata
    method: POST
- name: list_error_codes
  endpoint:
    path: /errorCodes
    method: GET
- name: CreateOrderRequest
  endpoint:
    path: /createOrder
    method: POST
- name: Contact
  endpoint:
    path: /Contact
    method: POST
    data_selector: Contact
    params: {}
- name: OrderLineSet
  endpoint:
    path: /OrderLineSet
    method: POST
    data_selector: OrderLineSet
    params: {}
- name: CustomsClearance
  endpoint:
    path: /CustomsClearance
    method: POST
    data_selector: CustomsClearance
    params: {}
- name: CreateItemDataRequest
  endpoint:
    path: /CreateItemDataRequest
    method: POST
    data_selector: MessageDetails
    params: {}
- name: ArticleTotals
  endpoint:
    path: /article/totals
    method: POST
    data_selector: totals
    params: {}
- name: GrossWeight
  endpoint:
    path: /gross/weight
    method: POST
    data_selector: weight
    params: {}
- name: GrossVolume
  endpoint:
    path: /gross/volume
    method: POST
    data_selector: volume
    params: {}
- name: LoadingMetres
  endpoint:
    path: /loading/metres
    method: POST
    data_selector: metres
    params: {}
- name: PalletFootPrints
  endpoint:
    path: /pallet/footprints
    method: POST
    data_selector: footprints
    params: {}
- name: Measures
  endpoint:
    path: /measures
    method: POST
    data_selector: measures
    params: {}
- name: ArticleBatches
  endpoint:
    path: /article/batches
    method: POST
    data_selector: batches
    params: {}
- name: DeliveredQuantity
  endpoint:
    path: /delivered/quantity
    method: POST
    data_selector: quantity
    params: {}
- name: ExpectedQuantity
  endpoint:
    path: /expected/quantity
    method: POST
    data_selector: quantity
    params: {}
- name: ReceivedQuantity
  endpoint:
    path: /received/quantity
    method: POST
    data_selector: quantity
    params: {}
- name: PhysicalBalanceQuantity
  endpoint:
    path: /physical/balance/quantity
    method: POST
    data_selector: quantity
    params: {}
- name: AllocatedBalanceQuantity
  endpoint:
    path: /allocated/balance/quantity
    method: POST
    data_selector: quantity
    params: {}
- name: NetWeight
  endpoint:
    path: /net/weight
    method: POST
    data_selector: weight
    params: {}
- name: ArticleSerialNos
  endpoint:
    path: /article/serial/numbers
    method: POST
    data_selector: serial_numbers
    params: {}
- name: ArticleTotals
  endpoint:
    path: /ArticleTotals
    method: POST
    data_selector: RequiredArticleTotals
    params: {}
- name: GrossWeight
  endpoint:
    path: /GrossWeight
    method: POST
    data_selector: RequiredGrossWeight
    params: {}
- name: Measures
  endpoint:
    path: /Measures
    method: POST
    data_selector: RequiredMeasures
    params: {}
- name: ArticleBatches
  endpoint:
    path: /ArticleBatches
    method: POST
    data_selector: RequiredArticleBatches
    params: {}
- name: ArticleSerialNos
  endpoint:
    path: /ArticleSerialNos
    method: POST
    data_selector: RequiredArticleSerialNos
    params: {}
- name: order_information
  endpoint:
    path: /api/warehousing4/
    method: GET
- name: order_information
  endpoint:
    path: /api/warehousing4/
    method: GET
    data_selector: data
    params: {}
- name: order_information
  endpoint:
    path: /order/{customerId}/{orderId}
    method: GET
    data_selector: ResponseProperties
    params: {}
- name: list_order_items
  endpoint:
    path: /items/{customerId}/{orderId}
    method: GET
    data_selector: ArticleBalanceSet
    params: {}
- name: get_stock_balance_all_articles
  endpoint:
    path: /articlebalance/{customerId}
    method: GET
    data_selector: ArticleBalanceSet
    params: {}
- name: get_stock_balance_one_article
  endpoint:
    path: /articlebalance/{customerId}/{articleNo}
    method: GET
    data_selector: ArticleBalanceSet
    params: {}
- name: get_stock_balance_matching_search
  endpoint:
    path: /articlebalance/info/{customerId}/{articleSearchString}
    method: GET
    data_selector: ArticleBalanceSet
    params: {}
- name: list_error_codes
  endpoint:
    path: /errorCodes
    method: GET
    data_selector: ErrorCodes
    params: {}
- name: order_information
  endpoint:
    path: /order/{customerId}/{orderId}
    method: GET
    data_selector: ResponseProperties
    params:
      customerId: required
      orderId: required
- name: list_order_items
  endpoint:
    path: /items/{customerId}/{orderId}
    method: GET
    data_selector: ResponseProperties
    params:
      customerId: required
      orderId: required
- name: get_stock_balance_all_articles
  endpoint:
    path: /articlebalance/{customerId}
    method: GET
    data_selector: ArticleBalanceSet
    params:
      customerId: required
- name: get_stock_balance_one_article
  endpoint:
    path: /articlebalance/{customerId}/{articleNo}
    method: GET
    data_selector: ArticleBalanceSet
    params:
      customerId: required
      articleNo: required
- name: get_stock_balance_articles_search
  endpoint:
    path: /articlebalance/info/{customerId}/{articleSearchString}
    method: GET
    data_selector: ArticleBalanceSet
    params:
      customerId: required
      articleSearchString: required
- name: list_error_codes
  endpoint:
    path: /errorCodes
    method: GET
    data_selector: ErrorCodes
    params:
      customerId: required
      orderId: required
- name: GetArticleBalance
  endpoint:
    path: /warehousing/api/v1/errorCodes
    method: GET
    data_selector: ArticleBalanceSet.ArticleBalance
    params:
      customerId: required
- name: article_balance
  endpoint:
    path: /articles/balance
    method: GET
    data_selector: ArticleBalanceSet.ArticleBalance
    params:
      customerId: string
- name: error_codes
  endpoint:
    path: /errorCodes
    method: GET
    data_selector: ErrorCodeSet.ErrorCode
    params:
      articleNo: string
      customerId: string
- name: error_codes
  endpoint:
    path: /warehousing/api/v1/errorCodes
    method: GET
    data_selector: errorTypes
    params: {}
- name: list_available_customers
  endpoint:
    path: /api/generate
    method: GET
- name: list_available_reports_for_customer
  endpoint:
    path: /api/generate/{customerId}
    method: GET
- name: generate_report
  endpoint:
    path: /api/generate/{customerId}/{apiDefinitionId}
    method: GET
- name: check_report_status
  endpoint:
    path: /api/report/{reportId}/status
    method: GET
- name: get_report
  endpoint:
    path: /api/report/{reportId}
    method: GET
- name: list_available_customers
  endpoint:
    path: /api/generate
    method: GET
- name: list_available_reports_for_customer
  endpoint:
    path: /api/generate/{customerId}
    method: GET
- name: generate_report
  endpoint:
    path: /api/generate/{customerId}/{apiDefinitionId}
    method: GET
- name: check_status_of_report
  endpoint:
    path: /api/report/{reportId}/status
    method: GET
- name: get_report
  endpoint:
    path: /api/report/{reportId}
    method: GET
- name: report
  endpoint:
    path: /report/{reportId}
    method: GET
    data_selector: Report
    params: {}
- name: report
  endpoint:
    path: /report/{reportId}
    method: GET
    data_selector: Report
    params: {}
- name: search_documents
  endpoint:
    path: /api/v1/search/{customerNumber}
    method: GET
    data_selector: documents
    params: {}
- name: fetch_document_by_id
  endpoint:
    path: /api/v1/document/{customerNumber}/{id}
    method: GET
    data_selector: documents
    params: {}
- name: search_for_documents
  endpoint:
    path: /api/v1/search/{customerNumber}
    method: GET
    data_selector: documents
- name: fetch_document_by_id
  endpoint:
    path: /api/v1/document/{customerNumber}/{id}
    method: GET
    data_selector: documents
- name: list_of_all_invoices_json
  endpoint:
    path: /api/invoices/{customerNumber}.json
    method: GET
    params: {}
- name: list_of_all_invoices_xml
  endpoint:
    path: /api/invoices/{customerNumber}.xml
    method: GET
    params: {}
- name: invoice_pdf_download
  endpoint:
    path: /pdf/{customerNumberUnique}/{invoiceNumber}.pdf
    method: GET
    params: {}
- name: List of all Invoices
  endpoint:
    path: /api/invoices/{customerNumber}.json
    method: GET
    data_selector: invoices
    params:
      fromDate: Start date for fetching invoices in format dd.mm.yyyy
      toDate: End date for fetching invoices in format dd.mm.yyyy
- name: Invoice PDF download
  endpoint:
    path: /pdf/{customerNumberUnique}/{invoiceNumber}.pdf
    method: GET
    data_selector: pdf
- name: invoice_pdf_download
  endpoint:
    path: /pdf/{customerNumberUnique}/{invoiceNumber}.pdf
    method: GET
    data_selector: string <byte>
    params:
      customerNumberUnique: Required
      invoiceNumber: Required
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
    params: {}
- name: invoice_pdf_download
  endpoint:
    path: /pdf/{customerNumberUnique}/{invoiceNumber}.pdf
    method: GET
- name: Invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
    params: {}
- name: Get Order
  endpoint:
    path: /api/v1/omorder/{custno}/{ordno}
    method: GET
- name: Packaging list
  endpoint:
    path: /api/v1/packaginglist
    method: POST
- name: packaging_list
  endpoint:
    path: /packaginglist
    method: POST
    data_selector: responsePropertiesType
    params: {}
- name: Get Order
  endpoint:
    path: /api/v1/omorder/{custno}/{ordno}
    method: GET
    data_selector: responsePropertiesType
    params: {}
- name: Packaging list
  endpoint:
    path: /api/v1/packaginglist
    method: POST
    data_selector: CreatePackagingListRequest
    params: {}
- name: packaging_list
  endpoint:
    path: /packaginglist
    method: POST
    data_selector: responsePropertiesType
    params: {}
notes:
- Providing the actual shipping date in the request is a prerequisite for getting
  the correct lead times.
- In absence of a shipping date set by the user, the Shipping Guide API will default
  to `now`.
- Should the parcel be registered using EDI when shipped. Note that this flag may
  affect price and which services are available
- Supports multiple input formats such as JSON and XML
- Supports multiple packages, mixed measurements
- EDI is not supported
- Some services may not provide price information.
- Developing an e-commerce site? Or dealing with logistics software in the Nordic
  countries? Find out how to integrate with Bring’s API platform.
- Information applies to revised services only.
- To comply with legal requirements, the recipient’s identity and age (18+) will be
  confirmed before the item can be handed over
- Agreed delivery must be booked if the recipient stays at a private or unattended
  address.
- Sender phoneNumber and/or email is required.
- Recipient phoneNumber is required.
- Delivery instructions must be provided when ordering Desktop delivery.
- Limited quantities enables transportation of parcels containing dangerous goods
  in limited quantities.
- LQ gross weight mandatory when shipped by boat.
- LQ gross weight is mandatory when shipped by boat.
- numberOfItems is mandatory when ordering Unwrapping.
- Pickup point delivery requires that the recipient has email and/or phone number
  set.
- Delivery to locker requires that the recipient has a valid mobile number.
- Options cost extra money but the customer/sender will only be charged if the event
  happens.
- Some cookies perform essential functions for our website.
- You can opt-out of cookies from Google Analytics.
- From 15 August 2023, we will start rate liming the requests.
- If you see following error message that means you are being rate limited, and you
  should start using authenticated requests.
- Starting from May 2, 2024, we will reject browser calls associated with a customer
  number to enhance security.
- Clients exceeding 80 requests per second will be throttled.
- We are now rate limiting our unauthenticated users, to prevent this make sure your
  requests are authenticated.
- Clients exceeding 80 requests per second will be throttled, and the response will
  contain http status code 429.
- Only supported for Norwegian postal codes
- Clients exceeding 120 requests per second will be throttled, and the response will
  contain http status code 429.
- Returned format is controlled by the Accept header. Supported values are application/json
  and application/xml.
- The suggestion endpoints perform fuzzy searches and will return exact and/or close
  matches.
- Clients exceeding 300 requests per second will be throttled with status code 429.
- Response bodies exceeding 4kb are gzip compressed.
- Clients exceeding 300 requests per second will be throttled.
- Clients exceeding 18 requests per second will be throttled, and the response will
  contain http status code 429.
- REST JSON over HTTP is recommended for all new integrations.
- For test orders, set testIndicator to true in HTTP header
- For test orders, set testIndicator to true in the HTTP header
- The label generated against a booking will be valid for 52 weeks when Bring receives
  the request for an order.
- Clients exceeding a certain number of requests per second will be throttled.
- testIndicator is deprecated, use HTTP header instead.
- testIndicator is deprecated, use HTTP header instead
- Using the API requires a good knowledge of Bring’s service portfolio and logistics
  value chain as the level of content validation is low.
- Starting from May 13th, unauthenticated requests will no longer have access to the
  Tracking API.
- The Tracking API provides the opportunity to track shipments by reference, package
  or shipment number.
- API version is 2
- The shipment may have multiple events associated with it
- No shipment has been received yet, only notification of the shipment.
- Maximum 50 concurrent requests per user is allowed.
- Webhooks cannot be edited after they have been created.
- Expired webhooks are not available.
- Server too busy/ Temporarily blocked due to too many invalid requests
- Maximum 10 concurrent requests per user is allowed on the test endpoint.
- Maximum 100 shipments can be batch created per request.
- Multiple webhooks for one shipment can only be registered as long as they subscribe
  to different events.
- This API doesn’t support JSON for all methods yet.
- Default value for collaboration is 'Order'
- Default value for profile is 'BringXML'
- Example values for messageId and updateIndicator are provided
- Bring supports https with basic username and password authentication.
- Message must be equal to success. Request ID has to be a unique ID for each message.
- The data sent from Bring will be in GS1 3.3 format.
- The API currently doesn’t support JSON on all of its methods.
- Errors or service unavailability can occur, use timeouts and other error handling
  techniques.
- Requests for creating reports will be rate limited starting from 17 June 2024.
- Users are limited to 20 concurrent report requests.
- Supported report formats are XML and Excel.
- Customer number must be set and at least one of the other search parameters for
  searching documents.
- Requires Mybring login ID and API key in headers
- The cookie policy was last updated on 22.09.2025
errors:
- '429: Clients exceeding 120 requests per second will be throttled.'
- NOT_FOUND
- FORBIDDEN
- CONFLICT
- UNAUTHORIZED
- INVALID_ARGUMENT
- INVALID_MEASUREMENTS
- INTERNAL_ERROR
- 400 Bad Request
- 429 Too Many Requests
- 500 Internal Server Error
- 'INVALID_MEASUREMENTS: Consignment 1 with total weight 25000 grams is not within
  weight limit 13000 grams'
- 'INVALID_ARGUMENT: The product %s is not available for provided customer/day/area'
- 'FORBIDDEN: User does not have access to customer %s. Either the customer number
  is misspelled or you don''t have access to that customer in mybring. Example of
  correct format for API customer number: PARCELS_NORWAY-10001123123. API customer
  numbers can be viewed in the profile pages in mybring or fetched using the Booking
  API''s Customer Endpoint (see developer.bring.com).'
- 'FORBIDDEN: User does not have access to financial information for customer %s.
  You might want to contact the mybring administrator for this customer (typically
  a privileged user from that customer).'
- 'INVALID_ARGUMENT: Customer not applicable for product %s'
- 'NOT_FOUND: Customer %s not found (using super user)'
- 'INVALID_ARGUMENT: %s product requires a customer number set on the product element'
- 'INTERNAL_ERROR: An external service for product %s is currently not available.
  If the problem persists, please contact us'
- 'INVALID_ARGUMENT: %s does not support historic query (dates in the past)'
- 'INTERNAL_ERROR: Internal Error'
- 'INVALID_ARGUMENT: Cannot add 2012 with customer 12345678'
- 'INVALID_ARGUMENT: Product %s can not be sent from country %s to country %s'
- 'INVALID_ARGUMENT: Shipping date cannot be in the past'
- 'INVALID_ARGUMENT: Shipping date cannot be more than 20 days into the future'
- 'INVALID_ARGUMENT: Invalid lead time customer in minutes. It should be up to 3 digits.'
- 'INVALID_ARGUMENT: Cannot add 2012 with product 5100 with specified shipment details'
- 'INVALID_MEASUREMENTS: SG_VALIDATION_ERROR_01:There is weight and volume restrictions
  for %s in mybring. Bookings greater than 27 tonnes or exceeding 19 load meter, must
  be split into multiple orders.'
- 'INVALID_ARGUMENT: Main customer number is required for service %s'
- 'INVALID_ARGUMENT: Missing customer for 2012'
- 'INVALID_ARGUMENT: Same day delivery (2012) VAS requires lead time from customer
  in minutes.'
- 'INVALID_ARGUMENT: Weight is required for product 5600, packageId : 1'
- 'INVALID_MEASUREMENTS: Weight and dimensions(length, width, height) are required
  for product 5600, packageId : 1'
- 'INVALID_MEASUREMENTS: Either weight or dimensions(length, width, height) or volume
  is required for product 5600, packageId : 1'
- 'INVALID_MEASUREMENTS: Weight and either of volume or dimensions(length, width,
  height) or pallets or load meter is required for product 5100, packageId : 1'
- 'CONFLICT: Multiple agreements found for Customer'
- 'INVALID_ARGUMENT: Multiple Packages are not supported for Product: %s'
- 'INVALID_MEASUREMENTS: There is weight and volume restrictions for %s in mybring.
  Bookings greater than 27 tonnes or exceeding 19 load meter, must be split into multiple
  orders.'
- 'UNAUTHORIZED: Customer number specified on product, but request not authenticated
  with mybring API login. Please query https://api.bring.com/shippingguide with the
  two API login headers (X-MyBring-API-Uid and X-MyBring-API-Key) set to a valid combination.'
- 'INVALID_MEASUREMENTS: Consignment is not within weight limit'
- 'INVALID_ARGUMENT: Product not available for provided customer/day/area'
- 'FORBIDDEN: User does not have access to customer'
- 'FORBIDDEN: User does not have access to customer %s. Either the customer number
  is misspelled or you don''t have access to that customer in mybring.'
- 'FORBIDDEN: User does not have access to financial information for customer %s.'
- 'INTERNAL_ERROR: An external service for product %s is currently not available.'
- 'INVALID_ARGUMENT: Multiple packages are not accepted for 5600'
- 'INVALID_MEASUREMENTS: Package 1 does not satisfy with minimum criteria'
- 'INVALID_MEASUREMENTS: Package weight 1000 grams not within weight limit 25 grams
  - 500 grams packageId: 1'
- 'INTERNAL_ERROR: The oil express product is not available between 2300 and 0400
  hours.'
- 'INVALID_ARGUMENT: Product %s can not be sent between the given postal codes / countries'
- 'INVALID_ARGUMENT: Product %s not available as EXPRESS between the given postal
  codes / countries'
- 'INVALID_MEASUREMENTS: PackageId 1 exceeds max dimensions of 20 x 15 x 10'
- 'INVALID_MEASUREMENTS: Package 1 exceed maximum measurements for product 5600'
- 'INVALID_MEASUREMENTS: PackageId 1 subceeds min dimensions of 15 x 13 x 7'
- 'INVALID_MEASUREMENTS: Package exceed maximum measurements for product %s'
- 'INTERNAL_ERROR: Price calculation failed for product %s. If the problem persists,
  please contact us'
- 'INVALID_ARGUMENT: Product %s is not supported on this version. Use latest service
  %s for the product.'
- 'INVALID_ARGUMENT: Product %s was skipped since shipment can use normal courier
  product.'
- 'INVALID_ARGUMENT: Unknown product ID or product %s not applicable for given EDI
  flag.'
- 'INVALID_ARGUMENT: Product %s requires weight information'
- 'INVALID_ARGUMENT: Product %s requires both weight and volume information'
- 'INTERNAL_ERROR: Service texts are not available'
- 'INTERNAL_ERROR: No service texts found'
- 'INVALID_MEASUREMENTS: Number of pallets exceeds maximum of 10'
- 'ESTIMATED_ARRIVAL_TIME_NOT_AVAILABLE: Estimated arrival time is not available'
- 'ESTIMATED_ARRIVAL_TIME_NOT_FOUND: No estimated arrival time found for service %s'
- 'ESTIMATED_DELIVERY_TIME_NOT_AVAILABLE: Estimated delivery time is not available'
- 'ESTIMATED_DELIVERY_TIME_NOT_FOUND: No estimated delivery time found for service
  %s'
- 'EXPECTED_DELIVERY_NOT_AVAILABLE_UNKNOWN_ADDRESS: Expected delivery date cannot
  be calculated as there is no coverage on the service for specified recipient address'
- 'EXPECTED_DELIVERY_NOT_AVAILABLE_WITHOUT_ADDRESS: Expected delivery date cannot
  be calculated without recipient address being specified'
- 'INCORRECT_FLAG_SET_FOR_ESTIMATED_DELIVERY_TIME: Set WithExpectedDelivery flag to
  true to get estimated delivery time for service %s'
- 'INVALID_INPUT_PICKUP_POINT_FOUND: Invalid pickup point Id(s): %s'
- 'NO_ALTERNATIVE_DATES: Alternative dates is not available for this service'
- 'NO_ENVIRONMENTAL_DATA: Environmental data is currently not available for %s'
- 'INVALID_ARGUMENT: Consignment details missing'
- 'INVALID_ARGUMENT: Package details missing for consignment 1'
- 'INVALID_ARGUMENT: One of the consignment is missing product id. Product id is mandatory
  on each consignment.'
- 'INTERNAL_ERROR: Internal Error. Error Id: 123456789'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'INVALID_REQUEST: Check request parameters and structure'
- 'SERVICE_NOT_AVAILABLE: The requested service is not available for the selected
  destination'
- 'Invalid request: Please provide the mandatory fields.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '0041: Booking API request code'
- '1139: Unwrapping API request code'
- 401 - Unauthorized. The Tracking API no longer supports unauthenticated requests.
- 429 - Too many requests. We are now rate limiting our unauthenticated users, to
  prevent this make sure your requests are authenticated.
- 401 - Unathorized. The Tracking API no longer supports unauthenticated requests.
  Make sure your requests are authenticated.
- '429: Too Many Requests'
- '400 Bad Request: Query parameter validation errors'
- '429 Too Many Requests: Too many requests'
- '500 Internal Server Error: An unexpected error occurred'
- Request rate cannot exceed 30 requests per 1 second
- Unknown error
- '429 Too Many Requests: Throttle API calls'
- '500 Internal Server Error: Internal server error'
- Country Not Supported
- Invalid PostalCode
- Invalid PostalCode Length
- '429 Too Many Requests: Rate limit exceeded'
- '500 Internal Server Error: Unexpected server error'
- INVALID_QUERY_PARAM
- INVALID_COUNTRY
- INVALID_MAILBOX_DELIVERY_COUNTRY
- INVALID_POSTAL_CODE_COUNTRY
- QUERY_PARAM_MISSING_OR_EMPTY
- QUERY_PARAM_EMPTY
- INVALID_PAGE_NUMBER
- INVALID_LIMIT
- LIMIT_LARGER_THAN_10
- LIMIT_LARGER_THAN_20
- INVALID_POSTAL_CODE
- INVALID_DATE_FORMAT
- INVALID_LOOK_AHEAD_DAYS
- INVALID_POSTAL_CODE_FORMAT_FOR_COUNTRY
- INVALID_ADDRESS_STRING
- ADDRESS_PARAM_PROVIDED
- MISSING_ADDRESS_TYPE
- INVALID_ADDRESS_TYPE
- MISSING_STREET_OR_PLACE
- MISSING_POSTAL_CODE_OR_CITY_POSTAL_PLACE_ADDRESS
- MISSING_CITY_POSTAL_PLACE_ADDRESS
- MISSING_OR_INVALID_POSTAL_CODE
- INVALID_STREET_NUMBER
- INVALID_PO_BOX_NUMBER
- INVALID_LETTER
- NO_QUERY_PARAMS
- MISSING_STREET_NUMBER
- MISSING_PO_BOX_NUMBER
- MISSING_POSTAL_CODE
- INVALID_COUNTRY_CODE
- UNSUPPORTED_COUNTRY_CODE
- MISSING_SEARCH_EXPRESSION
- 'RATE_LIMIT_EXCEEDED: Request rate cannot exceed 40 requests per 1 second'
- 'INTERNAL_ERROR: An unexpected error occurred'
- 'INVALID_QUERY_PARAM: Check query parameters'
- 'INVALID_COUNTRY: Validate country code'
- 'LIMIT_LARGER_THAN_10: Adjust limit to 10 or lower'
- 'RATE_LIMIT_EXCEEDED: Reduce request frequency'
- 'INVALID_QUERY_PARAM: Invalid query parameter'
- 'INVALID_COUNTRY: Invalid country'
- 'INVALID_MAILBOX_DELIVERY_COUNTRY: Invalid mailbox delivery country'
- 'INVALID_POSTAL_CODE_COUNTRY: Invalid postal code country'
- 'QUERY_PARAM_MISSING_OR_EMPTY: Query parameter missing or empty'
- 'QUERY_PARAM_EMPTY: Query parameter empty'
- 'INVALID_PAGE_NUMBER: Invalid page number'
- 'INVALID_LIMIT: Invalid limit'
- 'LIMIT_LARGER_THAN_10: Limit larger than 10'
- 'LIMIT_LARGER_THAN_20: Limit larger than 20'
- 'INVALID_POSTAL_CODE: Invalid postal code'
- 'INVALID_DATE_FORMAT: Invalid date format'
- 'INVALID_LOOK_AHEAD_DAYS: Invalid look ahead days'
- 'INVALID_POSTAL_CODE_FORMAT_FOR_COUNTRY: Invalid postal code format for country'
- 'INVALID_ADDRESS_STRING: Invalid address string'
- 'ADDRESS_PARAM_PROVIDED: Address parameter provided'
- 'MISSING_ADDRESS_TYPE: Missing address type'
- 'INVALID_ADDRESS_TYPE: Invalid address type'
- 'MISSING_STREET_OR_PLACE: Missing street or place'
- 'MISSING_POSTAL_CODE_OR_CITY_POSTAL_PLACE_ADDRESS: Missing postal code or city postal
  place address'
- 'MISSING_CITY_POSTAL_PLACE_ADDRESS: Missing city postal place address'
- 'MISSING_OR_INVALID_POSTAL_CODE: Missing or invalid postal code'
- 'INVALID_STREET_NUMBER: Invalid street number'
- 'INVALID_PO_BOX_NUMBER: Invalid PO box number'
- 'INVALID_LETTER: Invalid letter'
- 'NO_QUERY_PARAMS: No query parameters'
- 'MISSING_STREET_NUMBER: Missing street number'
- 'MISSING_PO_BOX_NUMBER: Missing PO box number'
- 'MISSING_POSTAL_CODE: Missing postal code'
- 'INVALID_COUNTRY_CODE: Invalid country code'
- 'UNSUPPORTED_COUNTRY_CODE: Unsupported country code'
- 'MISSING_SEARCH_EXPRESSION: Missing search expression'
- RATE_LIMIT_EXCEEDED
- 'INVALID_ADDRESS_STRING: The ''address'' query param cannot be empty'
- 'INVALID_ADDRESS_TYPE: The ''address_type'' query param requires one of the following
  values: [street, place, postal_place, po_box]'
- 'INVALID_COUNTRY: The provided country code is not supported'
- 'INVALID_LETTER: The ''letter'' query param cannot be numeric'
- 'INVALID_PO_BOX_NUMBER: The ''po_box_number'' query param must be numeric'
- 'INVALID_QUERY_PARAM: Invalid query param(s)'
- 'INVALID_STREET_NUMBER: The ''street_number'' query param must be numeric'
- 'MISSING_ADDRESS_TYPE: The ''address_type'' query param cannot be null'
- 'MISSING_CITY_POSTAL_PLACE_ADDRESS: The ''city'' query param is mandatory when providing
  an ''address_type'' postal place'
- 'MISSING_OR_INVALID_POSTAL_CODE: The ''postal_code'' query param is missing or has
  an invalid postal code format. Postal code must be numeric and consist of 4 digits'
- 'MISSING_STREET_NUMBER: ''street_number'' query param is mandatory when providing
  a street ''address_type'''
- 'MISSING_STREET_OR_PLACE: The ''street_or_place'' query param is mandatory when
  providing an ''address_type'' of street or place'
- 'INVALID_QUERY_PARAM: Query parameter is invalid'
- 'INVALID_COUNTRY: Country is invalid'
- 'INVALID_POSTAL_CODE: Postal code is invalid'
- 'MISSING_POSTAL_CODE: Postal code is missing'
- 'RATE_LIMIT_EXCEEDED: Too many requests'
- 'ADDRESS_NOT_FOUND: No matching address found, and no alternative suggestions available'
- 'INCORRECT_CITY: Incorrect city'
- 'HOUSE_LETTER_DOES_NOT_EXIST: Requested house letter does not exist'
- 'HOUSE_NUMBER_DOES_NOT_EXIST: Requested house number does not exist'
- 'PLACE_DOES_NOT_EXIST: Requested place not found'
- 'PO_BOX_FACILITY_DOES_NOT_EXIST: Requested post office box facility does not exist'
- 'PO_BOX_NUMBER_DOES_NOT_EXIST: Requested post office box number does not exist'
- 'STREET_NAME_DOES_NOT_EXIST: Requested street name not found'
- 'INVALID_PO_BOX_NUMBER: Invalid PO Box number'
- 'MISSING_PO_BOX_NUMBER: Missing PO Box number'
- code: RATE_LIMIT_EXCEEDED
  description: Request rate cannot exceed 40 requests per 1 second
- code: INTERNAL_ERROR
  description: An unexpected error occurred
- 'RATE_LIMIT_EXCEEDED: Too many requests made in a short time'
- '400 Bad Request: INVALID_POSTAL_CODE, INVALID_QUERY_PARAM, INVALID_MAILBOX_DELIVERY_COUNTRY,
  INVALID_LOOK_AHEAD_DAYS, INVALID_DATE_FORMAT'
- '429 Too Many Requests: RATE_LIMIT_EXCEEDED'
- '500 Internal Server Error: INTERNAL_ERROR, NOT_FOUND'
- 'INVALID_DATE_FORMAT: Invalid `from_date` date format. Should be formatted as ISO
  date (e.g. 2023-03-23) and not in the past'
- 'INVALID_LOOK_AHEAD_DAYS: The `look_ahead_days` query param must be a positive numeric
  value and cannot be greater than 14.'
- 'INVALID_MAILBOX_DELIVERY_COUNTRY: The provided country code is not supported'
- 'INVALID_POSTAL_CODE: Invalid postal code format. Postal code must be numeric and
  consist of 4 digits'
- '400 Bad Request: Invalid parameters provided'
- 'BOOK-INPUT-001: Bad request'
- 'BOOK-INPUT-002: Weight is required'
- 'BOOK-INPUT-003: Schema version must be present'
- 'BOOK-INPUT-004: At least one consignment must be specified'
- 'BOOK-INPUT-005: Multiple consignments in one booking is not supported'
- 'BOOK-INPUT-006: Sender must be specified'
- 'BOOK-INPUT-007: Recipient must be specified'
- 'BOOK-INPUT-008: Product must be set'
- 'BOOK-INPUT-009: Package or Package Group must be specified'
- 'BOOK-INPUT-011: Multiple packages in one booking is not supported'
- 'BOOK-INPUT-012: Shipping date and time must be provided'
- 'BOOK-INPUT-013: Volume or Package dimensions must be provided'
- 'BOOK-INPUT-014: Name must be provided'
- 'BOOK-INPUT-015: Address must be provided'
- 'BOOK-INPUT-016: City must be provided'
- 'BOOK-INPUT-017: ISO Country code must be provided'
- 'BOOK-INPUT-018: Product ID must be provided'
- 'BOOK-INPUT-019: Customer number must be provided'
- 'BOOK-INPUT-020: Invalid product ID'
- 'BOOK-INPUT-021: Invalid customer number'
- 'BOOK-INPUT-022: Illegal product for country'
- 'BOOK-INPUT-023: The shipment is too big to send with the given product'
- 'BOOK-INPUT-024: The product is not available between the given addresses (outside
  coverage)'
- 'BOOK-INPUT-025: The product is not available between the given countries'
- 'BOOK-INPUT-026: The product is not available as express between the given addresses
  (outside coverage)'
- 'BOOK-INPUT-027: Failed because of product specific requirements'
- 'BOOK-INPUT-028: Invalid country code'
- 'BOOK-INPUT-030: Please set X-Bring-Test-Indicator HTTP header (true = test booking,
  false = production booking)'
- 'BOOK-INPUT-063: Consignor must be specified'
- 'BOOK-INPUT-064: Consignee must be specified'
- 'BOOK-INPUT-065: Incoterm must be specified'
- 'BOOK-INPUT-068: Package type must be specified for given product.'
- 'BOOK-INPUT-070: The product is not available'
- 'BOOK-INPUT-072: Missing both recipient phone number and mobile number.'
- 'BOOK-INPUT-074: Only one of [packages, packageGroups] can be set'
- 'BOOK-INPUT-075: Dangerous goods cannot be booked with simple delivery'
- 'BOOK-INPUT-096: Customer has multiple bulk agreements on sender country.'
- 'BOOK-INPUT-100: Customs information for this scenario is only valid for single-package
  shipments'
- 'BOOK-INPUT-101: Customer number is not applicable for the requested product'
- 'BOOK-INPUT-103: One or more packages/pallets has an invalid package weights for
  the given product'
- 'BOOK-INPUT-104: One or more packages/pallets has an invalid volume for the given
  product'
- 'BOOK-AUTHORIZATION-001: Your user is not authorized to perform this action'
- 'BOOK-VALIDATION-001: Unexpected business validation rule failure'
- 'BOOK_VALIDATION-003: Country is not a member of Universal Postal Union'
- 'BOOK_VALIDATION-011: A valid recipient mobile number or email address is required
  for notification'
- 'BOOK_VALIDATION-020: A valid quantity, goods description, article code, item gross
  weight, amount, currency and country of origin is required for customs declaration'
- 'BOOK-VALIDATION-024: Customs declaration requires country of origin for this service
  when shipped from Norway'
- 'BOOK-INPUT-029: Invalid customer number for sender country and product'
- 'BOOK-INPUT-031: You must specify number of packages (pieces) included in the package
  group'
- 'BOOK-INPUT-032: Multiple packages are not supported for this product'
- 'BOOK-INPUT-033: Package groups are not supported for this product (numberOfItems
  cannot be greater than 1)'
- 'BOOK-INPUT-034: Multiple package groups are not supported for this product'
- 'BOOK-INPUT-035: Invalid value for QuickPack Envelope. Must be boolean lower case.'
- 'BOOK-INPUT-036: Invalid currency code, use ISO 4217 currency code'
- 'BOOK-INPUT-037: Missing required input for cash on delivery. amount, currency and
  account are required.'
- 'BOOK-INPUT-038: Invalid message type for cash on delivery.'
- 'BOOK-INPUT-039: Delivery option is invalid.'
- 'BOOK-INPUT-040: Delivery option is not applicable for this product.'
- 'BOOK-INPUT-041: Invalid purchase order number'
- 'BOOK-INPUT-043: The customer does not have a return agreement for that country/product.'
- 'BOOK-INPUT-044: Missing required input for cash on delivery. account type is required
  for Sweden.'
- 'BOOK-INPUT-046: Non freeze should be lowercase true or false.'
- 'BOOK-INPUT-047: Pickup point delivery method is only available for PICKUP_PARCEL
  from other countries than Norway to Denmark and Sweden, PICKUP_PARCEL_BULK to Denmark,
  Norway, Sweden, Finland, 0344 to Norway, Denmark and Sweden and for SERVICEPAKKE,
  4850, 5000, 5800 and 3067 within NORWAY.'
- 'BOOK-INPUT-048: Missing required UNNumber for Dangerous goods.'
- 'BOOK-INPUT-049: Missing required Commodity for Dangerous goods.'
- 'BOOK-INPUT-050: Missing required Weight for Dangerous goods.'
- 'BOOK-INPUT-052: Missing required Container Id for Supply Base Logistics Product'
- 'BOOK-INPUT-053: Dangerous Goods Container Id should match with one of the container
  Id in Package List'
- 'BOOK-INPUT-054: Invalid amount for Cash On Delivery, use amount with two decimal
  places only'
- 'BOOK_INPUT-055: Dangerous Goods is not supported for given product'
- 'BOOK_INPUT-057: Invalid postal Code'
- 'BOOK_INPUT-059: Invalid input provided. Not able to parse the input successfully.'
- 'BOOK_INPUT-060: Missing booking request'
- 'BOOK_INPUT-061: Maximum 400 characters are allowed in Message For Recipient field.'
- 'BOOK-INPUT-062: Missing required message input for delivery indoor'
- 'BOOK-INPUT-066: Valid temperature zones are: frozen, cool, dry, fish'
- 'BOOK-INPUT-071: Invalid package type for Home Delivery product. Available options:
  ''hd_eur'', ''hd_half'', ''hd_quarter'', ''hd_loose'''
- 'BOOK-INPUT-073: Invalid package type for Home Delivery product. Available options:
  ''hd_eur'', ''hd_half'', ''hd_loose'''
- 'BOOK-INPUT-077: Additional services cannot be requested in combination of both
  old and new way. Use one way of requesting additional service.'
- 'BOOK-INPUT-078: Invalid tarriff line amount'
- 'BOOK-INPUT-079: Invalid quantity'
- 'BOOK-INPUT-080: Additional services cannot be requested in this way, Check proper
  format for XML/JSON at https://developer.bring.com/api/booking/'
- 'BOOK-INPUT-081: When booking nonstandard courier services you must supply the ''nonStandardCourierProductCode'''
- 'BOOK-INPUT-082: ''nonStandardCourierProductCode'' can only be set when booking
  courier customized services'
- 'BOOK-INPUT-083: Invalid Return Product ID'
- 'BOOK-INPUT-084: QR codes cannot be ordered for product'
- 'BOOK-INPUT-085: Missing required weight or volume for Dangerous goods.'
- 'BOOK-INPUT-086: Either weight or volume, not both, should be specified for Dangerous
  goods.'
- 'BOOK-INPUT-087: Total weight of dangerous goods can not exceed total package weight.'
- 'BOOK-INPUT-088: Total volume of dangerous goods can not exceed total package volume.'
- 'BOOK-INPUT-089: Duplicated container ids for Supply Base Logistics w ADRs.'
- 'BOOK-INPUT-090: Invalid dimensions for parcel box pickup point.'
- 'BOOK-INPUT-091: Invalid length for UN Number. Must be of length four.'
- 'BOOK-INPUT-092: Invalid Pickup Point type for this service.'
- 'BOOK-INPUT-093: Missing required message input for desktop delivery.'
- 'BOOK-INPUT-094: Customer does not have a bulk agreement for this sender country.'
- 'BOOK_INPUT-095: Customer does not have a bulk agreement.'
- 'BOOK-INPUT-097: Customer does not have a bulk agreement for this sender/recipient
  country combination'
- 'BOOK-INPUT-098: Valid recipient mobile number is required for delivery to locker'
- 'BOOK-INPUT-099: Please use the newer ''customsInformation'' field for specifying
  customs details.'
- 'BOOK-INPUT-102: The shipment is too small to send with the given product'
- 'BOOK_VALIDATION-002: A valid mobile phone number or email address is required for
  eVarsling'
- 'BOOK_VALIDATION-004: Phone Notification is not available for the recipient country.'
- 'BOOK_VALIDATION-005: Phone Notification should be true.'
- 'BOOK_VALIDATION-006: Phone Notification requires recipient number to be present.'
- 'BOOK_VALIDATION-008: Illegal argument'
- 'BOOK_VALIDATION-009: Booking of this revised service is only supported using your
  main customer number. This customer number also needs to be converted to the agreements
  covering the revised service.'
- 'BOOK_VALIDATION-010: Booking of this service is not supported using this main customer
  number. You have to use the customer number belonging to the corresponding service
  type.'
- 'BOOK_VALIDATION-012: A valid quantity, goods description, article line amount and
  item net/gross weight is required for customs declaration'
- 'BOOK_VALIDATION-013: Nature of transaction required for using customs declarations'
- 'BOOK_VALIDATION-014: Customs declarations are required for exporting this product
  from Norway'
- 'BOOK_VALIDATION-015: Total weight stated in the customs information exceeds the
  allowed max weight for this service'
- 'BOOK_VALIDATION-016: One or more additional services is not allowed for this customer'
- 'BOOK_VALIDATION-017: Main customer number must be used for this service'
- 'BOOK_VALIDATION-018: One or more additional services is not valid for this service'
- 'BOOK_VALIDATION-019: Maximum 10 dangerous goods vases are allowed in a request'
- 'BOOK_VALIDATION-021: A valid VOEC (VAT On Ecommerce) id is not present, it should
  be 7 digits'
- 'BOOK_VALIDATION-022: Nature of transaction/cargo must be SALE_OF_GOODS for VOEC'
- 'BOOK_VALIDATION-023: Invalid incoterm for this shipment'
- 'BOOK_VALIDATION-024: Customs declaration requires country of origin for this service
  when shipped from Norway'
- 'BOOK_VALIDATION-025: The supplied IOSS number is invalid. Should consist of ''IM''
  and 10 digits.'
- 'BOOK_VALIDATION-026: An IOSS number is provided for a recipient country that does
  not qualify for IOSS.'
- 'BOOK_VALIDATION-027: An IOSS number is provided as well as a senders reference.
  This is not supported.'
- 'BOOK_VALIDATION-028: An IOSS number is provided for a nature of transaction other
  than SALE_OF_GOODS.'
- 'BOOK_VALIDATION-029: You cannot use tag numberOfPallets for this product. Add the
  number in the numberOfItems tag.'
- 'BOOK-VALIDATION-030: Limited quantities gross weight is mandatory when shipment
  route involves a boat'
- 'BOOK-VALIDATION-031: Limited quantities gross weight can not be greater than shipment
  total weight'
- 'BOOK-INPUT-047: Pickup point delivery method is only available for specific conditions.'
- 'BOOK-INPUT-055: Dangerous Goods is not supported for given product'
- 'BOOK-INPUT-057: Invalid postal Code'
- 'BOOK-INPUT-059: Invalid input provided. Not able to parse the input successfully.'
- 'BOOK-INPUT-060: Missing booking request'
- 'BOOK-INPUT-061: Maximum 400 characters are allowed in Message For Recipient field.'
- 'BOOK-INPUT-071: Invalid package type for Home Delivery product.'
- 'BOOK-INPUT-073: Invalid package type for Home Delivery product.'
- 'BOOK-INPUT-077: Additional services cannot be requested in combination of both
  old and new way.'
- 'BOOK-INPUT-080: Additional services cannot be requested in this way.'
- 'BOOK-INPUT-091: Invalid length for UN Number.'
- 'BOOK_VALIDATION-009: Booking of this revised service is only supported using your
  main customer number.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'BOOK_VALIDATION-010: Booking of this service is not supported using this main customer
  number.'
- 'code: string'
- 'message: string'
- 'suffixable: boolean'
- 'BOOK-INPUT-080: Additional services cannot be requested in this way, Check proper
  format for XML/JSON.'
- 'BOOK-INPUT-047: Pickup point delivery method is only available for certain countries
  and products.'
- '429 Too Many Requests: Throttle requests to stay within limits.'
- '400 Bad Request: Check the request format and required fields.'
- ILLEGAL_PRODUCT_FOR_COUNTRY
- INVALID_PICKUP_COUNTRY
- INVALID_PRODUCT_ID
- PICKUP_DATE_IN_PAST
- PICKUP_INPUT_ERROR
- PICKUP_INVALID_CARGO_PARCEL_INFORMATION
- PICKUP_INVALID_CHARGEABLE_WEIGHT
- PICKUP_INVALID_DATE
- PICKUP_INVALID_MULTIPLE_WEIGHT
- PICKUP_INVALID_POSTALCODE
- PICKUP_INVALID_TIME
- PICKUP_INVALID_WEIGHT
- PICKUP_MISSING_COUNTRY_CODE
- PICKUP_NEGATIVE_FIELD
- PICKUP_NOT_APPLICABLE_FOR_CUSTOMER
- PICKUP_TIME_IN_PAST
- PICKUP_UNEXPECTED_ERROR
- SPECIFIC_PICKUP_POINT_DETAILS_REQ
- 'BOOK-INPUT-047: Pickup point delivery method is only available for certain products
  and countries.'
- '400: Error in validation of request or error in data structure of request.'
- '417: Missing authentication headers.'
- '500: Unknown error. Error sending data to destination.'
- '400 Bad Request: Check request schema and required fields'
- 400 Unable to handle request for stop delivery order
- 403 Forbidden
- 404 Shipment not found
- '400 BAD_REQUEST: Unable to handle request for stop shipment for SHIPMENT_NUMBER'
- '403 FORBIDDEN: Forbidden request for modify delivery for SHIPMENT_NUMBER'
- '404 NOT_FOUND: No tracking details for query SHIPMENT_NUMBER'
- '400 BAD_REQUEST: Unable to handle request for stop delivery order'
- 403 FORBIDDEN
- '404 NOT_FOUND: Shipment not found'
- '403 FORBIDDEN: Forbidden'
- '400: Unable to handle request for stop delivery order'
- '403: Forbidden request for modify delivery for SHIPMENT_NUMBER'
- '404: No tracking details for query SHIPMENT_NUMBER'
- '403 FORBIDDEN: Access denied'
- '401 - Unauthorized: The Tracking API no longer supports unauthenticated requests.'
- '400: Invalid query'
- '503: Server too busy/ Temporarily blocked due to too many invalid requests'
- '500: Error getting track & trace information'
- '404: No shipments found'
- Maximum 100 shipments can be batch created per request.
- If your endpoint is down, the API will try to send a request two times with 30 minutes
  between.
- If your application does pin the certificate, you will need to download the new
  Let´s Encrypt certificate and update your application configuration accordingly.
- '401 Unauthorized: Either the user is not authorized to access the customer number,
  or not authorized to access the API.'
- 400 Authentication failed. Please set the mybring API login headers (X-MyBring-API-Uid
  and X-MyBring-API-Key) to a valid combination.
- 409 Conflict
- '417: Missing Authentication Headers'
- 'PO_INPUT_001: Must provide valid customer ID'
- 'PO_INPUT_002: Must provide valid purchase order'
- 'PO_INPUT_003: Must provide valid schema version. See developer.bring.com for latest
  schema version'
- 'PO_INPUT_004: Request properties must contain valid datetime'
- 'PO_INPUT_005: Request properties must contain valid locale'
- 'PO_INPUT_006: Request properties must be present'
- 'PO_INPUT_007: Consignment ID is required'
- 'PO_INPUT_008: Must provide valid EventType. See xsd for list of valid types.'
- 'PO_INPUT_009: Must provide valid ISO timestamp for event'
- 'PO_INPUT_010: Purchase order not found. You can not have orderlines to a non-existing
  purchase order.'
- 'PO_INPUT_011: Negative quantity not allowed.'
- 'PO_INPUT_012: Item on transport order does not exist on purchase order. OrderLineId
  and ArticleLineId must match purchase order.'
- 'PO_INPUT_013: Shipping container ID is required'
- 'PO_INPUT_014: A valid container type required for the shipping container and the
  content'
- 'PO_INPUT_015: Content for shipping container is required'
- 'PO_INOUT_016: Content in shipping container requires either consignment ID or shipping
  container ID'
- 'PO_INPUT_017: The request contained invalid content.'
- 'PO_INPUT_018: The request contains input that is not supported.'
- 'PO_INPUT_019: Some required parameters are missing.'
- 'PO_INPUT_020: Must provide valid transport order'
- 'PO_INPUT_021: Article number is required'
- 'PO_INPUT_022: Article number is required'
- 'PO_INPUT_023: Content for article balance is required'
- 'PO_INPUT_024: Attempted to create/insert a purchase order that already existed.
  Maybe wrong updateIndicator'
- 'PO_STATE_001: Purchase order not found'
- 'PO_STATE_002: You must log in to use this endpoint. See developer.bring.com for
  details about login with HTTP-headers.'
- 'PO_STATE_003: Order items for requested purchase order not found'
- 'PO_STATE_004: Access is denied to read this purchaseorder'
- 'PO_STATE_005: Transport order not found'
- '429: Rate limit exceeded'
- '429 Too Many Requests: Rate limit exceeded.'
- 404 Report with specified id not found
- 404 Not Found
auth_info:
  mentioned_objects:
  - Mybring user account
  - API key
  - X-Mybring-API-Uid
  - X-Mybring-API-Key
  - X-Bring-Client-URL
  - Mybring login ID
  - Mybring user's API key
client:
  base_url: https://api.bring.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
