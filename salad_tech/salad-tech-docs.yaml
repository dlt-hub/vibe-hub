resources:
- name: container_groups
  endpoint:
    path: /reference/list_container_groups
    method: GET
- name: organization_data
  endpoint:
    path: /reference/list_gpu_classes
    method: GET
- name: quotas
  endpoint:
    path: /reference/get_quotas
    method: GET
- name: workload_errors
  endpoint:
    path: /reference/get__workload_errors
    method: GET
- name: queues
  endpoint:
    path: /reference/list_queues
    method: GET
- name: recipe_deployments
  endpoint:
    path: /reference/list_recipe_deployments
    method: GET
- name: inference_endpoints
  endpoint:
    path: /reference/list_inference_endpoints
    method: GET
- name: recipes
  endpoint:
    path: /reference/list_recipes
    method: GET
- name: container_groups
  endpoint:
    path: /reference/list_container_groups
    method: GET
- name: organization_data
  endpoint:
    path: /reference/list_gpu_classes
    method: GET
- name: quotas
  endpoint:
    path: /reference/get_quotas
    method: GET
- name: workload_errors
  endpoint:
    path: /reference/get__workload_errors
    method: GET
- name: queues
  endpoint:
    path: /reference/list_queues
    method: GET
- name: recipe_deployments
  endpoint:
    path: /reference/list_recipe_deployments
    method: GET
- name: inference_endpoints
  endpoint:
    path: /reference/list_inference_endpoints
    method: GET
- name: recipes
  endpoint:
    path: /reference/list_recipes
    method: GET
- name: queue_job
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues/{queue_name}/jobs/{queue_job_id}
    method: GET
    data_selector: $ref
    params: {}
- name: quotas
  endpoint:
    path: /organizations/{organization_name}/quotas
    method: GET
    data_selector: $ref
    params: {}
- name: recipe_deployments
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments
    method: GET
    data_selector: $ref
    params: {}
- name: get_queue_job
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues/{queue_name}/jobs/{queue_job_id}
    method: GET
- name: delete_queue_job
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues/{queue_name}/jobs/{queue_job_id}
    method: DELETE
- name: get_quotas
  endpoint:
    path: /organizations/{organization_name}/quotas
    method: GET
- name: list_recipe_deployments
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments
    method: GET
- name: create_recipe_deployment
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments
    method: POST
- name: get_recipe_deployment
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}
    method: GET
- name: update_recipe_deployment
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}
    method: PATCH
- name: delete_recipe_deployment
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}
    method: DELETE
- name: start_deployed_recipe
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}/start
    method: POST
- name: restart_deployed_recipe
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}/restart
    method: POST
- name: stop_deployed_recipe
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}/stop
    method: POST
- name: list_recipe_deployment_instances
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}/instances
    method: GET
- name: list_inference_endpoints
  endpoint:
    path: /organizations/{organization_name}/inference-endpoints
    method: GET
- name: inference_endpoint
  endpoint:
    path: /organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}
    method: GET
- name: create_inference_endpoint_job
  endpoint:
    path: /organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}/jobs
    method: POST
- name: get_inference_endpoint_job
  endpoint:
    path: /organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}/jobs/{inference_endpoint_job_id}
    method: GET
- name: delete_inference_endpoint_job
  endpoint:
    path: /organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}/jobs/{inference_endpoint_job_id}
    method: DELETE
- name: list_gpu_classes
  endpoint:
    path: /organizations/{organization_name}/gpu-classes
    method: GET
- name: list_recipes
  endpoint:
    path: /organizations/{organization_name}/recipes
    method: GET
- name: get_recipe
  endpoint:
    path: /organizations/{organization_name}/recipes/{recipe_name}
    method: GET
- name: CreateContainerGroup
  endpoint:
    method: POST
- name: UpdateContainerGroup
  endpoint:
    method: PUT
- name: CreateQueue
  endpoint:
    method: POST
- name: UpdateQueue
  endpoint:
    method: PUT
- name: QueueJob
  endpoint:
    method: POST
- name: inference_endpoints
  endpoint:
    path: /organizations/{organization_name}/inference-endpoints
    method: GET
    data_selector: inference_endpoints
    params: {}
- name: inference_endpoint
  endpoint:
    path: /organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}
    method: GET
    data_selector: inference_endpoint
    params: {}
- name: inference_endpoint_job
  endpoint:
    path: /organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}/jobs
    method: POST
    data_selector: inference_endpoint_job
    params: {}
- name: inference_endpoint_job_details
  endpoint:
    path: /organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}/jobs/{inference_endpoint_job_id}
    method: GET
    data_selector: inference_endpoint_job_details
    params: {}
- name: delete_inference_endpoint_job
  endpoint:
    path: /organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}/jobs/{inference_endpoint_job_id}
    method: DELETE
    data_selector: delete_inference_endpoint_job
    params: {}
- name: gpu_classes
  endpoint:
    path: /organizations/{organization_name}/gpu-classes
    method: GET
    data_selector: gpu_classes
    params: {}
- name: recipes
  endpoint:
    path: /organizations/{organization_name}/recipes
    method: GET
    data_selector: recipes
    params: {}
- name: recipe
  endpoint:
    path: /organizations/{organization_name}/recipes/{recipe_name}
    method: GET
    data_selector: recipe
    params: {}
- name: ContainerGroupNetworking
  endpoint:
    path: /components/schemas/ContainerGroupNetworking
    method: GET
- name: CreateContainerGroupNetworking
  endpoint:
    path: /components/schemas/CreateContainerGroupNetworking
    method: GET
- name: UpdateContainerGroupNetworking
  endpoint:
    path: /components/schemas/UpdateContainerGroupNetworking
    method: GET
- name: ContainerGroupStartupProbe
  endpoint:
    path: /components/schemas/ContainerGroupStartupProbe
    method: GET
- name: ContainerGroupLivenessProbe
  endpoint:
    path: /components/schemas/ContainerGroupLivenessProbe
    method: GET
- name: ContainerGroupReadinessProbe
  endpoint:
    path: /components/schemas/ContainerGroupReadinessProbe
    method: GET
- name: QueueJob
  endpoint:
    path: /components/schemas/QueueJob
    method: GET
- name: Queue
  endpoint:
    path: /components/schemas/Queue
    method: GET
- name: WorkloadError
  endpoint:
    path: /components/schemas/WorkloadError
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Container
  endpoint:
    path: /services/data/vXX.X/sobjects/Container
    method: GET
- name: CreateContainer
  endpoint:
    path: /services/data/vXX.X/sobjects/CreateContainer
    method: POST
- name: UpdateContainer
  endpoint:
    path: /services/data/vXX.X/sobjects/UpdateContainer
    method: PATCH
- name: inference_endpoint
  endpoint:
    path: /inference/endpoint
    method: GET
    data_selector: items
- name: inference_endpoint_job
  endpoint:
    path: /inference/endpoint/job
    method: GET
    data_selector: items
- name: InferenceEndpointsList
  endpoint:
    path: /inferenceEndpoints
    method: GET
    data_selector: items
- name: InferenceEndpointJob
  endpoint:
    path: /inferenceEndpointJobs
    method: POST
    data_selector: id
- name: CreateContainerGroup
  endpoint:
    path: /path/to/CreateContainerGroup
    method: POST
    data_selector: value
    params: {}
- name: UpdateContainerGroup
  endpoint:
    path: /path/to/UpdateContainerGroup
    method: PATCH
    data_selector: value
    params: {}
- name: CreateRecipeDeployment
  endpoint:
    path: /path/to/CreateRecipeDeployment
    method: POST
    data_selector: value
    params: {}
- name: UpdateRecipeDeployment
  endpoint:
    path: /path/to/UpdateRecipeDeployment
    method: PATCH
    data_selector: value
    params: {}
- name: CreateQueue
  endpoint:
    path: /path/to/CreateQueue
    method: POST
    data_selector: value
    params: {}
- name: UpdateQueue
  endpoint:
    path: /path/to/UpdateQueue
    method: PATCH
    data_selector: value
    params: {}
- name: CreateQueueJob
  endpoint:
    path: /path/to/CreateQueueJob
    method: POST
    data_selector: value
    params: {}
- name: CreateInferenceEndpointJob
  endpoint:
    path: /path/to/CreateInferenceEndpointJob
    method: POST
    data_selector: value
    params: {}
- name: queue
  endpoint:
    path: /organizations/acme-corp/projects/anvil-drop-simulator/queues
    method: GET
    data_selector: items
- name: queue_job
  endpoint:
    path: /organizations/acme-corp/projects/anvil-drop-simulator/queues/{queue_name}/jobs
    method: GET
    data_selector: items
- name: CreateContainerGroup
  endpoint:
    path: /CreateContainerGroup
    method: POST
    data_selector: value
- name: UpdateContainerGroup
  endpoint:
    path: /UpdateContainerGroup
    method: PATCH
    data_selector: value
- name: CreateRecipeDeployment
  endpoint:
    path: /CreateRecipeDeployment
    method: POST
    data_selector: value
- name: UpdateRecipeDeployment
  endpoint:
    path: /UpdateRecipeDeployment
    method: PATCH
    data_selector: value
- name: CreateQueue
  endpoint:
    path: /CreateQueue
    method: POST
    data_selector: value
- name: UpdateQueue
  endpoint:
    path: /UpdateQueue
    method: PATCH
    data_selector: value
- name: CreateQueueJob
  endpoint:
    path: /CreateQueueJob
    method: POST
    data_selector: value
- name: CreateInferenceEndpointJob
  endpoint:
    path: /CreateInferenceEndpointJob
    method: POST
    data_selector: value
- name: ListRecipeDeployments
  endpoint:
    path: /ListRecipeDeployments
    method: GET
    data_selector: items
- name: CreateRecipeDeployment
  endpoint:
    path: /CreateRecipeDeployment
    method: POST
- name: UpdateRecipeDeployment
  endpoint:
    path: /UpdateRecipeDeployment
    method: PATCH
- name: ListInferenceEndpoints
  endpoint:
    path: /ListInferenceEndpoints
    method: GET
    data_selector: items
- name: queue
  endpoint:
    path: /queues
    method: GET
    data_selector: items
- name: queue_job
  endpoint:
    path: /queues/{queue_name}/jobs
    method: GET
    data_selector: items
- name: gpu_classes
  endpoint:
    path: /gpu-classes
    method: GET
    data_selector: items
- name: quotas
  endpoint:
    path: /quotas
    method: GET
    data_selector: items
- name: recipe
  endpoint:
    path: /recipes
    method: GET
    data_selector: items
- name: recipe_deployment
  endpoint:
    path: /recipes/{recipe_id}/deployments
    method: GET
    data_selector: items
- name: container_groups
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers
    method: GET
- name: container_group
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers
    method: POST
- name: container_group
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}
    method: GET
- name: container_group
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}
    method: PATCH
- name: ListRecipeDeployments
  endpoint:
    path: /ListRecipeDeployments
    method: GET
    data_selector: items
- name: CreateRecipeDeployment
  endpoint:
    path: /CreateRecipeDeployment
    method: POST
- name: UpdateRecipeDeployment
  endpoint:
    path: /UpdateRecipeDeployment
    method: PUT
- name: DeleteRecipeDeployment
  endpoint:
    path: /DeleteRecipeDeployment
    method: DELETE
- name: StartRecipeDeployment
  endpoint:
    path: /StartRecipeDeployment
    method: POST
- name: StopRecipeDeployment
  endpoint:
    path: /StopRecipeDeployment
    method: POST
- name: RestartRecipeDeployment
  endpoint:
    path: /RestartRecipeDeployment
    method: POST
- name: ListRecipeDeploymentInstances
  endpoint:
    path: /ListRecipeDeploymentInstances
    method: GET
    data_selector: instances
- name: GetInferenceEndpoint
  endpoint:
    path: /GetInferenceEndpoint
    method: GET
- name: ListInferenceEndpoints
  endpoint:
    path: /ListInferenceEndpoints
    method: GET
    data_selector: items
- name: CreateInferenceEndpointJob
  endpoint:
    path: /CreateInferenceEndpointJob
    method: POST
- name: GetInferenceEndpointJob
  endpoint:
    path: /GetInferenceEndpointJob
    method: GET
- name: DeleteInferenceEndpointJob
  endpoint:
    path: /DeleteInferenceEndpointJob
    method: DELETE
- name: delete_container_group
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}
    method: DELETE
- name: container_groups
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers
    method: GET
    data_selector: response
    params: {}
- name: start_container_group
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/start
    method: POST
- name: stop_container_group
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/stop
    method: POST
- name: container_group
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers
    method: POST
- name: container_group_instances
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/instances
    method: GET
- name: container_group
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}
    method: GET
- name: container_group_instance
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/instances/{container_group_instance_id}
    method: GET
- name: update_container_group
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}
    method: PATCH
- name: reallocate_container_group_instance
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/instances/{container_group_instance_id}/reallocate
    method: POST
- name: recreate_container
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/instances/{container_group_instance_id}/recreate
    method: POST
- name: container_group
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/start
    method: POST
- name: restart_container
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/instances/{container_group_instance_id}/restart
    method: POST
- name: stop_container_group
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/stop
    method: POST
- name: gpu_classes
  endpoint:
    path: /organizations/{organization_name}/gpu-classes
    method: GET
- name: quotas
  endpoint:
    path: /organizations/{organization_name}/quotas
    method: GET
- name: container_group_instances
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/instances
    method: GET
- name: workload_errors
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/errors
    method: GET
- name: container_group_instance
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/instances/{container_group_instance_id}
    method: GET
- name: queues
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues
    method: GET
- name: reallocate_container_group_instance
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/instances/{container_group_instance_id}/reallocate
    method: POST
- name: queues
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues
    method: POST
- name: recreate_container
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/instances/{container_group_instance_id}/recreate
    method: POST
- name: restart_container
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/instances/{container_group_instance_id}/restart
    method: POST
- name: get_queue
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues/{queue_name}
    method: GET
- name: gpu_classes
  endpoint:
    path: /organizations/{organization_name}/gpu-classes
    method: GET
- name: queues
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/queues/{queue_name}
    method: PATCH
- name: quotas
  endpoint:
    path: /organizations/{organization_name}/quotas
    method: GET
- name: delete_queue
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues/{queue_name}
    method: DELETE
- name: workload_errors
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/containers/{container_group_name}/errors
    method: GET
- name: list_jobs_in_a_queue
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues/{queue_name}/jobs
    method: GET
- name: queues
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues
    method: GET
- name: create_queue_job
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/queues/{queue_name}/jobs
    method: POST
- name: queue
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues/{queue_name}
    method: GET
- name: queue_job
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues/{queue_name}/jobs/{queue_job_id}
    method: GET
- name: delete_queue_job
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues/{queue_name}/jobs/{queue_job_id}
    method: DELETE
- name: queues
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues/{queue_name}
    method: PATCH
- name: recipe_deployments
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments
    method: GET
- name: delete_queue
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues/{queue_name}
    method: DELETE
- name: recipe_deployments
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/recipe-deployments
    method: POST
- name: list_jobs_in_a_queue
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues/{queue_name}/jobs
    method: GET
- name: recipe_deployment
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}
    method: GET
- name: create_queue_job
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/queues/{queue_name}/jobs
    method: POST
- name: recipe_deployments
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}
    method: PATCH
- name: queue_job
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues/{queue_name}/jobs/{queue_job_id}
    method: GET
- name: delete_recipe_deployment
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}
    method: DELETE
- name: delete_queue_job
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/queues/{queue_name}/jobs/{queue_job_id}
    method: DELETE
- name: recipe_deployments
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments
    method: GET
- name: start_a_deployed_recipe
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}/start
    method: POST
- name: recipe_deployment
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments
    method: POST
- name: restart_deployed_recipe
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}/restart
    method: POST
- name: stop_deployed_recipe
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}/stop
    method: POST
- name: recipe_deployment
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}
    method: GET
- name: recipe_deployment
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}
    method: PATCH
- name: recipe_deployment_instances
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}/instances
    method: GET
- name: delete_recipe_deployment
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}
    method: DELETE
- name: inference_endpoints
  endpoint:
    path: /organizations/{organization_name}/inference-endpoints
    method: GET
- name: Start a Deployed Recipe
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}/start
    method: POST
- name: inference_endpoints
  endpoint:
    path: /api/public/organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}
    method: GET
- name: restart_deployed_recipe
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}/restart
    method: POST
- name: create_inference_endpoint_job
  endpoint:
    path: /api/public/organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}/jobs
    method: POST
- name: stop_deployed_recipe
  endpoint:
    path: /api/public/organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}/stop
    method: POST
- name: inference_endpoint_job
  endpoint:
    path: /api/public/organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}/jobs/{inference_endpoint_job_id}
    method: GET
- name: recipe_deployment_instances
  endpoint:
    path: /organizations/{organization_name}/projects/{project_name}/recipe-deployments/{recipe_deployment_name}/instances
    method: GET
- name: delete_inference_endpoint_job
  endpoint:
    path: /api/public/organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}/jobs/{inference_endpoint_job_id}
    method: DELETE
- name: recipes
  endpoint:
    path: /organizations/{organization_name}/recipes
    method: GET
- name: get_recipe
  endpoint:
    path: /organizations/{organization_name}/recipes/{recipe_name}
    method: GET
- name: inference_endpoint
  endpoint:
    path: /api/public/organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}
    method: GET
- name: create_inference_endpoint_job
  endpoint:
    path: /api/public/organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}/jobs
    method: POST
- name: inference_endpoint_job
  endpoint:
    path: /api/public/organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}/jobs/{inference_endpoint_job_id}
    method: GET
- name: delete_inference_endpoint_job
  endpoint:
    path: /api/public/organizations/{organization_name}/inference-endpoints/{inference_endpoint_name}/jobs/{inference_endpoint_job_id}
    method: DELETE
- name: recipes
  endpoint:
    path: /organizations/{organization_name}/recipes
    method: GET
- name: recipe
  endpoint:
    path: /organizations/{organization_name}/recipes/{recipe_name}
    method: GET
notes:
- Each API request is authenticated with an API access token that can be accessed
  via the Web Portal.
- When you refresh an API token, the previous token is immediately invalidated and
  will not longer grant API access.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Updates a container group
- Credentials must be included in the header for API access.
- Log in to use your API keys
- Remove a node from a workload and reallocate the workload to a different node
- Creates a new Recipe Deployment
- Requires API key for authentication
- Stops a Deployed Recipe
- Gets a list of inference endpoints that match the paginated query parameters. If
  no paginated query parameters are provided, the full list is returned.
errors:
- Rate limit is tied to an individual API key and set to 240 requests per minute.
- Rate limits to ensure our APIs are responsive as we grow.
- Codes in the 2xx range indicate success.
- Codes in the 4xx range indicate an error that failed given the information provided.
- '404: Not Found'
- '429: Too Many Requests'
- '400: Bad Request'
- '403: Forbidden'
- '202: Accepted'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 400 Bad Request
- 403 Forbidden
- 429 Too Many Requests
auth_info:
  mentioned_objects:
  - organization_name
  - inference_endpoint_name
  - inference_endpoint_job_id
  - recipe_name
  - OauthToken
  - AuthProvider
  - NamedCredential
  - ApiKeyAuth
client:
  base_url: https://api.salad.com/api/public
source_metadata: null
