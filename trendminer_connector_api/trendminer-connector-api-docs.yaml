resources:
- name: version
  endpoint:
    path: /api/version/
    method: GET
    data_selector: ''
    params: {}
- name: database
  endpoint:
    path: /api/database/
    method: GET
    data_selector: ''
    params: {}
- name: tags
  endpoint:
    path: /api/v2/tags/
    method: GET
    data_selector: ''
    params:
      historianName: PoCHistorian
- name: indexvalues
  endpoint:
    path: /api/v2/tags/indexvalues/
    method: GET
    data_selector: ''
    params:
      historianName: PoCHistorian
- name: af
  endpoint:
    path: /af
    method: GET
    data_selector: List[AFAssetNode]
    params:
      databaseName: The name of the AF database to connect to.
- name: assets
  endpoint:
    path: /assets
    method: GET
    data_selector: List[AssetNode]
    params:
      databaseName: The name of the Assets database to connect to.
- name: context_changes
  endpoint:
    path: /context/changes
    method: GET
    data_selector: ContextItemChangeStreamedResponse
    params:
      databaseName: ''
      since: ''
      page: ''
      size: ''
- name: context_fields
  endpoint:
    path: /context/field
    method: GET
    data_selector: FieldPagedResponse
    params:
      databaseName: ''
      page: ''
      size: ''
- name: context_items
  endpoint:
    path: /context/
    method: GET
    data_selector: ContextItemPagedResponse
    params:
      databaseName: ''
      startDate: ''
      endDate: ''
      createdAfter: ''
      page: ''
      size: ''
- name: specific_context_item
  endpoint:
    path: /context/{id}
    method: GET
    data_selector: ContextItem
    params:
      id: ''
      databaseName: ''
- name: context_items_by_ids
  endpoint:
    path: /context/
    method: POST
    data_selector: ContextItemListResponse
    params:
      databaseName: ''
      ids: []
- name: context_types
  endpoint:
    path: /context/type
    method: GET
    data_selector: TypePagedResponse
    params:
      databaseName: ''
      page: ''
      size: ''
- name: context_workflows
  endpoint:
    path: /context/workflow
    method: GET
    data_selector: WorkflowPagedResponse
    params:
      databaseName: ''
      page: ''
      size: ''
- name: event_frames
  endpoint:
    path: /ef
    method: GET
    data_selector: List[[EventFrame]]
    params:
      startDate: ''
      endDate: ''
      databaseName: ''
- name: version
  endpoint:
    path: /version
    method: GET
    data_selector: inline_response_200
    params: {}
- name: provider_capabilities
  endpoint:
    path: /provider
    method: GET
    data_selector: ProviderCapabilities
    params: {}
- name: log_content
  endpoint:
    path: /log
    method: GET
    data_selector: Log file as attachment.
    params: {}
- name: digital_states
  endpoint:
    path: /v2/tags/digitalstates
    method: GET
    data_selector: List[[State]]
    params:
      historianName: ''
      tagName: ''
- name: all_tags
  endpoint:
    path: /v2/tags
    method: GET
    data_selector: List[[TagDetails]]
    params:
      historianName: ''
- name: tag_values_indexing
  endpoint:
    path: /v2/tags/indexvalues
    method: GET
    data_selector: List[[TimeSeriesEntry]]
    params:
      historianName: ''
      tagName: ''
      tagType: ''
      interpolationType: ''
      startDate: ''
      endDate: ''
      numberOfIntervals: ''
- name: last_values
  endpoint:
    path: /v2/tags/lastvalues
    method: POST
    data_selector: List[[Tag]]
    params:
      historianName: ''
      tagRequest: {}
- name: tag_values_plotting
  endpoint:
    path: /v2/tags/plotvalues
    method: GET
    data_selector: List[[TimeSeriesEntry]]
    params:
      historianName: ''
      tagName: ''
      tagType: ''
      interpolationType: ''
      startDate: ''
      endDate: ''
      numberOfIntervals: ''
- name: tag_raw_values
  endpoint:
    path: /v2/tags/rawvalues
    method: GET
    data_selector: List[[TimeSeriesEntry]]
    params:
      historianName: ''
      tagName: ''
      startDate: ''
      endDate: ''
- name: asset
  endpoint:
    path: /af/asset
    method: GET
- name: browse_asset_tree
  endpoint:
    path: /asset/browse
    method: GET
    data_selector: PagedModelAsset
    params: {}
- name: get_asset_by_identifier
  endpoint:
    path: /asset/{identifier}
    method: GET
    data_selector: Asset
    params: {}
- name: get_asset_attributes
  endpoint:
    path: /asset/{identifier}/attribute
    method: GET
    data_selector: PagedModelAsset
    params: {}
- name: get_asset_by_path
  endpoint:
    path: /asset
    method: GET
    data_selector: PagedModelAsset
    params: {}
- name: get_assets_by_paths
  endpoint:
    path: /asset
    method: POST
    data_selector: List[Asset]
    params: {}
- name: get_relatives_for_assets
  endpoint:
    path: /asset/relatives
    method: POST
    data_selector: List[[UUID]]
    params: {}
- name: get_timeseries_data
  endpoint:
    path: /asset/{identifier}/timeseriesdata
    method: GET
    data_selector: AssetTimeSeriesData
    params: {}
- name: search_assets
  endpoint:
    path: /asset/search
    method: GET
    data_selector: PagedModelAsset
    params: {}
- name: search_assets_post
  endpoint:
    path: /asset/search
    method: POST
    data_selector: PagedModelAsset
    params: {}
- name: get_access_rule
  endpoint:
    path: /asset/accessrule
    method: GET
    data_selector: AccessPermissionsModifiedRepresentationModel
    params: {}
- name: create_access_rule
  endpoint:
    path: /asset/{path}/accessrule
    method: POST
    data_selector: AccessRule
    params: {}
- name: delete_access_rule
  endpoint:
    path: /asset/{path}/accessrule/{accessRuleId}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_specific_access_rule
  endpoint:
    path: /asset/{path}/accessrule/{accessRuleId}
    method: GET
    data_selector: AccessRule
    params: {}
- name: get_access_rule_by_path
  endpoint:
    path: /asset/{path}/accessrule
    method: GET
    data_selector: List[AccessRule]
    params: {}
- name: get_inherited_access_rule
  endpoint:
    path: /asset/{path}/accessrule/inherited
    method: GET
    data_selector: List[AccessRule]
    params: {}
- name: update_access_rule
  endpoint:
    path: /asset/{path}/accessrule/{accessRuleId}
    method: PUT
    data_selector: AccessRule
    params: {}
- name: convert_named_path
  endpoint:
    path: /asset/convert/named-path
    method: POST
    data_selector: MappingsV2
    params: {}
- name: convert_identifier
  endpoint:
    path: /asset/convert/identifier
    method: POST
    data_selector: MappingsV2
    params: {}
- name: permissions
  endpoint:
    path: /permissions
    method: POST
    data_selector: GrantedPermissions
- name: node_permission
  endpoint:
    path: /node/permission
    method: POST
    data_selector: GrantedPermissionMap
- name: structure_permission
  endpoint:
    path: /structure/permission
    method: POST
    data_selector: GrantedPermissionMap
- name: browse_structure
  endpoint:
    path: /assets/structure/browse/{path}
    method: GET
    data_selector: PagedModelStructure
- name: convert_named_path
  endpoint:
    path: /assets/convert/named-path
    method: POST
    data_selector: Mappings
- name: convert_identifier
  endpoint:
    path: /assets/convert/identifier
    method: POST
    data_selector: Mappings
- name: export_nodes
  endpoint:
    path: /assets/export
    method: GET
    data_selector: ''
- name: exportable_structure
  endpoint:
    path: /assets/exportable
    method: GET
    data_selector: Boolean
- name: node_external
  endpoint:
    path: /assets/node/external/{externalId}
    method: GET
    data_selector: Node
- name: node_uuid
  endpoint:
    path: /assets/node/{id}
    method: GET
    data_selector: Node
- name: structure_uuid
  endpoint:
    path: /assets/{id}
    method: GET
    data_selector: Structure
- name: browse_assets
  endpoint:
    path: /assets/browse
    method: GET
    data_selector: PagedModelStructure
- name: retrieve_nodes
  endpoint:
    path: /assets/nodes
    method: POST
    data_selector: List[Node]
- name: retrieve_structures
  endpoint:
    path: /assets/structures
    method: POST
    data_selector: List[Structure]
- name: importable_structure
  endpoint:
    path: /assets/importable
    method: GET
    data_selector: Boolean
- name: node_attributes
  endpoint:
    path: /assets/node/{id}/attributes
    method: GET
    data_selector: PagedModelNode
- name: search_structures
  endpoint:
    path: /assets/search
    method: GET
    data_selector: PagedModelStructure
- name: search_structures_post
  endpoint:
    path: /assets/search
    method: POST
    data_selector: PagedModelStructure
- name: access_rule_create
  endpoint:
    path: /assets/{structureId}/accessrule
    method: POST
    data_selector: AccessRule
    params: {}
- name: access_rule_delete
  endpoint:
    path: /assets/{structureId}/accessrule/{accessRuleId}
    method: DELETE
    data_selector: ''
    params: {}
- name: access_rule_get
  endpoint:
    path: /assets/{structureId}/accessrule/{accessRuleId}
    method: GET
    data_selector: AccessRule
    params: {}
- name: access_rule_get_all
  endpoint:
    path: /assets/{structureId}/accessrule
    method: GET
    data_selector: List[AccessRule]
    params: {}
- name: access_rule_get_inherited
  endpoint:
    path: /assets/{structureId}/accessrule/inherited
    method: GET
    data_selector: List[AccessRule]
    params: {}
- name: access_rule_update
  endpoint:
    path: /assets/{structureId}/accessrule/{accessRuleId}
    method: PUT
    data_selector: AccessRule
    params: {}
- name: cache_clear
  endpoint:
    path: /cache/clear
    method: POST
    data_selector: ''
    params: {}
- name: granted_assets_get
  endpoint:
    path: /asset/granted-assets
    method: GET
    data_selector: GrantedAssetPermissionsRepresentationModel
    params: {}
- name: granted_assets_subjects_get
  endpoint:
    path: /asset/granted-assets/subjects
    method: GET
    data_selector: CollectionModelGrantedAssetPermissionsIdRepresentationModel
    params: {}
- name: download_generate
  endpoint:
    path: /download/generate
    method: POST
    data_selector: DataModel
    params: {}
- name: source_create
  endpoint:
    path: /source
    method: POST
    data_selector: Source
    params: {}
- name: source_delete
  endpoint:
    path: /source/{identifier}
    method: DELETE
    data_selector: ''
    params: {}
- name: source_get
  endpoint:
    path: /source/{identifier}
    method: GET
    data_selector: Source
    params: {}
- name: source_list
  endpoint:
    path: /source
    method: GET
    data_selector: PagedModelSource
    params: {}
- name: source_history
  endpoint:
    path: /source/{identifier}/history
    method: GET
    data_selector: PagedModelSyncJob
    params: {}
- name: source_sync_job_get
  endpoint:
    path: /source/{identifier}/history/{syncJobIdentifier}
    method: GET
    data_selector: SyncJob
    params: {}
- name: sync
  endpoint:
    path: /sync
    method: GET
    data_selector: content
    params:
      datasourceId: ''
- name: sync_status
  endpoint:
    path: /sync/{identifier}
    method: GET
    data_selector: SyncJob
    params:
      identifier: ''
- name: sync_job_status_bulk
  endpoint:
    path: /sync/status
    method: POST
    data_selector: List
    params:
      UUID: []
- name: sync_specific_datasource
  endpoint:
    path: /sync
    method: POST
    data_selector: String
    params:
      datasourceId: ''
- name: sync_search_histories
  endpoint:
    path: /sync/search
    method: GET
    data_selector: content
    params:
      query: ''
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: context_item
  endpoint:
    path: /context/item
    method: POST
    data_selector: content
- name: context_item_search_v2
  endpoint:
    path: /context/v2/item/search
    method: POST
    data_selector: content
- name: access_rule
  endpoint:
    path: /type/{typeId}/accessrule
    method: GET
    data_selector: List[[*AccessRule*]]
- name: analytics_aggregations
  endpoint:
    path: /analytics/aggregations/{identifier}
    method: GET
    data_selector: CollectionModelAggregationOperationRepresentationModel
- name: approval
  endpoint:
    path: /data/{contextItemId}/approval
    method: GET
    data_selector: List[[*Approval*]]
- name: asset_type
  endpoint:
    path: /asset-type
    method: GET
    data_selector: AssetType
- name: attachment
  endpoint:
    path: /data/{contextDataId}/attachments
    method: GET
    data_selector: PagedModelAttachment
- name: context_data_reference
  endpoint:
    path: /data/{contextDataId}/reference
    method: GET
    data_selector: PagedModelDataReference
- name: context_item
  endpoint:
    path: /item/{contextDataId}
    method: GET
    data_selector: ContextItem
- name: context_item_v2
  endpoint:
    path: /v2/item/search
    method: POST
    data_selector: TokenizedPageModelContextItem
- name: context_view
  endpoint:
    path: /view/{identifier}/enriched
    method: GET
    data_selector: ContextView
- name: import_file
  endpoint:
    path: /import
    method: GET
    data_selector: PageDataImport
    params: {}
- name: download_file
  endpoint:
    path: /import/{id}/download
    method: GET
    data_selector: DataImport
    params: {}
- name: delete_file
  endpoint:
    path: /import/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_file
  endpoint:
    path: /import/{id}
    method: GET
    data_selector: DataImport
    params: {}
- name: upload_file
  endpoint:
    path: /import
    method: POST
    data_selector: DataImport
    params: {}
- name: check_export_existence
  endpoint:
    path: /export/{identifier}
    method: HEAD
    data_selector: ''
    params: {}
- name: create_export
  endpoint:
    path: /export
    method: POST
    data_selector: TaskSubmissionResult
    params: {}
- name: get_export
  endpoint:
    path: /export/{identifier}
    method: GET
    data_selector: ''
    params: {}
- name: sync_failed_item
  endpoint:
    path: /source/sync/failed/{failedItemId}
    method: POST
    data_selector: ''
    params: {}
- name: get_failed_syncs
  endpoint:
    path: /source/sync/failed
    method: GET
    data_selector: PagedModelFailedEventFrameSynchronization
    params: {}
- name: create_field
  endpoint:
    path: /fields
    method: POST
    data_selector: Field
    params: {}
- name: get_fields
  endpoint:
    path: /fields
    method: GET
    data_selector: PagedModelField
    params: {}
- name: get_field
  endpoint:
    path: /fields/{identifier}
    method: GET
    data_selector: Field
    params: {}
- name: get_audit_trail
  endpoint:
    path: /history/{contextDataId}
    method: GET
    data_selector: PagedModelAuditTrail
    params: {}
- name: get_keywords
  endpoint:
    path: /keywords
    method: GET
    data_selector: PagedModelKeyword
    params: {}
- name: search_keywords
  endpoint:
    path: /keywords/search
    method: GET
    data_selector: PagedModelKeyword
    params: {}
- name: property_key_migration_report
  endpoint:
    path: /migration/property-key/report
    method: GET
    data_selector: records
- name: field_migrated_keys_uniqueness
  endpoint:
    path: /migration/property-key/field-uniqueness
    method: GET
    data_selector: FieldUniquenessRepresentationModel
- name: field_dry_run_results
  endpoint:
    path: /migration/property-key/fields
    method: GET
    data_selector: PagedModelPropertyKeyMigrationFieldData
- name: monitor_dry_run_results
  endpoint:
    path: /migration/property-key/monitors
    method: GET
    data_selector: PagedModelPropertyKeyMigrationMonitorData
- name: migration_status
  endpoint:
    path: /migration/property-key/status
    method: GET
    data_selector: PropertyKeyMigrationStatusRepresentationModel
- name: view_dry_run_results
  endpoint:
    path: /migration/property-key/views
    method: GET
    data_selector: PagedModelPropertyKeyMigrationViewData
- name: generate_public_download
  endpoint:
    path: /download/generate
    method: POST
    data_selector: DataModel
- name: specific_source
  endpoint:
    path: /source/{sourceIdentifier}
    method: GET
    data_selector: Source
- name: search_source
  endpoint:
    path: /source/search
    method: GET
    data_selector: PagedModelSource
- name: start_historical_sync
  endpoint:
    path: /source/{sourceIdentifier}/sync
    method: POST
- name: update_specific_source
  endpoint:
    path: /source/{sourceIdentifier}
    method: PUT
    data_selector: Source
- name: manual_cleanup_of_datasource
  endpoint:
    path: /source/sync/cleanup
    method: POST
- name: re_sync_specific_context_item
  endpoint:
    path: /source/sync/{contextItemIdentifier}
    method: POST
    data_selector: ContextItem
- name: re_sync_list_of_context_items
  endpoint:
    path: /source/sync/filters
    method: POST
- name: cancel_background_sync_job
  endpoint:
    path: /source/sync/background/{syncJobIdentifier}
    method: DELETE
    data_selector: BackgroundSyncJobRepresentationModel
- name: get_background_sync_job
  endpoint:
    path: /source/sync/background/{syncJobIdentifier}
    method: GET
    data_selector: BackgroundSyncJobRepresentationModel
- name: search_background_sync_jobs
  endpoint:
    path: /source/sync/background
    method: GET
    data_selector: PagedModelBackgroundSyncJobRepresentationModel
- name: update_background_sync_job_status
  endpoint:
    path: /source/sync/background/{syncJobIdentifier}
    method: PUT
    data_selector: BackgroundSyncJobRepresentationModel
- name: triggers
  endpoint:
    path: /type/{typeId}/triggers
    method: GET
- name: context data types
  endpoint:
    path: /type
    method: GET
- name: workflows
  endpoint:
    path: /workflow
    method: GET
- name: index_data
  endpoint:
    path: /data/index
    method: GET
    data_selector: results
- name: last_value
  endpoint:
    path: /data/last-value
    method: GET
    data_selector: result
- name: interpolated_data
  endpoint:
    path: /interpolatedData
    method: POST
    data_selector: result
- name: paged_interpolated_data
  endpoint:
    path: /interpolatedData/paged
    method: POST
    data_selector: result
- name: index_check
  endpoint:
    path: /index/check
    method: POST
    data_selector: result
- name: delete_index_data
  endpoint:
    path: /index/{id}
    method: DELETE
    data_selector: result
- name: index_overview
  endpoint:
    path: /index
    method: GET
    data_selector: results
- name: index_details
  endpoint:
    path: /index/{id}
    method: GET
    data_selector: result
- name: last_indexed_point
  endpoint:
    path: /index/{id}/last-indexed-point
    method: GET
    data_selector: result
- name: repair_index_overview
  endpoint:
    path: /index/repair/progress
    method: GET
    data_selector: result
- name: repair_index_check
  endpoint:
    path: /index/repair/status
    method: GET
    data_selector: result
- name: delete_index_data_by_tag_name
  endpoint:
    path: /indexing/byName
    method: DELETE
    params:
      tagName: ''
- name: get_indexed_periods
  endpoint:
    path: /indexing/byName/periods
    method: GET
    params:
      tagNames: ''
- name: get_indexing_status_by_tag_name
  endpoint:
    path: /indexing/byName/newStatus/
    method: POST
    params:
      IndexingStatusRequest: ''
- name: get_indexing_status_by_tag_name_legacy
  endpoint:
    path: /indexing/byName/status/
    method: POST
    params:
      LegacyIndexingStatusRequest: ''
- name: get_search_period
  endpoint:
    path: /indexing/byName/search-period
    method: GET
    params:
      tagNames: ''
      interpolationTypes: ''
- name: get_simplified_indexing_status_by_tag_name
  endpoint:
    path: /indexing/byName
    method: GET
    params:
      tagName: ''
- name: trigger_indexing_by_tag_name
  endpoint:
    path: /indexing/byName
    method: POST
    params:
      tagName: ''
- name: generate_download_link
  endpoint:
    path: /download/generate
    method: POST
    params:
      LinkModel: ''
- name: search_request_export
  endpoint:
    path: /search-requests/{searchRequestId}/export/{exportId}/download
    method: GET
    data_selector: ''
    params: {}
- name: export_results_of_search_request
  endpoint:
    path: /search-requests/{searchRequestId}/export
    method: POST
    data_selector: ''
    params: {}
- name: get_search_request_binning_sorting_options
  endpoint:
    path: /search-requests/{searchRequestId}/binningOptions
    method: GET
    data_selector: ''
    params: {}
- name: get_bins_for_a_search_request
  endpoint:
    path: /search-requests/{searchRequestId}/bins
    method: GET
    data_selector: ''
    params: {}
- name: get_search_request
  endpoint:
    path: /search-requests/{searchRequestId}
    method: GET
    data_selector: ''
    params: {}
- name: get_search_results
  endpoint:
    path: /search-requests/{searchRequestId}/results
    method: GET
    data_selector: ''
    params: {}
- name: highlight_search_request
  endpoint:
    path: /search-requests/{searchRequestId}/highlights
    method: POST
    data_selector: ''
    params: {}
- name: refinement_search_request
  endpoint:
    path: /search-requests/{searchRequestId}/refinementOptions
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_refinements_for_a_search_request
  endpoint:
    path: /search-requests/{searchRequestId}/refinements
    method: GET
    data_selector: ''
    params: {}
- name: perform_an_area_search_search
  endpoint:
    path: /areasearch/newSearch
    method: POST
    data_selector: ''
    params: {}
- name: perform_a_context_item_search
  endpoint:
    path: /contextitemsearch/search
    method: POST
    data_selector: ''
    params: {}
- name: detect_fingerprint_deviations
  endpoint:
    path: /fingerprintsearch/earlywarning
    method: POST
    data_selector: ''
    params: {}
- name: perform_a_fingerprint_search
  endpoint:
    path: /fingerprintsearch/newSearch
    method: POST
    data_selector: ''
    params: {}
- name: perform_a_similarity_search
  endpoint:
    path: /similaritysearch/newSearch
    method: POST
    data_selector: ''
    params: {}
- name: perform_a_step_search
  endpoint:
    path: /stepsearch/newSearch
    method: POST
    data_selector: ''
    params: {}
- name: perform_a_value_based_search
  endpoint:
    path: /valuebasedsearch/newSearch
    method: POST
    data_selector: ''
    params: {}
- name: search_on_index_data
  endpoint:
    path: /search
    method: POST
    data_selector: ''
    params: {}
- name: search_on_index_data_2
  endpoint:
    path: /search-requests
    method: POST
    data_selector: ''
    params: {}
- name: check_existence_search_request_export
  endpoint:
    path: /search-requests/{searchRequestId}/export/{exportId}/download
    method: HEAD
    data_selector: ''
    params: {}
- name: update_and_trigger_calculations
  endpoint:
    path: /search-requests/{searchRequestId}/calculations
    method: POST
    data_selector: ''
    params: {}
- name: update_refinements_request
  endpoint:
    path: /search-requests/{searchRequestId}/refinements
    method: PUT
    data_selector: ''
    params: {}
- name: asset
  endpoint:
    path: /datasources/{id}/assets/{assetId}
    method: GET
    data_selector: AssetRepresentation
    params: {}
- name: assets_by_ids
  endpoint:
    path: /datasources/{id}/assets
    method: POST
    data_selector: List[AssetRepresentation]
    params: {}
- name: root_assets
  endpoint:
    path: /datasources/{id}/assets
    method: GET
    data_selector: List[AssetRepresentation]
    params: {}
- name: configuration_items
  endpoint:
    path: /configurations
    method: GET
    data_selector: PagedModelConfigurationItemRepresentation
    params: {}
- name: configuration_item
  endpoint:
    path: /configurations/{name}
    method: GET
    data_selector: ConfigurationItemRepresentation
    params: {}
- name: update_configuration_item
  endpoint:
    path: /configurations/{name}
    method: PUT
    data_selector: ConfigurationItemRepresentation
    params: {}
- name: connectors
  endpoint:
    path: /connectors
    method: GET
    data_selector: PagedModelConnectorRepresentation
    params: {}
- name: connector
  endpoint:
    path: /connectors/{id}
    method: GET
    data_selector: ConnectorRepresentation
    params: {}
- name: connector_version
  endpoint:
    path: /connectors/{id}/version
    method: GET
    data_selector: VersionInfo
    params: {}
- name: datasources_for_connector
  endpoint:
    path: /connectors/datasources
    method: GET
    data_selector: PagedModelDatasourceRepresentation
    params: {}
- name: context_changes
  endpoint:
    path: /datasources/{id}/context/changes
    method: GET
    data_selector: CursorPagedResourcesContextChange
    params: {}
- name: context_fields
  endpoint:
    path: /datasources/{id}/context/field
    method: GET
    data_selector: PagedModelFieldRepresentation
    params: {}
- name: context_item
  endpoint:
    path: /datasources/{id}/context/{contextItemId}
    method: GET
    data_selector: ContextItemRepresentation
    params: {}
- name: context_items
  endpoint:
    path: /datasources/{id}/context
    method: GET
    data_selector: PagedModelContextItemRepresentation
    params: {}
- name: context_types
  endpoint:
    path: /datasources/{id}/context/type
    method: GET
    data_selector: PagedModelContextTypeRepresentation
    params: {}
- name: context_workflows
  endpoint:
    path: /datasources/{id}/context/workflow
    method: GET
    data_selector: PagedModelWorkflowRepresentation
    params: {}
- name: datasource
  endpoint:
    path: /datasources
    method: GET
- name: imported_time_series
  endpoint:
    path: /imported/timeseries
    method: GET
- name: legacy_time_series
  endpoint:
    path: /legacy-timeseries
    method: GET
- name: providers
  endpoint:
    path: /providers
    method: GET
- name: basic_search
  endpoint:
    path: /timeseries/basicsearch
    method: POST
    data_selector: CollectionModelTimeSeriesDefinitionRepresentation
- name: advanced_search
  endpoint:
    path: /timeseries/advancedsearch
    method: POST
    data_selector: CollectionModelTimeSeriesDefinitionRepresentation
- name: search_by_name_and_description
  endpoint:
    path: /timeseries/advanced
    method: GET
    data_selector: PagedModelTimeSeriesDefinitionRepresentation
- name: check_accessibility
  endpoint:
    path: /timeseries/{id}/accessibility
    method: GET
    data_selector: String
- name: create_time_series_definition
  endpoint:
    path: /timeseries
    method: POST
    data_selector: TimeSeriesDefinitionRepresentation
- name: delete_time_series_definitions
  endpoint:
    path: /timeseries/{ids}
    method: DELETE
    data_selector: ''
- name: get_value_mapping
  endpoint:
    path: /timeseries/{id}/valuemapping
    method: GET
    data_selector: TimeSeriesValueMappingRepresesentation
- name: get_time_series_definition
  endpoint:
    path: /timeseries/{id}
    method: GET
    data_selector: TimeSeriesDefinitionRepresentation
- name: get_time_series_definition_with_dependency_tree
  endpoint:
    path: /timeseries/{id}/dependency-tree
    method: GET
    data_selector: TimeSeriesDependencyTreeDefinitionRepresentation
- name: get_time_series_definition_by_external_id
  endpoint:
    path: /timeseries/dependency-tree
    method: GET
    data_selector: TimeSeriesDependencyTreeDefinitionRepresentation
- name: get_time_series_definitions_relations
  endpoint:
    path: /timeseries/relations
    method: GET
    data_selector: PagedModelTimeSeriesRelationRepresentation
- name: get_all_digital_states
  endpoint:
    path: /timeseries/{id}/valuesmapping
    method: GET
    data_selector: PagedModelTimeSeriesValueMappingRepresesentation
- name: search_digital_states
  endpoint:
    path: /timeseries/{id}/valuesmapping/search
    method: POST
    data_selector: PagedModelTimeSeriesValueMappingRepresesentation
- name: update_time_series_definition
  endpoint:
    path: /timeseries/{id}
    method: PUT
    data_selector: TimeSeriesDefinitionRepresentation
- name: update_time_series_definition_by_datasource_id
  endpoint:
    path: /timeseries
    method: PUT
    data_selector: TimeSeriesDefinitionRepresentation
- name: AccessRules
  endpoint:
    path: /saveditem/{savedItemId}/accessrule
    method: POST
- name: DeleteAccessRule
  endpoint:
    path: /saveditem/{savedItemId}/accessrule/{accessRuleId}
    method: DELETE
- name: GetAccessRules
  endpoint:
    path: /saveditem/{savedItemId}/accessrule
    method: GET
- name: Permissions
  endpoint:
    path: /permissions
    method: GET
- name: Preferences
  endpoint:
    path: /preferences
    method: GET
- name: SavedItemTypes
  endpoint:
    path: /saveditemtype
    method: GET
- name: browse_saved_items
  endpoint:
    path: /saveditem/browse
    method: GET
    data_selector: PagedModelSavedItemResource
- name: copy_saved_item
  endpoint:
    path: /saveditem/{id}/copy
    method: POST
    data_selector: SavedItemResource
- name: create_saved_item
  endpoint:
    path: /saveditem
    method: POST
    data_selector: SavedItemResource
- name: delete_saved_item
  endpoint:
    path: /saveditem/{id}
    method: DELETE
    data_selector: DeletedItemsResource
- name: retrieve_saved_item
  endpoint:
    path: /saveditem/{id}
    method: GET
    data_selector: SavedItemResource
- name: move_saved_item
  endpoint:
    path: /saveditem/{id}/move
    method: PUT
    data_selector: Object
- name: patch_saved_item
  endpoint:
    path: /saveditem/{id}
    method: PATCH
    data_selector: SavedItemResource
- name: search_saved_items
  endpoint:
    path: /saveditem/search
    method: GET
    data_selector: PagedModelSavedItemResource
- name: update_saved_item
  endpoint:
    path: /saveditem/{id}
    method: PUT
    data_selector: SavedItemResource
- name: create_demo_saved_items
  endpoint:
    path: /saveditem/demo
    method: POST
    data_selector: Object
- name: export_saved_items
  endpoint:
    path: /export
    method: GET
    data_selector: Object
- name: retrieve_import_results
  endpoint:
    path: /import/result
    method: GET
    data_selector: ImportResult
- name: import_saved_items
  endpoint:
    path: /import
    method: POST
    data_selector: ImportResult
- name: create_session
  endpoint:
    path: /sessions
    method: POST
    data_selector: PreferenceResource
- name: delete_session
  endpoint:
    path: /sessions/{identifier}
    method: DELETE
    data_selector: Object
- name: retrieve_session
  endpoint:
    path: /sessions/{identifier}
    method: GET
    data_selector: PreferenceResource
- name: get_session_by_viewId
  endpoint:
    path: /sessions
    method: GET
    data_selector: PreferenceResource
- name: source
  endpoint:
    path: /source
    method: GET
    data_selector: sources
    params: {}
- name: sync
  endpoint:
    path: /sync
    method: GET
    data_selector: syncHistory
    params: {}
- name: nodes
  endpoint:
    path: /assets/nodes
    method: POST
- name: convert_named_path
  endpoint:
    path: /assets/convert/named-path
    method: POST
- name: convert_identifier
  endpoint:
    path: /assets/convert/identifier
    method: POST
- name: get_asset_by_path
  endpoint:
    path: /asset
    method: GET
- name: search_assets
  endpoint:
    path: /asset/search
    method: GET
- name: get_relatives_by_path
  endpoint:
    path: /asset/relatives
    method: POST
- name: get_access_rule
  endpoint:
    path: /asset/{path}/accessrule
    method: GET
- name: create_access_rule
  endpoint:
    path: /asset/{path}/accessrule
    method: POST
- name: get_sync_status
  endpoint:
    path: /sync/{identifier}
    method: GET
- name: cancel_sync
  endpoint:
    path: /sync/{identifier}
    method: DELETE
- name: search_sync_history
  endpoint:
    path: /sync/search
    method: GET
- name: node
  endpoint:
    path: /assets/node/{id}
    method: GET
    data_selector: Node
- name: attributes
  endpoint:
    path: /assets/node/{id}/attributes
    method: GET
    data_selector: PagedModelNode
- name: exportable
  endpoint:
    path: /assets/exportable
    method: GET
    data_selector: boolean
- name: importable
  endpoint:
    path: /assets/importable
    method: GET
    data_selector: boolean
- name: SourceSyncJob
  endpoint:
    path: /sourceSyncJob
    method: GET
- name: SyncJob
  endpoint:
    path: /syncJob
    method: GET
notes:
- A new token needs to be fetched when the token expires after 5 minutes.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- All requests to the web API require authentication.
- All requests require authentication using a Bearer access token.
- The API requires OAuth2 authentication.
errors:
- '401 Unauthorized: AccessRule'
- '404: The resource was not found'
- '400: Validation failed'
- '200: OK'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your authentication credentials'
- '404 EntityModel(s) not found!: Verify the identifiers provided'
- '400 Validation failed: Check the request format and parameters'
- 401 Unauthorized
- 404 Resource(s) not found!
- 400 Validation failed
- 403 Forbidden
- 404 Resource Not Found
- 400 Bad Request
- '403 Forbidden! : Check permissions for the requested operation'
- '404 EntityModel(s) not found! : Ensure the identifier is correct'
- '400 Validation failed : Check the request body for required fields'
- '401 Unauthorized: Access token is invalid or expired.'
- '404: Resource not found.'
- '400: Validation failed.'
- '401 Unauthorized: Recheck your credentials or token expiration'
- '404 Not Found: The requested node does not exist'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://tm-connector-ds-poc.azure-api.net
source_metadata: null
