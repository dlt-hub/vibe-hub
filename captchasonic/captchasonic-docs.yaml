resources:
- name: createTask
  endpoint:
    path: /createTask
    method: POST
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: task
    params: {}
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: answers
    params: {}
- name: create_task
  endpoint:
    path: /createTask
    method: POST
    data_selector: solution
    params: {}
- name: createTask
  endpoint:
    path: /createTask
    method: POST
- name: createTask
  endpoint:
    path: /createTask
    method: POST
- name: create_task
  endpoint:
    path: /createTask
    method: POST
- name: meta
  endpoint:
    path: /response/meta
    method: GET
    data_selector: meta
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: create_task
  endpoint:
    path: /createTask
    method: POST
    data_selector: result
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: createTask
  endpoint:
    path: /createTask
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: answers
    params: {}
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: answers
    params: {}
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: solution
    params: {}
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: ''
    params: {}
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: null
    params: {}
- name: create_task
  endpoint:
    path: /createTask
    method: POST
- name: response
  endpoint:
    path: /response
    method: GET
    data_selector: answers
    params: {}
- name: response
  endpoint:
    path: /response
    method: GET
    data_selector: answers
    params: {}
- name: ocr_image
  endpoint:
    path: /mtcv1/client/iframe.html
    method: GET
    data_selector: task
    params:
      apiKey: sonic_1d92493705564c40917b82534985f15905eb
- name: create_task
  endpoint:
    path: /createTask
    method: POST
    data_selector: result
    params: {}
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: result
- name: createTask
  endpoint:
    path: /createTask
    method: POST
- name: create_task
  endpoint:
    path: /createTask
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: result
- name: create_task
  endpoint:
    path: /createTask
    method: POST
    data_selector: task
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: response
  endpoint:
    path: /response
    method: GET
    data_selector: answers
    params: {}
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: ''
    params: {}
- name: create_task
  endpoint:
    path: /createTask
    method: POST
    data_selector: result
- name: create_task
  endpoint:
    path: /createTask
    method: POST
- name: create_task
  endpoint:
    path: /createTask
    method: POST
    data_selector: data
- name: response
  endpoint:
    path: /response
    method: GET
    data_selector: answers
- name: create_task
  endpoint:
    path: /createTask
    method: POST
    data_selector: result
    params: {}
- name: create_task
  endpoint:
    path: /createTask
    method: POST
    data_selector: response
    params: {}
- name: create_task
  endpoint:
    path: /createTask
    method: POST
    data_selector: null
    params: {}
- name: tiktok_whirl
  endpoint:
    path: /recognition/tiktok_whirl
    method: GET
- name: createTask
  endpoint:
    path: /createTask
    method: POST
- name: tiktok_whirl
  endpoint:
    path: /tiktok_whirl
    method: GET
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: taskId
- name: getTaskResult
  endpoint:
    path: /getTaskResult
    method: POST
    data_selector: solution
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: taskId
- name: getTaskResult
  endpoint:
    path: /getTaskResult
    method: POST
    data_selector: solution
- name: task
  endpoint:
    path: /createTask
    method: POST
    data_selector: result
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: taskId
    params: {}
- name: getTaskResult
  endpoint:
    path: /getTaskResult
    method: POST
    data_selector: solution
    params: {}
- name: createTask
  endpoint:
    path: /createTask
    method: POST
- name: create_task
  endpoint:
    path: /createTask
    method: POST
    data_selector: taskId
- name: get_task_result
  endpoint:
    path: /getTaskResult
    method: POST
    data_selector: solution
- name: createTask
  endpoint:
    path: /createTask
    method: POST
    data_selector: taskId
    params: {}
- name: getTaskResult
  endpoint:
    path: /getTaskResult
    method: POST
    data_selector: solution
    params: {}
- name: create_task
  endpoint:
    path: /createTask
    method: POST
    data_selector: taskId
    params: {}
- name: get_task_result
  endpoint:
    path: /getTaskResult
    method: POST
    data_selector: solution
    params: {}
- name: getTaskResult
  endpoint:
    path: /getTaskResult
    method: GET
    data_selector: taskId
- name: create_task
  endpoint:
    path: /createTask
    method: POST
    data_selector: taskId
- name: get_task_result
  endpoint:
    path: /getTaskResult
    method: POST
    data_selector: solution
- name: reportAccuracy
  endpoint:
    path: /reportAccuracy
    method: POST
    data_selector: meta.data
    params: {}
- name: check_balance
  endpoint:
    path: /balance
    method: GET
    data_selector: balance
    params:
      apiKey: YOUR API KEY.
- name: create_task
  endpoint:
    path: /createTask
    method: POST
    data_selector: taskId
- name: get_task_result
  endpoint:
    path: /getTaskResult
    method: POST
    data_selector: solution
- name: getTaskResult
  endpoint:
    path: /getTaskResult
    method: GET
    data_selector: taskId
- name: reportAccuracy
  endpoint:
    path: /reportAccuracy
    method: POST
    data_selector: meta.data
- name: check_balance
  endpoint:
    path: /balance
    method: GET
    data_selector: balance
    params:
      apiKey: YOUR API KEY
notes:
- Requires an API key for authentication.
- Requires an apiKey for authentication
- Payload requires apiKey and task details
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Payload requires apiKey and task parameters.
- Uses an API key for authentication.
- The API provides a response with a code and a structure containing answers and meta
  information.
- Uses REST API
- API key is required for authentication.
- 'Last updated: Sep 11, 2025'
- This task type requires a proxy. The proxy's IP should ideally be in the same region
  as the target website's server for the best success rate.
- Uses API key for authentication
- Proxy is Required
- Must submit all fields from the solution object
- Task type is proxyless, no proxy needed.
- Copy your API key from the CaptchaSonic dashboard and paste it as the default API
  key.
- This task type requires a proxy.
- Proxy's IP should ideally be in the same region as the target website's server for
  the best success rate.
- CaptchaSonic uses a token-based pricing model, starting at $0.02 per 1,000 tokens.
- Proxy is Required — the proxy's IP must be used for both the solving task and subsequent
  requests.
- This metadata helps track accuracy, refine task performance, and enhance system
  reliability.
- Proxyless task type — no need to provide a proxy.
- CaptchaSonic provides its CAPTCHA recognition services for legitimate and lawful
  purposes only.
- We operate in full compliance with the DMCA and other applicable laws and respond
  promptly to all valid claims of infringement or abuse.
- We do not sell your personal information.
- We may share your information only in the following limited circumstances.
- Users need to obtain an API key from the CaptchaSonic dashboard.
- We need to extract the meta.data from the response body to complete a feedback request.
- CaptchaSonic maintains a zero-tolerance policy for the use of our services for any
  illegal, fraudulent, or malicious purposes.
- You are responsible for maintaining the confidentiality of your API key and account
  credentials.
- You agree not to use our services for any unlawful, malicious, or abusive purpose.
errors:
- 'HTTP error! Status: {response.status}'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check API key'
- 'Error creating task: Check your API key or parameters.'
- 'Task failed: Check the error description for more details.'
- 'Invalid API key: Check your API key and try again'
- 'Rate limit exceeded: Reduce the frequency of your requests'
- 'Error creating task: {res.text}'
- 'Task failed: {resp_json.get(''errorDescription'')}'
- 'Unknown status: {status}, response: {resp_json}'
- 'Error creating task: Check your API key and parameters.'
- 'Error getting result: Ensure taskId is valid.'
- 'code: 200: The request was successfully processed.'
- '401 Unauthorized: Invalid or missing API key.'
- '403 Forbidden: Access denied due to insufficient permissions.'
- '429 Too Many Requests: Rate limit exceeded.'
- '500 Internal Server Error: An error occurred on the server.'
- 'Error creating task: Check API key or parameters'
- 'Task failed: Check error description in response'
- If required to do so by law or in response to valid requests by public authorities.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.captchasonic.com
  headers:
    Content-Type: application/json
source_metadata: null
