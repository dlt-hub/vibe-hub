resources:
- name: styled
  endpoint:
    path: /api/styled
    method: GET
    data_selector: components
    params: {}
- name: createGlobalStyle
  endpoint:
    path: /api/createGlobalStyle
    method: GET
    data_selector: globalStyles
    params: {}
notes:
- The `withComponent` API was replaced by 'as' prop in styled-components v4, and fully-removed
  in v6.
- Theming support is available through ThemeProvider.
- Contributions and suggestions are always welcome!
- node >= 14 needed
- now using `stylis` v4 (if using `stylis-plugin-rtl` you'll need to upgrade to the
  newer version)
- styled-components now provides its own types; if you installed `@types/styled-components`
  in the past, you'll want to remove it
- dropped `$as` and `$forwardedAs` props (use `as` or `forwardedAs`)
- dropped automatic prop filtering; use transient props (`$` prefix) for stuff you
  don't want to be passed to child component / HTML
- dropped deprecated `withComponent` API (87f511a228e5b13b1ff70a416409e0705e5bf456);
  use "as" prop instead
- Highly recommended to use the Babel plugin for better performance.
- The CSS rules are automatically vendor prefixed.
- This is a web-specific API and you won't be able to use it in react-native.
- styled-components supports concurrent server side rendering, with stylesheet rehydration.
- This functionality was removed in v6.1 due to lack of usage and unnecessary bloat
  for other consumers.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Minimum Node support raised to v16+
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: https://unpkg.com/styled-components/dist/styled-components.min.js
source_metadata: null
