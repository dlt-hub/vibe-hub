resources:
- name: Account information
  endpoint:
    path: /reference/account-info
    method: GET
- name: Balances
  endpoint:
    path: /reference/balances
    method: GET
- name: Transactions
  endpoint:
    path: /reference/transactions
    method: GET
- name: Investments
  endpoint:
    path: /reference/investments
    method: GET
- name: Customers
  endpoint:
    path: /reference/customers
    method: GET
- name: Payments
  endpoint:
    path: /reference/payments
    method: GET
- name: Statements
  endpoint:
    path: /reference/statements
    method: GET
- name: accounts_info
  endpoint:
    path: /accounts-info/v2/mikomo
    method: GET
    data_selector: accounts
    params: {}
- name: accounts
  endpoint:
    path: /accounts-info/v2/mikomo
    method: GET
    data_selector: accounts
- name: account_information
  endpoint:
    path: /accounts-info/v2/{providerId}
    method: GET
    data_selector: depositAccount
    params: {}
- name: payment_information
  endpoint:
    path: /payments/v2/{providerId}/{accountId}/payment-networks
    method: GET
    data_selector: paymentNetworks
    params: {}
- name: customer_info
  endpoint:
    path: /customers/v2/{providerId}/current
    method: GET
    data_selector: customer
    params: {}
- name: account_information
  endpoint:
    path: /accounts-info/v2/{providerId}
    method: GET
    data_selector: depositAccount
    params: {}
- name: account_holder_info
  endpoint:
    path: /contacts/v2/{providerId}/{accountId}
    method: GET
    data_selector: customer
    params: {}
- name: accounts
  endpoint:
    path: /accounts/v2/{providerId}
    method: GET
- name: transactions
  endpoint:
    path: /transactions/v2/{providerId}/{accountId}
    method: GET
- name: Mikomo
  endpoint:
    path: /providers/mikomo
    method: GET
    data_selector: supportedProducts
    params: {}
- name: accounts_info
  endpoint:
    path: /accounts-info/{version}/{providerId}
    method: GET
    data_selector: accounts
    params: {}
- name: balances
  endpoint:
    path: /balances/{version}/{providerId}
    method: GET
    data_selector: accounts
    params: {}
- name: transactions
  endpoint:
    path: /transactions/{version}/{providerId}/{accountId}
    method: GET
    data_selector: transactions
- name: accounts
  endpoint:
    path: /accounts/{version}/{providerId}
    method: GET
    data_selector: accounts
- name: taxlots
  endpoint:
    path: /taxlots/{version}/{providerId}/{accountId}/{holdingId}
    method: GET
- name: customer-info
  endpoint:
    path: /customers/{version}/{providerId}/current
    method: GET
- name: account-holder
  endpoint:
    path: /contacts/{version}/{providerId}/{accountId}
    method: GET
- name: payments
  endpoint:
    path: /payments/{version}/{providerId}/{accountId}/payment-networks
    method: GET
- name: statement-list
  endpoint:
    path: /statements/{version}/{providerId}/{accountId}
    method: GET
- name: statements
  endpoint:
    path: /statements/{version}/{providerId}/{accountId}/{statementId}
    method: GET
- name: tax_forms_search
  endpoint:
    path: /tax-forms/{version}/{providerId}
    method: GET
    data_selector: statements
    params:
      version: v2
      providerId: ''
- name: get_tax_form
  endpoint:
    path: /tax-forms/{version}/{providerId}/{taxFormId}
    method: GET
    data_selector: document
    params:
      version: v2
      providerId: ''
      taxFormId: ''
- name: lineItem
  endpoint:
    path: /lineItems
    method: GET
    data_selector: records
    params: {}
- name: loanAccount
  endpoint:
    path: /loanAccounts
    method: GET
    data_selector: records
    params: {}
- name: loanBalance
  endpoint:
    path: /loanBalances
    method: GET
    data_selector: records
    params: {}
- name: loanTransaction
  endpoint:
    path: /loanTransactions
    method: GET
    data_selector: records
    params: {}
- name: locAccount
  endpoint:
    path: /locAccounts
    method: GET
    data_selector: records
    params: {}
- name: locBalance
  endpoint:
    path: /locBalances
    method: GET
    data_selector: records
    params: {}
- name: locTransaction
  endpoint:
    path: /locTransactions
    method: GET
    data_selector: records
    params: {}
- name: rental_income_statement
  endpoint:
    path: /components/schemas/RentalIncomeStatement
    method: GET
- name: royalty_income_statement
  endpoint:
    path: /components/schemas/RoyaltyIncomeStatement
    method: GET
- name: tax_data
  endpoint:
    path: /components/schemas/TaxData
    method: GET
- name: Tax1065K1
  endpoint:
    path: '#/components/schemas/Tax1065K1'
    method: GET
- name: Tax1095A
  endpoint:
    path: '#/components/schemas/Tax1095A'
    method: GET
- name: Tax1095B
  endpoint:
    path: '#/components/schemas/Tax1095B'
    method: GET
- name: Tax1095C
  endpoint:
    path: '#/components/schemas/Tax1095C'
    method: GET
- name: Tax1097Btc
  endpoint:
    path: '#/components/schemas/Tax1097Btc'
    method: GET
- name: Tax1098
  endpoint:
    path: '#/components/schemas/Tax1098'
    method: GET
- name: Tax1098C
  endpoint:
    path: '#/components/schemas/Tax1098C'
    method: GET
- name: Tax1098E
  endpoint:
    path: '#/components/schemas/Tax1098E'
    method: GET
- name: Tax1098Ma
  endpoint:
    path: '#/components/schemas/Tax1098Ma'
    method: GET
- name: Tax1098Q
  endpoint:
    path: '#/components/schemas/Tax1098Q'
    method: GET
- name: Tax1098T
  endpoint:
    path: '#/components/schemas/Tax1098T'
    method: GET
- name: Tax1099A
  endpoint:
    path: '#/components/schemas/Tax1099A'
    method: GET
- name: Tax1099B
  endpoint:
    path: '#/components/schemas/Tax1099B'
    method: GET
- name: Tax1099C
  endpoint:
    path: '#/components/schemas/Tax1099C'
    method: GET
- name: Tax1099Cap
  endpoint:
    path: '#/components/schemas/Tax1099Cap'
    method: GET
- name: Tax1099ConsolidatedStatement
  endpoint:
    path: '#/components/schemas/Tax1099ConsolidatedStatement'
    method: GET
- name: Tax1099Div
  endpoint:
    path: '#/components/schemas/Tax1099Div'
    method: GET
- name: Tax1099G
  endpoint:
    path: '#/components/schemas/Tax1099G'
    method: GET
- name: Tax1099H
  endpoint:
    path: '#/components/schemas/Tax1099H'
    method: GET
- name: Tax1099Int
  endpoint:
    path: '#/components/schemas/Tax1099Int'
    method: GET
- name: Tax1099K
  endpoint:
    path: '#/components/schemas/Tax1099K'
    method: GET
- name: Tax1099Ls
  endpoint:
    path: '#/components/schemas/Tax1099Ls'
    method: GET
- name: Tax1099Ltc
  endpoint:
    path: '#/components/schemas/Tax1099Ltc'
    method: GET
- name: Tax1099Misc
  endpoint:
    path: '#/components/schemas/Tax1099Misc'
    method: GET
- name: Tax1099Nec
  endpoint:
    path: '#/components/schemas/Tax1099Nec'
    method: GET
- name: Tax1099Oid
  endpoint:
    path: '#/components/schemas/Tax1099Oid'
    method: GET
- name: Tax1099Patr
  endpoint:
    path: '#/components/schemas/Tax1099Patr'
    method: GET
- name: Tax1099Q
  endpoint:
    path: '#/components/schemas/Tax1099Q'
    method: GET
- name: Tax1099Qa
  endpoint:
    path: '#/components/schemas/Tax1099Qa'
    method: GET
- name: Tax1099R
  endpoint:
    path: '#/components/schemas/Tax1099R'
    method: GET
- name: Tax1099S
  endpoint:
    path: '#/components/schemas/Tax1099S'
    method: GET
- name: Tax1099Sa
  endpoint:
    path: '#/components/schemas/Tax1099Sa'
    method: GET
- name: Tax1099Sb
  endpoint:
    path: '#/components/schemas/Tax1099Sb'
    method: GET
- name: Tax1120SK1
  endpoint:
    path: '#/components/schemas/Tax1120SK1'
    method: GET
- name: Tax2439
  endpoint:
    path: '#/components/schemas/Tax2439'
    method: GET
- name: Tax3921
  endpoint:
    path: '#/components/schemas/Tax3921'
    method: GET
- name: Tax3922
  endpoint:
    path: '#/components/schemas/Tax3922'
    method: GET
- name: Tax5227K1
  endpoint:
    path: '#/components/schemas/Tax5227K1'
    method: GET
- name: Tax5498
  endpoint:
    path: '#/components/schemas/Tax5498'
    method: GET
- name: Tax5498Esa
  endpoint:
    path: '#/components/schemas/Tax5498Esa'
    method: GET
- name: Tax5498Qa
  endpoint:
    path: '#/components/schemas/Tax5498Qa'
    method: GET
- name: Tax5498Sa
  endpoint:
    path: '#/components/schemas/Tax5498Sa'
    method: GET
- name: TaxW2
  endpoint:
    path: '#/components/schemas/TaxW2'
    method: GET
- name: TaxW2C
  endpoint:
    path: '#/components/schemas/TaxW2C'
    method: GET
- name: TaxW2G
  endpoint:
    path: '#/components/schemas/TaxW2G'
    method: GET
- name: TaxRefundDirectDeposit
  endpoint:
    path: '#/components/schemas/TaxRefundDirectDeposit'
    method: GET
- name: transaction
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: Tax
  endpoint:
    path: /tax
    method: GET
    data_selector: tax
- name: Tax1041K1
  endpoint:
    path: /tax/1041K1
    method: GET
    data_selector: tax1041K1
- name: Tax1042S
  endpoint:
    path: /tax/1042S
    method: GET
    data_selector: tax1042S
- name: Tax1065K1
  endpoint:
    path: /tax/1065K1
    method: GET
    data_selector: tax1065K1
- name: Tax1098E
  endpoint:
    path: /Tax1098E
    method: GET
    data_selector: properties
- name: Tax1098Ma
  endpoint:
    path: /Tax1098Ma
    method: GET
    data_selector: properties
- name: Tax1098Q
  endpoint:
    path: /Tax1098Q
    method: GET
    data_selector: properties
- name: Tax1098T
  endpoint:
    path: /Tax1098T
    method: GET
    data_selector: properties
- name: Tax1099A
  endpoint:
    path: /Tax1099A
    method: GET
    data_selector: properties
- name: Tax1099B
  endpoint:
    path: /Tax1099B
    method: GET
    data_selector: properties
- name: Tax1099C
  endpoint:
    path: /Tax1099C
    method: GET
    data_selector: properties
- name: Tax1099Cap
  endpoint:
    path: /Tax1099Cap
    method: GET
    data_selector: properties
- name: Tax1099ConsolidatedStatement
  endpoint:
    path: /Tax1099ConsolidatedStatement
    method: GET
    data_selector: properties
- name: Tax1099Div
  endpoint:
    path: /Tax1099Div
    method: GET
    data_selector: properties
- name: Tax1099G
  endpoint:
    path: /Tax1099G
    method: GET
    data_selector: properties
- name: Tax1099H
  endpoint:
    path: /Tax1099H
    method: GET
    data_selector: properties
- name: Tax1099Int
  endpoint:
    path: /Tax1099Int
    method: GET
    data_selector: properties
- name: Tax1099K
  endpoint:
    path: /path/to/Tax1099K
    method: GET
    data_selector: records
- name: Tax1099Ls
  endpoint:
    path: /path/to/Tax1099Ls
    method: GET
    data_selector: records
- name: Tax1099Ltc
  endpoint:
    path: /path/to/Tax1099Ltc
    method: GET
    data_selector: records
- name: Tax1099Misc
  endpoint:
    path: /path/to/Tax1099Misc
    method: GET
    data_selector: records
- name: Tax1099Nec
  endpoint:
    path: /path/to/Tax1099Nec
    method: GET
    data_selector: records
- name: Tax1099Oid
  endpoint:
    path: /path/to/Tax1099Oid
    method: GET
    data_selector: records
- name: Tax1099Patr
  endpoint:
    path: /path/to/Tax1099Patr
    method: GET
    data_selector: records
- name: Tax1099Q
  endpoint:
    path: /path/to/Tax1099Q
    method: GET
    data_selector: records
- name: Tax1099Qa
  endpoint:
    path: /path/to/Tax1099Qa
    method: GET
    data_selector: records
- name: Tax1099R
  endpoint:
    path: /path/to/Tax1099R
    method: GET
    data_selector: records
- name: statements
  endpoint:
    path: /statements
    method: GET
    data_selector: statements
    params:
      accountId: :accountId
      startTime: '2020-03-30T04:00:00Z'
      endTime: '2021-03-30T04:00:00Z'
      limit: 50
      offset: '0'
- name: token
  endpoint:
    path: /token
    method: POST
    data_selector: tokenResponse
- name: revoke
  endpoint:
    path: /revoke
    method: POST
    data_selector: ''
- name: subscriptions
  endpoint:
    path: /notifications/{version}/subscriptions
    method: POST
    data_selector: ''
    params: {}
- name: get_subscription
  endpoint:
    path: /notifications/{version}/subscriptions/{subscriptionId}
    method: GET
    data_selector: ''
    params: {}
- name: delete_subscription
  endpoint:
    path: /notifications/{version}/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: update_subscription
  endpoint:
    path: /notifications/{version}/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: ''
    params: {}
- name: maintenance_notification
  endpoint:
    path: /notifications/{version}/maintenance/{notificationPayloadId}
    method: GET
    data_selector: ''
    params: {}
- name: notifications
  endpoint:
    path: /notifications/{version}/test
    method: POST
    data_selector: notificationId
    params:
      version: v1
- name: service_token
  endpoint:
    path: /token
    method: POST
    data_selector: access_token
    params:
      grant_type: client_credentials
      scope: app_management_v2
- name: create_app
  endpoint:
    path: /manage/{version}/apps/register
    method: POST
    data_selector: application/json
    params: {}
- name: update_app
  endpoint:
    path: /manage/{version}/recipients/{recipientId}/apps/{appId}
    method: PATCH
    data_selector: application/json
    params: {}
- name: get_all_apps
  endpoint:
    path: /manage/{version}/recipients/{recipientId}/apps
    method: GET
    data_selector: application/json
    params: {}
- name: products
  endpoint:
    path: /manage/{version}/recipients/{recipientId}/products
    method: GET
- name: providers
  endpoint:
    path: /manage/{version}/recipients/{recipientId}/providers
    method: GET
- name: subscriptions
  endpoint:
    path: /manage/{version}/subscriptions/{appId}
    method: GET
- name: subscriptions
  endpoint:
    path: /manage/{version}/subscriptions/{appId}
    method: GET
    data_selector: subscriptions
    params:
      offset: '0'
      limit: '50'
- name: subscriptions_filter
  endpoint:
    path: /manage/{version}/subscriptions/{appId}/status
    method: GET
    data_selector: subscription_status
    params:
      offset: '0'
      limit: '50'
- name: subscriptions
  endpoint:
    path: /notifications/{version}/subscriptions
    method: POST
    data_selector: subscriptionId
- name: get_subscriptions
  endpoint:
    path: /notifications/{version}/subscriptions
    method: GET
    data_selector: subscriptionId
- name: subscription_by_id
  endpoint:
    path: /notifications/{version}/subscriptions/{subscriptionId}
    method: GET
    data_selector: subscriptionId
- name: delete_subscription
  endpoint:
    path: /notifications/{version}/subscriptions/{subscriptionId}
    method: DELETE
    data_selector: status
- name: update_subscription
  endpoint:
    path: /notifications/{version}/subscriptions/{subscriptionId}
    method: PATCH
    data_selector: subscriptionId
- name: maintenance_notification
  endpoint:
    path: /notifications/{version}/maintenance/{notificationPayloadId}
    method: GET
    data_selector: id
- name: Get Consent Grant
  endpoint:
    path: /consents/{version}/{consentId}
    method: GET
    data_selector: properties
    params:
      version: v1
      consentId: string
- name: account_information
  endpoint:
    path: /account/information
    method: GET
- name: transactions
  endpoint:
    path: /transactions
    method: GET
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: statement_list
  endpoint:
    path: /statements/list
    method: GET
- name: statement
  endpoint:
    path: /statements
    method: GET
- name: mikomo
  endpoint:
    path: /
    method: GET
    data_selector: data
- name: GenericUser_Payments_ACH
  endpoint:
    path: /services/data/v2.2/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: GenericUser_Payments_BOTH
  endpoint:
    path: /genericuser_payments_both
    method: GET
    data_selector: account
    params: {}
- name: accounts_info
  endpoint:
    path: /accounts-info
    method: GET
    data_selector: payload
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: payload
- name: customer
  endpoint:
    path: /customers
    method: GET
    data_selector: payload
- name: payment_enablement
  endpoint:
    path: /payments
    method: GET
    data_selector: payload
- name: apps
  endpoint:
    path: /reference/post-register
    method: POST
- name: valid_providers
  endpoint:
    path: /reference/get-providers
    method: GET
- name: subscriptions
  endpoint:
    path: /reference/get-subscriptions
    method: GET
- name: account_information
  endpoint:
    path: /reference/get-accounts-info
    method: GET
    data_selector: accountInfo
    params: {}
- name: Account information
  endpoint:
    path: /reference/account-info
    method: GET
- name: Balances
  endpoint:
    path: /reference/balances
    method: GET
- name: Transactions
  endpoint:
    path: /reference/transactions
    method: GET
- name: Investments
  endpoint:
    path: /reference/investments
    method: GET
- name: Customers
  endpoint:
    path: /reference/customers
    method: GET
- name: Payments
  endpoint:
    path: /reference/payments
    method: GET
- name: Statements
  endpoint:
    path: /reference/statements
    method: GET
- name: revoke
  endpoint:
    path: /revoke
    method: POST
- name: account_info
  endpoint:
    path: /accounts-info/v2/{providerId}
    method: GET
- name: balances
  endpoint:
    path: /balances/v2/{providerId}
    method: GET
- name: investments
  endpoint:
    path: /accounts/v2/{providerId}/
    method: GET
- name: transactions
  endpoint:
    path: /transactions/v2/{providerId}/{accountId}
    method: GET
- name: customers
  endpoint:
    path: /customers/v2/{providerId}/current
    method: GET
- name: payments
  endpoint:
    path: /payments/v2/{providerId}/{accountId}/payment-networks
    method: GET
- name: statements
  endpoint:
    path: /statements/{version}/{providerId}/{accountId}
    method: GET
- name: account_information
  endpoint:
    path: /{version}/{providerId}
    method: GET
    data_selector: response
    params:
      mode: standard
- name: balances
  endpoint:
    path: /balances
    method: GET
    data_selector: depositAccount
    params: {}
- name: balances
  endpoint:
    path: /balances/{version}/{providerId}
    method: GET
- name: customer_info
  endpoint:
    path: /customers
    method: GET
    data_selector: customer
    params: {}
- name: account_holder_info
  endpoint:
    path: /contacts
    method: GET
    data_selector: holders
    params: {}
- name: customer_info
  endpoint:
    path: /customers/{version}/{providerId}/current
    method: GET
- name: account_holder_information
  endpoint:
    path: /contacts/{version}/{providerId}/{accountId}
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
- name: balances
  endpoint:
    path: /balances
    method: GET
    data_selector: balances
- name: investments
  endpoint:
    path: /investments
    method: GET
    data_selector: investments
- name: Holding
  endpoint:
    path: /holding
    method: GET
    data_selector: records
- name: Contribution
  endpoint:
    path: /contribution
    method: GET
    data_selector: records
- name: EquityGrants
  endpoint:
    path: /equityGrants
    method: GET
    data_selector: records
- name: InvestmentLoan
  endpoint:
    path: /investmentLoan
    method: GET
    data_selector: records
- name: OpenOrder
  endpoint:
    path: /openOrder
    method: GET
    data_selector: records
- name: PensionSource
  endpoint:
    path: /pensionSource
    method: GET
    data_selector: records
- name: Vesting
  endpoint:
    path: /vesting
    method: GET
    data_selector: records
- name: account_info
  endpoint:
    path: /accounts/{version}/{providerId}
    method: GET
    data_selector: '200'
    params:
      mode: standard
- name: taxlots
  endpoint:
    path: /taxlots/{version}/{providerId}/{accountId}/{holdingId}
    method: GET
- name: payments
  endpoint:
    path: /payments/{version}/{providerId}/{accountId}/payment-networks
    method: GET
- name: statements
  endpoint:
    path: /statements/{version}/{providerId}/{accountId}
    method: GET
- name: statement_list
  endpoint:
    path: /statements/{version}/{providerId}/{accountId}
    method: GET
- name: statement
  endpoint:
    path: /statements/{version}/{providerId}/{accountId}/{statementId}
    method: GET
    data_selector: response
- name: search_tax_forms
  endpoint:
    path: /tax-forms/{version}/{providerId}/{accountId}
    method: GET
- name: retrieve_tax_form
  endpoint:
    path: /tax-forms/{version}/{providerId}/{taxFormId}
    method: GET
- name: search_tax_forms
  endpoint:
    path: /tax-forms/{version}/{providerId}
    method: GET
- name: retrieve_tax_form
  endpoint:
    path: /tax-forms/{version}/{providerId}/{taxFormId}
    method: GET
- name: transactions
  endpoint:
    path: /reference/get-transactions
    method: GET
    data_selector: transactions
- name: transactions
  endpoint:
    path: /transactions/{version}/{providerId}/{accountId}
    method: GET
- name: Update App
  endpoint:
    path: /manage/{version}/recipients/{recipientId}/apps/{appId}
    method: PATCH
- name: get_all_apps
  endpoint:
    path: /manage/{version}/recipients/{recipientId}/apps
    method: GET
    data_selector: apps
    params:
      limit: '500'
- name: purchased_products
  endpoint:
    path: /manage/{version}/recipients/{recipientId}/products
    method: GET
- name: valid_providers
  endpoint:
    path: /manage/{version}/recipients/{recipientId}/providers
    method: GET
- name: subscriptions
  endpoint:
    path: /manage/{version}/subscriptions/{appId}
    method: GET
    data_selector: activeSubscriptions
    params:
      offset: offset
      limit: limit
- name: subscriptions
  endpoint:
    path: /manage/{version}/subscriptions/{appId}/status
    method: GET
    data_selector: subscriptions
    params:
      status: ACTIVE, PENDING, PROCESSING, TERMINATED, DENIED
- name: notification_subscription
  endpoint:
    path: /notifications/v1/notification-subscriptions
    method: POST
    data_selector: notificationSubscriptions
- name: test_event
  endpoint:
    path: /notifications/v1/test
    method: POST
    data_selector: ''
- name: service_token
  endpoint:
    path: /reference/service-tokens
    method: POST
- name: token
  endpoint:
    path: /reference/get-token
    method: GET
- name: account_info
  endpoint:
    path: /reference/get-accounts-info
    method: GET
- name: balances
  endpoint:
    path: /reference/get-balances
    method: GET
- name: customers
  endpoint:
    path: /reference/customer-info
    method: GET
- name: investments
  endpoint:
    path: /reference/get-accounts
    method: GET
- name: payments
  endpoint:
    path: /reference/payment-networks
    method: GET
- name: statements
  endpoint:
    path: /reference/get-statement-list
    method: GET
- name: transactions
  endpoint:
    path: /reference/get-transactions
    method: GET
- name: notification_subscription
  endpoint:
    path: /notifications/v1/notification_subscriptions
    method: POST
    data_selector: notifications
    params: {}
- name: maintenance_notification
  endpoint:
    path: /notifications/v1/maintenance/{id}
    method: GET
    data_selector: notification
    params: {}
- name: consent_notification
  endpoint:
    path: /consents/v1/{id}
    method: GET
    data_selector: notification
    params: {}
- name: create_notification_subscription
  endpoint:
    path: /notifications/{version}/subscriptions
    method: POST
- name: list_notification_subscriptions
  endpoint:
    path: /notifications/{version}/subscriptions
    method: GET
- name: get_notification_subscription_by_id
  endpoint:
    path: /notifications/{version}/subscriptions/{id}
    method: GET
- name: delete_notification_subscription
  endpoint:
    path: /notifications/{version}/subscriptions/{id}
    method: DELETE
- name: update_notification_subscription
  endpoint:
    path: /notifications/{version}/subscriptions/{subscriptionid}
    method: PATCH
- name: notification_subscriptions
  endpoint:
    path: /notifications/{version}/subscriptions
    method: GET
    data_selector: subscriptions
- name: notification_subscription
  endpoint:
    path: /notifications/{version}/subscriptions/{subscriptionId}
    method: GET
- name: delete_notification_subscription
  endpoint:
    path: /notifications/{version}/subscriptions/{subscriptionId}
    method: DELETE
- name: notification_subscription
  endpoint:
    path: /notifications/{version}/subscriptions/{subscriptionId}
    method: PATCH
- name: maintenance_notification_details
  endpoint:
    path: /notifications/{version}/maintenance/{notificationPayloadId}
    method: GET
- name: send_sandbox_test_event
  endpoint:
    path: /notifications/{version}/test
    method: POST
- name: get_consent_grant
  endpoint:
    path: /consents/{version}/{consentId}
    method: GET
notes:
- You can ONLY use our mock provider Mikomo bank with these servers.
- Authorization code expires in 5 minutes.
- ID tokens expire after 15 minutes.
- Authorization code and ID tokens expire after 5 and 15 minutes respectively.
- Requires setup of sandbox app in Data Recipient Hub.
- Authorization code expires in 5 minutes
- ID tokens expire after about 15 minutes
- A consent UX in your app is required.
- Secure, encrypted storage for your app’s client_id, client_secret and all tokens
  is necessary.
- API calls require the account holder’s consent.
- Each data call requires the end-user’s associated id token.
- Use the refresh token to obtain a new set of tokens.
- The API calls require you to have the account holder’s consent.
- Up to 10 sandbox apps allowed
- Onboarding required before registering apps in production
- The ID token lifetime may last up to 24 hours, but it is recommended to treat it
  as having a life of no longer than 15 minutes.
- The refresh token must be treated as highly confidential.
- Users may accidentally log into a different account than previously linked
- Handle consent flow and updates to the refresh token in a centralized part of the
  distributed system to avoid conflicts in your code
- All data requests use standard GET and POST methods and must include authorization
  in the header.
- The *id_token* should be used as the bearer token with this call.
- Use the mode query param to receive FDX-aligned, standardized data values (Beta).
- 'Optional but recommended header to include with each data request: x-akoya-interaction-type'
- Use Accept HTTP request header to indicate one or more content types to request
  for the search result response.
- Requires authentication setup for API access
- The maximum number of items to be returned in the response is 50.
- The token endpoint is used to obtain tokens during authorization or to refresh tokens
  without having to go through authorization again.
- The `alps` scope is deprecated. Use `app_management_v2` for Apps Management and
  `notifications_subscriptions advisory` for Notifications.
- Scope must include at least one product in addition to Account Information.
- This endpoint is supported in sandbox (`https://sandbox-api.akoya.com`) and production
  (`https://api.akoya.com`)
- This endpoint is only supported in sandbox (`https://sandbox-api.akoya.com`)
- The service token should be used as the bearer token with this call.
- When integrating with Akoya, we suggest implementing a method for capturing or logging
  the x-akoya-interaction-id for troubleshooting purposes.
- An app registered in the Data Recipient Hub is required.
- 5 TPS (transactions per second) rate limit.
- For connector and providerId parameters, use the value mikomo.
- Passwords for these test accounts are the same as the username.
- Not all accounts have example transaction data
- For `connector` and `providerId` parameters, use the value `mikomo`.
- All activities from the moment the end-user begins the authentication flow to the
  point when Akoya returns an ID token for your app to use with Akoya APIs for data
  calls.
- Token required! Please obtain a token prior to completing this section.
- Initial authentication remains in effect until either the end-user revokes access
  to their data or their associated refresh token expires.
- The ID token may last 24 hours to facilitate testing. However, providers often have
  a shorter expiration for ID tokens. We recommend treating ID tokens as having a
  life of no longer than 15 minutes.
- For all production issues, submit a support ticket through the Data Recipient Hub.
- These are example responses
- Data providers may change data elements
- Akoya recommends that your clientId/secret stay protected on your server side.
- Use Universal/App Links. These are more secure and reliable than custom URL schemes.
- When using Akoya’s link-based pagination, we recommend omitting the `offset` parameter
  in the initial transaction call.
- Do not change the link for ongoing requests.
- Akoya follows FDX standards for timestamps in requests.
- Akoya enables consumers to provide third-party access to their financial data in
  a safe, secure, and transparent way.
- This community was built for you! Enjoy your time building best-in-class fintech
  apps with us.
- Akoya recommends a maximum of 5 API calls per second (5 TPS).
- Service tokens last for 24 hours. After they expire, you will need to use your client
  id and secret to generate new ones.
- Version 1 will be deprecated six months after the launch of v2.
- The Subscription endpoint is no longer necessary and will not be supported in v2.
- The Management, Consent, and Notifications APIs require service (access) tokens.
- Akoya service tokens are used for Akoya services such as Management or Notifications
  APIs and are not intended to use with Akoya products for retrieving data.
- OAuth flow standard requires user consent
- You must have the end-user’s consent and their associated ID token for permissioned
  data.
- Each authorization grant code expires in 5 minutes.
- The `id_token` should be used as the bearer token with this call.
- This product requires consumer consent to share all account holder information.
- The id_token should be used as the bearer token with this call.
- mode is supported by a subset of providers.
- Get the full lists of tax document data and tax form images available for a specific
  year for the current authorized customer.
- Up to two years of transaction data across account types, including amounts, dates,
  and descriptions.
- You can use the next and the prev links to page through the response.
- Akoya will be requiring MTLS authentication for your callbackURL.
errors:
- '400: Invalid input'
- '400: Invalid start or end date'
- '400: Invalid date range'
- '401: Customer not authorized'
- '403: Subscription not found'
- '404: Customer not found'
- '404: Account not found'
- '408: Request timeout'
- '422: Account type not supported'
- '429: Too many requests'
- '500: Internal server error'
- '500: Subsystem unavailable'
- '503: Scheduled Maintenance'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Recheck OAuth credentials or token expiration'
- 'EXPIRED_CODE: The authorization code has expired'
- 'INVALID_TOKEN: The provided token is invalid'
- '602: Customer not authorized'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'invalid_request: Refresh token is invalid or has already been claimed by another
  client.'
- '400: Bad Request'
- '401: Unauthorized'
- '404: Not Found'
- '405: Method Not Allowed'
- '408: Request timed out'
- '429: Too Many Requests'
- '401: Unauthorized - The id_token should be used as the bearer token with this call.'
- '403: Subscription not found - The providerId is wrong or your app doesn''t have
  a subscription to the provider.'
- '404: Not Found - The requested resource could not be found.'
- '405: Method Not Allowed - The specified method is not allowed for this endpoint.'
- '408: Request timed out - Round trip call took >10 seconds.'
- '702: Invalid start or end date'
- '703: Invalid date range'
- '701: Account not found'
- '1107: Data not found for request parameters'
- '1204: Account ID is Required'
- '1200: Tax Form not Found'
- '408: Request Timeout'
- '705: Account is Closed'
- '1205: Tax Forms not yet been made available'
- '1106: FdxVersion not supported or not implemented'
- '1203: Content Type not Supported'
- '1207: Too many requests'
- 'invalid_ client: Invalid client credentials.'
- 'invalid _grant: Invalid grant type.'
- 'invalid request: No refresh token in request.'
- '401: Unauthorized to create a notification subscription'
- '400: Input sent by client does not satisfy API specification'
- '501: FDX version not supported or implemented'
- '1205: Unauthorized'
- '1206: Method Not Allowed'
- '1207: Too Many Requests'
- 'InvalidArgument: unable to validate image'
- 'AlreadyExists: This app name already exists for this recipientId.'
- '401 Unauthorized: Customer not authorized'
- '503: Service Unavailable'
- 'FdxVersion not supported or not implemented: FdxVersion not supported or not implemented'
- '400: Bad Request - Invalid input'
- '404: Unknown grant ID - resource not found'
- '500: Internal server error - Provider custom developer-level error details for
  troubleshooting'
- '503: Service Unavailable - Scheduled Maintenance'
- '501: Subsystem unavailable'
- '601: Customer not found'
- '704: Account type not supported'
- 'HTTP 400: Bad Request'
- 'HTTP 403: Forbidden'
- 'HTTP 401: Unauthorized'
- 'HTTP 400: Bad Request: Invalid or expired code parameter.'
- 'HTTP 401: Unauthorized: Invalid client credentials.'
- 'HTTP 400: Bad Request: Invalid input'
- 'HTTP 401: Unauthorized: Customer not authorized'
- 'HTTP 404: Not Found: Account not found'
- 'HTTP 200: OK: transactions: []'
- 'HTTP 500: Internal Server Error: Internal server error'
- 'HTTP 500: Internal Server Error: Subsystem unavailable'
- 'invalid_request: Returned when requesting ID and refresh tokens if your authorization
  code is expired.'
- '601 “Customer not found”: May be returned if the customer revokes access or the
  ID token expires.'
- '`redirect_uri` parameter is missing, or is unregistered'
- '`providerId` is missing or incorrect'
- '`client_id` is missing or incorrect'
- Server/subsystem errors
- '`code` parameter (obtained during the authentication process) is incorrect or missing'
- '`grant_type` is incorrect or missing'
- '`refresh_token`, `client_id`, and/or `client_secret` are missing, invalid, or claimed
  by another client'
- '`token_type_hint` is not set to `refresh_token`'
- Invalid input
- Invalid start or end date
- Invalid date range
- Customer not authorized
- '`providerId` is incorrect, or your app does not have a subscription to that provider'
- Customer not found
- Account not found
- Account type not supported
- 'invalid_request: Invalid+response+type'
- 'invalid_scope: Missing+required+scope'
- 'access_denied: '
- 'unauthorized_client: '
- 'unsupported_response_type: '
- 'server_error: '
- 'temporarily_unavailable: '
- '400 Bad Request: invalid_request - Invalid or expired code parameter'
- '400 Bad Request: invalid_request - redirect_uri did not match URI from initial
  request'
- '400 Bad Request: invalid_grant - Missing or incorrect grant_type field. Must be
  authorization_code'
- '401 Unauthorized: invalid_client - Invalid client credentials.'
- '400 Bad Request: invalid_request - No refresh token in request'
- '400 Bad Request: invalid_request - Refresh token is invalid or has already been
  claimed by another client.'
- '400 Bad Request: invalid_grant - Missing or incorrect grant_type field. Must be
  refresh_token'
- '400 Bad Request: invalid_request - One or more key value is missing, invalid, or
  claimed by another client: refresh_token, client_id, client_secret'
- '400 Bad Request: unsupported_token_type - The token_type_hint must be set to refresh_token'
- 'Unauthorized: Check user authentication and consent'
- 'Connection Issue: User canceled the consent flow'
- 'invalid_scope: Missing required scope(s) ["openid"]'
auth_info:
  mentioned_objects:
  - Authorization Code
  - ID Token
  - Refresh Token
  - Data Provider
  - client ID
  - redirect URI
  - authorization code
  - id_token
  - client_id
  - client_secret
  - bearerAuth
client:
  base_url: https://api.akoya.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
