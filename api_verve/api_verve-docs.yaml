resources:
- name: chucknorris
  endpoint:
    path: /v1/chucknorris
    method: GET
    data_selector: data
- name: weather
  endpoint:
    path: /v1/weather
    method: GET
    data_selector: data
    params:
      city: London
      units: metric
- name: htmltopdf
  endpoint:
    path: /v1/htmltopdf
    method: POST
    data_selector: data
    params: {}
- name: advice
  endpoint:
    path: /v1/advice
    method: GET
    data_selector: data
- name: age_calculator
  endpoint:
    path: /v1/agecalculator
    method: GET
    data_selector: data
    params:
      dob: '1990-01-01'
- name: air_quality
  endpoint:
    path: /airquality
    method: GET
    data_selector: data
    params:
      city: San Francisco
- name: airline_lookup
  endpoint:
    path: /v1/airlinelookup
    method: GET
    data_selector: data
    params:
      iata: AA
- name: airport_distance
  endpoint:
    path: /airportdistance
    method: GET
    data_selector: data
    params:
      iata1: JFK
      iata2: LAX
- name: airports
  endpoint:
    path: /airports
    method: GET
    data_selector: data
    params:
      iata: MCI
- name: antonym
  endpoint:
    path: /v1/antonym
    method: GET
    data_selector: data
    params:
      word: happy
- name: app_data
  endpoint:
    path: /app_data
    method: GET
    data_selector: data
- name: appstorescraper
  endpoint:
    path: /v1/appstorescraper
    method: GET
- name: app_data
  endpoint:
    path: /v1/app
    method: GET
    data_selector: data
    params: {}
- name: article_ideas
  endpoint:
    path: /v1/articleideas
    method: GET
    data_selector: data
    params:
      topic: topic
- name: asn_lookup
  endpoint:
    path: /asnlookup
    method: GET
    data_selector: data
    params:
      asn: AS15169
- name: baby_name_generator
  endpoint:
    path: /v1/babynamegenerator
    method: GET
    data_selector: data.names
    params:
      gender: male
- name: barcodegenerator
  endpoint:
    path: /v1/barcodegenerator
    method: POST
    data_selector: response
    params: {}
- name: bible
  endpoint:
    path: /v1/bible
    method: GET
    data_selector: data
    params:
      book: Genesis
      chapter: 5
      verse: 17
- name: bimi_validator
  endpoint:
    path: /v1/bimivalidator
    method: GET
    data_selector: data
    params:
      domain: ebay.com
- name: binlookup
  endpoint:
    path: /binlookup
    method: GET
    data_selector: data
    params:
      bin: '448590'
- name: bmicalculator
  endpoint:
    path: /v1/bmicalculator
    method: GET
    data_selector: data
    params:
      weight: '70'
      height: '170'
      unit: metric
- name: bucketlist
  endpoint:
    path: /bucketlist
    method: GET
    data_selector: data.bucketListItem
- name: captcha
  endpoint:
    path: /v1/captchagenerator
    method: GET
    data_selector: data
- name: car_models
  endpoint:
    path: /v1/carmodels
    method: GET
    data_selector: data
    params: {}
- name: cars
  endpoint:
    path: /api/cars
    method: GET
    data_selector: cars
    params: {}
- name: card_generator
  endpoint:
    path: /v1/cardgenerator
    method: GET
    data_selector: response
    params:
      brand: visa
- name: cards
  endpoint:
    path: /cards
    method: GET
    data_selector: data.cards
- name: owner
  endpoint:
    path: /owner
    method: GET
    data_selector: data.owner
- name: card_validator
  endpoint:
    path: /v1/cardvalidator
    method: GET
    data_selector: data
    params:
      number: '4900264223817524'
- name: chart_generator
  endpoint:
    path: /chartgenerator
    method: POST
    data_selector: data
- name: chart
  endpoint:
    path: /chart
    method: GET
    data_selector: data
    params: {}
- name: chuck_norris_jokes
  endpoint:
    path: /chucknorris
    method: GET
    data_selector: data.joke
- name: foundCities
  endpoint:
    path: /
    method: GET
    data_selector: data.foundCities
- name: cities
  endpoint:
    path: /v1/citieslookup
    method: GET
    data_selector: data
    params:
      city: San Francisco
- name: counter
  endpoint:
    path: /counter
    method: GET
    data_selector: data
- name: cocktail
  endpoint:
    path: /v1/cocktail
    method: GET
    data_selector: data
- name: cocktails
  endpoint:
    path: /cocktail
    method: GET
    data_selector: cocktails
- name: codedetector
  endpoint:
    path: /v1/codedetector
    method: POST
- name: color_converter
  endpoint:
    path: /v1/colorconverter
    method: GET
    data_selector: data
    params:
      hex: FF0000
- name: color_palette
  endpoint:
    path: /color_palette
    method: GET
    data_selector: data
- name: color_palette
  endpoint:
    path: /v1/colorpalette
    method: GET
    data_selector: ''
- name: comment_generator
  endpoint:
    path: /v1/commentgenerator
    method: GET
    data_selector: data.comments
    params:
      mode: text
      count: 5
      emojis: true
- name: company_name_generator
  endpoint:
    path: /v1/companynamegenerator
    method: GET
    data_selector: data
    params:
      keyword: systems
      count: 5
- name: contact_extractor
  endpoint:
    path: /v1/contactextractor
    method: POST
    data_selector: data
    params:
      url: https://en.wikipedia.org/wiki/Email_address
- name: coordinatesaresea
  endpoint:
    path: /coordinatesaresea
    method: GET
    data_selector: data
    params:
      lat: latitude
      lon: longitude
- name: country_borders
  endpoint:
    path: /countryborders
    method: GET
    data_selector: data
    params:
      country: CA
- name: country_boundaries
  endpoint:
    path: /country_boundaries
    method: GET
    data_selector: data
- name: country_boundaries
  endpoint:
    path: /v1/countryboundaries
    method: GET
    data_selector: ''
    params:
      country: CA
- name: features
  endpoint:
    path: /country_boundaries
    method: GET
    data_selector: features
- name: callingcode
  endpoint:
    path: /v1/callingcode
    method: GET
    data_selector: data
    params:
      country: FR
- name: country_flags
  endpoint:
    path: /v1/countryflags
    method: GET
    data_selector: data
    params:
      country: ZW
      format: png
      shape: circle
- name: country_languages
  endpoint:
    path: /countrylanguages
    method: GET
    data_selector: data
    params:
      name: country
- name: countries
  endpoint:
    path: /api/countries
    method: GET
    data_selector: countries
- name: countrylookup
  endpoint:
    path: /v1/countrylookup
    method: GET
    data_selector: data
    params:
      country: USA
- name: county_data
  endpoint:
    path: /county_data
    method: GET
    data_selector: data
- name: county_data
  endpoint:
    path: /v1/countydata
    method: GET
    data_selector: ''
    params:
      state: MO
      county: Jackson
- name: currency_converter
  endpoint:
    path: /v1/currencyconverter
    method: GET
    data_selector: data
    params:
      value: '1'
      from: USD
      to: EUR
- name: currencysymbols
  endpoint:
    path: /v1/currencysymbols
    method: GET
    data_selector: data
    params:
      currency: USD
- name: countries_found
  endpoint:
    path: /api/v1/currencies
    method: GET
    data_selector: countriesFound
- name: dad_jokes
  endpoint:
    path: /dadjokes
    method: GET
    data_selector: data
    params: {}
- name: date_calculator
  endpoint:
    path: /v1/datecalculator
    method: GET
    data_selector: data
    params:
      start: '2022-01-01'
      end: '2024-08-31'
- name: dictionary
  endpoint:
    path: /v1/dictionary
    method: GET
    data_selector: data
- name: did_you_mean
  endpoint:
    path: /v1/didyoumean
    method: GET
    data_selector: data
    params:
      query: string
- name: email_disposable_checker
  endpoint:
    path: /v1/emaildisposablechecker
    method: GET
    data_selector: data
    params:
      email: support@myspace.com
- name: distance_calculator
  endpoint:
    path: /v1/distancecalculator
    method: GET
    params:
      lat1: '36.7783'
      lon1: '-119.4179'
      lat2: '34.0522'
      lon2: '-118.2437'
- name: dkim_validator
  endpoint:
    path: /v1/dkimvalidator
    method: GET
    data_selector: data
    params:
      domain: google.com
- name: dkim_validation
  endpoint:
    path: /validate
    method: GET
    data_selector: data
    params: {}
- name: dmarc_validator
  endpoint:
    path: /v1/dmarcvalidator
    method: GET
    params:
      domain: paypal.com
- name: dnslookup
  endpoint:
    path: /v1/dnslookup
    method: GET
    data_selector: ''
    params:
      domain: myspace.com
- name: records
  endpoint:
    path: /
    method: GET
    data_selector: data
    params: {}
- name: dog_breeds
  endpoint:
    path: /dogbreeds
    method: GET
    data_selector: data
    params:
      breed: beagle
- name: pinger
  endpoint:
    path: /v1/pinger
    method: POST
    data_selector: data
    params:
      host: google.com
- name: domain_availability
  endpoint:
    path: /domainavailability
    method: GET
    data_selector: data
    params:
      domain: myspace.com
- name: domainexpiration
  endpoint:
    path: /v1/domainexpiration
    method: GET
    data_selector: data
    params:
      domain: myspace.com
- name: email_validator
  endpoint:
    path: /v1/emailvalidator
    method: GET
    data_selector: data
    params:
      email: support@myspace.com
- name: emojidecorator
  endpoint:
    path: /emojidecorator
    method: POST
    data_selector: data
    params:
      text: I am so excited to go to the lake and swim
- name: emoji
  endpoint:
    path: /emoji
    method: GET
    data_selector: data.emojisFound
    params:
      emoji: ðŸ¥³
- name: exchange_rate
  endpoint:
    path: /v1/exchangerate
    method: GET
    data_selector: data
    params:
      currency1: USD
      currency2: EUR
- name: exercises
  endpoint:
    path: /v1/exercises
    method: GET
    data_selector: data
    params: {}
- name: exercises
  endpoint:
    path: /exercises
    method: GET
    data_selector: exercises
- name: fully_qualified_domain
  endpoint:
    path: /v1/fullyqualifieddomain
    method: GET
    data_selector: data
    params:
      ip: 199.30.24.0
- name: genderdetector
  endpoint:
    path: /genderdetector
    method: GET
    data_selector: data
    params:
      name: John Mcdonald
      country: US
- name: gold_price
  endpoint:
    path: /goldprice
    method: GET
    data_selector: data
    params:
      currency: USD
- name: grammar_check
  endpoint:
    path: /grammarcheck
    method: POST
    data_selector: data
    params:
      text: The the pig snorted when I saw it on the barn gate. I was a little mad
        becuase it woke up my pupppppy
- name: data
  endpoint:
    path: /
    method: GET
    data_selector: data
- name: gravatar_lookup
  endpoint:
    path: /v1/gravatarlookup
    method: GET
    data_selector: response
    params:
      email: hello@apiverve.com
- name: hashtag_generator
  endpoint:
    path: /v1/hashtaggenerator
    method: POST
    data_selector: data.hashtags
    params:
      text: The text to generate hashtags from
- name: historical_events
  endpoint:
    path: /v1/historicalevents
    method: GET
    data_selector: events
    params:
      text: moon landing
- name: events
  endpoint:
    path: /historical-events
    method: GET
    data_selector: events
- name: horoscope
  endpoint:
    path: /v1/horoscope
    method: GET
    data_selector: data
    params:
      sign: aries
- name: htmltopdf
  endpoint:
    path: /v1/htmltopdf
    method: POST
    data_selector: null
    params: {}
- name: html_to_text
  endpoint:
    path: /htmltotext
    method: POST
    data_selector: data
    params:
      html: html
- name: human_name_parser
  endpoint:
    path: /v1/humannameparser
    method: GET
    data_selector: data
    params:
      name: MR. MARTINO PETROS DE FLORENCE (TINO) Jr.
- name: ifsclookup
  endpoint:
    path: /ifsclookup
    method: GET
    data_selector: data
    params:
      ifsc: SBIN0005943
- name: imagetotext
  endpoint:
    path: /v1/imagetotext
    method: POST
    data_selector: data
    params:
      url: image
- name: invoice
  endpoint:
    path: /v1/invoicegenerator
    method: POST
- name: invoice
  endpoint:
    path: /v1/invoicegenerator
    method: POST
    data_selector: data
    params: {}
- name: ip_blacklist_lookup
  endpoint:
    path: /ipblacklistlookup
    method: GET
    data_selector: data
    params:
      ip: 201.23.192.173
- name: iplookup
  endpoint:
    path: /iplookup
    method: GET
    data_selector: data
    params:
      ip: 173.172.81.20
- name: keyword_extractor
  endpoint:
    path: /keywordextractor
    method: POST
    data_selector: data
    params: {}
- name: language_detector
  endpoint:
    path: /v1/languagedetector
    method: POST
    data_selector: data
    params:
      text: text
- name: leetspeak
  endpoint:
    path: /v1/leetspeak
    method: POST
    data_selector: data
    params:
      text: This is a simple piece of text
      mode: encode
- name: linkscraper
  endpoint:
    path: /v1/linkscraper
    method: POST
    data_selector: response
    params:
      url: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html
      maxlinks: 20
      includequery: false
- name: response_structure
  endpoint:
    path: /response
    method: GET
    data_selector: data
- name: liturgical_calendar
  endpoint:
    path: /v1/liturgicalcalendar
    method: GET
    data_selector: data
    params:
      month: 08
      year: '2025'
- name: liturgical_dates
  endpoint:
    path: /liturgical_calendar
    method: GET
    data_selector: records
- name: liturgical_dates
  endpoint:
    path: /liturgical/calendar
    method: GET
    data_selector: array
    params: {}
- name: loan_calculator
  endpoint:
    path: /loan/calculator
    method: GET
    data_selector: data
    params: {}
- name: loan_calculation
  endpoint:
    path: /data
    method: GET
    data_selector: data
- name: loan_payment_calculator
  endpoint:
    path: /v1/loanpaymentcalculator
    method: POST
    data_selector: ''
    params: {}
- name: loan_calculation
  endpoint:
    path: /loan
    method: GET
    data_selector: data
    params: {}
- name: lorem_ipsum
  endpoint:
    path: /v1/loremipsumgenerator
    method: GET
    data_selector: data
    params: {}
- name: lottery
  endpoint:
    path: /v1/lottery
    method: GET
    data_selector: data
    params:
      lottery: megamillions
- name: love_calculator
  endpoint:
    path: /v1/lovecalculator
    method: GET
    data_selector: data
    params:
      name1: John
      name2: Jane
- name: mac_address_lookup
  endpoint:
    path: /v1/macaddresslookup
    method: GET
    data_selector: data
    params:
      mac: 00-B0-D0-63-C2-26
- name: marine_weather
  endpoint:
    path: /v1/marineweather
    method: GET
    data_selector: data
    params:
      lat: lat
      lon: lon
- name: featured_content
  endpoint:
    path: /discover/featured
    method: GET
    data_selector: data
- name: metadata_extractor
  endpoint:
    path: /v1/metadataextractor
    method: POST
    data_selector: data
    params: {}
- name: featured_content
  endpoint:
    path: /discover/featured
    method: GET
    data_selector: data
- name: meteorites
  endpoint:
    path: /meteorites
    method: GET
    data_selector: data.meteors
    params: {}
- name: moon_phases
  endpoint:
    path: /moonphases
    method: GET
    data_selector: data
    params:
      date: 08-13-2025
- name: moonposition
  endpoint:
    path: /moonposition
    method: GET
    data_selector: data
    params:
      lat: '37.7749'
      lon: '-122.4194'
      date: 08-13-2025
- name: moonrisemoonset
  endpoint:
    path: /v1/moonrisemoonset
    method: GET
    data_selector: data
    params:
      lat: '37.7749'
      lon: '-122.4194'
      date: 08-13-2025
- name: morsecode
  endpoint:
    path: /v1/morsecode
    method: POST
    data_selector: data
    params:
      text: This Is A Message
- name: mortgage_calculator
  endpoint:
    path: /v1/mortgagecalculator
    method: POST
    data_selector: ''
    params: {}
- name: mx_lookup
  endpoint:
    path: /v1/mxlookup
    method: GET
    data_selector: data
    params:
      domain: yahoo.com
- name: nobel_prizes
  endpoint:
    path: /nobelprizes
    method: GET
    data_selector: data.nobelPrizes
    params: {}
- name: numbertowords
  endpoint:
    path: /numbertowords
    method: GET
    params:
      number: '975.07'
- name: openlicenses
  endpoint:
    path: /v1/openlicenses
    method: GET
    data_selector: data
    params:
      name: MIT
- name: partsofspeech
  endpoint:
    path: /v1/partsofspeech
    method: POST
    data_selector: data
    params:
      text: My friend from college hails from a small countryside village located
        at the heart of the state. During the last summer vacation, I had an opportunity
        to visit my friend in his village. I packed up my belongings and boarded the
        bus bound for the village
      partofspeech: verbs
- name: password_generator
  endpoint:
    path: /v1/passwordgenerator
    method: GET
    data_selector: data
    params:
      count: 10
      length: 12
      complexity: strong
- name: password_strength
  endpoint:
    path: /passwordstrength
    method: GET
    data_selector: data
    params:
      password: Password123
- name: periodic_table
  endpoint:
    path: /v1/periodictable
    method: GET
    data_selector: data
    params:
      name: hydrogen
- name: phone_number_validator
  endpoint:
    path: /v1/phonenumbervalidator
    method: GET
    params:
      number: 816-555-1017
      country: us
- name: pig_latin
  endpoint:
    path: /piglatin
    method: POST
    data_selector: data
    params: {}
- name: planet_positions
  endpoint:
    path: /
    method: GET
    data_selector: data
- name: planet_positions
  endpoint:
    path: /v1/planetpositions
    method: POST
    data_selector: response
    params:
      date: '2025-04-15 10:37:00'
      lat: 37.7749
      lon: -122.4194
      alt: 52
      planet: Moon
- name: playstorescraper
  endpoint:
    path: /v1/playstorescraper
    method: GET
    data_selector: response
    params: {}
- name: app_details
  endpoint:
    path: /store/apps/details
    method: GET
    data_selector: data
    params:
      id: com.google.android.apps.maps
- name: app_data
  endpoint:
    path: /data
    method: GET
    data_selector: data
    params: {}
- name: app_details
  endpoint:
    path: /app/details
    method: GET
    data_selector: data
    params: {}
- name: profanityfilter
  endpoint:
    path: /v1/profanityfilter
    method: POST
    data_selector: data
    params:
      text: text
      mask: mask
- name: data
  endpoint:
    path: /
    method: GET
    data_selector: data
- name: qrcodegenerator
  endpoint:
    path: /v1/qrcodegenerator
    method: POST
    data_selector: response
    params:
      value: https://myspace.com
- name: random_generator
  endpoint:
    path: /randomgenerator
    method: GET
    data_selector: data
    params:
      type: phone
      count: 10
- name: randomfacts
  endpoint:
    path: /v1/randomfacts
    method: GET
    data_selector: data
    params: {}
- name: random_identity_generator
  endpoint:
    path: /randomidentitygenerator
    method: GET
    data_selector: data
- name: random_joke
  endpoint:
    path: /randomjoke
    method: GET
    data_selector: data
- name: randompun
  endpoint:
    path: /randompun
    method: GET
    data_selector: data
- name: random_quote
  endpoint:
    path: /randomquote
    method: GET
    data_selector: data
- name: random_user
  endpoint:
    path: /v1/randomusergenerator
    method: GET
    data_selector: data
- name: random_word
  endpoint:
    path: /v1/randomwords
    method: GET
    data_selector: data
- name: recipe
  endpoint:
    path: /v1/recipe
    method: GET
    data_selector: ''
- name: recipes
  endpoint:
    path: /
    method: GET
    data_selector: data.recipes
    params: {}
- name: reverse_geocode
  endpoint:
    path: /reversegeocode
    method: GET
    data_selector: data
    params:
      lat: lat
      lon: lon
- name: word_rhymes
  endpoint:
    path: /v1/wordrhymes
    method: GET
    data_selector: null
    params:
      word: ''
- name: rhymes
  endpoint:
    path: /api/rhymes
    method: GET
    data_selector: data
- name: routing_lookup
  endpoint:
    path: /routinglookup
    method: GET
    data_selector: data
    params:
      routing: '121000358'
- name: data
  endpoint:
    path: /data
    method: GET
    data_selector: data.feed
    params: {}
- name: rss_feed
  endpoint:
    path: /v1/rsstojson
    method: POST
    data_selector: ''
    params:
      url: https://www.nasa.gov/rss/dyn/breaking_news.rss
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: data.feed
    params: {}
- name: salestax
  endpoint:
    path: /salestax
    method: GET
    data_selector: data
    params:
      zip: zip
- name: sentiment_analysis
  endpoint:
    path: /v1/sentimentanalysis
    method: POST
    data_selector: data
    params:
      text: I'm so excited that tomorrow is going to be sunny! Can't wait!
- name: data
  endpoint:
    path: /data
    method: GET
    data_selector: data
    params: {}
- name: seoscraper
  endpoint:
    path: /v1/seoscraper
    method: POST
    data_selector: response
    params:
      url: https://ebay.com
- name: imgTags
  endpoint:
    path: /imgTags
    method: GET
    data_selector: imgTags
- name: data
  endpoint:
    path: /data
    method: GET
    data_selector: data
    params: {}
- name: requestUrl
  endpoint:
    path: /requestUrl
    method: GET
    data_selector: data.requestUrl
- name: url
  endpoint:
    path: /url
    method: GET
    data_selector: data.url
- name: canonical
  endpoint:
    path: /canonical
    method: GET
    data_selector: data.canonical
- name: title
  endpoint:
    path: /title
    method: GET
    data_selector: data.title
- name: description
  endpoint:
    path: /description
    method: GET
    data_selector: data.description
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: data.image
- name: favicon
  endpoint:
    path: /favicon
    method: GET
    data_selector: data.favicons.href
- name: responseBody
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: seovalidator
  endpoint:
    path: /v1/seovalidator
    method: POST
    data_selector: data
    params:
      url: https://ebay.com
- name: silver_price
  endpoint:
    path: /v1/silverprice
    method: GET
    data_selector: data
    params:
      currency: USD
- name: solarpotential
  endpoint:
    path: /solarpotential
    method: GET
    data_selector: data
    params:
      lat: '37.7749'
      lon: '-122.4194'
- name: spamdetector
  endpoint:
    path: /spamdetector
    method: POST
    data_selector: data
    params:
      text: text
      email: email
      ip: ip
- name: spellchecker
  endpoint:
    path: /spellchecker
    method: POST
    data_selector: data
    params:
      text: I neeed to call my friend on telephine today!
- name: spf_validation
  endpoint:
    path: /spf/validate
    method: GET
    data_selector: data
    params: {}
- name: spf_validator
  endpoint:
    path: /v1/spfvalidator
    method: GET
    data_selector: ''
    params:
      domain: myspace.com
- name: spf_records
  endpoint:
    path: /spf_records
    method: GET
    data_selector: spf_records_list
- name: authorized_ips
  endpoint:
    path: /authorized_ips
    method: GET
    data_selector: authorized_ips
    params: {}
- name: spf_record
  endpoint:
    path: /spf_record
    method: GET
    data_selector: spf_record
    params: {}
- name: spf_record
  endpoint:
    path: /spf/validate
    method: GET
    data_selector: data
    params: {}
- name: sslchecker
  endpoint:
    path: /sslchecker
    method: GET
    data_selector: data
    params:
      domain: required
- name: starslookup
  endpoint:
    path: /starslookup
    method: GET
    data_selector: data
    params:
      name: Sirius
- name: state_boundaries
  endpoint:
    path: /v1/stateboundaries
    method: GET
    data_selector: ''
- name: features
  endpoint:
    path: /state_boundaries
    method: GET
    data_selector: features
- name: stock_market_open_times
  endpoint:
    path: /v1/stockmarketopentimes
    method: GET
    data_selector: data
    params:
      exchange: nyse
- name: street_address_parser
  endpoint:
    path: /streetaddressparser
    method: GET
    data_selector: data
    params:
      address: 1600 Amphitheatre Parkway, Mountain View, CA 90210
- name: subDomains
  endpoint:
    path: /subdomains
    method: GET
    data_selector: data.subDomains
    params: {}
- name: subdomainfinder
  endpoint:
    path: /v1/subdomainfinder
    method: GET
    data_selector: subdomains
    params:
      domain: google.com
- name: subdomains
  endpoint:
    path: /subdomainfinder
    method: GET
    data_selector: data.subDomains
    params: {}
- name: sudoku
  endpoint:
    path: /v1/sudoku
    method: GET
    data_selector: response
    params:
      difficulty: medium
- name: puzzle
  endpoint:
    path: /puzzle
    method: GET
    data_selector: data.puzzle
- name: solution
  endpoint:
    path: /solution
    method: GET
    data_selector: data.solution
- name: sudoku
  endpoint:
    path: /sudoku
    method: GET
- name: puzzle
  endpoint:
    path: /puzzle
    method: GET
    data_selector: data.puzzle.grid
    params: {}
- name: sudoku
  endpoint:
    path: /sudoku/generate
    method: GET
- name: puzzle
  endpoint:
    path: /sudoku/puzzle
    method: GET
    data_selector: data.puzzle
    params: {}
- name: solution
  endpoint:
    path: /sudoku/solution
    method: GET
    data_selector: data.solution
    params: {}
- name: response
  endpoint:
    path: /sudoku/generate
    method: GET
    data_selector: data
    params: {}
- name: puzzle
  endpoint:
    path: /puzzle
    method: GET
    data_selector: puzzle
- name: solution
  endpoint:
    path: /solution
    method: GET
    data_selector: solution
- name: difficulty
  endpoint:
    path: /sudoku/generate
    method: GET
    data_selector: difficulty
    params: {}
- name: sunposition
  endpoint:
    path: /sunposition
    method: GET
    data_selector: data
    params:
      lat: '37.7749'
      lon: '-122.4194'
      date: 08-13-2025
- name: sunrise_sunset
  endpoint:
    path: /v1/sunrisesunset
    method: GET
    data_selector: data
    params:
      lat: '36.7201600'
      lon: '-4.4203400'
      date: 08-13-2025
- name: swift_lookup
  endpoint:
    path: /v1/swiftlookup
    method: GET
    data_selector: data
    params:
      swift: CHASUS33ARP
- name: tenseconverter
  endpoint:
    path: /v1/tenseconverter
    method: POST
    data_selector: data
    params:
      text: text
      tense: tense
- name: embeddings
  endpoint:
    path: /v1/embeddings
    method: POST
    data_selector: text
    params: {}
- name: textlanguage
  endpoint:
    path: /v1/textlanguage
    method: POST
    data_selector: data
    params:
      text: Ceci est un exemple de texte. Il peut dÃ©tecter la langue
- name: lemmatizer
  endpoint:
    path: /lemmatizer
    method: POST
    data_selector: data
    params:
      text: The cats ran from door to door
- name: readabilityscore
  endpoint:
    path: /readabilityscore
    method: POST
    data_selector: data
    params:
      text: string
- name: text_similarity
  endpoint:
    path: /v1/textsimilarity
    method: POST
    data_selector: data
    params: {}
- name: text_styler
  endpoint:
    path: /v1/textstyler
    method: POST
    data_selector: data
    params: {}
- name: text_summarizer
  endpoint:
    path: /textsummarizer
    method: POST
    data_selector: data
    params: {}
- name: text_to_color
  endpoint:
    path: /texttocolor
    method: GET
    data_selector: data
    params:
      color: turquoise
- name: text_to_emoji
  endpoint:
    path: /texttoemoji
    method: POST
    data_selector: data.emojis
    params: {}
- name: thesaurus
  endpoint:
    path: /v1/thesaurus
    method: GET
    data_selector: data
    params:
      word: big
- name: timezonelookup
  endpoint:
    path: /timezonelookup
    method: GET
    data_selector: data
    params:
      city: city
- name: title_capitalization
  endpoint:
    path: /titlecapitalization
    method: POST
    data_selector: data
    params:
      text: comprehensive analysis of quarterly financial performance and strategic
        initiatives for sustainable growth
      style: title-case
- name: tlscheck
  endpoint:
    path: /tlscheck
    method: GET
    data_selector: data
    params:
      domain: amazon.com
- name: tordetect
  endpoint:
    path: /v1/tordetect
    method: GET
    data_selector: data
    params:
      ip: 185.189.183.143
- name: translation
  endpoint:
    path: /v1/translator
    method: POST
    data_selector: data
    params: {}
- name: trivia
  endpoint:
    path: /trivia
    method: GET
    data_selector: data
    params:
      category: general
- name: unitconverter
  endpoint:
    path: /unitconverter
    method: GET
    data_selector: data
    params:
      value: '100'
      from: lb
      to: kg
- name: url_lookup
  endpoint:
    path: /v1/urllookup
    method: POST
    data_selector: data
    params:
      url: https://www.merriam-webster.com/dictionary/documentation
- name: url_title
  endpoint:
    path: /urltitle
    method: POST
    data_selector: data
    params: {}
- name: url_unshortener
  endpoint:
    path: /urlunshortener
    method: POST
    data_selector: data
    params:
      url: https://bit.ly/3k3j4
- name: hardinesszone
  endpoint:
    path: /v1/hardinesszone
    method: GET
    data_selector: data
    params:
      zip: '97201'
- name: useragentgenerator
  endpoint:
    path: /useragentgenerator
    method: GET
    data_selector: data
    params: {}
- name: user_agent_parser
  endpoint:
    path: /v1/useragentparser
    method: POST
    data_selector: data
    params:
      ua: string
- name: username_generator
  endpoint:
    path: /v1/usernamegenerator
    method: GET
    data_selector: data
    params:
      count: '10'
      email: sean@mail.com
- name: username_profanity
  endpoint:
    path: /v1/usernameprofanity
    method: GET
    data_selector: data
    params:
      username: b00bs
- name: vpndetector
  endpoint:
    path: /v1/vpndetector
    method: GET
    data_selector: data
    params:
      ip: 103.62.49.210
- name: weatherforecast
  endpoint:
    path: /v1/weatherforecast
    method: GET
    data_selector: data
    params:
      city: San Francisco
- name: weather_seasons
  endpoint:
    path: /weatherseasons
    method: GET
    data_selector: data
    params:
      year: year
- name: images
  endpoint:
    path: /images
    method: GET
    data_selector: data.images
    params: {}
- name: webimagescraper
  endpoint:
    path: /webimagescraper
    method: POST
    data_selector: data
    params: {}
- name: images
  endpoint:
    path: /wiki/Solar_System
    method: GET
    data_selector: data.images
- name: images
  endpoint:
    path: /images
    method: GET
    data_selector: data.images
    params: {}
- name: websitereadability
  endpoint:
    path: /v1/websitereadability
    method: POST
    data_selector: data
    params:
      url: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts
- name: webscreenshots
  endpoint:
    path: /v1/webscreenshots
    method: POST
    data_selector: null
    params: {}
- name: websitetopdf
  endpoint:
    path: /v1/websitetopdf
    method: POST
    data_selector: null
    params: {}
- name: pdf_generation
  endpoint:
    path: /generate
    method: POST
    data_selector: data
- name: websitetotext
  endpoint:
    path: /v1/websitetotext
    method: POST
    data_selector: data
    params: {}
- name: whoislookup
  endpoint:
    path: /whoislookup
    method: GET
    data_selector: data
    params:
      domain: myspace.com
- name: lexicon
  endpoint:
    path: /lexicon
    method: GET
    data_selector: data
    params:
      word: listen
- name: word_opposite
  endpoint:
    path: /wordopposite
    method: GET
    data_selector: data
    params:
      word: hot
- name: word_pronunciation
  endpoint:
    path: /v1/wordpronunciation
    method: GET
    data_selector: data
    params:
      word: hello
- name: wordstonumbers
  endpoint:
    path: /v1/wordstonumbers
    method: GET
    data_selector: data
- name: working_days
  endpoint:
    path: /v1/workingdays
    method: GET
    data_selector: data
    params:
      country: US
      year: 2023
      month: 10
- name: working_days
  endpoint:
    path: /data
    method: GET
    data_selector: data
- name: holidays
  endpoint:
    path: /holidays
    method: GET
    data_selector: data.holidays
- name: worldholidays
  endpoint:
    path: /v1/worldholidays
    method: GET
    data_selector: ''
    params:
      country: US
- name: holidays
  endpoint:
    path: /holidays
    method: GET
    data_selector: data.holidays
    params: {}
- name: news_article
  endpoint:
    path: /news/articles
    method: GET
    data_selector: articles
- name: news
  endpoint:
    path: /v1/news
    method: GET
    data_selector: data
    params:
      category: technology
- name: news
  endpoint:
    path: /news
    method: GET
    data_selector: articles
- name: tweets
  endpoint:
    path: /2/tweets
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /2/users
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: articles
    params: {}
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: articles
    params: {}
- name: articles
  endpoint:
    path: /news/articles
    method: GET
    data_selector: articles
- name: tweets
  endpoint:
    path: /api/v1/tweets
    method: GET
    data_selector: data
    params: {}
- name: news_articles
  endpoint:
    path: /news/articles
    method: GET
    data_selector: articles
- name: news_articles
  endpoint:
    path: /world-news/articles
    method: GET
    data_selector: articles
- name: tweets
  endpoint:
    path: /api/v1/tweets
    method: GET
    data_selector: data
    params: {}
- name: worldtime
  endpoint:
    path: /v1/worldtime
    method: GET
    data_selector: data.foundCities
    params:
      city: San Francisco
- name: earthquakes
  endpoint:
    path: /earthquakes
    method: GET
    data_selector: data.earthquakes
    params:
      incremental: earthquakes_LastUpdated
- name: earthquake
  endpoint:
    path: /v1/earthquake
    method: GET
- name: earthquakes
  endpoint:
    path: /data
    method: GET
    data_selector: earthquakes
    params: {}
- name: xmltojson
  endpoint:
    path: /xmltojson
    method: POST
- name: zipcodes
  endpoint:
    path: /zipcodes
    method: GET
    data_selector: data
    params:
      zip: '64082'
- name: chucknorris
  endpoint:
    path: /v1/chucknorris
    method: GET
    data_selector: data
notes:
- API key stored securely in environment variables
- Implement exponential backoff when you receive rate limit errors
- All requests must include X-API-Key and Content-Type headers.
- All API requests require authentication via the X-API-Key header.
- Ensure your API key is properly configured in Postman's environment variables.
- Requires API key in the request header
- 'Token Usage: 10 per call'
- Data includes app details such as ID, title, description, and genres.
- This API requires authentication via API key.
- 'All API responses follow a consistent structure with fields: status, error, and
  data.'
- Requires API key for authentication
- 'Token Usage: 5 per call'
- Requires API key included in the request header.
- This API requires authentication via API key. Include your API key in the request
  header.
- Some objects like Contact may return nulls in deeply nested fields
- Dates are provided in an array format with various attributes.
- Requires API key to access
- Provides loan calculation results including monthly payment and amortization schedule.
- Response includes various metadata about featured content on Myspace.
- Requires API key in the header
- Response formats include JSON, XML, and YAML
- Some features not available in all countries
- Navigation isn't intended to be used by oversized or emergency vehicles
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some imgTags may return nulls in alt fields
- The API returns data related to SEO information of eBay pages.
- Response includes several images and their alt texts.
- Requires API key for access.
- Returns authorized IPs and SPF record details based on the provided domain
- SPF validation records may include multiple authorized IPs.
- Uses SPF validation to check authorized IPs.
- Uses GET method to retrieve SPF records
- Response includes a count of subdomains found and their associated IP records.
- Difficulty levels include 'easy', 'medium', and 'hard'.
- This API provides reliable and fast access to text readability score data through
  a simple REST interface.
- Requires API key to access the service
- API requires authentication via API key.
- Response includes holidays for the specified year and country.
- Requires setup of developer account and API keys.
- Rate limits apply to API calls.
- Requires setup of connected app in X
- Twitter's API access continues to be a mess.
- Response includes multiple earthquake records with details such as magnitude, location,
  and time.
errors:
- '401 Unauthorized: unauthorized'
- '429: Rate limit exceeded'
- '400: Bad request'
- '401: Unauthorized'
- 'INVALID_API_KEY: Invalid or missing API key'
- '403: API key lacks permission for this endpoint'
- '404: Endpoint or resource not found'
- '400 Bad Request: Invalid parameters or malformed request'
- '401 Unauthorized: Invalid or missing API key'
- '403 Forbidden: API key suspended or insufficient permissions'
- '429 Too Many Requests: Rate limit exceeded'
- '500 Internal Server Error: Server error, please try again'
- '401 Unauthorized: Invalid API key provided'
- '403 Forbidden: API key has been suspended'
- 429 Too Many Requests - Rate Limit Exceeded
- 402 Payment Required - Monthly Quota Exceeded
- 'Authentication Errors (401): Verify your API key is set correctly in the environment
  variables and is active in your dashboard'
- 'Request Timeouts: Check your internet connection - some endpoints may have longer
  processing times'
- 'Rate Limiting (429): Add delays between requests in Collection Runner or reduce
  test frequency'
- 'Missing Responses: Verify you''re using the correct HTTP method and all required
  parameters are provided'
- '400: Bad Request'
- '403: Forbidden'
- '429: Too Many Requests'
- '500: Internal Server Error'
- '400: Bad Request - Invalid request parameters or malformed request'
- '401: Unauthorized - Missing or invalid API key'
- '403: Forbidden - API key does not have permission for this endpoint'
- '429: Too Many Requests - Rate limit exceeded, please slow down requests'
- '500: Internal Server Error - Server error, please try again later'
- '401 Unauthorized: Ensure the API key is valid'
- '400: Bad Request: Invalid request parameters or malformed request'
- '401: Unauthorized: Missing or invalid API key'
- '403: Forbidden: API key does not have permission for this endpoint'
- '429: Too Many Requests: Rate limit exceeded, please slow down requests'
- '500: Internal Server Error: Server error, please try again later'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or permissions'
- '400 Bad Request: Invalid request parameters or malformed request'
- '401 Unauthorized: Missing or invalid API key'
- '403 Forbidden: API key does not have permission for this endpoint'
- '429 Too Many Requests: Rate limit exceeded, please slow down requests'
- '500 Internal Server Error: Server error, please try again later'
- '200 OK: Indicates a successful request'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Invalid API key'
- '400 Bad Request: Check the request format and parameters.'
- '401 Unauthorized: Check your API key.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Check if the API key is correct'
- '401 Unauthorized: Recheck API key'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 1 per call
- '200 OK: Request was successful'
- '400 Bad Request: Invalid input parameters'
- '400 Bad Request: Check the input data format.'
- '404 Not Found: Ensure the endpoint exists.'
- 'INVALID_DOMAIN: The domain provided is not valid'
- 'SPF_RECORD_NOT_FOUND: No SPF record found for the domain'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Invalid or expired token.'
- '404 Not Found: Resource does not exist.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - API key
client:
  base_url: https://api.apiverve.com/v1/
  auth:
    type: apikey
    location: header
    header_name: X-API-Key
source_metadata: null
