resources:
- name: send_otp
  endpoint:
    path: /otp/send
    method: POST
- name: User Management
  endpoint:
    path: /company/access/members
    method: GET
    data_selector: members
    params: {}
- name: Role Management
  endpoint:
    path: /company/access/roles
    method: GET
    data_selector: roles
    params: {}
- name: send_otp
  endpoint:
    path: /reference/send_otp_post-1
    method: POST
- name: verify_otp
  endpoint:
    path: /reference/verify_otp_post-1
    method: POST
- name: block_number
  endpoint:
    path: /reference/post_otp_blocked-1
    method: POST
- name: delete_blocked_number
  endpoint:
    path: /reference/delete_otp_blocked-1
    method: DELETE
- name: send_sms
  endpoint:
    path: /reference/send_sms_post-1
    method: POST
- name: send_bulk_sms
  endpoint:
    path: /reference/send_sms_bulk_post
    method: POST
- name: block_number
  endpoint:
    path: /reference/post_otp_blocked-1
    method: POST
- name: delete_blocked_number
  endpoint:
    path: /reference/delete_otp_blocked-1
    method: DELETE
- name: send_otp
  endpoint:
    path: /demo/send_otp
    method: POST
- name: verify_otp
  endpoint:
    path: /demo/verify_otp
    method: POST
- name: WhatsApp Single Message
  endpoint:
    path: /demo/whatsapp/single-message
    method: POST
    data_selector: response
    params: {}
- name: message_created
  endpoint:
    path: /webhook/message_created
    method: POST
    data_selector: message
    params: {}
- name: message_updated
  endpoint:
    path: /webhook/message_updated
    method: POST
    data_selector: message
    params: {}
- name: message_created
  endpoint:
    path: /webhook/message_created
    method: POST
    data_selector: message
    params: {}
- name: message_updated
  endpoint:
    path: /webhook/message_updated
    method: POST
    data_selector: message
    params: {}
- name: transaction_logs
  endpoint:
    path: /transaction-logs
    method: GET
    data_selector: records
- name: transaction_logs_single_message
  endpoint:
    path: /transaction-logs/single-message
    method: GET
    data_selector: records
- name: transaction_logs_bulk_message
  endpoint:
    path: /transaction-logs/bulk-message
    method: GET
    data_selector: records
- name: bulk_send
  endpoint:
    path: /whatsapp/bulk/send
    method: POST
    data_selector: messages
    params: {}
- name: transaction_details
  endpoint:
    path: /transaction/details
    method: GET
    data_selector: transactions
- name: transaction_status
  endpoint:
    path: /transaction/status
    method: GET
    data_selector: statuses
- name: certificate_check
  endpoint:
    path: /api/electronic_certificate/check
    method: POST
- name: certificate_verification
  endpoint:
    path: /data-verification/certificate-electronic/verify
    method: POST
    data_selector: data
    params: {}
- name: nik_validation
  endpoint:
    path: /nik_validation
    method: POST
    data_selector: transaction_error
    params: {}
- name: transaction_details
  endpoint:
    path: /api/transaction/details
    method: GET
    data_selector: transactions
- name: transaction_status
  endpoint:
    path: /api/transaction/status
    method: GET
    data_selector: statuses
- name: certificate_verification
  endpoint:
    path: /data-verification/certificate-electronic/verify
    method: POST
    data_selector: data
- name: tax_verification_by_nik
  endpoint:
    path: /data-verification/tax/nik/verify
    method: GET
- name: tax_verification_by_npwp
  endpoint:
    path: /data-verification/tax/npwp/verify
    method: GET
- name: nik_validation
  endpoint:
    path: /validation/nik
    method: POST
    data_selector: transaction_error
    params: {}
- name: birth_date_validation
  endpoint:
    path: /validation/birth_date
    method: POST
    data_selector: transaction_error
    params: {}
- name: selfie_photo_validation
  endpoint:
    path: /validation/selfie_photo
    method: POST
    data_selector: transaction_error
    params: {}
- name: ktp_photo_validation
  endpoint:
    path: /validation/ktp_photo
    method: POST
    data_selector: transaction_error
    params: {}
- name: email_validation
  endpoint:
    path: /validation/email
    method: POST
    data_selector: transaction_error
    params: {}
- name: phone_validation
  endpoint:
    path: /validation/phone
    method: POST
    data_selector: transaction_error
    params: {}
- name: id_verification
  endpoint:
    path: /data-verification/id-verification/verify
    method: POST
- name: Tax Number Verification by NIK
  endpoint:
    path: /data-verification/tax/nik/verify
    method: GET
- name: Tax Number Verification by NPWP
  endpoint:
    path: /data-verification/tax/npwp/verify
    method: GET
- name: Transaction Details
  endpoint:
    path: /transactions/details
    method: GET
    data_selector: transactions
    params:
      filter: date
- name: ID Verification
  endpoint:
    path: /data-verif/id-verification/demo
    method: GET
- name: Enroll
  endpoint:
    path: /docs/enroll
    method: POST
- name: Delete Enroll
  endpoint:
    path: /docs/delete-enroll
    method: DELETE
- name: Verify
  endpoint:
    path: /docs/verify
    method: POST
- name: Compare
  endpoint:
    path: /docs/compare
    method: POST
- name: Search
  endpoint:
    path: /docs/search
    method: GET
- name: Liveness
  endpoint:
    path: /docs/liveness
    method: POST
- name: face_recognition
  endpoint:
    path: /face/recognition
    method: POST
    data_selector: results
- name: id_verification
  endpoint:
    path: /data-verification/id-verification/verify
    method: POST
    data_selector: data
- name: transaction_details
  endpoint:
    path: /transaction/details
    method: GET
    data_selector: transactions
- name: enroll
  endpoint:
    path: /v1/face/enroll
    method: POST
    data_selector: response
    params: {}
- name: delete_enroll
  endpoint:
    path: /v1/face/enroll
    method: DELETE
    data_selector: ''
- name: Enroll
  endpoint:
    path: /enroll
    method: POST
- name: Delete Enroll
  endpoint:
    path: /delete-enroll
    method: DELETE
- name: Verify
  endpoint:
    path: /verify
    method: POST
- name: Compare
  endpoint:
    path: /compare
    method: POST
- name: Search
  endpoint:
    path: /search
    method: GET
- name: Liveness
  endpoint:
    path: /liveness
    method: POST
- name: face_verify
  endpoint:
    path: /v1/face/verify
    method: POST
    data_selector: response
    params: {}
- name: enroll
  endpoint:
    path: /api/enroll
    method: POST
- name: verify
  endpoint:
    path: /api/verify
    method: POST
- name: compare
  endpoint:
    path: /api/compare
    method: POST
- name: liveness
  endpoint:
    path: /api/liveness
    method: POST
- name: search
  endpoint:
    path: /api/search
    method: POST
- name: compare
  endpoint:
    path: /v1/face/compare
    method: POST
- name: Enroll
  endpoint:
    path: /api/enroll
    method: POST
    data_selector: data
- name: Delete Enroll
  endpoint:
    path: /api/delete-enroll
    method: DELETE
    data_selector: data
- name: Verify
  endpoint:
    path: /api/verify
    method: POST
    data_selector: data
- name: Compare
  endpoint:
    path: /api/compare
    method: POST
    data_selector: data
- name: Search
  endpoint:
    path: /api/search
    method: GET
    data_selector: data
- name: enroll
  endpoint:
    path: /v1/face/enroll
    method: POST
    data_selector: response
    params: {}
- name: face_search
  endpoint:
    path: /face/search
    method: POST
    data_selector: matches
- name: delete_enroll
  endpoint:
    path: /v1/face/enroll
    method: DELETE
- name: liveness
  endpoint:
    path: /v1/face/liveness
    method: POST
- name: face_verify
  endpoint:
    path: /v1/face/verify
    method: POST
- name: face_service
  endpoint:
    path: /face/service
    method: POST
    data_selector: status
    params: {}
- name: compare
  endpoint:
    path: /v1/face/compare
    method: POST
- name: extract_ktp_sync
  endpoint:
    path: /ocr/extract-ktp-sync
    method: POST
    data_selector: data
    params: {}
- name: extract_ktp_async
  endpoint:
    path: /ocr/extract-ktp-async
    method: POST
    data_selector: data
    params: {}
- name: get_extract_ktp_async_result
  endpoint:
    path: /ocr/get-extract-ktp-async/result
    method: GET
    data_selector: data
    params: {}
- name: extract_ktp_sync
  endpoint:
    path: /api/extract-ktp-sync
    method: POST
    data_selector: text
    params: {}
- name: extract_ktp_async
  endpoint:
    path: /api/extract-ktp-async
    method: POST
    data_selector: text
    params: {}
- name: get_extract_ktp_async_result
  endpoint:
    path: /api/get-extract-ktp-async/result
    method: GET
    data_selector: text
    params: {}
- name: face_search
  endpoint:
    path: /face/search
    method: POST
    data_selector: matches
- name: liveness
  endpoint:
    path: /v1/face/liveness
    method: POST
- name: ktp_extract
  endpoint:
    path: /v2/ktp/extract
    method: POST
- name: status_code_face
  endpoint:
    path: /docs/status-code-face
    method: GET
    data_selector: codes
- name: get_extract_ktp_async
  endpoint:
    path: /ktp/id/extract-async/result
    method: GET
- name: document_extraction
  endpoint:
    path: /api/document/extract
    method: POST
    data_selector: data
    params: {}
- name: extract_ktp_sync
  endpoint:
    path: /extract-ktp-sync
    method: POST
    data_selector: result
- name: extract_ktp_async
  endpoint:
    path: /extract-ktp-async
    method: POST
    data_selector: result
- name: get_extract_ktp_async_result
  endpoint:
    path: /get-extract-ktp-async/result
    method: GET
    data_selector: result
- name: OCR Document
  endpoint:
    path: /docs/document-scanning
    method: GET
    data_selector: transactions
    params: {}
- name: Transaction Logs
  endpoint:
    path: /docs/document-scanning/transaction-logs
    method: GET
    data_selector: logs
    params: {}
- name: Summary
  endpoint:
    path: /docs/document-scanning/summary
    method: GET
    data_selector: summary
    params: {}
- name: ocr_ktp_demo
  endpoint:
    path: /docs/sms-otp
    method: POST
    data_selector: result
- name: ocr_ktp_summary
  endpoint:
    path: /docs/sms-otp
    method: GET
    data_selector: summary
- name: ocr_ktp_transaction_logs
  endpoint:
    path: /docs/sms-otp
    method: GET
    data_selector: logs
- name: stnk
  endpoint:
    path: /v2/ocr/stnk
    method: POST
    data_selector: data
    params: {}
- name: extract_ktp_sync
  endpoint:
    path: /api/v2.0.0/extract
    method: POST
    data_selector: text
- name: extract_async
  endpoint:
    path: /api/v2.0.0/extract-async
    method: POST
    data_selector: text
- name: get_extract_async_result
  endpoint:
    path: /api/v2.0.0/extract-async/result
    method: GET
    data_selector: result
- name: passport
  endpoint:
    path: /v2/ocr/passport
    method: POST
- name: sim
  endpoint:
    path: /ocr/sim
    method: POST
- name: extract_ktp_sync
  endpoint:
    path: /v2/ktp/extract
    method: POST
    data_selector: data
    params: {}
- name: npwp
  endpoint:
    path: /ocr/npwp
    method: POST
    data_selector: data
    params: {}
- name: get_extract_ktp_async
  endpoint:
    path: /ktp/id/extract-async/result
    method: GET
- name: generic_id
  endpoint:
    path: /v2/ocr/generic_id
    method: POST
    data_selector: data
    params: {}
- name: get_extract_ktp_async
  endpoint:
    path: /docs/get-extract-ktp-async
    method: GET
- name: bpkb_ik
  endpoint:
    path: /v2/ocr/bpkb_ik
    method: POST
    data_selector: data
    params: {}
- name: bpkb_ip
  endpoint:
    path: /v2/ocr/bpkb_ip
    method: POST
    data_selector: data
    params: {}
- name: document_extraction
  endpoint:
    path: /api/document/extract
    method: POST
    data_selector: data
    params: {}
- name: Other Document
  endpoint:
    path: /document/scanning/other
    method: GET
    data_selector: transactions
    params: {}
- name: id_forgery
  endpoint:
    path: /v2/ktp/idforgery
    method: POST
- name: stnk
  endpoint:
    path: /v2/ocr/stnk
    method: POST
    data_selector: data
    params: {}
- name: passport
  endpoint:
    path: /v2/ocr/passport
    method: POST
    data_selector: data
    params: {}
- name: watchlist_screening
  endpoint:
    path: /watchlist-screening/verify
    method: POST
    data_selector: response
- name: sim
  endpoint:
    path: /ocr/sim
    method: POST
    data_selector: data
    params: {}
- name: npwp
  endpoint:
    path: /ocr/npwp
    method: POST
- name: single_search
  endpoint:
    path: /api/single_search
    method: POST
- name: bulk_search
  endpoint:
    path: /api/bulk_search
    method: POST
- name: generic_id
  endpoint:
    path: /ocr/generic_id
    method: POST
    data_selector: data
- name: bpkb_ik
  endpoint:
    path: /ocr/bpkb_ik
    method: POST
    data_selector: data
    params: {}
- name: bpkb_ip
  endpoint:
    path: /ocr/bpkb_ip
    method: POST
    data_selector: data
    params: {}
- name: ID Forgery Detection
  endpoint:
    path: /api/request/forgery
    method: POST
    data_selector: result
    params: {}
- name: id_forgery
  endpoint:
    path: /v2/ktp/idforgery
    method: POST
    data_selector: data
    params: {}
- name: liveness
  endpoint:
    path: /v1/face/liveness
    method: POST
- name: deepfake
  endpoint:
    path: /v1/face/deepfake
    method: POST
- name: license_check
  endpoint:
    path: /v1/license/{license_id}/check
    method: POST
- name: generate_key
  endpoint:
    path: /v1/encryption/generate-key
    method: POST
- name: id_forgery
  endpoint:
    path: /api/request/response/id_forgery
    method: GET
- name: liveness
  endpoint:
    path: /liveness
    method: POST
    data_selector: data
- name: watchlist_screening_verify
  endpoint:
    path: /watchlist-screening/verify
    method: POST
- name: liveness
  endpoint:
    path: /liveness
    method: POST
- name: proxy_middleware
  endpoint:
    path: /proxy
    method: POST
- name: Profile Types
  endpoint:
    path: /watchlist/profile-types
    method: GET
    data_selector: Profile Types
- name: Crime Categories
  endpoint:
    path: /watchlist/crime-categories
    method: GET
    data_selector: Crime Categories
- name: Risk Level
  endpoint:
    path: /watchlist/risk-level
    method: GET
    data_selector: Risk Level
- name: liveness_face
  endpoint:
    path: /v1/face/liveness
    method: POST
    data_selector: response
- name: license_check
  endpoint:
    path: /v1/license/{license_id}/check
    method: POST
    data_selector: response
- name: transaction_logs
  endpoint:
    path: /transaction-logs
    method: GET
    data_selector: logs
    params: {}
- name: ResultPageTheme
  endpoint:
    path: /resultPageTheme
    method: GET
    data_selector: frameContainer
    params: {}
- name: SharedTheme
  endpoint:
    path: /sharedTheme
    method: GET
    data_selector: background
    params: {}
- name: ScreenOrientation
  endpoint:
    path: /screenOrientation
    method: GET
    data_selector: orientation
    params: {}
- name: VerificationPageContent
  endpoint:
    path: /verificationPageContent
    method: GET
    data_selector: title
    params: {}
- name: VerificationPageTheme
  endpoint:
    path: /verificationPageTheme
    method: GET
    data_selector: frameContainer
    params: {}
- name: TypographyTheme
  endpoint:
    path: /typographyTheme
    method: GET
    data_selector: fontFamily
    params: {}
- name: ocr_process
  endpoint:
    path: /ocr
    method: POST
    data_selector: data
- name: liveness
  endpoint:
    path: /v1/face/liveness
    method: POST
- name: deepfake
  endpoint:
    path: /v1/face/deepfake
    method: POST
- name: license_check
  endpoint:
    path: /v1/license/{license_id}/check
    method: POST
- name: generate_key
  endpoint:
    path: /v1/encryption/generate-key
    method: POST
- name: ocr
  endpoint:
    path: /ocr/extract/correction
    method: POST
    data_selector: data
    params: {}
- name: extract_async
  endpoint:
    path: /ocr/extract-async
    method: POST
    data_selector: data
    params: {}
- name: extract_async_result
  endpoint:
    path: /ocr/extract-async/result
    method: GET
    data_selector: data
    params: {}
- name: license_check
  endpoint:
    path: /license/{license_id}/check
    method: GET
    data_selector: data
    params: {}
- name: license_check
  endpoint:
    path: /license/{license_id}/check
    method: POST
    data_selector: response
- name: ocr_correction
  endpoint:
    path: /ocr/extract/correction
    method: PATCH
    data_selector: response
- name: liveness
  endpoint:
    path: /liveness
    method: POST
    data_selector: data
- name: CheckFailedTheme
  endpoint:
    path: /CheckFailedTheme
    method: GET
    data_selector: CheckFailedTheme
    params: {}
- name: ProcessingContent
  endpoint:
    path: /processing/content
    method: GET
    data_selector: message
- name: SubmissionDialogContent
  endpoint:
    path: /submission/dialog
    method: GET
    data_selector: dialog
- name: liveness_face
  endpoint:
    path: /v1/face/liveness
    method: POST
    data_selector: response
- name: license_check
  endpoint:
    path: /v1/license/{license_id}/check
    method: POST
    data_selector: response
- name: send_otp
  endpoint:
    path: /reference/send_otp_post-1
    method: POST
- name: verify_otp
  endpoint:
    path: /reference/verify_otp_post-1
    method: POST
- name: block_number
  endpoint:
    path: /reference/post_otp_blocked-1
    method: POST
- name: delete_blocked_number
  endpoint:
    path: /reference/delete_otp_blocked-1
    method: DELETE
- name: liveness
  endpoint:
    path: /liveness
    method: POST
    data_selector: data
- name: ResultPageTheme
  endpoint:
    path: /ResultPageTheme
    method: GET
- name: SharedTheme
  endpoint:
    path: /SharedTheme
    method: GET
- name: ScreenOrientation
  endpoint:
    path: /ScreenOrientation
    method: GET
- name: Url
  endpoint:
    path: /Url
    method: GET
- name: VerificationPageContent
  endpoint:
    path: /VerificationPageContent
    method: GET
- name: VerificationPageTheme
  endpoint:
    path: /VerificationPageTheme
    method: GET
- name: TypographyTheme
  endpoint:
    path: /TypographyTheme
    method: GET
- name: liveness_face
  endpoint:
    path: /v1/face/liveness
    method: POST
    data_selector: response
    params: {}
- name: license_check
  endpoint:
    path: /v1/license/{license_id}/check
    method: POST
    data_selector: response
    params: {}
- name: ocr
  endpoint:
    path: /ocr
    method: GET
- name: OCR Process
  endpoint:
    path: /ocr
    method: POST
    data_selector: data.result
    params: {}
- name: ocr_process
  endpoint:
    path: /ocr/extract
    method: POST
- name: ocr_result
  endpoint:
    path: /ocr/extract-async/result
    method: GET
- name: license_check
  endpoint:
    path: /license/{license_id}/check
    method: GET
- name: license_check
  endpoint:
    path: /license/{license_id}/check
    method: POST
    data_selector: response
    params: {}
- name: ocr_correction
  endpoint:
    path: /ocr/extract/correction
    method: PATCH
    data_selector: response
    params: {}
- name: license_check
  endpoint:
    path: /license/{license_id}/check
    method: POST
    data_selector: response
- name: ocr_correction
  endpoint:
    path: /ocr/extract/correction
    method: PATCH
    data_selector: response
- name: camera_not_found
  endpoint:
    path: /camera/not_found
    method: POST
    data_selector: subject
    params: {}
- name: camera_permission_denied
  endpoint:
    path: /camera/permission_denied
    method: POST
    data_selector: subject
    params: {}
- name: license_verification_success
  endpoint:
    path: /license/verification/success
    method: POST
    data_selector: subject
    params: {}
- name: verification_success
  endpoint:
    path: /verification/success
    method: POST
    data_selector: subject
    params: {}
- name: frameContainer
  endpoint:
    path: frameContainer.backgroundColor
    method: GET
- name: title
  endpoint:
    path: title.color
    method: GET
- name: message
  endpoint:
    path: message.color
    method: GET
- name: photoFrame
  endpoint:
    path: photoFrame.borderColor
    method: GET
- name: action
  endpoint:
    path: action.retake.backgroundColor
    method: GET
- name: chips
  endpoint:
    path: chips.badQuality.backgroundColor
    method: GET
- name: infoMessage
  endpoint:
    path: infoMessage.color
    method: GET
- name: End
  endpoint:
    path: End.message.color
    method: GET
- name: ProcessingContent
  endpoint:
    path: /api/processing
    method: GET
    data_selector: message
- name: SubmissionDialogContent
  endpoint:
    path: /api/submission-dialog
    method: GET
    data_selector: dialog
- name: send_otp
  endpoint:
    path: /reference/send_otp_post-1
    method: POST
    data_selector: response
    params: {}
- name: verify_otp
  endpoint:
    path: /reference/verify_otp_post-1
    method: POST
    data_selector: response
    params: {}
- name: block_number
  endpoint:
    path: /reference/post_otp_blocked-1
    method: POST
    data_selector: response
    params: {}
- name: delete_blocked_number
  endpoint:
    path: /reference/delete_otp_blocked-1
    method: DELETE
    data_selector: response
    params: {}
- name: Liveness Verification
  endpoint:
    path: /liveness/face
    method: POST
- name: License Check
  endpoint:
    path: /license/{license_id}/check
    method: POST
- name: liveness_face
  endpoint:
    path: /v1/face/liveness
    method: POST
    data_selector: response
- name: license_check
  endpoint:
    path: /v1/license/{license_id}/check
    method: POST
    data_selector: response
- name: OCR
  endpoint:
    path: /ocr
    method: POST
    data_selector: data
    params: {}
- name: license_check
  endpoint:
    path: /license/{license_id}/check
    method: POST
    data_selector: content
- name: ocr_correction
  endpoint:
    path: /ocr/extract/correction
    method: PATCH
    data_selector: content
notes:
- Rate limit of 50 RPS is applied to SMS service.
- Version changes usually need to be applied immediately to the latest version.
- The first user assigned to your company will have the default 'Super Admin' role.
- Only role that have access to 'Company Access' can access and manage both User Management
  and Role Management.
- Maximum Application ID for each user is 3 Application ID.
- There is a maximum rate limit of 50 RPS for each CLIENT.
- 'SLA Availability: Monthly'
- OTP Length ranges from 4 to 10 characters, default is 6 characters
- Expiry time for OTP defaults to 300 seconds
- The template will take at least 1x24 hours to review.
- Only WABA that's owned by your company can subscribe to the webhook.
- Webhook events will not instantly reflect the changes of unsubscribing an event.
- Filters can be added on the period for various reports.
- Application ID (Production) > only Real Mode (you can contact our representatives
  for this feature)
- WhatsApp Business Account required
- Approved MARKETING / UTILITY Message Template needed
- WhatsApp Bulk Send Message allows sending notification messages to many WhatsApp
  numbers worldwide in one go.
- Requires Application ID (Production) in Real Mode, WhatsApp Business Account, and
  approved MARKETING / UTILITY Message Template.
- Transaction errors may occur for various validation formats.
- All transactions with response code 200 will be charged.
- Transactions can be exported into CSV or XLSX.
- Liveness detection is the ability of a system to detect if a face is real or fake.
- Avoid taking images in backlight or low light conditions as it may reduce the visibility
  of the facial features.
- Recommended timeout setting is 60 seconds.
- 'The minimum resolution of the image is Height: 640 x Width: 480.'
- 'Minimum size for each image: it’s recommended to be 200kb with minimum quality
  is JPEG 90%.'
- Prioritize for users to directly capture face images from mobile phone camera.
- Hitting the Verihubs Tax Number Verification endpoint(s) with both the NPWP and
  NIK in the same endpoint will result in an INVALID_PAYLOAD response.
- This service depends on connection to Data Source. Based on our monitoring, we highly
  suggest that the setting for timeout is 60 seconds.
- The transactions can be exported into CSV or XLSX.
- Application ID must be preset by Verihubs team
- The transaction status that will be defined by whether the transaction is SUCCESS
  or FAILED.
- The mode of the transaction. Whether the quota-limited TESTING mode, or production
  ready LIVE mode.
- The Application ID must be preset by Verihubs team.
- The transaction status can be SUCCESS or FAILED.
- Transactions can be filtered by date, application name, status, and mode.
- Quota is required for each service.
- Ensure the application ID is valid before making requests.
- MANAGE BASIC AUTHENTICATION is used as an extra authentication when you use callback
  URL parameter in extract-async API.
- This table applies for all Face Services endpoints (both Face Recognition and Liveness).
- Transaction logs can be downloaded in form of XLS or CSV
- This table applies for all OCR KTP endpoints. Response given will include the following
  status code.
- You can filter the data by date period (max selected date from 90 days ago), application
  name or id, document type and mode.
- We are currently migrating the API request method from GET to POST started from
  October 1st, 2024 to January 2nd, 2025.
- Your PIN works as replacement for your API-Key.
- The PIN is case sensitive.
- Monitor feature requires subscription to Watchlist Screening Service.
- You can check the profiles that received updates if you opt to turn on the monitor
  feature in the Search page.
- 'The update received can be in two ways: Profile Update and Sanction Update.'
- To not accidentally leak of AppID and APIKey for passive liveness, always pass them
  to an intermediate endpoint.
- The previously used GET method will be deprecated by January 2nd, 2025.
- Replace <replace-me-with-app-id> and <replace-me-with-api-key> with the App-ID and
  APIKey provided for your company.
- This page enable you to look at the flow of the Watchlist Screening service before
  making decision to go live.
- The PIN works as a replacement for your API-Key.
- You cannot access the monitor if you are not subscribing to Watchlist Screening
  Service.
- It is recommended to use browsers that support ES6 (ECMAScript 2015).
- This is where you can see the summary of VERIHUBS' services and some shortcuts to
  start testing our product.
- To not accidentally leak of AppID and APIKey for OCR, always pass them to an intermediate
  endpoint and append the AppID and APIKey header before reaching Verihubs' OCR service
  in production.
- Sandbox is an environment where you can do API demo testing, in which you can test
  responses and test integration with your own system.
- Always pass AppID and APIKey to an intermediate endpoint to avoid leaking credentials.
- To not accidentally leak of AppID and APIKey for passive liveness, always pass them
  to an intermediate endpoint and append the AppID and APIKey header before reaching
  Verihubs' passive liveness service in production.
- OCR WebSDK instance builder for using OCR WebSDK
- To not accidentally leak of AppID and APIKey for passive liveness, always pass them
  to an intermediate endpoint (like a proxy middleware) and append the AppID and APIKey
  header before reaching Verihubs' passive liveness service in production.
- This configuration supports both synchronous and asynchronous processing flows.
- Replace <replace-me-with-app-id> and <replace-me-with-api-key> with the App-ID and
  API Key provided for your company.
- Sender ID registration takes about 14 working days.
- Please inform our representatives to connect your WABA to your desired app-id.
- To not accidentally leak of AppID and APIKey for OCR, always pass them to an intermediate
  endpoint (like a proxy middleware) and append the AppID and APIKey header before
  reaching Verihubs' OCR service in production.
- Replace the endpoint with the correct endpoint, and replace <replace-me-with-app-id>
  and <replace-me-with-api-key> to the App-ID and APIKey provided for your company.
- Best practice to classify messages through the subject of each message.
- OTP Length setting allows customization from 4 to 10 characters, default is 6.
- Expiry time for OTP can be customized in seconds, defaults to 300 seconds.
- Uses OAuth2 with client credentials — requires proper setup of App ID and API Key
- Always pass App-ID and API-Key to an intermediate endpoint for security
- Replace <replace-me-with-app-id> and <replace-me-with-api-key> to the App-ID and
  APIKey provided for your company.
- Always pass AppID and APIKey to an intermediate endpoint to avoid leaks.
errors:
- 'Rate limit exceeded: Contact Customer Success for requests exceeding the limit.'
- '429 Too Many Requests: Anomaly detected, request rejected'
- '400: Invalid Payload'
- '401: Authorization Failed'
- '403: Forbidden'
- '429: Too Many Request'
- '500: Internal Server Error'
- '400: Transaction error due to a validation error'
- '200: Success'
- '400: Bad Request'
- '400: Invalid Payload; Transaction that is considered failed due to validation errors'
- '401: Authorization Failed; Possible reason: Sandbox App ID and/or API Key used
  in Production mode transaction'
- '403: Forbidden; The transaction is in Testing mode and not enough remaining quota'
- '429: Too Many Request; Spam Error as the transaction is read as spam'
- '500: Internal Server Error in Datasource; The transaction failed due to server
  error in datasource'
- '400: Bad Request; This is a transaction that is considered failed due to validation
  errors, an error_field will appear explaining the error.'
- '401: Authorization Failed; The transaction cannot proceed because it is unauthorized.'
- '403: Insufficient Quota; The transaction failed due to insufficient quota, please
  contact Verihubs Customer Success (CS) Team.'
- '429: Spam Error; The transaction is read as spam, please wait a few seconds before
  re-performing the hit process.'
- '500: Internal Server Error; The transaction failed due to a server error that could
  be caused by data source constraints, timeout, internal error.'
- 'INVALID_PAYLOAD: Invalid Payload; Failed transaction due to validation errors.'
- 'UNAUTHORIZED: Authorization Failed; Unauthorized transaction due to Application
  ID and/or API-Key issue.'
- 'FORBIDDEN: Forbidden; The transaction is in Testing mode and you have 0 remaining
  quota.'
- 'TOO_MANY_REQUEST: Too Many Request; Spam Error as the transaction is read as spam.'
- 'INTERNAL_SERVER_ERROR: Internal Server Error; The transaction failed due to an
  unexpected error.'
- 'FORBIDDEN: The transaction is in Testing mode and you have 0 (zero) remaining quota.'
- 'TOO_MANY_REQUEST: Spam Error as the transaction is read as spam.'
- 'INTERNAL_SERVER_ERROR: The transaction failed due to an unexpected error.'
- Transaction ID must be unique per transaction.
- Maximum account transaction up to 90 days prior.
- '400 INVALID_PAYLOAD: no value in payload or empty string more than 1'
- '400 INVALID_PAYLOAD_IMAGE_MISSING: invalid payload image not a standard b64/url
  or image empty string'
- '400 INVALID_PAYLOAD_SUBJECT_ID_MISSING: invalid payload subject id is empty string'
- '400 INVALID_PAYLOAD_IMAGE_SIZE: invalid payload image size too large'
- '400 MISSING_PAYLOAD_IMAGE: missing payload image'
- '400 INVALID_PAYLOAD_IMAGE_TIMEOUT: timeout getting image from url in 15 seconds'
- '400 FACE_NOT_DETECTED: face not detected from image'
- '401 Unauthorized: Authorization Failed; Transaction that unauthorized due to Application
  ID or API-Key issue.'
- '403 INSUFFICIENT_QUOTA_ENROLL: usage reach it quota limit for enroll (only appears
  on testing mode)'
- '500 INTERNAL_SERVER_ERROR: internal server error'
- '400 INVALID_PAYLOAD_SUBJECT_ID: Subject id not valid / subject id is not found'
- '400 INVALID_PAYLOAD_SUBJECT_ID_MISSING: Subject id payload is empty/null'
- '400 MISSING_PAYLOAD_SUBJECT_ID: Subject id payload is missing'
- 'INVALID_PAYLOAD: no value in payload or empty string more than 1'
- 'INVALID_PAYLOAD_IMAGE_MISSING: invalid payload image not a standard b64/url or
  image empty string'
- 'INVALID_PAYLOAD_SUBJECT_ID_MISSING: invalid payload subject id is empty string'
- 'INVALID_PAYLOAD_IMAGE_SIZE: invalid payload image size too large'
- 'MISSING_PAYLOAD_IMAGE: missing payload image'
- 'FACE_NOT_DETECTED: face not detected from image'
- 'INVALID_PAYLOAD_THRESHOLD_MISSING: threshold choice is incorrect'
- '401: Authorization failed'
- '403: Insufficient verify quota'
- '500: Internal server error'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Check OAuth token.'
- '429 Too Many Requests: Rate limit exceeded.'
- 400 INVALID_PAYLOAD
- 400 INVALID_PAYLOAD_IMAGE_1_MISSING
- 400 INVALID_PAYLOAD_IMAGE_2_MISSING
- 400 INVALID_PAYLOAD_IMAGE_1_SIZE
- 400 INVALID_PAYLOAD_IMAGE_2_SIZE
- 400 MISSING_PAYLOAD_IMAGE_1
- 400 MISSING_PAYLOAD_IMAGE_2
- 400 FACE_NOT_DETECTED
- 403 INSUFFICIENT_QUOTA_COMPARE
- 500 INTERNAL_SERVER_ERROR
- '400: Invalid Payload. Transaction that is considered failed due to validation errors,
  an error_field will appear explaining the error.'
- '400: Face not detected in image. Request image is invalid (not a face image).'
- '401: Authorization failed. Transaction that unauthorized due to Application ID
  or API-Key issue. To hit in Testing and Live mode you need a Production Application
  ID and API-Key.'
- '403: Insufficient compare quota. The transaction is in Testing mode and not enough
  remaining quota. Please contact Verihubs Customer Support.'
- '500: Internal server error.'
- 'INVALID_PAYLOAD_IMAGE_TIMEOUT: timeout getting image from url in 15 seconds'
- 'INSUFFICIENT_QUOTA_ENROLL: usage reach it quota limit for enroll (only appears
  on testing mode)'
- 'INTERNAL_SERVER_ERROR: internal server error'
- 'INVALID_PAYLOAD_THRESHOLD: threshold cannot lower than 0 or more than 100'
- 'INVALID_PAYLOAD_LIMIT: limit cannot lower than 1 or more than 10'
- '403: Insufficient search quota'
- 'INVALID_PAYLOAD_SUBJECT_ID: Subject id not valid / subject id is not found'
- 'INVALID_PAYLOAD_SUBJECT_ID_MISSING: Subject id payload is empty/null'
- 'MISSING_PAYLOAD_SUBJECT_ID: Subject id payload is missing'
- '400: INVALID_PAYLOAD'
- '400: INVALID_PAYLOAD_IMAGE_MISSING'
- '400: INVALID_PAYLOAD_IMAGE_SIZE'
- '400: MISSING_PAYLOAD_IMAGE'
- '400: FACE_NOT_DETECTED'
- '403: INSUFFICIENT_QUOTA_LIVENESS'
- '500: INTERNAL_SERVER_ERROR'
- '400: INVALID_PAYLOAD_SUBJECT_ID_MISSING'
- '400: INVALID_PAYLOAD_IMAGE_TIMEOUT'
- '401: Unauthorized'
- '403: INSUFFICIENT_QUOTA_VERIFY'
- 'FACE-1: Success FR'
- 'FACE-2: Success FAS'
- 'FACE-3: Success FR + Liveness'
- '400: INVALID_PAYLOAD_IMAGE_1_MISSING'
- '400: INVALID_PAYLOAD_IMAGE_2_MISSING'
- '400: INVALID_PAYLOAD_IMAGE_1_SIZE'
- '400: INVALID_PAYLOAD_IMAGE_2_SIZE'
- '400: MISSING_PAYLOAD_IMAGE_1'
- '400: MISSING_PAYLOAD_IMAGE_2'
- '403: INSUFFICIENT_QUOTA_COMPARE'
- '401: Authorization failed. Authorization Failed; Transaction that unauthorized
  due to Application ID or API-Key issue. To hit in Testing and Live mode you need
  a Production Application ID and API-Key.'
- 'INVALID_PAYLOAD_QUALITY_VALIDATION_DEPENDENCY: is_quality must be true if validate_quality
  true'
- 'INVALID_PAYLOAD_ATTRIBUTE_VALIDATION_DEPENDENCY: is_attribute must be true if validate_attribute
  true'
- 'INVALID_PAYLOAD_LIVENESS_VALIDATION_DEPENDENCY: is_liveness must be true if validate_liveness
  true'
- 'INVALID_PAYLOAD_IMAGE_FORMAT: image unable to be decoded/got from url OR invalid
  image extension'
- 'KTP_NOT_DETECTED: KTP not detected from image'
- 'INSUFFICIENT_QUOTA: quota for extract/quality is not sufficient to further continue
  the request (Only appears on testing mode)'
- 'FAIL_ON_1: fail on quality'
- 'INVALID_PAYLOAD_REFERENCE_ID: reference_id is too short/too long'
- 'INVALID_PAYLOAD_REFERENCE_ID_NOT_FOUND: reference_id is not found / reference_id
  payload is missing'
- 'OCR_40001: There''s a problem with your JSON payload'
- 'OCR_40004: You don''t have enough quota, please contact our admin'
- 'OCR_50000: There''s a problem from our system.'
- '400 INVALID_PAYLOAD_IMAGE_FORMAT: image unable to be decoded/got from url OR invalid
  image extension'
- '400 KTP_NOT_DETECTED: KTP not detected from image'
- '400 INVALID_PAYLOAD_QUALITY_VALIDATION_DEPENDENCY: is_quality must be true if validate_quality
  true'
- '403 INSUFFICIENT_QUOTA: quota for extract/quality is not sufficient to further
  continue the request (Only appears on testing mode)'
- 'OCR_200004: NPWP not detected'
- '401 Unauthorized: Authorization failed'
- 'KTP-1: Successful hit + Extract (Sync/Async)'
- 'KTP-2: Successful hit + Quality (Sync/Async)'
- 'KTP-3: Successful hit + Quality (Sync/Async) + Extract (Sync/Async)'
- '400: INVALID_PAYLOAD: no value in payload or empty string more than 1'
- '400: INVALID_PAYLOAD_IMAGE_MISSING: invalid payload image not a standard b64/url
  or image empty string'
- '400: INVALID_PAYLOAD_IMAGE_SIZE: invalid payload image size too large'
- '400: INVALID_PAYLOAD_IMAGE_FORMAT: image unable to be decoded/got from url OR invalid
  image extension'
- '400: MISSING_PAYLOAD_IMAGE: missing payload image'
- '400: INVALID_PAYLOAD_QUALITY_VALIDATION_DEPENDENCY: is_quality must be true if
  validate_quality true'
- '403: INSUFFICIENT_QUOTA: quota for extract/quality is not sufficient to further
  continue the request (Only appears on testing mode)'
- '200: FAIL_ON_1: fail on quality'
- '200: FAIL_ON_2: forgery detected'
- '500: INTERNAL_SERVER_ERROR: internal server error'
- 'FAIL_ON_2: forgery detected'
- 'FRG-1: Successful hit + Forgery Check'
- 'FRG-2: Successful hit + Validate Quality'
- 'FRG-3: Successful hit + Validate Quality + Forgery Check'
- 'SANDBOX_ID_NOT_ALLOWED: Invalid sandbox image code'
- 'INSUFFICIENT_QUOTA: Insufficient quota'
- 'INTERNAL_SERVER_ERROR: Internal server error occurred.'
- 'PROCESS_TIMEOUT: KTP Extraction timeout.'
- '6: Rejected - Too Many Request (429)'
- 'INTERNAL_SERVER_ERROR: Internal server error occured.'
- '429 Too Many Requests: Anomaly detection triggered, request rejected.'
- 'Camera.NotAllowed: User has not allowed camera access'
- 'Camera.NotFound: No camera found'
- 'Camera.PermissionDenied: Camera permission denied'
- 'ScreenOrientation.NotAllowed: Screen orientation not allowed'
- 'Verification.Disrupted: Verification process disrupted'
- 'Verification.Timeout: Verification process timed out'
- 'Verification.Success: Verification completed successfully'
auth_info:
  mentioned_objects:
  - VERIHUBS_APP_ID
  - VERIHUBS_API_KEY
client:
  base_url: https://api.verihubs.com
  auth:
    type: apikey
  headers:
    App-ID: Your_Application_ID
    API-Key: Your_API_Key
source_metadata: null
