resources:
- name: MathfieldElement
  endpoint:
    path: /mathfield/element
    method: GET
    data_selector: element
- name: MathfieldElementAttributes
  endpoint:
    path: /mathfield/attributes
    method: GET
    data_selector: attributes
    params: {}
- name: MathJSON Standard Library
  endpoint:
    path: /compute-engine/standard-library/
    method: GET
    data_selector: library
    params: {}
- name: NumberFormat
  endpoint:
    path: NumberFormat
    method: GET
    data_selector: records
- name: NumberSerializationFormat
  endpoint:
    path: NumberSerializationFormat
    method: GET
    data_selector: records
- name: DataTypeMap
  endpoint:
    path: DataTypeMap
    method: GET
    data_selector: records
- name: TensorData
  endpoint:
    path: TensorData
    method: GET
    data_selector: records
- name: Tensor
  endpoint:
    path: Tensor
    method: GET
    data_selector: records
notes:
- To instantiate a MathfieldElement use the <math-field> tag in HTML.
- Options can be set either as an attribute or using properties.
- To use Compute Engine, you must write JavaScript or TypeScript code.
- The easiest way to get started is to load the Compute Engine JavaScript module from
  a CDN.
- Uses modules loaded from CDN
- MathField and Compute Engine libraries are required
- MathJSON is built on the JSON format.
- It is human-readable, while being easy for machines to generate and parse.
- The property `expr.head` has been deprecated. Use `expr.operator` instead.
- The MathJSON utility functions `head()` and `op()` have been renamed to `operator()`
  and `operand()` respectively.
- The methods for algebraic operations (`add`, `div`, `mul`, etc...) have been moved
  from the Compute Engine to the Boxed Expression class.
- The `ce.numericMode` option has been removed. Instead, set the `ce.precision` property
  to the desired precision.
- The MathJSON Dictionary element has been deprecated. Use a `Dictionary` expression
  instead.
- The `ExtendedRealNumbers`, `ExtendedComplexNumbers` domains have been deprecated.
  Use the `RealNumbers` and `ComplexNumbers` domains instead.
- The 'Domain' expression has been deprecated. Use types instead.
- Some `BoxedExpression` properties have been removed.
- If the expression is not a real number, the property will return `NaN`.
- The fallback for non-constructible complex values of trigonometric functions is
  now implemented via rules.
- The canonical order of the arguments has changed and should be more consistent and
  predictable.
- Canonical expressions can now include a `Root` expression.
- The function definitions no longer have a `N` handler.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: https://cortexjs.io/compute-engine
  headers:
    Accept: application/json
source_metadata: null
