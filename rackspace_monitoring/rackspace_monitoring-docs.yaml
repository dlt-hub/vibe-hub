resources:
- name: Account
  endpoint:
    path: /reference/account
    method: GET
- name: Entities
  endpoint:
    path: /reference/entities
    method: GET
- name: Check Types
  endpoint:
    path: /reference/check-types
    method: GET
- name: Monitoring zones
  endpoint:
    path: /reference/monitoring-zones
    method: GET
- name: Checks
  endpoint:
    path: /reference/checks
    method: GET
- name: Metrics
  endpoint:
    path: /reference/metrics
    method: GET
- name: Notification types
  endpoint:
    path: /reference/notification-types
    method: GET
- name: Notifications
  endpoint:
    path: /reference/notifications
    method: GET
- name: Notification Plans
  endpoint:
    path: /reference/notification-plans
    method: GET
- name: Alarms
  endpoint:
    path: /reference/alarms
    method: GET
- name: Alarm examples
  endpoint:
    path: /reference/alarm-examples
    method: GET
- name: Alarm notification history
  endpoint:
    path: /reference/alarm-notification-history
    method: GET
- name: Changelogs
  endpoint:
    path: /reference/changelogs
    method: GET
- name: Suppressions
  endpoint:
    path: /reference/suppressions
    method: GET
- name: Suppression logs
  endpoint:
    path: /reference/suppression-logs
    method: GET
- name: Views
  endpoint:
    path: /reference/views
    method: GET
- name: Agents
  endpoint:
    path: /reference/agents
    method: GET
- name: Agent Tokens
  endpoint:
    path: /reference/agent-tokens
    method: GET
- name: Agent host information
  endpoint:
    path: /reference/agent-host-information
    method: GET
- name: Agent Targets
  endpoint:
    path: /reference/agent-targets
    method: GET
- name: customer_accounts
  endpoint:
    path: /customer_accounts
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
    params: {}
- name: customer
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: customers
    params: {}
- name: archive_users
  endpoint:
    path: /api/archive_users
    method: GET
    data_selector: users
    params: {}
- name: email_archiving
  endpoint:
    path: /api/email_archiving
    method: GET
    data_selector: archivedEmails
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: backups
  endpoint:
    path: /v1.0/backups
    method: GET
    data_selector: backups
- name: restore
  endpoint:
    path: /v1.0/restore
    method: POST
    data_selector: restore
- name: open_alerts
  endpoint:
    path: /alerts/open
    method: GET
    data_selector: records
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: email
  endpoint:
    path: /services/data/vXX.X/sobjects/Email
    method: GET
    data_selector: records
    params: {}
- name: backup
  endpoint:
    path: /services/data/vXX.X/sobjects/Backup
    method: GET
    data_selector: records
    params: {}
- name: cloud_servers
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
    params: {}
- name: cloud_backup
  endpoint:
    path: /v1.0/cloud_backup
    method: GET
    data_selector: backups
    params: {}
- name: cloud_block_storage
  endpoint:
    path: /v1.0/cloud_block_storage
    method: GET
    data_selector: volumes
    params: {}
- name: cloud_queue
  endpoint:
    path: /api/v1/cloud_queue
    method: GET
    data_selector: queues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Load Balancer
  endpoint:
    path: /loadbalancers
    method: GET
    data_selector: loadBalancers
    params: {}
- name: Network
  endpoint:
    path: /networks
    method: GET
    data_selector: networks
    params: {}
- name: alerts
  endpoint:
    path: /v1/alerts
    method: GET
    data_selector: data
    params: {}
- name: entities
  endpoint:
    path: /v1/entities
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alerts
  endpoint:
    path: /monitor/open_alerts
    method: GET
    data_selector: records
    params: {}
- name: entities
  endpoint:
    path: /monitor/entities
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud/queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_server
  endpoint:
    path: /cloud/servers
    method: GET
    data_selector: servers
    params: {}
- name: alert
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: alerts
- name: entity
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: entities
- name: Load Balancer
  endpoint:
    path: /load-balancers
    method: GET
    data_selector: loadBalancers
    params: {}
- name: Network
  endpoint:
    path: /networks
    method: GET
    data_selector: networks
    params: {}
- name: notifications
  endpoint:
    path: /api/v1/notifications
    method: GET
    data_selector: notifications
    params: {}
- name: situation_tickets
  endpoint:
    path: /api/v1/situation_tickets
    method: GET
    data_selector: tickets
    params: {}
- name: notifications
  endpoint:
    path: /api/notifications
    method: GET
    data_selector: notifications
- name: cloud_server
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
    params: {}
- name: notifications
  endpoint:
    path: /notifications
    method: GET
    data_selector: notifications
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cron_jobs
  endpoint:
    path: /docs/set-up-cron-jobs-for-action-scripting
    method: GET
    data_selector: content
    params: {}
- name: rsync
  endpoint:
    path: /docs/speed-up-rsync-when-migrating-a-linux-server-from-the-command-line
    method: GET
    data_selector: content
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_server
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
- name: VM Management
  endpoint:
    path: /docs/rackspace-vm-management-guide
    method: GET
- name: host_protection
  endpoint:
    path: /services/host_protection
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud/queues
    method: GET
    data_selector: records
    params: {}
- name: cloud_server
  endpoint:
    path: /cloud/servers
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: entity
  endpoint:
    path: /entities
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: billing_information
  endpoint:
    path: /billing/invoice-details
    method: GET
    data_selector: DBA services
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /queues
    method: GET
    data_selector: queues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: application_installation_configuration
  endpoint:
    path: /api/sitecore/installation
    method: GET
    data_selector: installation_tasks
- name: application_operations
  endpoint:
    path: /api/sitecore/operations
    method: GET
    data_selector: operations_tasks
- name: cloud_backups
  endpoint:
    path: /v1.0/cloud_backups
    method: GET
    data_selector: backups
    params: {}
- name: cloud_block_storage
  endpoint:
    path: /v1.0/cloud_block_storage
    method: GET
    data_selector: volumes
    params: {}
- name: monitor_open_alerts
  endpoint:
    path: /monitor/open_alerts
    method: GET
    data_selector: alerts
- name: monitor_entities
  endpoint:
    path: /monitor/entities
    method: GET
    data_selector: entities
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_backup
  endpoint:
    path: /v1.0/cloud-backup
    method: GET
    data_selector: backups
    params: {}
- name: cloud_block_storage
  endpoint:
    path: /v1.0/cloud-block-storage
    method: GET
    data_selector: volumes
    params: {}
- name: set_date_time_timezone
  endpoint:
    path: /docs/set-the-date-and-time-timezone-on-a-linux-server
    method: GET
- name: set_up_cron_jobs
  endpoint:
    path: /docs/set-up-cron-jobs-for-action-scripting
    method: GET
- name: set_up_lsyncd
  endpoint:
    path: /docs/set-up-lsyncd-locally-and-over-ssh-to-sync-directories
    method: GET
- name: Load Balancer
  endpoint:
    path: /loadbalancers
    method: GET
    data_selector: loadBalancers
- name: cloud_queue
  endpoint:
    path: /services/data/vXX.X/sobjects/CloudQueue
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: network
  endpoint:
    path: /v2.0/networks
    method: GET
    data_selector: networks
- name: server
  endpoint:
    path: /v2.0/servers
    method: GET
    data_selector: servers
- name: monitor_open_alerts
  endpoint:
    path: /api/v1/open_alerts
    method: GET
    data_selector: alerts
- name: monitor_entities
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: entities
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_servers
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
    params: {}
- name: cloud_networks
  endpoint:
    path: /v2.1/networks
    method: GET
    data_selector: networks
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: backup
  endpoint:
    path: /v1/backup
    method: GET
    data_selector: backups
    params: {}
- name: operating_systems
  endpoint:
    path: /docs/operating-systems
    method: GET
    data_selector: records
- name: web_servers
  endpoint:
    path: /docs/web-servers
    method: GET
    data_selector: records
- name: database_servers
  endpoint:
    path: /docs/database-servers
    method: GET
    data_selector: records
- name: programming_languages
  endpoint:
    path: /docs/programming-languages
    method: GET
    data_selector: records
- name: software_firewall
  endpoint:
    path: /docs/software-firewall
    method: GET
    data_selector: records
- name: ftp
  endpoint:
    path: /docs/ftp
    method: GET
    data_selector: records
- name: smtp
  endpoint:
    path: /docs/smtp
    method: GET
    data_selector: records
- name: active_directory
  endpoint:
    path: /docs/active-directory
    method: GET
    data_selector: records
- name: other_packages
  endpoint:
    path: /docs/other-packages
    method: GET
    data_selector: records
- name: end_of_life_support_dates
  endpoint:
    path: /docs/end-of-life-support-dates
    method: GET
    data_selector: records
- name: email_accounts
  endpoint:
    path: /v1.0/email/accounts
    method: GET
    data_selector: accounts
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: data
    params: {}
- name: entities
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: data
    params: {}
- name: operating_systems
  endpoint:
    path: /operating_systems
    method: GET
    data_selector: operating_systems
    params: {}
- name: web_servers
  endpoint:
    path: /web_servers
    method: GET
    data_selector: web_servers
    params: {}
- name: database_servers
  endpoint:
    path: /database_servers
    method: GET
    data_selector: database_servers
    params: {}
- name: programming_languages
  endpoint:
    path: /programming_languages
    method: GET
    data_selector: programming_languages
    params: {}
- name: caching_tools
  endpoint:
    path: /caching_tools
    method: GET
    data_selector: caching_tools
    params: {}
- name: firewall_software
  endpoint:
    path: /firewall_software
    method: GET
    data_selector: firewall_software
    params: {}
- name: ftp_tools
  endpoint:
    path: /ftp_tools
    method: GET
    data_selector: ftp_tools
    params: {}
- name: smtp_tools
  endpoint:
    path: /smtp_tools
    method: GET
    data_selector: smtp_tools
    params: {}
- name: other_packages
  endpoint:
    path: /other_packages
    method: GET
    data_selector: other_packages
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_server
  endpoint:
    path: /cloud-servers
    method: GET
    data_selector: servers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: domain
  endpoint:
    path: /api/v1/domains
    method: GET
    data_selector: domains
    params: {}
- name: email
  endpoint:
    path: /api/v1/emails
    method: GET
    data_selector: emails
    params: {}
- name: open_alerts
  endpoint:
    path: /alerts/open
    method: GET
    data_selector: records
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: GET
    data_selector: records
    params: {}
- name: example_resource
  endpoint:
    path: /path/to/endpoint
    method: GET
    data_selector: data
    params: {}
- name: monitor_open_alerts
  endpoint:
    path: /monitor/open_alerts
    method: GET
    data_selector: records
- name: monitor_entities
  endpoint:
    path: /monitor/entities
    method: GET
    data_selector: records
- name: email
  endpoint:
    path: /api/v1/email
    method: GET
    data_selector: records
    params: {}
- name: system_users
  endpoint:
    path: /api/v1/system_users
    method: GET
    data_selector: users
- name: network_connections
  endpoint:
    path: /api/v1/network_connections
    method: GET
    data_selector: connections
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_backup
  endpoint:
    path: /cloud-backup/v1.0/backups
    method: GET
    data_selector: backups
    params: {}
- name: cloud_block_storage
  endpoint:
    path: /cloud-block-storage/v1.0/volumes
    method: GET
    data_selector: volumes
    params: {}
- name: cloud_databases
  endpoint:
    path: /cloud-databases/v1.0/databases
    method: GET
    data_selector: databases
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_server
  endpoint:
    path: /cloud-servers
    method: GET
    data_selector: servers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Managed Database Services
  endpoint:
    path: /dba-services
    method: GET
    data_selector: services
    params: {}
- name: Managed Operations Team
  endpoint:
    path: /managed-operations
    method: GET
    data_selector: team
    params: {}
- name: email_setup_wizard
  endpoint:
    path: /docs/email-setup-wizard
    method: GET
    data_selector: records
- name: getting_started_with_rackspace_hosted_email
  endpoint:
    path: /docs/getting-started-with-hosted-email
    method: GET
    data_selector: records
- name: getting_started_with_office_365
  endpoint:
    path: /docs/getting-started-with-office-365
    method: GET
    data_selector: records
- name: cloud_queue
  endpoint:
    path: /cloud/queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_server
  endpoint:
    path: /cloud/servers
    method: GET
    data_selector: servers
    params: {}
- name: cloud_servers
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: data
    params: {}
- name: entities
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: data
    params: {}
- name: email_archiving
  endpoint:
    path: /services/email/archiving
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: records
    params: {}
- name: cloud_server
  endpoint:
    path: /cloud-servers
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /api/v1/cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_servers
  endpoint:
    path: /api/v1/cloud-servers
    method: GET
    data_selector: servers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /services/data/vXX.X/sobjects/Email
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_backup
  endpoint:
    path: /v1.0/cloud/backup
    method: GET
    data_selector: backups
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /api/v1/email
    method: GET
    data_selector: records
    params: {}
- name: open_alerts
  endpoint:
    path: /api/open_alerts
    method: GET
    data_selector: alerts
- name: entities
  endpoint:
    path: /api/entities
    method: GET
    data_selector: entities
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: backups
  endpoint:
    path: /v1.0/backups
    method: GET
    data_selector: backups
    params: {}
- name: cloud_queues
  endpoint:
    path: /v1/queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_servers
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
    params: {}
- name: windows_server_2008_r2
  endpoint:
    path: /windows_server_2008_r2
    method: GET
    data_selector: records
    params:
      frequency: Nightly between 1 AM and 5 AM
- name: windows_server_2012
  endpoint:
    path: /windows_server_2012
    method: GET
    data_selector: records
    params:
      frequency: Nightly between 1 AM and 5 AM
- name: windows_server_2012_r2
  endpoint:
    path: /windows_server_2012_r2
    method: GET
    data_selector: records
    params:
      frequency: Nightly between 1 AM and 5 AM
- name: databases
  endpoint:
    path: /v1.0/databases
    method: GET
    data_selector: databases
- name: cloud_queue
  endpoint:
    path: /v1/cloud_queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_server
  endpoint:
    path: /v1/cloud_servers
    method: GET
    data_selector: servers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: managed_sql_databases
  endpoint:
    path: /managed-sql-databases
    method: GET
    data_selector: databases
    params: {}
- name: managed_nosql_databases
  endpoint:
    path: /managed-nosql-databases
    method: GET
    data_selector: databases
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: oracle
  endpoint:
    path: /oracle
    method: GET
    data_selector: reports
    params: {}
- name: microsoft_sql_server
  endpoint:
    path: /microsoft_sql_server
    method: GET
    data_selector: reports
    params: {}
- name: mysql
  endpoint:
    path: /mysql
    method: GET
    data_selector: reports
    params: {}
- name: db2
  endpoint:
    path: /db2
    method: GET
    data_selector: reports
    params: {}
- name: mongodb
  endpoint:
    path: /mongodb
    method: GET
    data_selector: reports
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /services/data/vXX.X/sobjects/CloudQueue
    method: GET
    data_selector: records
    params: {}
- name: cloud_server
  endpoint:
    path: /services/data/vXX.X/sobjects/CloudServer
    method: GET
    data_selector: records
    params: {}
- name: Object Storage Account
  endpoint:
    path: /docs/access-object-storage
    method: GET
    data_selector: records
- name: Namespace Details
  endpoint:
    path: /namespace-details
    method: GET
    data_selector: records
- name: Object Storage Account
  endpoint:
    path: /object-storage-account
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: secret_key
  endpoint:
    path: /v1.0/OS-KSADM/credentials
    method: POST
    data_selector: credentials
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queues
  endpoint:
    path: /cloud-queues/v1/queues
    method: GET
    data_selector: queues
    params: {}
- name: object_storage_account
  endpoint:
    path: /v1/{account}/
    method: GET
    data_selector: accounts
- name: cron_jobs
  endpoint:
    path: /docs/set-up-cron-jobs-for-action-scripting
    method: GET
    data_selector: resources
    params: {}
- name: rsync_migration
  endpoint:
    path: /docs/speed-up-rsync-when-migrating-a-linux-server-from-the-command-line
    method: GET
    data_selector: resources
    params: {}
- name: cpu_usage_troubleshooting
  endpoint:
    path: /docs/troubleshoot-high-cpu-usage-on-linux-server
    method: GET
    data_selector: resources
    params: {}
- name: disk_space_troubleshooting
  endpoint:
    path: /docs/troubleshooting-low-disk-space-for-a-linux-cloud-server
    method: GET
    data_selector: resources
    params: {}
- name: NTP Sync
  endpoint:
    path: /docs/using-ntp-to-sync-time
    method: GET
- name: Rsync Optimization
  endpoint:
    path: /docs/speed-up-rsync-when-migrating-a-linux-server-from-the-command-line
    method: GET
- name: Cron Jobs Setup
  endpoint:
    path: /docs/set-up-cron-jobs-for-action-scripting
    method: GET
- name: File Search
  endpoint:
    path: /docs/use-find-and-locate-to-search-for-files-in-linux
    method: GET
- name: cloud_backup
  endpoint:
    path: /v1.0/backups
    method: GET
    data_selector: backups
- name: cron_jobs
  endpoint:
    path: /docs/set-up-cron-jobs-for-action-scripting
    method: GET
    data_selector: cron_jobs_data
    params: {}
- name: rsync_migration
  endpoint:
    path: /docs/speed-up-rsync-when-migrating-a-linux-server-from-the-command-line
    method: GET
    data_selector: rsync_data
    params: {}
- name: ntp_sync
  endpoint:
    path: /docs/using-ntp-to-sync-time
    method: GET
    data_selector: ntp_data
    params: {}
- name: Protection Group
  endpoint:
    path: /create-vm-protection-group
    method: POST
    data_selector: protection_group
    params: {}
- name: cloud_backup
  endpoint:
    path: /v1.0/cloud-backup
    method: GET
    data_selector: backups
    params: {}
- name: protection_group
  endpoint:
    path: /services/data/vXX.X/protection_group
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /v1/cloud-queues
    method: GET
    data_selector: queues
- name: cloud_server
  endpoint:
    path: /v1/cloud-servers
    method: GET
    data_selector: servers
- name: restoring_vm
  endpoint:
    path: /restoring-a-vm
    method: GET
- name: cron_jobs
  endpoint:
    path: /docs/set-up-cron-jobs-for-action-scripting
    method: GET
    data_selector: records
- name: rsync_migration
  endpoint:
    path: /docs/speed-up-rsync-when-migrating-a-linux-server-from-the-command-line
    method: GET
    data_selector: records
- name: ntp_sync
  endpoint:
    path: /docs/using-ntp-to-sync-time
    method: GET
    data_selector: records
- name: systemctl_management
  endpoint:
    path: /docs/use-systemctl-to-manage-services
    method: GET
    data_selector: records
- name: recoveries
  endpoint:
    path: /api/v1/recoveries
    method: GET
    data_selector: records
- name: open_alerts
  endpoint:
    path: /api/open_alerts
    method: GET
    data_selector: alerts
    params: {}
- name: entities
  endpoint:
    path: /api/entities
    method: GET
    data_selector: entities
    params: {}
- name: cloud_queue
  endpoint:
    path: /v1/cloud_queues
    method: GET
    data_selector: queues
    params: {}
- name: Backup History
  endpoint:
    path: /view/backup/history
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_storage
  endpoint:
    path: /v1.0/{account}/containers
    method: GET
    data_selector: containers
    params: {}
- name: cloud_databases
  endpoint:
    path: /v1.0/{account}/databases
    method: GET
    data_selector: databases
    params: {}
- name: cron_jobs
  endpoint:
    path: /docs/set-up-cron-jobs-for-action-scripting
    method: GET
    data_selector: records
    params: {}
- name: ntp_sync
  endpoint:
    path: /docs/using-ntp-to-sync-time
    method: GET
    data_selector: records
    params: {}
- name: rsync_migration
  endpoint:
    path: /docs/speed-up-rsync-when-migrating-a-linux-server-from-the-command-line
    method: GET
    data_selector: records
    params: {}
- name: cpu_troubleshooting
  endpoint:
    path: /docs/troubleshoot-high-cpu-usage-on-linux-server
    method: GET
    data_selector: records
    params: {}
- name: disk_space_troubleshooting
  endpoint:
    path: /docs/troubleshooting-low-disk-space-for-a-linux-cloud-server
    method: GET
    data_selector: records
    params: {}
- name: open_alerts
  endpoint:
    path: /monitor/open_alerts
    method: GET
    data_selector: alerts
- name: entities
  endpoint:
    path: /monitor/entities
    method: GET
    data_selector: entities
- name: cloud_server
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
    params: {}
- name: Alertmanager Configuration
  endpoint:
    path: /alertmanager/config
    method: POST
    data_selector: config
- name: Prometheus Rules
  endpoint:
    path: /prometheus/rules
    method: POST
    data_selector: rules
- name: system_logs
  endpoint:
    path: /logs
    method: GET
    data_selector: logs
    params: {}
- name: system_users
  endpoint:
    path: /users
    method: GET
    data_selector: users
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /v1/cloud_queues
    method: GET
    data_selector: records
    params: {}
- name: cloud_server
  endpoint:
    path: /v1/cloud_servers
    method: GET
    data_selector: records
    params: {}
- name: Cloud Block Storage
  endpoint:
    path: /cloud-block-storage/v1
    method: GET
    data_selector: records
    params: {}
- name: Cloud Backup
  endpoint:
    path: /cloud-backup/v1/
    method: GET
    data_selector: records
    params: {}
- name: Cloud Databases
  endpoint:
    path: /cloud-databases/v1
    method: GET
    data_selector: records
    params: {}
- name: Cloud Files
  endpoint:
    path: /cloud-files/v1
    method: GET
    data_selector: records
    params: {}
- name: Cloud Images
  endpoint:
    path: /cloud-images/v2
    method: GET
    data_selector: records
    params: {}
- name: Cloud Load Balancers
  endpoint:
    path: /cloud-load-balancers/v1
    method: GET
    data_selector: records
    params: {}
- name: Cloud Networks
  endpoint:
    path: /cloud-networks/v2
    method: GET
    data_selector: records
    params: {}
- name: Cloud Orchestratioin
  endpoint:
    path: /cloud-orchestration/v1
    method: GET
    data_selector: records
    params: {}
- name: Cloud Queues
  endpoint:
    path: /cloud-queues/v1
    method: GET
    data_selector: records
    params: {}
- name: Cloud Servers
  endpoint:
    path: /cloud-servers/v2
    method: GET
    data_selector: records
    params: {}
- name: Rackspace Autoscale
  endpoint:
    path: /autoscale/v1/developer-guide/index.html
    method: GET
    data_selector: records
    params: {}
- name: Rackspace CDN
  endpoint:
    path: /cdn/v1
    method: GET
    data_selector: records
    params: {}
- name: Rackspace RackConnect
  endpoint:
    path: /rackconnect/v3/developer-guide
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /services/data/vXX.X/sobjects/CloudQueue
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /api/cloud_queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_server
  endpoint:
    path: /api/cloud_servers
    method: GET
    data_selector: servers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
    params: {}
- name: monitor_open_alerts
  endpoint:
    path: /monitor/open_alerts
    method: GET
    data_selector: records
- name: monitor_entities
  endpoint:
    path: /monitor/entities
    method: GET
    data_selector: records
- name: cloud_queue
  endpoint:
    path: /services/data/vXX.X/sobjects/CloudQueue
    method: GET
    data_selector: records
    params: {}
- name: system_users
  endpoint:
    path: /docs/viewing-system-users-in-linux
    method: GET
    data_selector: records
- name: network_connections
  endpoint:
    path: /docs/checking-your-network-connections-on-linux
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_users
  endpoint:
    path: /api/archive/users
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_settings
  endpoint:
    path: /api/v1/email/settings
    method: GET
    data_selector: settings
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /archive/users
    method: GET
    data_selector: users
- name: cloud_backup
  endpoint:
    path: /cloud-backup
    method: GET
    data_selector: records
    params: {}
- name: backup
  endpoint:
    path: /v1.0/backups
    method: GET
    data_selector: backups
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /queues
    method: GET
    data_selector: queues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_server
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
    params: {}
- name: cloud_queue
  endpoint:
    path: /v2.1/queues
    method: GET
    data_selector: queues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /services/data/vXX.X/sobjects/Email
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_settings
  endpoint:
    path: /api/v1/email/settings
    method: GET
    data_selector: settings
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /email/v1.0/accounts
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Entra ID Premium
  endpoint:
    path: /entrad/premium
    method: GET
    data_selector: features
- name: Microsoft Information Protection
  endpoint:
    path: /informationprotection
    method: GET
    data_selector: features
- name: Microsoft Teams
  endpoint:
    path: /teams
    method: GET
    data_selector: features
- name: Microsoft Office Applications
  endpoint:
    path: /office
    method: GET
    data_selector: features
- name: Power BI
  endpoint:
    path: /powerbi
    method: GET
    data_selector: features
- name: Microsoft Project
  endpoint:
    path: /project
    method: GET
    data_selector: features
- name: Power Platform
  endpoint:
    path: /powerplatform
    method: GET
    data_selector: features
- name: Artificial Intelligence
  endpoint:
    path: /ai
    method: GET
    data_selector: features
- name: email_settings
  endpoint:
    path: /api/v1/email/settings
    method: GET
    data_selector: data
    params: {}
- name: archive_users
  endpoint:
    path: /api/v1/archive/users
    method: GET
    data_selector: users
    params: {}
- name: email
  endpoint:
    path: /api/v1/email
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Cloud Queues Overview
  endpoint:
    path: /docs/cloud-queues-overview
    method: GET
- name: Create a Cloud Queue
  endpoint:
    path: /docs/creating-cloud-queues
    method: GET
- name: List Cloud Queues
  endpoint:
    path: /docs/listing-cloud-queues
    method: GET
- name: Permissions Matrix for Cloud Queues
  endpoint:
    path: /docs/permissions-matrix-for-cloud-queues
    method: GET
- name: Set up a Producer-Consumer Model with Cloud Queues
  endpoint:
    path: /docs/setting-up-a-producer-consumer-model-with-cloud-queues
    method: GET
- name: Set up a Publisher-Subscriber Model in Cloud Queues
  endpoint:
    path: /docs/setting-up-a-pub-sub-model-in-cloud-queues
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
    params: {}
- name: SMTP
  endpoint:
    path: /smtp
    method: POST
    data_selector: smtp_settings
    params:
      outgoing_server: smtp.office365.com
      port: 587
      encryption_method: TLS or STARTTLS
- name: IMAP
  endpoint:
    path: /imap
    method: POST
    data_selector: imap_settings
    params:
      incoming_server: outlook.office365.com
      port: 993
      encryption_method: SSL
- name: POP
  endpoint:
    path: /pop
    method: POST
    data_selector: pop_settings
    params:
      incoming_server: outlook.office365.com
      port: 995
      encryption_method: SSL
- name: EWS
  endpoint:
    path: /ews/exchange.asmx
    method: POST
    data_selector: ews_settings
    params:
      server_address: https://outlook.office365.com
      ews_server: https://outlook.office365.com/ews/exchange.asmx
      outlook_web_access: https://outlook.office365.com
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_settings
  endpoint:
    path: /api/v1/email/settings
    method: GET
    data_selector: settings
    params: {}
- name: archive_users
  endpoint:
    path: /api/v1/archive/users
    method: GET
    data_selector: users
    params: {}
- name: open_alerts
  endpoint:
    path: /monitor/open_alerts
    method: GET
    data_selector: alerts
- name: entities
  endpoint:
    path: /monitor/entities
    method: GET
    data_selector: entities
- name: date_time
  endpoint:
    path: /docs/set-the-date-and-time-timezone-on-a-linux-server
    method: GET
    data_selector: records
- name: cron_jobs
  endpoint:
    path: /docs/set-up-cron-jobs-for-action-scripting
    method: GET
    data_selector: records
- name: lsyncd
  endpoint:
    path: /docs/set-up-lsyncd-locally-and-over-ssh-to-sync-directories
    method: GET
    data_selector: records
- name: rsync_speed
  endpoint:
    path: /docs/speed-up-rsync-when-migrating-a-linux-server-from-the-command-line
    method: GET
    data_selector: records
- name: cpu_usage
  endpoint:
    path: /docs/troubleshoot-high-cpu-usage-on-linux-server
    method: GET
    data_selector: records
- name: disk_space
  endpoint:
    path: /docs/troubleshooting-low-disk-space-for-a-linux-cloud-server
    method: GET
    data_selector: records
- name: file_search
  endpoint:
    path: /docs/use-find-and-locate-to-search-for-files-in-linux
    method: GET
    data_selector: records
- name: ntp_sync
  endpoint:
    path: /docs/using-ntp-to-sync-time
    method: GET
    data_selector: records
- name: grep_command
  endpoint:
    path: /docs/use-the-linux-grep-command
    method: GET
    data_selector: records
- name: systemctl_management
  endpoint:
    path: /docs/use-systemctl-to-manage-services
    method: GET
    data_selector: records
- name: rsync_files
  endpoint:
    path: /docs/using-rsync-to-synchronize-file
    method: GET
    data_selector: records
- name: system_users
  endpoint:
    path: /docs/viewing-system-users-in-linux
    method: GET
    data_selector: records
- name: zip_files
  endpoint:
    path: /docs/work-with-zip-files-in-linux
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: NTP Sync
  endpoint:
    path: /docs/using-ntp-to-sync-time
    method: GET
    data_selector: records
    params: {}
- name: File Search
  endpoint:
    path: /docs/use-find-and-locate-to-search-for-files-in-linux
    method: GET
    data_selector: records
    params: {}
- name: Network Troubleshooting
  endpoint:
    path: /docs/check-network-connectivity-on-a-linux-server
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /api/v1/emails
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: backup_files
  endpoint:
    path: /backup/files
    method: GET
    data_selector: records
- name: backup_directories
  endpoint:
    path: /backup/directories
    method: GET
    data_selector: records
- name: cloud_queue
  endpoint:
    path: /api/v1/cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: archive_user
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
- name: archive_search
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveSearch
    method: GET
    data_selector: records
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_server
  endpoint:
    path: /cloud-servers
    method: GET
    data_selector: servers
    params: {}
- name: network
  endpoint:
    path: /v2.0/networks
    method: GET
    data_selector: networks
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: backup
  endpoint:
    path: /v1/backups
    method: GET
    data_selector: backups
    params: {}
- name: cloud_queue
  endpoint:
    path: /v1/cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_server
  endpoint:
    path: /v1/cloud-servers
    method: GET
    data_selector: servers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_users
  endpoint:
    path: /archive/users
    method: GET
    data_selector: records
- name: email_archiving
  endpoint:
    path: /email/archiving
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_server
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
- name: cloud_network
  endpoint:
    path: /v2.1/networks
    method: GET
    data_selector: networks
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_users
  endpoint:
    path: /api/v1/email/users
    method: GET
    data_selector: users
- name: email_domains
  endpoint:
    path: /api/v1/email/domains
    method: GET
    data_selector: domains
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_server
  endpoint:
    path: /cloud-servers
    method: GET
    data_selector: servers
    params: {}
- name: email_users
  endpoint:
    path: /api/v1/email/users
    method: GET
    data_selector: users
    params: {}
- name: email_domains
  endpoint:
    path: /api/v1/email/domains
    method: GET
    data_selector: domains
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: object_storage
  endpoint:
    path: /v1/
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
    params: {}
- name: Load Balancer
  endpoint:
    path: /loadbalancers
    method: GET
    data_selector: loadBalancers
    params: {}
- name: cloud_backup
  endpoint:
    path: /v1.0/backups
    method: GET
    data_selector: backups
- name: cloud_block_storage
  endpoint:
    path: /v1.0/volumes
    method: GET
    data_selector: volumes
- name: files
  endpoint:
    path: /me/drive/root/children
    method: GET
    data_selector: value
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /services/data/vXX.X/sobjects/Email
    method: GET
    data_selector: records
    params: {}
- name: system_logs
  endpoint:
    path: /logs/system
    method: GET
    data_selector: logs
    params: {}
- name: network_configuration
  endpoint:
    path: /network/configuration
    method: GET
    data_selector: configuration
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_servers
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Cloud Queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
- name: archive_user
  endpoint:
    path: /api/v1/archive_user
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: archive_user
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_users
  endpoint:
    path: /archive/users
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /services/data/vXX.X/sobjects/Email
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /api/v1/cloud_queues
    method: GET
    data_selector: queues
    params: {}
- name: Cloud Block Storage
  endpoint:
    path: /cloud-block-storage/v1
    method: GET
- name: Cloud Backup
  endpoint:
    path: /cloud-backup/v1/
    method: GET
- name: Cloud Databases
  endpoint:
    path: /cloud-databases/v1
    method: GET
- name: Cloud Files
  endpoint:
    path: /cloud-files/v1
    method: GET
- name: Cloud Images
  endpoint:
    path: /cloud-images/v2
    method: GET
- name: Cloud Load Balancers
  endpoint:
    path: /cloud-load-balancers/v1
    method: GET
- name: Cloud Networks
  endpoint:
    path: /cloud-networks/v2
    method: GET
- name: Cloud Orchestration
  endpoint:
    path: /cloud-orchestration/v1
    method: GET
- name: Cloud Queues
  endpoint:
    path: /cloud-queues/v1
    method: GET
- name: Cloud Servers
  endpoint:
    path: /cloud-servers/v2
    method: GET
- name: Rackspace Autoscale
  endpoint:
    path: /autoscale/v1/developer-guide/index.html
    method: GET
- name: Rackspace CDN
  endpoint:
    path: /cdn/v1
    method: GET
- name: Rackspace RackConnect
  endpoint:
    path: /rackconnect/v3/developer-guide
    method: GET
- name: archive_user
  endpoint:
    path: /api/v1/archive_user
    method: GET
    data_selector: data
- name: domain
  endpoint:
    path: /api/v1/domain
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /api/v1/email
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: archive_user
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: migration_process
  endpoint:
    path: /support/how-to/migrate-your-email-by-using-the-self-service-migration-tool/
    method: GET
    data_selector: instructions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /services/data/vXX.X/sobjects/Email
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_accounts
  endpoint:
    path: /api/v1/email/accounts
    method: GET
    data_selector: records
    params: {}
- name: email_archiving
  endpoint:
    path: /api/v1/email/archiving
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: group_list
  endpoint:
    path: /api/v1/groups
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: email_group
  endpoint:
    path: /v1.0/email/groups
    method: GET
    data_selector: groups
    params: {}
- name: email
  endpoint:
    path: /api/v1/emails
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: archive_users
  endpoint:
    path: /archive/users
    method: GET
    data_selector: users
- name: email_settings
  endpoint:
    path: /email/settings
    method: GET
    data_selector: settings
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: open_alerts
  endpoint:
    path: /api/open_alerts
    method: GET
    data_selector: alerts
    params: {}
- name: entities
  endpoint:
    path: /api/entities
    method: GET
    data_selector: entities
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: signature
  endpoint:
    path: /add/signature
    method: POST
    data_selector: signature
    params: {}
- name: identity
  endpoint:
    path: /add/identity
    method: POST
    data_selector: identity
    params: {}
- name: network
  endpoint:
    path: /v2.0/networks
    method: GET
    data_selector: networks
    params: {}
- name: servers
  endpoint:
    path: /v2.0/servers
    method: GET
    data_selector: servers
    params: {}
- name: archive_user
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Cloud Block Storage
  endpoint:
    path: /cloud-block-storage/v1
    method: GET
    data_selector: records
    params: {}
- name: Cloud Backup
  endpoint:
    path: /cloud-backup/v1
    method: GET
    data_selector: records
    params: {}
- name: Cloud Databases
  endpoint:
    path: /cloud-databases/v1
    method: GET
    data_selector: records
    params: {}
- name: Cloud Files
  endpoint:
    path: /cloud-files/v1
    method: GET
    data_selector: records
    params: {}
- name: Cloud Images
  endpoint:
    path: /cloud-images/v2
    method: GET
    data_selector: records
    params: {}
- name: Cloud Load Balancers
  endpoint:
    path: /cloud-load-balancers/v1
    method: GET
    data_selector: records
    params: {}
- name: Cloud Networks
  endpoint:
    path: /cloud-networks/v2
    method: GET
    data_selector: records
    params: {}
- name: Cloud Orchestratioin
  endpoint:
    path: /cloud-orchestration/v1
    method: GET
    data_selector: records
    params: {}
- name: Cloud Queues
  endpoint:
    path: /cloud-queues/v1
    method: GET
    data_selector: records
    params: {}
- name: Cloud Servers
  endpoint:
    path: /cloud-servers/v2
    method: GET
    data_selector: records
    params: {}
- name: Rackspace Autoscale
  endpoint:
    path: /autoscale/v1/developer-guide/index.html
    method: GET
    data_selector: records
    params: {}
- name: Rackspace CDN
  endpoint:
    path: /cdn/v1
    method: GET
    data_selector: records
    params: {}
- name: Rackspace RackConnect
  endpoint:
    path: /rackconnect/v3/developer-guide
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: email_settings
  endpoint:
    path: /services/data/vXX.X/sobjects/EmailSettings
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: LoadBalancer
  endpoint:
    path: /loadbalancers
    method: GET
    data_selector: loadBalancers
    params: {}
- name: email
  endpoint:
    path: /services/data/vXX.X/sobjects/Email
    method: GET
    data_selector: records
    params: {}
- name: add_mailbox
  endpoint:
    path: /add/rackspace/email/mailboxes
    method: POST
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: entity
  endpoint:
    path: /entities
    method: GET
    data_selector: records
- name: email_account
  endpoint:
    path: /api/v1/emails
    method: GET
    data_selector: accounts
    params:
      incremental: updated_at
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
- name: cloud_server
  endpoint:
    path: /cloud-servers
    method: GET
    data_selector: servers
- name: email
  endpoint:
    path: /api/v1/emails
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_users
  endpoint:
    path: /archive/users
    method: GET
    data_selector: records
    params: {}
- name: email_archiving
  endpoint:
    path: /email/archiving
    method: GET
    data_selector: records
    params: {}
- name: Load Balancer
  endpoint:
    path: /v1/loadbalancers
    method: GET
    data_selector: loadbalancers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_server
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
    params: {}
- name: cloud_queue
  endpoint:
    path: /v2.1/queues
    method: GET
    data_selector: queues
    params: {}
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: data
    params: {}
- name: entities
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: data
    params: {}
- name: email_users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: email_archives
  endpoint:
    path: /api/v1/archives
    method: GET
    data_selector: archives
    params: {}
- name: open_alerts
  endpoint:
    path: /monitor/open-alerts
    method: GET
    data_selector: alerts
    params: {}
- name: entities
  endpoint:
    path: /monitor/entities
    method: GET
    data_selector: entities
    params: {}
- name: blocklist
  endpoint:
    path: /services/v1.0/blocklist
    method: GET
    data_selector: records
- name: archive_users
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Cloud Queue
  endpoint:
    path: /docs/cloud-queues-overview
    method: GET
- name: Cloud Server
  endpoint:
    path: /docs/cloud-servers-1
    method: GET
- name: archive_user
  endpoint:
    path: /archive/users
    method: GET
    data_selector: records
    params: {}
- name: email_setting
  endpoint:
    path: /email/settings
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /api/v1/archive/users
    method: GET
    data_selector: users
- name: email_settings
  endpoint:
    path: /api/v1/email/settings
    method: GET
    data_selector: settings
- name: network
  endpoint:
    path: /v2.0/networks
    method: GET
    data_selector: networks
    params: {}
- name: server
  endpoint:
    path: /v2.0/servers
    method: GET
    data_selector: servers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: backups
  endpoint:
    path: /v1.0/backups
    method: GET
    data_selector: backups
    params: {}
- name: Load Balancer
  endpoint:
    path: /load_balancers
    method: GET
    data_selector: load_balancers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_users
  endpoint:
    path: /api/v1/email/users
    method: GET
    data_selector: users
    params: {}
- name: email_domains
  endpoint:
    path: /api/v1/email/domains
    method: GET
    data_selector: domains
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Backup
  endpoint:
    path: /api/v1/backup
    method: POST
    data_selector: data
    params: {}
- name: Restore
  endpoint:
    path: /api/v1/restore
    method: POST
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: records
- name: entity
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: records
- name: incoming_server
  endpoint:
    path: /imap/inbox
    method: GET
    data_selector: settings
    params:
      host: secure.emailsrvr.com
      username: Your renamed Rackspace Email address
      password: Your mailbox password
- name: outgoing_server
  endpoint:
    path: /smtp/outbox
    method: GET
    data_selector: settings
    params:
      host: secure.emailsrvr.com
      username: Your renamed Rackspace Email address
      password: Your mailbox password
- name: open_alerts
  endpoint:
    path: /api/v1/open_alerts
    method: GET
    data_selector: alerts
    params: {}
- name: entities
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: entities
    params: {}
- name: email_configuration
  endpoint:
    path: /configure/email
    method: POST
    data_selector: result
    params:
      email_address: Your renamed Rackspace Email address
      user_name: Your renamed Rackspace Email address
      password: Your mailbox password
      account_type: IMAP
      incoming_mail_server: secure.emailsrvr.com
      outgoing_mail_server: secure.emailsrvr.com
- name: email_users
  endpoint:
    path: /v1/email/users
    method: GET
    data_selector: users
    params: {}
- name: email_domains
  endpoint:
    path: /v1/email/domains
    method: GET
    data_selector: domains
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /api/archive/users
    method: GET
    data_selector: users
- name: email_settings
  endpoint:
    path: /api/email/settings
    method: GET
    data_selector: settings
- name: backups
  endpoint:
    path: /v1.0/backups
    method: GET
    data_selector: backups
    params: {}
- name: email_configuration
  endpoint:
    path: /configure/renamed_email
    method: POST
    data_selector: results
    params:
      email_address: new mailbox address
      username: new mailbox address
      password: mailbox password
      incoming_server: secure.emailsrvr.com
      incoming_port: 993
      outgoing_server: secure.emailsrvr.com
      outgoing_port: 465
      use_ssl_incoming: true
      use_ssl_outgoing: true
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /v1/cloud_queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_server
  endpoint:
    path: /v1/cloud_servers
    method: GET
    data_selector: servers
    params: {}
- name: email_settings
  endpoint:
    path: /api/email/settings
    method: GET
    data_selector: settings
    params: {}
- name: open_alerts
  endpoint:
    path: /api/v1/open_alerts
    method: GET
    data_selector: alerts
    params: {}
- name: entities
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: entities
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: cloud_server
  endpoint:
    path: /v1.0/servers
    method: GET
    data_selector: servers
    params: {}
- name: email_account
  endpoint:
    path: /api/v1/mail
    method: POST
    data_selector: account
    params: {}
- name: Load Balancer
  endpoint:
    path: /v2/loadbalancers
    method: GET
    data_selector: loadBalancers
    params: {}
- name: Network
  endpoint:
    path: /v2/networks
    method: GET
    data_selector: networks
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: email
  endpoint:
    path: /api/v1/email
    method: GET
    data_selector: emails
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /api/v1/archive_user
    method: GET
    data_selector: records
- name: email_settings
  endpoint:
    path: /api/v1/email_settings
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_accounts
  endpoint:
    path: /api/v1/email/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_server
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
    params: {}
- name: Email Setup Wizard
  endpoint:
    path: /docs/email-setup-wizard
    method: GET
- name: Getting Started with Rackspace Hosted Email
  endpoint:
    path: /docs/getting-started-with-hosted-email
    method: GET
- name: Getting Started with Office 365
  endpoint:
    path: /docs/getting-started-with-office-365
    method: GET
- name: Microsoft Office 365
  endpoint:
    path: /docs/office-365
    method: GET
- name: Rackspace Email
  endpoint:
    path: /docs/rackspace-email
    method: GET
- name: Rackspace Email Archiving
  endpoint:
    path: /docs/rackspace-email-archiving
    method: GET
- name: email_users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: email_domains
  endpoint:
    path: /api/v1/domains
    method: GET
    data_selector: domains
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: backups
  endpoint:
    path: /v1/backups
    method: GET
    data_selector: backups
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: open_alerts
  endpoint:
    path: /api/open_alerts
    method: GET
    data_selector: records
- name: entities
  endpoint:
    path: /api/entities
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_users
  endpoint:
    path: /api/v1/email/users
    method: GET
    data_selector: users
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /services/data/vXX.X/sobjects/CloudQueue
    method: GET
    data_selector: records
    params: {}
- name: cloud_server
  endpoint:
    path: /services/data/vXX.X/sobjects/CloudServer
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /api/v1.0/email
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: example_resource
  endpoint:
    path: /example/endpoint
    method: GET
    data_selector: records
    params: {}
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
    params: {}
- name: entities
  endpoint:
    path: /entities
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: backup_jobs
  endpoint:
    path: /api/v1/backup/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: restore_jobs
  endpoint:
    path: /api/v1/restore/jobs
    method: GET
    data_selector: restores
    params: {}
- name: cloud_backup
  endpoint:
    path: /v1.0/backups
    method: GET
    data_selector: backups
    params: {}
- name: cloud_load_balancers
  endpoint:
    path: /v1.0/loadbalancers
    method: GET
    data_selector: load_balancers
    params: {}
- name: Cloud Block Storage
  endpoint:
    path: /cloud-block-storage/v1
    method: GET
    data_selector: records
- name: Cloud Backup
  endpoint:
    path: /cloud-backup/v1/
    method: GET
    data_selector: records
- name: Cloud Databases
  endpoint:
    path: /cloud-databases/v1
    method: GET
    data_selector: records
- name: Cloud Files
  endpoint:
    path: /cloud-files/v1
    method: GET
    data_selector: records
- name: Cloud Images
  endpoint:
    path: /cloud-images/v2
    method: GET
    data_selector: records
- name: Cloud Load Balancers
  endpoint:
    path: /cloud-load-balancers/v1
    method: GET
    data_selector: records
- name: Cloud Networks
  endpoint:
    path: /cloud-networks/v2
    method: GET
    data_selector: records
- name: Cloud Orchestration
  endpoint:
    path: /cloud-orchestration/v1
    method: GET
    data_selector: records
- name: Cloud Queues
  endpoint:
    path: /cloud-queues/v1
    method: GET
    data_selector: records
- name: Cloud Servers
  endpoint:
    path: /cloud-servers/v2
    method: GET
    data_selector: records
- name: Rackspace Autoscale
  endpoint:
    path: /autoscale/v1/developer-guide/index.html
    method: GET
    data_selector: records
- name: Rackspace CDN
  endpoint:
    path: /cdn/v1
    method: GET
    data_selector: records
- name: Rackspace RackConnect
  endpoint:
    path: /rackconnect/v3/developer-guide
    method: GET
    data_selector: records
- name: archive_user
  endpoint:
    path: /api/archive_user
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_backup
  endpoint:
    path: /v1/backups
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /queues
    method: GET
    data_selector: records
    params: {}
- name: cloud_server
  endpoint:
    path: /servers
    method: GET
    data_selector: records
    params: {}
- name: email_users
  endpoint:
    path: /api/v1/email/users
    method: GET
    data_selector: users
- name: email_domains
  endpoint:
    path: /api/v1/email/domains
    method: GET
    data_selector: domains
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_servers
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
- name: email_settings
  endpoint:
    path: /services/data/v1.0/sobjects/EmailSettings
    method: GET
    data_selector: records
- name: archive_users
  endpoint:
    path: /services/data/v1.0/sobjects/ArchiveUsers
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: backups
  endpoint:
    path: /v1.0/backups
    method: GET
    data_selector: backups
    params: {}
- name: cloud_servers
  endpoint:
    path: /v2/{tenant_id}/servers
    method: GET
    data_selector: servers
- name: cloud_queues
  endpoint:
    path: /v2/{tenant_id}/queues
    method: GET
    data_selector: queues
- name: open_alerts
  endpoint:
    path: /api/v1/alerts/open
    method: GET
    data_selector: alerts
    params: {}
- name: entities
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: entities
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Load Balancer
  endpoint:
    path: /v2/loadbalancers
    method: GET
    data_selector: loadbalancers
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: system_logs
  endpoint:
    path: /logs/system
    method: GET
    data_selector: logs
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: backup_files
  endpoint:
    path: /v1.0/backups
    method: GET
    data_selector: files
    params: {}
- name: backup_status
  endpoint:
    path: /v1.0/status
    method: GET
    data_selector: status
    params: {}
- name: Cloud Queue
  endpoint:
    path: /queues
    method: GET
    data_selector: queues
    params: {}
- name: Cloud Queue Details
  endpoint:
    path: /queues/{queue_id}
    method: GET
    data_selector: queueDetails
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /api/cloud-queues
    method: GET
    data_selector: queues
- name: cloud_server
  endpoint:
    path: /api/cloud-servers
    method: GET
    data_selector: servers
- name: archive_user
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /api/v1/email
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_account
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: records
    params: {}
- name: monitor_open_alerts
  endpoint:
    path: /monitor/open-alerts
    method: GET
    data_selector: alerts
    params: {}
- name: monitor_entities
  endpoint:
    path: /monitor/entities
    method: GET
    data_selector: entities
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /services/email
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_backup
  endpoint:
    path: /cloud_backup
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /api/v1/emails
    method: GET
    data_selector: records
    params: {}
- name: Load Balancer
  endpoint:
    path: /v2/loadbalancers
    method: GET
    data_selector: loadbalancers
- name: Network
  endpoint:
    path: /v2/networks
    method: GET
    data_selector: networks
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: alert
  endpoint:
    path: /alerts
    method: GET
    data_selector: records
- name: entity
  endpoint:
    path: /entities
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_block_storage
  endpoint:
    path: /v3/{project_id}/volumes
    method: GET
    data_selector: volumes
    params: {}
- name: cloud_databases
  endpoint:
    path: /v1/{project_id}/instances
    method: GET
    data_selector: instances
    params: {}
- name: Load Balancer
  endpoint:
    path: /loadbalancers
    method: GET
    data_selector: loadBalancers
    params: {}
- name: email_settings
  endpoint:
    path: /api/v1/email/settings
    method: GET
    data_selector: settings
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /api/v1/emails
    method: GET
    data_selector: records
    params: {}
- name: monitor_open_alerts
  endpoint:
    path: /api/open_alerts
    method: GET
    data_selector: alerts
    params: {}
- name: monitor_entities
  endpoint:
    path: /api/entities
    method: GET
    data_selector: entities
    params: {}
- name: server_time_management
  endpoint:
    path: /docs/set-the-date-and-time-timezone-on-a-linux-server
    method: GET
- name: cron_jobs_setup
  endpoint:
    path: /docs/set-up-cron-jobs-for-action-scripting
    method: GET
- name: lsyncd_setup
  endpoint:
    path: /docs/set-up-lsyncd-locally-and-over-ssh-to-sync-directories
    method: GET
- name: rsync_migration
  endpoint:
    path: /docs/speed-up-rsync-when-migrating-a-linux-server-from-the-command-line
    method: GET
- name: cpu_usage_troubleshooting
  endpoint:
    path: /docs/troubleshoot-high-cpu-usage-on-linux-server
    method: GET
- name: disk_space_troubleshooting
  endpoint:
    path: /docs/troubleshooting-low-disk-space-for-a-linux-cloud-server
    method: GET
- name: file_search
  endpoint:
    path: /docs/use-find-and-locate-to-search-for-files-in-linux
    method: GET
- name: ntp_sync_time
  endpoint:
    path: /docs/using-ntp-to-sync-time
    method: GET
- name: linux_grep_command
  endpoint:
    path: /docs/use-the-linux-grep-command
    method: GET
- name: systemctl_management
  endpoint:
    path: /docs/use-systemctl-to-manage-services
    method: GET
- name: rsync_synchronization
  endpoint:
    path: /docs/using-rsync-to-synchronize-file
    method: GET
- name: system_users_view
  endpoint:
    path: /docs/viewing-system-users-in-linux
    method: GET
- name: zip_files_management
  endpoint:
    path: /docs/work-with-zip-files-in-linux
    method: GET
- name: cloud_servers
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
- name: cloud_networks
  endpoint:
    path: /v2.1/networks
    method: GET
    data_selector: networks
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: email_settings
  endpoint:
    path: /api/v1/email/settings
    method: GET
    data_selector: settings
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /queues
    method: GET
    data_selector: queues
    params: {}
- name: email
  endpoint:
    path: /api/v1/emails
    method: GET
    data_selector: records
- name: email
  endpoint:
    path: /v1/emails
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /services/data/vXX.X/sobjects/Email
    method: GET
    data_selector: records
    params: {}
- name: backup_job
  endpoint:
    path: /v4/backup_jobs
    method: GET
    data_selector: jobs
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: data
    params: {}
- name: entities
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: data
    params: {}
- name: cloud_backup
  endpoint:
    path: /cloud-backup
    method: GET
    data_selector: backups
    params: {}
- name: cloud_block_storage
  endpoint:
    path: /cloud-block-storage
    method: GET
    data_selector: volumes
    params: {}
- name: email
  endpoint:
    path: /services/data/vXX.X/sobjects/Email
    method: GET
    data_selector: records
- name: cloud_queue
  endpoint:
    path: /services/data/vXX.X/sobjects/CloudQueue
    method: GET
    data_selector: records
    params: {}
- name: cloud_server
  endpoint:
    path: /services/data/vXX.X/sobjects/CloudServer
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /v2.0/cloud_queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_server
  endpoint:
    path: /v2.0/cloud_servers
    method: GET
    data_selector: servers
    params: {}
- name: cloud_queue
  endpoint:
    path: /services/data/vXX.X/sobjects/CloudQueue
    method: GET
    data_selector: records
    params: {}
- name: email_settings
  endpoint:
    path: /settings
    method: POST
    data_selector: settings
    params:
      incoming_server_port: 995
      outgoing_server_port: 465
      ssl_enabled: true
- name: cloud_backups
  endpoint:
    path: /v1.0/cloud-backups
    method: GET
    data_selector: backups
    params: {}
- name: cloud_load_balancers
  endpoint:
    path: /v1.0/load-balancers
    method: GET
    data_selector: load_balancers
    params: {}
- name: email
  endpoint:
    path: /v1.0/emails
    method: GET
    data_selector: emails
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: imap_settings
  endpoint:
    path: /imap/settings
    method: POST
    data_selector: settings
    params:
      incoming_port: 993
      outgoing_port: 465
      ssl_enabled: true
- name: email_users
  endpoint:
    path: /api/v1/email_users
    method: GET
    data_selector: users
    params: {}
- name: email_archives
  endpoint:
    path: /api/v1/email_archives
    method: GET
    data_selector: archives
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_migration
  endpoint:
    path: /migrate/email
    method: POST
    data_selector: migration_status
    params: {}
- name: archive_user
  endpoint:
    path: /api/v1/archive_user
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Cloud Block Storage
  endpoint:
    path: /cloud-block-storage/v1
    method: GET
- name: Cloud Backup
  endpoint:
    path: /cloud-backup/v1/
    method: GET
- name: Cloud Databases
  endpoint:
    path: /cloud-databases/v1
    method: GET
- name: Cloud Files
  endpoint:
    path: /cloud-files/v1
    method: GET
- name: Cloud Images
  endpoint:
    path: /cloud-images/v2
    method: GET
- name: Cloud Load Balancers
  endpoint:
    path: /cloud-load-balancers/v1
    method: GET
- name: Cloud Networks
  endpoint:
    path: /cloud-networks/v2
    method: GET
- name: Cloud Orchestratioin
  endpoint:
    path: /cloud-orchestration/v1
    method: GET
- name: Cloud Queues
  endpoint:
    path: /cloud-queues/v1
    method: GET
- name: Cloud Servers
  endpoint:
    path: /cloud-servers/v2
    method: GET
- name: Rackspace Autoscale
  endpoint:
    path: /autoscale/v1/developer-guide/index.html
    method: GET
- name: Rackspace CDN
  endpoint:
    path: /cdn/v1
    method: GET
- name: Rackspace RackConnect
  endpoint:
    path: /rackconnect/v3/developer-guide
    method: GET
- name: archive_user
  endpoint:
    path: /api/v1/archive/users
    method: GET
    data_selector: users
- name: email_settings
  endpoint:
    path: /api/v1/email/settings
    method: GET
    data_selector: settings
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /services/data/vXX.X/sobjects/CloudQueue
    method: GET
    data_selector: records
- name: cloud_servers
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
- name: email_settings
  endpoint:
    path: /services/data/vXX.X/sobjects/EmailSettings
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_server
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
    params: {}
- name: cloud_queue
  endpoint:
    path: /v1/queues
    method: GET
    data_selector: queues
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /support/how-to/add-a-signature-to-rackspace-email
    method: GET
    data_selector: instructions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: POP3
  endpoint:
    path: /pop3
    method: GET
    data_selector: server_settings
    params:
      ssl_server_name: secure.emailsrvr.com
      ssl_port_number: 995
- name: IMAP
  endpoint:
    path: /imap
    method: GET
    data_selector: server_settings
    params:
      ssl_server_name: secure.emailsrvr.com
      ssl_port_number: 993
- name: SMTP
  endpoint:
    path: /smtp
    method: GET
    data_selector: server_settings
    params:
      ssl_server_name: secure.emailsrvr.com
      ssl_port_number: 465
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /api/v1/email
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: open_alerts
  endpoint:
    path: /api/v1/open_alerts
    method: GET
    data_selector: alerts
    params: {}
- name: entities
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: entities
    params: {}
- name: cloud_backup
  endpoint:
    path: /v1.0/cloud_backup
    method: GET
    data_selector: backups
    params: {}
- name: email_settings
  endpoint:
    path: /api/v1/email/settings
    method: GET
    data_selector: settings
    params: {}
- name: user_accounts
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: accounts
    params: {}
- name: open_alerts
  endpoint:
    path: /api/v1/open_alerts
    method: GET
    data_selector: alerts
    params: {}
- name: entities
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: entities
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: migration_prerequisites
  endpoint:
    path: /support/how-to/cloud-office-support-terminology/
    method: GET
    data_selector: records
    params: {}
- name: migration_steps
  endpoint:
    path: /support/how-to/migrate-from-a-pop-server-to-rackspace-email-imap-using-outlook/
    method: GET
    data_selector: records
    params: {}
- name: migration_post_steps
  endpoint:
    path: /support/how-to/change-a-microsoft-exchange-mailbox-password/
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: monitor_open_alerts
  endpoint:
    path: /api/monitor/open_alerts
    method: GET
    data_selector: alerts
    params: {}
- name: monitor_entities
  endpoint:
    path: /api/monitor/entities
    method: GET
    data_selector: entities
    params: {}
- name: cloud_servers
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
    params: {}
- name: email
  endpoint:
    path: /services/data/vXX.X/sobjects/Email
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud_queues
    method: GET
    data_selector: queues
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_address
  endpoint:
    path: /v1/email/addresses
    method: GET
    data_selector: addresses
    params: {}
- name: archive_users
  endpoint:
    path: /archive/users
    method: GET
    data_selector: records
    params: {}
- name: email_settings
  endpoint:
    path: /email/settings
    method: GET
    data_selector: records
    params: {}
- name: open_alerts
  endpoint:
    path: /api/v1/open_alerts
    method: GET
    data_selector: alerts
    params: {}
- name: entities
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: entities
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_settings
  endpoint:
    path: /api/v1/email/settings
    method: GET
    data_selector: settings
    params: {}
- name: email_users
  endpoint:
    path: /api/v1/email/users
    method: GET
    data_selector: users
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /v1/cloud-queues
    method: GET
    data_selector: queues
- name: cloud_server
  endpoint:
    path: /v1/cloud-servers
    method: GET
    data_selector: servers
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_users
  endpoint:
    path: /archive/users
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queues
  endpoint:
    path: /v1/cloud_queues
    method: GET
    data_selector: queues
    params: {}
- name: safelist
  endpoint:
    path: /safelist
    method: POST
    data_selector: data
    params: {}
- name: archive_users
  endpoint:
    path: /api/v1/archive_users
    method: GET
    data_selector: records
    params: {}
- name: email_settings
  endpoint:
    path: /api/v1/email_settings
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: cloud_backup
  endpoint:
    path: /v1/backups
    method: GET
    data_selector: backups
- name: email
  endpoint:
    path: /api/v1/emails
    method: GET
    data_selector: records
    params: {}
- name: backup
  endpoint:
    path: /v1.0/backups
    method: GET
    data_selector: backups
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_settings
  endpoint:
    path: /api/v1/email/settings
    method: GET
    data_selector: settings
    params: {}
- name: emails
  endpoint:
    path: /v1/emails
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /services/email/v1.0
    method: GET
    data_selector: records
    params: {}
- name: alerts
  endpoint:
    path: /api/v1/alerts
    method: GET
    data_selector: alerts
    params: {}
- name: entities
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: entities
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /services/data/vXX.X/sobjects/Email
    method: GET
    data_selector: records
    params: {}
- name: Cloud Block Storage
  endpoint:
    path: /cloud-block-storage/v1
    method: GET
    data_selector: records
- name: Cloud Backup
  endpoint:
    path: /cloud-backup/v1/
    method: GET
    data_selector: records
- name: Cloud Databases
  endpoint:
    path: /cloud-databases/v1
    method: GET
    data_selector: records
- name: Cloud Files
  endpoint:
    path: /cloud-files/v1
    method: GET
    data_selector: records
- name: Cloud Images
  endpoint:
    path: /cloud-images/v2
    method: GET
    data_selector: records
- name: Cloud Load Balancers
  endpoint:
    path: /cloud-load-balancers/v1
    method: GET
    data_selector: records
- name: Cloud Networks
  endpoint:
    path: /cloud-networks/v2
    method: GET
    data_selector: records
- name: Cloud Orchestratioin
  endpoint:
    path: /cloud-orchestration/v1
    method: GET
    data_selector: records
- name: Cloud Queues
  endpoint:
    path: /cloud-queues/v1
    method: GET
    data_selector: records
- name: Cloud Servers
  endpoint:
    path: /cloud-servers/v2
    method: GET
    data_selector: records
- name: Rackspace Autoscale
  endpoint:
    path: /autoscale/v1/developer-guide/index.html
    method: GET
    data_selector: records
- name: Rackspace CDN
  endpoint:
    path: /cdn/v1
    method: GET
    data_selector: records
- name: Rackspace RackConnect
  endpoint:
    path: /rackconnect/v3/developer-guide
    method: GET
    data_selector: records
- name: load_balancer
  endpoint:
    path: /v1/loadbalancers
    method: GET
    data_selector: loadBalancers
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: email_accounts
  endpoint:
    path: /api/v1/email/accounts
    method: GET
    data_selector: records
    params: {}
- name: open_alerts
  endpoint:
    path: /alerts/open
    method: GET
    data_selector: records
- name: entities
  endpoint:
    path: /entities
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_queue
  endpoint:
    path: /v1/cloud-queues
    method: GET
    data_selector: queues
- name: incoming_email
  endpoint:
    path: /incoming
    method: IMAP
    data_selector: settings
    params:
      server_hostname: secure.emailsrvr.com
      port: 993
      ssl: SSL/TLS
      authentication: Autodetect
- name: outgoing_email
  endpoint:
    path: /outgoing
    method: SMTP
    data_selector: settings
    params:
      server_hostname: secure.emailsrvr.com
      port: 465
      ssl: SSL/TLS
      authentication: Autodetect
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Cloud Block Storage
  endpoint:
    path: /cloud-block-storage/v1
    method: GET
- name: Cloud Backup
  endpoint:
    path: /cloud-backup/v1/
    method: GET
- name: Cloud Databases
  endpoint:
    path: /cloud-databases/v1
    method: GET
- name: Cloud Files
  endpoint:
    path: /cloud-files/v1
    method: GET
- name: Cloud Images
  endpoint:
    path: /cloud-images/v2
    method: GET
- name: Cloud Load Balancers
  endpoint:
    path: /cloud-load-balancers/v1
    method: GET
- name: Cloud Networks
  endpoint:
    path: /cloud-networks/v2
    method: GET
- name: Cloud Orchestratioin
  endpoint:
    path: /cloud-orchestration/v1
    method: GET
- name: Cloud Queues
  endpoint:
    path: /cloud-queues/v1
    method: GET
- name: Cloud Servers
  endpoint:
    path: /cloud-servers/v2
    method: GET
- name: Rackspace Autoscale
  endpoint:
    path: /autoscale/v1/developer-guide/index.html
    method: GET
- name: Rackspace CDN
  endpoint:
    path: /cdn/v1
    method: GET
- name: Rackspace RackConnect
  endpoint:
    path: /rackconnect/v3/developer-guide
    method: GET
- name: email
  endpoint:
    path: /api/v1/emails
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /api/archiving/users
    method: GET
    data_selector: records
- name: email_settings
  endpoint:
    path: /api/email/settings
    method: GET
    data_selector: settings
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: set_date_time
  endpoint:
    path: /docs/set-the-date-and-time-timezone-on-a-linux-server
    method: GET
- name: cron_jobs
  endpoint:
    path: /docs/set-up-cron-jobs-for-action-scripting
    method: GET
- name: lsyncd_setup
  endpoint:
    path: /docs/set-up-lsyncd-locally-and-over-ssh-to-sync-directories
    method: GET
- name: rsync_speedup
  endpoint:
    path: /docs/speed-up-rsync-when-migrating-a-linux-server-from-the-command-line
    method: GET
- name: cpu_usage_troubleshoot
  endpoint:
    path: /docs/troubleshoot-high-cpu-usage-on-linux-server
    method: GET
- name: disk_space_troubleshoot
  endpoint:
    path: /docs/troubleshooting-low-disk-space-for-a-linux-cloud-server
    method: GET
- name: file_search
  endpoint:
    path: /docs/use-find-and-locate-to-search-for-files-in-linux
    method: GET
- name: ntp_sync
  endpoint:
    path: /docs/using-ntp-to-sync-time
    method: GET
- name: grep_usage
  endpoint:
    path: /docs/use-the-linux-grep-command
    method: GET
- name: systemctl_management
  endpoint:
    path: /docs/use-systemctl-to-manage-services
    method: GET
- name: rsync_synchronize
  endpoint:
    path: /docs/using-rsync-to-synchronize-file
    method: GET
- name: system_users_view
  endpoint:
    path: /docs/viewing-system-users-in-linux
    method: GET
- name: zip_files_management
  endpoint:
    path: /docs/work-with-zip-files-in-linux
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cloud_queue
  endpoint:
    path: /v1/cloud-queues
    method: GET
    data_selector: queues
- name: cloud_server
  endpoint:
    path: /v1/cloud-servers
    method: GET
    data_selector: servers
- name: archive_user
  endpoint:
    path: /archiving/users
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /api/v1/archive_user
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: system_logs
  endpoint:
    path: /logs/system
    method: GET
    data_selector: entries
- name: network_config
  endpoint:
    path: /network/config
    method: GET
    data_selector: configurations
- name: cloud_queue
  endpoint:
    path: /queues
    method: GET
    data_selector: queues
    params: {}
- name: whois_information
  endpoint:
    path: /v1/whois
    method: GET
    data_selector: data
    params: {}
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
    params: {}
- name: cloud_server
  endpoint:
    path: /cloud-servers
    method: GET
    data_selector: servers
    params: {}
- name: email
  endpoint:
    path: /v1/email
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: open_alerts
  endpoint:
    path: /api/v1/alerts/open
    method: GET
    data_selector: alerts
    params: {}
- name: entities
  endpoint:
    path: /api/v1/entities
    method: GET
    data_selector: entities
    params: {}
- name: cloud_server
  endpoint:
    path: /v2.1/servers
    method: GET
    data_selector: servers
- name: archive_user
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /api/v1/archive/users
    method: GET
    data_selector: records
- name: email_settings
  endpoint:
    path: /api/v1/email/settings
    method: GET
    data_selector: records
- name: cloud_queue
  endpoint:
    path: /cloud-queues
    method: GET
    data_selector: queues
- name: cloud_server
  endpoint:
    path: /cloud-servers
    method: GET
    data_selector: servers
- name: set_date_time
  endpoint:
    path: /docs/set-the-date-and-time-timezone-on-a-linux-server
    method: GET
- name: set_cron_jobs
  endpoint:
    path: /docs/set-up-cron-jobs-for-action-scripting
    method: GET
- name: sync_directories
  endpoint:
    path: /docs/set-up-lsyncd-locally-and-over-ssh-to-sync-directories
    method: GET
- name: speed_up_rsync
  endpoint:
    path: /docs/speed-up-rsync-when-migrating-a-linux-server-from-the-command-line
    method: GET
- name: troubleshoot_cpu_usage
  endpoint:
    path: /docs/troubleshoot-high-cpu-usage-on-linux-server
    method: GET
- name: archive_user
  endpoint:
    path: /services/data/vXX.X/sobjects/ArchiveUser
    method: GET
    data_selector: records
- name: email_archiving
  endpoint:
    path: /services/data/vXX.X/sobjects/EmailArchiving
    method: GET
    data_selector: records
- name: cloud_block_storage
  endpoint:
    path: /cloud-block-storage/v1
    method: GET
    data_selector: records
- name: cloud_backup
  endpoint:
    path: /cloud-backup/v1/
    method: GET
    data_selector: records
- name: cloud_databases
  endpoint:
    path: /cloud-databases/v1
    method: GET
    data_selector: records
- name: cloud_files
  endpoint:
    path: /cloud-files/v1
    method: GET
    data_selector: records
- name: cloud_images
  endpoint:
    path: /cloud-images/v2
    method: GET
    data_selector: records
- name: cloud_load_balancers
  endpoint:
    path: /cloud-load-balancers/v1
    method: GET
    data_selector: records
- name: cloud_networks
  endpoint:
    path: /cloud-networks/v2
    method: GET
    data_selector: records
- name: cloud_orchestration
  endpoint:
    path: /cloud-orchestration/v1
    method: GET
    data_selector: records
- name: cloud_queues
  endpoint:
    path: /cloud-queues/v1
    method: GET
    data_selector: records
- name: cloud_servers
  endpoint:
    path: /cloud-servers/v2
    method: GET
    data_selector: records
- name: rackspace_autoscale
  endpoint:
    path: /autoscale/v1/developer-guide/index.html
    method: GET
    data_selector: records
- name: rackspace_cdn
  endpoint:
    path: /cdn/v1
    method: GET
    data_selector: records
- name: rackspace_rackconnect
  endpoint:
    path: /rackconnect/v3/developer-guide
    method: GET
    data_selector: records
- name: archive_user
  endpoint:
    path: /archive/users
    method: GET
    data_selector: records
- name: email_settings
  endpoint:
    path: /email/settings
    method: GET
    data_selector: records
- name: monitor_open_alerts
  endpoint:
    path: /monitor/open_alerts
    method: GET
    data_selector: alerts
    params: {}
- name: monitor_entities
  endpoint:
    path: /monitor/entities
    method: GET
    data_selector: entities
    params: {}
- name: email_headers
  endpoint:
    path: /view/email/headers
    method: GET
    data_selector: headers
    params: {}
- name: object_storage
  endpoint:
    path: /v1.0
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: archive_user
  endpoint:
    path: /archive/users
    method: GET
    data_selector: records
    params: {}
- name: email_settings
  endpoint:
    path: /email/settings
    method: GET
    data_selector: settings
    params: {}
notes:
- Raxmon is not designed to work on a Windows OS.
- Requires active Rackspace account for access.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- Some objects like Contact may return nulls in deeply nested fields
- Ensure that the correct permissions are set for accessing backup resources.
- Uses OAuth2 with refresh token — requires setup of connected app in Rackspace Intelligence
- Some API responses may vary based on user permissions
- Documentation covers various aspects of Linux server management.
- Some objects like Email may return nulls in deeply nested fields
- Some backups may have limitations during peak usage times.
- Ensure to handle token expiration correctly.
- Requires setup of connected app in Rackspace
- Some API calls may have rate limits
- Ensure proper permissions are set for the API key
- Ensure the correct API version is used for each endpoint.
- Your API key is a unique alphanumeric identifier associated with your account.
- Requires setup of connected app in api
- Requires setup of connected app in Rackspace.
- Deactivating a user only removes their access to MyRackspace. Access to any devices
  under your account are not affected.
- Role-Based Access Control (RBAC) is a secure method of restricting account access
  to authorized users.
- Only the current Account Owner can assign a New Account Owner.
- OAuth2 with setup of connected app in api
- Requires setup of connected app in Rackspace Cloud
- Some resources may have specific permission requirements
- Role-Based Access Control (RBAC) is enabled for the billing-services level (BSL)
  and payment-services level (PSL) only through the Rackspace Technology Customer
  Portal. Rackspace Technology does not provide API access for BSL and PSL at this
  time.
- Rackspace Email Archiving known limitations
- Every Rackspace Technology product is backed by an industry-leading service level
  agreement (SLA).
- Ensure proper configuration of authentication for API access
- Notification preferences can be overridden for critical events.
- Users can toggle notifications ON or OFF.
- Email alerts will be sent out with the modified notification options to admin.
- Ensure OAuth scopes are set correctly for the API access required.
- Requires setting up an API key in the Rackspace account.
- Uses OAuth2 with refresh token — requires setup of connected app in Rackspace Cloud
- API may have rate limits
- Follow the procedure to configure Multi-Factor-Authentication (MFA)
- The application only allows for dedicated devices to be added to a ticket. Adding
  multi-cloud devices is not allowed at this current time.
- Currently it is only possible to export a maximum of 5,000 tickets for each option.
- Multiple guides available for server management tasks
- MFA is mandatory for all customers and must be configured by all accounts.
- Uses OAuth2 with refresh token — requires setup of connected app in Rackspace
- Requires setup of authentication in the Rackspace portal
- Patch groups must be configured before integration.
- Integration may take up to two hours to appear in the dashboard.
- Patch groups give specific instructions to Rackspace about when to initiate patching
  and what type of OS you are patching.
- Some endpoints may have specific rate limits.
- Host Protection service has automated agent deployment and real-time scanning features.
- Rackspace Technology provides around-the-clock support for agent troubleshooting.
- This documentation provides various guides and troubleshooting tips for managing
  Linux servers.
- The onboarding team provides you with a Discovery document that outlines the kinds
  of information necessary for a successful engagement.
- Ensure proper permissions are set for API access
- Some features may require additional configuration
- Setup of connected app required for OAuth2.
- Only Rackspace Technology employees have access to your database.
- We log all activity within your database.
- All access to your database uses multifactor authentication.
- Any employee with access to your database is on the team assigned to your account
  and is a subject matter expert in your database technology.
- Some endpoints may have rate limits that could affect data ingestion.
- Requires a valid API key for access.
- Typically, customers have a single monitoring solution for their entire account,
  but sometimes an environment requires multiple solutions.
- Accessing DBA Services Reports and Health Checks
- Requires setup of connected app in API
- Ensure correct permissions are set for the API user.
- Ensure that you have set up the appropriate roles and permissions in the Rackspace
  Control Panel.
- Enabled automatic ticket creation
- Alert monitors in place
- Ensure proper authentication setup in the Rackspace Cloud.
- Submitting tickets is the most efficient way to communicate needs.
- If the production system is down or experiencing a highly urgent issue, call directly
  after submitting a ticket.
- Requires setup of API key in the Rackspace Portal
- Ensure the API key is enabled for the services being accessed.
- Requires setup of API tokens.
- Ensure all API calls are authenticated.
- Refer to the API Reference for specific endpoint details.
- Ensure you have the correct permissions for API access.
- Use the correct region for your API calls.
- Cloudflare offers free DNS services to customers in all plans.
- The Cloudflare DNS default Time-To-Live (TTL) is 300 seconds (five minutes).
- Ensure proper permissions for accessing load balancer resources.
- Various guides available for Linux server management
- Requires proper setup of Rackspace API authentication.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Ensure to set up the connected app in Rackspace for OAuth2 authentication.
- Requires setup of an API key to access services
- Upgrading to a Managed Operations account doesn't change server Internet Protocol
  (IP) addresses or hostname.
- New Cloud Servers on Managed Operations accounts have a basic Rackspace Cloud Backup
  configuration.
- Requires setup of authentication credentials in the Rackspace control panel.
- This functionality is available only when you create a server. If you want any of
  the tools installed after you have created the server, you must download the tools
  and configure them individually on the servers.
- Requires API key and secret for authentication.
- Rate limits apply to API calls.
- The Managed Operations service level provides support beyond the Managed Infrastructure
  service level.
- Support is provided for Windows 2008 and 2012 as best as possible, with no guarantees.
- Uses OAuth2 with refresh token — requires setup of connected app in Rackspace.
- Requires setup of connected app in Rackspace Intelligence.
- Some API calls may be rate-limited.
- Support for programming languages is limited to installation and does not include
  assistance with code or add-on frameworks like Ruby on Rails.
- Requires OAuth2 authentication setup.
- Ensure correct API endpoint URLs are used.
- SQL Database automatically performs weekly full database backups, hourly differential
  database backups, and transaction log backups every five minutes.
- Ensure that the API keys are valid and have the necessary permissions.
- Rackspace will discontinue support of GoGrid service effective May 31st, 2019.
- Data will not be accessible after the EOL date.
- Ensure that API keys are kept secure and not exposed in client-side code.
- Covers various aspects of managing a Linux server including networking, security,
  and performance monitoring.
- The website is now considered down for maintenance.
- Ensure proper permissions are set for user management
- Monitor system logs for security audits
- Cassandra is high-performing and horizontally scalable.
- Cassandra uses a peer-to-peer distribution model that makes distributing data across
  multiple data centers and cloud availability zones easy.
- Cassandra automatically maintains the balance of data across a cluster even when
  you remove existing nodes or add new nodes to a system.
- Cassandra is a good choice when you have a very large amount of data and consistency
  isn't a priority.
- Patching delays in a Managed Red Hat Network server also cause update delays in
  the proxy servers for the Managed Operations service level.
- Ensure to manage authentication tokens properly to avoid 401 errors.
- Ensure authentication setup is complete before accessing the API.
- Ensure API key is enabled for access to the services.
- Requires setup of API keys in the Rackspace portal
- The Oracle home location has been redefined, and there is no longer a middleware
  home.
- The move from test to production is carried out differently.
- Ensure API keys are kept secure and not exposed.
- The default dimensions for the logo file is 119 x 25 pixels for OBIEE 11.1.1.7 and
  104 x 14 pixels for OBIEE 11.1.1.9. Only OBIEE 11.1.1.9 allows changes to the entire
  screen (Login page, Home, dashboards, and logout page) in one pass of the change
  to the `oracle_logo.png` file.
- Uses Oracle Forms Personalization for various customizations.
- Some forms may close unexpectedly due to the Close Other Forms option.
- Improve cash management in payables using the Payables Cash Requirement Report.
- Oracle has alternatives to full blown implementations of advanced supply chain planning.
- Consider using the Global Consolidation System within Oracle General Ledger to consolidate
  results.
- Documentation provides guidance on various Linux server management tasks.
- Ability to log in to your Sitecore content management website is required.
- Familiarity with deploying to Sitecore Cloud using FTP is recommended.
- Some API calls may limit rate
- Rackspace SSL certificates are not available to customers who use only cloud servers.
- You cannot delete your application or website through the Azure portal. To delete
  your application, contact Rackspace Support.
- Some APIs may have specific rate limits
- Tiers and topologies are subject to availability.
- Uses OAuth2 with refresh token — requires setup of connected app in Rackspace Email
- Ensure API keys are managed securely.
- Ensure OAuth2 is properly configured.
- Backups may take time to reflect in the API.
- Ensure to set up a connected app in Rackspace for OAuth2.
- API limits may apply depending on the account type.
- You need an up-to-date license file to use Sitecore.
- Refer to API documentation for endpoint specifics.
- Rate limits may apply to API calls.
- Various guides available for managing Linux servers
- Ensure API key is stored securely.
- API follows RESTful principles.
- We recommend that you get updates from the closest WSUS server.
- Requires an API key for authentication
- Uses of Rackspace CDN
- Some operations may be rate-limited or have usage quotas
- This document provides a handbook for accessing Rackspace Object Storage (ROS) through
  the Rackspace Customer Portal link.
- Ensure to manage your API keys effectively.
- API requires OAuth2 authentication.
- Pagination is not supported by this API.
- Documentation provides various guides for Linux server management tasks.
- Rackspace Data Protection powered by Cohesity is a cutting-edge backup service that
  offers comprehensive data protection solutions to safeguard your critical business
  data.
- Ensure proper permissions are set for scripts.
- Make sure to handle token expiration correctly.
- Backups will run at the same cadence.
- Both products will not run concurrently.
- API requires setup of connected app in Rackspace
- Backup policies define the retention as well as the frequency.
- Backup policies define backup retention as well as the frequency.
- API requires authentication via OAuth2
- Cohesity will make no changes to the original VM(s) if no action is selected.
- Some endpoints may have rate limits that need to be considered.
- Documentation covers various aspects of Linux server management, including setup
  and troubleshooting.
- Ensure proper OAuth2 setup for authentication.
- 'Automatic License Billing: By selecting and deploying an image with bundled software,
  you are accepting associated license charges for that software.'
- 'No Separate Procurement Required: No manual license registration or request is
  needed. Rackspace will add the charge automatically to your monthly invoice.'
- Commands and configurations are applicable to various distributions of Linux.
- Rackspace Technology has the breadth of knowledge required to operate the most complex
  cloud deployments on a global scale.
- API may have rate limits that need to be considered for ingestion.
- API usage may be subject to rate limits.
- Ensure proper authentication setup to access the API
- Rackspace support of third-party tools is limited to ingestion of events only.
- Each account has its own set of webhooks.
- Be sure that you configure your tool for the right cloud account, using the right
  values for secret and severity. If you misconfigure your tool, alerts won’t be translated
  into Rackspace tickets and might result in downtime.
- Ensure that the setup completed successfully by using kubectl commands to check
  pods and services.
- Update the Alertmanager configuration section to use the Watchman webhooks.
- No specific API information available in the documentation.
- If you need direct API access to Rackspace tickets through Watchman, contact your
  Sales team.
- Some API endpoints may have rate limits
- Users can find detailed instructions for popular devices using the Email Help tool
- Protect your account by enabling multifactor authentication for yourself and your
  administrators.
- Secure your Office 365 administrator account by enabling multi-factor authentication.
- Some operations may be rate-limited
- Various guides and troubleshooting steps for Linux server management
- Some features may require additional configuration.
- Rate limits may apply to API usage.
- The default domain in Office 365 is {tenantName}.onmicrosoft.com.
- Some API calls may return nulls in deeply nested fields.
- Setting up email takes about five minutes.
- Propagation of email inside the Gmail application depends on the size of the mailbox
  as well as the internet speed.
- Documentation contains various guides for managing Linux servers.
- Each Office 365 account is created with a default administrator account with the
  Global Administrator role.
- Having more than four Global Administrators on an account is a security threat.
- Known Issues and Suggested Workarounds for RBAC
- No specific API authentication is required.
- All users must have Azure Information Protection Plan 1 or 2 licenses for encryption
  to work.
- Administrators need access to the Office 365® Control Panel.
- Users need access to Outlook® or the Outlook Web Application® (OWA).
- Ensure proper permissions are set for accessing queues
- Some API features may require additional permissions
- Requires administrative credentials to connect to Office 365 tenant
- Admins are responsible for updating their domain’s DNS records.
- Ensure proper permissions are granted for API access
- Ensure to manage API rate limits to avoid throttling.
- Various guides available for Linux server management.
- Administrators can configure organization-wide multi-factor authentication requirements
  by creating a Conditional Access policy in their Azure Active Directory from the
  Azure Portal.
- Limited support for some features such as license management and basic connectivity.
- OAuth2 with refresh token required for integration.
- Some responses may include null fields
- Using an IMAP or SMTP connection reduces functionality outside of your email program.
- Administrators need Global Administrator permissions to the Office 365.
- Recommended Cloud Backup File or Directory Level Configuration for a Linux Server
- Troubleshoot Cloud Backup on Linux Servers
- Security defaults only support MFA by using the Microsoft Authenticator app with
  the notification method.
- Some settings may return nulls in deeply nested fields
- Some entities may return null values
- If you aren't sure if your license includes the Office suite, contact your administrator.
- Outlook might be trying to authenticate with an old password.
- Ensure to set up proper authentication credentials.
- If your organization requires multi-factor authentication or self-service password
  reset registration, you might be prompted for additional verification methods during
  the setup process.
- Uses OAuth2 with refresh token.
- Safelisting a domain prevents messages sent from that domain from being filtered
  as spam.
- If you notice any issues with mail delivery, we recommend that you turn off the
  rule by unchecking it in the rules list.
- Multi-factor Authentication (MFA) - Cloud Users
- Ensure permissions are correctly configured.
- Guest Access is disabled by default in Office 365.
- A global administrator must turn on Guest Access for teams before team owners can
  add guests.
- No explicit authentication required for accessing the documentation.
- Ensure proper permissions are set for backup access.
- Backup jobs can be scheduled and monitored through the API.
- If Multi-Factor Authentication is enabled, Outlook prompts you for the default verification
  method when you configure your account for the first time.
- If you are unsure whether your license includes OneDrive, contact your administrator.
- OAuth2 with refresh token required.
- Rate limiting may apply.
- If you are unsure of whether or not your license includes Exchange Online, contact
  your administrator.
- Various guides and troubleshooting steps for managing Linux servers
- Requires setup of Rackspace account and API key.
- To edit documents on your Android Device via OneDrive, you must install the corresponding
  Office App from the Google Play Store.
- Some objects may return nulls in nested fields
- Some endpoints may have rate limits
- No authentication required for accessing Linux server management functions.
- Some responses may be paginated depending on the endpoint
- Requires setup of Rackspace account and API keys.
- Ensure you have a Microsoft 365 license with OneDrive access.
- This API does not require authentication.
- Ensure that the server has proper configurations before making API calls.
- Uses OAuth2 with refresh token — requires setup of Rackspace Cloud account
- The OneDrive for Business application syncs files in real time.
- No specific authentication required for the provided resources.
- If you are unsure whether your license includes Exchange Online, contact your administrator.
- Requires appropriate permissions for API access
- Requires Microsoft 365® email address and password
- Setup takes approximately five minutes
- If Multi-Factor Authentication is enabled, Outlook prompts you for the default verification
  method when configuring your account for the first time.
- 20 Minutes for initial installation and configuration —sync time varies based on
  mailbox size and network speed.
- When you try to configure an Office 365 user that has multi-factor authentication
  (MFA) enabled, the Outlook mobile application asks you for the default MFA verification
  method to proceed when signing in.
- Ensure API key is active and valid
- No specific API authentication is mentioned.
- Ensure proper OAuth scopes are assigned
- Admins are responsible for updating their domain's DNS records.
- Existing passwords might or might not work with the Office 365 password requirements.
- Documentation provides various guides and troubleshooting steps for managing Linux
  servers.
- The introduction of Granular delegated admin permissions (GDAP) which Microsoft
  enforces requires approval from a global administrator of the tenant.
- A customer with regulatory requirements can utilize GDAP to provide only the least-privileged
  access to cloud solutions partners (CSP).
- As GDAP has an expiration date, you will be required to approve the GDAP relationship
  once it has expired.
- Uses OAuth2 for authentication.
- Set up an API key in the Cloud Office Control Panel
- Uses OAuth2 with refresh token — requires setup in the Rackspace portal
- The maximum message size for group lists is 5 MB.
- Common Windows issues - Key Management Server activation
- Use OAuth2 with refresh token — requires setup of connected app in Rackspace.
- Some endpoints may require additional parameters for filtering.
- Requires setup of a connected app in Rackspace
- Some APIs may have rate limits or specific usage guidelines
- API calls may be rate-limited
- Mailbox creation in the Cloud Office Control Panel can take up to 15 minutes.
- Ensure proper authentication setup to access the API.
- Some endpoints may have specific rate limits
- Some features may not be available depending on the account type
- No specific authentication required for accessing server management tasks.
- Default multi-factor authentication setting is Off for all new domains.
- Disabling a mailbox does not remove it from your billing. The mailbox continues
  to receive and store mail even after access is blocked.
- OAuth2 with refresh token — requires setup of connected app in Rackspace.
- Review Password Management and Best Practices before setting passwords for your
  users.
- We cannot make exceptions for any file type listed for any reason.
- Use of Amazon Web Services API requires specific configurations and permissions.
- OAuth2 with refresh token required for API access.
- Ensure correct scopes are set in your application.
- Documentation covers various topics related to managing Linux servers.
- Requires setup of connected app in Rackspace API
- May have rate limits on API requests
- Email hosting services are a month-to-month service billed in arrears and are not
  billed pro-rata.
- This documentation provides various guides and troubleshooting steps for managing
  Linux servers.
- Requires setup of API keys in the Rackspace Cloud Control Panel
- Requires OAuth2 setup in Rackspace account.
- Some endpoints may require additional permissions.
- API requires authentication for all requests.
- Documentation for various Linux server management tasks.
- Ensure you have the correct permissions for accessing Cloud Backup features.
- Rackspace Email can synchronize mail.
- If you need to synchronize Contacts and Calendar items to your mobile device, consider
  upgrading to Rackspace Email Plus.
- Apple Mail typically clears the User Name field after you enter new values in the
  Incoming Mail Server and Outgoing Mail Server fields.
- You can synchronize only Mail with Rackspace Email. If you need to synchronize Mail,
  Contacts, and Calendar items to your mobile device, consider upgrading to Rackspace
  Email Plus.
- OAuth2 authentication required.
- Ensure correct scope permissions are set.
- If you see items missing in the new Outlook account, you must import the data from
  the old profile.
- Requires API key for access
- Rate limits apply to API calls
- Some entities may return nulls in deeply nested fields
- No specific authentication setup needed for general configurations.
- If the old email address connects through POP, migrate the POP data to an IMAP account
  to not lose data in the rename configuration.
- Ensure that the project ID is included in requests.
- Load balancer API may have specific rate limits.
- Some responses may vary based on user permissions
- You cannot create a control panel site that uses a site name that already exists
  or that uses the root domains of mymailsrvr.com, mycpsrvr.com, or a domain that
  is listed on Google Safe Browsing.
- Various guides for system management and troubleshooting on Linux servers.
- Some APIs may require specific permissions to access.
- Ensure OAuth scopes are properly set for API access.
- Private label Webmail sites allow you to customize and to secure the portal used
  by your users or customers to access their email.
- You cannot create a private label Webmail site that uses a site name that already
  exists, that uses the root domain of mymailsrvr.com, or that is listed on Google
  Safe Browsing.
- This documentation provides guidance on various Linux server management tasks.
- Authentication is required to access backup resources.
- Requires an API key set up in the Cloud Office Control Panel
- Email hosts might ask for multiple MX record entries.
- A common CNAME record entry is an Autodiscover Record.
- SPF, DKIM, and DMARC records are important because of increased “spoofing” and “phishing”
  attempts.
- Requires setup of connected app in Rackspace Intelligence
- Some API operations may have limitations or require specific permissions
- Ensure API key is included in every request
- Ensure API token is refreshed regularly.
- The procedure might be different for each Android mobile phone.
- You might experience no problems when accessing the default APN for other uses,
  such as browsing websites or using network-connected apps.
- Requires setup of connected app in the backup API
- Some responses may include null values
- Special characters in mailbox folder names cause the migration to fail.
- Ensure to set up necessary permissions for API access.
- No specific API information provided for configuration.
- User education is the first line of defense against spoofing attacks.
- Implementing SPF, DKIM, and DMARC records is essential to prevent spoofing.
- Rasckspace does not disclose these numbers to third parties, including reseller
  administrators.
- Some resources may have rate limits
- DKIM enabling is automatic if you manage your domain's DNS through your Cloud Office
  Control Panel
- If you manage your domain's DNS through another service, that service provides the
  DNS key and value information to add a new TXT record
- Ensure proper permissions for API access
- Various guides and troubleshooting tips for managing Linux servers.
- A strong security policy is not complete without enabling two-factor authentication.
- Authentication requires setup in the Rackspace Identity Service.
- Requires setup of a Rackspace account.
- Some API limits may apply.
- Save the file somewhere that you can easily locate for later use, such as the Desktop.
- Requires specific permissions to access backup resources
- Check for quota limitations on backup storage
- Some features may require additional permissions.
- Ensure API version compatibility.
- Accurately determining how much time it takes to migrate email data to Rackspace
  is difficult because of several factors, including system load, bandwidth, average
  item size, and source or destination bottlenecks.
- If you need to configure your DNS for Rackspace Cloud Office Email products, see
  Set up DNS records for Cloud Office email.
- You can streamline the process of configuring a client or device for Exchange® by
  setting a DNS record for your domain that points to the Rackspace auto-discover
  server.
- By default, email clients store your sent, draft, and trash email on your computer,
  rather than storing it on the email server.
- No specific API authentication required.
- Some email functionalities may have specific access requirements
- Uses OAuth2 with refresh token — requires setup of connected app in Rackspace CDN
- Rackspace APIs require OAuth2 token management for authentication
- Ensure to handle token expiration and refresh accordingly
- Some APIs may have rate limits that need to be considered.
- No specific authentication is required for server management operations.
- Ensure to manage API versioning for compatibility.
- Some endpoints may have limitations on data returned.
- Some APIs may have specific limitations
- Managed and Dedicated customers access contacts and permissions in the MyRackspace
  Portal.
- Ensure proper permissions are set for cloud queues.
- Be cautious of rate limits while making API calls
- Never share DKIM keys between services.
- Segregating emails enables you to lock down each mail stream.
- Some emails may return nulls in certain fields
- General guidelines for managing Linux servers.
- Some commands may require root privileges.
- General guidance for managing Linux servers
- Some endpoints may have rate limiting
- An email is sent to the newly created administrator's email address with instructions
  for account setup.
- If you remove a device from the Trusted Devices list, you must use multi-factor
  authentication when you next log in to your account on that device.
- Ensure to monitor the backup job statuses regularly.
- Requires OAuth2 for authentication.
- Ensure proper setup of API keys and tokens.
- The system might prompt you to set up password recovery when you log in
- You can enable or disable password recovery in your account settings
- This process does not store your old emails on our servers.
- Ensure proper scope is set for the API access.
- Ensure to set up OAuth2 authentication before making requests.
- Migration of POP data requires manual steps and cannot be fully automated
- Use secure (SSL) servers for increased security.
- My Outgoing Server (SMTP) Requires Authentication must be selected.
- Requires proper configuration and setup in the Rackspace Control Panel
- Ensure to have the correct permissions set for the API keys.
- Ensure that you can update your email DNS records at your current DNS host.
- Inform users to refrain from changing their passwords during the migration process.
- Integration may require specific permissions to access archived data
- Some endpoints may have rate limits.
- If you remove this file, you might need to enter your account credentials again.
- By default, the Library folder, under your username folder, is hidden.
- Ensure proper configuration of connected app for authentication.
- Apple Mail exports the mailboxes as .mbox packages. If you previously exported a
  mailbox, Apple Mail doesn't overwrite the existing .mbox file; it creates a new
  .mbox file.
- Ensure that the correct authentication tokens are set up.
- Folders names with special characters—such as commas ( , ), periods ( . ), slashes
  ( / ), and ampersands ( & )—commonly cause issues during migration.
- After the migration has been performed, iPhone and Android mail users might notice
  messages sorted from the oldest to newest.
- Images are not displayed by default when you read an email that links to images
  hosted on a separate server from your email.
- Ensure to set up OAuth2 credentials in the Rackspace portal.
- The Directory Sync service must be installed directly on your domain controller.
- After installation, Directory Sync cannot automatically synchronize existing passwords.
- The maximum size of a Rackspace Email box is 25 GB.
- The maximum size for an attachment in the Rackspace environment is 50 MB.
- Requires a valid Rackspace account and API key.
- Limits are applied per email address.
- Sending limits are enforced on a 24-hour calendar day time period starting at 00:00:00
  Eastern Daylight Time (EDT) and ending at 23:59:59 EDT.
- Sending limits are enforced on the total number of recipients during this period,
  not total messages.
- Email addresses are limited to 10,000 total recipients per 24-hour period.
- Some API calls may require specific permissions
- Ensure that the Rackspace account has active services for API access.
- Requires valid Rackspace account for API access
- Users do not have access to email after the migration has started.
- Migration does not guarantee that all calendar and contact data stored in Rackspace
  Webmail will migrate.
- No specific API integration details provided.
- This article describes how to view user storage in the Cloud Office Control Panel
  as well as best practices for mailbox storage.
- Usage updates once every 24 hours.
- Consider the storage shown in apps.rackspace.com to be the authority for your storage
  available on the server.
- Requires OAuth2 authentication for API access.
- Ensure to handle pagination when retrieving large datasets.
- Email address renaming may require additional permissions
- Use OAuth2 with refresh token
- When you delete a mailbox the username will be unavailable for 14 days.
- Exporting the profile before renaming the mailbox prevents mail data loss.
- Various guides and troubleshooting tips for Linux servers
- Some users may experience delays in email delivery
- Rate limits may apply depending on the endpoint
- Requires setup of OAuth application in Rackspace.
- Ensure to configure the connected app for OAuth2 properly.
- Ensure OAuth2 token has the correct scopes for accessing backups.
- Requires setup of connected app in Rackspace Email
- User or administrator must be involved in securing the mailbox.
- Weak or moderate strength passwords can lead to compromise.
- Requires OAuth2 setup in Rackspace Cloud Control Panel
- You cannot secure a control panel site using a site name that uses the root domains
  of mymailsrvr.com, mycpsrvr.com, or a domain that is listed on Google Safe Browsing.
- For specific instructions on editing your DNS records, contact your DNS host.
- Requires API key for authentication.
- Some API operations may have rate limits
- Ensure API keys are stored securely.
- No specific API details provided.
- Various guides available for system management and troubleshooting.
- Uses OAuth2 for authentication
- Requires setup of connected app in Rackspace OpenStack Flex.
- Your new settings take 24 to 48 hours to propagate to the world.
- Ensure to check API documentation for specific endpoint behavior
- Mobile Sync synchronizes your email, contacts, and calendar events in real-time.
- Requires setup of authenticated application in the Rackspace Cloud.
- These are third-party apps, which Rackspace doesn't own or support. Use these apps
  at your discretion.
- Some resources may have limits on number of concurrent requests
- Some endpoints may have limitations on the number of returned items
- Allow at least 15 minutes after setup for the forward to be fully enabled.
- This feature has been sunset.
- Requires configuration for email archiving
- Ensure proper permissions are set for user access
- Documentation provides a variety of guides for managing Linux servers.
- The transfer process takes between 4–7 business days.
- Ensure API key is obtained via the Cloud Office Control Panel
- Use appropriate permissions to access system configurations
- Ensure to backup configuration files before making changes
- Ensure you have a valid API key for authentication
- Setup of connected app in Rackspace required for OAuth2.
- The information that you provide is visible to anyone who searches the Internet
  for your domain's WHOIS record.
- If you do not complete the verification process within 15 days of making changes,
  your domain will be suspended.
- Some operations may require specific permissions
- Some objects may return nulls in deeply nested fields.
- No specific authentication setup required for API access.
- Ensure to configure your API key for access
- This upgrade applies to the entire domain. You cannot upgrade individual users.
- Allow the upgrade to complete before making any other changes.
- Requires setup of authentication in Rackspace control panel
- Requires configuration of OAuth2 connected app for authentication
- Requires setup of API key in the portal.
- Ensure proper permissions are granted for API access.
- Ensure correct scopes are set for API access
- Check for rate limiting on API requests
- Requires authentication to Dropbox
- Requires setup of a Rackspace account for API access
- Never click a link to go to a website that requires authentication. Always enter
  the official domain into your browser and authenticate there.
- Because the steps for viewing email headers varies depending on the email client,
  seek up how to view email headers for your mailbox program first.
- Emails purporting to be from an official source but with poor spelling or language
  should be avoided.
- Emails offering huge sums of money or anything else that sounds too good to be true
  are almost always a scam.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check credentials and permissions'
- '404 Not Found: Verify endpoint and resource availability'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '403 Forbidden: Insufficient permissions to access the resource.'
- '404 Not Found: The requested resource does not exist.'
- '403 Forbidden: Check your permissions for accessing backups'
- '404 Not Found: Ensure the backup resource exists'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check your credentials and permissions'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Confirm the resource exists.'
- '401 Unauthorized: Check your API key or token validity.'
- '429 Too Many Requests: Rate limit exceeded.'
- '403 Forbidden: Check API keys and permissions'
- '404 Not Found: Verify endpoint and resource'
- '500 Internal Server Error: Retry after a brief wait'
- '404 Not Found: Check the resource identifier'
- '429 Too Many Requests: Throttle requests or reduce frequency'
- '403 Forbidden: Check your API key and permissions'
- '404 Not Found: Verify the endpoint path'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Verify your authentication credentials.'
- '404 Not Found: Check the endpoint URL.'
- '401 Unauthorized: Recheck API key or token expiration'
- '401 Unauthorized: Check your API key and permissions.'
- '403 Forbidden: Check user permissions'
- '404 Not Found: Verify endpoint path'
- '500 Internal Server Error: Retry the request'
- '429 Too Many Requests: Rate limit exceeded. Try again later.'
- '401 Unauthorized: Check your authentication credentials.'
- '403 Forbidden: You do not have permission to access this resource.'
- '403 Forbidden: Check your credentials and permissions.'
- '500 Internal Server Error: Retry the request after a short delay.'
- '401 Unauthorized: Invalid authentication credentials.'
- '401 Unauthorized: Check your API key or token'
- '404 Not Found: The requested resource could not be found'
- '401 Unauthorized: Check your credentials and permissions.'
- '403 Forbidden: Ensure you have the necessary permissions to access the resource.'
- '403 Forbidden: Insufficient permissions for the requested operation'
- '404 Not Found: Verify the endpoint and resource exist'
- '403 Forbidden: Check permissions for the requested resource.'
- '404 Not Found: Verify the resource ID.'
- '500 Internal Server Error: Try the request again later.'
- '400 Bad Request: Check request parameters.'
- '404 Not Found: Verify the endpoint path.'
- '500 Internal Server Error: Retry the request or contact support.'
- '401 Unauthorized: Verify API key and permissions'
- '401 Unauthorized: Check token validity.'
- '404 Not Found: Verify endpoint paths.'
- '404 Not Found: Verify the endpoint URL.'
- '401 Unauthorized: Check your API key and token.'
- '403 Forbidden: Ensure you have permissions for this action.'
- '401 Unauthorized: Check your credentials'
- '400 Bad Request: Check the parameters being sent in the request.'
- '401 Unauthorized: Ensure valid authentication credentials are provided.'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: Resource does not exist'
- '400 Bad Request: Check the request parameters'
- '401 Unauthorized: Verify client ID and secret.'
- '404 Not Found: Check endpoint path.'
- '401 Unauthorized: Check if the token is valid.'
- '403 Forbidden: Ensure you have the right permissions.'
- '404 Not Found: Verify the endpoint or resource exists.'
- '404 Not Found: Ensure the endpoint is correct.'
- '429 Too Many Requests: Slow down your request rate.'
- '403 Forbidden: Check API key or permissions.'
- '404 Not Found: Resource not found.'
- '500 Internal Server Error: Service unavailable.'
- '401 Unauthorized: Check your API key'
- '429 Too Many Requests: Rate limit exceeded'
- '403 Forbidden: Check your API key and permissions.'
- '401 Unauthorized: Check your authentication token.'
- 'File not found: Check path and permissions.'
- 'Permission denied: Ensure correct user privileges.'
- '401 Unauthorized: Check your credentials and token.'
- '401 Unauthorized: Recheck API credentials.'
- '401 Unauthorized: Check credentials'
- VM recovery will fail if there is an existing VM with the same name.
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Check token validity and scopes.'
- '403 Forbidden: Insufficient permissions for the requested resource.'
- '401 Unauthorized: Check your token and permissions'
- '403 Forbidden: Ensure proper access rights'
- '429 Too Many Requests: Exceeded rate limits'
- If you have any issues, see Troubleshooting.
- '403 Forbidden: You do not have permission to access this resource'
- '401 Unauthorized: Verify your API key or token.'
- '403 Forbidden: Check API key and permissions'
- '404 Not Found: Verify the endpoint and resource ID'
- '404 Not Found: Verify the queue path'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '403 Forbidden: Insufficient permissions or access denied'
- '403 Forbidden: Check your permissions.'
- '404 Not Found: Check if the endpoint is correct.'
- '403 Forbidden: Verify your access permissions.'
- '401 Unauthorized: Verify your API key.'
- '401 Unauthorized: Invalid credentials provided.'
- '500 Internal Server Error: An error occurred on the server.'
- '401 Unauthorized: Check credentials and token expiration'
- '429 Too Many Requests: Slow down request rate'
- '401 Unauthorized: Check your credentials.'
- '404 Not Found: The requested resource could not be found.'
- '404 Not Found: Verify the endpoint and resource'
- '500 Internal Server Error: Try again later or contact support'
- '401 Unauthorized: Recheck OAuth token.'
- '500 Internal Server Error: Server is currently unavailable.'
- '401 Unauthorized: Recheck OAuth credentials or token expiration'
- Login Error - The connection to your mail server timed out. Please check your mail
  settings.
- '401 Unauthorized: Invalid API key'
- '403 Forbidden: Access denied for this operation'
- '403 Forbidden: Check permissions for the requested resource'
- '404 Not Found: Verify the endpoint and resource identifier'
- '404 Not Found: Ensure the resource exists.'
- 'AUTHENTICATION_FAILED: Check client credentials'
- 'NOT_FOUND: Resource does not exist'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'INVALID_CREDENTIALS: Check your OAuth token or client secret.'
- 'ACCESS_DENIED: Ensure your API key has the necessary permissions.'
- '401 Unauthorized: Check API credentials'
- '403 Forbidden: Insufficient permissions for the action requested'
- '403 Forbidden: Check user permissions.'
- '404 Not Found: Verify the endpoint and resource.'
- '450 4.1.8: Sender address rejected: Domain not found'
- '451 4.3.0: Client host rejected: Throttled - Too much spam from your mail server.
  Try again later.'
- '421: Too many concurrent connections from this client (G2)'
- '504 5.5.2: Sender address rejected: need fully-qualified address'
- '550: Your message has been rejected because you have been detected sending spam.'
- '550 5.1.0: Sender address rejected: User unknown in relay recipient table'
- '550 5.1.1: Recipient address rejected: User unknown in relay recipient table'
- '550 5.3.4: Message too large (G17)'
- '550 5.7.0: [blocked file] - Your message has been rejected because it contains
  a banned file attachment (G1A)'
- '554 5.7.1: Sender address rejected: Blocked by this domain'
- '500 Internal Server Error: Retry the request after some time.'
- 'REQUEST_LIMIT_EXCEEDED: Reduce API call frequency.'
- '404 Not Found: Check if the resource exists'
- '401 Unauthorized: Verify credentials and permissions'
- '404 Not Found: Verify the resource exists.'
- '403 Forbidden: Check permissions for the project.'
- '400 Bad Request: Review the request parameters.'
- '401 Unauthorized: Check your API key and permissions'
- '403 Forbidden: You do not have access to this resource'
- '401 Unauthorized: Token may have expired.'
- 'INVALID_TOKEN: Check if the token is valid.'
- '403 Forbidden: Check your permissions'
- '404 Not Found: Ensure the resource exists'
- 'INVALID_CREDENTIALS: Check your API key and secret'
- 'ACCESS_DENIED: Ensure user has appropriate permissions'
- Propagation takes up to 48 hours to complete.
- '401 Unauthorized: Check your credentials or token expiration'
- '429 Too Many Requests: Rate limit exceeded, slow down requests'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify API key validity'
- '404 Not Found: Ensure endpoint is correct'
- '401 Unauthorized: Check credentials and token validity.'
- '403 Forbidden: Insufficient permissions for the requested operation.'
- Unable to connect to email server to verify you account information. No response
  from server.
- '403 Forbidden: Check permissions and roles assigned.'
- '401 Unauthorized: Check your authentication credentials'
- '404 Not Found: The requested resource was not found.'
- '404 Not Found: Verify resource existence'
- '429 Too Many Requests: Throttle your requests'
- '404 Not Found: Resource may not exist or be accessible'
- '400 Bad Request: Check your request parameters.'
- '404 Not Found: Verify the requested resource path'
- '404 Not Found: Verify the queue exists.'
- '400 Bad Request: Check your request format and parameters'
- '401 Unauthorized: Verify your credentials and permissions'
- '429 Too Many Requests: Rate limit exceeded, reduce request frequency'
- '404 Not Found: Check if the endpoint is correct or if the resource exists.'
- '500 Internal Server Error: Retry the request after a few minutes.'
- '401 Unauthorized: Check your credentials and token expiration.'
- '403 Forbidden: Check your permissions and roles.'
- '401 Unauthorized: Check your credentials and authentication setup.'
- '404 Not Found: Verify the endpoint URL and resource availability.'
- '401 Unauthorized: Check your credentials or token expiration.'
- 'AUTHENTICATION_FAILED: Check your client ID and secret.'
- 'RESOURCE_NOT_FOUND: Verify the endpoint path.'
- 'RATE_LIMIT_EXCEEDED: Reduce request frequency.'
- '403 Forbidden: Check permissions or access rights.'
- '403 Forbidden: Check your API permissions.'
- '500 Internal Server Error: Retry the request later.'
- '403 Forbidden: Insufficient permissions.'
- Automated email and spam are restricted at much lower limits to protect the integrity
  of the system.
- '401 Unauthorized: Check client credentials'
- '404 Not Found: Check the endpoint URL'
- '404 Not Found: Verify the endpoint and resource ID.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- 'INVALID_REQUEST: Check the request parameters'
- '403 Forbidden: Ensure you have the right permissions'
- '401 Unauthorized: Verify the OAuth token'
- '404 Not Found: Ensure the endpoint exists'
- '429 Too Many Requests: Slow down your requests'
- '401 Unauthorized: Check your API key or token.'
- '400 Bad Request: Check the request payload.'
- 'Unauthorized: Check your API key and permissions.'
- 'Not Found: The requested resource does not exist.'
- '401 Unauthorized: Check the authentication credentials.'
- '404 Not Found: The requested backup does not exist.'
- '401 Unauthorized: Check credentials or token expiration'
- '403 Forbidden: Check permissions on the API key.'
- '403 Forbidden: Ensure you have permission to access the resource.'
- '400 Bad Request: Check your request parameters'
- '401 Unauthorized: Verify your API key or token'
- '500 Internal Server Error: Retry the request later'
- '401 Unauthorized: Check API key validity'
- '500 Internal Server Error: Retry after a few moments'
- '500 Internal Server Error: Consult server logs for details'
- '401 Unauthorized: Check your API key or authentication method'
- '404 Not Found: Verify endpoint and resource ID'
- '401 Unauthorized: Check your credentials and scopes'
- '403 Forbidden: You do not have sufficient permissions.'
- '401 Unauthorized: Invalid credentials or expired token'
- '403 Forbidden: Insufficient permissions to access the resource'
- '404 Not Found: Check the endpoint URL or resource ID'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - AccessToken
  - Credentials
  - OAuth2
  - Access Token
  - Refresh Token
  - API Key
  - Authentication
  - OAuthToken
  - IdentityService
  - TokenService
  - Identity
  - Token
  - OAuth
  - Identity Service
  - AuthToken
client:
  base_url: http://docs-ospc.rackspace.com
  auth:
    type: oauth2
source_metadata: null
