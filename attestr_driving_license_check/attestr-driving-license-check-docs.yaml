resources:
- name: driving_license_check
  endpoint:
    path: /public/checkx/dl
    method: POST
    data_selector: output
    params:
      reg: required
      dob: required
      webhook: optional
- name: get_async_request_outcome
  endpoint:
    path: /public/async/<asyncId>
    method: GET
    data_selector: output
    params:
      asyncId: required
- name: webhook_event_payload
  endpoint:
    path: /webhook/event/payload
    method: POST
    data_selector: _id
    params: {}
- name: pan_verification
  endpoint:
    path: /public/checkx/pan
    method: POST
    data_selector: valid
    params:
      pan: Required
- name: pan_verification
  endpoint:
    path: /attestr-docs/pan-verification-api#request
    method: GET
    data_selector: valid
    params: {}
- name: pan_verification
  endpoint:
    path: /public/checkx/pan/comprehensive
    method: POST
    data_selector: response
- name: pan_kyc_status
  endpoint:
    path: /public/checkx/pan/kyc
    method: POST
    data_selector: response
    params:
      pan: Input PAN number to be verified.
- name: aadhaar_offline_verification
  endpoint:
    path: /public/checkx/uidai-xml
    method: POST
    data_selector: valid
- name: aadhaar_ocr
  endpoint:
    path: /api/{version}/public/xtract
    method: POST
- name: gstin_search
  endpoint:
    path: /api/{version}/public/corpx/gstin/search
    method: POST
    data_selector: records
    params:
      pan: Required
- name: bank_account_verification
  endpoint:
    path: /api/{version}/public/finanx/acc
    method: POST
    data_selector: valid
    params: {}
- name: vpa_verification
  endpoint:
    path: /api/{version}/public/finanx/vpa
    method: POST
    data_selector: valid
    params:
      vpa: required
- name: ifsc_validation
  endpoint:
    path: /api/{version}/public/finanx/ifsc
    method: POST
    data_selector: valid
    params: {}
- name: voter_id_verification
  endpoint:
    path: /api/{version}/public/checkx/epic
    method: POST
    data_selector: valid
    params: {}
- name: udyam_verification
  endpoint:
    path: /api/{version}/public/corpx/udyam
    method: POST
    data_selector: valid
    params: {}
- name: msme_status
  endpoint:
    path: /public/corpx/pan-msme-status
    method: POST
    data_selector: response
    params: {}
- name: msme_itr
  endpoint:
    path: /api/{version}/public/corpx/itr
    method: POST
    data_selector: response
    params: {}
- name: fssai_license_check
  endpoint:
    path: /public/checkx/fssai
    method: POST
    data_selector: records
    params:
      reg: Input FSSAI number to be verified.
      fetchProducts: Fetch list of registered products
- name: fssai_license_check
  endpoint:
    path: /api/{version}/public/checkx/fssai-validity
    method: POST
    data_selector: valid
    params: {}
- name: company_master_data
  endpoint:
    path: /api/{version}/public/corpx/business/master
    method: POST
    data_selector: data
    params:
      reg: U22120MH1913PLC000391
      efilings: true
      charges: true
      live: false
      fetchLiveOnCacheMiss: false
- name: company_data
  endpoint:
    path: /company-data
    method: GET
    data_selector: records
- name: autocomplete
  endpoint:
    path: /api/{version}/public/corpx/business/autocomplete
    method: POST
    data_selector: results
    params:
      businessName: required
      active: optional
      limit: optional
      sort: optional
      sortOrder: optional
- name: business_search
  endpoint:
    path: /api/v2/public/corpx/business/search
    method: POST
    data_selector: results
    params: {}
- name: contact_information
  endpoint:
    path: /public/leadx/mca-cin-contact
    method: POST
    data_selector: contacts
    params:
      reg: required
      maxContacts: optional
- name: contact_information
  endpoint:
    path: /public/leadx/gstin-contact
    method: POST
    data_selector: items
    params:
      reg: required
- name: mobile_owner_name_verification
  endpoint:
    path: /public/checkx/mobile-owner
    method: POST
    data_selector: valid
    params: {}
- name: generate_otp
  endpoint:
    path: /api/{version}/public/checkx/mobile-telecom/otp
    method: POST
    data_selector: valid
    params: {}
- name: verify_otp
  endpoint:
    path: /mobile-telecom/verify
    method: POST
    data_selector: ''
    params: {}
- name: fetch_verified_data
  endpoint:
    path: /mobile-telecom/fetch
    method: POST
    data_selector: ''
    params: {}
- name: single_contact_validation
  endpoint:
    path: /api/{version}/public/checkx/contact
    method: POST
    data_selector: valid
    params: {}
- name: person_search
  endpoint:
    path: /public/riskx/aml/person
    method: POST
    data_selector: records
- name: business_search
  endpoint:
    path: /public/riskx/aml/business
    method: POST
    data_selector: records
- name: Get Profile Details
  endpoint:
    path: /person/<profileId>
    method: GET
- name: Business Profile Details
  endpoint:
    path: /business/<profileId>
    method: GET
- name: async_request_outcome
  endpoint:
    path: /api/{version}/public/async/<asyncId>
    method: GET
    data_selector: output
    params: {}
- name: single_email_validation
  endpoint:
    path: /public/checkx/email
    method: POST
    data_selector: email
    params: {}
- name: face_match
  endpoint:
    path: /api/{version}/public/facex/match
    method: POST
    data_selector: response
    params: {}
- name: classification
  endpoint:
    path: /api/{version}/public/xtract/classify
    method: POST
    data_selector: ''
- name: create_profile
  endpoint:
    path: /api/{version}/public/factx/
    method: POST
    data_selector: ''
    params: {}
- name: create_handshake
  endpoint:
    path: /create-handshake-api
    method: POST
    data_selector: result
    params: {}
- name: execution_result
  endpoint:
    path: /execution-result-api
    method: GET
    data_selector: result
    params: {}
- name: Create Handshake
  endpoint:
    path: /create-handshake
    method: POST
    data_selector: result
- name: Execution Result
  endpoint:
    path: /execution-result
    method: GET
    data_selector: result
- name: Create Handshake
  endpoint:
    path: /attestr-docs/create-handshake-api
    method: POST
- name: Execution Result
  endpoint:
    path: /attestr-docs/execution-result-api
    method: GET
- name: create_handshake
  endpoint:
    path: /handshake
    method: POST
    data_selector: null
    params: {}
- name: execution_result
  endpoint:
    path: /api/{version}/public/flowx/handshake/{handshakeId}
    method: GET
    data_selector: _id
- name: DeviceSessionResult
  endpoint:
    path: /attestr-docs/execution-result-api#devicesessionresult
    method: GET
    data_selector: result
- name: media_upload
  endpoint:
    path: /api/{version}/public/media/xml/multipart
    method: POST
    data_selector: _id
    params: {}
- name: image_upload
  endpoint:
    path: /api/{version}/public/media/image/multipart
    method: POST
    data_selector: _id
    params: {}
- name: media_stream
  endpoint:
    path: /{mediaId}
    method: GET
- name: webhook_events
  endpoint:
    path: /attestr-docs/attestr-webhooks#event-types
    method: POST
    data_selector: payload
    params: {}
- name: pan_ocr
  endpoint:
    path: /api/{version}/public/xtract
    method: POST
    data_selector: data
    params: {}
- name: aadhaar_pan_linking_status
  endpoint:
    path: /api/{version}/public/checkx/aadhaar-pan-seed-status
    method: POST
    data_selector: valid
    params: {}
- name: gst_certificate
  endpoint:
    path: /api/{version}/public/xtract
    method: POST
    data_selector: data
    params:
      src: required
      additional: optional
      type: GST
- name: cheque_book_ocr
  endpoint:
    path: /api/{version}/public/xtract
    method: POST
    data_selector: response
    params: {}
- name: autocomplete
  endpoint:
    path: /api/v2/public/corpx/director/autocomplete
    method: POST
    data_selector: results
- name: director_search
  endpoint:
    path: /api/{version}/public/corpx/director/search
    method: POST
    data_selector: results
- name: company_itr
  endpoint:
    path: /api/{version}/public/corpx/itr
    method: POST
    data_selector: response
    params:
      pan: required
      birthOrIncorporatedDate: required
      name: required
- name: individual_cases_search
  endpoint:
    path: /person/ecourt
    method: POST
    data_selector: results
    params:
      tag: Unique reference Id for this request
      name: Name of the candidate
      fatherName: Candidate's father's name
      birthDate: Candidate's date of birth in DD-MM-YYYY format
      address: Complete residential address
      mode: Realtime
      threshold: Minimum threshold value
      skip: Number of records to be skipped
      limit: Number of records to be included in a single page
      subject: Allowed values for subject
- name: business_cases_search
  endpoint:
    path: /business/ecourt
    method: POST
    data_selector: results
    params:
      tag: Unique reference Id for this request
      businessName: Registered legal entity name
      address: Complete registered address
      reg: Company registration number
      mode: Realtime
      threshold: Minimum threshold value
      skip: Number of records to be skipped
      limit: Number of records to be included in a single page
      subject: Allowed values for subject
- name: court_cases
  endpoint:
    path: /court_cases
    method: GET
    data_selector: records
- name: profile
  endpoint:
    path: /{profileId}
    method: GET
    data_selector: records
- name: education_verification
  endpoint:
    path: /api/{version}/public/factx/async/education
    method: POST
    data_selector: ''
    params: {}
- name: education_check_result
  endpoint:
    path: /api/{version}/public/async/<asyncId>
    method: GET
    data_selector: ''
    params: {}
- name: webhook_event_payload
  endpoint:
    path: /webhook/event/payload
    method: POST
    data_selector: payload
    params: {}
- name: employment_verification
  endpoint:
    path: /factx/async/work
    method: POST
    data_selector: records
- name: get_employment_check_result
  endpoint:
    path: /async/<asyncId>
    method: GET
    data_selector: records
- name: webhook_event_payload
  endpoint:
    path: /webhook/event/payload
    method: POST
    data_selector: payload
    params: {}
- name: address_verification
  endpoint:
    path: /public/factx/async/address
    method: POST
    data_selector: response
    params: {}
- name: address_check_result
  endpoint:
    path: /public/async/<asyncId>
    method: GET
    data_selector: response
    params: {}
- name: document_verification
  endpoint:
    path: /public/factx/async/document
    method: POST
    data_selector: _id
    params: {}
- name: document_check_result
  endpoint:
    path: /public/async/<asyncId>
    method: GET
    data_selector: _id
    params: {}
- name: associate_item
  endpoint:
    path: /api/{version}/public/factx/<profileId>/associate
    method: PUT
    data_selector: asyncRequest
- name: collect_additional_data
  endpoint:
    path: /factx/<profileId>/query/<queryId>
    method: PUT
    data_selector: ''
    params: {}
- name: flowx.completed
  endpoint:
    path: /flowx/completed
    method: POST
    data_selector: payload
- name: flowx.skipped
  endpoint:
    path: /flowx/skipped
    method: POST
    data_selector: payload
- name: flowx.errored
  endpoint:
    path: /flowx/errored
    method: POST
    data_selector: payload
- name: Execution Result
  endpoint:
    path: /api/{version}/public/flowx/handshake/{handshakeId}
    method: GET
    data_selector: metadata
    params:
      mode: debug
- name: requests
  endpoint:
    path: /requests
    method: GET
    data_selector: records
- name: metadata
  endpoint:
    path: /metadata
    method: GET
    data_selector: records
- name: document_upload
  endpoint:
    path: /api/{version}/public/media/doc/multipart
    method: POST
    data_selector: _id
    params: {}
- name: delete_media
  endpoint:
    path: /{mediaId}
    method: DELETE
notes:
- The webhook parameter must be set to true to enable webhooks.
- Generate signature on your server side code base and check if it matches the signature
  returned in the payload.
- Client secret and auth token values can be accessed only once. Once created, client
  secret can neither be changed nor accessed through dashboard or API.
- It may take up to 48 working hours for the initial services activation depending
  upon your business use case and other information shared with us.
- Sample responses include various scenarios such as valid and invalid PAN.
- Customers can use our solution to offer a platform to their end users for uploading
  and verifying offline xml in real time.
- Input EPIC number to be verified is required.
- Authentication token is required
- Automate AML compliance with global database search API.
- Records with score less than threshold won't show up in results.
- async.completed
- async.errored
- Refer to Image Media Upload to generate media Id
- The handshake Id generated in step one must be stored in the database for later
  retrieval.
- You must perform checks on the result signature returned by the Execution Result
  API.
- The handshake Id must be stored in the database for later retrieval.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The handshake Id must be stored for later retrieval.
- On successful completion, a result signature is returned.
- Credits are non-transferable and non-refundable.
- Your credits never expire.
- Client secret can be accessed only once.
- Changing the IP white list will revoke access to existing active client sessions.
- Notification alerts are triggered only twice every day at 5:30 AM and 5:30 PM IST.
- Alerts can be triggered only for the services or products that are provisioned in
  the account.
- Alerts are off by default and must be explicitly set by the customer to use them.
- Webhook events from Attestr are only triggered once and have a 5-second timeout.
- Attestr assigns a unique request tracing Id to every API request made on the platform.
- Tracing ID can either be stored in a persistent storage like database or in a temporary
  storage such as log files.
- 'Pagination parameters: skip and limit must be used in conjunction.'
- Ensure to pass 'Realtime' as mode in requests.
- This is an asynchronous API which accepts the work history as input.
- Webhooks must be set to true in the request to enable webhook notifications.
- Asynchronous API that provides end-to-end automation.
- To enable webhooks, the API input parameter webhook must be set as true while initiating
  the Create Handshake API
errors:
- '4001: Malformed data or missing required parameter values'
- '4016: Invalid client authorization'
- '4031: Unauthorized access'
- '4291: Maximum account rate limit exceeded'
- Error object if the driving license check runs into errors.
- '5001: Request could not be processed'
- Provided PAN number does not exist
- '4005: Operation could not be performed due to low credits balance'
- '4035: Requested service is not provisioned for your account'
- '4039: Client''s IP address is not whitelisted'
- '4292: Maximum API rate limit exceeded'
- '4293: Maximum account daily limit exceeded'
- '4294: Maximum API daily limit exceeded'
- Unique error codes for different errors.
- Error message describing the error.
- '5041: Source or beneficiary bank is either offline or NPCI / IPMS is unavailable'
- '5031: Service unavailable or discontinued'
- '401 Unauthorized: If you do not have the authentication token.'
- Provided Udyam number does not exist
- '400: Malformed data or missing required parameter values'
- '400: Operation could not be performed due to low credits balance'
- '401: Invalid client authorization'
- '403: Unauthorized access'
- '403: Requested service is not provisioned for your account'
- '429: Maximum account rate limit exceeded'
- '500: Request could not be processed'
- 'code: Number, message: String, details: String'
- '40014: Maximum attempts exceeded. Please try after sometime.'
- '5041: Telecom portal gateway timeout'
- Unique error codes for different errors. Always available.
- Error message describing the error. Always Available.
- 'INVALID_FILE_FORMAT: Image incompatible file type'
- '40018: Invalid profile Id or you do not have access to this record'
- '40038: Profile is archived already, operation not allowed'
- '4003: Request ID is invalid'
- '40039: Async request type *{type}* can not be associated to the background check
  profile'
- '5001: Irrecoverable error during flow execution.'
- '4035: Requested service is not provisioned for your account.'
- '5001: Request could not be completed. Please try again later.'
- '5001: Irrecoverable error during flow execution'
- '4002: Flow ID does not exist'
- '40034: Requested flow is inactive'
- HTTP status code 200
- '4007: Incompatible file type'
- '4008: XML file size exceeds the maximum permissible limit of 1MB'
- '4005: Image file size exceeds the maximum permissible limit of 15MB'
- '4009: Media archived'
- 200 success response is required within 5 seconds.
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '5041: Gateway timeout'
- '401 Unauthorized: Check your Authorization header.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify authentication credentials'
- '404 Not Found: Ensure the endpoint is correct'
- '5001: Request could not be completed. Please try later.'
- '40012: The account number is either not valid or in blocked / closed state. Please
  provide a different account number.'
auth_info:
  mentioned_objects:
  - authToken
client:
  base_url: https://api.attestr.com/api/v2/public/checkx/pan/comprehensive
  auth:
    type: Basic
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
