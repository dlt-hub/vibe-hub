resources:
- name: risk_profile
  endpoint:
    path: /v1/customers/{customer_id}/risk_profile
    method: GET
    data_selector: profile
    params: {}
- name: documents
  endpoint:
    path: /v1/customers/{customer_id}/documents
    method: GET
    data_selector: documents
    params: {}
- name: customers
  endpoint:
    path: /v1/customers
    method: POST
    data_selector: id
    params: {}
- name: screenings
  endpoint:
    path: /v1/customers/{customer_id}/screenings
    method: POST
    data_selector: screening_result
    params: {}
- name: customers
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: customers
- name: create_customer
  endpoint:
    path: /v1/customers
    method: POST
    data_selector: customer
- name: retrieve_customer
  endpoint:
    path: /v1/customers/{customer_id}
    method: GET
    data_selector: customer
- name: update_customer
  endpoint:
    path: /v1/customers/{customer_id}
    method: PUT
    data_selector: customer
- name: delete_customer
  endpoint:
    path: /v1/customers/{customer_id}
    method: DELETE
    data_selector: customer
- name: list_all_customers
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: customers
- name: create_screening
  endpoint:
    path: /v1/customers/{customer_id}/screenings/
    method: POST
    data_selector: id
    params: {}
- name: retrieve_screening
  endpoint:
    path: /v1/customers/{customer_id}/screenings/{screening_id}
    method: GET
    data_selector: id
    params: {}
- name: list_screenings
  endpoint:
    path: /v1/customers/{customer_id}/screenings
    method: GET
    data_selector: screenings
    params: {}
- name: search_screenings
  endpoint:
    path: /v1/search/screenings
    method: GET
    data_selector: screenings
    params: {}
- name: associations
  endpoint:
    path: /v1/customers/{customer_id}/screenings/{screening_id}/matches/{match_id}/associations
    method: GET
    data_selector: associations
- name: odd
  endpoint:
    path: /v1/customers/{customer_id}/odd
    method: GET
    data_selector: odds
- name: document_verification
  endpoint:
    path: /v1/document_verifications
    method: POST
    data_selector: verification
- name: retrieve_match
  endpoint:
    path: /v1/customers/{customer_id}/screenings/{screening_id}/matches/{match_id}
    method: GET
- name: list_matches
  endpoint:
    path: /v1/customers/{customer_id}/screenings/{screening_id}/matches
    method: GET
- name: confirm_match
  endpoint:
    path: /v1/customers/{customer_id}/screenings/{screening_id}/matches/{match_id}/confirm
    method: POST
- name: dismiss_match
  endpoint:
    path: /v1/customers/{customer_id}/screenings/{screening_id}/matches/{match_id}/dismiss
    method: GET
- name: confirm_multiple_matches
  endpoint:
    path: /v1/customers/{customer_id}/screenings/{screening_id}/matches/confirm
    method: POST
- name: dismiss_multiple_matches
  endpoint:
    path: /v1/customers/{customer_id}/screenings/{screening_id}/matches/dismiss
    method: POST
- name: retrieve_association
  endpoint:
    path: /v1/customers/{customer_id}/screenings/{screening_id}/matches/{match_id}/associations/{association_id}
    method: GET
- name: identity_verifications
  endpoint:
    path: /v1/search/identifications
    method: GET
    data_selector: verifications
    params: {}
- name: reports
  endpoint:
    path: /v1/reports
    method: GET
    data_selector: reports
    params: {}
- name: files
  endpoint:
    path: /v1/files
    method: GET
    data_selector: files
    params: {}
- name: notes
  endpoint:
    path: /v1/customers/{customer_id}/notes
    method: GET
    data_selector: notes
    params: {}
- name: create_verification
  endpoint:
    path: /v1/customers/{customer_id}/verifications
    method: POST
    data_selector: document_id
    params: {}
- name: retrieve_verification
  endpoint:
    path: /v1/customers/{customer_id}/verifications/{verification_id}
    method: GET
    data_selector: verification_id
    params: {}
- name: list_verifications
  endpoint:
    path: /v1/customers/{customer_id}/verifications
    method: GET
    data_selector: verifications
    params: {}
- name: search_verifications
  endpoint:
    path: /v1/search/verifications
    method: GET
    data_selector: verifications
    params: {}
- name: create_identity_verification
  endpoint:
    path: /v1/customers/{customer_id}/identifications
    method: POST
    data_selector: document_id
    params: {}
- name: retrieve_identity_verification
  endpoint:
    path: /v1/customers/{customer_id}/identifications/{identification_id}
    method: GET
    data_selector: identification_id
    params: {}
- name: list_identity_verifications
  endpoint:
    path: /v1/customers/{customer_id}/identifications
    method: GET
    data_selector: identifications
    params: {}
notes:
- The API allows you to create and retrieve document verification requests.
errors:
- '400 Bad Request: Request has missing arguments or is malformed.'
- '401 Unauthorized: Invalid authorisation credentials.'
- '403 Forbidden: Request is authenticated but has insufficient permissions.'
- '404 Not Found: The endpoint requested does not exist.'
- '500 Server Error: Something is wrong on our end.'
- '503 Server Unavailable: Service is unavailable.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.swiftdil.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
source_metadata: null
