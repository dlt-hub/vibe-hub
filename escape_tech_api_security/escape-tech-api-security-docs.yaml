resources:
- name: api_inventory
  endpoint:
    path: /api/inventory
    method: GET
    data_selector: records
    params: {}
- name: compliance_reports
  endpoint:
    path: /compliance/reports
    method: GET
    data_selector: reports
    params: {}
- name: api_discovery
  endpoint:
    path: /api/discovery
    method: GET
    data_selector: data
- name: business_logic_security_testing
  endpoint:
    path: /api/business-logic-testing
    method: GET
    data_selector: data
- name: graphql_security
  endpoint:
    path: /api/graphql-security
    method: GET
    data_selector: data
- name: business_logic_tests
  endpoint:
    path: /api/v1/businessLogicTests
    method: GET
    data_selector: results
- name: api_discovery
  endpoint:
    path: /api/v1/apiDiscovery
    method: GET
    data_selector: apiEndpoints
- name: business_logic_security_testing
  endpoint:
    path: /api/business-logic-security-testing
    method: GET
    data_selector: results
- name: api_discovery
  endpoint:
    path: /api/discovery
    method: GET
    data_selector: results
- name: api_exposure
  endpoint:
    path: /api/exposure
    method: GET
    data_selector: records
- name: business_logic_security_testing
  endpoint:
    path: /business-logic-security-testing
    method: POST
    data_selector: results
- name: api_discovery_security
  endpoint:
    path: /api-discovery-security
    method: GET
    data_selector: api_list
- name: graphql_security
  endpoint:
    path: /graphql-security
    method: GET
    data_selector: graphql_issues
- name: business_logic_security_testing
  endpoint:
    path: /api/business_logic_security
    method: GET
    data_selector: data
- name: api_discovery
  endpoint:
    path: /api/discovery
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api_security_checklist
  endpoint:
    path: /resources/api-security-checklist
    method: GET
    data_selector: checklist_items
    params: {}
- name: state_of_public_apis
  endpoint:
    path: /resources/state-of-public-apis-2023
    method: GET
    data_selector: report_data
    params: {}
- name: API Security Testing
  endpoint:
    path: /api/security/testing
    method: GET
    data_selector: records
- name: Shadow API Discovery
  endpoint:
    path: /api/shadow/discovery
    method: GET
    data_selector: records
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Escape addressed a gap in our AppSec program which couldn't be addressed with our
  current AppSec tool. It integrated seamlessly with our tooling and quickly secured
  our GraphQL endpoints.
- Easily operationalize GraphQL security testing from scan setup to remediation
- Ensure your applications are free from GraphQL-specific issues, including batching,
  aliasing and deeply nested access control flaws
- Escape empowers CISOs to protect their organization's digital ecosystem by securing
  APIs, SPAs, and Microservices at scale.
- Instant deployment without access to your customer data
- Compliance with regulations such as PCI-DSS, GDPR, HIPAA
- API management requires visibility and control over numerous endpoints.
- Agentless API security & DAST deployed in minutes
- Discover and test APIs & Web Apps instantly
- Requires setup of connected app in Escape for OAuth2
- Ensure to handle sensitive data appropriately
- Continuously ensure your APIs and SPAs meet HIPAA requirements and generate compliance
  reports with a single click for your auditors.
- Uses OAuth2 with refresh token — requires setup of connected app in Escape
- Escape leverages a proprietary reinforcement learning algorithm to simulate real-world
  usage in modern applications, uncovering business logic vulnerabilities that others
  miss.
- Every security team’s needs are different. From automated reporting to Scanning
  as a Service, build anything on top of Escape with the full featured Public API,
  CLI and custom rules system.
- Escape DAST helps organizations built a complete inventory of their applications
  in minutes and identify even complex business logic vulnerabilities in their modern
  applications.
- The only DAST that works with your modern stack and tests business logic instead
  of missing headers
- Requires proper OAuth2 configuration for integration.
- Requires setup of connected app in Escape API dashboard
- Some endpoints may have rate limits
- Some API calls may return nulls in deeply nested fields
- GraphQL Armor is a middleware for JS servers that adds a security layer to GraphQL
  endpoint in minutes.
- GraphQL Armor implements common security best practices and is ideal for small open
  source projects.
- Requires setup of connected app in Escape.
- Some responses may include null values.
- Uses OAuth2 for authentication.
- For production-grade security, Escape GraphQL scanner is the best fit.
- Requires setup of connected app in API
- Some APIs may return rate limit errors
- Securing your APIs isn’t easy, but we’ve got your back.
- Uses OAuth2 for authentication
- Ensure proper API key management and security practices.
- We may use third-party Service providers to monitor and analyze the use of our Service.
- We may use Email Marketing Service Providers to manage and send emails to You.
- We may provide paid products and/or services within the Service.
- We do not knowingly collect personal information from minors under the age of 16
  through our Service.
- Client must notify Escape within thirty (30) days of identifying a deficiency for
  warranty remedies.
- Client undertakes and guarantees that the Client’s API will not contain nor Process
  any Personal Data.
- Client acknowledges and agrees that the Appendix 1 is attached for information purposes
  only.
- Client shall regularly consult the Services Levels made available online.
- Leverage AI Powered DAST to secure your applications at the business logic level.
- Discover, document and test the security of your APIs from development to production.
- Some objects like Contact may return nulls in deeply nested fields
- Requires setup of connected app in Escape
- 'Escape warrants that during the term of this Agreement: (i) the Solution shall
  perform materially in accordance with the Documentation ; and (ii) the functionality
  of the Solution will not be materially decreased.'
- Client shall notify Escape in writing within thirty (30) days of identifying a deficiency.
- The remedies set forth in this Section shall be Client’s exclusive remedy and Escape’s
  sole liability for breach of these warranties.
- Escape shall not be subject to any obligations under this Section should the Client
  (i) not properly maintain all associated equipment, software, Internet access, and
  environmental conditions in accordance with the General Terms, the Documentation
  and applicable industry standards.
- Each Party shall be liable for direct damages, which are caused by a Party and/or
  its Authorized User, its subcontractors or Affiliates, to the other Party or to
  third parties in connection with the performance of this Agreement.
- Under no circumstances shall a Party be liable for any indirect damage that a Party,
  its Authorized Users and/or its subcontractors cause to the other Party.
- In no event shall Escape (or its respective Affiliates) total aggregate liability
  for any and all claims exceed the total amount of fees paid by the Client for the
  Services which caused the damages in the twelve (12) months period prior to the
  occurrence of the cause of action giving rise to the claim.
- Escape is not responsible for any delays, delivery failures, or other damage resulting
  from problems inherent to the use of the Internet and electronic communications.
- The Client shall be solely responsible for ensuring that the results produced by
  the Services comply with quality and safety requirements of its products or services.
- OAuth2 with refresh token is required
- Client shall regularly consult the Services Levels made available online at https://escape.tech/sla
- The Platform will be made available to the Client according to the average Availability
  Rate indicated above, measured over three-month period
- Uses OAuth2 with refresh token — requires setup of connected app in Escape API
- Escape DAST uses the API Schemas from the ASM to understand how each endpoint should
  behave.
- Escape DAST does not rely on agents installed in the environment or captured network
  traffic.
- Escape addressed a gap in our AppSec program which couldn't be addressed with our
  current AppSec tool.
- It integrated seamlessly with our tooling and quickly secured our GraphQL endpoints.
- Escape ASM gives security teams a single source of truth for every external and
  internal Asset in their Code-to-Cloud estate.
- Effortlessly adopt DevSecOps by replacing legacy DAST tools.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check token validity and ensure proper scopes.'
- '401 Unauthorized: Verify OAuth token validity'
- '429 Too Many Requests: Reduce request frequency'
- '401 Unauthorized: Check OAuth token and permissions.'
- '404 Not Found: Verify endpoint existence.'
- '429 Too Many Requests: Reduce the frequency of API calls'
- '401 Unauthorized: Check token validity and scopes'
- '401 Unauthorized: Check if the access token is valid.'
- '429 Too Many Requests: Rate limiting has been exceeded.'
- Escape will respond during Opening Hours within 24 hours of the case being submitted
  by the Client
- Escape will respond during Opening Hours within 48 hours of the case being submitted
  by the Client
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://escape.tech
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
