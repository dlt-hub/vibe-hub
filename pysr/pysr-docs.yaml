resources:
- name: fit
  endpoint:
    path: /fit
    method: POST
    data_selector: equations_
    params: {}
- name: predict
  endpoint:
    path: /predict
    method: POST
    data_selector: predicted_values
    params: {}
- name: from_file
  endpoint:
    path: /from_file
    method: POST
    data_selector: model
    params: {}
- name: sympy
  endpoint:
    path: /sympy
    method: GET
    data_selector: sympy_representation
    params: {}
- name: latex
  endpoint:
    path: /latex
    method: GET
    data_selector: latex_expression
    params: {}
- name: pytorch
  endpoint:
    path: /pytorch
    method: GET
    data_selector: pytorch_module
    params: {}
- name: jax
  endpoint:
    path: /jax
    method: GET
    data_selector: jax_function
    params: {}
- name: latex_table
  endpoint:
    path: /latex_table
    method: GET
    data_selector: latex_table
    params: {}
- name: refresh
  endpoint:
    path: /refresh
    method: POST
    data_selector: updated_equations
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: simple_search
  endpoint:
    path: /simple_search
    method: POST
    data_selector: results
- name: custom_operator
  endpoint:
    path: /custom_operator
    method: POST
    data_selector: results
- name: multiple_outputs
  endpoint:
    path: /multiple_outputs
    method: POST
    data_selector: results
- name: plotting_expression
  endpoint:
    path: /plotting_expression
    method: GET
    data_selector: results
- name: feature_selection
  endpoint:
    path: /feature_selection
    method: POST
    data_selector: results
- name: denoising
  endpoint:
    path: /denoising
    method: POST
    data_selector: results
- name: complex_numbers
  endpoint:
    path: /complex_numbers
    method: POST
    data_selector: results
- name: custom_objectives
  endpoint:
    path: /custom_objectives
    method: POST
    data_selector: results
- name: dimensional_constraints
  endpoint:
    path: /dimensional_constraints
    method: POST
    data_selector: results
- name: predict
  endpoint:
    path: /predict
    method: POST
    data_selector: predictions
- name: from_file
  endpoint:
    path: /from_file
    method: POST
    data_selector: model
- name: fit
  endpoint:
    path: /fit
    method: POST
    data_selector: equations_
    params: {}
- name: predict
  endpoint:
    path: /predict
    method: POST
    data_selector: predictions
    params: {}
- name: from_file
  endpoint:
    path: /from_file
    method: POST
    data_selector: model
    params: {}
- name: sympy
  endpoint:
    path: /sympy
    method: GET
    data_selector: sympy_equations
    params: {}
- name: latex
  endpoint:
    path: /latex
    method: GET
    data_selector: latex_equations
    params: {}
- name: pytorch
  endpoint:
    path: /pytorch
    method: GET
    data_selector: pytorch_model
    params: {}
- name: jax
  endpoint:
    path: /jax
    method: GET
    data_selector: jax_model
    params: {}
- name: latex_table
  endpoint:
    path: /latex_table
    method: GET
    data_selector: latex_table
    params: {}
- name: refresh
  endpoint:
    path: /refresh
    method: POST
    data_selector: refresh_status
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: model
  endpoint:
    path: /PySR/v1.5.9/
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: model_selection
  endpoint:
    path: /api/model_selection
    method: GET
    data_selector: records
- name: operators
  endpoint:
    path: /api/operators
    method: GET
    data_selector: records
- name: model_selection
  endpoint:
    path: /model_selection
    method: GET
    data_selector: data
    params: {}
- name: operators
  endpoint:
    path: /operators
    method: GET
    data_selector: data
    params: {}
- name: iterations
  endpoint:
    path: /iterations
    method: GET
    data_selector: data
    params: {}
- name: cycles_per_iteration
  endpoint:
    path: /cycles_per_iteration
    method: GET
    data_selector: data
    params: {}
- name: processors
  endpoint:
    path: /processors
    method: GET
    data_selector: data
    params: {}
- name: populations
  endpoint:
    path: /populations
    method: GET
    data_selector: data
    params: {}
- name: weighted_data
  endpoint:
    path: /weighted_data
    method: GET
    data_selector: data
    params: {}
- name: max_size
  endpoint:
    path: /max_size
    method: GET
    data_selector: data
    params: {}
- name: batching
  endpoint:
    path: /batching
    method: GET
    data_selector: data
    params: {}
- name: variable_names
  endpoint:
    path: /variable_names
    method: GET
    data_selector: data
    params: {}
- name: constraints
  endpoint:
    path: /constraints
    method: GET
    data_selector: data
    params: {}
- name: custom_complexity
  endpoint:
    path: /custom_complexity
    method: GET
    data_selector: data
    params: {}
- name: latex_and_sympy
  endpoint:
    path: /latex_and_sympy
    method: GET
    data_selector: data
    params: {}
- name: exporting
  endpoint:
    path: /exporting
    method: GET
    data_selector: data
    params: {}
- name: loss
  endpoint:
    path: /loss
    method: GET
    data_selector: data
    params: {}
- name: model_loading
  endpoint:
    path: /model_loading
    method: GET
    data_selector: data
    params: {}
notes:
- Uses Gaussian Process to denoise the data before inputting to PySR.
- Feature selection can run in Python using random forests.
- Uses Docker for installation and testing.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses PySR for symbolic regression operations.
- Uses symbolic regression for interpretable mathematical expressions.
- PySR is an open-source tool for Symbolic Regression.
- Use IPython for better results than Jupyter
- Requires installation of dependencies via pip or conda
- Developed alongside the Julia library SymbolicRegression.jl.
- Uses Python with Julia backend for maximum performance and ease of use.
- Symbolic regression works best on low-dimensional datasets.
- Python native with Julia backend for maximum performance and ease of use
- Uses Python with Julia backend for maximum performance and ease of use
- Uses IPython for interactive usage.
- High-performance symbolic regression in Python and Julia
- Years of development have produced mature, highly optimized parallel evolutionary
  algorithms
- 'Customize everything: operators, loss functions, complexity, input types, optimizer,
  and more'
- Built for Python with Julia backend for maximum performance and ease of use
- Extremely customizable with many options available
- Default model_selection is 'best'.
- If you make a change that you think could be useful to other users, don't hesitate
  to open a pull request on either the PySR or SymbolicRegression.jl repositories!
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://astroautomata.com/PySR
  headers:
    Accept: application/json
source_metadata: null
