resources:
- name: aircraft
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.aircraft
    params: {}
- name: bookings
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.bookings
    params: {}
- name: classTheories
  endpoint:
    path: /classTheories
    method: POST
    data_selector: data.classTheories
    params: {}
- name: classes
  endpoint:
    path: /classes
    method: POST
    data_selector: data.classes
    params: {}
- name: dutyTimes
  endpoint:
    path: /dutyTimes
    method: POST
    data_selector: data.dutyTimes
    params: {}
- name: exams
  endpoint:
    path: /exams
    method: POST
    data_selector: data.exams
    params: {}
- name: extraTheories
  endpoint:
    path: /extraTheories
    method: POST
    data_selector: data.extraTheories
    params: {}
- name: fetchJob
  endpoint:
    path: /fetchJob
    method: POST
    data_selector: data.fetchJob
    params: {}
- name: flights
  endpoint:
    path: /flights
    method: POST
    data_selector: data.flights
    params: {}
- name: maintenanceParts
  endpoint:
    path: /maintenanceParts
    method: POST
    data_selector: data.maintenanceParts
    params: {}
- name: aircraft
  endpoint:
    path: /aircraft
    method: POST
    data_selector: data.aircraft
- name: bookings
  endpoint:
    path: /bookings
    method: POST
    data_selector: data.bookings
- name: maintenanceTypes
  endpoint:
    path: /maintenanceTypes
    method: query
    data_selector: data.maintenanceTypes
    params:
      after: abc123
      before: abc123
      first: 987
      last: 987
- name: myFlightLogger
  endpoint:
    path: /myFlightLogger
    method: mutation
    data_selector: data.myFlightLogger
    params: {}
- name: operations
  endpoint:
    path: /operations
    method: query
    data_selector: data.operations
    params:
      after: xyz789
      all: true
      before: abc123
      changedAfter: '2007-12-03T10:15:30Z'
      first: 123
      from: '2007-12-03T10:15:30Z'
      last: 123
      to: '2007-12-03T10:15:30Z'
- name: presignedUploadUrls
  endpoint:
    path: /presignedUploadUrls
    method: query
    data_selector: data.presignedUploadUrls
    params:
      filename: abc123
- name: programs
  endpoint:
    path: /programs
    method: query
    data_selector: data.programs
    params:
      after: abc123
      before: xyz789
      first: 123
      last: 987
      programIds: []
      programName: xyz789
      programType: FLIGHT_TRAINING
- name: progressTests
  endpoint:
    path: /progressTests
    method: query
    data_selector: data.progressTests
    params:
      after: abc123
      all: false
      before: abc123
      changedAfter: '2007-12-03T10:15:30Z'
      first: 123
      from: '2007-12-03T10:15:30Z'
      last: 123
      to: '2007-12-03T10:15:30Z'
- name: rentals
  endpoint:
    path: /rentals
    method: query
    data_selector: data.rentals
    params:
      after: abc123
      all: false
      before: abc123
      changedAfter: '2007-12-03T10:15:30Z'
      first: 987
      from: '2007-12-03T10:15:30Z'
      last: 987
      to: '2007-12-03T10:15:30Z'
- name: theoryReleases
  endpoint:
    path: /theoryReleases
    method: POST
    data_selector: theoryReleases
    params: {}
- name: trainings
  endpoint:
    path: /trainings
    method: POST
    data_selector: trainings
    params: {}
- name: typeQuestionnaires
  endpoint:
    path: /typeQuestionnaires
    method: POST
    data_selector: typeQuestionnaires
    params: {}
- name: user
  endpoint:
    path: /user
    method: POST
    data_selector: user
    params: {}
- name: userPrograms
  endpoint:
    path: /userPrograms
    method: POST
    data_selector: userPrograms
    params: {}
- name: classTheories
  endpoint:
    path: /classTheories
    method: GET
    data_selector: data.classTheories
    params:
      after: String
      all: Boolean
      before: String
      changedAfter: DateTime
      first: Int
      from: DateTime
      last: Int
      to: DateTime
- name: classes
  endpoint:
    path: /classes
    method: GET
    data_selector: data.classes
    params:
      after: String
      before: String
      changedAfter: DateTime
      first: Int
      last: Int
- name: dutyTimes
  endpoint:
    path: /dutyTimes
    method: GET
    data_selector: data.dutyTimes
    params:
      after: String
      all: Boolean
      before: String
      changedAfter: DateTime
      first: Int
      from: DateTime
      last: Int
      to: DateTime
- name: exams
  endpoint:
    path: /exams
    method: GET
    data_selector: data.exams
    params:
      after: String
      all: Boolean
      before: String
      changedAfter: DateTime
      first: Int
      from: DateTime
      last: Int
      to: DateTime
- name: extraTheories
  endpoint:
    path: /extraTheories
    method: GET
    data_selector: data.extraTheories
    params:
      after: String
      all: Boolean
      before: String
      changedAfter: DateTime
      first: Int
      from: DateTime
      last: Int
      to: DateTime
- name: fetchJob
  endpoint:
    path: /fetchJob
    method: GET
    data_selector: data.fetchJob
    params:
      jobId: String!
- name: flights
  endpoint:
    path: /flights
    method: GET
    data_selector: data.flights
    params:
      after: String
      all: Boolean
      before: String
      changedAfter: DateTime
      first: Int
      from: DateTime
      last: Int
      to: DateTime
- name: maintenanceParts
  endpoint:
    path: /maintenanceParts
    method: GET
    data_selector: data.maintenanceParts
    params:
      after: String
      before: String
      first: Int
      last: Int
      status: '[MaintenancePartStatusEnum!]'
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: data.users
- name: versions
  endpoint:
    path: /versions
    method: GET
    data_selector: data.versions
- name: createMultiStudentBooking
  endpoint:
    path: /createMultiStudentBooking
    method: POST
    data_selector: data.createMultiStudentBooking
    params: {}
- name: createOperationBooking
  endpoint:
    path: /createOperationBooking
    method: POST
    data_selector: data.createOperationBooking
    params: {}
- name: createProgressTestBooking
  endpoint:
    path: /createProgressTestBooking
    method: POST
    data_selector: data.createProgressTestBooking
    params: {}
- name: createRentalBooking
  endpoint:
    path: /createRentalBooking
    method: POST
    data_selector: data.createRentalBooking
    params: {}
- name: maintenanceTypes
  endpoint:
    path: /maintenanceTypes
    method: GET
    data_selector: edges
    params: {}
- name: myFlightLogger
  endpoint:
    path: /myFlightLogger
    method: GET
    data_selector: createLogbookEntry
    params: {}
- name: operations
  endpoint:
    path: /operations
    method: GET
    data_selector: nodes
    params: {}
- name: presignedUploadUrls
  endpoint:
    path: /presignedUploadUrls
    method: GET
    data_selector: signedGetUrl
    params: {}
- name: programs
  endpoint:
    path: /programs
    method: GET
    data_selector: nodes
    params: {}
- name: progressTests
  endpoint:
    path: /progressTests
    method: GET
    data_selector: nodes
    params: {}
- name: rentals
  endpoint:
    path: /rentals
    method: GET
    data_selector: nodes
    params: {}
- name: createSingleStudentBooking
  endpoint:
    path: /createSingleStudentBooking
    method: POST
    data_selector: data.createSingleStudentBooking
    params: {}
- name: createTheoryReleaseBooking
  endpoint:
    path: /createTheoryReleaseBooking
    method: POST
    data_selector: data.createTheoryReleaseBooking
    params: {}
- name: createTypeQuestionnaireBooking
  endpoint:
    path: /createTypeQuestionnaireBooking
    method: POST
    data_selector: data.createTypeQuestionnaireBooking
    params: {}
- name: createUser
  endpoint:
    path: /createUser
    method: POST
    data_selector: data.createUser
    params: {}
- name: deleteBooking
  endpoint:
    path: /deleteBooking
    method: POST
    data_selector: data.deleteBooking
    params: {}
- name: deleteBookings
  endpoint:
    path: /deleteBookings
    method: POST
    data_selector: data.deleteBookings
    params: {}
- name: theoryReleases
  endpoint:
    path: /theoryReleases
    method: POST
    data_selector: data.theoryReleases
    params: {}
- name: trainings
  endpoint:
    path: /trainings
    method: POST
    data_selector: data.trainings
    params: {}
- name: typeQuestionnaires
  endpoint:
    path: /typeQuestionnaires
    method: POST
    data_selector: data.typeQuestionnaires
    params: {}
- name: user
  endpoint:
    path: /user
    method: POST
    data_selector: data.user
    params: {}
- name: userPrograms
  endpoint:
    path: /userPrograms
    method: POST
    data_selector: data.userPrograms
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
    data_selector: users
- name: versions
  endpoint:
    path: /versions
    method: GET
    data_selector: versions
- name: updateClassTheoryBooking
  endpoint:
    path: /updateClassTheoryBooking
    method: POST
    data_selector: data.updateClassTheoryBooking
- name: updateExamBooking
  endpoint:
    path: /updateExamBooking
    method: POST
    data_selector: data.updateExamBooking
- name: updateExtraTheoryBooking
  endpoint:
    path: /updateExtraTheoryBooking
    method: POST
    data_selector: data.updateExtraTheoryBooking
- name: updateMaintenanceBooking
  endpoint:
    path: /updateMaintenanceBooking
    method: POST
    data_selector: data.updateMaintenanceBooking
- name: updateMeetingBooking
  endpoint:
    path: /updateMeetingBooking
    method: POST
    data_selector: data.updateMeetingBooking
- name: updateMultiStudentBooking
  endpoint:
    path: /mutations/updateMultiStudentBooking
    method: POST
    data_selector: data.updateMultiStudentBooking
    params: {}
- name: updateOperationBooking
  endpoint:
    path: /mutations/updateOperationBooking
    method: POST
    data_selector: data.updateOperationBooking
    params: {}
- name: updateProgressTestBooking
  endpoint:
    path: /mutations/updateProgressTestBooking
    method: POST
    data_selector: data.updateProgressTestBooking
    params: {}
- name: createMultiStudentBooking
  endpoint:
    path: /mutations/createMultiStudentBooking
    method: POST
    data_selector: data.createMultiStudentBooking
    params: {}
- name: createOperationBooking
  endpoint:
    path: /mutations/createOperationBooking
    method: POST
    data_selector: data.createOperationBooking
    params: {}
- name: createProgressTestBooking
  endpoint:
    path: /mutations/createProgressTestBooking
    method: POST
    data_selector: data.createProgressTestBooking
    params: {}
- name: createRentalBooking
  endpoint:
    path: /mutations/createRentalBooking
    method: POST
    data_selector: data.createRentalBooking
    params: {}
- name: updateRentalBooking
  endpoint:
    path: /updateRentalBooking
    method: POST
    data_selector: data.updateRentalBooking
    params: {}
- name: updateSingleStudentBooking
  endpoint:
    path: /updateSingleStudentBooking
    method: POST
    data_selector: data.updateSingleStudentBooking
    params: {}
- name: updateTheoryReleaseBooking
  endpoint:
    path: /updateTheoryReleaseBooking
    method: POST
    data_selector: data.updateTheoryReleaseBooking
    params: {}
- name: updateTypeQuestionnaireBooking
  endpoint:
    path: /updateTypeQuestionnaireBooking
    method: POST
    data_selector: data.updateTypeQuestionnaireBooking
    params: {}
- name: updateUser
  endpoint:
    path: /updateUser
    method: POST
    data_selector: data.updateUser
    params: {}
- name: createSingleStudentBooking
  endpoint:
    path: /createSingleStudentBooking
    method: POST
    data_selector: data.createSingleStudentBooking
    params: {}
- name: createTheoryReleaseBooking
  endpoint:
    path: /createTheoryReleaseBooking
    method: POST
    data_selector: data.createTheoryReleaseBooking
    params: {}
- name: createTypeQuestionnaireBooking
  endpoint:
    path: /createTypeQuestionnaireBooking
    method: POST
    data_selector: data.createTypeQuestionnaireBooking
    params: {}
- name: createUser
  endpoint:
    path: /createUser
    method: POST
    data_selector: data.createUser
    params: {}
- name: deleteBooking
  endpoint:
    path: /deleteBooking
    method: POST
    data_selector: data.deleteBooking
    params: {}
- name: deleteBookings
  endpoint:
    path: /deleteBookings
    method: POST
    data_selector: data.deleteBookings
    params: {}
- name: aircraftAvailability
  endpoint:
    path: /aircraft/availability
    method: GET
    data_selector: nodes
    params: {}
- name: aircraftBooking
  endpoint:
    path: /aircraft/bookings
    method: GET
    data_selector: nodes
    params: {}
- name: myFlightLogger
  endpoint:
    path: /myFlightLogger
    method: POST
    data_selector: data.myFlightLogger
    params: {}
- name: updateClassTheoryBooking
  endpoint:
    path: /updateClassTheoryBooking
    method: POST
    data_selector: data.updateClassTheoryBooking
    params: {}
- name: updateExamBooking
  endpoint:
    path: /updateExamBooking
    method: POST
    data_selector: data.updateExamBooking
    params: {}
- name: updateExtraTheoryBooking
  endpoint:
    path: /updateExtraTheoryBooking
    method: POST
    data_selector: data.updateExtraTheoryBooking
    params: {}
- name: updateMaintenanceBooking
  endpoint:
    path: /updateMaintenanceBooking
    method: POST
    data_selector: data.updateMaintenanceBooking
    params: {}
- name: updateMeetingBooking
  endpoint:
    path: /updateMeetingBooking
    method: POST
    data_selector: data.updateMeetingBooking
    params: {}
- name: BookingCancellation
  endpoint:
    path: /BookingCancellation
    method: GET
    data_selector: records
- name: BookingStatusEnum
  endpoint:
    path: /BookingStatusEnum
    method: GET
    data_selector: records
- name: BookingSubtypeEnum
  endpoint:
    path: /BookingSubtypeEnum
    method: GET
    data_selector: records
- name: BookingUnion
  endpoint:
    path: /BookingUnion
    method: GET
    data_selector: records
- name: BookingUnionConnection
  endpoint:
    path: /BookingUnionConnection
    method: GET
    data_selector: records
- name: BookingUnionEdge
  endpoint:
    path: /BookingUnionEdge
    method: GET
    data_selector: records
- name: updateMultiStudentBooking
  endpoint:
    path: /updateMultiStudentBooking
    method: POST
    data_selector: data.updateMultiStudentBooking
    params: {}
- name: updateOperationBooking
  endpoint:
    path: /updateOperationBooking
    method: POST
    data_selector: data.updateOperationBooking
    params: {}
- name: updateProgressTestBooking
  endpoint:
    path: /updateProgressTestBooking
    method: POST
    data_selector: data.updateProgressTestBooking
    params: {}
- name: duty_time
  endpoint:
    path: /duty_times
    method: GET
    data_selector: nodes
- name: exam
  endpoint:
    path: /exams
    method: GET
    data_selector: nodes
- name: extra_theory
  endpoint:
    path: /extra_theories
    method: GET
    data_selector: nodes
- name: updateRentalBooking
  endpoint:
    path: /updateRentalBooking
    method: POST
- name: updateSingleStudentBooking
  endpoint:
    path: /updateSingleStudentBooking
    method: POST
- name: updateTheoryReleaseBooking
  endpoint:
    path: /updateTheoryReleaseBooking
    method: POST
- name: updateTypeQuestionnaireBooking
  endpoint:
    path: /updateTypeQuestionnaireBooking
    method: POST
- name: updateUser
  endpoint:
    path: /updateUser
    method: POST
- name: FlightRegistration
  endpoint:
    path: /flightRegistration
    method: GET
    data_selector: flights
    params: {}
- name: FlightConnection
  endpoint:
    path: /flightConnection
    method: GET
    data_selector: nodes
    params: {}
- name: FlightEdge
  endpoint:
    path: /flightEdge
    method: GET
    data_selector: edges
    params: {}
- name: FlightLog
  endpoint:
    path: /flightLog
    method: GET
    data_selector: logs
    params: {}
- name: aircraft
  endpoint:
    path: /path/to/aircraft
    method: GET
    data_selector: nodes
- name: aircraftAvailability
  endpoint:
    path: /path/to/aircraftAvailability
    method: GET
    data_selector: nodes
- name: Logbook
  endpoint:
    path: /logbooks
    method: GET
    data_selector: nodes
    params: {}
- name: LogbookConnection
  endpoint:
    path: /logbookConnection
    method: GET
    data_selector: nodes
    params: {}
- name: Maintenance
  endpoint:
    path: /maintenance
    method: GET
    data_selector: nodes
    params: {}
- name: MaintenanceConnection
  endpoint:
    path: /maintenanceConnection
    method: GET
    data_selector: nodes
    params: {}
- name: BookingCancellation
  endpoint:
    path: /BookingCancellation
    method: GET
    data_selector: bookingCancellation
    params: {}
- name: BookingStatusEnum
  endpoint:
    path: /BookingStatusEnum
    method: GET
    data_selector: bookingStatusEnum
    params: {}
- name: BookingUnion
  endpoint:
    path: /BookingUnion
    method: GET
    data_selector: bookingUnion
    params: {}
- name: ClassTheoryBooking
  endpoint:
    path: /ClassTheoryBooking
    method: GET
    data_selector: classTheoryBooking
    params: {}
- name: MaintenancePart
  endpoint:
    path: /MaintenancePart
    method: GET
    data_selector: nodes
    params: {}
- name: DutyTime
  endpoint:
    path: /dutyTime
    method: GET
    data_selector: nodes
- name: Exam
  endpoint:
    path: /exam
    method: GET
    data_selector: nodes
- name: ExtraTheory
  endpoint:
    path: /extraTheory
    method: GET
    data_selector: nodes
- name: flight
  endpoint:
    path: /flights
    method: GET
    data_selector: nodes
- name: flight_log
  endpoint:
    path: /flightLogs
    method: GET
    data_selector: nodes
- name: flight_connection
  endpoint:
    path: /flightConnections
    method: GET
    data_selector: edges
- name: operation
  endpoint:
    path: /operation
    method: GET
    data_selector: records
    params: {}
- name: operationBooking
  endpoint:
    path: /operationBooking
    method: GET
    data_selector: records
    params: {}
- name: progressTest
  endpoint:
    path: /progressTest
    method: GET
    data_selector: records
    params: {}
- name: LogbookConnection
  endpoint:
    path: /logbook
    method: GET
    data_selector: nodes
    params: {}
- name: MaintenanceConnection
  endpoint:
    path: /maintenance
    method: GET
    data_selector: nodes
    params: {}
- name: MaintenancePart
  endpoint:
    path: /MaintenancePart
    method: GET
- name: operation
  endpoint:
    path: /operation
    method: GET
    data_selector: records
    params: {}
- name: ProgressTest
  endpoint:
    path: /progressTests
    method: GET
    data_selector: nodes
    params: {}
- name: ProgressTestBooking
  endpoint:
    path: /progressTestBooking
    method: GET
    data_selector: nodes
    params: {}
- name: Rental
  endpoint:
    path: /rental
    method: GET
    data_selector: nodes
    params: {}
- name: RentalBooking
  endpoint:
    path: /rentalBooking
    method: GET
    data_selector: nodes
    params: {}
- name: SingleStudentBooking
  endpoint:
    path: /singleStudentBooking
    method: GET
    data_selector: nodes
    params: {}
- name: sitting
  endpoint:
    path: /sittings
    method: GET
    data_selector: sittings
- name: subject_category
  endpoint:
    path: /subject_categories
    method: GET
    data_selector: subject_categories
- name: theory_course
  endpoint:
    path: /theory_courses
    method: GET
    data_selector: theory_courses
- name: theory_participation
  endpoint:
    path: /theory_participations
    method: GET
    data_selector: theory_participations
- name: training
  endpoint:
    path: /trainings
    method: GET
    data_selector: trainings
- name: TypeQuestionnaire
  endpoint:
    path: /typequestionnaire
    method: GET
    data_selector: nodes
- name: User
  endpoint:
    path: /user
    method: GET
    data_selector: nodes
- name: TheoryRelease
  endpoint:
    path: /theoryRelease
    method: GET
    data_selector: nodes
- name: Training
  endpoint:
    path: /training
    method: GET
    data_selector: nodes
- name: TypeQuestionnaire
  endpoint:
    path: /TypeQuestionnaire
    method: GET
    data_selector: nodes
    params: {}
- name: UserInput
  endpoint:
    path: /user/input
    method: GET
    data_selector: data
    params: {}
- name: UserNotes
  endpoint:
    path: /user/notes
    method: GET
    data_selector: data
    params: {}
- name: UserProgram
  endpoint:
    path: /user/program
    method: GET
    data_selector: data
    params: {}
- name: UserProgramConnection
  endpoint:
    path: /user/program/connection
    method: GET
    data_selector: data
    params: {}
- name: UserReferences
  endpoint:
    path: /user/references
    method: GET
    data_selector: data
    params: {}
- name: VersionEvent
  endpoint:
    path: /version/event
    method: GET
    data_selector: data
    params: {}
- name: VersionUnion
  endpoint:
    path: /version/union
    method: GET
    data_selector: data
    params: {}
- name: UserInput
  endpoint:
    path: /UserInput
    method: GET
    data_selector: records
- name: UserNotes
  endpoint:
    path: /UserNotes
    method: GET
    data_selector: records
- name: UserProgram
  endpoint:
    path: /UserProgram
    method: GET
    data_selector: records
- name: UserProgramConnection
  endpoint:
    path: /UserProgramConnection
    method: GET
    data_selector: records
- name: UserReferences
  endpoint:
    path: /UserReferences
    method: GET
    data_selector: records
- name: VersionEvent
  endpoint:
    path: /VersionEvent
    method: GET
    data_selector: records
- name: VersionUnion
  endpoint:
    path: /VersionUnion
    method: GET
    data_selector: records
notes:
- Marked for imminent deprecation. Avoid using searchTerm if at all possible.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Expects dates to be specified in ISO 8610 format.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'CREDITED: Training has been credited.'
- 'FAILED: Training has failed.'
- 'NOT_FLOWN: Training has not been flown.'
- 'PASSED: Training has been passed.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.flightlogger.net
  headers:
    Authorization: Bearer <YOUR_API_TOKEN>
source_metadata: null
