resources:
- name: transfers
  endpoint:
    path: /transfers
    method: TCP
    data_selector: ''
    params: {}
- name: proofs
  endpoint:
    path: /proofs/
    method: TCP
    data_selector: ''
    params: {}
- name: transfers
  endpoint:
    path: /transfers
    method: GET
- name: proofs
  endpoint:
    path: /proofs
    method: GET
- name: autod
  endpoint:
    path: /queries/autod
    method: POST
- name: trpd
  endpoint:
    path: /queries/trpd
    method: POST
- name: aopd
  endpoint:
    path: /queries/aopd
    method: POST
- name: email
  endpoint:
    path: /queries/email
    method: POST
- name: trpdTransactions
  endpoint:
    path: /subscriptions/trp_transactions
    method: SUBSCRIBE
- name: aopdAoppProofs
  endpoint:
    path: /subscriptions/aopd_aopp_proofs
    method: SUBSCRIBE
- name: autod
  endpoint:
    path: ./queries/autod.html
    method: query
- name: trpd
  endpoint:
    path: ./queries/trpd.html
    method: query
- name: aopd
  endpoint:
    path: ./queries/aopd.html
    method: query
- name: email
  endpoint:
    path: ./queries/email.html
    method: query
- name: trpd
  endpoint:
    path: ./mutations/trpd.html
    method: mutation
- name: aopd
  endpoint:
    path: ./mutations/aopd.html
    method: mutation
- name: email
  endpoint:
    path: ./mutations/email.html
    method: mutation
- name: aopdAoppProofs
  endpoint:
    path: ./subscriptions/aopd_aopp_proofs.html
    method: subscription
- name: trpdTransactions
  endpoint:
    path: ./subscriptions/trp_transactions.html
    method: subscription
- name: AOPP Proof
  endpoint:
    path: /api/aopp_proof
    method: POST
    data_selector: data
    params: {}
- name: AOPP Proof Link
  endpoint:
    path: /requestAoppProof
    method: POST
    data_selector: data
    params: {}
- name: trpd
  endpoint:
    path: /trpd
    method: GET
- name: aopd
  endpoint:
    path: /aopd
    method: GET
- name: autod
  endpoint:
    path: /autod
    method: GET
- name: transfers
  endpoint:
    path: /transfers
    method: GET
- name: proofs
  endpoint:
    path: /proofs
    method: GET
- name: proofs
  endpoint:
    path: /aopd/proofs
    method: POST
    data_selector: proofs
    params: {}
- name: vasps
  endpoint:
    path: /trpd/vasps
    method: GET
    data_selector: vasps
    params: {}
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: trpdTransactions
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIBE
    data_selector: aopdAoppProofs
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIBE
    data_selector: trpdTransactions
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
    params: {}
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: trpdTransactions
    params: {}
- name: transfers
  endpoint:
    path: /transfers
    method: GET
- name: proofs
  endpoint:
    path: /proofs
    method: GET
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
- name: trpd
  endpoint:
    path: /trpd
    method: POST
    data_selector: data
    params: {}
- name: aopd
  endpoint:
    path: /aopd
    method: POST
    data_selector: data
    params: {}
- name: autod
  endpoint:
    path: /autod
    method: GET
    data_selector: data
    params: {}
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: data.aopdAoppProofs
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: data.trpdTransactions
- name: smtp_settings
  endpoint:
    path: /smtp/settings
    method: POST
    data_selector: settings
    params: {}
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: id
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: status
- name: smtp
  endpoint:
    path: /
    method: POST
    data_selector: response
    params: {}
- name: autod
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: trpd
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: aopd
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: email
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIBE
    data_selector: data.aopdAoppProofs
    params: {}
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIBE
    data_selector: data.trpdTransactions
    params: {}
- name: email
  endpoint:
    path: /send
    method: POST
    data_selector: message
    params: {}
- name: AOPP Callback URL
  endpoint:
    path: /aopp/callback
    method: GET
    data_selector: callback_url
    params: {}
- name: AOPP Portal URL
  endpoint:
    path: /aopp/portal
    method: GET
    data_selector: portal_url
    params: {}
- name: Chainalysis Key
  endpoint:
    path: /chainalysis/key
    method: GET
    data_selector: chainalysis_key
    params: {}
- name: Satoshi Test
  endpoint:
    path: /satoshi/test
    method: POST
    data_selector: satoshi_test
    params: {}
- name: Counterparty VASP
  endpoint:
    path: /counterparty/vasp
    method: POST
    data_selector: counterparty_vasp
    params: {}
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIBE
    data_selector: data.aopdAoppProofs
    params: {}
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIBE
    data_selector: data.trpdTransactions
    params: {}
- name: gmail
  endpoint:
    path: /smtp
    method: POST
    data_selector: settings
    params: {}
- name: transfers
  endpoint:
    path: /transfers
    method: GET
- name: proofs
  endpoint:
    path: /proofs
    method: GET
- name: AOPP Callback URL
  endpoint:
    path: /aopp/callback
    method: POST
    data_selector: callback_url
    params: {}
- name: AOPP Portal URL
  endpoint:
    path: /aopp/portal
    method: POST
    data_selector: portal_url
    params: {}
- name: Chainalysis Key
  endpoint:
    path: /chainalysis/key
    method: POST
    data_selector: chainalysis_key
    params: {}
- name: Satoshi Test
  endpoint:
    path: /satoshi/test
    method: POST
    data_selector: satoshi_test
    params: {}
- name: Counterparty VASPs
  endpoint:
    path: /counterparty/vasps
    method: GET
    data_selector: counterparty_vasps
    params: {}
- name: Add VASP
  endpoint:
    path: /counterparty/vasps/add
    method: POST
    data_selector: add_vasp
    params: {}
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIBE
    data_selector: id
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIBE
    data_selector: status
- name: trp
  endpoint:
    path: /api/trp
    method: POST
    data_selector: data
- name: aopp
  endpoint:
    path: /api/aopp
    method: POST
    data_selector: data
- name: Gmail SMTP
  endpoint:
    path: /smtp
    method: POST
    data_selector: settings
    params: {}
- name: Travel Rule Protocol
  endpoint:
    path: /transfers
    method: GET
- name: AOPP
  endpoint:
    path: /proofs/
    method: GET
- name: trpd
  endpoint:
    path: /trpd
    method: POST
- name: aopd
  endpoint:
    path: /aopd
    method: POST
- name: autod
  endpoint:
    path: /autod
    method: POST
- name: transfers
  endpoint:
    path: /transfers
    method: GET
- name: proofs
  endpoint:
    path: /proofs
    method: GET
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: trpdTransactions
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: data.aopdAoppProofs
    params: {}
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: data.trpdTransactions
    params: {}
- name: transfers
  endpoint:
    path: /transfers
    method: GET
- name: proofs
  endpoint:
    path: /proofs
    method: GET
- name: trpd
  endpoint:
    path: /api/trpd
    method: GET
- name: aopd
  endpoint:
    path: /api/aopd
    method: GET
- name: autod
  endpoint:
    path: /api/autod
    method: GET
- name: auditLogs
  endpoint:
    path: /autod/auditLogs
    method: GET
    data_selector: auditLogs
    params:
      limit: 5
      offset: 0
- name: txDetails
  endpoint:
    path: /autod/txDetails
    method: GET
    data_selector: txDetails
    params:
      status: INBOX
      limit: 10
      offset: 0
- name: proofs
  endpoint:
    path: /aopd/proofs
    method: GET
    data_selector: proofs
    params:
      offset: 0
      limit: 10
- name: Gmail
  endpoint:
    path: /gmail
    method: GET
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
    params: {}
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: trpdTransactions
    params: {}
- name: trpd
  endpoint:
    path: /trpd
    method: POST
    data_selector: data
    params: {}
- name: aopd
  endpoint:
    path: /aopd
    method: POST
    data_selector: data
    params: {}
- name: autod
  endpoint:
    path: /autod
    method: GET
    data_selector: data
    params: {}
- name: transfers
  endpoint:
    path: /transfers
    method: GET
- name: proofs
  endpoint:
    path: /proofs
    method: GET
- name: vasps
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIBE
    data_selector: aopdAoppProofs
    params: {}
- name: auditLogs
  endpoint:
    path: /trpd/graphql-ws
    method: QUERY
    data_selector: auditLogs
    params:
      limit: 5
      offset: 0
- name: customer
  endpoint:
    path: /register_a_customer
    method: POST
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
    params: {}
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: trpdTransactions
    params: {}
- name: Gmail SMTP Setup
  endpoint:
    path: /smtp
    method: POST
    data_selector: smtp_settings
- name: trpd
  endpoint:
    path: /trpd
    method: POST
    data_selector: records
- name: aopd
  endpoint:
    path: /aopd
    method: POST
    data_selector: records
- name: autod
  endpoint:
    path: /autod
    method: GET
    data_selector: records
- name: auditLogs
  endpoint:
    path: /autod/auditLogs
    method: POST
    data_selector: auditLogs
    params:
      limit: 5
      offset: 0
- name: txDetails
  endpoint:
    path: /autod/txDetails
    method: POST
    data_selector: txDetails
    params:
      status: INBOX
      limit: 10
      offset: 0
- name: customer
  endpoint:
    path: /api/address_book/register_a_customer
    method: POST
- name: transactions_inbox
  endpoint:
    path: /api/transactions/inbox
    method: GET
    data_selector: transactions
    params: {}
- name: archive_transaction
  endpoint:
    path: /api/transactions/archive
    method: POST
    data_selector: result
    params: {}
- name: auditLogs
  endpoint:
    path: /autod/auditLogs
    method: POST
    data_selector: auditLogs
    params:
      limit: 5
      offset: 0
- name: custodialUsers
  endpoint:
    path: /trpd/custodialUsers
    method: POST
    data_selector: custodialUsers
    params:
      limit: 5
      offset: 0
- name: vasps
  endpoint:
    path: /trpd/vasps
    method: POST
    data_selector: vasps
    params: {}
- name: txDetails
  endpoint:
    path: /autod
    method: POST
    data_selector: txDetails
    params:
      status: INBOX
      limit: 10
      offset: 0
- name: auditLogs
  endpoint:
    path: /autod
    method: POST
    data_selector: auditLogs
    params:
      limit: 5
      offset: 0
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: trpdTransactions
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: records
- name: transactions_inbox
  endpoint:
    path: /transactions/inbox
    method: GET
    data_selector: transactions
    params: {}
- name: send_transaction_notification
  endpoint:
    path: /transactions/send_transaction_notification
    method: POST
    data_selector: result
    params: {}
- name: archive_new_transaction
  endpoint:
    path: /transactions/archive_new_transaction
    method: POST
    data_selector: result
    params: {}
- name: export_transactions
  endpoint:
    path: /transactions/export
    method: GET
    data_selector: export
    params: {}
- name: trpd
  endpoint:
    path: /api/trpd
    method: POST
    data_selector: data
    params: {}
- name: aopd
  endpoint:
    path: /api/aopd
    method: POST
    data_selector: data
    params: {}
- name: autod
  endpoint:
    path: /api/autod
    method: GET
    data_selector: data
    params: {}
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: trpdTransactions
- name: txDetails
  endpoint:
    path: /autod/txDetails
    method: POST
    data_selector: data.txDetails
    params:
      status: INBOX
      limit: 10
      offset: 0
- name: auditLogs
  endpoint:
    path: /autod/auditLogs
    method: POST
    data_selector: data.auditLogs
    params:
      limit: 5
      offset: 0
- name: customer
  endpoint:
    path: /register_a_customer
    method: POST
    data_selector: customer
    params: {}
- name: transactions_inbox
  endpoint:
    path: /transactions/inbox
    method: GET
    data_selector: transactions
    params: {}
- name: send_transaction_notification
  endpoint:
    path: /transactions/send_transaction_notification
    method: POST
    data_selector: notification_response
    params: {}
- name: archive_new_transaction
  endpoint:
    path: /transactions/archive_new_transaction
    method: POST
    data_selector: archive_response
    params: {}
- name: transactions_inbox
  endpoint:
    path: /api/transactions/inbox
    method: GET
    data_selector: transactions
    params: {}
- name: send_transaction_notification
  endpoint:
    path: /api/transactions/send_notification
    method: POST
    data_selector: notification_response
    params: {}
- name: archive_transaction
  endpoint:
    path: /api/transactions/archive
    method: POST
    data_selector: archive_response
    params: {}
- name: transfers
  endpoint:
    path: /transfers
    method: GET
- name: proofs
  endpoint:
    path: /proofs
    method: GET
- name: vasps
  endpoint:
    path: /trpd/vasps
    method: GET
    data_selector: vasps
    params: {}
- name: custodialUsers
  endpoint:
    path: /trpd/custodialUsers
    method: GET
    data_selector: custodialUsers
    params:
      limit: 5
      offset: 0
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
- name: transactions_inbox
  endpoint:
    path: /transactions/inbox
    method: GET
    data_selector: transactions
    params: {}
- name: transactions_archived
  endpoint:
    path: /transactions/archived
    method: GET
    data_selector: transactions
    params: {}
- name: Gmail SMTP
  endpoint:
    path: /smtp.gmail.com
    method: POST
- name: transactions_inbox
  endpoint:
    path: /transactions/inbox
    method: GET
    data_selector: transactions
    params: {}
- name: transactions_waiting
  endpoint:
    path: /transactions/waiting
    method: GET
    data_selector: transactions
    params: {}
- name: transactions_archived
  endpoint:
    path: /transactions/archived
    method: GET
    data_selector: transactions
    params: {}
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
    params: {}
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
    params: {}
- name: travel_rule_data
  endpoint:
    path: /api/travel_rule
    method: POST
    data_selector: data
    params: {}
- name: address_ownership_proofs
  endpoint:
    path: /api/aopp
    method: POST
    data_selector: data
    params: {}
- name: customer
  endpoint:
    path: /register_a_customer
    method: POST
- name: transactions_inbox
  endpoint:
    path: /transactions/inbox
    method: GET
    data_selector: records
- name: transactions_waiting
  endpoint:
    path: /transactions/waiting
    method: GET
    data_selector: records
- name: transactions_archived
  endpoint:
    path: /transactions/archived
    method: GET
    data_selector: records
- name: auditLogs
  endpoint:
    path: /autod/auditLogs
    method: GET
    data_selector: auditLogs
    params:
      limit: 5
      offset: 0
- name: vasps
  endpoint:
    path: /trpd/vasps
    method: GET
    data_selector: vasps
    params: {}
- name: transactions_inbox
  endpoint:
    path: /api/transactions/inbox
    method: GET
    data_selector: transactions
    params: {}
- name: archive_transaction
  endpoint:
    path: /api/transactions/archive
    method: POST
    data_selector: result
    params: {}
- name: send_transaction_notification
  endpoint:
    path: /api/transactions/send_notification
    method: POST
    data_selector: result
    params: {}
- name: trpd
  endpoint:
    path: /trpd
    method: POST
    data_selector: data
- name: aopd
  endpoint:
    path: /aopd
    method: POST
    data_selector: data
- name: autod
  endpoint:
    path: /autod
    method: POST
    data_selector: data
- name: custodial_users
  endpoint:
    path: /trpd/custodialUsers
    method: GET
    data_selector: custodialUsers
    params:
      limit: 5
      offset: 0
- name: audit_logs
  endpoint:
    path: /trpd/auditLogs
    method: GET
    data_selector: auditLogs
    params:
      limit: 5
      offset: 0
- name: vasps
  endpoint:
    path: /trpd/vasps
    method: GET
    data_selector: vasps
    params: {}
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: trpdTransactions
- name: transaction
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: transactions
- name: gmail_smtp_setup
  endpoint:
    path: /smtp/gmail
    method: POST
    data_selector: settings
- name: transactions_inbox
  endpoint:
    path: /transactions/inbox
    method: GET
    data_selector: transactions
    params: {}
- name: send_transaction_notification
  endpoint:
    path: /transactions/send_transaction_notification
    method: POST
    data_selector: notification
    params: {}
- name: archive_new_transaction
  endpoint:
    path: /transactions/archive_new_transaction
    method: POST
    data_selector: archive
    params: {}
- name: export_transactions
  endpoint:
    path: /transactions/export
    method: GET
    data_selector: export
    params: {}
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
    params: {}
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: trpdTransactions
    params: {}
- name: transactions_inbox
  endpoint:
    path: /transactions/inbox
    method: GET
    data_selector: transactions
    params: {}
- name: transactions_waiting
  endpoint:
    path: /transactions/waiting
    method: GET
    data_selector: transactions
    params: {}
- name: transactions_archived
  endpoint:
    path: /transactions/archived
    method: GET
    data_selector: transactions
    params: {}
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: trpdTransactions
- name: archived_transactions
  endpoint:
    path: /transactions/archived
    method: GET
    data_selector: transactions
    params: {}
- name: detailed_transaction
  endpoint:
    path: /transactions/archived/detailed_transaction
    method: GET
    data_selector: transaction_details
    params: {}
- name: customer
  endpoint:
    path: /register_a_customer
    method: POST
- name: proof
  endpoint:
    path: /proofs
    method: GET
    data_selector: proofs
- name: transactions_inbox
  endpoint:
    path: /transactions/inbox
    method: GET
    data_selector: transactions
- name: send_transaction_notification
  endpoint:
    path: /transactions/send_transaction_notification
    method: POST
    data_selector: result
- name: archive_new_transaction
  endpoint:
    path: /transactions/archive_new_transaction
    method: POST
    data_selector: result
- name: transaction
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: transactions
- name: satoshi_test
  endpoint:
    path: /api/satoshi_test
    method: POST
    data_selector: test_results
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: trpdTransactions
- name: customer
  endpoint:
    path: /register_a_customer
    method: POST
- name: transfers
  endpoint:
    path: /transfers
    method: GET
- name: proofs
  endpoint:
    path: /proofs
    method: GET
- name: transactions_inbox
  endpoint:
    path: /api/transactions/inbox
    method: GET
    data_selector: transactions
    params: {}
- name: transactions_waiting
  endpoint:
    path: /api/transactions/waiting
    method: GET
    data_selector: transactions
    params: {}
- name: transactions_archived
  endpoint:
    path: /api/transactions/archived
    method: GET
    data_selector: transactions
    params: {}
- name: archived_transactions
  endpoint:
    path: /transactions/archived
    method: GET
    data_selector: transactions
- name: transaction_details
  endpoint:
    path: /transactions/archived/details
    method: GET
    data_selector: transaction_details
- name: aopdAoppProofs
  endpoint:
    path: /aopd/graphql-ws
    method: SUBSCRIPTION
    data_selector: aopdAoppProofs
- name: trpdTransactions
  endpoint:
    path: /trpd/graphql-ws
    method: SUBSCRIPTION
    data_selector: trpdTransactions
- name: proofs
  endpoint:
    path: /proofs
    method: GET
    data_selector: records
- name: Gmail SMTP
  endpoint:
    path: /smtp.gmail.com
    method: POST
    data_selector: smtp_settings
- name: Audit Log Data
  endpoint:
    path: /audit/logs
    method: GET
    data_selector: logs
- name: transactions_inbox
  endpoint:
    path: /transactions/inbox
    method: GET
    data_selector: transactions
    params: {}
- name: transactions_waiting
  endpoint:
    path: /transactions/waiting
    method: GET
    data_selector: transactions
    params: {}
- name: transactions_archived
  endpoint:
    path: /transactions/archived
    method: GET
    data_selector: transactions
    params: {}
- name: archived_transactions_overview
  endpoint:
    path: /transactions/archived/overview
    method: GET
    data_selector: transactions
- name: detailed_transaction
  endpoint:
    path: /transactions/archived/detailed_transaction
    method: GET
    data_selector: transaction_details
- name: wallet_address
  endpoint:
    path: /wallets
    method: GET
    data_selector: proofs
- name: customer_id
  endpoint:
    path: /customers
    method: GET
    data_selector: customers
- name: audit_logs
  endpoint:
    path: /autod/auditLogs
    method: GET
    data_selector: auditLogs
    params:
      limit: 5
      offset: 0
- name: tx_details
  endpoint:
    path: /autod/txDetails
    method: GET
    data_selector: txDetails
    params:
      status: INBOX
      limit: 10
      offset: 0
- name: aopp_callback_url
  endpoint:
    path: /aopp/callback
    method: POST
- name: aopp_portal_url
  endpoint:
    path: /aopp/portal
    method: GET
- name: chainalysis_key
  endpoint:
    path: /chainalysis/key
    method: POST
- name: satoshi_test_blockbook_server
  endpoint:
    path: /satoshi/test/blockbook
    method: POST
- name: satoshi_test_time_limit
  endpoint:
    path: /satoshi/test/time/limit
    method: POST
- name: satoshi_test_base_amounts
  endpoint:
    path: /satoshi/test/base/amounts
    method: POST
- name: transactions_inbox
  endpoint:
    path: /api/transactions/inbox
    method: GET
    data_selector: transactions
    params: {}
- name: archive_transaction
  endpoint:
    path: /api/transactions/archive
    method: POST
    data_selector: transaction
    params: {}
- name: Archived Transactions Overview
  endpoint:
    path: /transactions/archived/overview
    method: GET
    data_selector: transactions
- name: Detailed Transaction
  endpoint:
    path: /transactions/archived/detailed_transaction
    method: GET
    data_selector: transaction_details
- name: proofs_overview
  endpoint:
    path: /proofs_overview
    method: GET
    data_selector: proofs
    params: {}
- name: audit_logs
  endpoint:
    path: /api/audit_logs
    method: GET
    data_selector: logs
notes:
- The GraphiQL application served by the link serves a development version of the
  API.
- If you are integrating against a release version of 21 Travel then you should use
  GraphiQL served via the /graphiql endpoint of your instance.
- 21 Travel Rule is licensed software that runs on-premise within your own IT environment.
- The GUI functionality is powered by a GraphQL API that is also available for integration
  into your IT systems.
- Our products are on-premise/self-hosted solutions, i.e. the software runs in the
  customer's data centre or cloud provider of the customer's choice.
- 21 Analytics has *no means* to access your deployment.
- Caddy will automatically set up HTTPS using the ACME protocol.
- The graphical user interface needs to be served from the root path /.
- docker service is not running on your machine
- Consider using a more powerful instance. 1GB is a minimum that is known to work
- Keycloak should be configured following the guide.
- Bearer token required for GraphQL API authentication
- Websocket connections for subscriptions use the same Bearer token
- Authentication happens as part of the initial handshake on an established Websocket
  connection.
- Ensure that the AOPP Portal URL is configured.
- A valid URL must be entered for the redirect query argument.
- The Compliance Dashboard is only accessible to users from within the VASP and should
  never be exposed to the outside world.
- The Compliance Dashboard is only accessible to users (typically compliance officers)
  from within the VASP and should never be exposed to the outside world.
- API expects Bearer Authorization header containing a valid OIDC access token, usually
  issued by a Keycloak service.
- 'To run 21 Travel Rule the following software needs to be installed: Docker, Docker
  Compose (version 2.x or higher), git.'
- GraphQL API expects Bearer Authorization header containing a valid OIDC access token
- Keycloak is configured for usage via the web frontend using the account Keycloak
  client on the 21travel realm
- Subscriptions are served over WebSocket
- Subscriptions are not supported on GraphiQL.
- The completion of the ACME challenge can take several minutes.
- 21 Travel Rule is on-premise software
- The GraphQL API expects Bearer Authorisation header containing a valid OIDC access
  token, usually issued by a Keycloak service.
- Uses Keycloak service to manage user accounts.
- Subscriptions are not supported on GraphiQL
- We recommend that you automate this manual process using the API.
- Requires a valid 21 Travel Rule license to access the Docker Registry
- Use of a Keycloak service to manage user accounts
- We recommend that you automate this manual process using the API
- The GraphQL API expects Bearer Authorisation header containing a valid OIDC access
  token.
- Subscriptions are supported via GraphQL over Websocket.
- The base URL will be auto-detected when left empty (recommended).
- If auto-detection fails then usually there are configuration mistakes in the Caddyfile.
- Enabling fuzzy name matching allows leniency with names submitted to you.
- The GUI functionality is powered by a GraphQL API
- The reference deployment uses a Keycloak service to manage user accounts.
- GraphQL API expects Bearer Authorization header containing a valid OIDC access token.
- The default value for connection security is STARTTLS.
- On-premise solution, no access to PII data.
- Compliance Dashboard is only accessible to internal users.
- The first time you run those commands the database access passwords are initialised.
- Use STARTTLS for connection security
- Remove white spaces from the app password
- GraphQL subscriptions are exposed using the GraphQL over Websocket Protocol
- Uses STARTTLS for connection security
- Allow approximately three minutes for all services to start up.
- Callback URL will be auto-detected when left empty (recommended).
- The option to bypass auto-detection is mainly provided for users that don't use
  caddy.
- Ensure to set up the compliance users on Keycloak.
- On-premise/self-hosted solution
- Requires setup of Keycloak for authentication
- Connection Security set to STARTTLS
- GraphQL API expects Bearer Authorisation header containing a valid OIDC access token
- Keycloak is integrated into the 21travel reference deployment
- To generate the SMTP Password, go to https://myaccount.google.com/apppasswords.
  Remember to remove the white spaces from the password when you copy it.
- 21 Travel Rule is on-premise software and does not expose individual or aggregated
  information.
- Remember to remove the white spaces from the password when you copy it to the SMTP
  Password.
- The GUI is intended for low-volume customers.
- It is recommended that this process be automated through the API or by preparing
  a script to integrate with your custodial system if you have one.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- It is recommended that the process be automated through the API or by preparing
  a script to integrate with your custodial system if you have one.
- To generate the SMTP Password, go to https://myaccount.google.com/apppasswords.
- Remember to remove the white spaces from the password when you copy it.
- The API can be integrated into your IT systems.
- The GraphQL API expects `Bearer` Authorisation header containing a valid OIDC access
  token.
- Default connection security is STARTTLS
- Remember to remove the white spaces from the password when you copy it
- 21 Travel Rule is on-premise software and cannot expose PII data.
- Keycloak is integrated into the 21 Travel Rule reference deployment.
- 21 Travel Rule is on-premise software.
- The Compliance Dashboard is accessible only to users within the VASP.
- The hardware requirements depend on the number of transactions you send & receive.
- GraphQL subscriptions are exposed using GraphQL over Websocket Protocol.
- The callback URL will be auto-detected when left empty (recommended).
- Automation of manual processes is recommended using the API
- Compliance Dashboard is accessible only to users from within the VASP
- Please ensure to set up the compliance users on Keycloak.
- Email is used as a fallback mechanism for non-compliant VASPs.
- Caddy will automatically set up HTTPS using the ACME protocol
- Allow approximately three minutes for all services to start up
- Subscriptions are served from /trpd/graphql-ws.
- The API is integrated with Keycloak for authentication.
- Requires a valid 21 Travel Rule license to access the Docker Registry.
- The GraphQL API expects `Bearer` Authorisation header containing a valid OIDC access
  token, usually issued by a Keycloak service.
- The same full email used in the 'From' email address must be used as the SMTP Username.
- GraphQL subscriptions are exposed using the GraphQL over Websocket Protocol.
- Automate processes using the API for efficiency.
- Automate the process using the API.
- Pagination appears after 15 rows are populated.
- Ensure domain names are properly configured in the Caddyfile for HTTPS.
- Keycloak is configured for usage via the web frontend using the account Keycloak
  client on the 21travel realm.
- Pagination occurs after 15 rows are populated.
- The Export Transaction button allows export as an .xlsx file.
- Default value for connection security is STARTTLS
- Users can be created via the graphical user interface after the first login.
- Uses OAuth2 with refresh token — requires setup of connected app in 21 Travel Rule.
- Pagination appears when 15 rows have been populated.
- GraphQL API provides extensive functionality
- Gmail and Google Workspace email addresses don't necessarily end in @gmail.com.
- Pagination will create a new page when 15 rows have been populated.
- 'Note: Ensure to handle API limits and error responses.'
- Automate the transaction processes using the API.
- Subscribing to AOPD proofs requires a separate subscription endpoint.
- Some queries may return nulls in deeply nested fields.
- It is recommended to automate the manual processes using the API.
- This title shows the ID of the transaction in 21 Travel Rule.
- This should not be confused with the blockchain transaction ID.
- SMTP Username must be the same as the From email address
- GraphQL API integrated with Keycloak for authentication.
- Recommended to automate processes using the API.
- Pagination appears when 15 rows are populated.
- Subscriptions are not supported on GraphiQL so only the documentation can be explored.
- Compliance Dashboard can handle Travel Rule messages with counterparty VASPs
- AOPP Portal web application automates interactions with customers
- Gmail and Google Workspace email addresses don't necessarily end in `@gmail.com`.
- The deployment requires a valid 21 Travel Rule license.
- Automate the manual process using the API.
- Transaction ID is generated on blockchain for executed or registered transactions.
- The protocol is used to check if the transaction was compliant.
- Subscriptions are supported via GraphQL over WebSocket.
- The default value we use is usually STARTTLS.
- Remember to remove the white spaces from the SMTP Password.
- The graphical user interface can be accessed as configured in the Caddyfile.
- Automate transaction notifications via API.
- Export Audits button allows exporting logs as an .xlsx file for further manipulation.
- Pagination appears when 15 rows have been populated on the overview table.
- Supports the entire 18 decimals for Ethereum.
- Transactions can be manually archived for future references.
- The wallet address that is being checked for proof of ownership refers to an external
  self-hosted address of one of the customers of your VASP.
- For the risk score, a blockchain analytics tool needs to be set up.
- 21 Travel Rule is an on-premise/self-hosted solution.
- The Compliance Dashboard is only accessible to users from within the VASP.
- The reference deployment automatically loads a 21travel realm that will be used
  for authentication.
- Uses GraphQL over Websocket Protocol for subscriptions
- Default value for connection security is STARTTLS.
- Pagination appears after 15 rows have been populated.
- The Export Audits button allows you to export all the proofs as an .xlsx (Excel)
  file.
errors:
- Common usage errors are clarified in the Troubleshooting section.
- '''Invalid parameter: redirect_uri'' error when trying to log in.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'FileNotFoundError: [Errno 2] No such file or directory: Ensure the docker service
  is running.'
- 'Invalid parameter: redirect_uri: Check Keycloak configuration for typos.'
- 'Invalid parameter: redirect_uri error when trying to log in.'
- 'FileNotFoundError: [Errno 2] No such file or directory'
- Cannot autolaunch D-Bus without X11 $DISPLAY
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'Invalid parameter: redirect_uri error when trying to log in: indicates a missing
  or erroneous configuration of Keycloak.'
- '401 Unauthorized: Recheck access token validity.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Cannot autolaunch D-Bus: Install ''pass'' to store credentials.'
- '401 Unauthorized: Check your credentials'
- '403 Forbidden: Insufficient permissions for the requested resource'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- 'Invalid parameter: redirect_uri error when trying to log in'
- '400 BAD REQUEST: Invalid request parameters'
- '401 Unauthorized: Check your authentication credentials'
- '500 INTERNAL SERVER ERROR: Try again later'
- '404 Not Found: Verify the endpoint URL'
- '500 Internal Server Error: Try again later'
- 'Error saving credentials: error storing credentials - err: exit status 1, out:
  `Cannot autolaunch D-Bus without X11 $DISPLAY`'
- '''Invalid parameter: redirect_uri'' error when trying to log in'
- '400 Bad Request: Check the request parameters for correctness.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '500 Internal Server Error: Try again later or contact support.'
- 'Cannot autolaunch D-Bus: Install ''pass'' on Linux to store credentials.'
- '401 Unauthorized: Check client ID and secret'
- Cannot autolaunch D-Bus
- '401 Unauthorized: Check OAuth token validity.'
- '400 Bad Request: Ensure all required fields are filled.'
- '401 Unauthorized: Recheck OAuth credentials.'
auth_info:
  mentioned_objects:
  - Keycloak
  - access token
  - Bearer Token
  - Bearer
  - OIDC
  - Client
  - Client Secret
  - AopdAoppProofs
  - TrpdTransactions
  - bearer_token
  - OIDC access token
  - GraphQL
  - Websocket
  - trpdTransactions
  - OauthToken
  - AuthProvider
  - access_token
  - NamedCredential
  - BearerToken
  - OAuth2
  - GraphQL Subscription
client:
  base_url: https://testing.21analytics.xyz
  auth:
    type: oauth2
source_metadata: null
