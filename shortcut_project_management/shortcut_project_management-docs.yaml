Here's the YAML configuration for the `shortcut_project_management` REST API source based on the provided documentation:

client:
  base_url: "https://api.shortcut.com/api/v3/"
  auth:
    type: "api_key"
    location: "header"
    header_name: "Shortcut-Token"

resources:
  - name: "epics"
    endpoint: "/epics"
    method: "GET"
    params:
      - name: "include"
        required: false
        type: "string"
        description: "Comma-separated list of related resources to include in the response."
    data_selector: "$.data"  # Adjust this if the actual response structure differs

  - name: "categories"
    endpoint: "/categories"
    method: "GET"
    params:
      - name: "include"
        required: false
        type: "string"
        description: "Comma-separated list of related resources to include in the response."
    data_selector: "$.data"

  - name: "files"
    endpoint: "/files"
    method: "GET"
    params:
      - name: "include"
        required: false
        type: "string"
        description: "Comma-separated list of related resources to include in the response."
    data_selector: "$.data"

notes:
  - "Rate limits may apply based on your API usage. Check the API documentation for more details."
  - "Ensure your API key is valid and included in the request headers."
  - "The API supports pagination; refer to the documentation on how to handle paginated responses."

errors:
  - 401  # Unauthorized - invalid API key
  - 403  # Forbidden - access denied
  - 404  # Not Found - endpoint does not exist
  - 429  # Too Many Requests - rate limit exceeded

auth_info:
  mentioned_objects:
    - "API key requirements: Authorization via 'Shortcut-Token' header."
    - "Authentication method: API key."

source_metadata:
  description: "This API provides access to project management resources including epics, categories, and files from Shortcut."
### Explanation:
1. **Base URL**: Extracted as `https://api.shortcut.com/api/v3/`.
2. **Authentication**: Identified as API key, which is included in the header as `Shortcut-Token`.
3. **Resources**: Three main endpoints (`epics`, `categories`, and `files`) were identified from the documentation.
4. **Query Parameters**: Each resource has an optional `include` parameter for related resources.
5. **Notes**: Included helpful notes about rate limits and the importance of valid API keys.
6. **Errors**: Common HTTP error codes are listed for better error handling.
7. **Source Metadata**: A brief description of what the API provides was included. 
