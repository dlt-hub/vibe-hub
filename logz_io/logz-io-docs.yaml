resources:
- name: search_logs
  endpoint:
    path: /search
    method: GET
- name: scroll_logs
  endpoint:
    path: /scroll
    method: GET
- name: search_logs
  endpoint:
    path: /search
    method: GET
- name: scroll_logs
  endpoint:
    path: /scroll
    method: POST
- name: search_logs
  endpoint:
    path: /v1/search
    method: POST
    data_selector: hits
    params:
      size: 10
- name: search_logs
  endpoint:
    path: /v1/search
    method: POST
    data_selector: hits
    params:
      from: 0
      size: 10
- name: alerts
  endpoint:
    path: /docs/logz/get-all-alerts
    method: GET
- name: alerts
  endpoint:
    path: /alerts
    method: GET
    data_selector: alerts
    params: {}
- name: triggered_alerts
  endpoint:
    path: /alerts/triggered
    method: GET
    data_selector: triggered_alerts
    params: {}
- name: Insights
  endpoint:
    path: /docs/logz/get-public-insights
    method: GET
- name: Insights
  endpoint:
    path: /docs/logz/get-public-insights
    method: GET
- name: create_snapshot
  endpoint:
    path: /docs/logz/create-snapshot
    method: POST
- name: get_snapshot
  endpoint:
    path: /docs/logz/get-snapshot
    method: GET
- name: fetch_security_events
  endpoint:
    path: /docs/logz/search-security-rules-events
    method: GET
- name: edit_security_events
  endpoint:
    path: /docs/logz/edit-security-rules-events
    method: POST
- name: fetch_triggered_logs
  endpoint:
    path: /docs/logz/search-security-rule-event-logs
    method: GET
- name: fetch_security_events
  endpoint:
    path: /search-security-rules-events
    method: GET
- name: edit_security_events
  endpoint:
    path: /edit-security-rules-events
    method: POST
- name: fetch_triggered_logs
  endpoint:
    path: /search-security-rule-event-logs
    method: GET
- name: retrieve_users
  endpoint:
    path: /list-users
    method: GET
    data_selector: users
    params: {}
- name: create_user
  endpoint:
    path: /create-user
    method: POST
    data_selector: user
    params: {}
- name: update_user
  endpoint:
    path: /update-user
    method: PUT
    data_selector: user
    params: {}
- name: delete_user
  endpoint:
    path: /delete-user
    method: DELETE
    data_selector: user
    params: {}
- name: users
  endpoint:
    path: /docs/logz/list-users
    method: GET
    data_selector: records
- name: user_by_id
  endpoint:
    path: /docs/logz/get-user
    method: GET
    data_selector: record
- name: authentication_groups
  endpoint:
    path: /authentication/groups
    method: GET
- name: create_update_authentication_groups
  endpoint:
    path: /authentication/groups
    method: POST
- name: authentication_groups
  endpoint:
    path: /auth/groups
    method: GET
- name: whoami
  endpoint:
    path: /v2/whoami
    method: GET
    data_selector: accountName, accountId
    params: {}
- name: whoami
  endpoint:
    path: /v2/whoami
    method: GET
    data_selector: accountName
    params: {}
- name: retrieve_settings_for_all_accounts
  endpoint:
    path: /docs/logz/get-all
    method: GET
- name: create_sub_account
  endpoint:
    path: /docs/logz/create-time-based-account
    method: POST
- name: retrieve_account_settings_by_id
  endpoint:
    path: /docs/logz/get
    method: GET
- name: update_account
  endpoint:
    path: /docs/logz/update-time-based-account
    method: PUT
- name: delete_sub_account
  endpoint:
    path: /docs/logz/delete-time-based-account
    method: DELETE
- name: retrieve_detailed_information_for_all_accounts
  endpoint:
    path: /docs/logz/get-all-detailed-time-based-account
    method: GET
- name: retrieve_detailed_account_information_by_account_id
  endpoint:
    path: /docs/logz/get-detailed-time-based-account
    method: GET
- name: all_accounts
  endpoint:
    path: /docs/logz/get-all
    method: GET
- name: create_sub_account
  endpoint:
    path: /docs/logz/create-time-based-account
    method: POST
- name: account_settings_by_id
  endpoint:
    path: /docs/logz/get
    method: GET
- name: update_account
  endpoint:
    path: /docs/logz/update-time-based-account
    method: PATCH
- name: delete_sub_account
  endpoint:
    path: /docs/logz/delete-time-based-account
    method: DELETE
- name: detailed_account_info
  endpoint:
    path: /docs/logz/get-all-detailed-time-based-account
    method: GET
- name: detailed_account_info_by_id
  endpoint:
    path: /docs/logz/get-detailed-time-based-account
    method: GET
- name: shared_token_filter
  endpoint:
    path: /docs/logz/get-all-filters
    method: GET
- name: shared_token
  endpoint:
    path: /docs/logz/get-all-tokens
    method: GET
- name: sub_account_api_token
  endpoint:
    path: /manage/api/tokens
    method: POST
- name: notification_endpoints
  endpoint:
    path: /manage/notification-endpoints
    method: GET
    data_selector: endpoints
    params: {}
- name: export_saved_objects
  endpoint:
    path: /kibana/export
    method: GET
    data_selector: objects
- name: import_saved_objects
  endpoint:
    path: /kibana/import
    method: POST
    data_selector: objects
- name: create_slack_endpoint
  endpoint:
    path: /docs/logz/create-slack
    method: POST
- name: update_slack_endpoint
  endpoint:
    path: /docs/logz/update-slack
    method: PUT
- name: create_custom_notification_endpoint
  endpoint:
    path: /docs/logz/create-custom
    method: POST
- name: update_custom_notification_endpoint
  endpoint:
    path: /docs/logz/update-custom
    method: PUT
- name: create_pagerduty_endpoint
  endpoint:
    path: /docs/logz/create-pager-duty
    method: POST
- name: update_pagerduty_endpoint
  endpoint:
    path: /docs/logz/update-pager-duty
    method: PUT
- name: retrieve_all_notification_endpoints
  endpoint:
    path: /docs/logz/get-all-endpoints
    method: GET
- name: export_kibana_objects
  endpoint:
    path: /kibana/export
    method: GET
    data_selector: objects
- name: import_kibana_objects
  endpoint:
    path: /kibana/import
    method: POST
    data_selector: result
- name: log_shipping_token
  endpoint:
    path: /manage-log-shipping-tokens
    method: GET
- name: create_log_shipping_token
  endpoint:
    path: /create-new-log-shipping-token
    method: POST
- name: retrieve_log_shipping_token
  endpoint:
    path: /get-log-shipping-token-by-id
    method: GET
- name: update_log_shipping_token
  endpoint:
    path: /update-log-shipping-token
    method: PATCH
- name: delete_log_shipping_token
  endpoint:
    path: /delete-log-shipping-token
    method: DELETE
- name: get_available_tokens
  endpoint:
    path: /get-log-shipping-tokens-limits
    method: GET
- name: retrieve_log_shipping_tokens
  endpoint:
    path: /search-log-shipping-tokens
    method: GET
- name: create_log_shipping_token
  endpoint:
    path: /docs/logz/create-new-log-shipping-token
    method: POST
- name: retrieve_log_shipping_token_by_id
  endpoint:
    path: /docs/logz/get-log-shipping-token-by-id
    method: GET
- name: update_log_shipping_token
  endpoint:
    path: /docs/logz/update-log-shipping-token
    method: PUT
- name: delete_log_shipping_token
  endpoint:
    path: /docs/logz/delete-log-shipping-token
    method: DELETE
- name: get_number_of_available_tokens
  endpoint:
    path: /docs/logz/get-log-shipping-tokens-limits
    method: GET
- name: retrieve_log_shipping_tokens
  endpoint:
    path: /docs/logz/search-log-shipping-tokens
    method: GET
- name: drop_filters
  endpoint:
    path: /docs/logz/get-all-for-account
    method: GET
- name: activate_drop_filter
  endpoint:
    path: /docs/logz/activate
    method: POST
- name: deactivate_drop_filter
  endpoint:
    path: /docs/logz/deactivate
    method: POST
- name: delete_drop_filter
  endpoint:
    path: /docs/logz/delete
    method: DELETE
- name: create_drop_filter
  endpoint:
    path: /docs/logz/create
    method: POST
- name: retrieve_drop_filters
  endpoint:
    path: /docs/logz/get-all-for-account
    method: GET
- name: activate_drop_filter
  endpoint:
    path: /docs/logz/activate
    method: POST
- name: deactivate_drop_filter
  endpoint:
    path: /docs/logz/deactivate
    method: POST
- name: delete_drop_filter
  endpoint:
    path: /docs/logz/delete
    method: DELETE
- name: create_drop_filter
  endpoint:
    path: /docs/logz/create
    method: POST
- name: archive_settings
  endpoint:
    path: /docs/logz/get-settings-for-account
    method: GET
    data_selector: settings
    params: {}
- name: setup_archiving
  endpoint:
    path: /docs/logz/create-settings
    method: POST
    data_selector: result
    params: {}
- name: test_archive_settings
  endpoint:
    path: /docs/logz/test-settings
    method: POST
    data_selector: status
    params: {}
- name: retrieve_archive_settings
  endpoint:
    path: /docs/logz/get-settings
    method: GET
    data_selector: settings
    params: {}
- name: update_archive_settings
  endpoint:
    path: /docs/logz/update-settings
    method: PUT
    data_selector: result
    params: {}
- name: delete_archive_settings
  endpoint:
    path: /docs/logz/delete-settings
    method: DELETE
    data_selector: result
    params: {}
- name: Retrieve archiving settings
  endpoint:
    path: /docs/logz/get-settings-for-account
    method: GET
    data_selector: archive_settings
- name: Set up archiving
  endpoint:
    path: /docs/logz/create-settings
    method: POST
    data_selector: setup_archiving
- name: Test archive settings
  endpoint:
    path: /docs/logz/test-settings
    method: POST
    data_selector: test_status
- name: Retrieve archive settings
  endpoint:
    path: /docs/logz/get-settings
    method: GET
    data_selector: archive_settings_by_id
- name: Update archive settings
  endpoint:
    path: /docs/logz/update-settings
    method: PUT
    data_selector: update_archiving
- name: Delete archive settings
  endpoint:
    path: /docs/logz/delete-settings
    method: DELETE
    data_selector: delete_archiving
- name: retrieve_all_restore_operations
  endpoint:
    path: /docs/logz/get-restore-requests-for-account-api
    method: GET
- name: initiate_restore_operation
  endpoint:
    path: /docs/logz/create-restore
    method: POST
- name: get_update_on_restore_operation
  endpoint:
    path: /docs/logz/get-restore-request-by-id-api
    method: GET
- name: delete_restore_operation
  endpoint:
    path: /docs/logz/abort-restore-request-api
    method: DELETE
- name: retrieve_all_restore_operations
  endpoint:
    path: /docs/logz/get-restore-requests-for-account-api
    method: GET
- name: initiate_restore_operation
  endpoint:
    path: /docs/logz/create-restore
    method: POST
- name: get_update_on_restore_operation
  endpoint:
    path: /docs/logz/get-restore-request-by-id-api
    method: GET
- name: delete_restore_operation
  endpoint:
    path: /docs/logz/abort-restore-request-api
    method: DELETE
- name: audit_trail
  endpoint:
    path: /audit-trail
    method: GET
- name: audit_trail
  endpoint:
    path: /audit_trail
    method: GET
- name: CloudTrail
  endpoint:
    path: /docs/logz/get-account-cloud-trails
    method: GET
- name: Create CloudTrail connector
  endpoint:
    path: /docs/logz/create-cloud-trail
    method: POST
- name: Retrieve CloudTrail connector by ID
  endpoint:
    path: /docs/logz/get-cloud-trail
    method: GET
- name: Update CloudTrail connector
  endpoint:
    path: /docs/logz/update-cloud-trail
    method: PUT
- name: Delete CloudTrail connector
  endpoint:
    path: /docs/logz/delete-cloud-trail
    method: DELETE
- name: CloudTrail resources
  endpoint:
    path: /get-account-cloud-trails
    method: GET
    data_selector: resources
- name: Create CloudTrail connector
  endpoint:
    path: /create-cloud-trail
    method: POST
    data_selector: result
- name: Retrieve CloudTrail connector by ID
  endpoint:
    path: /get-cloud-trail
    method: GET
    data_selector: connectorDetails
- name: Update CloudTrail connector
  endpoint:
    path: /update-cloud-trail
    method: PUT
    data_selector: result
- name: Delete CloudTrail connector
  endpoint:
    path: /delete-cloud-trail
    method: DELETE
    data_selector: result
- name: connected_s3_buckets
  endpoint:
    path: /docs/logz/get-s-3-buckets
    method: GET
- name: create_s3_bucket_connector
  endpoint:
    path: /docs/logz/create-buckets
    method: POST
- name: retrieve_s3_bucket_connector_by_id
  endpoint:
    path: /docs/logz/get-s-3-bucket
    method: GET
- name: update_s3_bucket_connector
  endpoint:
    path: /docs/logz/update-bucket
    method: PUT
- name: delete_s3_connector
  endpoint:
    path: /docs/logz/delete-bucket
    method: DELETE
- name: get_account_info_for_iam_role
  endpoint:
    path: /docs/logz/get-aws-assume-role-details
    method: GET
- name: S3 buckets
  endpoint:
    path: /docs/logz/get-s-3-buckets
    method: GET
- name: create S3 bucket connector
  endpoint:
    path: /docs/logz/create-buckets
    method: POST
- name: retrieve S3 bucket connector by ID
  endpoint:
    path: /docs/logz/get-s-3-bucket
    method: GET
- name: update S3 bucket connector
  endpoint:
    path: /docs/logz/update-bucket
    method: PUT
- name: delete S3 connector
  endpoint:
    path: /docs/logz/delete-bucket
    method: DELETE
- name: get account information for IAM Role
  endpoint:
    path: /docs/logz/get-aws-assume-role-details
    method: GET
- name: user
  endpoint:
    path: /user
    method: POST
    data_selector: user
- name: alert
  endpoint:
    path: /alert
    method: POST
    data_selector: alert
- name: notification_channel
  endpoint:
    path: /notification_channel
    method: POST
    data_selector: notification_channel
- name: regions
  endpoint:
    path: /regions
    method: GET
    data_selector: regions
- name: user_management
  endpoint:
    path: /user
    method: POST
    data_selector: user
- name: notification_channels
  endpoint:
    path: /notification
    method: POST
    data_selector: notification
- name: sub_accounts
  endpoint:
    path: /subaccount
    method: GET
    data_selector: subaccounts
- name: logs_based_alerts
  endpoint:
    path: /alert
    method: POST
    data_selector: alert
- name: log_shipping_tokens
  endpoint:
    path: /log_shipping_token
    method: GET
    data_selector: tokens
- name: drop_filters
  endpoint:
    path: /drop_filter
    method: DELETE
    data_selector: filters
- name: archive_logs
  endpoint:
    path: /archive_logs
    method: POST
    data_selector: archive
- name: restore_logs
  endpoint:
    path: /restore_logs
    method: POST
    data_selector: restore
- name: authentication_groups
  endpoint:
    path: /authentication_groups
    method: GET
    data_selector: groups
- name: open_search_dashboards_objects
  endpoint:
    path: /kibana_object
    method: GET
    data_selector: objects
- name: s3_fetcher
  endpoint:
    path: /s3_fetcher
    method: POST
    data_selector: fetcher
- name: grafana_dashboards
  endpoint:
    path: /grafana_dashboard
    method: POST
    data_selector: dashboards
- name: grafana_folders
  endpoint:
    path: /grafana_folder
    method: POST
    data_selector: folders
- name: grafana_alert_rules
  endpoint:
    path: /grafana_alert_rule
    method: POST
    data_selector: alert_rules
- name: grafana_contact_point
  endpoint:
    path: /grafana_contact_point
    method: POST
    data_selector: contact_points
- name: grafana_notification_policy
  endpoint:
    path: /grafana_notification_policy
    method: POST
    data_selector: notification_policy
- name: metrics_accounts
  endpoint:
    path: /metrics_account
    method: GET
    data_selector: metrics
- name: regions
  endpoint:
    path: /regions
    method: GET
notes:
- Compression is STRONGLY RECOMMENDED for 'Search' and 'Scroll' APIs, due to their
  potentially large response sizes.
- To ensure system performance and data availability, we've introduced some limitations
  to the original Elasticsearch specification.
- By default, your query runs on data sent today and yesterday, UTC.
- Searches without a timestamp filter will return the last 2 calendar days, UTC.
- Searches return up to 1,000 results per query for aggregated results, or 10,000
  results for non-aggregated results.
- Logz.io alerts use a Kibana search query to continuously scan your logs and alert
  you when a certain set of conditions is met.
- When alerts trigger, they write event logs.
- Event logs of triggered alerts are always available and searchable in Kibana.
- This endpoint requires permissions that must be set by our Support team.
- This endpoint requires permissions that must be set by our Support team. Please
  email help@logz.io for assistance.
- Must be run with an API token from the your main Logs account
- Logz.io support will need to enable SSO for your account.
- API tokens are account-specific.
- Keep your tokens secure as they carry privileges to make changes to users and accounts.
- API tokens are account-specific. You will need to be logged into the relevant Log
  Management or SIEM account to view the API tokens associated with it.
- Shared token endpoints require permissions that must be set by our Support team.
- Logs are archived before they are indexed and analyzed by Logz.io.
- Dropped logs will still be archived.
- If you are using drop filters, note that dropped logs will still be archived.
- Logs that are dropped by drop filters are still archived and can be restored.
- Logz.io cares about the security of our customers’ data. It’s our top priority.
- Grafana 8.5 is not compatible with Terraform provider version 1.17.0 or higher.
- Logz.io maintains clusters worldwide to host accounts in regions closest to users.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '200: successful query'
- '400: Bad request'
- '401: Unauthorized'
- Limitations on sorting and aggregations apply
- '401 Unauthorized: Recheck API token or permissions'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.logz.io
  auth:
    type: apiKey
    location: header
    header_name: X-API-TOKEN
  headers:
    Content-Type: application/json
    Accept: application/json
  paginator:
    type: offset
    default_page_size: 10
source_metadata: null
