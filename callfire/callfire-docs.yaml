resources:
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: response
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
- name: texts
  endpoint:
    path: /texts
    method: GET
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params:
      limit: 100
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: null
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: null
    params: {}
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: webhook
    params: {}
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: items
    params: {}
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params: {}
- name: send_calls
  endpoint:
    path: /v2/calls
    method: POST
    data_selector: items
    params:
      campaignId: 4050600003
      defaultVoice: MALE1
      fields: items(id,state,toNumber)
- name: find_calls
  endpoint:
    path: /v2/calls
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: create_broadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: items
- name: call_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: specific_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: GET
    data_selector: ''
    params: {}
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: null
    params: {}
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: result
    params: {}
- name: archive_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/archive
    method: POST
    data_selector: result
    params: {}
- name: add_batch
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: POST
    data_selector: result
    params: {}
- name: get_batches
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
      fields: items(name,status,size,remaining)
- name: call_broadcast_calls
  endpoint:
    path: /calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      id: '11646003'
      batchId: null
      offset: 0
      limit: 10
      fields: items(fromNumber,toNumber,state,modified)
- name: call_broadcast_recipients
  endpoint:
    path: /calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params:
      id: '11646003'
      body: null
- name: start_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params:
      id: '11646003'
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: body
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: body
    params: {}
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
- name: campaign_sound
  endpoint:
    path: /v2/campaigns/sounds/{id}.mp3
    method: GET
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: obj
    params: {}
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: webhook
    params: {}
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: items
    params: {}
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params:
      fields: totalCount
- name: send_calls
  endpoint:
    path: /v2/calls
    method: POST
    data_selector: items
    params:
      campaignId: 4050600003
      defaultVoice: MALE1
      fields: items(id,state,toNumber)
- name: find_calls
  endpoint:
    path: /v2/calls
    method: GET
    data_selector: items
    params:
      id:
      - 11646003
      - 12646003
      - 13776003
      campaignId: 4490600003
      batchId: 4470600003
      fromNumber: '12135551126'
      toNumber: '12136666123'
      label: my label
      states: READY,FINISHED,INVALID
      results: LA
      inbound: true
      intervalBegin: 1473781817000
      intervalEnd: 1473781817000
      offset: 0
      limit: 10
      fields: items(id,fromNumber,toNumber,modified,finalCallResult)
- name: create_call_broadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: id
- name: call_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: find_call_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: items
    params:
      name: broadcast name
      label: my label
      running: true
      offset: 0
      limit: 10
      fields: items(id,name,status,sounds)
- name: get_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: GET
    data_selector: broadcast
    params:
      fields: name,status,labels
- name: update_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: broadcast
    params:
      strictValidation: true
      answeringMachineConfig: AM_AND_LIVE
      fromNumber: '12132000384'
      resumeNextDay: true
- name: call_broadcasts
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: result
    params:
      id: '11646003'
- name: add_batch
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: POST
    data_selector: result
    params:
      id: '11646003'
- name: get_batches
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: GET
    data_selector: items
    params:
      id: '11646003'
      offset: 0
      limit: 10
      fields: items(name,status,size,remaining)
- name: call_broadcast_calls
  endpoint:
    path: /calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      id: integer required
      batchId: integer
      fields: string
      limit: integer
      offset: integer
- name: call_broadcast_recipients
  endpoint:
    path: /calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params:
      id: integer required
      body: list of ref
- name: start_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params:
      id: integer required
- name: get_call_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: null
    params:
      id: integer required
      fields: string
      begin: integer
      end: integer
- name: call_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: result
    params: {}
- name: stop_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/stop
    method: POST
    data_selector: ''
    params:
      id: integer required
- name: get_call_recording
  endpoint:
    path: /calls/recordings/{id}
    method: GET
    data_selector: ''
    params:
      id: integer required
      fields: string
- name: get_call_recordings
  endpoint:
    path: /calls/{id}/recordings
    method: GET
    data_selector: items
    params:
      id: integer required
      fields: string
- name: get_call
  endpoint:
    path: /calls/{id}
    method: GET
    data_selector: ''
    params:
      id: integer required
      fields: string
- name: contacts
  endpoint:
    path: /v2/contacts
    method: POST
    data_selector: items
- name: campaign_sounds
  endpoint:
    path: /v2/campaigns/sounds/{id}
    method: GET
    data_selector: ''
- name: call_recording
  endpoint:
    path: /calls/{id}/recordings/{name}.mp3
    method: GET
    data_selector: mp3 binary file response
    params:
      id: integer required
      name: string required
- name: campaign_batch
  endpoint:
    path: /campaigns/batches/{id}
    method: GET
    data_selector: batch details
    params:
      id: integer required
      fields: string
- name: find_sounds
  endpoint:
    path: /campaigns/sounds
    method: GET
    data_selector: items
    params:
      limit: integer
      offset: integer
      filter: string
      includeArchived: boolean
      includePending: boolean
      includeScrubbed: boolean
      fields: string
- name: add_sound_via_call
  endpoint:
    path: /campaigns/sounds/calls
    method: POST
    data_selector: id
    params:
      name: string
      toNumber: string
- name: add_sound_via_file
  endpoint:
    path: /campaigns/sounds/files
    method: POST
    data_selector: id
    params:
      name: string
      file: file required
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: dncs
  endpoint:
    path: /contacts/dncs
    method: GET
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: body
- name: delete_dnc
  endpoint:
    path: /contacts/dncs/sources/{source}
    method: DELETE
    params:
      source: My DNC List 1
- name: call_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: specific_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: GET
    data_selector: ''
    params:
      fields: name,status,labels
- name: send_calls
  endpoint:
    path: /v2/calls
    method: POST
    data_selector: items
    params:
      campaignId: 4050600003
      defaultVoice: MALE1
      fields: items(id,state,toNumber)
- name: find_calls
  endpoint:
    path: /v2/calls
    method: GET
    data_selector: items
    params:
      fields: items(id,fromNumber,toNumber,modified,finalCallResult)
      limit: 100
      offset: 0
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: items
    params: {}
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params: {}
- name: call_broadcasts
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: response
    params: {}
- name: add_batch
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: POST
    data_selector: response
    params: {}
- name: get_batches
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
      fields: items(name,status,size,remaining)
- name: call_broadcast_calls
  endpoint:
    path: /v2/calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      id: integer required
      offset: integer
      limit: integer
      fields: string
- name: add_call_broadcast_recipients
  endpoint:
    path: /v2/calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params:
      id: integer required
      body: list of ref
- name: start_voice_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params:
      id: integer required
- name: get_call_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    data_selector: null
    params:
      id: integer required
      begin: integer
      end: integer
      fields: string
- name: call_recording
  endpoint:
    path: /calls/{id}/recordings/{name}.mp3
    method: GET
    data_selector: mp3 binary file response
    params:
      id: integer required
      name: string required
- name: campaign_batch
  endpoint:
    path: /campaigns/batches/{id}
    method: GET
    data_selector: response containing batch details
    params:
      id: integer required
      fields: string
- name: find_sounds
  endpoint:
    path: /campaigns/sounds
    method: GET
    data_selector: items
    params:
      filter: string
      includeArchived: boolean
      includePending: boolean
      includeScrubbed: boolean
      offset: integer
      limit: integer
      fields: string
- name: add_sound_via_call
  endpoint:
    path: /campaigns/sounds/calls
    method: POST
    data_selector: id
    params:
      name: string
      toNumber: string
- name: add_sound_via_file
  endpoint:
    path: /campaigns/sounds/files
    method: POST
    data_selector: id
    params:
      name: string
      file: file required
- name: call_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    data_selector: records
    params:
      id: '11646003'
      begin: '1473781817000'
      end: '1473781817000'
      fields: totalOutboundCount,billedAmount,callsAttempted
- name: stop_voice_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}/stop
    method: POST
    data_selector: records
    params:
      id: '11646003'
- name: get_call_recording
  endpoint:
    path: /v2/calls/recordings/{id}
    method: GET
    data_selector: records
    params:
      id: '379506003'
      fields: callId,campaignId,lengthInBytes,mp3Url
- name: get_call_recording_mp3
  endpoint:
    path: /v2/calls/recordings/{id}.mp3
    method: GET
    data_selector: binary
    params:
      id: '379506003'
- name: get_call
  endpoint:
    path: /v2/calls/{id}
    method: GET
    data_selector: records
    params:
      id: '379506003'
      fields: fromNumber,toNumber,modified,finalCallResult
- name: get_call_recordings
  endpoint:
    path: /v2/calls/{id}/recordings
    method: GET
    data_selector: items
    params:
      id: '379506003'
      fields: items(callId,campaignId,lengthInBytes,mp3Url)
- name: get_call_recording_by_name
  endpoint:
    path: /v2/calls/{id}/recordings/{name}
    method: GET
    data_selector: records
    params:
      id: '379506003'
      name: call-recording1
      fields: callId,campaignId,lengthInBytes,mp3Url
- name: contacts
  endpoint:
    path: /v2/contacts
    method: POST
    data_selector: items
- name: campaign_sound
  endpoint:
    path: /v2/campaigns/sounds/{id}
    method: GET
- name: campaign_sound_data_mp3
  endpoint:
    path: /v2/campaigns/sounds/{id}.mp3
    method: GET
- name: campaign_sound_data_wav
  endpoint:
    path: /v2/campaigns/sounds/{id}.wav
    method: GET
- name: delete_dnc
  endpoint:
    path: /v2/contacts/dncs/sources/{source}
    method: DELETE
    params:
      source: my source
- name: find_universal_dnc
  endpoint:
    path: /v2/contacts/dncs/universals/{toNumber}
    method: GET
    params:
      toNumber: '12135551126'
      fromNumber: '12130021127'
      fields: toNumber,inboundCall,outboundCall
- name: webhooks
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
- name: contacts
  endpoint:
    path: /v2/contacts/dncs/{number}
    method: GET
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: dncs
  endpoint:
    path: /contacts/dncs
    method: GET
    data_selector: items
    params:
      prefix: '1424'
      call: true
      text: true
      offset: 0
      limit: 10
- name: calls
  endpoint:
    path: /calls
    method: GET
    data_selector: items
    params: {}
- name: call_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: body
    params: {}
- name: call_broadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: GET
    data_selector: items
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: items
    params: {}
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params:
      limit: '50'
- name: call_broadcast_calls
  endpoint:
    path: /calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      id: integer
      batchId: integer
      offset: integer
      limit: integer
      fields: string
- name: call_broadcast_recipients
  endpoint:
    path: /calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
- name: start_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/start
    method: POST
- name: get_call_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: stats
    params:
      id: integer
      fields: string
      begin: integer
      end: integer
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: response
    params: {}
- name: archive_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/archive
    method: POST
    data_selector: response
    params: {}
- name: add_batch
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: POST
    data_selector: response
    params: {}
- name: get_batches
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: call_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: stats
    params: {}
- name: stop_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/stop
    method: POST
    data_selector: response
    params: {}
- name: get_call_recording
  endpoint:
    path: /calls/recordings/{id}
    method: GET
    data_selector: recording
    params: {}
- name: get_call_recording_mp3
  endpoint:
    path: /calls/recordings/{id}.mp3
    method: GET
    data_selector: mp3
    params: {}
- name: get_call
  endpoint:
    path: /calls/{id}
    method: GET
    data_selector: call
    params: {}
- name: get_call_recordings
  endpoint:
    path: /calls/{id}/recordings
    method: GET
    data_selector: items
    params: {}
- name: get_call_recording_by_name
  endpoint:
    path: /calls/{id}/recordings/{name}
    method: GET
    data_selector: recording
    params: {}
- name: campaign_sound_tts
  endpoint:
    path: /v2/campaigns/sounds/tts
    method: POST
    data_selector: response
    params: {}
- name: campaign_sound
  endpoint:
    path: /v2/campaigns/sounds/{id}
    method: GET
    data_selector: campaignSound
    params:
      id: integer required
- name: create_contacts
  endpoint:
    path: /v2/contacts
    method: POST
    data_selector: items
    params: {}
- name: call_recording
  endpoint:
    path: /calls/{id}/recordings/{name}.mp3
    method: GET
    data_selector: mp3 binary file response
    params: {}
- name: campaign_batch
  endpoint:
    path: /campaigns/batches/{id}
    method: GET
    data_selector: Batch
    params: {}
- name: campaign_sounds
  endpoint:
    path: /campaigns/sounds
    method: GET
    data_selector: items
    params: {}
- name: add_sound_via_call
  endpoint:
    path: /campaigns/sounds/calls
    method: POST
    data_selector: ResourceId
    params: {}
- name: add_sound_via_file
  endpoint:
    path: /campaigns/sounds/files
    method: POST
    data_selector: CampaignSound
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: dncs
  endpoint:
    path: /contacts/dncs
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: response
    params: {}
- name: contact_list_item
  endpoint:
    path: /v2/contacts/lists/{id}/items/{contactId}
    method: DELETE
    data_selector: response
    params: {}
- name: delete_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: GET
    data_selector: ''
    params: {}
- name: update_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: PUT
    data_selector: ''
    params: {}
- name: create_contact_lists
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: ''
    params: {}
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: items
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params:
      limit: '50'
      offset: '200'
- name: calls
  endpoint:
    path: /v2/calls
    method: GET
    data_selector: items
    params:
      fields: items(id,fromNumber,toNumber,modified,finalCallResult)
- name: broadcasts
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: body
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: response
    params:
      id: '11646003'
- name: add_batch
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: POST
    data_selector: response
    params:
      id: '11646003'
- name: get_batches
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: GET
    data_selector: items
    params:
      id: '11646003'
      offset: 0
      limit: 100
      fields: items(name,status,size,remaining)
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: items
    params: {}
- name: create_call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: id
    params: {}
- name: find_call_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: items
    params: {}
- name: get_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: GET
    data_selector: ''
    params:
      id: integer
- name: update_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: ''
    params:
      id: integer
- name: call_broadcasts
  endpoint:
    path: /calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      id: integer required
      batchId: integer
      fields: string
      limit: integer
      offset: integer
- name: add_recipients
  endpoint:
    path: /calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params:
      id: integer required
      body: list of Recipient
- name: start_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/start
    method: POST
    data_selector: ''
    params:
      id: integer required
- name: get_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: ''
    params:
      id: integer required
      fields: string
      begin: integer
      end: integer
- name: contacts
  endpoint:
    path: /v2/contacts
    method: POST
    data_selector: items
- name: campaign_sounds
  endpoint:
    path: /v2/campaigns/sounds/{id}
    method: GET
    data_selector: campaignSound
- name: tts_campaign_sound
  endpoint:
    path: /v2/campaigns/sounds/tts
    method: POST
    data_selector: response
- name: call_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    data_selector: result
    params:
      begin: '1473781817000'
      end: '1473781817000'
      fields: totalOutboundCount,billedAmount,callsAttempted
- name: stop_voice_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}/stop
    method: POST
    params:
      id: integer
- name: get_call_recording
  endpoint:
    path: /v2/calls/recordings/{id}
    method: GET
    params:
      id: integer
      fields: string
- name: get_call_recording_mp3
  endpoint:
    path: /v2/calls/recordings/{id}.mp3
    method: GET
    params:
      id: integer
- name: get_call
  endpoint:
    path: /v2/calls/{id}
    method: GET
    params:
      id: integer
      fields: string
- name: get_call_recordings
  endpoint:
    path: /v2/calls/{id}/recordings
    method: GET
    params:
      id: integer
      fields: string
- name: get_call_recording_by_name
  endpoint:
    path: /v2/calls/{id}/recordings/{name}
    method: GET
    params:
      id: integer
      name: string
      fields: string
- name: call_recording
  endpoint:
    path: /calls/{id}/recordings/{name}.mp3
    method: GET
    data_selector: mp3 binary file response
    params:
      id: integer required
      name: string required
- name: campaign_batch
  endpoint:
    path: /campaigns/batches/{id}
    method: GET
    data_selector: Batch
    params:
      id: integer required
      fields: string
- name: find_sounds
  endpoint:
    path: /campaigns/sounds
    method: GET
    data_selector: items
    params:
      filter: string
      includeArchived: boolean
      includePending: boolean
      includeScrubbed: boolean
      offset: integer
      limit: integer
      fields: string
- name: add_sound_via_call
  endpoint:
    path: /campaigns/sounds/calls
    method: POST
    data_selector: ResourceId
    params:
      name: string
      toNumber: string
- name: add_sound_via_file
  endpoint:
    path: /campaigns/sounds/files
    method: POST
    data_selector: CampaignSound
    params:
      fields: string
      file: file required
      name: string
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: items
- name: dncs
  endpoint:
    path: /contacts/dncs
    method: GET
    data_selector: items
- name: contact_lists
  endpoint:
    path: /contacts/lists
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
      fields: id,name,size
- name: create_contact_list
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: id
    params: {}
- name: get_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: GET
    data_selector: items
    params:
      fields: id,name,size,created
- name: update_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: PUT
    data_selector: id
    params: {}
- name: delete_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: contacts_dnc_sources
  endpoint:
    path: /contacts/dncs/sources/{source}
    method: DELETE
    data_selector: result
    params:
      source: my source
- name: universal_do_not_contacts
  endpoint:
    path: /contacts/dncs/universals/{toNumber}
    method: GET
    data_selector: items
    params:
      toNumber: '12135551126'
      fromNumber: '12130021127'
      fields: toNumber,inboundCall,outboundCall
- name: do_not_contact
  endpoint:
    path: /contacts/dncs/{number}
    method: GET
    data_selector: number
    params:
      number: '12135551126'
- name: create_contact_lists
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: id
    params:
      name: My Contact List
      contacts:
      - firstName: Alice
        lastName: Moore
        homePhone: '12135551126'
      - firstName: Bob
        lastName: Smith
        homePhone: '12135551127'
        properties:
          age: 30
- name: add_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: POST
- name: get_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: GET
- name: remove_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: DELETE
- name: remove_contact_list_item
  endpoint:
    path: /contacts/lists/{id}/items/{contactId}
    method: DELETE
- name: contact
  endpoint:
    path: /contacts
    method: DELETE
    params:
      id: 11646003
      contactId: 22277003
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: response
    params: {}
- name: contact_list
  endpoint:
    path: /v2/contacts/lists/{id}/items
    method: GET
    data_selector: items
    params:
      offset: '0'
      limit: '10'
      fields: items(firstName,lastName,workPhone)
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: body
- name: contact
  endpoint:
    path: /v2/contacts/lists/{id}/items
    method: DELETE
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: items
    params: {}
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params:
      limit: '50'
      offset: '200'
- name: calls
  endpoint:
    path: /v2/calls
    method: GET
    data_selector: items
    params: {}
- name: broadcasts
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: body
    params: {}
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: none
    params: {}
- name: archive_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/archive
    method: POST
    data_selector: none
    params: {}
- name: add_batch
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: POST
    data_selector: none
    params: {}
- name: get_batches
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
      fields: items(name,status,size,remaining)
- name: call_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: create_call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: null
    params: {}
- name: find_call_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: items
    params:
      fields: id,name,status,sounds
- name: get_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: GET
    data_selector: null
    params: {}
- name: update_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: null
    params: {}
- name: call_broadcast_calls
  endpoint:
    path: /calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      id: integer required
      batchId: integer
      offset: integer
      limit: integer
      fields: string
- name: call_broadcast_recipients
  endpoint:
    path: /calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params:
      id: integer required
      body: list of Recipient
- name: start_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params:
      id: integer required
- name: get_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: null
    params:
      id: integer required
      fields: string
      begin: integer
      end: integer
- name: campaign_sound
  endpoint:
    path: /v2/campaigns/sounds
    method: POST
- name: contacts
  endpoint:
    path: /v2/contacts
    method: POST
- name: call_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stop
    method: POST
    data_selector: response
    params:
      id: integer
- name: call_recording
  endpoint:
    path: /v2/calls/recordings/{id}
    method: GET
    data_selector: response
    params:
      id: integer
      fields: string
- name: get_call_recordings
  endpoint:
    path: /v2/calls/{id}/recordings
    method: GET
    data_selector: items
    params:
      id: integer
      fields: string
- name: get_call_recording_by_name
  endpoint:
    path: /v2/calls/{id}/recordings/{name}
    method: GET
    data_selector: response
    params:
      id: integer
      name: string
      fields: string
- name: call_recording
  endpoint:
    path: /calls/{id}/recordings/{name}.mp3
    method: GET
    data_selector: mp3 binary file response
    params:
      id: integer required
      name: string required
- name: campaign_batch
  endpoint:
    path: /campaigns/batches/{id}
    method: GET
    data_selector: Batch
    params:
      id: integer required
      fields: string
- name: find_sounds
  endpoint:
    path: /campaigns/sounds
    method: GET
    data_selector: items
    params:
      limit: integer
      offset: integer
      filter: string
      includeArchived: boolean
      includePending: boolean
      includeScrubbed: boolean
      fields: string
- name: add_sound_via_call
  endpoint:
    path: /campaigns/sounds/calls
    method: POST
    data_selector: ResourceId
    params:
      name: string
      toNumber: string
- name: add_sound_via_file
  endpoint:
    path: /campaigns/sounds/files
    method: POST
    data_selector: ResourceId
    params:
      fields: string
      file: file required
      name: string
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: items
- name: dncs
  endpoint:
    path: /contacts/dncs
    method: GET
    data_selector: items
- name: delete_dnc_numbers
  endpoint:
    path: /contacts/dncs/{number}
    method: DELETE
    data_selector: 'null'
    params: {}
- name: get_universal_dnc
  endpoint:
    path: /contacts/dncs/universals/{toNumber}
    method: GET
    data_selector: items
    params: {}
- name: get_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: GET
    data_selector: 'null'
    params: {}
- name: update_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: PUT
    data_selector: 'null'
    params: {}
- name: create_contact_list
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: 'null'
    params: {}
- name: add_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: POST
    data_selector: response
    params: {}
- name: get_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: GET
    data_selector: items
    params:
      offset: 0
      limit: 100
- name: remove_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: DELETE
    data_selector: response
    params: {}
- name: contact_lists
  endpoint:
    path: /contacts/lists
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: create_contact_list
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: id
    params: {}
- name: get_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: GET
    data_selector: id
    params:
      fields: id,name,size,created
- name: update_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: contact_list_item
  endpoint:
    path: /v2/contacts/lists/{id}/items/{contactId}
    method: DELETE
    data_selector: null
    params:
      id: integer required
      contactId: integer required
- name: calls
  endpoint:
    path: /v2/calls
    method: GET
    data_selector: items
    params: {}
- name: calls_broadcasts
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: body
    params: {}
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: id
    params: {}
- name: find_call_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: items
    params: {}
- name: get_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: GET
    data_selector: ''
    params: {}
- name: update_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: response
    params: {}
- name: add_batch
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: POST
    data_selector: response
    params: {}
- name: get_batches
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: GET
    data_selector: items
    params:
      offset: 0
      limit: 100
      fields: items(name,status,size,remaining)
- name: call_broadcast_calls
  endpoint:
    path: /calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      id: integer required
      batchId: integer
      offset: integer
      limit: integer
      fields: string
- name: add_call_broadcast_recipients
  endpoint:
    path: /calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params:
      id: integer required
      body: list of Recipient
- name: start_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params:
      id: integer required
- name: get_call_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: null
    params:
      id: integer required
      fields: string
      begin: integer
      end: integer
- name: call_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    data_selector: result
    params:
      begin: '1473781817000'
      end: '1473781817000'
      fields: totalOutboundCount,billedAmount,callsAttempted
- name: call_recording
  endpoint:
    path: /v2/calls/recordings/{id}
    method: GET
    data_selector: result
    params:
      fields: callId,campaignId,lengthInBytes,mp3Url
- name: call_recording_mp3
  endpoint:
    path: /v2/calls/recordings/{id}.mp3
    method: GET
    data_selector: result
- name: call_recording_by_name
  endpoint:
    path: /v2/calls/{id}/recordings/{name}
    method: GET
    data_selector: result
    params:
      fields: callId,campaignId,lengthInBytes,mp3Url
- name: campaign_sounds
  endpoint:
    path: /v2/campaigns/sounds
    method: POST
    data_selector: items
- name: contacts
  endpoint:
    path: /v2/contacts
    method: POST
    data_selector: items
- name: call_recording
  endpoint:
    path: /calls/{id}/recordings/{name}.mp3
    method: GET
    data_selector: mp3 binary file response
    params:
      id: integer required
      name: string required
- name: campaign_batch
  endpoint:
    path: /campaigns/batches/{id}
    method: GET
    data_selector: batch instance
    params:
      id: integer required
      fields: string
- name: find_sounds
  endpoint:
    path: /campaigns/sounds
    method: GET
    data_selector: items
    params:
      filter: string
      includeArchived: boolean
      includePending: boolean
      includeScrubbed: boolean
      offset: integer
      limit: integer
      fields: string
- name: add_sound_via_call
  endpoint:
    path: /campaigns/sounds/calls
    method: POST
    data_selector: id
    params:
      name: string
      toNumber: string
- name: add_sound_via_file
  endpoint:
    path: /campaigns/sounds/files
    method: POST
    data_selector: id
    params:
      name: string
      file: file required
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: dncs
  endpoint:
    path: /v2/contacts/dncs
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: delete_dnc_numbers
  endpoint:
    path: /contacts/dncs/{number}
    method: DELETE
    data_selector: ''
- name: get_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: GET
    data_selector: ''
- name: update_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: PUT
    data_selector: ''
- name: create_contact_lists
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: ''
- name: contact_lists
  endpoint:
    path: /contacts/lists
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: create_contact_list
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: id
    params: {}
- name: get_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: GET
    data_selector: ''
    params: {}
- name: update_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: delete_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: remove_contact_list_item
  endpoint:
    path: /contacts/removeContactListItem
    method: POST
    data_selector: result
    params:
      id: 11646003
      contactId: 22277003
- name: get_contact
  endpoint:
    path: /contacts/{contactId}
    method: GET
    data_selector: Contact
    params: {}
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: response
    params: {}
- name: add_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: POST
- name: get_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: GET
- name: remove_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: DELETE
- name: remove_contact_list_item
  endpoint:
    path: /contacts/lists/{id}/items/{contactId}
    method: DELETE
- name: webhook
  endpoint:
    path: /v2/webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: response
    params: {}
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: webhook
    params: {}
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: items
    params: {}
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params: {}
- name: call_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: specific_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: GET
    data_selector: ''
    params: {}
- name: send_calls
  endpoint:
    path: /v2/calls
    method: POST
    data_selector: items
    params:
      campaignId: 4050600003
      defaultVoice: MALE1
      fields: items(id,state,toNumber)
- name: find_calls
  endpoint:
    path: /v2/calls
    method: GET
    data_selector: items
    params:
      id:
      - 11646003
      - 12646003
      - 13776003
      campaignId: 4490600003
      batchId: 4470600003
      fromNumber: '12135551126'
      toNumber: '12136666123'
      label: my label
      states: READY,FINISHED,INVALID
      results: LA
      inbound: true
      intervalBegin: 1473781817000
      intervalEnd: 1473781817000
      offset: 0
      limit: 10
      fields: items(id,fromNumber,toNumber,modified,finalCallResult)
- name: call_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    data_selector: result
    params: {}
- name: stop_voice_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}/stop
    method: POST
    data_selector: result
    params: {}
- name: get_call_recording
  endpoint:
    path: /v2/calls/recordings/{id}
    method: GET
    data_selector: result
    params: {}
- name: get_call_recordings
  endpoint:
    path: /v2/calls/{id}/recordings
    method: GET
    data_selector: items
    params: {}
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: broadcast
    params:
      id: '11646003'
- name: archive_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/archive
    method: POST
    data_selector: archive_response
    params:
      id: '11646003'
- name: add_batch
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: POST
    data_selector: batch_response
    params:
      id: '11646003'
- name: get_batches
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: GET
    data_selector: items
    params:
      id: '11646003'
      offset: 0
      limit: 10
      fields: items(name,status,size,remaining)
- name: call_broadcast_calls
  endpoint:
    path: /calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      id: integer required
      offset: integer
      limit: integer
      fields: string
- name: call_broadcast_recipients
  endpoint:
    path: /calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params:
      id: integer required
      body: list of ref
- name: start_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params:
      id: integer required
- name: get_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: null
    params:
      id: integer required
      begin: integer
      end: integer
      fields: string
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: dncs
  endpoint:
    path: /contacts/dncs
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: call_recording
  endpoint:
    path: /calls/{id}/recordings/{name}.mp3
    method: GET
    data_selector: mp3 binary file response
    params:
      id: integer required
      name: string required
- name: campaign_batch
  endpoint:
    path: /campaigns/batches/{id}
    method: GET
    data_selector: batch details
    params:
      id: integer required
      fields: string
- name: campaign_sounds
  endpoint:
    path: /campaigns/sounds
    method: GET
    data_selector: list of sounds
    params:
      filter: string
      includeArchived: boolean
      includePending: boolean
      includeScrubbed: boolean
      offset: integer
      limit: integer
      fields: string
- name: contacts
  endpoint:
    path: /v2/contacts
    method: POST
    data_selector: items
- name: campaign_sounds_tts
  endpoint:
    path: /v2/campaigns/sounds/tts
    method: POST
    data_selector: ''
- name: campaign_sounds
  endpoint:
    path: /v2/campaigns/sounds/{id}
    method: GET
    data_selector: ''
- name: campaign_sound_mp3
  endpoint:
    path: /v2/campaigns/sounds/{id}.mp3
    method: GET
    data_selector: ''
- name: campaign_sound_wav
  endpoint:
    path: /v2/campaigns/sounds/{id}.wav
    method: GET
    data_selector: ''
- name: delete_dnc
  endpoint:
    path: /v2/contacts/dncs/{number}
    method: DELETE
    data_selector: null
    params: {}
- name: get_dnc
  endpoint:
    path: /v2/contacts/dncs/{number}
    method: GET
    data_selector: null
    params: {}
- name: update_dnc
  endpoint:
    path: /v2/contacts/dncs/{number}
    method: PUT
    data_selector: null
    params: {}
- name: create_contact_list
  endpoint:
    path: /v2/contacts/lists
    method: POST
    data_selector: null
    params: {}
- name: add_contact_list_items
  endpoint:
    path: /v2/contacts/lists/{id}/items
    method: POST
- name: get_contact_list_items
  endpoint:
    path: /v2/contacts/lists/{id}/items
    method: GET
- name: remove_contact_list_items
  endpoint:
    path: /v2/contacts/lists/{id}/items
    method: DELETE
- name: remove_contact_list_item
  endpoint:
    path: /v2/contacts/lists/{id}/items/{contactId}
    method: DELETE
- name: contact_lists
  endpoint:
    path: /contacts/lists
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: create_contact_list
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: id
- name: upload_contact_list
  endpoint:
    path: /contacts/lists/upload
    method: POST
    data_selector: id
- name: get_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: GET
    data_selector: ''
    params:
      fields: id,name,size,created
- name: delete_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: DELETE
    data_selector: ''
- name: update_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: PUT
    data_selector: ''
- name: contact
  endpoint:
    path: /v2/contacts/{id}
    method: GET
    data_selector: contacts
    params: {}
- name: keyword
  endpoint:
    path: /v2/keywords
    method: GET
    data_selector: items
    params: {}
- name: keyword_leases
  endpoint:
    path: /v2/keywords/leases
    method: GET
    data_selector: items
    params:
      offset: '0'
      limit: '10'
      fields: items(keyword,leaseBegin,leaseEnd)
- name: account_details
  endpoint:
    path: /v2/me/account
    method: GET
    data_selector: account
    params: {}
- name: api_credentials
  endpoint:
    path: /me/api/credentials
    method: GET
    data_selector: items
    params: {}
- name: credit_usage
  endpoint:
    path: /me/billing/credit-usage
    method: GET
    data_selector: ''
    params: {}
- name: billing_plan_usage
  endpoint:
    path: /me/billing/plan-usage
    method: GET
    data_selector: ''
    params: {}
- name: caller_ids
  endpoint:
    path: /me/callerids
    method: GET
    data_selector: items
    params: {}
- name: verify_caller_id
  endpoint:
    path: /v2/me/callerids/{callerid}/verification-code
    method: POST
    data_selector: result
    params:
      callerid: string required
      verificationCode: string
- name: create_media
  endpoint:
    path: /v2/media
    method: POST
    data_selector: result
    params:
      file: file required
      name: string
- name: find_media
  endpoint:
    path: /v2/media
    method: GET
    data_selector: items
    params:
      filter: string
      limit: integer
      offset: integer
- name: get_media
  endpoint:
    path: /v2/media/{id}
    method: GET
    data_selector: result
    params:
      id: integer required
      fields: string
- name: get_media_data
  endpoint:
    path: /v2/media/{id}.{extension}
    method: GET
    data_selector: binary file response
    params:
      id: integer required
      extension: string required
- name: media_file
  endpoint:
    path: /media/{id}/file
    method: GET
    data_selector: ''
    params:
      id: integer
- name: number_leases
  endpoint:
    path: /numbers/leases
    method: GET
    data_selector: items
    params:
      limit: integer
      offset: integer
      prefix: string
      city: string
      state: string
      zipcode: string
      labelName: string
      fields: string
- name: number_lease_configs
  endpoint:
    path: /numbers/leases/configs
    method: GET
    data_selector: items
    params:
      limit: integer
      offset: integer
      prefix: string
      city: string
      state: string
      zipcode: string
      labelName: string
      fields: string
- name: specific_lease_config
  endpoint:
    path: /numbers/leases/configs/{number}
    method: GET
    data_selector: ''
    params:
      number: string
      fields: string
- name: update_lease_config
  endpoint:
    path: /numbers/leases/configs/{number}
    method: PUT
    data_selector: ''
    params:
      number: string
      body: ref
- name: number_lease_config
  endpoint:
    path: /v2/numbers/leases/configs/{number}
    method: PUT
    data_selector: numberLeaseConfig
    params:
      configType: TRACKING
      callTrackingConfig:
        screen: false
        recorded: true
        voicemail: true
        introSoundId: 10004001
        whisperSoundId: 10005002
        voicemailSoundId: 10006003
        failedTransferSoundId: 10007004
        transferNumbers:
        - '12135551122'
        - '12135551189'
        weeklySchedule:
          startTimeOfDay:
            hour: 10
            minute: 0
            second: 0
          stopTimeOfDay:
            hour: 18
            minute: 0
            second: 0
          daysOfWeek:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          timeZone: America/New_York
        googleAnalytics:
          domain: domain - name
          googleAccountId: UA-XXXXX-2X
          category: Sales
- name: number_lease
  endpoint:
    path: /v2/numbers/leases/{number}
    method: PUT
    data_selector: response
    params: {}
- name: find_numbers_local
  endpoint:
    path: /v2/numbers/local
    method: GET
    data_selector: items
    params:
      limit: 100
- name: find_number_regions
  endpoint:
    path: /v2/numbers/regions
    method: GET
    data_selector: items
    params:
      limit: 100
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: response
    params: {}
- name: tollfree_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: obj
    params:
      limit: 100
      fields: number
- name: orders
  endpoint:
    path: /v2/orders
    method: GET
    data_selector: obj
    params:
      limit: 100
      offset: 0
      fields: ''
- name: webhook
  endpoint:
    path: /{id}
    method: PUT
    data_selector: body
    params:
      id: integer required
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: obj
    params: {}
- name: media
  endpoint:
    path: /media/{id}/file
    method: GET
    data_selector: obj
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: items
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: webhook
    params:
      id: integer
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: response
    params: {}
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: items
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params:
      limit: 100
- name: calls
  endpoint:
    path: /v2/calls
    method: POST
    data_selector: items
    params: {}
- name: find_calls
  endpoint:
    path: /v2/calls
    method: GET
    data_selector: items
    params:
      fields: items(id,fromNumber,toNumber,modified,finalCallResult)
- name: create_call_broadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: callBroadcast
    params: {}
- name: call_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: items
- name: create_call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: null
- name: find_call_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: null
- name: get_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: GET
    data_selector: null
- name: update_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: null
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: result
- name: batches
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: GET
    data_selector: items
- name: call_broadcast_calls
  endpoint:
    path: /v2/calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      id: 11646003
      offset: 0
      limit: 10
      fields: items(fromNumber,toNumber,state,modified)
- name: call_broadcast_recipients
  endpoint:
    path: /v2/calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params:
      id: 11646003
- name: start_voice_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}/start
    method: POST
    params:
      id: 11646003
- name: get_call_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    params:
      id: 11646003
      fields: totalOutboundCount,billedAmount,callsAttempted
- name: call_recording
  endpoint:
    path: /calls/{id}/recordings/{name}.mp3
    method: GET
    data_selector: mp3 binary file response
    params:
      id: integer required
      name: string required
- name: batch
  endpoint:
    path: /campaigns/batches/{id}
    method: GET
    data_selector: Batch
    params:
      id: integer required
      fields: string
- name: campaign_sounds
  endpoint:
    path: /campaigns/sounds
    method: GET
    data_selector: items
    params:
      filter: string
      includeArchived: boolean
      includePending: boolean
      includeScrubbed: boolean
      offset: integer
      limit: integer
      fields: string
- name: add_sound_via_call
  endpoint:
    path: /campaigns/sounds/calls
    method: POST
    data_selector: id
    params:
      name: string
      toNumber: string
- name: add_sound_via_file
  endpoint:
    path: /campaigns/sounds/files
    method: POST
    data_selector: id
    params:
      name: string
      file: file required
- name: call_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: records
    params:
      id: integer required
      begin: integer
      end: integer
      fields: string
- name: stop_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/stop
    method: POST
    data_selector: null
    params:
      id: integer required
- name: get_call_recording
  endpoint:
    path: /calls/recordings/{id}
    method: GET
    data_selector: null
    params:
      id: integer required
      fields: string
- name: get_call_recording_mp3
  endpoint:
    path: /calls/recordings/{id}.mp3
    method: GET
    data_selector: null
    params:
      id: integer required
- name: get_call
  endpoint:
    path: /calls/{id}
    method: GET
    data_selector: null
    params:
      id: integer required
      fields: string
- name: get_call_recordings
  endpoint:
    path: /calls/{id}/recordings
    method: GET
    data_selector: items
    params:
      id: integer required
      fields: string
- name: get_call_recording_by_name
  endpoint:
    path: /calls/{id}/recordings/{name}
    method: GET
    data_selector: null
    params:
      id: integer required
      name: string required
      fields: string
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: dncs
  endpoint:
    path: /contacts/dncs
    method: GET
- name: campaign_sound
  endpoint:
    path: /v2/campaigns/sounds
    method: POST
    data_selector: items
    params: {}
- name: text_to_speech
  endpoint:
    path: /v2/campaigns/sounds/tts
    method: POST
    data_selector: id
    params: {}
- name: get_campaign_sound
  endpoint:
    path: /v2/campaigns/sounds/{id}
    method: GET
    data_selector: ''
    params: {}
- name: delete_campaign_sound
  endpoint:
    path: /v2/campaigns/sounds/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_campaign_sound_data_mp3
  endpoint:
    path: /v2/campaigns/sounds/{id}.mp3
    method: GET
    data_selector: ''
    params: {}
- name: get_campaign_sound_data_wav
  endpoint:
    path: /v2/campaigns/sounds/{id}.wav
    method: GET
    data_selector: ''
    params: {}
- name: create_contacts
  endpoint:
    path: /v2/contacts
    method: POST
    data_selector: items
    params: {}
- name: delete_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: DELETE
    data_selector: response
    params: {}
- name: get_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: GET
    data_selector: response
    params: {}
- name: update_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: PUT
    data_selector: response
    params: {}
- name: create_contact_list
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: response
    params: {}
- name: contact_lists
  endpoint:
    path: /contacts/lists
    method: GET
    data_selector: items
    params:
      offset: 0
      limit: 100
- name: create_contact_list
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: id
- name: get_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: GET
    data_selector: items
- name: update_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: PUT
    data_selector: id
- name: delete_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: DELETE
- name: contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: POST
    data_selector: contacts
    params: {}
- name: get_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: GET
    data_selector: items
    params:
      offset: 0
      limit: 100
- name: delete_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: DELETE
    data_selector: ''
    params: {}
- name: delete_contact_list_item
  endpoint:
    path: /contacts/lists/{id}/items/{contactId}
    method: DELETE
    data_selector: ''
    params: {}
- name: contacts
  endpoint:
    path: /contacts/{id}
    method: GET
    data_selector: contact
    params:
      fields: firstName,lastName,workPhone
- name: keyword_leases
  endpoint:
    path: /keywords/leases
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: keyword_leases
  endpoint:
    path: /keywords/leases
    method: GET
    data_selector: items
    params:
      offset: 0
      limit: 10
      fields: items(keyword,leaseBegin,leaseEnd)
- name: keyword_config
  endpoint:
    path: /keywords/leases/configs
    method: GET
    data_selector: KeywordConfig
    params:
      limit: 100
      offset: 0
- name: account_details
  endpoint:
    path: /me/account
    method: GET
    data_selector: Account
- name: api_credentials
  endpoint:
    path: /me/api/credentials
    method: GET
    data_selector: ApiCredential
- name: api_credentials
  endpoint:
    path: /me/api/credentials
    method: GET
    data_selector: items
    params: {}
- name: credit_usage
  endpoint:
    path: /me/billing/credit-usage
    method: GET
    data_selector: creditsUsed
    params:
      intervalBegin: '2145905600000'
      intervalEnd: '2145945600000'
- name: billing_plan_usage
  endpoint:
    path: /me/billing/plan-usage
    method: GET
    data_selector: totalRemainingCredits
    params: {}
- name: caller_ids
  endpoint:
    path: /me/callerids
    method: GET
    data_selector: items
    params: {}
- name: send_verification_code
  endpoint:
    path: /me/callerids/{callerid}
    method: POST
    data_selector: null
    params: {}
- name: caller_id_verification
  endpoint:
    path: /me/callerids/{callerid}/verification-code
    method: POST
    data_selector: response
    params:
      callerid: string required
      verificationCode: string
- name: create_media
  endpoint:
    path: /media
    method: POST
    data_selector: response
    params:
      name: string
      file: file required
- name: find_media
  endpoint:
    path: /media
    method: GET
    data_selector: items
    params:
      filter: string
      limit: integer
      offset: integer
- name: get_media
  endpoint:
    path: /media/{id}
    method: GET
    data_selector: response
    params:
      id: integer required
      fields: string
- name: number_config
  endpoint:
    path: /v2/numbers/leases/configs/{number}
    method: PUT
    data_selector: callTrackingConfig
    params:
      configType: TRACKING
- name: media
  endpoint:
    path: /media/{id}/file
    method: GET
    data_selector: binary response
- name: number_leases
  endpoint:
    path: /numbers/leases
    method: GET
    data_selector: items
    params:
      limit: '100'
      offset: '0'
- name: number_lease_configs
  endpoint:
    path: /numbers/leases/configs
    method: GET
    data_selector: items
    params:
      limit: '100'
      offset: '0'
- name: specific_lease_config
  endpoint:
    path: /numbers/leases/configs/{number}
    method: GET
    data_selector: numberConfig
- name: update_lease_config
  endpoint:
    path: /numbers/leases/configs/{number}
    method: PUT
- name: number_lease
  endpoint:
    path: /v2/numbers/leases/{number}
    method: GET
    data_selector: records
- name: local_numbers
  endpoint:
    path: /v2/numbers/local
    method: GET
    data_selector: items
- name: number_regions
  endpoint:
    path: /v2/numbers/regions
    method: GET
    data_selector: items
- name: tollfree_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: items
- name: webhooks
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: response
    params: {}
- name: tollfree_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: obj
    params:
      limit: 10
      fields: number
- name: orders
  endpoint:
    path: /v2/orders
    method: GET
    data_selector: obj
    params:
      limit: 100
      offset: 0
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: response
    params: {}
- name: text_auto_reply
  endpoint:
    path: /v2/texts/auto-replys
    method: GET
    data_selector: items
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: id
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: obj
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: webhook
    params: {}
- name: calls
  endpoint:
    path: /v2/calls
    method: GET
    data_selector: items
- name: call_broadcasts
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: items
    params: {}
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params: {}
- name: call_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: create_call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: ''
    params: {}
- name: find_call_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: items
    params:
      fields: id,name,status,sounds
- name: get_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: GET
    data_selector: ''
    params:
      fields: name,status,labels
- name: update_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: response
    params: {}
- name: add_batch
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: POST
    data_selector: response
    params: {}
- name: get_batches
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: call_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stop
    method: POST
    data_selector: response
    params:
      id: integer required
- name: call_recording
  endpoint:
    path: /calls/recordings/{id}
    method: GET
    data_selector: recording
    params:
      id: integer required
      fields: string
- name: get_call_recordings
  endpoint:
    path: /calls/{id}/recordings
    method: GET
    data_selector: items
    params:
      id: integer required
      fields: string
- name: call_broadcast_calls
  endpoint:
    path: /calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      id: '11646003'
      offset: 0
      limit: 10
      fields: items(fromNumber,toNumber,state,modified)
- name: call_broadcast_recipients
  endpoint:
    path: /calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params:
      id: '11646003'
      body:
      - phoneNumber: '12135551122'
      - contactId: 122460000043
      - phoneNumber: '12135558090'
        attributes:
          custom_external_id: 30005044
          custom_property_1: value1
- name: start_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params:
      id: '11646003'
- name: call_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: null
    params:
      id: '11646003'
      begin: 1473781817000
      end: 1473781817000
      fields: totalOutboundCount,billedAmount,callsAttempted
- name: call_recording
  endpoint:
    path: /calls/{id}/recordings/{name}.mp3
    method: GET
    data_selector: mp3 binary file response
    params: {}
- name: campaign_batch
  endpoint:
    path: /campaigns/batches/{id}
    method: GET
    data_selector: batch
    params:
      fields: name,status,size
- name: find_campaign_sounds
  endpoint:
    path: /campaigns/sounds
    method: GET
    data_selector: items
    params:
      filter: name
      includeArchived: true
      includePending: true
      includeScrubbed: true
      offset: 0
      limit: 100
      fields: items(id,name,callback)
- name: add_sound_via_call
  endpoint:
    path: /campaigns/sounds/calls
    method: POST
    data_selector: id
    params:
      name: Sound 1
      toNumber: '12135551122'
- name: add_sound_via_file
  endpoint:
    path: /campaigns/sounds/files
    method: POST
    data_selector: id
    params:
      fields: id,name
- name: campaign_sounds
  endpoint:
    path: /v2/campaigns/sounds/tts
    method: POST
    data_selector: id
- name: contacts
  endpoint:
    path: /v2/contacts
    method: POST
    data_selector: items
- name: contacts
  endpoint:
    path: /contacts/lists
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: GET
    data_selector: items
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: dncs
  endpoint:
    path: /v2/contacts/dncs
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: add_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: POST
- name: get_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: GET
- name: remove_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: DELETE
- name: remove_contact_list_item
  endpoint:
    path: /contacts/lists/{id}/items/{contactId}
    method: DELETE
- name: contact
  endpoint:
    path: /v2/contacts/{id}
    method: GET
    data_selector: contact
    params: {}
- name: contact_history
  endpoint:
    path: /v2/contacts/{id}/history
    method: GET
    data_selector: history
    params:
      limit: 100
      offset: 0
- name: keywords
  endpoint:
    path: /v2/keywords
    method: GET
    data_selector: keywords
    params: {}
- name: keyword_leases
  endpoint:
    path: /v2/keywords/leases
    method: GET
    data_selector: leases
    params:
      limit: 100
      offset: 0
- name: delete_dnc_source
  endpoint:
    path: /contacts/dncs/sources/{source}
    method: DELETE
    data_selector: 'null'
    params:
      source: my source
- name: universal_dnc
  endpoint:
    path: /contacts/dncs/universals/{toNumber}
    method: GET
    data_selector: items
    params:
      toNumber: '12135551126'
      fromNumber: '12130021127'
      fields: toNumber,inboundCall,outboundCall
- name: get_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: GET
    data_selector: 'null'
    params:
      number: '12135551126'
- name: delete_dnc_number
  endpoint:
    path: /contacts/dncs/{number}
    method: DELETE
    data_selector: 'null'
    params:
      number: 12135551126,12136666123
- name: update_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: PUT
    data_selector: 'null'
    params:
      number: '12132000381'
      body:
        call: true
        text: false
- name: create_contact_list
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: 'null'
    params:
      name: My Contact List
      contacts:
      - firstName: Alice
        lastName: Moore
        homePhone: '12135551126'
      - firstName: Bob
        lastName: Smith
        homePhone: '12135551127'
        properties:
          age: 30
- name: api_credentials
  endpoint:
    path: /me/api/credentials
    method: GET
    data_selector: items
- name: credit_usage
  endpoint:
    path: /me/billing/credit-usage
    method: GET
    data_selector: creditsUsed
- name: billing_plan_usage
  endpoint:
    path: /me/billing/plan-usage
    method: GET
    data_selector: totalRemainingCredits
- name: caller_ids
  endpoint:
    path: /me/callerids
    method: GET
    data_selector: items
- name: keyword_lease
  endpoint:
    path: /keywords/leases
    method: GET
    data_selector: items
    params:
      offset: 0
      limit: 10
      fields: items(keyword,leaseBegin,leaseEnd)
- name: keyword_lease_config
  endpoint:
    path: /keywords/leases/configs
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: specific_keyword_lease
  endpoint:
    path: /keywords/leases/{keyword}
    method: GET
    data_selector: items
    params:
      fields: items(keyword,leaseBegin,leaseEnd)
- name: keyword_availability
  endpoint:
    path: /keywords/{keyword}/available
    method: GET
    data_selector: available
- name: account_details
  endpoint:
    path: /me/account
    method: GET
    data_selector: account
- name: create_api_credentials
  endpoint:
    path: /me/api/credentials
    method: POST
    data_selector: credentials
- name: find_api_credentials
  endpoint:
    path: /me/api/credentials
    method: GET
    data_selector: credentials
- name: verify_caller_id
  endpoint:
    path: /me/callerids/{callerid}/verification-code
    method: POST
    data_selector: result
    params:
      callerid: '12132000384'
      verificationCode: '1234'
- name: upload_media
  endpoint:
    path: /media
    method: POST
    data_selector: id
    params:
      file: binary
      name: test image
- name: find_media
  endpoint:
    path: /media
    method: GET
    data_selector: items
    params:
      filter: image1.jpeg
- name: get_media_by_id
  endpoint:
    path: /media/{id}
    method: GET
    data_selector: media
    params:
      id: 379506003
      fields: name,publicUrl
- name: download_media
  endpoint:
    path: /media/{id}.{extension}
    method: GET
    data_selector: binary response
    params:
      id: 379506003
      extension: mp3
- name: number_lease_config
  endpoint:
    path: /numbers/leases/configs/{number}
    method: PUT
    data_selector: ''
    params:
      configType: TRACKING
      callTrackingConfig:
        screen: 'false'
        recorded: 'true'
        voicemail: 'true'
        introSoundId: 10004001
        whisperSoundId: 10005002
        voicemailSoundId: 10006003
        failedTransferSoundId: 10007004
        transferNumbers:
        - '12135551122'
        - '12135551189'
        weeklySchedule:
          startTimeOfDay:
            hour: 10
            minute: 0
            second: 0
          stopTimeOfDay:
            hour: 18
            minute: 0
            second: 0
          daysOfWeek:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          timeZone: America/New_York
        googleAnalytics:
          domain: domain-name
          googleAccountId: UA-XXXXX-2X
          category: Sales
- name: media
  endpoint:
    path: /media/{id}/file
    method: GET
    data_selector: binary file response
    params:
      id: integer required
- name: number_leases
  endpoint:
    path: /numbers/leases
    method: GET
    data_selector: items
    params:
      limit: integer
      offset: integer
      prefix: string
      city: string
      state: string
      zipcode: string
      labelName: string
      fields: string
- name: number_lease_configs
  endpoint:
    path: /numbers/leases/configs
    method: GET
    data_selector: items
    params:
      limit: integer
      offset: integer
      prefix: string
      city: string
      state: string
      zipcode: string
      labelName: string
      fields: string
- name: specific_lease_config
  endpoint:
    path: /numbers/leases/configs/{number}
    method: GET
    data_selector: number
    params:
      number: string required
      fields: string
- name: update_lease_config
  endpoint:
    path: /numbers/leases/configs/{number}
    method: PUT
    data_selector: update response
    params:
      number: string required
      body: NumberConfig
      callTrackingConfig: Call tracking configuration
      configType: string
      ivrInboundConfig: IVR configuration
- name: number_lease
  endpoint:
    path: /v2/numbers/leases/{number}
    method: PUT
    data_selector: result
    params: {}
- name: find_numbers_local
  endpoint:
    path: /v2/numbers/local
    method: GET
    data_selector: items
    params:
      limit: 100
- name: find_number_regions
  endpoint:
    path: /v2/numbers/regions
    method: GET
    data_selector: items
    params:
      limit: 100
- name: find_tollfree_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: items
    params: {}
- name: texts
  endpoint:
    path: /v2/texts
    method: POST
    data_selector: items
    params:
      campaignId: 4050600003
      defaultMessage: Hello!
- name: auto_replies
  endpoint:
    path: /v2/texts/auto-replys
    method: POST
    data_selector: id
    params: {}
- name: text_broadcasts
  endpoint:
    path: /texts/broadcasts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: text_broadcast
  endpoint:
    path: /texts/broadcasts/{id}
    method: GET
    data_selector: ''
    params: {}
- name: toll_free_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: numbers
    params:
      pattern: 87*
      limit: 10
      fields: number
- name: orders
  endpoint:
    path: /v2/orders
    method: GET
    data_selector: orders
    params:
      limit: 100
      offset: 0
- name: purchase_keywords
  endpoint:
    path: /v2/orders/keywords
    method: POST
    data_selector: id
- name: purchase_numbers
  endpoint:
    path: /v2/orders/numbers
    method: POST
    data_selector: id
- name: get_order
  endpoint:
    path: /v2/orders/{id}
    method: GET
    params:
      fields: status,totalCost
- name: get_delivery_reports
  endpoint:
    path: /v2/reports/delivery
    method: GET
    data_selector: reports
    params:
      limit: 100
      offset: 0
- name: send_texts
  endpoint:
    path: /v2/texts
    method: POST
    data_selector: id
- name: text_auto_reply
  endpoint:
    path: /texts/auto-replys
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: text_auto_reply_by_id
  endpoint:
    path: /texts/auto-replys/{id}
    method: GET
    data_selector: items
    params: {}
- name: delete_text_auto_reply
  endpoint:
    path: /texts/auto-replys/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: create_text_broadcast
  endpoint:
    path: /texts/broadcasts
    method: POST
    data_selector: null
    params: {}
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: response
    params: {}
- name: addTextBroadcastBatch
  endpoint:
    path: /texts/broadcasts/{id}/batches
    method: POST
- name: getTextBroadcastBatches
  endpoint:
    path: /texts/broadcasts/{id}/batches
    method: GET
    params:
      offset: 0
      limit: 10
      fields: items(name,status,size,remaining)
- name: addTextBroadcastRecipients
  endpoint:
    path: /texts/broadcasts/{id}/recipients
    method: POST
- name: startTextBroadcast
  endpoint:
    path: /texts/broadcasts/{id}/start
    method: POST
- name: getTextBroadcastStats
  endpoint:
    path: /texts/broadcasts/{id}/stats
    method: GET
    params:
      begin: 1473781817000
      end: 1473781817000
      fields: totalOutboundCount,billedAmount,sentCount
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: items
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params:
      fields: totalCount
- name: calls
  endpoint:
    path: /v2/calls
    method: GET
    data_selector: items
    params: {}
- name: broadcasts
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: items
    params: {}
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: response
    params:
      id: '11646003'
- name: add_batch
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: POST
    data_selector: response
    params:
      id: '11646003'
- name: find_batches
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: GET
    data_selector: items
    params:
      id: '11646003'
      offset: '0'
      limit: '10'
      fields: items(name,status,size,remaining)
- name: call_broadcasts
  endpoint:
    path: /v2/calls/broadcasts
    method: GET
    data_selector: items
    params: {}
- name: create_call_broadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: id
    params: {}
- name: get_call_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}
    method: GET
    data_selector: ''
    params: {}
- name: update_call_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: call_broadcasts
  endpoint:
    path: /calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      id: integer required
      batchId: integer
      offset: integer
      limit: integer
      fields: string
- name: call_broadcast_recipients
  endpoint:
    path: /calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params:
      id: integer required
      body: list of ref
- name: start_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params:
      id: integer required
- name: get_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: null
    params:
      id: integer required
      fields: string
      begin: integer
      end: integer
- name: call_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: result
    params: {}
- name: stop_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/stop
    method: POST
    data_selector: ''
    params: {}
- name: get_call_recording
  endpoint:
    path: /calls/recordings/{id}
    method: GET
    data_selector: ''
    params: {}
- name: get_call_recording_mp3
  endpoint:
    path: /calls/recordings/{id}.mp3
    method: GET
    data_selector: ''
    params: {}
- name: get_call
  endpoint:
    path: /calls/{id}
    method: GET
    data_selector: ''
    params: {}
- name: get_call_recordings
  endpoint:
    path: /calls/{id}/recordings
    method: GET
    data_selector: ''
    params: {}
- name: get_call_recording_by_name
  endpoint:
    path: /calls/{id}/recordings/{name}
    method: GET
    data_selector: ''
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: POST
    data_selector: items
- name: campaign_sounds
  endpoint:
    path: /v2/campaigns/sounds/{id}
    method: GET
    data_selector: CampaignSound
- name: delete_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: DELETE
    data_selector: ''
    params: {}
- name: create_contact_list
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: ''
    params: {}
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: dncs
  endpoint:
    path: /v2/contacts/dncs
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: call_recording
  endpoint:
    path: /calls/{id}/recordings/{name}.mp3
    method: GET
    data_selector: mp3 binary file response
    params:
      id: integer required
      name: string required
- name: batch
  endpoint:
    path: /campaigns/batches/{id}
    method: GET
    data_selector: Batch
    params:
      id: integer required
      fields: string
- name: find_sounds
  endpoint:
    path: /campaigns/sounds
    method: GET
    data_selector: items
    params:
      limit: integer
      offset: integer
      filter: string
      includeArchived: boolean
      includePending: boolean
      includeScrubbed: boolean
      fields: string
- name: add_sound_via_call
  endpoint:
    path: /campaigns/sounds/calls
    method: POST
    data_selector: ResourceId
    params:
      name: string
      toNumber: string
- name: add_sound_via_file
  endpoint:
    path: /campaigns/sounds/files
    method: POST
    data_selector: CampaignSound
    params:
      name: string
      file: file required
- name: add_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: POST
- name: get_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: GET
- name: remove_contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: DELETE
- name: remove_contact_list_item
  endpoint:
    path: /contacts/lists/{id}/items/{contactId}
    method: DELETE
- name: contact
  endpoint:
    path: /v2/contacts/{id}
    method: GET
    data_selector: ''
    params:
      id: integer required
      fields: string
- name: keyword
  endpoint:
    path: /v2/keywords
    method: GET
    data_selector: ''
    params:
      keywords: array
- name: keyword_lease
  endpoint:
    path: /v2/keywords/leases
    method: GET
    data_selector: ''
    params:
      limit: integer
      offset: integer
      filter: string
      labelName: string
      fields: string
- name: contact_lists
  endpoint:
    path: /contacts/lists
    method: GET
    data_selector: items
    params:
      name: my list
      offset: 0
      limit: 10
      fields: items(id,name,size)
- name: create_contact_list
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: id
    params: {}
- name: get_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: GET
    data_selector: id
    params:
      fields: id,name,size,created
- name: delete_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: update_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: PUT
    data_selector: null
    params: {}
- name: keyword_lease
  endpoint:
    path: /keywords/leases
    method: GET
    data_selector: items
    params:
      offset: 0
      limit: 10
      fields: items(keyword,leaseBegin,leaseEnd)
- name: keyword_lease_config
  endpoint:
    path: /keywords/leases/configs
    method: GET
    data_selector: KeywordConfig
    params: {}
- name: account_details
  endpoint:
    path: /me/account
    method: GET
    data_selector: UserAccount
    params: {}
- name: verify_caller_id
  endpoint:
    path: /me/callerids/{callerid}/verification-code
    method: POST
- name: upload_media
  endpoint:
    path: /media
    method: POST
- name: find_media
  endpoint:
    path: /media
    method: GET
- name: get_media_by_id
  endpoint:
    path: /media/{id}
    method: GET
- name: api_credentials
  endpoint:
    path: /v2/me/api/credentials
    method: GET
    data_selector: items
- name: credit_usage
  endpoint:
    path: /v2/me/billing/credit-usage
    method: GET
- name: billing_plan_usage
  endpoint:
    path: /v2/me/billing/plan-usage
    method: GET
- name: caller_ids
  endpoint:
    path: /v2/me/callerids
    method: GET
    data_selector: items
- name: send_verification_code
  endpoint:
    path: /v2/me/callerids/{callerid}
    method: POST
- name: number_lease_config
  endpoint:
    path: /v2/numbers/leases/configs/{number}
    method: PUT
    data_selector: callTrackingConfig
    params:
      configType: TRACKING
- name: media
  endpoint:
    path: /media/{id}/file
    method: GET
    data_selector: binary file response
    params:
      id: integer required
- name: number_leases
  endpoint:
    path: /numbers/leases
    method: GET
    data_selector: items
    params:
      limit: integer
      offset: integer
      prefix: string
      city: string
      state: string
      zipcode: string
      labelName: string
      fields: string
- name: number_lease_configs
  endpoint:
    path: /numbers/leases/configs
    method: GET
    data_selector: items
    params:
      limit: integer
      offset: integer
      prefix: string
      city: string
      state: string
      zipcode: string
      labelName: string
      fields: string
- name: specific_lease_config
  endpoint:
    path: /numbers/leases/configs/{number}
    method: GET
    data_selector: number
    params:
      number: string required
      fields: string
- name: update_lease_config
  endpoint:
    path: /numbers/leases/configs/{number}
    method: PUT
    data_selector: updated config
    params:
      number: string required
      body: ref
      callTrackingConfig: ref
      configType: string
      ivrInboundConfig: ref
- name: number_leases
  endpoint:
    path: /v2/numbers/leases/{number}
    method: GET
    data_selector: items
    params:
      fields: number,nationalFormat,leaseBegin,leaseEnd,region/city
- name: find_local_numbers
  endpoint:
    path: /v2/numbers/local
    method: GET
    data_selector: items
    params:
      limit: 100
      fields: items(number,nationalFormat,leaseBegin,leaseEnd,region/city)
- name: find_number_regions
  endpoint:
    path: /v2/numbers/regions
    method: GET
    data_selector: items
    params:
      limit: 100
      fields: items(number,nationalFormat,leaseBegin,leaseEnd,region/city)
- name: find_tollfree_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: items
    params: {}
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params:
      campaignId: 0
- name: auto-replys
  endpoint:
    path: /texts/auto-replys
    method: POST
    data_selector: id
    params: {}
- name: find_toll_free_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: numbers
    params:
      pattern: 87*
      limit: 10
      fields: number
- name: purchase_keywords
  endpoint:
    path: /v2/orders/keywords
    method: POST
    data_selector: id
    params:
      keywords: []
- name: purchase_numbers
  endpoint:
    path: /v2/orders/numbers
    method: POST
    data_selector: id
    params:
      numbers: []
      localCount: 0
      zipcode: ''
- name: get_order
  endpoint:
    path: /v2/orders/{id}
    method: GET
    data_selector: id
    params:
      fields: status,totalCost
- name: get_delivery_reports
  endpoint:
    path: /v2/reports/delivery
    method: GET
    data_selector: reports
    params:
      limit: 100
      offset: 0
- name: send_texts
  endpoint:
    path: /v2/texts
    method: POST
    data_selector: id
    params:
      recipients: []
      campaignId: 0
      defaultMessage: ''
      strictValidation: false
      fromNumber: ''
- name: text_auto_reply
  endpoint:
    path: /texts/auto-replys
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: text_broadcast
  endpoint:
    path: /texts/broadcasts
    method: POST
    data_selector: id
    params: {}
- name: text_broadcasts
  endpoint:
    path: /texts/broadcasts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: text_broadcast
  endpoint:
    path: /texts/broadcasts/{id}
    method: GET
    data_selector: ''
    params: {}
- name: add_batch
  endpoint:
    path: /texts/broadcasts/{id}/batches
    method: POST
    data_selector: ''
    params: {}
- name: archive_text_broadcast
  endpoint:
    path: /texts/broadcasts/{id}/archive
    method: POST
    data_selector: ''
    params: {}
- name: text_broadcasts
  endpoint:
    path: /v2/texts/broadcasts/{id}/stop
    method: POST
    data_selector: No Response
    params: {}
- name: broadcast_texts
  endpoint:
    path: /v2/texts/broadcasts/{id}/texts
    method: GET
    data_selector: items
    params:
      offset: 0
      limit: 100
- name: toggle_recipients_status
  endpoint:
    path: /v2/texts/broadcasts/{id}/toggleRecipientsStatus
    method: POST
    data_selector: No Response
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: webhook
    params: {}
- name: text
  endpoint:
    path: /texts
    method: GET
    data_selector: texts
    params: {}
- name: text_broadcast_batches
  endpoint:
    path: /texts/broadcasts/{id}/batches
    method: GET
    data_selector: items
    params:
      id: integer required
      offset: integer
      limit: integer
      fields: string
- name: add_text_broadcast_recipients
  endpoint:
    path: /texts/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params:
      id: integer required
      body: list of ref
- name: start_text_broadcast
  endpoint:
    path: /texts/broadcasts/{id}/start
    method: POST
    data_selector: null
    params:
      id: integer required
- name: get_text_broadcast_stats
  endpoint:
    path: /texts/broadcasts/{id}/stats
    method: GET
    data_selector: null
    params:
      id: integer required
      fields: string
      begin: integer
      end: integer
- name: calls
  endpoint:
    path: /v2/calls
    method: GET
    data_selector: items
    params: {}
- name: broadcasts
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: callBroadcast
    params: {}
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: GET
    data_selector: items
    params: {}
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: items
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: result
    params: {}
- name: add_batch
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: POST
    data_selector: id
    params: {}
- name: find_batches
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
      fields: items(name,status,size,remaining)
- name: call_broadcast_calls
  endpoint:
    path: /calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      id: integer required
      batchId: integer
      fields: string
      limit: integer
      offset: integer
- name: call_broadcast_recipients
  endpoint:
    path: /calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params:
      id: integer required
      body: list of Recipient
- name: start_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params:
      id: integer required
- name: get_call_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: null
    params:
      id: integer required
      fields: string
      begin: integer
      end: integer
- name: call_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: result
    params: {}
- name: stop_voice_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/stop
    method: POST
    data_selector: ''
    params:
      id: integer required
- name: get_call_recording
  endpoint:
    path: /calls/recordings/{id}
    method: GET
    data_selector: ''
    params:
      id: integer required
      fields: string
- name: get_call_recording_mp3
  endpoint:
    path: /calls/recordings/{id}.mp3
    method: GET
    data_selector: ''
    params:
      id: integer required
- name: get_call
  endpoint:
    path: /calls/{id}
    method: GET
    data_selector: ''
    params:
      id: integer required
      fields: string
- name: get_call_recordings
  endpoint:
    path: /calls/{id}/recordings
    method: GET
    data_selector: ''
    params:
      id: integer required
      fields: string
- name: get_call_recording_by_name
  endpoint:
    path: /calls/{id}/recordings/{name}
    method: GET
    data_selector: ''
    params:
      id: integer required
      name: string required
      fields: string
- name: call_recording
  endpoint:
    path: /calls/{id}/recordings/{name}.mp3
    method: GET
    data_selector: mp3 binary file response
    params:
      id: integer
      name: string
- name: batch
  endpoint:
    path: /campaigns/batches/{id}
    method: GET
    data_selector: Batch
    params:
      id: integer
      fields: string
- name: find_sounds
  endpoint:
    path: /campaigns/sounds
    method: GET
    data_selector: items
    params:
      limit: integer
      offset: integer
      filter: string
      includeArchived: boolean
      includePending: boolean
      includeScrubbed: boolean
      fields: string
- name: add_sound_via_call
  endpoint:
    path: /campaigns/sounds/calls
    method: POST
    data_selector: ResourceId
    params:
      name: string
      toNumber: string
- name: add_sound_via_file
  endpoint:
    path: /campaigns/sounds/files
    method: POST
    data_selector: CampaignSound
    params:
      name: string
      file: file
- name: contacts
  endpoint:
    path: /v2/contacts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: dncs
  endpoint:
    path: /v2/contacts/dncs
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: contacts
  endpoint:
    path: /v2/contacts
    method: POST
    data_selector: items
- name: campaign_sound
  endpoint:
    path: /v2/campaigns/sounds/tts
    method: POST
- name: get_campaign_sound
  endpoint:
    path: /v2/campaigns/sounds/{id}
    method: GET
- name: delete_campaign_sound
  endpoint:
    path: /v2/campaigns/sounds/{id}
    method: DELETE
- name: get_mp3_sound
  endpoint:
    path: /v2/campaigns/sounds/{id}.mp3
    method: GET
- name: get_wav_sound
  endpoint:
    path: /v2/campaigns/sounds/{id}.wav
    method: GET
- name: delete_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: DELETE
    data_selector: ''
    params: {}
- name: get_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: GET
    data_selector: ''
    params: {}
- name: update_dnc
  endpoint:
    path: /contacts/dncs/{number}
    method: PUT
    data_selector: ''
    params: {}
- name: create_contact_list
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: ''
    params: {}
- name: contact_lists
  endpoint:
    path: /contacts/lists
    method: GET
    data_selector: items
    params:
      name: my list
      offset: 0
      limit: 10
      fields: items(id,name,size)
- name: create_contact_list
  endpoint:
    path: /contacts/lists
    method: POST
    data_selector: id
- name: find_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: GET
    data_selector: id
- name: delete_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: DELETE
- name: update_contact_list
  endpoint:
    path: /contacts/lists/{id}
    method: PUT
- name: contact_list_items
  endpoint:
    path: /contacts/lists/{id}/items
    method: POST
    data_selector: contacts
- name: contact_list_items_get
  endpoint:
    path: /contacts/lists/{id}/items
    method: GET
    data_selector: items
- name: contact_list_items_delete
  endpoint:
    path: /contacts/lists/{id}/items
    method: DELETE
- name: contact_list_item_delete
  endpoint:
    path: /contacts/lists/{id}/items/{contactId}
    method: DELETE
- name: contact
  endpoint:
    path: /contacts/{id}
    method: GET
    data_selector: contacts
    params: {}
- name: contact_history
  endpoint:
    path: /contacts/{id}/history
    method: GET
    data_selector: history
    params:
      offset: 0
      limit: 100
- name: keywords
  endpoint:
    path: /keywords
    method: GET
    data_selector: keywords
    params: {}
- name: keyword_leases
  endpoint:
    path: /v2/keywords/leases
    method: GET
    data_selector: items
    params:
      offset: 0
      limit: 10
      fields: items(keyword,leaseBegin,leaseEnd)
- name: keyword_available
  endpoint:
    path: /v2/keywords/{keyword}/available
    method: GET
    data_selector: ''
    params:
      keyword: ''
- name: account_details
  endpoint:
    path: /v2/me/account
    method: GET
    data_selector: ''
    params: {}
- name: api_credentials
  endpoint:
    path: /v2/me/api/credentials
    method: GET
    data_selector: items
- name: credit_usage
  endpoint:
    path: /v2/me/billing/credit-usage
    method: GET
    data_selector: creditsUsed
- name: billing_plan_usage
  endpoint:
    path: /v2/me/billing/plan-usage
    method: GET
    data_selector: totalRemainingCredits
- name: caller_ids
  endpoint:
    path: /v2/me/callerids
    method: GET
    data_selector: items
- name: number_lease_config
  endpoint:
    path: /v2/numbers/leases/configs/{number}
    method: PUT
    data_selector: callTrackingConfig
    params:
      configType: TRACKING
- name: verify_caller_id
  endpoint:
    path: /me/callerids/{callerid}/verification-code
    method: POST
    data_selector: result
    params:
      callerid: '12132000384'
      verificationCode: '1234'
- name: upload_media
  endpoint:
    path: /media
    method: POST
    data_selector: id
    params:
      name: test image
      file: image1.bmp
- name: find_media
  endpoint:
    path: /media
    method: GET
    data_selector: items
    params:
      filter: image1.jpeg
- name: get_media
  endpoint:
    path: /media/{id}
    method: GET
    data_selector: result
    params:
      id: 379506003
      fields: name,publicUrl
- name: media
  endpoint:
    path: /media/{id}/file
    method: GET
    data_selector: binary file response
    params:
      id: integer required
- name: number_leases
  endpoint:
    path: /numbers/leases
    method: GET
    data_selector: items
    params:
      limit: integer
      offset: integer
      prefix: string
      city: string
      state: string
      zipcode: string
      labelName: string
      fields: string
- name: number_lease_configs
  endpoint:
    path: /numbers/leases/configs
    method: GET
    data_selector: items
    params:
      limit: integer
      offset: integer
      prefix: string
      city: string
      state: string
      zipcode: string
      labelName: string
      fields: string
- name: specific_lease_config
  endpoint:
    path: /numbers/leases/configs/{number}
    method: GET
    data_selector: number,configType
    params:
      number: string required
      fields: string
- name: update_lease_config
  endpoint:
    path: /numbers/leases/configs/{number}
    method: PUT
    data_selector: update response
    params:
      number: string required
      body: ref
      callTrackingConfig: ref
      configType: string
      ivrInboundConfig: ref
- name: number_lease
  endpoint:
    path: /v2/numbers/leases/{number}
    method: PUT
    data_selector: response
    params: {}
- name: find_numbers_local
  endpoint:
    path: /v2/numbers/local
    method: GET
    data_selector: items
    params:
      limit: 100
- name: find_number_regions
  endpoint:
    path: /v2/numbers/regions
    method: GET
    data_selector: items
    params:
      limit: 100
- name: find_tollfree_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: items
    params: {}
- name: toll_free_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: obj
    params:
      limit: 100
      fields: number
- name: orders
  endpoint:
    path: /v2/orders
    method: GET
    data_selector: obj
    params:
      limit: 100
      offset: 0
      fields: ''
- name: text_auto_reply
  endpoint:
    path: /texts/auto-replys
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: text_broadcast
  endpoint:
    path: /texts/broadcasts
    method: POST
    data_selector: id
    params: {}
- name: text_broadcasts
  endpoint:
    path: /texts/broadcasts
    method: GET
    data_selector: items
    params:
      limit: 100
      offset: 0
- name: text_broadcast
  endpoint:
    path: /texts/broadcasts/{id}
    method: GET
    data_selector: items
    params: {}
- name: archive_text_broadcast
  endpoint:
    path: /texts/broadcasts/{id}/archive
    method: POST
    data_selector: null
    params: {}
- name: add_batch_to_text_broadcast
  endpoint:
    path: /texts/broadcasts/{id}/batches
    method: POST
    data_selector: null
    params: {}
- name: texts
  endpoint:
    path: /v2/texts
    method: POST
    data_selector: items
    params:
      campaignId: 4050600003
      defaultMessage: Hello!
- name: auto_replies
  endpoint:
    path: /v2/texts/auto-replys
    method: POST
    data_selector: id
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: records
    params: {}
- name: text_broadcast_batches
  endpoint:
    path: /v2/texts/broadcasts/{id}/batches
    method: GET
    data_selector: items
    params:
      offset: 0
      limit: 10
      fields: items(name,status,size,remaining)
- name: add_recipients
  endpoint:
    path: /v2/texts/broadcasts/{id}/recipients
    method: POST
    data_selector: items
- name: start_broadcast
  endpoint:
    path: /v2/texts/broadcasts/{id}/start
    method: POST
- name: get_stats
  endpoint:
    path: /v2/texts/broadcasts/{id}/stats
    method: GET
    data_selector: ''
    params:
      begin: 0
      end: 0
      fields: totalOutboundCount,billedAmount,sentCount
- name: stop_broadcast
  endpoint:
    path: /v2/texts/broadcasts/{id}/stop
    method: POST
- name: text_broadcast
  endpoint:
    path: /v2/texts/broadcasts/{id}/stop
    method: POST
    data_selector: null
    params: {}
- name: text_broadcast_texts
  endpoint:
    path: /v2/texts/broadcasts/{id}/texts
    method: GET
    data_selector: items
    params:
      offset: 0
      limit: 100
- name: toggle_recipients_status
  endpoint:
    path: /v2/texts/broadcasts/{id}/toggleRecipientsStatus
    method: POST
    data_selector: null
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
    data_selector: webhook
    params: {}
- name: webhook
  endpoint:
    path: /webhooks/{id}
    method: PUT
- name: webhook
  endpoint:
    path: /v2/webhooks/{id}
    method: PUT
    data_selector: ''
    params: {}
- name: contact
  endpoint:
    path: /api/1.1/contacts
    method: GET
- name: send_sms_campaign
  endpoint:
    path: /sms/send
    method: POST
- name: purchase_single_number
  endpoint:
    path: /inbound/numbers
    method: POST
- name: get_inbound_numbers
  endpoint:
    path: /inbound/numbers
    method: GET
- name: get_campaign_stats
  endpoint:
    path: /reports/calls/{campaignid}
    method: GET
- name: get_full_campaign_list
  endpoint:
    path: /campaigns
    method: GET
- name: caller_id
  endpoint:
    path: /me/callerids/{callerid}
    method: POST
    data_selector: response
    params: {}
- name: caller_id_verification
  endpoint:
    path: /me/callerids/{callerid}/verification-code
    method: POST
    data_selector: response
    params: {}
- name: texts
  endpoint:
    path: /v2/texts
    method: POST
    data_selector: items
- name: calls
  endpoint:
    path: /calls
    method: POST
    data_selector: items
    params: {}
- name: findCalls
  endpoint:
    path: /calls
    method: GET
    data_selector: items
    params:
      campaignId: '10'
      label: reminders
      intervalBegin: '1448920800000'
      intervalEnd: '1449698400000'
      limit: '10'
- name: send_texts
  endpoint:
    path: /v2/texts
    method: POST
    data_selector: items
    params:
      campaignId: 4050600003
      defaultMessage: Hello!
- name: call_recipient
  endpoint:
    path: /v2/calls
    method: POST
    data_selector: items
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params:
      campaignId: 13
      label: reminders
      intervalBegin: 1448920800000
      intervalEnd: 1449698400000
      limit: 10
- name: calls
  endpoint:
    path: /calls
    method: GET
    data_selector: items
    params:
      campaignId: 10
      label: reminders
      intervalBegin: 1448920800000
      intervalEnd: 1449698400000
      limit: 10
- name: text_broadcast
  endpoint:
    path: /v2/texts/broadcasts
    method: POST
    data_selector: id
- name: call_broadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: id
    params: {}
- name: start_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params: {}
- name: start_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params: {}
- name: update_broadcast_schedule
  endpoint:
    path: /v2/calls/broadcasts/{id}
    method: PUT
    data_selector: null
    params: {}
- name: get_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    data_selector: null
    params: {}
- name: broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: schedules
    params: {}
- name: broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: totalOutboundCount
    params:
      fields: totalOutboundCount,billedAmount,callsAttempted
- name: start_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/start
    method: POST
    data_selector: ''
    params: {}
- name: call_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}
    method: PUT
    data_selector: schedules
    params: {}
- name: call_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    data_selector: ''
    params:
      begin: timestamp
      end: timestamp
      fields: totalOutboundCount,billedAmount,callsAttempted
- name: text_broadcast
  endpoint:
    path: /v2/texts/broadcasts
    method: POST
    data_selector: id
- name: call_broadcast_recipients
  endpoint:
    path: /calls/addCallBroadcastRecipients
    method: POST
    data_selector: result
    params:
      id: 11646003
- name: create_call_broadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: ''
    params: {}
- name: add_call_broadcast_batch
  endpoint:
    path: /v2/calls/broadcasts/{id}/batches
    method: POST
    data_selector: ''
    params: {}
- name: add_call_broadcast_recipients
  endpoint:
    path: /v2/calls/broadcasts/{id}/recipients
    method: POST
    data_selector: ''
    params: {}
- name: text_broadcasts
  endpoint:
    path: /v2/texts/broadcasts
    method: POST
    data_selector: id
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: id
    params: {}
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: id
    params: {}
- name: call_broadcast_recipients
  endpoint:
    path: /calls/broadcasts/{id}/recipients
    method: POST
    data_selector: result
    params:
      id: 11646003
- name: start_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params: {}
- name: schedule_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: null
    params: {}
- name: get_broadcast_stats
  endpoint:
    path: /calls/broadcasts/{id}/stats
    method: GET
    data_selector: null
    params:
      begin: null
      end: null
      fields: null
- name: Call Broadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: id
- name: Add Recipient Batch
  endpoint:
    path: /v2/calls/broadcasts/{id}/batches
    method: POST
    data_selector: id
- name: Add Recipients
  endpoint:
    path: /v2/calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
- name: text_broadcast
  endpoint:
    path: /v2/texts/broadcasts
    method: POST
    data_selector: id
- name: calls_broadcasts
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: id
- name: call_broadcast_recipients
  endpoint:
    path: /calls/addCallBroadcastRecipients
    method: POST
    data_selector: result
- name: call_broadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: response
    params: {}
- name: add_contact_batch
  endpoint:
    path: /v2/calls/broadcasts/{id}/batches
    method: POST
    data_selector: response
    params: {}
- name: add_recipients
  endpoint:
    path: /v2/calls/broadcasts/{id}/recipients
    method: POST
    data_selector: response
    params: {}
- name: broadcasts
  endpoint:
    path: /v2/calls/broadcasts/{id}/start
    method: POST
    data_selector: 200 OK - No Response
- name: broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    data_selector: response
    params:
      begin: '1473781817000'
      end: '1473781817000'
      fields: totalOutboundCount,billedAmount,callsAttempted
- name: start_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}/start
    method: POST
    data_selector: No Response
- name: update_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}
    method: PUT
    data_selector: No Response
- name: get_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    data_selector: totalOutboundCount
- name: webhooks
  endpoint:
    path: /v2/webhooks
    method: POST
    data_selector: id
- name: webhook
  endpoint:
    path: /v2/webhooks
    method: POST
    data_selector: id
    params: {}
- name: outbound_call
  endpoint:
    path: /webhook/outbound_call
    method: POST
    data_selector: events
- name: outbound_text
  endpoint:
    path: /webhook/outbound_text
    method: POST
    data_selector: events
- name: call_broadcast
  endpoint:
    path: /webhook/call_broadcast
    method: POST
    data_selector: events
- name: text_broadcast
  endpoint:
    path: /webhook/text_broadcast
    method: POST
    data_selector: events
- name: contact_list
  endpoint:
    path: /webhook/contact_list
    method: POST
    data_selector: events
- name: outbound_text_delivery_report
  endpoint:
    path: /webhook/outbound_text_delivery_report
    method: POST
    data_selector: events
- name: contact
  endpoint:
    path: /api_1_1_contacts.html
    method: GET
- name: add_contact_list_items
  endpoint:
    path: /contacts
    method: POST
    data_selector: result
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: POST
    data_selector: items
- name: local_numbers
  endpoint:
    path: /v2/numbers/local
    method: GET
    data_selector: items
    params:
      prefix: '14245'
      city: Los Angeles
      state: CA
      zipcode: '90940'
      lata: '123'
      rateCenter: '123'
      offset: 0
      limit: 10
      fields: items(number,nationalFormat,leaseBegin,leaseEnd,region/city)
- name: find_tollfree_numbers
  endpoint:
    path: /numbers
    method: GET
    data_selector: numbers
    params:
      pattern: 87*
      limit: 10
      fields: number
- name: order_numbers
  endpoint:
    path: /orders/numbers
    method: POST
    data_selector: id
    params:
      numbers:
      - '12131234567'
      - '12131234568'
- name: find_keywords
  endpoint:
    path: /keywords
    method: GET
    data_selector: items
    params:
      keywords:
      - SUN
      - MOON
- name: local_numbers
  endpoint:
    path: /v2/numbers/local
    method: GET
    data_selector: items
    params:
      prefix: '14245'
      city: Los Angeles
      state: CA
      zipcode: '90940'
      lata: '123'
      rateCenter: '123'
      offset: 0
      limit: 10
      fields: items(number,nationalFormat,leaseBegin,leaseEnd,region/city)
- name: tollfree_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: items
    params:
      pattern: 87*
      limit: 10
      fields: number
- name: find_numbers_tollfree
  endpoint:
    path: /numbers
    method: GET
    data_selector: obj
    params:
      pattern: 87*
      limit: 10
      fields: number
- name: order_numbers
  endpoint:
    path: /orders/numbers
    method: POST
    data_selector: id
- name: find_keywords
  endpoint:
    path: /keywords
    method: GET
    data_selector: items
    params:
      keywords: MOON
- name: local_numbers
  endpoint:
    path: /v2/numbers/local
    method: GET
    data_selector: items
    params:
      prefix: '14245'
      city: Los Angeles
      state: CA
      zipcode: '90940'
      lata: '123'
      rateCenter: '123'
      offset: 0
      limit: 10
      fields: items(number,nationalFormat,leaseBegin,leaseEnd,region/city)
- name: tollfree_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: items
    params:
      pattern: 87*
      limit: 10
      fields: number
- name: find_tollfree_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: obj
    params:
      pattern: 87*
      limit: 10
      fields: number
- name: order_numbers
  endpoint:
    path: /v2/orders/numbers
    method: POST
    data_selector: id
- name: local_numbers
  endpoint:
    path: /v2/numbers/local
    method: GET
    data_selector: items
    params:
      prefix: '14245'
      city: Los Angeles
      state: CA
      zipcode: '90940'
      lata: '123'
      rateCenter: '123'
      offset: 0
      limit: 10
      fields: items(number,nationalFormat,leaseBegin,leaseEnd,region/city)
- name: tollfree_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: items
    params:
      pattern: 87*
      limit: 10
      fields: number
- name: local_numbers
  endpoint:
    path: /v2/numbers/local
    method: GET
    data_selector: items
    params:
      prefix: '14245'
      city: Los Angeles
      state: CA
      zipcode: '90940'
      lata: '123'
      rateCenter: '123'
      offset: 0
      limit: 10
      fields: items(number,nationalFormat,leaseBegin,leaseEnd,region/city)
- name: toll_free_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: items
    params:
      pattern: 87*
      limit: 10
      fields: number
- name: find_tollfree_numbers
  endpoint:
    path: /numbers
    method: GET
    data_selector: obj
    params:
      pattern: 87*
      limit: '10'
      fields: number
- name: order_numbers
  endpoint:
    path: /orders/numbers
    method: POST
    data_selector: ''
    params: {}
- name: find_keywords
  endpoint:
    path: /keywords
    method: GET
    data_selector: items
    params:
      keywords: MOON
- name: keywords
  endpoint:
    path: /v2/orders/keywords
    method: POST
    data_selector: id
- name: local_numbers
  endpoint:
    path: /v2/numbers/local
    method: GET
    data_selector: items
    params:
      prefix: '14245'
      city: Los Angeles
      state: CA
      zipcode: '90940'
      lata: '123'
      rateCenter: '123'
      offset: 0
      limit: 10
      fields: items(number,nationalFormat,leaseBegin,leaseEnd,region/city)
- name: tollfree_numbers
  endpoint:
    path: /v2/numbers/tollfree
    method: GET
    data_selector: items
    params:
      pattern: 87*
      limit: 10
      fields: number
- name: find_tollfree_numbers
  endpoint:
    path: /v2/numbers
    method: GET
    data_selector: obj
    params:
      pattern: 87*
      limit: 10
      fields: number
- name: order_numbers
  endpoint:
    path: /v2/orders/numbers
    method: POST
    data_selector: id
    params: {}
- name: find_keywords
  endpoint:
    path: /v2/keywords
    method: GET
    data_selector: items
    params:
      keywords:
      - SUN
      - MOON
- name: order_keywords
  endpoint:
    path: /orderKeywords
    method: POST
    data_selector: keywords
    params: {}
- name: campaign_sounds
  endpoint:
    path: /v2/campaigns/sounds/files
    method: POST
    data_selector: id
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: id
    params: {}
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params:
      fromNumber: '12135551100'
      fields: items(id,message,created)
      intervalBegin: 1473781817000
      intervalEnd: 1473781917000
      limit: 50
      offset: 100
- name: individual_messaging
  endpoint:
    path: /api/v2/individual_messaging
    method: GET
- name: broadcast_messaging
  endpoint:
    path: /api/v2/broadcast_messaging
    method: GET
- name: contacts
  endpoint:
    path: /api/v2/contacts
    method: GET
- name: text_broadcasts
  endpoint:
    path: /v2/texts/broadcasts
    method: POST
    data_selector: id
- name: text_broadcasts
  endpoint:
    path: /v2/texts/broadcasts
    method: POST
    data_selector: id
- name: contact_batch
  endpoint:
    path: /addContactBatch
    method: POST
    data_selector: recipients
    params:
      batchId: '447060003'
      fromNumber: '12135551126'
      toNumber: '12136666123'
      scrubDuplicates: true
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: id
- name: create_call_broadcast
  endpoint:
    path: /calls/createCallBroadcast
    method: POST
    data_selector: result
- name: text_broadcast
  endpoint:
    path: /v2/texts/broadcasts
    method: POST
    data_selector: id
- name: createCallBroadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: id
    params: {}
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: id
- name: call_broadcast
  endpoint:
    path: /calls/createCallBroadcast
    method: POST
    data_selector: response
    params: {}
- name: add_call_broadcast_batch
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: POST
    data_selector: id
    params: {}
- name: add_call_broadcast_recipients
  endpoint:
    path: /calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params: {}
- name: text_broadcast
  endpoint:
    path: /v2/texts/broadcasts
    method: POST
    data_selector: id
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/start
    method: POST
    data_selector: No Response
- name: update_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: No Response
- name: create_call_broadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: id
- name: create_text_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: id
    params: {}
- name: CallBroadcast
  endpoint:
    path: /calls/callBroadcasts
    method: POST
    data_selector: response
    params: {}
- name: start_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params: {}
- name: update_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}
    method: PUT
    data_selector: null
    params: {}
- name: text_broadcast
  endpoint:
    path: /v2/texts/broadcasts
    method: POST
    data_selector: id
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params: {}
- name: call_broadcast_batch
  endpoint:
    path: /calls/broadcasts/{id}/batches
    method: POST
    data_selector: id
    params: {}
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: id
- name: createCallBroadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: id
- name: Call Broadcast
  endpoint:
    path: /calls/createCallBroadcast
    method: POST
    data_selector: response.obj
- name: add_call_broadcast_batch
  endpoint:
    path: /v2/calls/broadcasts/{id}/batches
    method: POST
    data_selector: id
    params: {}
- name: add_call_broadcast_recipients
  endpoint:
    path: /v2/calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params: {}
- name: start_broadcast
  endpoint:
    path: /calls/broadcasts/{id}/start
    method: POST
    data_selector: No Response
    params: {}
- name: update_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: No Response
    params: {}
- name: find_texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params:
      inbound: 'true'
      campaignId: '1003002'
      limit: '10'
- name: call_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    data_selector: response
    params:
      fields: totalOutboundCount,billedAmount,callsAttempted
- name: createTextBroadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: id
- name: text_broadcasts
  endpoint:
    path: /v2/texts/broadcasts
    method: POST
    data_selector: id
- name: create_call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: id
- name: call_broadcast
  endpoint:
    path: /calls/callBroadcasts
    method: POST
    data_selector: result
    params: {}
- name: add_call_broadcast_batch
  endpoint:
    path: /v2/calls/broadcasts/{id}/batches
    method: POST
    data_selector: id
    params: {}
- name: add_call_broadcast_recipients
  endpoint:
    path: /v2/calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params: {}
- name: start_voice_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}/start
    method: POST
    data_selector: ''
    params: {}
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: schedules
    params: {}
- name: find_texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params:
      inbound: 'true'
      campaignId: 1003002
      limit: 10
- name: get_broadcast_calls
  endpoint:
    path: /calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      batchId: 5500030002
      offset: 0
      limit: 10
      fields: items(fromNumber,toNumber,state,modified)
- name: call_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    data_selector: response
    params:
      begin: '1473781817000'
      end: '1473781817000'
      fields: totalOutboundCount,billedAmount,callsAttempted
- name: webhook
  endpoint:
    path: /v2/webhooks
    method: POST
    data_selector: response
    params:
      name: Call finished webhook
      resource: OutboundCall
      events:
      - Finished
      callback: http://callback-service.com/webhook
- name: text_broadcast
  endpoint:
    path: /v2/texts/broadcasts
    method: POST
    data_selector: id
- name: createTextBroadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: result
    params: {}
- name: createCallBroadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: id
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: id
- name: add_call_broadcast_batch
  endpoint:
    path: /v2/calls/broadcasts/{id}/batches
    method: POST
    data_selector: id
    params: {}
- name: add_call_broadcast_recipients
  endpoint:
    path: /v2/calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params: {}
- name: start_call_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params: {}
- name: calls_broadcasts
  endpoint:
    path: /calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      batchId: '5500030002'
      offset: 0
      limit: 10
      fields: items(fromNumber,toNumber,state,modified)
- name: texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params:
      inbound: true
      campaignId: 1003002
      limit: 10
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: schedules
- name: call_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    data_selector: response
    params:
      begin: '1473781817000'
      end: '1473781817000'
      fields: totalOutboundCount,billedAmount,callsAttempted
- name: webhook
  endpoint:
    path: /v2/webhooks
    method: POST
    data_selector: response
    params:
      name: Call finished webhook
      resource: OutboundCall
      events:
      - Finished
      callback: http://callback-service.com/webhook
- name: calls
  endpoint:
    path: /findCalls
    method: GET
    data_selector: result
    params:
      campaignId: 449060003
      batchId: 447060003
      fromNumber: '12135551126'
      toNumber: '12136666123'
      label: my label
      states: READY,FINISHED,INVALID
      results: LA
      inbound: false
      intervalBegin: 1473781817000
      intervalEnd: 1473781817000
      offset: 0
      limit: 10
      fields: items(id,fromNumber,toNumber,modified,finalCallResult)
- name: text_broadcasts
  endpoint:
    path: /v2/texts/broadcasts
    method: POST
    data_selector: id
- name: create_text_broadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: id
- name: create_call_broadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: id
- name: call_broadcast
  endpoint:
    path: /calls/createCallBroadcast
    method: POST
    data_selector: response
    params: {}
- name: call_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}/batches
    method: POST
    data_selector: id
    params:
      scrubDuplicates: true
- name: add_recipients
  endpoint:
    path: /v2/calls/broadcasts/{id}/recipients
    method: POST
    data_selector: items
    params: {}
- name: start_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}/start
    method: POST
    data_selector: null
    params: {}
- name: update_call_broadcast
  endpoint:
    path: /calls/broadcasts/{id}
    method: PUT
    data_selector: schedules
- name: find_texts
  endpoint:
    path: /texts
    method: GET
    data_selector: items
    params:
      inbound: 'true'
      campaignId: 1003002
      limit: 10
- name: get_call_broadcast_calls
  endpoint:
    path: /calls/broadcasts/{id}/calls
    method: GET
    data_selector: items
    params:
      batchId: 5500030002
      offset: 0
      limit: 10
      fields: items(fromNumber,toNumber,state,modified)
- name: call_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    data_selector: response
    params:
      begin: '1473781817000'
      end: '1473781817000'
      fields: totalOutboundCount,billedAmount,callsAttempted
- name: webhook
  endpoint:
    path: /v2/webhooks
    method: POST
    data_selector: response
    params:
      name: Call finished webhook
      resource: OutboundCall
      events:
      - Finished
      callback: http://callback-service.com/webhook
- name: call_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{broadcast_id}/stats
    method: GET
    data_selector: response
    params:
      fields: totalOutboundCount,billedAmount,callsAttempted
- name: send_texts
  endpoint:
    path: /v2/texts
    method: POST
    data_selector: items
- name: send_texts
  endpoint:
    path: /texts
    method: POST
    data_selector: items
- name: call_broadcast_stats
  endpoint:
    path: /v2/calls/broadcasts/{id}/stats
    method: GET
    data_selector: response
    params:
      begin: '1473781817000'
      end: '1473781817000'
      fields: totalOutboundCount,billedAmount,callsAttempted
- name: send_calls
  endpoint:
    path: /v2/calls
    method: POST
    data_selector: items
    params: {}
- name: texts
  endpoint:
    path: /v2/texts
    method: POST
    data_selector: items
- name: calls
  endpoint:
    path: /v2/calls
    method: POST
    data_selector: items
- name: poll
  endpoint:
    path: /polls
    method: GET
    data_selector: polls
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: id
- name: call_broadcast
  endpoint:
    path: /calls/broadcasts
    method: POST
    data_selector: response
    params: {}
- name: broadcast
  endpoint:
    path: /v2/calls/broadcasts
    method: POST
    data_selector: id
- name: calls
  endpoint:
    path: /calls
    method: GET
    data_selector: items
    params:
      id: 11646003,12646003,13776003
      campaignId: '449060003'
      batchId: '447060003'
      fromNumber: '12135551126'
      toNumber: '12136666123'
      label: my label
      states: READY,FINISHED,INVALID
      results: LA
      inbound: 'true'
      intervalBegin: '1473781817000'
      intervalEnd: '1473781817000'
      offset: '0'
      limit: '10'
      fields: items(id,fromNumber,toNumber,modified,finalCallResult)
- name: add_call_broadcast_batch
  endpoint:
    path: /v2/calls/broadcasts/{id}/batches
    method: POST
    data_selector: result
    params: {}
- name: calls
  endpoint:
    path: /v2/calls
    method: GET
    data_selector: items
    params:
      limit: 10
      offset: 0
- name: start_broadcast
  endpoint:
    path: /v2/calls/broadcasts/{id}/start
    method: POST
    data_selector: No Response
    params: {}
- name: find_calls
  endpoint:
    path: /v2/calls
    method: GET
    data_selector: items
    params:
      id: 11646003,12646003,13776003
      campaignId: '449060003'
      batchId: '447060003'
      fromNumber: '12135551126'
      toNumber: '12136666123'
      label: my label
      states: READY,FINISHED,INVALID
      results: LA
      inbound: 'true'
      intervalBegin: '1473781817000'
      intervalEnd: '1473781817000'
      offset: '0'
      limit: '10'
      fields: items(id,fromNumber,toNumber,modified,finalCallResult)
- name: calls
  endpoint:
    path: /v2/calls
    method: GET
    data_selector: items
    params:
      limit: 10
- name: call_tracking_config
  endpoint:
    path: /v2/numbers/leases/configs/{number}
    method: PUT
    data_selector: callTrackingConfig
    params: {}
- name: numbers
  endpoint:
    path: /numbers/leases/configs/{number}
    method: PUT
    data_selector: ivrInboundConfig
    params:
      configType: IVR
- name: IVR Configuration
  endpoint:
    path: /v2/numbers/leases/configs/{number}
    method: PUT
    data_selector: ivrInboundConfig
    params:
      configType: IVR
- name: calls
  endpoint:
    path: /calls
    method: GET
    data_selector: items
    params:
      id:
      - 11646003
      - 12646003
      - 13776003
      campaignId: 449060003
      batchId: 447060003
      fromNumber: '12135551126'
      toNumber: '12136666123'
      label: my label
      states: READY,FINISHED,INVALID
      results: LA
      inbound: false
      intervalBegin: 1473781817000
      intervalEnd: 1473781817000
      offset: 0
      limit: 10
      fields: items(id,fromNumber,toNumber,modified,finalCallResult)
- name: wait
  endpoint:
    path: /wait
    method: POST
    data_selector: value
    params: {}
- name: IVR
  endpoint:
    path: /api/v2/ivr
    method: POST
    data_selector: ivr_details
    params: {}
- name: amd
  endpoint:
    path: /api/amd
    method: POST
    data_selector: tag
    params: {}
- name: analytics
  endpoint:
    path: /analytics
    method: POST
    data_selector: analytics
    params: {}
- name: catch
  endpoint:
    path: /catch
    method: GET
    data_selector: records
- name: dialplan
  endpoint:
    path: /dialplan
    method: POST
    data_selector: dialplan
    params: {}
- name: DNC
  endpoint:
    path: /dnc
    method: POST
    data_selector: result
    params: {}
- name: dialplan
  endpoint:
    path: /dialplan
    method: POST
    data_selector: dtmf
- name: else
  endpoint:
    path: /api/else
    method: GET
    data_selector: records
    params: {}
- name: Get
  endpoint:
    path: /get
    method: GET
    data_selector: value
    params: {}
- name: goto
  endpoint:
    path: /goto
    method: GET
    data_selector: value
- name: GotoXML
  endpoint:
    path: /gotoxml
    method: GET
    data_selector: contents
    params: {}
- name: hangup
  endpoint:
    path: /hangup
    method: POST
    data_selector: None
    params: {}
- name: If
  endpoint:
    path: /api/if
    method: GET
    data_selector: nodes
    params: {}
- name: keypress
  endpoint:
    path: /keypress
    method: GET
    data_selector: keypress
    params: {}
- name: record
  endpoint:
    path: /record
    method: POST
    data_selector: recording
    params: {}
- name: setvar
  endpoint:
    path: /setvar
    method: POST
    data_selector: variable
    params: {}
- name: stash
  endpoint:
    path: /stash
    method: POST
    data_selector: value
    params: {}
- name: transfer
  endpoint:
    path: /transfer
    method: POST
    data_selector: attributes
    params: {}
- name: account
  endpoint:
    path: /me/account
    method: GET
    data_selector: account
- name: account
  endpoint:
    path: /me/account
    method: GET
    data_selector: account
    params: {}
- name: account
  endpoint:
    path: /me/getAccount
    method: GET
    data_selector: obj
- name: texts
  endpoint:
    path: /texts/sendTexts
    method: POST
    data_selector: obj
- name: account
  endpoint:
    path: /me/getAccount
    method: GET
    data_selector: account
    params: {}
- name: texts
  endpoint:
    path: /texts/sendTexts
    method: POST
    data_selector: response
    params: {}
- name: Call Broadcasts
  endpoint:
    path: /v2/call-broadcasts
    method: GET
    data_selector: broadcasts
- name: text
  endpoint:
    path: /text
    method: POST
    data_selector: ResourceReference
    params: {}
- name: query_texts
  endpoint:
    path: /text
    method: GET
    data_selector: ResourceList
    params: {}
- name: get_single_text
  endpoint:
    path: /text/{id}
    method: GET
    data_selector: Resource
    params: {}
- name: broadcast
  endpoint:
    path: /broadcast
    method: POST
    data_selector: ResourceReference
    params: {}
- name: query_broadcasts
  endpoint:
    path: /broadcast
    method: GET
    data_selector: ResourceList.Broadcast
    params:
      MaxResults: 1000
- name: get_single_broadcast
  endpoint:
    path: /broadcast/{id}
    method: GET
    data_selector: Resource.Broadcast
    params: {}
- name: update_broadcast
  endpoint:
    path: /broadcast/{id}
    method: PUT
- name: broadcast_control
  endpoint:
    path: /broadcast/{id}/control
    method: PUT
- name: create_contact_batch
  endpoint:
    path: /broadcast/{id}/batch
    method: POST
- name: get_all_broadcast_batches
  endpoint:
    path: /broadcast/{id}/batch
    method: GET
- name: broadcast_batch_control
  endpoint:
    path: /broadcast/batch/{id}/control
    method: PUT
- name: broadcast
  endpoint:
    path: /broadcast
    method: POST
    data_selector: ResourceReference
    params: {}
- name: create_broadcast
  endpoint:
    path: /api/v1/broadcasts
    method: POST
    data_selector: broadcastId
- name: query_broadcasts
  endpoint:
    path: /broadcasts
    method: GET
    data_selector: BroadcastQueryResult
    params:
      MaxResults: 1000
      FirstResult: 0
- name: broadcast
  endpoint:
    path: broadcast
    method: GET
    data_selector: ResourceList
    params:
      MaxResults: '100'
      FirstResult: '21'
      Type: VOICE
      Running: 'true'
- name: broadcast
  endpoint:
    path: /data/broadcast
    method: GET
    data_selector: Broadcast
    params: {}
- name: broadcast
  endpoint:
    path: /broadcast/{id}
    method: GET
    data_selector: Broadcast
    params:
      Id: long
- name: update_broadcast
  endpoint:
    path: /api/v1.1/broadcast/update
    method: POST
    data_selector: broadcast
    params: {}
- name: broadcast
  endpoint:
    path: /broadcast/{broadcastId}
    method: PUT
    data_selector: content
    params: {}
- name: broadcast_stats
  endpoint:
    path: broadcast/{broadcastId}/stats
    method: GET
    data_selector: BroadcastStats
    params: {}
- name: control_broadcast
  endpoint:
    path: /broadcast/{Id}/control
    method: PUT
    data_selector: content
    params: {}
- name: create_contact_batch
  endpoint:
    path: broadcast/{broadcastId}/batch
    method: POST
    data_selector: ResourceReference
    params: {}
- name: contact_batch
  endpoint:
    path: broadcast/{0}/batch
    method: GET
    params:
      MaxResults: '1000'
      FirstResult: '0'
      BroadcastId: '0'
- name: contact_batch
  endpoint:
    path: broadcast/batch/{contactBatchId}
    method: GET
    data_selector: ContactBatch
    params: {}
- name: broadcast_schedule
  endpoint:
    path: broadcast/schedule/{Id}
    method: DELETE
    data_selector: content
    params: {}
- name: control_contact_batch
  endpoint:
    path: broadcast/batch/{0}/control
    method: PUT
    data_selector: null
    params: {}
- name: broadcast_schedule
  endpoint:
    path: broadcast/{broadcastId}/schedule
    method: GET
    data_selector: BroadcastScheduleQueryResult
    params:
      MaxResults: 1000
      FirstResult: 0
      BroadcastId: ''
- name: broadcast_schedule
  endpoint:
    path: broadcast/schedule/{scheduleId}
    method: GET
    data_selector: BroadcastSchedule
    params:
      Id: scheduleId
- name: broadcast_schedule
  endpoint:
    path: /broadcast/{broadcastId}/schedule
    method: POST
    data_selector: ResourceReference
    params: {}
- name: call
  endpoint:
    path: /call
    method: POST
    data_selector: ResourceReference
    params: {}
- name: query_calls
  endpoint:
    path: /call
    method: GET
    data_selector: ResourceList.Call
    params: {}
- name: get_single_call
  endpoint:
    path: /call/{id}
    method: GET
    data_selector: Resource.Call
    params: {}
- name: call
  endpoint:
    path: /call
    method: POST
    data_selector: ResourceReference
    params: {}
- name: calls
  endpoint:
    path: /call
    method: GET
    data_selector: CallQueryResult
    params:
      MaxResults: '1000'
      FirstResult: '0'
- name: get_call
  endpoint:
    path: /call/{callId}
    method: GET
    data_selector: Call
    params: {}
- name: sound
  endpoint:
    path: call/sound
    method: POST
    data_selector: ''
    params: {}
- name: sound_meta
  endpoint:
    path: call/sound
    method: GET
    data_selector: SoundMetaQueryResult
    params:
      MaxResults: '1000'
      FirstResult: '0'
- name: sound_data
  endpoint:
    path: /api_1_1_call_service_get_sound_data
    method: GET
    data_selector: SoundData
    params: {}
- name: recording_data
  endpoint:
    path: /api_1_1_call_service_get_recording_data
    method: GET
    data_selector: RecordingData
    params: {}
- name: send_text
  endpoint:
    path: text
    method: POST
    data_selector: ResourceReference
    params: {}
- name: auto_reply
  endpoint:
    path: text/auto-reply
    method: POST
    data_selector: ResourceReference
    params: {}
- name: send_text
  endpoint:
    path: text
    method: POST
    data_selector: ResourceReference
    params: {}
- name: personalized_message
  endpoint:
    path: broadcast
    method: POST
    data_selector: ResourceReference
    params: {}
- name: text
  endpoint:
    path: text
    method: GET
    data_selector: TextQueryResult
    params:
      MaxResults: '1000'
      FirstResult: '0'
- name: GetText
  endpoint:
    path: text/{Id}
    method: GET
    data_selector: Text
    params:
      Id: long
- name: CreateAutoReply
  endpoint:
    path: text/auto-reply
    method: POST
    data_selector: ResourceReference
- name: auto_reply
  endpoint:
    path: text/auto-reply
    method: GET
    data_selector: AutoReplyQueryResult
    params:
      MaxResults: '1000'
      FirstResult: '0'
- name: auto_reply
  endpoint:
    path: text/auto-reply/{Id}
    method: GET
    data_selector: AutoReply
    params:
      Id: long
- name: delete_auto_reply
  endpoint:
    path: text/auto-reply/{Id}
    method: DELETE
    data_selector: response
    params: {}
- name: contact
  endpoint:
    path: /contact
    method: POST
    data_selector: ResourceReference
    params: {}
- name: contact_list
  endpoint:
    path: /contact/list
    method: POST
    data_selector: ResourceReference
    params: {}
- name: contact
  endpoint:
    path: contact
    method: GET
    data_selector: ResourceList
    params:
      MaxResults: '1000'
      FirstResult: '0'
- name: contact
  endpoint:
    path: contact
    method: PUT
    data_selector: Contact
    params: {}
- name: remove_contacts
  endpoint:
    path: contact/{contactId}
    method: DELETE
    data_selector: null
    params: {}
- name: contact
  endpoint:
    path: contact/{id}
    method: GET
    data_selector: Contact
    params: {}
- name: contact_history
  endpoint:
    path: /contact/{contactId}/history
    method: GET
    data_selector: ContactHistory
    params:
      MaxResults: '1000'
      FirstResult: '0'
- name: contact_list
  endpoint:
    path: /contact/list
    method: POST
    data_selector: ResourceReference
    params: {}
- name: contact_list
  endpoint:
    path: contact/list
    method: GET
    data_selector: ContactListQueryResult
    params:
      MaxResults: '1000'
      FirstResult: '0'
- name: contact_list
  endpoint:
    path: contact/list/{Id}
    method: GET
    data_selector: Resource
    params:
      Id: long
- name: contact_list
  endpoint:
    path: contact/list/{Id}
    method: DELETE
    data_selector: none
    params:
      Id: long
- name: contact
  endpoint:
    path: contact/list/{ContactListId}/add
    method: POST
    data_selector: Contact
    params: {}
- name: remove_contacts_from_list
  endpoint:
    path: contact/list/{ContactListId}/remove
    method: POST
    data_selector: response
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: ResourceReference
    params: {}
- name: get_all_subscriptions
  endpoint:
    path: /subscription
    method: GET
    data_selector: ResourceList.Subscription
    params:
      MaxResults: 1000
- name: get_single_subscription
  endpoint:
    path: /subscription/{id}
    method: GET
    data_selector: Resource.Subscription
    params:
      Id: ''
- name: update_subscription
  endpoint:
    path: /subscription/{id}
    method: PUT
    data_selector: ''
    params:
      Id: ''
- name: delete_subscription
  endpoint:
    path: /subscription/{id}
    method: DELETE
    data_selector: ''
    params:
      Id: ''
- name: subscription
  endpoint:
    path: /subscription
    method: POST
    data_selector: ResourceReference
    params: {}
- name: subscription
  endpoint:
    path: subscription
    method: GET
    data_selector: SubscriptionQueryResult
    params:
      MaxResults: '1000'
      FirstResult: '0'
- name: subscription
  endpoint:
    path: /subscription/{id}
    method: GET
    data_selector: Subscription
    params: {}
- name: subscription
  endpoint:
    path: /subscription/{id}
    method: PUT
    data_selector: UpdateSubscription
    params: {}
- name: subscription
  endpoint:
    path: subscription/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: subscription
  endpoint:
    path: /api/1.1/subscriptions
    method: POST
    data_selector: TextNotification
- name: query_regions
  endpoint:
    path: /number/regions
    method: GET
    data_selector: RegionQueryResult
    params:
      MaxResults: '1000'
      FirstResult: '0'
- name: number
  endpoint:
    path: number
    method: GET
    data_selector: NumberQueryResult
    params:
      MaxResults: '1000'
      FirstResult: '0'
- name: keyword
  endpoint:
    path: number/keyword
    method: GET
    data_selector: KeywordQueryResult
    params:
      MaxResults: '1000'
      FirstResult: '0'
- name: Configure Number
  endpoint:
    path: /number/{number}
    method: PUT
    data_selector: content
    params: {}
- name: number
  endpoint:
    path: /number/{PhoneNumber}
    method: GET
    data_selector: Number
    params: {}
- name: search_available_numbers
  endpoint:
    path: number/keyword
    method: GET
    data_selector: NumberQueryResult
    params: {}
- name: search_available_keywords
  endpoint:
    path: number/keyword/search
    method: GET
    data_selector: KeywordQueryResult
    params: {}
- name: number_order
  endpoint:
    path: number/order
    method: POST
    data_selector: null
    params: {}
- name: number_order
  endpoint:
    path: number/order/{Id}
    method: GET
    data_selector: NumberOrder
    params:
      Id: long
- name: release_number
  endpoint:
    path: number/release
    method: PUT
    data_selector: content
    params: {}
- name: label_broadcast
  endpoint:
    path: label/broadcast/{broadcastId}
    method: POST
    data_selector: null
    params: {}
- name: unlabel_broadcast
  endpoint:
    path: /label/broadcast/{Id}
    method: DELETE
    data_selector: content
    params: {}
- name: label_number
  endpoint:
    path: /label/number/{number}
    method: POST
    data_selector: content
    params: {}
- name: unlabel_number
  endpoint:
    path: /label/number/{number}
    method: DELETE
    data_selector: content
    params: {}
- name: label
  endpoint:
    path: /label
    method: GET
    data_selector: Label
    params:
      MaxResults: '1000'
      FirstResult: '0'
- name: label
  endpoint:
    path: label
    method: DELETE
    data_selector: ''
    params:
      LabelName: MyLabel
notes:
- URL that webhook will send POST to on resource event trigger
- Uses basic authentication with username and password.
- SSL certificate verification can be disabled for webhooks.
- Phone numbers must be in E.164 format (11-digit)
- Campaign can be created without contacts but they must be added later
- The API requires basic authentication with username and password.
- Requires basic authentication with api-login and api-password
- Webhook callbacks can be sent to unknown SSL endpoints if enabled.
- Webhook secret token is used to verify callback POST is coming from CallFire.
- Webhook triggers only once if singleUse is set to true.
- Webhook secret token is used as a signing key to HmacSHA1 hash of JSON payload.
- Uses Basic Auth with username and password.
- Requires valid API credentials for authentication.
- Ensure that the phone numbers are in E.164 format.
- Uses basic authentication with username and password
- 'External systems for contact creation: NATION_BUILDER, SALES_FORCE_CONTACTS, SALES_FORCE_LEADS,
  SALES_FORCE_REPORTS, ZOHO, NETSUITE, MAIL_CHIMP.'
- Authentication is done using Basic Auth with username and password.
- Response for get call recording contains binary data with content type 'audio/mpeg'.
- Some endpoints require specific fields to be passed in the request.
- The API uses basic authentication with username and password.
- Requires API login and password for authentication
- Use E.164 format for phone numbers.
- Use basic authentication with username and password
- CSV file is required for creating contact lists from file
- Uses Basic Authentication with username and password.
- Webhook requires event setup on resource trigger.
- Ensure to use E.164 format for phone numbers.
- The API has rate limits and may return errors if limit exceeded.
- Authentication credentials should be base64 encoded
- Specify whether to immediately start this campaign (not required)
- Turns on strict validation for recipients
- Phone number in E.164 format (11-digit) or short code for text.
- Only values from the specified list can be used as external system parameter in
  contact creation.
- Response contains binary data for recordings.
- Ensure to provide the correct id and name parameters.
- Default limit for pagination is 100.
- Webhook events include STARTED, STOPPED, FINISHED, etc.
- Webhook secret token is used as a signing key to HmacSHA1 hash of json payload.
- Requires valid API login and password for authentication.
- Campaign can be created without contacts but will need contacts to be added for
  use.
- Time zone should be specified in the request body
- Pattern must be 3 char long and should end with '*'
- Limit fields received in response
- Webhook triggers only once if singleUse is set to true
- A parameter which allows the webhook to send requests to unknown ssl endpoints (ssl
  certificate verification is disabled)
- Requires valid API login and password for authentication
- Content type for mp3 recordings is 'audio/mpeg'
- Phone numbers must be in E.164 format for sound recording
- Uses Basic Auth with username and password
- Phone number in E.164 format (11-digit).
- Webhook callbacks will send POST requests to the specified callback URL.
- Webhook secret token is used as a signing key to verify callbacks.
- Webhook can send requests to unknown SSL endpoints if enabled.
- Campaigns can be created without contacts but contacts must be added later.
- Requires API login and password for authentication.
- Limit fields received in response using the 'fields' parameter.
- Text auto replies can be set up for keywords or specific numbers.
- Default limit for paged responses is 100.
- Requires basic authentication with username and password.
- Requires setup of connected app in CallFire.
- The campaign can be created without contacts and bare minimum configuration, but
  contacts will have to be added further on to use the campaign.
- Some fields like 'lastModified' are read-only.
- Fields can be limited in responses using the 'fields' parameter.
- The API uses basic authentication.
- The API supports basic authentication using username and password.
- Ensure the phone number is in E.164 format when adding sound via call.
- Deleted contacts can be retrieved but will be marked as deleted.
- Keyword should consist of uppercase and lowercase letters and numbers.
- Number must be in E.164 format (11-digit).
- The API supports pagination, with default values for limit and offset.
- Use 'campaignId=0' parameter to query for all texts sent through the POST /texts
  API.
- Pattern for toll-free numbers must end with '*' and be 3 characters long.
- Requires API login and password for access.
- The API requires an API key for authentication.
- Requires authentication with username and password.
- File uploads must be in binary form.
- For authentication use api credentials.
- 'Phone number in E.164 format (11-digit). Example: 12132000384'
- Requires setup of API credentials
- Available media formats include bmp, gif, jpg, m4a, mp3, mp4, png, wav
- Basic authentication is used with username and password.
- Auto reply messages can be set up for specific keywords.
- Webhook triggers can be set for various events such as STARTED, STOPPED, FINISHED.
- Uses OAuth2 with refresh token — requires setup of connected app in CallFire
- Uses HTTP Basic Authentication — requires generated username/password API credential.
- API allows sending individual text messages to up to 1000 recipients.
- The dialplanXml parameter must be included when sending IVR calls.
- Send Texts API supports up to 1000 recipients per request.
- Send Calls API supports up to 10 recipients per request.
- Another way of receiving information about sent/received calls or texts is to use
  CallFire Webhooks.
- You can create a broadcast with no contacts and add contacts later.
- Ensure to encode XML strings correctly to avoid 400 Bad Request response.
- The API requires basic authentication using a username and password.
- By default, all messages go out from the shared shortcode 67076.
- You can create a broadcast with no contacts and add them later.
- Ensure to handle API rate limits.
- Messages go out from the shared shortcode 67076 unless a dedicated number is used.
- User must ensure proper formatting of the XML dial plan string.
- Ensure to encode XML string properly for IVR requests.
- Ensure to handle duplicate phone numbers when adding recipients.
- Ensure to use valid Caller ID number.
- Dialplan XML must be properly encoded.
- API requires basic authentication using username and password.
- You can schedule a broadcast upon creation or after it was created.
- Webhook requests are signed using HmacSHA1 with a secret token
- Webhook requests are signed with HmacSHA1 hash using a secret token.
- Basic authentication using username and password
- CallFire supports .wav and .mp3 formats for sound files.
- If text exceeds length of 160 characters, CallFire will send a text as multiple
  messages.
- You can schedule a text broadcast, set local time restrictions on when the messages
  should go out, or start it right after creation.
- Create Text Broadcast API allows sending messages to multiple recipients with various
  configurations.
- Refer to the API documentation for accepted parameters and responses.
- All messages go out from the shared shortcode 67076.
- Supports sending voice messages with a text-to-speech option.
- Allows scheduling of broadcasts based on local time.
- IVR XML structure must be properly formatted.
- Users can add either phone numbers or existing contacts to a broadcast.
- 'The Messaging API is divided into two parts: calls and texts.'
- Broadcasts support multiple schedule objects per single instance
- Each schedule can be turned on and off
- Ensure to set validated Caller ID number.
- Uses API key for authentication.
- Users can add contacts to a broadcast by phone number or existing contact IDs.
- IVR Broadcast requires setting up an XML dialplan.
- Requires API key for authentication.
- CallFire creates contacts on the fly from the recipients' numbers.
- Some API calls require authentication via API key.
- Default shared short code is 67076.
- Recipient attributes are available only to a single Call/Text action.
- Users can add contacts on the fly from recipients' numbers.
- Charity Campaign requires specific parameters for scheduling and retry configuration.
- IVR Broadcasts can be sent to your contacts, providing live call recipients with
  multiple transfer options and/or the ability to collect their responses.
- CallFire API requires valid Caller ID number to send calls.
- Schedule campaigns according to recipient's time zone.
- Users can add contacts by phone number or existing contact ID.
- Webhooks are used to receive notifications from the CallFire platform.
- Allows sending voice messages to a list of recipients.
- API allows only basic authentication with username and password.
- Schedule campaigns to run on specific days and times.
- Webhooks allow you to receive notifications for events.
- Default text broadcast sends out text messages from CallFire's shared shortcode
  67076.
- Uses Basic Auth for authentication
- Both Send Texts and Send Calls APIs use default broadcast to send out outgoing messages.
- Uses IVR technology for conducting polls.
- Set start parameter to run broadcast immediately
- IVR Broadcasts send an IVR call to each recipient added to the broadcast.
- Users can add only phone numbers to a broadcast or existing contacts.
- Check Call.records.questionResponses for stored data
- Requires setup of connected app in API
- The IVR configuration includes a dialplan in XML format.
- Requires an API login and password for authentication
- Check Call.records.questionResponses list for stored data
- Inserts a pause into the IVR dial plan.
- CallFire XML supports true case-sensitivity.
- Only use this tag for outbound campaigns.
- The system will determine whether the answering line is live or an answering machine
  and react accordingly.
- Requires Google Analytics Key
- Your Domain/Site is mandatory
- The goto attribute within this tag will execute when the defined value occurs.
- This is the root tag required for all CallFire XML campaigns.
- The tag allows you to play touch-tones as a part of the dial plan.
- A <menu> tag requires at least one <keypress> tag.
- Users who enter nothing, or an undefined number, will loop back to the top.
- Requires setup of connected app in CallFire
- You can insert a VTML specification into the play tag in order to slow down the
  text to speech.
- This tag creates a recording, either as input to a prompt, or as a recording of
  the entire phone call.
- UpdateBroadcast doesn't work on the REST Documentation. This issue was reported
  on the previous project. This should be fixed.
- 'Max number of results to return limited to 1000 (default: 1000)'
- 'Start of next result set (default: 0)'
- This operation lists information about individual Broadcast Schedule attached to
  a Broadcast.
- All api endpoints return response in XML format by default, to get response in JSON
  put .json at the end of API path.
- Sending a call requires at least a ToNumber and a sound id or an IVR.
- The returned broadcastId can be passed to QueryCalls to get the state of the call
  actions in a campaign.
- General usage is to start a call campaign using SendCall, then pass the returned
  broadcastId to QueryCalls to determine the callIds of the call actions created.
- Only returns metadata, not the actual sound data.
- All API endpoints return response in XML format by default, to get response in JSON
  put .json at the end of API path.
- 'Limitation: max number of subscriptions - 10.000 per account.'
- Gets an existing individual subscription by id
- 'Notification format can be one of the following: XML, JSON, EMAIL'
- This operation allows updating/editing the configuration of a number, including
  ENABLE or DISABLE, and/or turn call recording on.
- Get information about a single number owned by your account using the 11 digit E.164
  format.
- Creating a number order is an asynchronous process.
- The GetNumberOrder operation must be polled (no more than once per second) until
  the order is in a terminal state (FINISHED or ERRORED).
- Removes a label from a single number
errors:
- 400 BAD REQUEST - The request was formatted improperly
- 401 UNAUTHORIZED - API Key missing or invalid
- 403 FORBIDDEN - Insufficient permissions
- 404 NOT FOUND - The resource requested does not exist
- 500 INTERNAL ERROR - We had an error! Sorry about that.
- '401 Unauthorized: Check API credentials'
- '404 Not Found: Ensure resource ID is correct'
- '400 BAD REQUEST: The request was formatted improperly'
- '401 UNAUTHORIZED: API Key missing or invalid'
- '403 FORBIDDEN: Insufficient permissions'
- '404 NOT FOUND: The resource requested does not exist'
- '500 INTERNAL ERROR: We had an error! Sorry about that.'
- 'BAD_REQUEST: Check if the phone numbers are valid'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck credentials'
- 'BAD_REQUEST: Invalid request parameters.'
- 'UNAUTHORIZED: Invalid credentials provided.'
- 'NOT_FOUND: The specified broadcast does not exist.'
- 'Unauthorized: Recheck API credentials'
- '401 Unauthorized: Recheck login credentials'
- '404 Not Found: Check if the webhook ID exists'
- '401 Unauthorized: Recheck API login credentials'
- '404 Not Found: The specified resource does not exist.'
- '400 Bad Request: The request was invalid.'
- '400 BAD_REQUEST: Invalid request parameters.'
- '401 UNAUTHORIZED: Invalid API credentials.'
- '404 NOT_FOUND: Broadcast not found.'
- 'BAD_REQUEST: Ensure all required fields are included in the request'
- '401 Unauthorized: Check if the credentials are correct'
- 'BAD_REQUEST: Check request format and parameters'
- 'BAD_REQUEST: Invalid request parameters'
- 'UNAUTHORIZED: Invalid API credentials'
- 'NOT_FOUND: The requested resource does not exist'
- '401 Unauthorized: Recheck API credentials'
- '404 Not Found: Check if the resource exists'
- '401 Unauthorized: Check credentials or token.'
- '404 Not Found: The requested resource does not exist.'
- 'UNAUTHORIZED: Invalid username or password.'
- 'NOT_FOUND: The requested resource could not be found.'
- '401 Unauthorized: Check your login credentials'
- '400 Bad Request: Review the request body format'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck API credentials.'
- 'BAD_REQUEST: Check input parameters and their values.'
- 'UNAUTHORIZED: Ensure correct API credentials.'
- 'NOT_FOUND: The specified resource does not exist.'
- 'UNAUTHORIZED: Authentication credentials are invalid'
- '401 Unauthorized: Check your API credentials.'
- '404 Not Found: Verify the resource exists.'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Invalid credentials or missing authentication'
- '400 Bad Request: Invalid request parameters'
- '404 Not Found: Resource not found'
- '404 Not Found: The specified contact list does not exist.'
- '404 Not Found: Check if the webhook ID is correct'
- '401 Unauthorized: Verify the API credentials'
- '401 Unauthorized: Recheck API credentials or token expiration'
- '400 BAD_REQUEST: Check your request parameters.'
- '401 Unauthorized: Invalid login credentials.'
- 'UNAUTHORIZED: Incorrect login credentials'
- 'NOT_FOUND: Broadcast ID does not exist'
- '400 Bad Request: Invalid parameters or request body.'
- '401 Unauthorized: Invalid credentials provided.'
- '404 Not Found: The specified webhook does not exist.'
- '401 Unauthorized: Recheck login credentials.'
- '404 Not Found: The specified webhook ID does not exist'
- '400 Bad Request: The request body is invalid'
- '400: BAD REQUEST - The request was formatted improperly'
- '401: UNAUTHORIZED - API Key missing or invalid'
- '403: FORBIDDEN - Insufficient permissions'
- '404: NOT FOUND - The resource requested does not exist'
- '500: INTERNAL ERROR - We had an error! Sorry about that.'
- 'BAD_REQUEST: Invalid request format or parameters'
- 'NOT_FOUND: Resource not found'
- 'UNAUTHORIZED: Invalid authentication credentials'
- 'BAD_REQUEST: Invalid request format'
- 'UNAUTHORIZED: Invalid credentials provided'
- '400 Bad Request: Check parameters for validity'
- '401 Unauthorized: Check your API credentials'
- '404 Not Found: Resource not found for the given endpoint'
- '401 Unauthorized: Recheck API credentials or token.'
- '400 Bad Request: Check the format of the request body.'
- '404 Not Found: Ensure the webhook ID is correct.'
- '400 Bad Request: Validate the request body format.'
- '401 Unauthorized: Recheck API login or password'
- '401 Unauthorized: Check API login credentials'
- 'BAD_REQUEST: Check if the phone numbers are correctly formatted.'
- 204 - No Content
- 401 Unauthorized - Recheck credentials
- 400 Bad Request - Check request parameters
- '400 Bad Request: Ensure all required fields are included in the request.'
- 'BAD_REQUEST: Check request parameters'
- '401 Unauthorized: Recheck login credentials or API key'
- '404 Not Found: Ensure the resource exists'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Check API login and password.'
- '400 BAD_REQUEST: Invalid request parameters'
- '401 UNAUTHORIZED: Invalid credentials'
- '404 NOT_FOUND: Resource not found'
- '401 Unauthorized: Check API credentials.'
- '404 Not Found: Verify resource ID.'
- 'BAD_REQUEST: Check the request parameters for correctness.'
- 'NOT_FOUND: The specified resource was not found.'
- 'UNAUTHORIZED: Check your authentication credentials.'
- '400 BAD_REQUEST: Invalid request format.'
- '401 Unauthorized: Check credentials.'
- '404 Not Found: The specified resource could not be found.'
- '401 Unauthorized: Check your username and password.'
- '400 Bad Request: Ensure all required fields are included.'
- '401 Unauthorized: Check your API login and password.'
- '400 Bad Request: Verify request parameters and body format.'
- '400 Bad Request: Check the request parameters.'
- 'BAD_REQUEST: Check request parameters for validity.'
- 'UNAUTHORIZED: Check authentication credentials.'
- 'BAD_REQUEST: Check request parameters or body.'
- 'BAD_REQUEST: Check request parameters for correctness'
- 'UNAUTHORIZED: Check API key or authentication method'
- 'NOT_FOUND: Verify the resource ID exists'
- '400 BAD_REQUEST: Check request parameters.'
- '401 UNAUTHORIZED: Check API credentials.'
- '404 NOT_FOUND: Verify the requested resource.'
- '401 Unauthorized: Invalid credentials'
- '500 Internal Server Error: Server encountered an error processing the request'
- '404 Not Found: Check if the contact list ID is correct.'
- '400 Bad Request: Check the request body or parameters.'
- '404 Not Found: Verify resource ID or path'
- '400 Bad Request: Check request parameters'
- '400 BAD_REQUEST: Invalid request'
- '401 Unauthorized: Check your credentials'
- 'BAD_REQUEST: Validation error occurred.'
- 'UNAUTHORIZED: Authentication failed.'
- 'FORBIDDEN: Access denied.'
- '400 Bad Request: Ensure required parameters are provided.'
- '404 Not Found: The specified webhook ID does not exist.'
- '400 Bad Request: Invalid input parameters.'
- '401 Unauthorized: Recheck generated username/password'
- '400 Bad Request: Check phone numbers and message format.'
- '401 Unauthorized: Check your credentials.'
- '400 Bad Request: Ensure all required parameters are provided.'
- '400 Bad Request: Check for malformed requests or invalid parameters.'
- '400 Bad Request: Check your request format and required fields.'
- '400 Bad Request: Check the request body for errors.'
- '401 Unauthorized: Invalid API credentials.'
- '404 Not Found: Check the endpoint or resource ID.'
- '400 Bad Request: Ensure proper encoding of XML string.'
- '400 Bad Request: Check the request format and parameters.'
- '400 Bad Request: Check the request format and required fields.'
- '401 Unauthorized: Verify API login credentials.'
- '404 Not Found: Ensure the broadcast ID exists.'
- '400 Bad Request: Check your request structure and parameters.'
- 'request error: Throttle API calls or reduce frequency'
- 200 OK - No Response
- '401 Unauthorized: Check your login credentials.'
- '404 Not Found: Verify the broadcast ID.'
- '400 Bad Request: Invalid request format'
- 'File upload error: Appropriate error message will be returned if upload fails.'
- 200 Success - The request has been finished successfully.
- 400 Bad Request - This error code has a lot of possible causes, such as an incorrect
  parameter, an invalid request payload or incorrect Content-Type header.
- 401 Not Authorized - The username or password is incorrect. Perhaps the login has
  expired. Please verify account login credentials.
- 404 Not Found - The ID or Number that you are trying to edit or get was not found;
  you should check to see if it is correct.
- 500 Internal Error - CallFire internal error.
- '400 Bad Request: Check the request parameters and body format.'
- '401 Unauthorized: Verify API credentials.'
- '403 Forbidden: Access to the requested resource is denied.'
- '401 Unauthorized: Check your username and password'
- '401 Unauthorized: Check login credentials'
- '400 Bad Request: Validate input data structure.'
- '400 Bad Request: Check the request body for correct format.'
- '404 Not Found: Ensure the broadcast ID is correct.'
- '400 Bad Request: Validate request body structure'
- '401 Unauthorized: Recheck API key or credentials.'
- '401 Unauthorized: Recheck API login credentials.'
- '404 Not Found: Ensure the broadcast ID is valid.'
- '400 Bad Request: Check the request payload for errors.'
- '404 Not Found: Check broadcast ID'
- '400 Bad Request: Verify request parameters.'
- '401 Unauthorized: Check login credentials.'
- '400 Bad Request: Review the request payload for errors'
- '401 Unauthorized: Check API login credentials.'
- '400 Bad Request: Validate request parameters.'
- '401 Unauthorized: Invalid credentials.'
- '404 Not Found: The specified broadcast id does not exist.'
- '400 Bad Request: Invalid request payload.'
- 'INVALID_CALLER_ID: Check that the Caller ID is valid.'
- 'CAMPAIGN_NOT_ACTIVE: Ensure the campaign is active before broadcasting.'
- '500 Internal Server Error: An unexpected error occurred. Please retry.'
- '401 Unauthorized: Check your API login and password'
- '400 Bad Request: Verify the structure of your request payload'
- '400 Bad Request: Check request body format or required fields'
- '401 Unauthorized: Check username and password'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check API login and password'
- '400 - BadRequestException: The request was formatted improperly'
- '401 - UnauthorizedException: API Key missing or invalid'
- '403 - AccessForbiddenException: Insufficient permissions'
- '404 - ResourceNotFoundException: The resource requested does not exist'
- '500 - InternalServerErrorException: We had an error! Sorry about that.'
- Bad Request
- Rate Limit Reached
- Unauthorized
- '400: Bad Request'
- '429: Rate Limit Reached'
- '401: Unauthorized'
- '201 Created: Successfully created resource'
- '200 OK: Successfully retrieved resource'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '204: Broadcast''s Status has been edited successfully'
- '204: BroadcastSchedule has been deleted successfully'
- '204: ContactBatch''s Status has been edited successfully'
- 'UNAUTHORIZED: Check your login credentials'
- '400: NO_CONTACTS'
- '403: Authenticated user lacks API privileges'
- '400: account suspended'
- '400, bad request: This error code has a lot of possible causes, such as an account
  error or an incorrect parameter. First of all, check that all parameters have the
  correct data or data type. If the error persists, contact CallFire support.'
- '401, not authorized: The username or password has some error. Perhaps the login
  has expired. Make sure that you valid account.'
- '404, not found: The ID or Number that you are trying to edit or get was not found;
  you should check to see if it is correct.'
- '500, internal error: This error is not caused by the user, but is CallFire''s.
  Please contact support.'
- '400: bad request - check parameters'
- '401: not authorized - check username/password'
- '404: not found - check ID or Number'
- '500: internal error - contact support'
- '400, bad request: Check that all parameters have the correct data or data type.'
- '401, not authorized: Ensure that the username or password is correct.'
- '404, not found: Check if the ID or Number is correct.'
- '500, internal error: Contact support.'
- '400: bad request'
- '401: not authorized'
- '404: not found'
- '500: internal error'
- '204 No content: Successfully processed request with no response body'
- '400: Invalid parameter'
- '204: Contact has been deleted successfully'
- '404: contact not found'
- '400: Cannot parse number: For input string: "ABC"'
- '400: No contacts provided'
- '400: Cannot parse number: For input string: "1234ASD"'
- '404: Contact list doesn''t exist'
- '204: No content'
- '404: contact list does not exist'
- '400: Cannot parse number'
- '400: No contacts information was provided'
- '204: Contacts removed successfully'
- '201 Created: Subscription successfully created'
- '200 OK: Successfully retrieved subscription'
- '204 No content: Subscription successfully updated or deleted'
- '204: Subscription has been updated successfully'
- '204: Subscription deleted successfully'
- '204: Number has been configured successfully.'
- '204: Number has been released successfully'
- '204: The Label has been created successfully'
- '204: Label has been removed from a single broadcast successfully'
- '204: Label has been created successfully'
- '204: Label has been deleted successfully'
auth_info:
  mentioned_objects:
  - webhook.token
  - OAuth
  - CallfireClient
  - ApiClient
client:
  base_url: https://api.callfire.com/v2
  auth:
    type: basic
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
  paginator:
    type: offset
    page_size_param: limit
    default_page_size: 100
source_metadata: null
