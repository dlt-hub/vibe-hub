resources:
- name: export_html
  endpoint:
    path: /export/html
    method: POST
    data_selector: result
    params: {}
- name: export_script
  endpoint:
    path: /export/script
    method: POST
    data_selector: result
    params: {}
- name: export_markdown
  endpoint:
    path: /export/markdown
    method: POST
    data_selector: result
    params: {}
- name: export_ipynb
  endpoint:
    path: /export/ipynb
    method: POST
    data_selector: result
    params: {}
- name: export_pdf
  endpoint:
    path: /export/pdf
    method: POST
    data_selector: result
    params: {}
- name: export_wasm
  endpoint:
    path: /export/html-wasm
    method: POST
    data_selector: result
    params: {}
- name: Export to static HTML
  endpoint:
    path: /guides/exporting/#export-to-static-html
    method: GET
- name: Export to a Python script
  endpoint:
    path: /guides/exporting/#export-to-a-python-script
    method: GET
- name: Export to markdown
  endpoint:
    path: /guides/exporting/#export-to-markdown
    method: GET
- name: Export to Jupyter notebook
  endpoint:
    path: /guides/exporting/#export-to-jupyter-notebook
    method: GET
- name: Exporting to PDF, slides, or rst
  endpoint:
    path: /guides/exporting/#exporting-to-pdf-slides-or-rst
    method: GET
- name: Export to WASM-powered HTML
  endpoint:
    path: /guides/exporting/#export-to-wasm-powered-html
    method: GET
- name: export_html
  endpoint:
    path: /export/html
    method: POST
    data_selector: result
    params: {}
- name: export_script
  endpoint:
    path: /export/script
    method: POST
    data_selector: result
    params: {}
- name: export_markdown
  endpoint:
    path: /export/markdown
    method: POST
    data_selector: result
    params: {}
- name: export_ipynb
  endpoint:
    path: /export/ipynb
    method: POST
    data_selector: result
    params: {}
- name: export_pdf
  endpoint:
    path: /export/pdf
    method: POST
    data_selector: result
    params: {}
- name: Export to static HTML
  endpoint:
    path: /guides/exporting/#export-to-static-html
    method: GET
- name: Export to a Python script
  endpoint:
    path: /guides/exporting/#export-to-a-python-script
    method: GET
- name: Export to markdown
  endpoint:
    path: /guides/exporting/#export-to-markdown
    method: GET
- name: Export to Jupyter notebook
  endpoint:
    path: /guides/exporting/#export-to-jupyter-notebook
    method: GET
- name: Exporting to PDF, slides, or rst
  endpoint:
    path: /guides/exporting/#exporting-to-pdf-slides-or-rst
    method: GET
- name: Export to WASM-powered HTML
  endpoint:
    path: /guides/exporting/#export-to-wasm-powered-html
    method: GET
- name: Embed marimo outputs in HTML using Islands
  endpoint:
    path: /guides/exporting/#embed-marimo-outputs-in-html-using-islands
    method: GET
- name: export_html
  endpoint:
    path: /guides/exporting/#export-to-static-html
    method: GET
- name: export_script
  endpoint:
    path: /guides/exporting/#export-to-a-python-script
    method: GET
- name: export_markdown
  endpoint:
    path: /guides/exporting/#export-to-markdown
    method: GET
- name: export_ipynb
  endpoint:
    path: /guides/exporting/#export-to-jupyter-notebook
    method: GET
- name: export_pdf
  endpoint:
    path: /guides/exporting/#exporting-to-pdf-slides-or-rst
    method: GET
- name: export_wasm_html
  endpoint:
    path: /guides/exporting/#export-to-wasm-powered-html
    method: GET
- name: notebooks
  endpoint:
    path: /notebooks
    method: GET
    data_selector: notebooks
    params: {}
- name: embedding
  endpoint:
    path: /guides/publishing/embedding/
    method: GET
- name: github_pages
  endpoint:
    path: /guides/publishing/github_pages/
    method: GET
- name: cloudflare
  endpoint:
    path: /guides/publishing/cloudflare/
    method: GET
- name: online_playground
  endpoint:
    path: /guides/publishing/playground/
    method: GET
- name: community_cloud
  endpoint:
    path: /guides/publishing/community_cloud/
    method: GET
- name: self_host_wasm
  endpoint:
    path: /guides/publishing/self_host_wasm/
    method: GET
- name: view_outputs_on_github
  endpoint:
    path: /guides/publishing/view_outputs_on_github/
    method: GET
- name: deploy
  endpoint:
    path: /guides/publishing/deploy/
    method: GET
- name: with_mkdocs
  endpoint:
    path: /guides/publishing/mkdocs/
    method: GET
- name: with_quarto
  endpoint:
    path: /guides/publishing/quarto/
    method: GET
- name: health
  endpoint:
    path: /health
    method: GET
    data_selector: status
- name: healthz
  endpoint:
    path: /healthz
    method: GET
    data_selector: status
- name: status
  endpoint:
    path: /api/status
    method: GET
    data_selector: status
- name: state
  endpoint:
    path: /guides/state
    method: GET
    data_selector: state
- name: ui_elements
  endpoint:
    path: /guides/state
    method: GET
    data_selector: ui_elements
- name: form_submission
  endpoint:
    path: /recipes/require-form-submission
    method: GET
    data_selector: value
    params: {}
- name: cache_function_outputs
  endpoint:
    path: /recipes/cache-function-outputs
    method: GET
    data_selector: value
    params: {}
- name: grouping_ui_elements
  endpoint:
    path: /recipes/grouping-ui-elements
    method: GET
    data_selector: value
    params: {}
- name: persistent_cache
  endpoint:
    path: /api/caching/persistent_cache
    method: GET
    data_selector: results
- name: cache
  endpoint:
    path: /api/caching/cache
    method: GET
    data_selector: results
- name: icon
  endpoint:
    path: /icon
    method: GET
    data_selector: Html
    params: {}
- name: tooltip
  endpoint:
    path: /tooltip
    method: GET
    data_selector: Html
    params: {}
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: Html
    params: {}
- name: image
  endpoint:
    path: /api/media/image
    method: GET
- name: audio
  endpoint:
    path: /api/media/audio
    method: GET
- name: video
  endpoint:
    path: /api/media/video
    method: GET
- name: pdf
  endpoint:
    path: /api/media/pdf
    method: GET
- name: download
  endpoint:
    path: /api/media/download
    method: GET
- name: plain_text
  endpoint:
    path: /api/media/plain_text
    method: GET
- name: replace
  endpoint:
    path: /api/outputs/marimo.output.replace
    method: POST
    data_selector: value
- name: append
  endpoint:
    path: /api/outputs/marimo.output.append
    method: POST
    data_selector: value
- name: clear
  endpoint:
    path: /api/outputs/marimo.output.clear
    method: POST
    data_selector: ''
- name: replace_at_index
  endpoint:
    path: /api/outputs/marimo.output.replace_at_index
    method: POST
    data_selector: value
- name: html
  endpoint:
    path: /api/html
    method: GET
    data_selector: Html
- name: state
  endpoint:
    path: /api/state/
    method: GET
    data_selector: state
    params: {}
- name: App
  endpoint:
    path: /api/app
    method: GET
    data_selector: result
- name: AppMeta
  endpoint:
    path: /api/app/meta
    method: GET
    data_selector: result
- name: sheet
  endpoint:
    path: /spreadsheets/{spreadsheetId}/values/{range}
    method: GET
    data_selector: values
- name: file
  endpoint:
    path: /api/watch/file
    method: GET
    data_selector: FileState
    params:
      path: Path | str
- name: directory
  endpoint:
    path: /api/watch/directory
    method: GET
    data_selector: DirectoryState
    params:
      path: Path | str
notes:
- marimo guarantees your notebook code, outputs, and program state are consistent.
- marimo comes with GitHub Copilot, AI assistants, Ruff code formatting, HTML export,
  fast code completion, a VS Code extension, an interactive dataframe viewer, and
  many more quality-of-life features.
- Since marimo's reactive execution differs from traditional notebooks, you may need
  to refactor code that mutates variables across cells which can lead to unexpected
  behavior.
- marimo notebooks can be executed as Python scripts from the command-line
- We're building a community. Come hang out with us!
- marimo's 'reactive' execution model makes your notebooks more reproducible by eliminating
  hidden state and providing a deterministic execution order.
- Global variables must be unique.
- Variables prefixed with an underscore are local to a cell.
- By default, global variables live in the kernel memory.
- Intermediate variables that are defined in functions are cleaned up automatically.
- Use mo.stop to stop execution of expensive cells
- Disable automatic execution for expensive notebooks
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- By default, apps are laid out as a concatenation of their outputs, with code hidden.
- When combined with marimo's built-in functions for laying out outputs, as well as
  its configurable app widths, the vertical layout can successfully support a wide
  breadth of application user interfaces.
- If any cells error during the export process, the status code will be non-zero.
- Errors can be ignored by appending '|| true' to the command.
- Islands are an early feature. While the API likely won't change, there are some
  improvements we'd like to make before we consider them stable.
- Errors can be ignored by appending '|| true' to the command
- The exported file must be served over HTTP to function correctly
- If any cells error during the export process, the status code will be non-zero.
  However, the export result may still be generated, with the error included in the
  output.
- Health check endpoints return a 200 status code if the application is running as
  expected.
- User Configuration applies globally across all marimo notebooks and is stored in
  a $XDG_CONFIG_HOME/marimo/marimo.toml file.
- 'You can customize the following settings: Runtime, Hotkeys, Completion, Display,
  Autosave, Package management, Server settings, VIM keybindings, Formatting settings,
  AI assistance, Snippets, Experimental features.'
- The .marimo.toml file can be version controlled to share configurations across teams
- App configurations can be committed with notebooks to ensure consistent appearance
- Use global variables sparingly.
- Use descriptive names.
- Use functions.
- Use mo.stop to stop execution.
- Minimize mutations.
- Don't use state and on_change handlers.
- Write idempotent cells.
- marimo understands the relationships between cells based on the variables they define
  and reference.
- Check symlink settings
- Check proxy settings
- Reading the logs
- marimo doesn't track mutations to objects.
- If you're modifying an object in one cell and expecting another cell to react, this
  won't work as expected.
- Instead of mutating objects across cells, try creating new objects or performing
  all mutations within the same cell.
- You likely don't need `mo.state`. UI elements already have built-in state.
- 'State reactivity rule: Only cells that read the state getter via a global variable
  will be run.'
- Use state sparingly; you can achieve much with just UI elements.
- Requires 'on cell change' autorun
- Uses marimo library for caching and UI elements
- marimo comes with utilities to cache intermediate computations.
- These utilities can be applied as decorators to functions to cache their returned
  values; you can choose between saving caches in memory or to disk.
- Uses decorators for caching return values of functions.
- Caches are preserved even when a cell is re-run.
- Restoration happens even across notebook runs, meaning you can use mo.persistent_cache
  to make notebooks start instantly, with variables that would otherwise be expensive
  to compute already materialized in memory.
- Warning. Since context abuses sys frame trace, this may conflict with debugging
  tools or libraries that also use sys.settrace.
- Reactive state is an advanced feature that you likely don't need; it makes it possible
  to introduce cycles and hard-to-debug code execution paths.
- The easiest way to authenticate with Google Cloud BigQuery is to use Application
  Default Credentials.
- The easiest way to authenticate with Google Cloud Storage is to use Application
  Default Credentials.
- 'If you are running marimo locally, you can authenticate with Application Default
  Credentials by running the command: gcloud auth application-default login.'
- To authenticate with Google Cloud Storage using a service account, set the GOOGLE_APPLICATION_CREDENTIALS
  environment variable to the path of the service account key file.
- Uses Application Default Credentials or Service Account Key File for authentication.
- You will be prompted to authenticate with MotherDuck when you run the connect command.
- To avoid being prompted each time, set the motherduck_token environment variable.
- This function takes a file path to watch and returns a wrapper to reactively read
  and write from the file.
- This object will trigger dependent cells to re-evaluate when the directory structure
  is changed.
errors:
- 'no multiply defined variables: each variable can be defined in only one cell'
- 'no cycles: if one cell declares variable a and reads b, then another cannot declare
  b and read a'
- 'no import *: importing all symbols from a library is not allowed'
- 'Error: Cells may produce errors during the export process.'
- Non-zero status code if any cells error during the export process.
- Non-zero status code if any cells error during export
- The file cannot be opened directly from the filesystem
- 'Non-zero status code: If any cells error during the export process'
auth_info:
  mentioned_objects: []
client:
  base_url: https://docs.marimo.io
  headers:
    Accept: application/json
source_metadata: null
