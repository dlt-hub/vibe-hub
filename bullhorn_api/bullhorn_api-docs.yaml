resources:
- name: entity_candidate
  endpoint:
    path: /rest-services/{corpToken}/entity/Candidate/{id}
    method: GET
    data_selector: data
- name: create_entity_candidate
  endpoint:
    path: /rest-services/{corpToken}/entity/Candidate
    method: PUT
- name: login
  endpoint:
    path: /rest-services/login
    method: POST
    params:
      version: '*'
- name: allCorpNotes
  endpoint:
    path: /{corpToken}/allCorpNotes/
    method: GET
    data_selector: data
    params:
      fields: '{fieldList}'
      clientCorpId: '4'
- name: association
  endpoint:
    path: /{corpToken}/association/{entity}/{association field}
    method: POST
    data_selector: data
    params:
      ids: 'yes'
      count: 'no'
      start: 'no'
      showTotalMatched: 'no'
- name: userHeadshotFile
  endpoint:
    path: /{corpToken}/userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: data
    params:
      BhRestToken: 'no'
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: data
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
- name: entity
  endpoint:
    path: /entity/{entityType}/{entity-id}/{to-many-association-name}/{entity-id},*
    method: DELETE
- name: departmentClientContacts
  endpoint:
    path: /departmentClientContacts
    method: GET
    data_selector: data
    params:
      fields: firstName,lastName,address
      start: 0
      count: 5
- name: allCorpNotes
  endpoint:
    path: /allCorpNotes
    method: GET
    params:
      clientCorpId: 4
      fields: start=0
      count: 5
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    params: {}
- name: myClientContacts
  endpoint:
    path: /myClientContacts
    method: GET
    params:
      fields: firstName,lastName,address
      start: '0'
      count: '5'
- name: allCorpNotes
  endpoint:
    path: /allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
      clientCorpId: clientCorpId
- name: association
  endpoint:
    path: /association/{entity}/{association field}
    method: POST
    data_selector: data
    params:
      ids: ids
      count: count
      start: start
      showTotalMatched: showTotalMatched
- name: entitlements
  endpoint:
    path: /entitlements/{entityType}
    method: GET
    data_selector: data
    params: {}
- name: entity
  endpoint:
    path: /entity/{entityType}/{entityId}
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
      BhRestToken: BhRestToken
- name: departmentEntities
  endpoint:
    path: /department{Entity}s
    method: GET
    data_selector: data
    params:
      fields: fields
      start: start
      count: count
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: null
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: fileAttachments
  endpoint:
    path: /entity/{entityType}/{entityId}/fileAttachments
    method: GET
    data_selector: null
    params:
      fields: id
- name: allCorpNotes
  endpoint:
    path: /allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: fieldList
      clientCorpId: clientCorpId
- name: association
  endpoint:
    path: /association/{entity}/{association field}
    method: POST
    data_selector: data
    params:
      ids: ids
- name: entitlements
  endpoint:
    path: /entitlements/{entity}
    method: GET
    data_selector: data
- name: entity
  endpoint:
    path: /entity/{entityType}/{entityId}
    method: GET
    data_selector: data
    params:
      fields: fieldList
- name: file
  endpoint:
    path: /file/{entityType}/{entityId}/{fileId}
    method: GET
    data_selector: File
- name: myEntities
  endpoint:
    path: /my{Entity}s
    method: GET
    data_selector: data
    params:
      fields: fieldList
- name: allCorpNotes
  endpoint:
    path: /{corpToken}/allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
      clientCorpId: clientCorpId
- name: entity
  endpoint:
    path: /{corpToken}/entity/{entityType}/{entityId}
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
- name: file
  endpoint:
    path: /{corpToken}/file/{entityType}/{entityId}/{fileId}
    method: GET
    data_selector: File
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: null
    params:
      BhRestToken: null
- name: file
  endpoint:
    path: /file/{entityType}/{entityId}/raw
    method: POST
    data_selector: null
    params:
      externalID: 'yes'
      fileType: 'yes'
      name: 'yes'
      contentType: 'no'
      description: 'no'
      type: 'no'
      BhRestToken: 'no'
- name: massUpdate
  endpoint:
    path: /massUpdate
    method: GET
    data_selector: null
    params: {}
- name: file
  endpoint:
    path: /file
    method: GET
    data_selector: records
- name: allCorpNotes
  endpoint:
    path: /{corpToken}/allCorpNotes/
    method: GET
    data_selector: data
    params:
      fields: '{fieldList}'
      layout: '{layout}'
      clientCorpId: 'yes'
- name: association
  endpoint:
    path: /{corpToken}/association/{entity}/{association field}
    method: POST
    data_selector: data
    params:
      ids: 'yes'
      count: 'no'
      start: 'no'
      showTotalMatched: 'no'
- name: entitlements
  endpoint:
    path: /{corpToken}/entitlements/{entityType}
    method: GET
    data_selector: entitlements
    params: {}
- name: entity
  endpoint:
    path: /{corpToken}/entity/{entityType}/{entityId}
    method: GET
    data_selector: data
    params:
      fields: 'yes'
      layout: 'yes'
- name: departmentEntities
  endpoint:
    path: /{corpToken}/department{Entity}s/
    method: GET
    data_selector: data
    params:
      fields: 'yes'
      layout: 'yes'
- name: myEntities
  endpoint:
    path: /{corpToken}/my{Entity}s/
    method: GET
    data_selector: data
    params:
      fields: 'yes'
      layout: 'yes'
- name: allCorpNotes
  endpoint:
    path: /{corpToken}/allCorpNotes/
    method: GET
    data_selector: data
    params:
      fields: fields
      clientCorpId: clientCorpId
- name: association
  endpoint:
    path: /{corpToken}/association/{entity}/{association field}
    method: POST
    data_selector: data
    params:
      ids: ids
- name: entitlements
  endpoint:
    path: /{corpToken}/entitlements/{EntityType}
    method: GET
    data_selector: ''
    params: {}
- name: entity
  endpoint:
    path: /{corpToken}/entity/{entityType}/{entityId}
    method: GET
    data_selector: ''
    params:
      fields: fields
- name: departmentEntities
  endpoint:
    path: /{corpToken}/department{Entity}s/
    method: GET
    data_selector: data
    params:
      fields: fields
- name: myEntities
  endpoint:
    path: /{corpToken}/my{Entity}s/
    method: GET
    data_selector: data
    params:
      fields: fields
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: null
    params:
      externalID: required
      fileType: SAMPLE
      name: required
      contentType: optional
      description: optional
      type: optional
- name: rawFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: PUT
    data_selector: null
    params:
      externalID: required
      fileType: SAMPLE
      name: required
      contentType: optional
      description: optional
      type: optional
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: externalID
    params: {}
- name: meta
  endpoint:
    path: /meta
    method: GET
    data_selector: entity
    params: {}
- name: metaEntity
  endpoint:
    path: /meta/{Entity}
    method: GET
    data_selector: entity
    params: {}
- name: allCorpNotes
  endpoint:
    path: /rest-services/e999/allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
      clientCorpId: clientCorpId
- name: entity
  endpoint:
    path: /rest-services/e999/entity
    method: GET
    data_selector: data
- name: massUpdate
  endpoint:
    path: /rest-services/e999/massUpdate
    method: GET
    data_selector: data
- name: ping
  endpoint:
    path: /rest-services/e999/ping
    method: GET
    data_selector: sessionExpires
- name: query
  endpoint:
    path: /rest-services/e999/query
    method: GET
    data_selector: data
- name: resume
  endpoint:
    path: /rest-services/e999/resume/parseToCandidate
    method: POST
    data_selector: candidate
- name: saved_search
  endpoint:
    path: /savedSearch
    method: GET
- name: my_saved_search
  endpoint:
    path: /mySavedSearch
    method: GET
- name: allCorpNotes
  endpoint:
    path: /rest-services/e999/allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: '*'
      layout: configured layout
      clientCorpId: required
- name: association
  endpoint:
    path: /rest-services/e999/association/{entity}/{association field}
    method: POST
    data_selector: data
    params:
      ids: required
      count: optional
      start: optional
      showTotalMatched: optional
- name: entitlements
  endpoint:
    path: /rest-services/e999/entitlements/{entityType}
    method: GET
    data_selector: data
    params: {}
- name: entity
  endpoint:
    path: /rest-services/e999/entity/{entityType}/{entityId}
    method: GET
    data_selector: data
    params:
      fields: required
      layout: required
      meta: optional
- name: file
  endpoint:
    path: /rest-services/e999/file/{entityType}/{entityId}/{fileId}
    method: GET
    data_selector: File
    params: {}
- name: find
  endpoint:
    path: /rest-services/e999/find
    method: GET
    data_selector: data
    params:
      query: required
      countPerEntity: optional
- name: login
  endpoint:
    path: /login
    method: GET
    data_selector: data
    params:
      access_token: required
      version: required
- name: massUpdate
  endpoint:
    path: /rest-services/e999/massUpdate/{entityType}
    method: POST
    data_selector: data
    params:
      ids: required
      status: optional
- name: meta
  endpoint:
    path: /rest-services/e999/meta
    method: GET
    data_selector: data
    params: {}
- name: options
  endpoint:
    path: /rest-services/e999/options
    method: GET
    data_selector: data
    params: {}
- name: ping
  endpoint:
    path: /rest-services/e999/ping
    method: GET
    data_selector: sessionExpires
    params:
      BhRestToken: required
- name: query
  endpoint:
    path: /rest-services/e999/query/{entity}
    method: GET
    data_selector: data
    params:
      where: required
      fields: required
      count: optional
- name: resume
  endpoint:
    path: /rest-services/e999/resume/parseToCandidate
    method: POST
    data_selector: candidate
    params:
      format: required
      populateDescription: optional
- name: savedSearch
  endpoint:
    path: /rest-services/e999/savedSearch
    method: GET
    data_selector: data
    params: {}
- name: allCorpNotes
  endpoint:
    path: /allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: '{fieldList}'
      layout: '{layout}'
      clientCorpId: 'yes'
- name: association
  endpoint:
    path: /association
    method: POST
    data_selector: data
    params:
      ids: 'yes'
      count: 'no'
      start: 'no'
      showTotalMatched: 'no'
- name: entitlements
  endpoint:
    path: /entitlements
    method: GET
    data_selector: data
    params: {}
- name: file
  endpoint:
    path: /file
    method: GET
    data_selector: File
    params: {}
- name: find
  endpoint:
    path: /find
    method: GET
    data_selector: data
    params:
      query: 'yes'
      countPerEntity: 'no'
- name: login
  endpoint:
    path: /login
    method: GET
    data_selector: BhRestToken
    params:
      access_token: 'yes'
      version: 'yes'
- name: massUpdate
  endpoint:
    path: /massUpdate
    method: GET
    data_selector: data
    params: {}
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: userHeadshotFile
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: query
  endpoint:
    path: /query/{entity}
    method: GET
    data_selector: queryResults
    params:
      where: id IN (10125, 10126, 10127, 10128, 10129, 10130, 10131, 10132, 10133,
        10134, 10135, 10136, 10137, 10138, 17376, 26865, 67604, 67605, 80203, 80204,
        80205, 80206, 80207, 80208, 80209, 80210, 80211, 80212, 80213, 80214)
- name: resume_parseToCandidate
  endpoint:
    path: /resume/parseToCandidate
    method: POST
    data_selector: text
    params:
      format: text
      populateDescription: html
- name: resume_parseToHrXml
  endpoint:
    path: /resume/parseToHrXml
    method: POST
    data_selector: text
    params:
      format: pdf
- name: savedSearch
  endpoint:
    path: /savedSearch
    method: GET
    data_selector: ''
    params: {}
- name: saved_search
  endpoint:
    path: /savedSearch/{savedSearchId}
    method: GET
    data_selector: records
    params: {}
- name: allCorpNotes
  endpoint:
    path: /rest-services/e999/allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: start=0,count=5
- name: association
  endpoint:
    path: /rest-services/e999/association
    method: POST
    data_selector: data
- name: entitlements
  endpoint:
    path: /rest-services/e999/entitlements
    method: GET
    data_selector: data
- name: entity
  endpoint:
    path: /rest-services/e999/entity
    method: GET
    data_selector: data
- name: file
  endpoint:
    path: /rest-services/e999/file
    method: GET
    data_selector: File
- name: query
  endpoint:
    path: /rest-services/e999/query
    method: GET
    data_selector: data
- name: saved_search
  endpoint:
    path: /savedSearch/{savedSearchId}
    method: PUT
    data_selector: data
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: data
    params: {}
- name: savedSearchAssociation
  endpoint:
    path: /savedSearchAssociation/{savedSearchId}
    method: PUT
    data_selector: data
    params: {}
- name: savedSearchFavorite
  endpoint:
    path: /savedSearchFavorite/{savedSearchId}
    method: DELETE
    data_selector: data
    params: {}
- name: savedSearchGrants
  endpoint:
    path: /savedSearchGrants
    method: GET
    data_selector: data
    params: {}
- name: Candidate
  endpoint:
    path: /search/Candidate
    method: GET
    data_selector: data
    params:
      query: lastName:Smith
      fields: id,firstName,lastName
      count: 3
- name: ClientContact
  endpoint:
    path: /entity/ClientContact
    method: GET
    data_selector: data
    params:
      fields: firstName,lastName
      count: 5
- name: allCorpNotes
  endpoint:
    path: /e999/allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: '*'
      layout: default
- name: entity
  endpoint:
    path: /e999/entity/{entityType}/{entityId}
    method: GET
    data_selector: data
    params:
      fields: '*'
      layout: default
- name: search
  endpoint:
    path: /e999/search/{entity}
    method: GET
    data_selector: data
    params:
      query: name:lv_
      fields: '*'
      count: 3
- name: login
  endpoint:
    path: /login
    method: GET
    data_selector: BhRestToken
    params:
      access_token: '{access_token}'
      version: '*'
- name: ping
  endpoint:
    path: /e999/ping
    method: GET
    data_selector: sessionExpires
- name: find
  endpoint:
    path: /e999/find
    method: GET
    data_selector: data
    params:
      query: smith
      countPerEntity: 3
- name: allCorpNotes
  endpoint:
    path: /e999/allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: '*'
      layout: default
      clientCorpId: required
- name: association
  endpoint:
    path: /e999/association
    method: POST
    data_selector: data
    params:
      ids: required
- name: entitlements
  endpoint:
    path: /e999/entitlements/Candidate
    method: GET
    data_selector: data
- name: entity
  endpoint:
    path: /e999/entity
    method: GET
    data_selector: data
- name: file
  endpoint:
    path: /e999/file
    method: GET
    data_selector: File
- name: find
  endpoint:
    path: /e999/find
    method: GET
    data_selector: data
- name: login
  endpoint:
    path: /login
    method: GET
    data_selector: BhRestToken
- name: massUpdate
  endpoint:
    path: /e999/massUpdate
    method: GET
    data_selector: data
- name: allCorpNotes
  endpoint:
    path: /allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
      clientCorpId: clientCorpId
- name: association
  endpoint:
    path: /association/{entity}/{association field}
    method: POST
    data_selector: data
- name: entitlements
  endpoint:
    path: /entitlements/{entity}
    method: GET
    data_selector: data
- name: entity
  endpoint:
    path: /entity/{entityType}/{entityId}
    method: GET
    data_selector: data
- name: file
  endpoint:
    path: /file/{entityType}/{entityId}/{fileId}
    method: GET
    data_selector: File
- name: find
  endpoint:
    path: /find
    method: GET
    data_selector: data
- name: login
  endpoint:
    path: /login
    method: GET
    data_selector: BhRestToken
- name: query
  endpoint:
    path: /query/{entity}
    method: GET
    data_selector: data
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: fileContent
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: PUT
    data_selector: fileContent
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: changedEntityId
    params: {}
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: fileContent
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: BillMasterTransactionDistributionBatch
  endpoint:
    path: /RevenueRecognition/BillMasterTransactionDistributionBatch
    method: PUT
    data_selector: billableChargeIds
    params:
      billableChargeIds:
      - 1118
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: response
    params: {}
- name: userHeadshotFile_raw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: PUT
    data_selector: response
    params: {}
- name: Candidate
  endpoint:
    path: /Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /JobOrder
    method: GET
    data_selector: data
- name: Placement
  endpoint:
    path: /Placement
    method: GET
    data_selector: data
- name: Lead
  endpoint:
    path: /Lead
    method: GET
    data_selector: data
- name: allCorpNotes
  endpoint:
    path: /e999/allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: start=0&count=5
- name: entity
  endpoint:
    path: /e999/entity/{entityType}/{entityId}
    method: GET
    data_selector: data
- name: find
  endpoint:
    path: /e999/find
    method: GET
    data_selector: data
- name: query
  endpoint:
    path: /e999/query/{entity}
    method: GET
    data_selector: data
- name: search
  endpoint:
    path: /e999/search/{entity}
    method: GET
    data_selector: data
- name: Candidate
  endpoint:
    path: /Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /JobOrder
    method: GET
    data_selector: data
- name: Lead
  endpoint:
    path: /Lead
    method: GET
    data_selector: data
- name: Opportunity
  endpoint:
    path: /Opportunity
    method: GET
    data_selector: data
- name: Placement
  endpoint:
    path: /Placement
    method: GET
    data_selector: data
- name: candidate
  endpoint:
    path: /{corpToken}/entity/Candidate
    method: GET
    data_selector: data
- name: client_contact
  endpoint:
    path: /{corpToken}/entity/ClientContact
    method: GET
    data_selector: data
- name: job_order
  endpoint:
    path: /{corpToken}/entity/JobOrder
    method: GET
    data_selector: data
- name: placement
  endpoint:
    path: /{corpToken}/entity/Placement
    method: GET
    data_selector: data
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: fileContent
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: lastRequestId
  endpoint:
    path: /event/subscription/{subscriptionId}/lastRequestId
    method: GET
    data_selector: BhRestToken
    params: {}
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: fileContent
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: UpdateTransactionExportStatus
  endpoint:
    path: /services/RevenueRecognition/UpdateTransactionExportStatus
    method: PUT
    data_selector: ''
    params: {}
- name: Candidate
  endpoint:
    path: /services/data/vXX.X/sobjects/Candidate
    method: GET
    data_selector: records
- name: ClientContact
  endpoint:
    path: /services/data/vXX.X/sobjects/ClientContact
    method: GET
    data_selector: records
- name: JobOrder
  endpoint:
    path: /services/data/vXX.X/sobjects/JobOrder
    method: GET
    data_selector: records
- name: Placement
  endpoint:
    path: /services/data/vXX.X/sobjects/Placement
    method: GET
    data_selector: records
- name: BillableCharge
  endpoint:
    path: /services/BillableCharge
    method: POST
    params:
      BhRestToken: required
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    params:
      BhRestToken: optional
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: POST
    params:
      externalID: required
      fileType: required
      name: required
      contentType: optional
      description: optional
      type: optional
      BhRestToken: optional
- name: BillableChargeById
  endpoint:
    path: /services/BillableCharge/{billableChargeId}
    method: GET
    params:
      BhRestToken: required
- name: user_headshot_file
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    params:
      BhRestToken: optional
- name: user_headshot_file_raw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: PUT
    params:
      externalID: required
      fileType: required
      name: required
      contentType: optional
      description: optional
      type: optional
      BhRestToken: optional
- name: Candidate
  endpoint:
    path: /entity/Candidate
    method: GET
    data_selector: data
    params: {}
- name: ClientContact
  endpoint:
    path: /entity/ClientContact
    method: GET
    data_selector: data
    params: {}
- name: JobOrder
  endpoint:
    path: /entity/JobOrder
    method: GET
    data_selector: data
    params: {}
- name: Placement
  endpoint:
    path: /entity/Placement
    method: GET
    data_selector: data
    params: {}
- name: userHeadshotFile
  endpoint:
    path: /rest-services/e999/userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: fileContent
- name: PlacementCustomerRequiredField
  endpoint:
    path: /rest-services/e999/services/PlacementCustomerRequiredField/{id}/version/{id}
    method: DELETE
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: data
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: settings
  endpoint:
    path: /settings
    method: GET
    data_selector: data
    params: {}
- name: candidate
  endpoint:
    path: /entity/Candidate
    method: GET
- name: clientContact
  endpoint:
    path: /entity/ClientContact
    method: GET
- name: jobOrder
  endpoint:
    path: /entity/JobOrder
    method: GET
- name: placement
  endpoint:
    path: /entity/Placement
    method: GET
- name: note
  endpoint:
    path: /entity/Note
    method: GET
- name: candidate
  endpoint:
    path: /Candidate
    method: GET
    data_selector: data
- name: contact
  endpoint:
    path: /ClientContact
    method: GET
    data_selector: data
- name: job_order
  endpoint:
    path: /JobOrder
    method: GET
    data_selector: data
- name: placement
  endpoint:
    path: /Placement
    method: GET
    data_selector: data
- name: Candidate
  endpoint:
    path: /{corpToken}/entity/Candidate
    method: GET
- name: ClientContact
  endpoint:
    path: /{corpToken}/entity/ClientContact
    method: GET
- name: JobOrder
  endpoint:
    path: /{corpToken}/entity/JobOrder
    method: GET
- name: Lead
  endpoint:
    path: /{corpToken}/entity/Lead
    method: GET
- name: Opportunity
  endpoint:
    path: /{corpToken}/entity/Opportunity
    method: GET
- name: Placement
  endpoint:
    path: /{corpToken}/entity/Placement
    method: GET
- name: savedSearch
  endpoint:
    path: /savedSearch
    method: GET
    data_selector: data
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    data_selector: fileContent
- name: placementChangeRequest
  endpoint:
    path: /services/PlacementChangeRequest/approve/{placementChangeRequestId}
    method: POST
    data_selector: message
- name: Candidate
  endpoint:
    path: /Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /JobOrder
    method: GET
    data_selector: data
- name: Candidate
  endpoint:
    path: /rest-services/e999/entity/Candidate
    method: GET
    data_selector: data
    params: {}
- name: ClientContact
  endpoint:
    path: /rest-services/e999/entity/ClientContact
    method: GET
    data_selector: data
    params: {}
- name: JobOrder
  endpoint:
    path: /rest-services/e999/entity/JobOrder
    method: GET
    data_selector: data
    params: {}
- name: Placement
  endpoint:
    path: /rest-services/e999/entity/Placement
    method: GET
    data_selector: data
    params: {}
- name: Candidate
  endpoint:
    path: /rest-services/e999/entity/Candidate
    method: GET
    data_selector: data
    params: {}
- name: ClientContact
  endpoint:
    path: /rest-services/e999/entity/ClientContact
    method: GET
    data_selector: data
    params: {}
- name: JobOrder
  endpoint:
    path: /rest-services/e999/entity/JobOrder
    method: GET
    data_selector: data
    params: {}
- name: Placement
  endpoint:
    path: /rest-services/e999/entity/Placement
    method: GET
    data_selector: data
    params: {}
- name: Candidate
  endpoint:
    path: /rest-services/e999/entity/Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /rest-services/e999/entity/ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /rest-services/e999/entity/JobOrder
    method: GET
    data_selector: data
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: fileContent
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: entity
  endpoint:
    path: /entity/{entityType}/{entityId}
    method: GET
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /search/{entity}
    method: GET
    data_selector: data
    params:
      query: string
      fields: string
      count: integer
- name: query
  endpoint:
    path: /query/{entity}
    method: POST
    data_selector: data
    params:
      where: string
      fields: string
      count: integer
- name: file
  endpoint:
    path: /file/{entityType}/{entityId}
    method: GET
    data_selector: File
    params: {}
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    params:
      BhRestToken: required
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: POST
    params:
      externalID: required
      fileType: required
      name: required
      contentType: optional
      description: optional
      type: optional
      BhRestToken: optional
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: response
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: PUT
    data_selector: response
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: Candidate
  endpoint:
    path: /services/data/vXX.X/sobjects/Candidate
    method: GET
    data_selector: records
    params: {}
- name: ClientContact
  endpoint:
    path: /services/data/vXX.X/sobjects/ClientContact
    method: GET
    data_selector: records
    params: {}
- name: JobOrder
  endpoint:
    path: /services/data/vXX.X/sobjects/JobOrder
    method: GET
    data_selector: records
    params: {}
- name: Placement
  endpoint:
    path: /services/data/vXX.X/sobjects/Placement
    method: GET
    data_selector: records
    params: {}
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: fileContent
    params: {}
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: PUT
    data_selector: externalID
    params: {}
- name: Candidate
  endpoint:
    path: /services/data/vXX.X/sobjects/Candidate
    method: GET
    data_selector: records
- name: ClientContact
  endpoint:
    path: /services/data/vXX.X/sobjects/ClientContact
    method: GET
    data_selector: records
- name: JobOrder
  endpoint:
    path: /services/data/vXX.X/sobjects/JobOrder
    method: GET
    data_selector: records
- name: user_headshot_file
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    data_selector: null
    params:
      BhRestToken: null
- name: user_headshot_file_raw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: POST
    data_selector: null
    params:
      externalID: null
      fileType: SAMPLE
      name: null
      contentType: null
      description: null
      type: null
      BhRestToken: null
- name: delete_user_headshot_file
  endpoint:
    path: /userHeadshotFile/Candidate/{entityId}
    method: DELETE
    data_selector: null
    params:
      BhRestToken: null
- name: candidate
  endpoint:
    path: /services/data/vXX.X/sobjects/Candidate
    method: GET
    data_selector: data
    params: {}
- name: client_contact
  endpoint:
    path: /services/data/vXX.X/sobjects/ClientContact
    method: GET
    data_selector: data
    params: {}
- name: job_order
  endpoint:
    path: /services/data/vXX.X/sobjects/JobOrder
    method: GET
    data_selector: data
    params: {}
- name: placement
  endpoint:
    path: /services/data/vXX.X/sobjects/Placement
    method: GET
    data_selector: data
    params: {}
- name: user_headshot_file
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    data_selector: records
    params:
      BhRestToken: optional
- name: user_headshot_file_raw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: POST
    data_selector: records
    params:
      externalID: required
      fileType: required
      name: required
      contentType: optional
      description: optional
      type: optional
      BhRestToken: optional
- name: Candidate
  endpoint:
    path: /rest-services/e999/entity/Candidate
    method: GET
- name: ClientContact
  endpoint:
    path: /rest-services/e999/entity/ClientContact
    method: GET
- name: JobOrder
  endpoint:
    path: /rest-services/e999/entity/JobOrder
    method: GET
- name: Placement
  endpoint:
    path: /rest-services/e999/entity/Placement
    method: GET
- name: user_headshot_file
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    params:
      BhRestToken: ''
- name: user_headshot_file_raw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: POST
    params:
      externalID: ''
      fileType: SAMPLE
      name: ''
      contentType: ''
      description: ''
      type: ''
      BhRestToken: ''
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    data_selector: file
    params: {}
- name: savedSearch
  endpoint:
    path: /savedSearch
    method: GET
    data_selector: data
    params: {}
- name: placementChangeRequest
  endpoint:
    path: /services/PlacementChangeRequest/approve/{placementChangeRequestId}
    method: POST
    data_selector: message
    params: {}
- name: user_headshot_file
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    params:
      BhRestToken: ''
- name: user_headshot_file_raw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: POST
    params:
      externalID: ''
      fileType: SAMPLE
      name: ''
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    params:
      BhRestToken: session_key
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: POST
    params:
      externalID: identifier
      fileType: SAMPLE
      name: file_name
      BhRestToken: session_key
- name: Candidate
  endpoint:
    path: /rest-services/e999/entity/Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /rest-services/e999/entity/ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /rest-services/e999/entity/JobOrder
    method: GET
    data_selector: data
- name: Opportunity
  endpoint:
    path: /rest-services/e999/entity/Opportunity
    method: GET
    data_selector: data
- name: Placement
  endpoint:
    path: /rest-services/e999/entity/Placement
    method: GET
    data_selector: data
- name: Candidate
  endpoint:
    path: /entity/Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /entity/ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /entity/JobOrder
    method: GET
    data_selector: data
- name: Placement
  endpoint:
    path: /entity/Placement
    method: GET
    data_selector: data
- name: Candidate
  endpoint:
    path: /entity/Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /entity/ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /entity/JobOrder
    method: GET
    data_selector: data
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: fileContent
    params:
      BhRestToken: ''
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: PUT
    data_selector: fileContent
    params:
      externalID: ''
      fileType: SAMPLE
      name: ''
      contentType: ''
      description: ''
      type: ''
- name: JobOrderRateCardLine
  endpoint:
    path: /JobOrderRateCardLine
    method: GET
    data_selector: records
- name: JobOrderRateCardLineGroup
  endpoint:
    path: /JobOrderRateCardLineGroup
    method: GET
    data_selector: records
- name: JobOrderRateCardVersion
  endpoint:
    path: /JobOrderRateCardVersion
    method: GET
    data_selector: records
- name: LegalBusinessEntity
  endpoint:
    path: /LegalBusinessEntity
    method: GET
    data_selector: records
- name: OtherSalesTaxRate
  endpoint:
    path: /OtherSalesTaxRate
    method: GET
    data_selector: records
- name: PayableCharge
  endpoint:
    path: /PayableCharge
    method: GET
    data_selector: records
- name: PayBillCycle
  endpoint:
    path: /PayBillCycle
    method: GET
    data_selector: records
- name: PayMaster
  endpoint:
    path: /PayMaster
    method: GET
    data_selector: records
- name: PayMasterTransaction
  endpoint:
    path: /PayMasterTransaction
    method: GET
    data_selector: records
- name: PlacementBillRuleset
  endpoint:
    path: /PlacementBillRuleset
    method: GET
    data_selector: records
- name: PlacementBillRulesetVersion
  endpoint:
    path: /PlacementBillRulesetVersion
    method: GET
    data_selector: records
- name: PlacementPayRuleset
  endpoint:
    path: /PlacementPayRuleset
    method: GET
    data_selector: records
- name: PlacementPayRulesetVersion
  endpoint:
    path: /PlacementPayRulesetVersion
    method: GET
    data_selector: records
- name: PlacementRateCard
  endpoint:
    path: /PlacementRateCard
    method: GET
    data_selector: records
- name: Candidate
  endpoint:
    path: /meta/Candidate
    method: GET
    data_selector: fields
- name: CandidateAvailability
  endpoint:
    path: /meta/CandidateAvailability
    method: GET
    data_selector: fields
- name: CandidateCertification
  endpoint:
    path: /meta/CandidateCertification
    method: GET
    data_selector: fields
- name: CandidateCertificationRequirement
  endpoint:
    path: /meta/CandidateCertificationRequirement
    method: GET
    data_selector: fields
- name: Placement
  endpoint:
    path: /placements
    method: GET
    data_selector: records
    params: {}
- name: PlacementCertification
  endpoint:
    path: /placementCertifications
    method: GET
    data_selector: records
    params: {}
- name: ActivityGoal
  endpoint:
    path: /services/data/vXX.X/sobjects/ActivityGoal
    method: GET
    data_selector: records
- name: ActivityGoalConfiguration
  endpoint:
    path: /services/data/vXX.X/sobjects/ActivityGoalConfiguration
    method: GET
    data_selector: records
- name: ActivityGoalTarget
  endpoint:
    path: /services/data/vXX.X/sobjects/ActivityGoalTarget
    method: GET
    data_selector: records
- name: Appointment
  endpoint:
    path: /services/data/vXX.X/sobjects/Appointment
    method: GET
    data_selector: records
- name: AppointmentAttendee
  endpoint:
    path: /services/data/vXX.X/sobjects/AppointmentAttendee
    method: GET
    data_selector: records
- name: BusinessSector
  endpoint:
    path: /services/data/vXX.X/sobjects/BusinessSector
    method: GET
    data_selector: records
- name: CandidateEducation
  endpoint:
    path: /entity/CandidateEducation
    method: GET
    data_selector: data
    params:
      incremental: dateLastModified
- name: CandidateReference
  endpoint:
    path: /entity/CandidateReference
    method: GET
    data_selector: data
    params:
      incremental: dateLastModified
- name: CandidateReferenceQuestion
  endpoint:
    path: /entity/CandidateReferenceQuestion
    method: GET
    data_selector: data
    params:
      incremental: dateLastModified
- name: CandidateReferenceResponse
  endpoint:
    path: /entity/CandidateReferenceResponse
    method: GET
    data_selector: data
    params:
      incremental: dateLastModified
- name: CandidateShiftPreference
  endpoint:
    path: /entity/CandidateShiftPreference
    method: GET
    data_selector: data
    params:
      incremental: dateLastModified
- name: CandidateTaxInfo
  endpoint:
    path: /entity/CandidateTaxInfo
    method: GET
    data_selector: data
    params:
      incremental: dateLastModified
- name: CandidateWorkHistory
  endpoint:
    path: /entity/CandidateWorkHistory
    method: GET
    data_selector: data
    params:
      incremental: dateLastModified
- name: Category
  endpoint:
    path: /entity/Category
    method: GET
    data_selector: data
    params:
      incremental: dateLastModified
- name: Certification
  endpoint:
    path: /entity/Certification
    method: GET
    data_selector: data
    params:
      incremental: dateLastModified
- name: CertificationGroup
  endpoint:
    path: /entity/CertificationGroup
    method: GET
    data_selector: data
    params:
      incremental: dateLastModified
- name: CertificationFileAttachment
  endpoint:
    path: /entity/CertificationFileAttachment
    method: GET
    data_selector: data
    params:
      incremental: dateLastModified
- name: CertificationRequirement
  endpoint:
    path: /entity/CertificationRequirement
    method: GET
    data_selector: data
    params:
      incremental: dateLastModified
- name: job_order
  endpoint:
    path: /meta/JobOrder
    method: GET
    data_selector: records
- name: job_shift
  endpoint:
    path: /meta/JobShift
    method: GET
    data_selector: records
- name: job_shift_submission
  endpoint:
    path: /meta/JobShiftSubmission
    method: GET
    data_selector: records
- name: job_shift_assignment
  endpoint:
    path: /meta/JobShiftAssignment
    method: GET
    data_selector: records
- name: job_submission
  endpoint:
    path: /meta/JobSubmission
    method: GET
    data_selector: records
- name: job_submission_certification_requirement
  endpoint:
    path: /meta/JobSubmissionCertificationRequirement
    method: GET
    data_selector: records
- name: JobSubmissionHistory
  endpoint:
    path: /query/JobSubmissionHistory
    method: GET
    data_selector: entities
- name: Lead
  endpoint:
    path: /query/Lead
    method: GET
    data_selector: entities
- name: LeadHistory
  endpoint:
    path: /query/LeadHistory
    method: GET
    data_selector: entities
- name: LocalTaxForm
  endpoint:
    path: /query/LocalTaxForm
    method: GET
    data_selector: entities
- name: Location
  endpoint:
    path: /query/Location
    method: GET
    data_selector: entities
- name: LocationVersion
  endpoint:
    path: /query/LocationVersion
    method: GET
    data_selector: entities
- name: Note
  endpoint:
    path: /query/Note
    method: GET
    data_selector: entities
- name: NoteEntity
  endpoint:
    path: /query/NoteEntity
    method: GET
    data_selector: entities
- name: ClientCorporationRateAgreementCard
  endpoint:
    path: /services/data/vXX.X/sobjects/ClientCorporationRateAgreementCard
    method: POST
    data_selector: records
    params: {}
- name: ClientCorporationRateAgreementCardLine
  endpoint:
    path: /services/data/vXX.X/sobjects/ClientCorporationRateAgreementCardLine
    method: POST
    data_selector: records
    params: {}
- name: ClientCorporationRateAgreementCardLineGroup
  endpoint:
    path: /services/data/vXX.X/sobjects/ClientCorporationRateAgreementCardLineGroup
    method: POST
    data_selector: records
    params: {}
- name: ClientCorporationRateAgreementCardVersion
  endpoint:
    path: /services/data/vXX.X/sobjects/ClientCorporationRateAgreementCardVersion
    method: POST
    data_selector: records
    params: {}
- name: CustomerRequiredFieldConfiguration
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomerRequiredFieldConfiguration
    method: POST
    data_selector: records
    params: {}
- name: CustomerRequiredFieldConfigurationVersion
  endpoint:
    path: /services/data/vXX.X/sobjects/CustomerRequiredFieldConfigurationVersion
    method: POST
    data_selector: records
    params: {}
- name: DirectDepositAccount
  endpoint:
    path: /services/data/vXX.X/sobjects/DirectDepositAccount
    method: POST
    data_selector: records
    params: {}
- name: DiscountRate
  endpoint:
    path: /services/data/vXX.X/sobjects/DiscountRate
    method: POST
    data_selector: records
    params: {}
- name: DiscountRateVersion
  endpoint:
    path: /services/data/vXX.X/sobjects/DiscountRateVersion
    method: GET
    data_selector: records
- name: DistrictSalesTaxRate
  endpoint:
    path: /services/data/vXX.X/sobjects/DistrictSalesTaxRate
    method: GET
    data_selector: records
- name: EarnCode
  endpoint:
    path: /services/data/vXX.X/sobjects/EarnCode
    method: GET
    data_selector: records
- name: EarnCodeGroup
  endpoint:
    path: /services/data/vXX.X/sobjects/EarnCodeGroup
    method: GET
    data_selector: records
- name: ExpenseSheet
  endpoint:
    path: /services/data/vXX.X/sobjects/ExpenseSheet
    method: GET
    data_selector: records
- name: ExpenseSheetEntry
  endpoint:
    path: /services/data/vXX.X/sobjects/ExpenseSheetEntry
    method: GET
    data_selector: records
- name: GeneralLedgerAccount
  endpoint:
    path: /services/data/vXX.X/sobjects/GeneralLedgerAccount
    method: GET
    data_selector: records
- name: GeneralLedgerSegment
  endpoint:
    path: /services/data/vXX.X/sobjects/GeneralLedgerSegment
    method: GET
    data_selector: records
- name: GeneralLedgerSegmentType
  endpoint:
    path: /services/data/vXX.X/sobjects/GeneralLedgerSegmentType
    method: GET
    data_selector: records
- name: GeneralLedgerServiceCode
  endpoint:
    path: /services/data/vXX.X/sobjects/GeneralLedgerServiceCode
    method: GET
    data_selector: records
- name: Holiday
  endpoint:
    path: /services/data/vXX.X/sobjects/Holiday
    method: GET
    data_selector: records
- name: HolidayCategoryLookup
  endpoint:
    path: /services/data/vXX.X/sobjects/HolidayCategoryLookup
    method: GET
    data_selector: records
- name: HolidayInstance
  endpoint:
    path: /services/data/vXX.X/sobjects/HolidayInstance
    method: GET
    data_selector: records
- name: InvoiceStatementDiscountRate
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceStatementDiscountRate
    method: GET
    data_selector: records
- name: ClientContact
  endpoint:
    path: /meta/ClientContact
    method: GET
    data_selector: fields
- name: ClientCorporation
  endpoint:
    path: /meta/ClientCorporation
    method: GET
    data_selector: fields
- name: ClientCorporationAppointment
  endpoint:
    path: /meta/ClientCorporationAppointment
    method: GET
    data_selector: fields
- name: ClientCorporationNote
  endpoint:
    path: /meta/ClientCorporationNote
    method: GET
    data_selector: fields
- name: ClientCorporationTask
  endpoint:
    path: /meta/ClientCorporationTask
    method: GET
    data_selector: fields
- name: CorporateUser
  endpoint:
    path: /meta/CorporateUser
    method: GET
    data_selector: fields
- name: CorporationDepartment
  endpoint:
    path: /services/v1/corporationDepartment
    method: GET
    data_selector: data
    params: {}
- name: Country
  endpoint:
    path: /services/v1/country
    method: GET
    data_selector: data
    params: {}
- name: CustomAction
  endpoint:
    path: /services/v1/customAction
    method: GET
    data_selector: data
    params: {}
- name: Deduction
  endpoint:
    path: /services/v1/deduction
    method: GET
    data_selector: data
    params: {}
- name: DeductionCategoryLookup
  endpoint:
    path: /services/v1/deductionCategoryLookup
    method: GET
    data_selector: data
    params: {}
- name: Department
  endpoint:
    path: /services/v1/department
    method: GET
    data_selector: data
    params: {}
- name: EmployeePay
  endpoint:
    path: /services/v1/employeePay
    method: GET
    data_selector: data
    params: {}
- name: EmployerContribution
  endpoint:
    path: /services/v1/employerContribution
    method: GET
    data_selector: data
    params: {}
- name: HousingComplex
  endpoint:
    path: /services/v1/housingComplex
    method: GET
    data_selector: data
    params: {}
- name: HousingComplexFurnitureDelivery
  endpoint:
    path: /services/v1/housingComplexFurnitureDelivery
    method: GET
    data_selector: data
    params: {}
- name: HousingComplexUnit
  endpoint:
    path: /services/data/vXX.X/sobjects/HousingComplexUnit
    method: GET
    data_selector: records
- name: HousingComplexUtilityAccount
  endpoint:
    path: /services/data/vXX.X/sobjects/HousingComplexUtilityAccount
    method: GET
    data_selector: records
- name: Issue
  endpoint:
    path: /services/data/vXX.X/sobjects/Issue
    method: GET
    data_selector: records
- name: IssueItems
  endpoint:
    path: /services/data/vXX.X/sobjects/IssueItems
    method: GET
    data_selector: records
- name: JobBoardPost
  endpoint:
    path: /services/data/vXX.X/sobjects/JobBoardPost
    method: GET
    data_selector: records
- name: Opportunity
  endpoint:
    path: /services/data/vXX.X/sobjects/Opportunity
    method: GET
    data_selector: records
- name: OpportunityHistory
  endpoint:
    path: /services/data/vXX.X/sobjects/OpportunityHistory
    method: GET
    data_selector: records
- name: AccountingPeriod
  endpoint:
    path: /services/data/vXX.X/sobjects/AccountingPeriod
    method: GET
    data_selector: records
- name: BatchGroup
  endpoint:
    path: /services/data/vXX.X/sobjects/BatchGroup
    method: GET
    data_selector: records
- name: BillableCharge
  endpoint:
    path: /services/data/vXX.X/sobjects/BillableCharge
    method: GET
    data_selector: records
- name: BillingSyncBatch
  endpoint:
    path: /services/data/vXX.X/sobjects/BillingSyncBatch
    method: GET
    data_selector: records
- name: BillingSyncBatchFileAttachment
  endpoint:
    path: /services/data/vXX.X/sobjects/BillingSyncBatchFileAttachment
    method: GET
    data_selector: records
- name: BillingSyncError
  endpoint:
    path: /services/data/vXX.X/sobjects/BillingSyncError
    method: GET
    data_selector: records
- name: BillMaster
  endpoint:
    path: /billmaster
    method: GET
    data_selector: records
- name: BillMasterDiscountRate
  endpoint:
    path: /billmasterdiscountrate
    method: GET
    data_selector: records
- name: BillMasterSurchargeRate
  endpoint:
    path: /billmastersurchargerate
    method: GET
    data_selector: records
- name: BillMasterTransaction
  endpoint:
    path: /billmastertransaction
    method: GET
    data_selector: records
- name: BillMasterTransactionDiscountDetail
  endpoint:
    path: /billmastertransactiondiscountdetail
    method: GET
    data_selector: records
- name: BillMasterTransactionDiscountRate
  endpoint:
    path: /billmastertransactiondiscountrate
    method: GET
    data_selector: records
- name: BillMasterTransactionDistributionBatch
  endpoint:
    path: /billmastertransactiondistributionbatch
    method: GET
    data_selector: records
- name: BillMasterTransactionSalesTaxDetail
  endpoint:
    path: /billmastertransactionsalestaxdetail
    method: GET
    data_selector: records
- name: BillMasterTransactionSalesTaxRate
  endpoint:
    path: /billmastertransactionsalestaxrate
    method: GET
    data_selector: records
- name: BillMasterTransactionSurchargeDetail
  endpoint:
    path: /billmastertransactionsurcharedetail
    method: GET
    data_selector: records
- name: BillMasterTransactionSurchargeRate
  endpoint:
    path: /billmastertransactionsurchargerate
    method: GET
    data_selector: records
- name: Calendar
  endpoint:
    path: /calendar
    method: GET
    data_selector: records
- name: CalendarFrequencyLookup
  endpoint:
    path: /calendarfrequencylookup
    method: GET
    data_selector: records
- name: CalendarInstance
  endpoint:
    path: /calendarinstance
    method: GET
    data_selector: records
- name: CitySalesTaxRate
  endpoint:
    path: /citysalestaxrate
    method: GET
    data_selector: records
- name: ClientCorporationBillRuleset
  endpoint:
    path: /clientcorporationbillruleset
    method: GET
    data_selector: records
- name: ClientCorporationBillRulesetVersion
  endpoint:
    path: /clientcorporationbillrulesetversion
    method: GET
    data_selector: records
- name: ClientCorporationPayRuleset
  endpoint:
    path: /clientcorporationpayruleset
    method: GET
    data_selector: records
- name: ClientCorporationPayRulesetVersion
  endpoint:
    path: /clientcorporationpayrulesetversion
    method: GET
    data_selector: records
- name: InvoiceStatementLineItem
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceStatementLineItem
    method: GET
    data_selector: records
- name: InvoiceStatementLineItemDiscountRate
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceStatementLineItemDiscountRate
    method: GET
    data_selector: records
- name: InvoiceStatementLineItemSalesTaxRate
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceStatementLineItemSalesTaxRate
    method: GET
    data_selector: records
- name: InvoiceStatementLineItemSurchargeRate
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceStatementLineItemSurchargeRate
    method: GET
    data_selector: records
- name: InvoiceStatementSalesTaxRate
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceStatementSalesTaxRate
    method: GET
    data_selector: records
- name: InvoiceStatementSurchargeRate
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceStatementSurchargeRate
    method: GET
    data_selector: records
- name: InvoiceTerm
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceTerm
    method: GET
    data_selector: records
- name: InvoiceTermVersion
  endpoint:
    path: /services/data/vXX.X/sobjects/InvoiceTermVersion
    method: GET
    data_selector: records
- name: JobCode
  endpoint:
    path: /services/data/vXX.X/sobjects/JobCode
    method: GET
    data_selector: records
- name: JobOrderBillRuleset
  endpoint:
    path: /services/data/vXX.X/sobjects/JobOrderBillRuleset
    method: GET
    data_selector: records
- name: JobOrderBillRulesetVersion
  endpoint:
    path: /services/data/vXX.X/sobjects/JobOrderBillRulesetVersion
    method: GET
    data_selector: records
- name: JobOrderPayRuleset
  endpoint:
    path: /services/data/vXX.X/sobjects/JobOrderPayRuleset
    method: GET
    data_selector: records
- name: JobOrderPayRulesetVersion
  endpoint:
    path: /services/data/vXX.X/sobjects/JobOrderPayRulesetVersion
    method: GET
    data_selector: records
- name: JobOrderRateCard
  endpoint:
    path: /services/data/vXX.X/sobjects/JobOrderRateCard
    method: GET
    data_selector: records
- name: PlacementRateCardLine
  endpoint:
    path: /PlacementRateCardLine
    method: GET
    data_selector: records
- name: PlacementRateCardVersion
  endpoint:
    path: /PlacementRateCardVersion
    method: GET
    data_selector: records
- name: SalesTaxGroup
  endpoint:
    path: /SalesTaxGroup
    method: GET
    data_selector: records
- name: SalesTaxRate
  endpoint:
    path: /SalesTaxRate
    method: GET
    data_selector: records
- name: SalesTaxRateVersion
  endpoint:
    path: /SalesTaxRateVersion
    method: GET
    data_selector: records
- name: StateSalesTaxRate
  endpoint:
    path: /StateSalesTaxRate
    method: GET
    data_selector: records
- name: SurchargeRate
  endpoint:
    path: /SurchargeRate
    method: GET
    data_selector: records
- name: SurchargeRateVersion
  endpoint:
    path: /SurchargeRateVersion
    method: GET
    data_selector: records
- name: SurchargeRateVersionEarnCode
  endpoint:
    path: /SurchargeRateVersionEarnCode
    method: GET
    data_selector: records
- name: TimeLaborEvalRule
  endpoint:
    path: /TimeLaborEvalRule
    method: GET
    data_selector: records
- name: TimeLaborEvalRuleTemplate
  endpoint:
    path: /api/timelaborevalruletemplate
    method: GET
    data_selector: records
- name: Timesheet
  endpoint:
    path: /api/timesheet
    method: GET
    data_selector: records
- name: TimesheetEntry
  endpoint:
    path: /api/timesheetentry
    method: GET
    data_selector: records
- name: TransactionOrigin
  endpoint:
    path: /api/transactionorigin
    method: GET
    data_selector: records
- name: TransactionStatus
  endpoint:
    path: /api/transactionstatus
    method: GET
    data_selector: records
- name: TransactionType
  endpoint:
    path: /api/transactiontype
    method: GET
    data_selector: records
- name: UnbilledRevenueDistributionBatch
  endpoint:
    path: /api/unbilledrevenuedistributionbatch
    method: GET
    data_selector: records
- name: PayCheck
  endpoint:
    path: /api/paycheck
    method: GET
    data_selector: records
- name: workers_compensation_rate
  endpoint:
    path: /workersCompensationRates
    method: GET
    data_selector: records
    params: {}
- name: PlacementChangeRequest
  endpoint:
    path: /services/data/vXX.X/sobjects/PlacementChangeRequest
    method: GET
    data_selector: records
- name: PlacementTimeAndExpense
  endpoint:
    path: /services/data/vXX.X/sobjects/PlacementTimeAndExpense
    method: GET
    data_selector: records
- name: PlacementTimeAndExpenseChangeRequest
  endpoint:
    path: /services/data/vXX.X/sobjects/PlacementTimeAndExpenseChangeRequest
    method: GET
    data_selector: records
- name: PlacementCommission
  endpoint:
    path: /services/data/vXX.X/sobjects/PlacementCommission
    method: GET
    data_selector: records
- name: PlacementShiftSet
  endpoint:
    path: /services/data/vXX.X/sobjects/PlacementShiftSet
    method: GET
    data_selector: records
- name: ScreenerQuestion
  endpoint:
    path: /screenerQuestions
    method: GET
    data_selector: records
- name: Sendout
  endpoint:
    path: /sendouts
    method: GET
    data_selector: records
- name: Shift
  endpoint:
    path: /shifts
    method: GET
    data_selector: records
- name: ShiftPosition
  endpoint:
    path: /shiftPositions
    method: GET
    data_selector: records
- name: ShiftType
  endpoint:
    path: /shiftTypes
    method: GET
    data_selector: records
- name: Skill
  endpoint:
    path: /skills
    method: GET
    data_selector: records
- name: Specialty
  endpoint:
    path: /specialties
    method: GET
    data_selector: records
- name: State
  endpoint:
    path: /states
    method: GET
    data_selector: records
- name: StateTaxForm
  endpoint:
    path: /stateTaxForms
    method: GET
    data_selector: records
- name: Task
  endpoint:
    path: /tasks
    method: GET
    data_selector: records
- name: Tearsheet
  endpoint:
    path: /tearsheets
    method: GET
    data_selector: records
- name: TearsheetMember
  endpoint:
    path: /tearsheetMembers
    method: GET
    data_selector: records
- name: TearsheetRecipient
  endpoint:
    path: /tearsheetRecipients
    method: GET
    data_selector: records
- name: TimeUnit
  endpoint:
    path: /timeUnits
    method: GET
    data_selector: records
- name: UserHousingComplexUnit
  endpoint:
    path: /userHousingComplexUnits
    method: GET
    data_selector: records
- name: WorkersCompensation
  endpoint:
    path: /workersCompensations
    method: GET
    data_selector: records
- name: custom_object_metadata
  endpoint:
    path: /{corpToken}/meta/Candidate
    method: GET
    data_selector: fields
- name: create_custom_object_instance
  endpoint:
    path: /{corpToken}/entity/Candidate
    method: PUT
    data_selector: changedEntityId
- name: update_custom_object_instance
  endpoint:
    path: /{corpToken}/entity/Candidate/{id}
    method: POST
- name: search_entity_based_on_custom_object
  endpoint:
    path: /{corpToken}/search/Candidate
    method: GET
- name: disassociate_custom_object
  endpoint:
    path: /{corpToken}/entity/Candidate/{id}/customObject2s/{customObjectId}
    method: DELETE
- name: query_custom_object
  endpoint:
    path: /{corpToken}/query/PersonCustomObjectInstance2
    method: GET
- name: data
  endpoint:
    path: /data-hub/data
    method: POST
    data_selector: data
- name: data_find
  endpoint:
    path: /data-hub/data/find
    method: POST
    data_selector: data
- name: data
  endpoint:
    path: /data-hub/data
    method: POST
- name: data_find
  endpoint:
    path: /data-hub/data/find
    method: POST
- name: sourceSystem
  endpoint:
    path: /data-hub/sourceSystem
    method: POST
- name: entityType
  endpoint:
    path: /data-hub/entityType
    method: POST
- name: entityTypeSchemaVersion
  endpoint:
    path: /data-hub/entityTypeSchemaVersion
    method: POST
- name: data
  endpoint:
    path: /data-hub/data
    method: POST
- name: entityType
  endpoint:
    path: /data-hub/entityType
    method: POST
- name: entityTypeSchemaVersion
  endpoint:
    path: /data-hub/entityTypeSchemaVersion
    method: POST
- name: sourceSystem
  endpoint:
    path: /data-hub/sourceSystem
    method: POST
- name: data
  endpoint:
    path: /data-hub/data
    method: POST
    data_selector: data
    params: {}
- name: data_find
  endpoint:
    path: /data-hub/data/find
    method: POST
    data_selector: data
    params: {}
- name: sourceSystem
  endpoint:
    path: /data-hub/sourceSystem
    method: POST
    data_selector: data
    params: {}
- name: entityType
  endpoint:
    path: /data-hub/entityType
    method: POST
    data_selector: data
    params: {}
- name: entityTypeSchemaVersion
  endpoint:
    path: /data-hub/entityTypeSchemaVersion
    method: POST
    data_selector: data
    params: {}
- name: data
  endpoint:
    path: /data-hub/data
    method: POST
    data_selector: data
- name: sourceSystem
  endpoint:
    path: /data-hub/sourceSystem
    method: POST
    data_selector: data
- name: entityType
  endpoint:
    path: /data-hub/entityType
    method: POST
    data_selector: data
- name: entityTypeSchemaVersion
  endpoint:
    path: /data-hub/entityTypeSchemaVersion
    method: POST
    data_selector: data
- name: data
  endpoint:
    path: /data-hub/data
    method: POST
    data_selector: data
    params: {}
- name: sourceSystem
  endpoint:
    path: /data-hub/sourceSystem
    method: POST
    data_selector: data
    params: {}
- name: entityType
  endpoint:
    path: /data-hub/entityType
    method: POST
    data_selector: data
    params: {}
- name: entityTypeSchemaVersion
  endpoint:
    path: /data-hub/entityTypeSchemaVersion
    method: POST
    data_selector: data
    params: {}
- name: data
  endpoint:
    path: /data-hub/data
    method: POST
    data_selector: data
    params: {}
- name: find_data
  endpoint:
    path: /data-hub/data/find
    method: POST
    data_selector: data
    params: {}
- name: sourceSystem
  endpoint:
    path: /data-hub/sourceSystem
    method: POST
    data_selector: data
    params: {}
- name: entityType
  endpoint:
    path: /data-hub/entityType
    method: POST
    data_selector: data
    params: {}
- name: entityTypeSchemaVersion
  endpoint:
    path: /data-hub/entityTypeSchemaVersion
    method: POST
    data_selector: data
    params: {}
- name: data
  endpoint:
    path: /data-hub/data
    method: POST
    data_selector: data
    params: {}
- name: data_find
  endpoint:
    path: /data-hub/data/find
    method: POST
    data_selector: data
    params: {}
- name: sourceSystem
  endpoint:
    path: /data-hub/sourceSystem
    method: POST
    data_selector: data
    params: {}
- name: entityType
  endpoint:
    path: /data-hub/entityType
    method: POST
    data_selector: data
    params: {}
- name: entityTypeSchemaVersion
  endpoint:
    path: /data-hub/entityTypeSchemaVersion
    method: POST
    data_selector: data
    params: {}
- name: data
  endpoint:
    path: /data-hub/data
    method: POST
    data_selector: data
    params: {}
- name: data_find
  endpoint:
    path: /data-hub/data/find
    method: POST
    data_selector: data
    params: {}
- name: sourceSystem
  endpoint:
    path: /data-hub/sourceSystem
    method: POST
    data_selector: data
    params: {}
- name: entityType
  endpoint:
    path: /data-hub/entityType
    method: POST
    data_selector: data
    params: {}
- name: entityTypeSchemaVersion
  endpoint:
    path: /data-hub/entityTypeSchemaVersion
    method: POST
    data_selector: data
    params: {}
- name: custom_objects_metadata
  endpoint:
    path: /rest-services/{corpToken}/meta/Candidate
    method: GET
    data_selector: fields
    params:
      fields: '*'
- name: create_candidate
  endpoint:
    path: /rest-services/{corpToken}/entity/Candidate
    method: PUT
    data_selector: changedEntityId
- name: update_custom_object
  endpoint:
    path: /rest-services/{corpToken}/entity/Candidate/{candidateId}
    method: POST
    data_selector: changedEntityId
- name: search_candidates
  endpoint:
    path: /rest-services/{corpToken}/search/Candidate
    method: GET
    data_selector: id
- name: disassociate_custom_object
  endpoint:
    path: /rest-services/{corpToken}/entity/Candidate/{candidateId}/customObject2s/{customObjectId}
    method: DELETE
- name: query_custom_object
  endpoint:
    path: /rest-services/{corpToken}/query/PersonCustomObjectInstance2
    method: GET
- name: allCorpNotes
  endpoint:
    path: /rest-services/e999/allCorpNotes
    method: GET
    params:
      clientCorpId: 4
      fields: start=0
      count: 5
- name: allCorpNotes
  endpoint:
    path: /allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: start=0
      count: 5
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: response
    params: {}
- name: allCorpNotes
  endpoint:
    path: /rest-services/e999/allCorpNotes
    method: GET
    params:
      fields: fields
      layout: layout
      clientCorpId: clientCorpId
- name: association
  endpoint:
    path: /rest-services/e999/association/{entity}/{association field}
    method: POST
    params:
      ids: ids
      count: count
      start: start
      showTotalMatched: showTotalMatched
- name: userHeadshotFile
  endpoint:
    path: /rest-services/e999/userHeadshotFile/{entityType}/{entityId}
    method: PUT
    params:
      externalID: externalID
      fileType: fileType
      name: name
      contentType: contentType
      description: description
      type: type
- name: allCorpNotes
  endpoint:
    path: /allCorpNotes
    method: GET
    params:
      fields: '{fieldList}'
      layout: '{layout}'
      clientCorpId: 'yes'
- name: association
  endpoint:
    path: /association/{entity}/{association field}
    method: POST
    params:
      ids: 'yes'
- name: entitlements
  endpoint:
    path: /entitlements/{EntityType}
    method: GET
- name: entity
  endpoint:
    path: /entity/{entityType}/{entityId}
    method: GET
    params:
      fields: '{fieldList}'
      layout: '{layout}'
- name: allCorpNotes
  endpoint:
    path: /{corpToken}/allCorpNotes/
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
      clientCorpId: clientCorpId
- name: association
  endpoint:
    path: /{corpToken}/association/{entity}/{association field}
    method: POST
    data_selector: data
    params:
      ids: ids
      count: count
      start: start
      showTotalMatched: showTotalMatched
- name: entitlements
  endpoint:
    path: /{corpToken}/entitlements/{EntityType}
    method: GET
    data_selector: entitlements
    params: {}
- name: entity
  endpoint:
    path: /{corpToken}/entity/{entityType}/{entityId}
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: response
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: rawFileUpload
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: PUT
    data_selector: response
    params:
      filetype: SAMPLE
      externalID: portfolio
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: fileContent
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: entity
  endpoint:
    path: /entity/{entityType}/{entityId}/{toManyFieldName}s
    method: PUT
    data_selector: entityIds
    params: {}
- name: departmentClientContacts
  endpoint:
    path: /departmentClientContacts
    method: GET
    data_selector: firstName,lastName,address
    params:
      start: 0
      count: 5
- name: myClientContacts
  endpoint:
    path: /myClientContacts
    method: GET
    params:
      count: 5
- name: allCorpNotes
  endpoint:
    path: /allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: '{fieldList}'
      layout: '{layout}'
      clientCorpId: '{clientCorpId}'
- name: association
  endpoint:
    path: /association/{entity}/{association field}
    method: POST
    data_selector: data
    params:
      ids: '{ids}'
      count: '{count}'
      start: '{start}'
      showTotalMatched: '{showTotalMatched}'
- name: entitlements
  endpoint:
    path: /entitlements/{entityType}
    method: GET
    data_selector: data
- name: entity
  endpoint:
    path: /entity/{entityType}/{entityId}
    method: GET
    data_selector: data
    params:
      fields: '{fieldList}'
      layout: '{layout}'
- name: departmentClientContacts
  endpoint:
    path: /departmentClientContacts
    method: GET
    data_selector: data
    params:
      fields: firstName,lastName,address
      start: '0'
      count: '5'
- name: file
  endpoint:
    path: /rest-services/e999/file/Candidate/{candidateId}/{fileId}
    method: GET
    data_selector: null
    params: {}
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    params: {}
- name: fileAttachments
  endpoint:
    path: /entity/{entityType}/{entityId}/fileAttachments
    method: GET
    params:
      fields: id
- name: allCorpNotes
  endpoint:
    path: /allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
      clientCorpId: clientCorpId
- name: association
  endpoint:
    path: /association/{entity}/{association field}
    method: POST
    data_selector: data
    params:
      ids: ids
      count: count
      start: start
      showTotalMatched: showTotalMatched
- name: entitlements
  endpoint:
    path: /entitlements/{entity}
    method: GET
    data_selector: data
- name: entity
  endpoint:
    path: /entity/{entityType}/{entityId}
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
- name: departmentEntities
  endpoint:
    path: /department{Entity}s
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
- name: myEntities
  endpoint:
    path: /my{Entity}s
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
- name: allCorpNotes
  endpoint:
    path: /{corpToken}/allCorpNotes/
    method: GET
    data_selector: data
    params:
      fields: '{fieldList}'
      layout: '{layout}'
      clientCorpId: 'yes'
- name: association
  endpoint:
    path: /{corpToken}/association/{entity}/{association field}
    method: POST
    data_selector: data
    params:
      ids: 'yes'
- name: entitlements
  endpoint:
    path: /{corpToken}/entitlements/{entityType}
    method: GET
    data_selector: ''
    params: {}
- name: entity
  endpoint:
    path: /{corpToken}/entity/{entityType}/{entityId}
    method: GET
    data_selector: ''
    params:
      fields: 'yes'
      layout: 'yes'
- name: departmentEntities
  endpoint:
    path: /{corpToken}/department{Entity}s/
    method: GET
    data_selector: data
    params:
      fields: 'yes'
      layout: 'yes'
- name: myEntities
  endpoint:
    path: /{corpToken}/my{Entity}s/
    method: GET
    data_selector: data
    params:
      fields: 'yes'
      layout: 'yes'
- name: file
  endpoint:
    path: /{corpToken}/file/{entityType}/{entityId}/{fileId}
    method: GET
    data_selector: File
    params: {}
- name: allCorpNotes
  endpoint:
    path: /allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: '{fieldList}'
      clientCorpId: required
- name: association
  endpoint:
    path: /association/{entity}/{association field}
    method: POST
    data_selector: data
    params:
      ids: required
- name: entitlements
  endpoint:
    path: /entitlements/{entityType}
    method: GET
    data_selector: data
    params: {}
- name: entity
  endpoint:
    path: /entity/{entityType}/{entityId}
    method: GET
    data_selector: data
    params:
      fields: required
      layout: required
- name: myEntities
  endpoint:
    path: /my{Entity}s
    method: GET
    data_selector: data
    params:
      fields: required
      layout: required
- name: file
  endpoint:
    path: /file/{entityType}/{entityId}/{fileId}
    method: GET
    data_selector: File
    params: {}
- name: meta
  endpoint:
    path: /meta
    method: GET
    data_selector: entities
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    data_selector: fileDetails
    params: {}
- name: Candidate
  endpoint:
    path: /rest-services/e999/entity/Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /rest-services/e999/entity/ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /rest-services/e999/entity/JobOrder
    method: GET
    data_selector: data
- name: Placement
  endpoint:
    path: /rest-services/e999/entity/Placement
    method: GET
    data_selector: data
- name: saved_search
  endpoint:
    path: /savedSearch/{savedSearchId}
    method: PUT
    data_selector: null
    params: {}
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: data
    params:
      BhRestToken: 'no'
- name: massUpdate
  endpoint:
    path: /massUpdate
    method: GET
    data_selector: data
    params: {}
- name: allCorpNotes
  endpoint:
    path: /{corpToken}/allCorpNotes/
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
      clientCorpId: clientCorpId
- name: association
  endpoint:
    path: /{corpToken}/association/{entity}/{association field}
    method: POST
    data_selector: data
    params:
      ids: ids
- name: entitlements
  endpoint:
    path: /{corpToken}/entitlements/{EntityType}
    method: GET
    data_selector: data
- name: file
  endpoint:
    path: /{corpToken}/file/{entityType}/{entityId}/{fileId}
    method: GET
    data_selector: File
- name: entity
  endpoint:
    path: /{corpToken}/entity/{entityType}/{entityId}
    method: GET
    data_selector: data
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    data_selector: ''
    params: {}
- name: query
  endpoint:
    path: /query/{entity}
    method: GET
    data_selector: ''
    params: {}
- name: options
  endpoint:
    path: /options
    method: GET
    data_selector: ''
    params: {}
- name: allCorpNotes
  endpoint:
    path: /rest-services/e999/allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: fields
      clientCorpId: clientCorpId
- name: association
  endpoint:
    path: /rest-services/e999/association
    method: POST
    data_selector: data
    params:
      ids: ids
      count: count
      start: start
      showTotalMatched: showTotalMatched
- name: entity
  endpoint:
    path: /rest-services/e999/entity
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
      BhRestToken: BhRestToken
- name: find
  endpoint:
    path: /rest-services/e999/find
    method: GET
    data_selector: data
    params:
      query: query
      countPerEntity: countPerEntity
- name: massUpdate
  endpoint:
    path: /rest-services/e999/massUpdate
    method: GET
    data_selector: data
    params: {}
- name: meta
  endpoint:
    path: /rest-services/e999/meta
    method: GET
    data_selector: data
    params: {}
- name: resume_parseToCandidate
  endpoint:
    path: /resume/parseToCandidate
    method: POST
    data_selector: text
    params:
      format: text
      populateDescription: html
- name: resume_parseToCandidateViaJson
  endpoint:
    path: /resume/parseToCandidateViaJson
    method: POST
    data_selector: resume
    params:
      format: text
      populateDescription: html
- name: resume_parseToHrXml
  endpoint:
    path: /resume/parseToHrXml
    method: POST
    data_selector: text
    params:
      format: pdf
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: POST
    data_selector: fileContent
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: savedSearch
  endpoint:
    path: /savedSearch
    method: GET
    data_selector: searchResults
    params: {}
- name: mySavedSearch
  endpoint:
    path: /mySavedSearch
    method: GET
    data_selector: results
    params:
      entity: Candidate
      entityId: '20'
- name: savedSearch
  endpoint:
    path: /savedSearch
    method: GET
    data_selector: results
    params: {}
- name: allCorpNotes
  endpoint:
    path: /rest-services/e999/allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: fields
      layout: layout
      clientCorpId: clientCorpId
- name: association
  endpoint:
    path: /rest-services/e999/association/{entity}/{association field}
    method: POST
    data_selector: data
    params:
      ids: ids
      count: count
      start: start
      showTotalMatched: showTotalMatched
- name: entitlements
  endpoint:
    path: /rest-services/e999/entitlements/{entity}
    method: GET
    data_selector: data
- name: entity
  endpoint:
    path: /rest-services/e999/entity/{entityType}/{entityId}
    method: GET
    data_selector: data
- name: massUpdate
  endpoint:
    path: /rest-services/e999/massUpdate
    method: GET
    data_selector: data
- name: query
  endpoint:
    path: /rest-services/e999/query/{entity}
    method: GET
    data_selector: data
- name: saved_search
  endpoint:
    path: /savedSearch/{savedSearchId}
    method: GET
- name: Candidate
  endpoint:
    path: /rest-services/e999/entity/Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /rest-services/e999/entity/ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /rest-services/e999/entity/JobOrder
    method: GET
    data_selector: data
- name: Opportunity
  endpoint:
    path: /rest-services/e999/entity/Opportunity
    method: GET
    data_selector: data
- name: allCorpNotes
  endpoint:
    path: /rest-services/e999/allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: start=0
      count: 5
- name: association
  endpoint:
    path: /rest-services/e999/association/Candidate/primarySkills
    method: POST
    data_selector: data
- name: entitlements
  endpoint:
    path: /rest-services/e999/entitlements/Candidate
    method: GET
    data_selector: data
- name: entity
  endpoint:
    path: /rest-services/e999/entity/Candidate
    method: GET
    data_selector: data
- name: file
  endpoint:
    path: /rest-services/e999/file/Candidate/3835/231
    method: GET
    data_selector: File
- name: find
  endpoint:
    path: /rest-services/e999/find
    method: GET
    data_selector: data
- name: login
  endpoint:
    path: /rest-services/e999/login
    method: GET
    data_selector: BhRestToken
- name: massUpdate
  endpoint:
    path: /rest-services/e999/massUpdate
    method: GET
    data_selector: data
- name: meta
  endpoint:
    path: /rest-services/e999/meta
    method: GET
    data_selector: data
- name: options
  endpoint:
    path: /rest-services/e999/options
    method: GET
    data_selector: data
- name: ping
  endpoint:
    path: /rest-services/e999/ping
    method: GET
    data_selector: sessionExpires
- name: query
  endpoint:
    path: /rest-services/e999/query/ClientContact
    method: GET
    data_selector: data
- name: resume
  endpoint:
    path: /rest-services/e999/resume/parseToCandidate
    method: POST
    data_selector: candidate
- name: savedSearch
  endpoint:
    path: /rest-services/e999/savedSearch
    method: GET
    data_selector: data
- name: saved_search
  endpoint:
    path: /savedSearch
    method: GET
    data_selector: data
- name: my_saved_search
  endpoint:
    path: /mySavedSearch
    method: GET
    data_selector: data
- name: resume
  endpoint:
    path: /resume/parseToCandidate
    method: POST
    data_selector: candidate
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: data
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: savedSearchAssociation
  endpoint:
    path: /savedSearchAssociation/{savedSearchId}
    method: PUT
    data_selector: data
    params: {}
- name: savedSearchFavorite
  endpoint:
    path: /savedSearchFavorite/{savedSearchId}
    method: DELETE
    data_selector: data
    params: {}
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: data
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: userHeadshotFile
  endpoint:
    path: /rest-services/e999/userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: ''
    params:
      externalID: 'yes'
      fileType: SAMPLE
      name: 'yes'
      contentType: 'no'
      description: 'no'
      type: 'no'
      BhRestToken: 'no'
- name: BillMasterTransactionDistributionBatch
  endpoint:
    path: /rest-services/e999/services/RevenueRecognition/BillMasterTransactionDistributionBatch
    method: PUT
    data_selector: ''
    params: {}
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: fileContent
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: null
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: PUT
    data_selector: null
    params: {}
- name: Candidate
  endpoint:
    path: /Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /JobOrder
    method: GET
    data_selector: data
- name: Opportunity
  endpoint:
    path: /Opportunity
    method: GET
    data_selector: data
- name: Placement
  endpoint:
    path: /Placement
    method: GET
    data_selector: data
- name: Candidate
  endpoint:
    path: /Candidate
    method: GET
    data_selector: data
    params: {}
- name: ClientContact
  endpoint:
    path: /ClientContact
    method: GET
    data_selector: data
    params: {}
- name: JobOrder
  endpoint:
    path: /JobOrder
    method: GET
    data_selector: data
    params: {}
- name: Opportunity
  endpoint:
    path: /Opportunity
    method: GET
    data_selector: data
    params: {}
- name: Candidate
  endpoint:
    path: /entity/Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /entity/ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /entity/JobOrder
    method: GET
    data_selector: data
- name: Placement
  endpoint:
    path: /entity/Placement
    method: GET
    data_selector: data
- name: candidate
  endpoint:
    path: /services/data/vXX.X/sobjects/Candidate
    method: GET
    data_selector: data
- name: clientContact
  endpoint:
    path: /services/data/vXX.X/sobjects/ClientContact
    method: GET
    data_selector: data
- name: jobOrder
  endpoint:
    path: /services/data/vXX.X/sobjects/JobOrder
    method: GET
    data_selector: data
- name: BillableCharge
  endpoint:
    path: /services/BillableCharge
    method: POST
    params:
      BhRestToken: required
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    params:
      BhRestToken: optional
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: POST
    params:
      externalID: required
      fileType: required
      name: required
      contentType: optional
      description: optional
      type: optional
      BhRestToken: optional
- name: BillableChargeById
  endpoint:
    path: /services/BillableCharge/{billableChargeId}
    method: GET
    params:
      BhRestToken: required
- name: candidate
  endpoint:
    path: /entity/Candidate
    method: GET
    data_selector: data
- name: client_contact
  endpoint:
    path: /entity/ClientContact
    method: GET
    data_selector: data
- name: job_order
  endpoint:
    path: /entity/JobOrder
    method: GET
    data_selector: data
- name: placement
  endpoint:
    path: /entity/Placement
    method: GET
    data_selector: data
- name: userHeadshotFile
  endpoint:
    path: /rest-services/e999/userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: fileContent
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: UpdateTransactionExportStatus
  endpoint:
    path: /services/RevenueRecognition/UpdateTransactionExportStatus
    method: POST
    data_selector: status
    params: {}
- name: login
  endpoint:
    path: /login
    method: GET
- name: entity
  endpoint:
    path: /entity/{entityType}/{entityId}
    method: GET
- name: search
  endpoint:
    path: /search/{entity}
    method: GET
- name: query
  endpoint:
    path: /query/{entity}
    method: POST
- name: file
  endpoint:
    path: /file/{entityType}/{entityId}
    method: GET
- name: Candidate
  endpoint:
    path: /entity/Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /entity/ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /entity/JobOrder
    method: GET
    data_selector: data
- name: Placement
  endpoint:
    path: /entity/Placement
    method: GET
    data_selector: data
- name: candidate
  endpoint:
    path: /entity/Candidate
    method: GET
    data_selector: data
    params:
      fields: firstName,lastName
      count: 3
- name: client_contact
  endpoint:
    path: /entity/ClientContact
    method: GET
    data_selector: data
    params:
      fields: firstName,lastName
      count: 3
- name: job_order
  endpoint:
    path: /entity/JobOrder
    method: GET
    data_selector: data
    params:
      fields: title
      count: 3
- name: user_headshot_file
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    params:
      BhRestToken: optional
- name: user_headshot_file_raw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: PUT
    params:
      externalID: required
      fileType: required
      name: required
      contentType: optional
      description: optional
      type: optional
      BhRestToken: optional
- name: candidate
  endpoint:
    path: /e999/entity/Candidate
    method: GET
    data_selector: data
- name: client_contact
  endpoint:
    path: /e999/entity/ClientContact
    method: GET
    data_selector: data
- name: job_order
  endpoint:
    path: /e999/entity/JobOrder
    method: GET
    data_selector: data
- name: placement
  endpoint:
    path: /e999/entity/Placement
    method: GET
    data_selector: data
- name: userHeadshotFile
  endpoint:
    path: /rest-services/e999/userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: fileContent
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: PlacementCustomerRequiredField
  endpoint:
    path: /rest-services/e999/services/PlacementCustomerRequiredField/{id}/version/{id}
    method: DELETE
    data_selector: ''
    params: {}
- name: Candidate
  endpoint:
    path: /entity/Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /entity/ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /entity/JobOrder
    method: GET
    data_selector: data
- name: Placement
  endpoint:
    path: /entity/Placement
    method: GET
    data_selector: data
- name: Candidate
  endpoint:
    path: /e999/entity/Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /e999/entity/ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /e999/entity/JobOrder
    method: GET
    data_selector: data
- name: Placement
  endpoint:
    path: /e999/entity/Placement
    method: GET
    data_selector: data
- name: Candidate
  endpoint:
    path: /rest-services/e999/entity/Candidate
    method: GET
    data_selector: data
    params: {}
- name: ClientContact
  endpoint:
    path: /rest-services/e999/entity/ClientContact
    method: GET
    data_selector: data
    params: {}
- name: JobOrder
  endpoint:
    path: /rest-services/e999/entity/JobOrder
    method: GET
    data_selector: data
    params: {}
- name: Candidate
  endpoint:
    path: /rest-services/e999/entity/Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /rest-services/e999/entity/ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /rest-services/e999/entity/JobOrder
    method: GET
    data_selector: data
- name: Placement
  endpoint:
    path: /rest-services/e999/entity/Placement
    method: GET
    data_selector: data
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: data
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: settings
  endpoint:
    path: /settings
    method: GET
    data_selector: data
    params: {}
- name: Candidate
  endpoint:
    path: /{corpToken}/entity/Candidate
    method: GET
    data_selector: data
    params: {}
- name: ClientContact
  endpoint:
    path: /{corpToken}/entity/ClientContact
    method: GET
    data_selector: data
    params: {}
- name: JobOrder
  endpoint:
    path: /{corpToken}/entity/JobOrder
    method: GET
    data_selector: data
    params: {}
- name: Placement
  endpoint:
    path: /{corpToken}/entity/Placement
    method: GET
    data_selector: data
    params: {}
- name: candidate
  endpoint:
    path: /services/data/vXX.X/sobjects/Candidate
    method: GET
    data_selector: records
- name: client_contact
  endpoint:
    path: /services/data/vXX.X/sobjects/ClientContact
    method: GET
    data_selector: records
- name: job_order
  endpoint:
    path: /services/data/vXX.X/sobjects/JobOrder
    method: GET
    data_selector: records
- name: placement
  endpoint:
    path: /services/data/vXX.X/sobjects/Placement
    method: GET
    data_selector: records
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: response
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: PUT
    data_selector: response
- name: ClientContact
  endpoint:
    path: /ClientContact
    method: GET
- name: Candidate
  endpoint:
    path: /Candidate
    method: GET
- name: JobOrder
  endpoint:
    path: /JobOrder
    method: GET
- name: Placement
  endpoint:
    path: /Placement
    method: GET
- name: allCorpNotes
  endpoint:
    path: /e999/allCorpNotes
    method: GET
    data_selector: data
    params:
      fields: '*'
      layout: default
- name: association
  endpoint:
    path: /e999/association/{entity}/{association field}
    method: POST
    data_selector: data
    params:
      ids: '[7681,2625,1464]'
- name: entitlements
  endpoint:
    path: /e999/entitlements/{entity}
    method: GET
    data_selector: data
    params: {}
- name: find
  endpoint:
    path: /e999/find
    method: GET
    data_selector: data
    params:
      query: '{query-text}'
      countPerEntity: '{entity-max-results}'
- name: login
  endpoint:
    path: /login
    method: GET
    data_selector: BhRestToken
    params:
      access_token: '{access_token}'
      version: '*'
- name: massUpdate
  endpoint:
    path: /e999/massUpdate
    method: GET
    data_selector: data
    params: {}
- name: meta
  endpoint:
    path: /e999/meta
    method: GET
    data_selector: data
    params: {}
- name: search
  endpoint:
    path: /e999/search/{entity}
    method: GET
    data_selector: data
    params:
      query: '{lucene}'
      fields: '{fields}'
      sort: '{fields}'
      count: '{count}'
      start: '{start}'
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: null
    params: {}
- name: Candidate
  endpoint:
    path: /e999/entity/Candidate
    method: GET
    data_selector: data
- name: ClientContact
  endpoint:
    path: /e999/entity/ClientContact
    method: GET
    data_selector: data
- name: JobOrder
  endpoint:
    path: /e999/entity/JobOrder
    method: GET
    data_selector: data
- name: Placement
  endpoint:
    path: /e999/entity/Placement
    method: GET
    data_selector: data
- name: candidate
  endpoint:
    path: /rest-services/e999/entity/Candidate
    method: GET
    data_selector: data
- name: client_contact
  endpoint:
    path: /rest-services/e999/entity/ClientContact
    method: GET
    data_selector: data
- name: job_order
  endpoint:
    path: /rest-services/e999/entity/JobOrder
    method: GET
    data_selector: data
- name: placement
  endpoint:
    path: /rest-services/e999/entity/Placement
    method: GET
    data_selector: data
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    params:
      BhRestToken: token that represents a session established by the login process
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: POST
    params:
      externalID: 'yes'
      fileType: SAMPLE
      name: 'yes'
      contentType: 'no'
      description: 'no'
      type: 'no'
      BhRestToken: token that represents a session established by the login process
- name: deleteUserHeadshotFile
  endpoint:
    path: /userHeadshotFile
    method: DELETE
    params: {}
- name: Candidate
  endpoint:
    path: /rest-services/{corpToken}/entity/Candidate
    method: GET
- name: ClientContact
  endpoint:
    path: /rest-services/{corpToken}/entity/ClientContact
    method: GET
- name: JobOrder
  endpoint:
    path: /rest-services/{corpToken}/entity/JobOrder
    method: GET
- name: Placement
  endpoint:
    path: /rest-services/{corpToken}/entity/Placement
    method: GET
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: null
    params:
      BhRestToken: null
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: PUT
    data_selector: null
    params:
      externalID: null
      fileType: SAMPLE
      name: null
      contentType: null
      description: null
      type: null
      BhRestToken: null
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: POST
    params:
      externalID: ''
      fileType: SAMPLE
      name: ''
- name: Candidate
  endpoint:
    path: /services/data/vXX.X/sobjects/Candidate
    method: GET
    data_selector: data
    params: {}
- name: ClientContact
  endpoint:
    path: /services/data/vXX.X/sobjects/ClientContact
    method: GET
    data_selector: data
    params: {}
- name: JobOrder
  endpoint:
    path: /services/data/vXX.X/sobjects/JobOrder
    method: GET
    data_selector: data
    params: {}
- name: Placement
  endpoint:
    path: /services/data/vXX.X/sobjects/Placement
    method: GET
    data_selector: data
    params: {}
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    params:
      BhRestToken: 'no'
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: POST
    params:
      externalID: 'yes'
      fileType: 'yes'
      name: 'yes'
      contentType: 'no'
      description: 'no'
      type: 'no'
      BhRestToken: 'no'
- name: Candidate
  endpoint:
    path: /services/data/vXX.X/sobjects/Candidate
    method: GET
    data_selector: records
- name: ClientContact
  endpoint:
    path: /services/data/vXX.X/sobjects/ClientContact
    method: GET
    data_selector: records
- name: JobOrder
  endpoint:
    path: /services/data/vXX.X/sobjects/JobOrder
    method: GET
    data_selector: records
- name: Placement
  endpoint:
    path: /services/data/vXX.X/sobjects/Placement
    method: GET
    data_selector: records
- name: user_headshot_file
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    params:
      BhRestToken: ''
- name: user_headshot_file_raw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: POST
    params:
      externalID: ''
      fileType: SAMPLE
      name: ''
- name: user_headshot_file
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    params:
      BhRestToken: session_token
- name: user_headshot_file_raw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: POST
    params:
      externalID: external_id
      fileType: SAMPLE
      name: file_name
      BhRestToken: session_token
- name: candidate
  endpoint:
    path: /rest-services/e999/entity/Candidate
    method: GET
- name: clientContact
  endpoint:
    path: /rest-services/e999/entity/ClientContact
    method: GET
- name: jobOrder
  endpoint:
    path: /rest-services/e999/entity/JobOrder
    method: GET
- name: placement
  endpoint:
    path: /rest-services/e999/entity/Placement
    method: GET
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    params:
      BhRestToken: optional
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: POST
    params:
      externalID: required
      fileType: required
      name: required
      contentType: optional
      description: optional
      type: optional
      BhRestToken: optional
- name: entity
  endpoint:
    path: /entity/{entityType}/{entityId}
    method: GET
    data_selector: data
- name: search
  endpoint:
    path: /search/{entity}
    method: GET
    data_selector: data
- name: query
  endpoint:
    path: /query/{entity}
    method: POST
    data_selector: data
- name: login
  endpoint:
    path: /login
    method: GET
    data_selector: BhRestToken
- name: file
  endpoint:
    path: /file/{entityType}/{entityId}/{fileId}
    method: GET
    data_selector: File
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: GET
    data_selector: userHeadshotFile
- name: candidate
  endpoint:
    path: /entity/Candidate
    method: GET
- name: client_contact
  endpoint:
    path: /entity/ClientContact
    method: GET
- name: job_order
  endpoint:
    path: /entity/JobOrder
    method: GET
- name: placement
  endpoint:
    path: /entity/Placement
    method: GET
- name: userHeadshotFile
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}
    method: PUT
    data_selector: fileContent
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: userHeadshotFileRaw
  endpoint:
    path: /userHeadshotFile/{entityType}/{entityId}/raw
    method: PUT
    data_selector: fileContent
    params:
      externalID: portfolio
      fileType: SAMPLE
      name: headshotfile.jpg
      contentType: image
      description: Headshot file for candidate.
      type: headshot
- name: JobOrderRateCard
  endpoint:
    path: /entity/JobOrderRateCard
    method: PUT
- name: PlacementRateCard
  endpoint:
    path: /entity/PlacementRateCard
    method: PUT
notes:
- OAuth 2.0 is required for authorization.
- The access token is valid for 10 minutes.
- Must send BhRestToken with all subsequent requests to the API.
- Must use data-center-specific URLs for login workflows based on loginInfo request.
- The BhRestToken must be included in all subsequent requests.
- fields or layout is required
- Default count is 20, maximum is 500
- The API requires correct data-center-specific URLs.
- Ensure to handle 307 redirects if the wrong URL is used.
- Default count is 20; maximum count is 500.
- User authorization and session management use OAuth 2.0 access tokens.
- Use the correct URLs for a user to avoid 307 redirects.
- The session key must be sent with all subsequent requests to the API.
- Never assume that a REST session will not expire.
- Perform a ping request to return the timestamp of the REST session expiration.
- The API requires session management and proper handling of tokens.
- Log in to obtain a BhRestToken for session management.
- Ensure to handle 401 Unauthorized errors by refreshing tokens.
- Perform a refresh token request when a REST API request returns a 401 status code
  that indicates the session is expired.
- Token that represents a session established by the login process must be sent with
  all subsequent requests to the API.
- Token must be sent with all subsequent requests to the API.
- Handles session management with OAuth 2.0 access tokens and REST API login calls.
- Uses OAuth2 for authentication.
- Be aware of API rate limits.
- Requires user-specific URLs for login workflows.
- Each entity has a unique identifier.
- The API supports OAuth 2.0 for authentication.
- Handles OAuth2 authentication for accessing the API.
- Ensure to handle redirects for data center URLs.
- Check for API rate limits to avoid throttling.
- Ensure to handle 307 redirects for correct data center.
- Use the correct URLs based on the user's login info.
- The API supports JSON and JSONP formats.
- Handle 307 redirects for incorrect URLs.
- The API supports JSONP by providing a callback parameter.
- Ensure to handle HTTP 307 redirects for correct data center URLs.
- The API requires user-specific login workflows.
- Uses OAuth2 for authentication
- All API endpoints require valid session token
- All API calls must include valid session tokens.
- Session expiration must be handled via ping request.
- Use the refresh token process as needed.
- Requires a valid session token for all requests.
- Use appropriate entity IDs for each request.
- All API URLs should be considered case-sensitive.
- Ensure to handle redirects correctly.
- Ensure correct URL for the specific data center.
- The API uses OAuth2 authentication for secure access.
- The API supports JSONP.
- Ensure that you handle 307 redirects for data center URLs.
- Session expiration should be handled appropriately.
- Make sure to handle redirects properly.
- API users should use data-center-specific URLs for login workflows.
- All REST API URLs are case-sensitive.
- Uses OAuth2 for authentication and requires a session token for subsequent requests.
- The API requires a valid session token for all requests.
- Requires setup of a connected app in Bullhorn
- Monitor API rate limits to avoid throttling
- Session expiration can be checked using the ping endpoint.
- Ensure to use data-center-specific URLs for login workflows.
- Each Placement record corresponds to a single JobOrder and a single Candidate.
- The Placement entity supports the massupdate operations.
- Uses OAuth2 with refresh token — requires setup of connected app in Bullhorn
- Some objects may return nulls in deeply nested fields
- An effective-dated entity that acts as a master record for rate agreements between
  a staffing firm and a ClientCorporation.
- CRUD Access - CREATE, READ, UPDATE, DELETE
- CRUD Access - READ
- Entitlements - Add Discount Rate, Add Discount Rate Version, Delete Discount Rate
  and Version, Manage Current Discount Rate Version, Manage Future Discount Rate Version,
  Manage Historical Discount Rate Version, View Current and Future Discount Rate and
  Version
- Custom Actions are read only and must be configured through the Bullhorn application.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token - requires setup of connected app in API
- Supports create, update, and delete operations.
- Placement time and expense information cannot be directly modified; a user must
  submit a PlacementTimeAndExpenseChangeRequest for approval.
- Custom objects must be set up by Bullhorn Support.
- Client-defined names must be referenced with the $ character.
- The maximum number of items you can send via a custom list action is 500 items.
  If you have more than 500 items, you must send them in batches of 500 at a time.
- To use custom list actions for placements, Bullhorn users must have the Edit Placement
  From List user entitlement.
- Payload must be formatted according to schema definition setup for the corporation.
- All Data Hub API calls must be made with a valid BH REST Token and accepts UTF-8
  encoded JSON via HTTP.
- All Data Hub API calls must be made with a valid BH REST Token and accept UTF-8
  encoded JSON via HTTP.
- The session key can be provided in the BhRestToken query string, a cookie, or an
  HTTP header.
- fields or layout is required in the request
- The maximum count is 500; specify a count greater than 500 to see a warning in the
  response
- The default count is 20 and maximum count is 500.
- Use the correct URLs for login workflows based on user data center.
- Session management requires a valid BhRestToken for all API requests.
- Must handle 307 redirect for incorrect URLs.
- Use fields or layout, but not both in query parameters.
- The API uses a session token for authentication.
- Ensure to handle session expiration correctly.
- Authorization requires a valid BhRestToken.
- The API session may expire and should be handled appropriately.
- Use the correct data-center-specific URLs for login workflows.
- A REST API login call that contains the access token as a query parameter must be
  made.
- BhRestToken must be sent with all subsequent requests to the API.
- The API supports both JSON and JSONP formats.
- Requires correct URLs based on user-specific login workflows.
- Use data-center-specific URLs for login workflows.
- All REST API URLs should be considered case-sensitive.
- Always use the POST version of the query call for large requests.
- Handles CCPA notifications and user management.
- Requires handling of 307 redirects if incorrect URLs are used.
- The API uses OAuth2 for authentication.
- The API requires a valid BhRestToken for all requests.
- Token that represents a session established by the login process must be sent with
  all subsequent requests.
- The API follows REST standards and supports various entity types.
- Ensure correct data-center-specific URLs are used for login workflows.
- Web URLs are case-sensitive, except for machine names.
- Requires setup of connected app in Bullhorn
- Handles CCPA notifications and user headshot file management
- Requires handling of redirects for incorrect URLs.
- Requires specific user settings for each request.
- API calls may return non-sensitive data based on user permissions.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Requires user to obtain an access token via OAuth 2.0.
- Make sure to handle redirect URLs correctly to avoid 307 errors.
- Some objects like Contact may return nulls in deeply nested fields
- Requires setup of connected app in API
- Keep in mind the 307 redirect for incorrect URLs
- Handles multiple entities with a single API key.
- Requires setup of connected app in Bullhorn.
- Uses OAuth2 with refresh token - requires setup of connected app in Bullhorn
- This API requires using data-center-specific URLs.
- Session tokens may expire.
- Use the ping endpoint to check session validity.
- API requires a valid access token for all requests.
- Ensure to handle redirects for user-specific URLs.
- JobOrderRateCards do not have a status field and are always treated as Incomplete.
- PlacementRateCard requires validation when enough data is not provided.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '307 Redirect: Ensure correct data center URL is used.'
- '400: Bad Request – Your request is no good'
- '401: Unauthorized – Your API key is wrong or expired'
- '403: Forbidden – The entity requested is hidden for administrators only'
- '404: Not Found – The specified entity could not be found'
- '405: Method Not Allowed – You tried to access an entity with an invalid method'
- '406: Not Acceptable – You requested a format that isn’t json'
- '410: Gone – The entity requested has been removed from our servers'
- '429: Rate Limited – Wait 1 second then retry request. Repeat until successful.'
- '500: Internal Server Error – We had a problem with our server. Try again later.'
- '503: Service Unavailable – We’re temporarily offline for maintenance. Please try
  again later.'
- '412: Precondition Failed – Missing BhRestToken'
- '429: Rate Limited – Wait 1 second then retry request.'
- 400 Bad Request – Your request is no good
- 401 Unauthorized – Your API key is wrong or expired
- 429 Rate Limited – Wait 1 second then retry request.
- '401 Unauthorized: Token may be expired or incorrect.'
- '404 Not Found: The requested resource does not exist.'
- '500 Internal Server Error: Unexpected error on the server.'
- '400 Bad Request: Check the request syntax.'
- '401 Unauthorized: Check the access token.'
- '404 Not Found: Check the entity ID.'
- '400 Bad Request: Your request is no good'
- '401 Unauthorized: Your API key is wrong or expired'
- '404 Not Found: The specified entity could not be found'
- 'MISSING-DATA: Work location zip code is missing.'
- 'INVALID-DATA: Invalid status ''Mostly Active''. Valid statuses are ''Active'',
  ''Inactive'', ''Other''.'
- '400 Bad Request: Your request is no good.'
- '401 Unauthorized: Your API key is wrong or expired.'
- '403 Forbidden: The entity requested is hidden for administrators only.'
- '404 Not Found: The specified entity could not be found.'
- '405 Method Not Allowed: You tried to access an entity with an invalid method.'
- '429 Rate Limited: Wait 1 second then retry request. Repeat until successful.'
- '400: Bad Request – Your request is no good.'
- '401: Unauthorized – Your API key is wrong or expired.'
- '404: Not Found – The specified entity could not be found.'
- '400: Bad Request'
- '401: Unauthorized'
- '403: Forbidden'
- '404: Not Found'
- '500: Internal Server Error'
- '400 Bad Request: The request was invalid.'
- '401 Unauthorized: The access token is invalid or expired.'
- '404 Not Found: The requested resource was not found.'
- '401 Unauthorized: Check if BhRestToken is valid.'
- '404 Not Found: Ensure the entity exists.'
- '400 Bad Request: Verify request parameters.'
- '400: Bad Request - Your request is no good'
- '401: Unauthorized - Your API key is wrong or expired'
- '404: Not Found - The specified entity could not be found'
- '403 Forbidden: The entity requested is hidden for administrators only'
- '401 Unauthorized: Invalid or expired session token.'
- '401 Unauthorized: Check if the BhRestToken is valid.'
- '403: Forbidden - The entity requested is hidden for administrators only'
- '500: Internal Server Error - We had a problem with our server. Try again later.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '206: Partial Content – The request has only partially succeeded. One or more of
  the records in the request failed to be stored in Data Hub.'
- '413: Request Entity Too Large – The request has more than 100 items and Data Hub
  will only process 100 records at a time.'
- '400: Bad Request – The request was unsuccessful. All records failed to be processed.'
- '500: Internal Server Error – We had a problem with our server.'
- 206 Partial Content – The request has only partially succeeded. One or more of the
  records in the request failed to be stored in Data Hub.
- 413 Request Entity Too Large – The request has more than 100 items and Data Hub
  will only process 100 records at a time.
- 400 Bad Request – The request was unsuccessful. All records failed to be processed.
- 404 Not Found – The specified entity could not be found
- 500 Internal Server Error – We had a problem with our server.
- '400: Bad Request - Your request is no good.'
- '401: Unauthorized - Your API key is wrong or expired.'
- '403: Forbidden - The entity requested is hidden for administrators only.'
- '404: Not Found - The specified entity could not be found.'
- '401 Unauthorized: Invalid or expired session.'
- '412 Precondition Failed: BhRestToken is required.'
- '412 Precondition Failed: Must include BhRestToken'
- '500 Internal Server Error: We had a problem with our server. Try again later.'
- '429: Rate Limited - Wait 1 second then retry request.'
- '400 Bad Request: Invalid request format or parameters.'
- '401 Unauthorized: Invalid or expired credentials.'
- '404 Not Found: The requested resource could not be found.'
- '500 Internal Server Error: An unexpected error occurred on the server.'
- '404 Not Found: Entity not found'
- '400 Bad Request: Invalid input.'
- '401 Unauthorized: Check OAuth token.'
- '404 Not Found: Entity does not exist.'
- '401 Unauthorized: Check your access token.'
- '404 Not Found: The specified entity does not exist.'
- Request will error and Rate Card will not save if required fields are missing for
  Placement.
- Fields will be saved as empty for JobOrder regardless of EarnCodeGroup's setting.
auth_info:
  mentioned_objects:
  - OauthToken
  - CorpToken
  - BhRestToken
  - oauth2
  - corpToken
  - OAuth2
  - CorporateUser
  - AuthProvider
  - NamedCredential
  - AccessToken
  - Candidate
  - CandidateAvailability
  - CandidateCertification
  - CandidateCertificationRequirement
  - session
  - PlacementChangeRequest
client:
  base_url: https://rest.bullhornstaffing.com/rest-services
  auth:
    type: oauth2
    location: header
    header_name: BhRestToken
    token_url: https://login.api.com/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    flow: refresh_token
  headers:
    Content-Type: application/json
    Accept: application/json
    BhRestToken: required
  paginator:
    default_page_size: 20
    page_size_param: count
    type: page
    cursor_path: next
    cursor_param: nextCursor
source_metadata: null
