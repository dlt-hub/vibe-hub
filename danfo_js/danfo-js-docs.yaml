resources:
- name: Series
  endpoint:
    path: /series
    method: GET
    data_selector: records
- name: DataFrame
  endpoint:
    path: /dataframe
    method: GET
    data_selector: records
- name: concat
  endpoint:
    path: /concat
    method: POST
    data_selector: data
    params: {}
- name: merge
  endpoint:
    path: /merge
    method: POST
    data_selector: data
    params: {}
- name: groupby
  endpoint:
    path: /groupby
    method: POST
    data_selector: data
    params: {}
- name: dateRange
  endpoint:
    path: /dateRange
    method: GET
    data_selector: data
    params: {}
- name: readCSV
  endpoint:
    path: /readCSV
    method: GET
    data_selector: data
    params: {}
- name: toCSV
  endpoint:
    path: /toCSV
    method: POST
    data_selector: response
    params: {}
- name: toJSON
  endpoint:
    path: /toJSON
    method: POST
    data_selector: response
    params: {}
- name: merge
  endpoint:
    path: /api-reference/general-functions/danfo.merge
    method: GET
- name: concat
  endpoint:
    path: /api-reference/general-functions/danfo.concat
    method: GET
- name: getDummies
  endpoint:
    path: /api-reference/general-functions/danfo.get_dummies
    method: GET
- name: labelEncoder
  endpoint:
    path: /api-reference/general-functions/danfo.labelencoder
    method: GET
- name: oneHotEncoder
  endpoint:
    path: /api-reference/general-functions/danfo.onehotencoder
    method: GET
- name: standardScaler
  endpoint:
    path: /api-reference/general-functions/danfo.standardscaler
    method: GET
- name: minMaxScaler
  endpoint:
    path: /api-reference/general-functions/danfo.minmaxscaler
    method: GET
- name: toDateTime
  endpoint:
    path: /api-reference/general-functions/danfo.to_datetime
    method: GET
- name: dateRange
  endpoint:
    path: /api-reference/general-functions/danfo.date_range
    method: GET
- name: streamCSV
  endpoint:
    path: /api-reference/general-functions/danfo.streamcsv
    method: GET
- name: streamJSON
  endpoint:
    path: /api-reference/general-functions/danfo.streamjson
    method: GET
- name: streamCSVTransformer
  endpoint:
    path: /api-reference/general-functions/danfo.streamcsvtransformer
    method: GET
- name: convertFunctionToTransformer
  endpoint:
    path: /api-reference/general-functions/danfo.-convertfunctiontotransformer
    method: GET
- name: Utils
  endpoint:
    path: /api-reference/general-functions/danfo.utils
    method: GET
- name: Str
  endpoint:
    path: /api-reference/general-functions/danfo.str
    method: GET
- name: tensorflow
  endpoint:
    path: /api-reference/general-functions/danfo.tensorflow
    method: GET
- name: tensorflow
  endpoint:
    path: /api-reference/general-functions/danfo.tensorflow
    method: GET
    data_selector: Tensorflow.js
- name: streamCsvTransformer
  endpoint:
    path: /streamCsvTransformer
    method: POST
    data_selector: transformations
    params: {}
- name: titanic.csv
  endpoint:
    path: /raw.githubusercontent.com/opensource9ja/danfojs/dev/danfojs-node/tests/samples/titanic.csv
    method: GET
    data_selector: rows
    params: {}
- name: titanicOutLocal.csv
  endpoint:
    path: /raw_data/titanicOutLocal.csv
    method: POST
    data_selector: rows
    params: {}
- name: titanicOutRemote.csv
  endpoint:
    path: /raw_data/titanicOutRemote.csv
    method: POST
    data_selector: rows
    params: {}
- name: streamJSON
  endpoint:
    path: /streamJSON
    method: GET
    data_selector: undefined
    params: {}
- name: books
  endpoint:
    path: /opensource9ja/danfojs/dev/danfojs-node/tests/samples/book.json
    method: GET
    data_selector: df
    params: {}
- name: local_csv
  endpoint:
    path: /raw_data/titanic.csv
    method: GET
    data_selector: df
    params: {}
- name: remote_csv
  endpoint:
    path: /titanic.csv
    method: GET
    data_selector: df
    params: {}
- name: date_range
  endpoint:
    path: /api-reference/general-functions/danfo.date_range
    method: GET
    data_selector: options
    params: {}
- name: OneHotEncoder
  endpoint:
    path: /api-reference/general-functions/danfo.onehotencoder
    method: GET
    data_selector: records
    params: {}
- name: StandardScaler
  endpoint:
    path: /api/standardScaler
    method: POST
    data_selector: results
- name: MinMaxScaler
  endpoint:
    path: /api-reference/general-functions/danfo.minmaxscaler
    method: GET
    data_selector: class
- name: standardize_dataframe
  endpoint:
    path: /api-reference/general-functions/danfo.minmaxscaler
    method: GET
    data_selector: output
    params: {}
- name: standardize_series
  endpoint:
    path: /api-reference/general-functions/danfo.minmaxscaler
    method: GET
    data_selector: output
    params: {}
- name: LabelEncoder
  endpoint:
    path: /api-reference/general-functions/danfo.labelencoder
    method: GET
    data_selector: records
    params: {}
- name: toDateTime
  endpoint:
    path: /api-reference/general-functions/danfo.to_datetime
    method: GET
    data_selector: data
    params: {}
- name: getDummies
  endpoint:
    path: /api-reference/general-functions/danfo.get_dummies
    method: GET
    data_selector: parameters
    params: {}
- name: concat
  endpoint:
    path: /api-reference/general-functions/danfo.concat
    method: GET
    data_selector: options
    params: {}
- name: merge
  endpoint:
    path: /api-reference/general-functions/danfo.merge
    method: GET
    data_selector: options
    params: {}
- name: DataFrame
  endpoint:
    path: /df/merge
    method: POST
    data_selector: merge_df
- name: dataframe_merge
  endpoint:
    path: /api/dataframe/merge
    method: POST
    data_selector: data
    params: {}
- name: merge
  endpoint:
    path: /api-reference/general-functions/danfo.merge
    method: GET
    data_selector: options
- name: DataFrame
  endpoint:
    path: /api-reference/general-functions/danfo.merge
    method: GET
    data_selector: records
- name: readCSV
  endpoint:
    path: /api-reference/input-output/danfo.read_csv
    method: GET
    data_selector: data
    params: {}
- name: read_excel
  endpoint:
    path: /api-reference/input-output/danfo.read_excel
    method: GET
    data_selector: data
    params: {}
- name: readJSON
  endpoint:
    path: /api-reference/input-output/danfo.read_json
    method: GET
    data_selector: data
    params: {}
- name: toCSV
  endpoint:
    path: /api-reference/input-output/danfo.to_csv
    method: POST
    data_selector: data
    params: {}
- name: toExcel
  endpoint:
    path: /api-reference/input-output/danfo.to_excel
    method: POST
    data_selector: data
    params: {}
- name: toJSON
  endpoint:
    path: /api-reference/input-output/danfo.to_json
    method: POST
    data_selector: data
    params: {}
- name: readExcel
  endpoint:
    path: /api-reference/input-output/danfo.read_excel
    method: GET
    data_selector: records
    params: {}
- name: readCSV
  endpoint:
    path: /api-reference/input-output/danfo.read_csv
    method: GET
    data_selector: functions
- name: readExcel
  endpoint:
    path: /api-reference/input-output/danfo.read_excel
    method: GET
    data_selector: functions
- name: readJSON
  endpoint:
    path: /api-reference/input-output/danfo.read_json
    method: GET
    data_selector: functions
- name: toCSV
  endpoint:
    path: /api-reference/input-output/danfo.to_csv
    method: GET
    data_selector: functions
- name: toExcel
  endpoint:
    path: /api-reference/input-output/danfo.to_excel
    method: GET
    data_selector: functions
- name: toJSON
  endpoint:
    path: /api-reference/input-output/danfo.to_json
    method: GET
    data_selector: functions
- name: readExcel
  endpoint:
    path: /api-reference/input-output/danfo.read_excel
    method: GET
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: dataframes
    params: {}
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: series
    params: {}
- name: toExcel
  endpoint:
    path: /api-reference/input-output/danfo.to_excel
    method: POST
    data_selector: options
    params: {}
- name: readJSON
  endpoint:
    path: /input-output/readJSON
    method: GET
    data_selector: records
- name: DataFrame
  endpoint:
    path: /dataframe
    method: GET
    data_selector: records
- name: Series
  endpoint:
    path: /series
    method: GET
    data_selector: records
- name: read_json
  endpoint:
    path: /finance-charts-apple.json
    method: GET
    data_selector: data
    params: {}
- name: toExcel
  endpoint:
    path: /api-reference/input-output/danfo.to_excel
    method: POST
    data_selector: parameters
    params: {}
- name: readJSON
  endpoint:
    path: /input-output/readJSON
    method: GET
    data_selector: data
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: dataframes
    params: {}
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: series
    params: {}
- name: read_json
  endpoint:
    path: /readJSON
    method: GET
    data_selector: data
- name: toJSON
  endpoint:
    path: /api-reference/dataframe/dataframe.to_json
    method: GET
    data_selector: parameters
- name: toJSON
  endpoint:
    path: /api-reference/input-output/danfo.to_json
    method: GET
    data_selector: records
    params: {}
- name: dataframe_to_json
  endpoint:
    path: /api-reference/input-output/danfo.to_json
    method: POST
    data_selector: json
    params: {}
- name: CSVReader
  endpoint:
    path: /readCSV
    method: GET
    data_selector: data
    params:
      header: 'true'
- name: readCSV
  endpoint:
    path: /input-output/readCSV
    method: GET
    data_selector: records
- name: DataFrame.toCSV
  endpoint:
    path: /api-reference/dataframe/dataframe.to_csv
    method: GET
- name: DataFrame.toJSON
  endpoint:
    path: /api-reference/dataframe/dataframe.to_json
    method: GET
- name: DataFrame.toExcel
  endpoint:
    path: /api-reference/dataframe/dataframe.to_excel
    method: GET
- name: toCSV
  endpoint:
    path: /api/reference/input-output/danfo.toCSV
    method: POST
    data_selector: output
    params: {}
- name: readCSV
  endpoint:
    path: /api-reference/input-output/danfo.read_csv
    method: GET
    data_selector: records
- name: toCSV
  endpoint:
    path: /api/dataframe/toCSV
    method: POST
    data_selector: data
    params: {}
- name: toCSV
  endpoint:
    path: /api-reference/dataframe/dataframe.to_csv
    method: POST
    data_selector: CSV data
    params:
      download: false
      sep: ','
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: parameters
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: parameters
- name: Series.append
  endpoint:
    path: /api-reference/series/series.append
    method: POST
    data_selector: parameters
    params: {}
- name: Series.cumSum
  endpoint:
    path: /api-reference/series/series.cumsum
    method: GET
    data_selector: options
    params: {}
- name: Series.cumMax
  endpoint:
    path: /api-reference/series/series.cummax
    method: GET
    data_selector: parameters
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: parameters
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: parameters
- name: Series.cumProd
  endpoint:
    path: /api-reference/series/series.cumprod
    method: GET
    data_selector: cumulative product
    params:
      inplace: false
- name: Series.append
  endpoint:
    path: /api-reference/series/series.append
    method: GET
    data_selector: parameters
    params: {}
- name: Series.cumMin
  endpoint:
    path: /api-reference/series/series.cummin
    method: GET
    data_selector: returns the cumulative min of a Series
    params: {}
- name: Series.cumSum
  endpoint:
    path: /api-reference/series/series.cumsum
    method: GET
    data_selector: options
    params: {}
- name: Series.str.split
  endpoint:
    path: /api-reference/series/series.str.split
    method: GET
    data_selector: examples
    params: {}
- name: Series.str.len
  endpoint:
    path: /danfo/Series/str/len
    method: GET
    data_selector: options
    params: {}
- name: Series.str.trim
  endpoint:
    path: /api-reference/series/series.str.trim
    method: GET
    data_selector: options
    params: {}
- name: substring
  endpoint:
    path: /api-reference/series/series.str.substring
    method: GET
    data_selector: parameters
    params: {}
- name: Series.str.substr
  endpoint:
    path: /api-reference/series/series.str.substr
    method: GET
    data_selector: parameters
    params: {}
- name: Series.str.slice
  endpoint:
    path: /api-reference/series/series.str.slice
    method: GET
    data_selector: returns
    params: {}
- name: Series.str.search
  endpoint:
    path: /api-reference/series/series.str.search
    method: GET
    data_selector: returns
    params: {}
- name: Series.str.repeat
  endpoint:
    path: /api-reference/series/series.str.repeat
    method: GET
    data_selector: parameters
    params: {}
- name: Series.str.replace
  endpoint:
    path: /api-reference/series/series.str.replace
    method: GET
    data_selector: parameters
    params: {}
- name: cumMax
  endpoint:
    path: /api-reference/series/series.cummax
    method: GET
    data_selector: parameters
    params:
      inplace: false
- name: Series.str.lastIndexOf
  endpoint:
    path: /api-reference/series/series.str.lastindexof
    method: GET
    data_selector: parameters
    params: {}
- name: cumProd
  endpoint:
    path: /api-reference/series/series.cumprod
    method: GET
    data_selector: output
    params:
      options:
        inplace: false
- name: Series.str.indexOf
  endpoint:
    path: /api-reference/series/series.str.indexOf
    method: GET
    data_selector: returns
    params: {}
- name: cumMin
  endpoint:
    path: /api-reference/series/series.cummin
    method: GET
    data_selector: options
    params: {}
- name: Series.str.includes
  endpoint:
    path: /api-reference/series/series.str.includes
    method: GET
    data_selector: parameters
    params: {}
- name: Series.str.split
  endpoint:
    path: /api-reference/series/series.str.split
    method: GET
    data_selector: output
    params: {}
- name: Series.str.endsWith
  endpoint:
    path: /api-reference/series/series.str.endswith
    method: GET
    data_selector: returns
    params: {}
- name: Series.str.len
  endpoint:
    path: /api-reference/series/series.str.len
    method: GET
    data_selector: options
    params: {}
- name: str.join
  endpoint:
    path: /api-reference/series/series.str.join
    method: GET
    data_selector: parameters
    params: {}
- name: Series.str.trim
  endpoint:
    path: /api-reference/series/series.str.trim
    method: GET
    data_selector: parameters
    params: {}
- name: series_concat
  endpoint:
    path: /api-reference/series/series.str.concat
    method: GET
    data_selector: parameters
    params: {}
- name: substring
  endpoint:
    path: /api-reference/series/series.str.substring
    method: GET
    data_selector: parameters
    params: {}
- name: Series.str.charAt
  endpoint:
    path: /series/str/charAt
    method: GET
    data_selector: Series
    params: {}
- name: Series.str.substr
  endpoint:
    path: /api-reference/series/series.str.substr
    method: GET
    data_selector: parameters
    params: {}
- name: Series.str.toUpperCase
  endpoint:
    path: /api-reference/series/series.str.touppercase
    method: GET
    data_selector: options
    params: {}
- name: Series.str.slice
  endpoint:
    path: /api-reference/series/series.str.slice
    method: GET
    data_selector: parameters
    params: {}
- name: Series.str.toLowerCase
  endpoint:
    path: /api-reference/series/series.str.tolowercase
    method: GET
    data_selector: parameters
    params: {}
- name: Series.str.search
  endpoint:
    path: /api/reference/series/series.str.search
    method: GET
    data_selector: returns
    params: {}
- name: capitalize
  endpoint:
    path: /api-reference/series/series.str.capitalize
    method: GET
    data_selector: options
    params: {}
- name: Series.str.repeat
  endpoint:
    path: /api-reference/series/series.str.repeat
    method: GET
    data_selector: parameters
    params: {}
- name: Series.dt.seconds
  endpoint:
    path: /api-reference/series/series.dt.seconds
    method: GET
    data_selector: Series
    params: {}
- name: Series.str.replace
  endpoint:
    path: /api-reference/series/series.str.replace
    method: GET
    data_selector: parameters
- name: series_minutes
  endpoint:
    path: /api-reference/series/series.dt.minutes
    method: GET
    data_selector: elements
- name: Series.str.lastIndexOf
  endpoint:
    path: /api-reference/series/series.str.lastindexof
    method: GET
    data_selector: parameters
    params: {}
- name: day_of_month
  endpoint:
    path: /api-reference/series/series.dt.dayOfMonth
    method: GET
    data_selector: Series (Int elements)
- name: Series.str.indexOf
  endpoint:
    path: /api-reference/series/series.str.indexOf
    method: GET
    data_selector: parameters
    params: {}
- name: month_name
  endpoint:
    path: /api/reference/series/series.dt.monthname
    method: GET
    data_selector: Series
- name: Series.str.includes
  endpoint:
    path: /api-reference/series/series.str.includes
    method: GET
    data_selector: parameters
    params: {}
- name: hours
  endpoint:
    path: /api-reference/series/series.dt.hours
    method: GET
    data_selector: Series (int elements)
    params: {}
- name: Series.str.startsWith
  endpoint:
    path: /api-reference/series/series.str.startswith
    method: GET
    data_selector: parameters
    params: {}
- name: day_of_week
  endpoint:
    path: /api-reference/series/series.dt.dayOfWeek
    method: GET
    data_selector: Series
    params: {}
- name: concat
  endpoint:
    path: /api-reference/series/series.str.concat
    method: GET
    data_selector: parameters
    params: {}
- name: day_of_week
  endpoint:
    path: /api-reference/series/series.dt.dayOfWeek
    method: GET
    data_selector: Series (int elements)
- name: Series.dt.month
  endpoint:
    path: /api-reference/series/series.dt.month
    method: GET
    data_selector: int elements
    params: {}
- name: Series.dt.year
  endpoint:
    path: /api-reference/series/series.dt.year
    method: GET
    data_selector: Series
    params: {}
- name: Series.str.toLowerCase
  endpoint:
    path: /api-reference/series/series.str.tolowercase
    method: GET
    data_selector: options
    params: {}
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: argMax
    params: {}
- name: capitalize
  endpoint:
    path: /api-reference/series/series.str.capitalize
    method: GET
    data_selector: parameters
- name: argMin
  endpoint:
    path: /api-reference/series/series.argmin
    method: GET
    data_selector: ''
    params: {}
- name: argSort
  endpoint:
    path: /api-reference/series/series.argsort
    method: GET
    data_selector: options
- name: Series.dt.seconds
  endpoint:
    path: /api-reference/series/series.dt.seconds
    method: GET
    data_selector: Series (Int elements)
- name: minutes
  endpoint:
    path: /api-reference/series/series.dt.minutes
    method: GET
    data_selector: Series (int Elements)
- name: Series.replace
  endpoint:
    path: /api-reference/series/series.replace
    method: GET
    data_selector: parameters
    params: {}
- name: day_of_month
  endpoint:
    path: /api-reference/series/series.dt.monthday
    method: GET
    data_selector: Series (Int elements)
    params: {}
- name: Series.isNa
  endpoint:
    path: /api-reference/series/series.isna
    method: GET
    data_selector: returns
    params: {}
- name: month_name
  endpoint:
    path: /api-reference/series/series.dt.monthname
    method: GET
    data_selector: Series
    params: {}
- name: fillNa
  endpoint:
    path: /api/reference/series/series.fillna
    method: GET
    data_selector: records
- name: days_of_week
  endpoint:
    path: /core/timeseries
    method: GET
    data_selector: Series.dt.dayOfWeek
- name: fillNa
  endpoint:
    path: /api-reference/series/series.fillna
    method: POST
    data_selector: parameters
    params:
      inplace: false
- name: dayOfWeek
  endpoint:
    path: /core/timeseries
    method: GET
    data_selector: Series (int elements)
- name: dropNa
  endpoint:
    path: /api-reference/series/series.dropna
    method: POST
    data_selector: options
    params:
      inplace: false
- name: Series.dt.month
  endpoint:
    path: /api-reference/series/series.dt.month
    method: GET
    data_selector: Series (int elements)
- name: dropDuplicates
  endpoint:
    path: /api-reference/series/series.drop_duplicates
    method: GET
    data_selector: options
    params: {}
- name: Series.dt.year
  endpoint:
    path: /api-reference/series/series.dt.year
    method: GET
    data_selector: returns
- name: Series.valueCounts
  endpoint:
    path: /api-reference/series/series.value_counts
    method: GET
    data_selector: Series
    params: {}
- name: Series.argMin
  endpoint:
    path: /api-reference/series/series.argmin
    method: GET
    data_selector: returns
    params: {}
- name: Series.nUnique
  endpoint:
    path: /api-reference/series/series.nUnique
    method: GET
    data_selector: returns
- name: argSort
  endpoint:
    path: /api-reference/series/series.argsort
    method: GET
    data_selector: Series
    params: {}
- name: unique
  endpoint:
    path: /api-reference/series/series.unique
    method: GET
    data_selector: Series
    params: {}
- name: Series.abs
  endpoint:
    path: /api-reference/series/series.abs
    method: GET
    data_selector: returns
    params: {}
- name: Series.replace
  endpoint:
    path: /api-reference/series/series.replace
    method: GET
    data_selector: parameters
- name: Series.isNa
  endpoint:
    path: /api-reference/series/series.isna
    method: GET
    data_selector: returns
    params: {}
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: records
- name: fillNa
  endpoint:
    path: /api/reference/series/series.fillna
    method: GET
    data_selector: records
    params: {}
- name: fillNa
  endpoint:
    path: /api-reference/series/series.fillna
    method: GET
    data_selector: parameters
    params:
      value: Any
      options:
        inplace: false
- name: Series.dropNa
  endpoint:
    path: /api-reference/series/series.dropna
    method: GET
- name: Series.dropNa
  endpoint:
    path: /api-reference/series/series.dropna
    method: GET
    data_selector: options
- name: Series.iloc
  endpoint:
    path: /api-reference/series/series.iloc
    method: GET
    data_selector: parameters
    params: {}
- name: dropDuplicates
  endpoint:
    path: /api/reference/series/series.drop_duplicates
    method: GET
    data_selector: records
- name: dropDuplicates
  endpoint:
    path: /api-reference/series/series.drop_duplicates
    method: GET
    data_selector: parameters
    params:
      keep: first
      inplace: false
- name: loc
  endpoint:
    path: /api-reference/series/series.loc
    method: GET
    data_selector: series.loc
    params: {}
- name: series_slice
  endpoint:
    path: /api-reference/series/series.loc
    method: GET
    data_selector: records
    params: {}
- name: value_counts
  endpoint:
    path: /api-reference/series/series.value_counts
    method: GET
    data_selector: Series
    params: {}
- name: Series.at
  endpoint:
    path: /api-reference/series/series.at
    method: GET
    data_selector: scalar
- name: Series.iat
  endpoint:
    path: /api-reference/series/series.iat
    method: GET
    data_selector: parameters
- name: Series.unique
  endpoint:
    path: /api-reference/series/series.unique
    method: GET
    data_selector: Series
    params: {}
- name: series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: records
- name: Series.abs
  endpoint:
    path: /api-reference/series/series.abs
    method: GET
    data_selector: options
    params: {}
- name: Series.shape
  endpoint:
    path: /api-reference/series/series.shape
    method: GET
    data_selector: Array[int, int]
- name: Series.dtype
  endpoint:
    path: /api-reference/series/series.dtype
    method: GET
    data_selector: dtype
    params: {}
- name: Series.values
  endpoint:
    path: /api-reference/series/series.values
    method: GET
    data_selector: Array
    params: {}
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: tensor
- name: Series.lt
  endpoint:
    path: /api-reference/series/series.lt
    method: GET
    data_selector: parameters
    params: {}
- name: iloc
  endpoint:
    path: /api-reference/series/series.iloc
    method: GET
    data_selector: parameters
- name: series
  endpoint:
    path: /series/map
    method: POST
    data_selector: data
    params: {}
- name: Series.loc
  endpoint:
    path: /api-reference/series/series.loc
    method: GET
    data_selector: records
    params: {}
- name: Series.setIndex
  endpoint:
    path: /api-reference/series/series.set_index
    method: GET
    data_selector: options
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: records
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: records
- name: Series.iat
  endpoint:
    path: /api-reference/series/series.iat
    method: GET
    data_selector: parameters
    params: {}
- name: reset_index
  endpoint:
    path: /api-reference/series/series.reset_index
    method: GET
    data_selector: parameters
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: records
    params: {}
- name: Series.shape
  endpoint:
    path: /api-reference/series/series.shape
    method: GET
    data_selector: returns
    params: {}
- name: Series.describe
  endpoint:
    path: /api-reference/series/series.describe
    method: GET
    data_selector: Series
    params: {}
- name: Series.copy
  endpoint:
    path: /api-reference/series/series.copy
    method: GET
    data_selector: return
    params: {}
- name: Series.values
  endpoint:
    path: /api-reference/series/series.values
    method: GET
    data_selector: returns
- name: sortValues
  endpoint:
    path: /api-reference/series/series.sort_values
    method: GET
    data_selector: records
- name: Series.tensor
  endpoint:
    path: /api-reference/series/series.tensor
    method: GET
    data_selector: Tensor
    params: {}
- name: sortValues
  endpoint:
    path: /api-reference/series/series.sort_values
    method: GET
    data_selector: options
    params: {}
- name: Series.index
  endpoint:
    path: /api-reference/series/series.index
    method: GET
    data_selector: Array
- name: series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: records
- name: Series.var
  endpoint:
    path: /api-reference/series/series.var
    method: GET
    data_selector: return
    params: {}
- name: series_map
  endpoint:
    path: /api-reference/series/series.map
    method: GET
    data_selector: output
    params: {}
- name: Series.std
  endpoint:
    path: /api-reference/series/series.std
    method: GET
    data_selector: return
    params: {}
- name: Series.round
  endpoint:
    path: /api-reference/series/series.round
    method: GET
    data_selector: Series
    params: {}
- name: Series.minimum
  endpoint:
    path: /api-reference/series/series.minimum
    method: GET
    data_selector: Series
    params: {}
- name: Series.resetIndex
  endpoint:
    path: /api-reference/series/series.reset_index
    method: GET
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: parameters
- name: resetIndex
  endpoint:
    path: /api-reference/series/series.reset_index
    method: GET
    data_selector: records
    params: {}
- name: Series.count
  endpoint:
    path: /api-reference/series/series.count
    method: GET
    data_selector: return
    params: {}
- name: describe
  endpoint:
    path: /api-reference/series/series.describe
    method: GET
    data_selector: return
    params: {}
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: series
    params: {}
- name: Series.copy
  endpoint:
    path: /api-reference/series/series.copy
    method: GET
    data_selector: Series
    params: {}
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: Series.max
- name: Series.sortValues
  endpoint:
    path: /api-reference/series/series.sort_values
    method: GET
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: series
    params: {}
- name: sort_values
  endpoint:
    path: /api-reference/series/series.sort_values
    method: GET
    data_selector: options
- name: Series.mode
  endpoint:
    path: /api-reference/series/series.mode
    method: GET
    data_selector: return
    params: {}
- name: series_median
  endpoint:
    path: /api-reference/series/series.median
    method: GET
    data_selector: median
    params: {}
- name: Series.var
  endpoint:
    path: /api-reference/series/series.var
    method: GET
    data_selector: return
- name: Series.std
  endpoint:
    path: /api-reference/series/std
    method: GET
    data_selector: number
    params: {}
- name: Series.mod
  endpoint:
    path: /api-reference/series/series.mod
    method: GET
    data_selector: returns
- name: Series.round
  endpoint:
    path: /api-reference/series/series.round
    method: GET
    data_selector: parameters
    params: {}
- name: Series.pow
  endpoint:
    path: /api-reference/series/series.pow
    method: GET
    data_selector: parameters
    params: {}
- name: Series.maximum
  endpoint:
    path: /api-reference/series/series.maximum
    method: GET
    data_selector: records
    params: {}
- name: Series.count
  endpoint:
    path: /api-reference/series/series.count
    method: GET
    data_selector: returns
- name: Series.div
  endpoint:
    path: /api-reference/series/series.div
    method: GET
    data_selector: parameters
    params: {}
- name: Series.sum
  endpoint:
    path: /api-reference/series/series.sum
    method: GET
    data_selector: output
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: methods
- name: series_sub
  endpoint:
    path: /api-reference/series/series.sub
    method: GET
    data_selector: parameters
    params: {}
- name: Series.add
  endpoint:
    path: /api-reference/series/series.add
    method: GET
    data_selector: parameters
    params: {}
- name: Series.mode
  endpoint:
    path: /api-reference/series/series.mode
    method: GET
    data_selector: mode
    params: {}
- name: series_median
  endpoint:
    path: /api-reference/series/series.median
    method: GET
    data_selector: returns
- name: Series.sample
  endpoint:
    path: /api-reference/series/series.sample
    method: GET
    data_selector: return
    params: {}
- name: Series.tail
  endpoint:
    path: /api-reference/series/series.tail
    method: GET
    data_selector: parameters
    params:
      rows: 5
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: records
    params: {}
- name: Series.mean
  endpoint:
    path: /api-reference/series/series.mean
    method: GET
    data_selector: mean
    params: {}
- name: Series.and
  endpoint:
    path: /api-reference/series/series.and
    method: GET
    data_selector: returns
- name: Series.pow
  endpoint:
    path: /api-reference/series/series.pow
    method: GET
    data_selector: parameters
- name: Series.or
  endpoint:
    path: /api-reference/series/series.or
    method: GET
    data_selector: returns
    params: {}
- name: Series.mul
  endpoint:
    path: /api-reference/series/series.mul
    method: GET
    data_selector: parameters
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
- name: Series.sub
  endpoint:
    path: /api-reference/series/series.sub
    method: GET
    data_selector: parameters
    params:
      inplace: 'false'
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: records
- name: Dataframe
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: records
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: data
    params: {}
- name: sample
  endpoint:
    path: /api-reference/series/series.sample
    method: GET
    data_selector: return
    params: {}
- name: sortIndex
  endpoint:
    path: /dataframe/sortIndex
    method: POST
    data_selector: DataFrame
    params:
      options:
        ascending: true
        inplace: false
- name: Series.tail
  endpoint:
    path: /api-reference/series/series.tail
    method: GET
    data_selector: Series
    params:
      rows: 5
- name: Series.head
  endpoint:
    path: /api-reference/series/series.head
    method: GET
    data_selector: Series
    params:
      rows: 5
- name: DataFrame.append
  endpoint:
    path: /api-reference/dataframe/dataframe.append
    method: GET
    data_selector: parameters
    params: {}
- name: Series.and
  endpoint:
    path: /api-reference/series/series.and
    method: GET
    data_selector: ''
- name: DataFrame.nUnique
  endpoint:
    path: /dataframe/nUnique
    method: GET
    data_selector: records
    params: {}
- name: data
  endpoint:
    path: /api-reference/dataframe/dataframe.print
    method: GET
    data_selector: $dataIncolumnFormat
    params: {}
- name: DataFrame.toCSV
  endpoint:
    path: /api-reference/dataframe/dataframe.to_csv
    method: GET
    data_selector: records
    params: {}
- name: toCSV
  endpoint:
    path: /api-reference/dataframe/dataframe.to_csv
    method: GET
    data_selector: parameters
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: DataFrame
    params: {}
- name: DataFrame
  endpoint:
    path: /api/dataframe
    method: GET
    data_selector: data
    params: {}
- name: Series
  endpoint:
    path: /api/series
    method: GET
    data_selector: data
    params: {}
- name: sortIndex
  endpoint:
    path: /api-reference/dataframe/dataframe.sort_index
    method: POST
    data_selector: DataFrame
    params:
      ascending: true
      inplace: false
- name: DataFrame.toJSON
  endpoint:
    path: /api-reference/dataframe/toJSON
    method: POST
    data_selector: options
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: records
- name: DataFrame_toJSON
  endpoint:
    path: /api-reference/dataframe/dataframe.to_json
    method: GET
    data_selector: records
- name: DataFrame.append
  endpoint:
    path: /api-reference/dataframe/dataframe.append
    method: GET
    data_selector: parameters
    params: {}
- name: DataFrame.toExcel
  endpoint:
    path: /dataframe/toExcel
    method: POST
- name: DataFrame.toJSON
  endpoint:
    path: /dataframe/toJSON
    method: POST
- name: toExcel
  endpoint:
    path: /api-reference/input-output/danfo.to_excel
    method: POST
    data_selector: options
    params: {}
- name: DataFrame.nUnique
  endpoint:
    path: /api-reference/dataframe/dataframe.nunique-1
    method: GET
    data_selector: nUnique
    params: {}
- name: DataFrame.setIndex
  endpoint:
    path: /api-reference/dataframe/dataframe.set_index
    method: POST
    data_selector: options
    params:
      drop: false
      inplace: false
- name: set_index_column
  endpoint:
    path: /api-reference/dataframe/dataframe.set_index
    method: POST
    data_selector: examples
    params: {}
- name: set_index_drop_column
  endpoint:
    path: /api-reference/dataframe/dataframe.set_index
    method: POST
    data_selector: examples
    params: {}
- name: set_index_array
  endpoint:
    path: /api-reference/dataframe/dataframe.set_index
    method: POST
    data_selector: examples
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: records
- name: Series
  endpoint:
    path: /api-reference/series
    method: GET
    data_selector: records
- name: DataFrame.resetIndex
  endpoint:
    path: /api-reference/dataframe/dataframe.reset_index
    method: GET
    data_selector: returns
    params: {}
- name: data_frame_example
  endpoint:
    path: /api-reference/dataframe/dataframe.print
    method: GET
    data_selector: $dataIncolumnFormat
    params: {}
- name: rename
  endpoint:
    path: /api-reference/dataframe/dataframe.rename
    method: POST
    data_selector: mapper
    params:
      axis: 1
      inplace: false
- name: DataFrame.toCSV
  endpoint:
    path: /api-reference/dataframe/dataframe.to_csv
    method: GET
    data_selector: records
- name: DataFrame.toJSON
  endpoint:
    path: /api-reference/dataframe/dataframe.to_json
    method: GET
    data_selector: records
- name: DataFrame.toExcel
  endpoint:
    path: /api-reference/dataframe/dataframe.to_excel
    method: GET
    data_selector: records
- name: DataFrame
  endpoint:
    path: /dataframe/drop
    method: POST
    data_selector: return
- name: toCSV
  endpoint:
    path: /api-reference/dataframe/toCSV
    method: POST
    data_selector: options
- name: DataFrame.asType
  endpoint:
    path: /api-reference/dataframe/asType
    method: GET
    data_selector: options
    params: {}
- name: DataFrame.toJSON
  endpoint:
    path: /api-reference/dataframe/dataframe.to_json
    method: GET
    data_selector: records
- name: DataFrame.shape
  endpoint:
    path: /api-reference/dataframe/dataframe.shape
    method: GET
    data_selector: dimensionality
- name: DataFrame.axis
  endpoint:
    path: /api-reference/dataframe/dataframe.axis
    method: GET
    data_selector: axis
    params: {}
- name: DataFrame.toExcel
  endpoint:
    path: /dataframe/toExcel
    method: POST
    data_selector: data
    params: {}
- name: toExcel
  endpoint:
    path: /api-reference/dataframe/dataframe.to_excel
    method: POST
    data_selector: options
- name: DataFrame.values
  endpoint:
    path: /api-reference/dataframe/dataframe.values
    method: GET
    data_selector: records
- name: DataFrame.sortValues
  endpoint:
    path: /api-reference/dataframe/dataframe.sort_values
    method: GET
    data_selector: parameters
    params:
      ascending: true
      inplace: false
- name: DataFrame.selectDtypes
  endpoint:
    path: /api-reference/dataframe/dataframe.select_dtypes
    method: GET
    data_selector: records
- name: options
  endpoint:
    data_selector: parameters
    params:
      drop: false
      inplace: false
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: index
- name: DataFrame.resetIndex
  endpoint:
    path: /api-reference/dataframe/dataframe.reset_index
    method: GET
    data_selector: options
    params:
      inplace: false
- name: DataFrame.rename
  endpoint:
    path: /api-reference/dataframe/dataframe.rename
    method: POST
    data_selector: parameters
    params: {}
- name: DataFrame.loc
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.loc
    method: GET
    data_selector: args
- name: DataFrame.drop
  endpoint:
    path: /api-reference/dataframe/dataframe.drop
    method: POST
    data_selector: parameters
    params:
      inplace: false
- name: DataFrame
  endpoint:
    path: /dataframe
    method: GET
    data_selector: records
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: examples
    params: {}
- name: DataFrame.iloc
  endpoint:
    path: /api-reference/dataframe/iloc
    method: GET
    data_selector: args
- name: DataFrame.asType
  endpoint:
    path: /api-reference/dataframe/dataframe.astype
    method: POST
    data_selector: options
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: data
    params: {}
- name: DataFrame_shape
  endpoint:
    path: /api-reference/dataframe/dataframe.shape
    method: GET
    data_selector: shape
    params: {}
- name: DataFrame.iat
  endpoint:
    path: /api-reference/dataframe/dataframe.iat
    method: GET
    data_selector: scalar
    params: {}
- name: DataFrame.axis
  endpoint:
    path: /api-reference/dataframe/dataframe.axis
    method: GET
    data_selector: axis
    params: {}
- name: DataFrame.tail
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.tail
    method: GET
    data_selector: rows
    params:
      rows: 5
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: values
- name: DataFrame.selectDtypes
  endpoint:
    path: /api-reference/dataframe/dataframe.select_dtypes
    method: GET
    data_selector: columns
    params: {}
- name: sample
  endpoint:
    path: /api-reference/dataframe/sample
    method: GET
    data_selector: sample
    params:
      num: 5
- name: sample
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.sample
    method: GET
    data_selector: records
    params: {}
- name: float_columns
  endpoint:
    path: /api-reference/dataframe/selectDtypes
    method: GET
    data_selector: float32
- name: mixed_columns
  endpoint:
    path: /api-reference/dataframe/selectDtypes
    method: GET
    data_selector: float32,int32
- name: string_columns
  endpoint:
    path: /api-reference/dataframe/selectDtypes
    method: GET
    data_selector: string
- name: DataFrame.add
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.add
    method: GET
    data_selector: parameters
- name: ctypes
  endpoint:
    path: /api-reference/dataframe/dataframe.ctypes
    method: GET
    data_selector: dtypes
- name: DataFrame_index
  endpoint:
    path: /api-reference/dataframe/index
    method: GET
    data_selector: index
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: records
- name: DataFrame.loc
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.loc
    method: GET
    data_selector: args
    params: {}
- name: DataFrame.mul
  endpoint:
    path: /api-reference/dataframe/dataframe.mul
    method: GET
    data_selector: parameters
    params: {}
- name: iloc
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.iloc
    method: GET
    data_selector: args
    params: {}
- name: DataFrame.div
  endpoint:
    path: /api-reference/dataframe/dataframe.div
    method: GET
    data_selector: parameters
    params: {}
- name: dataframe
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: dataframes
    params: {}
- name: dataframe_pow
  endpoint:
    path: /api-reference/dataframe/dataframe.pow
    method: GET
    data_selector: parameters
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: data
- name: DataFrame.iat
  endpoint:
    path: /api-reference/dataframe/dataframe.iat
    method: GET
    data_selector: Scalar
- name: DataFrame.mod
  endpoint:
    path: /api-reference/dataframe/dataframe.mod
    method: POST
    data_selector: modulo
    params: {}
- name: DataFrame.head
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.head
    method: GET
    data_selector: records
    params:
      rows: 5
- name: DataFrame.mean
  endpoint:
    path: /api-reference/dataframe/dataframe.mean
    method: GET
    data_selector: returns
    params:
      options:
        axis: 1
- name: dataframe_tail
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.tail
    method: GET
    data_selector: records
    params:
      rows: 5
- name: sample
  endpoint:
    path: /dataframe/sample
    method: GET
    data_selector: records
    params:
      num: 5
      options:
        seed: 1
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: POST
    data_selector: response.data
    params:
      axis: 1
- name: DataFrame.add
  endpoint:
    path: /api-reference/dataframe/dataframe.add
    method: GET
    data_selector: parameters
    params: {}
- name: median
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.median
    method: GET
    data_selector: output
    params: {}
- name: DataFrame.min
  endpoint:
    path: /api-reference/dataframe/dataframe.min
    method: GET
    data_selector: options
    params:
      axis: 1
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: records
- name: dataframe_min
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.min
    method: GET
    data_selector: output
    params: {}
- name: DataFrame.mul
  endpoint:
    path: /api-reference/dataframe/dataframe.mul
    method: GET
    data_selector: parameters
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: methods
    params: {}
- name: DataFrame.div
  endpoint:
    path: /api-reference/dataframe/div
    method: GET
    data_selector: parameters
    params: {}
- name: max_value
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.max
    method: GET
    data_selector: records
- name: dataframe_std
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.std
    method: POST
    data_selector: std
    params:
      axis: 1
- name: DataFrame.pow
  endpoint:
    path: /api-reference/dataframe/dataframe.pow
    method: GET
    data_selector: exponential power
    params: {}
- name: DataFrame.var
  endpoint:
    path: /api-reference/dataframe/dataframe.var
    method: GET
    data_selector: records
- name: DataFrame.count
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.count
    method: GET
    data_selector: records
    params: {}
- name: modulo_operation
  endpoint:
    path: /DataFrame/mod
    method: GET
    data_selector: modulo
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: round
    params: {}
- name: DataFrame.mean
  endpoint:
    path: /api-reference/dataframe/dataframe.mean
    method: GET
    data_selector: Series
    params:
      options:
        axis: 1
- name: DataFrame.cumSum
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.cumsum
    method: GET
    data_selector: records
    params: {}
- name: dataframe
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.mean
    method: GET
    data_selector: output
    params: {}
- name: cumulative_sum
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.cumsum
    method: GET
    data_selector: output
    params: {}
- name: DataFrame.median
  endpoint:
    path: /api-reference/dataframe/median
    method: GET
    data_selector: examples
    params:
      options:
        axis: 1
- name: DataFrame.cumMin
  endpoint:
    path: /api-reference/dataframe/cummin
    method: POST
    data_selector: options
    params: {}
- name: median
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.median
    method: GET
    data_selector: output
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.cummin
    method: GET
    data_selector: output
    params: {}
- name: DataFrame.min
  endpoint:
    path: /api-reference/dataframe/dataframe.min
    method: POST
    data_selector: options
- name: DataFrame.cumMax
  endpoint:
    path: /api-reference/dataframe/cummax
    method: POST
    data_selector: returns
    params:
      options:
        axis: 1
        inplace: false
- name: dataframe_min
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.min
    method: GET
    data_selector: output
    params: {}
- name: max
  endpoint:
    path: /api-reference/dataframe/dataframe.max
    method: GET
    data_selector: records
    params:
      axis: 1
- name: DataFrame.cumProd
  endpoint:
    path: /danfo.DataFrame/cumProd
    method: POST
    data_selector: options
    params: {}
- name: cumulative_product
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.cumprod
    method: GET
    data_selector: output
    params: {}
- name: DataFrame_std
  endpoint:
    path: /api-reference/dataframe/std
    method: GET
    data_selector: std
    params:
      axis: 1
- name: DataFrame.copy
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.copy
    method: GET
    data_selector: examples
- name: DataFrame.var
  endpoint:
    path: /api-reference/dataframe/dataframe.var
    method: GET
    data_selector: options
    params: {}
- name: DataFrame.describe
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.describe
    method: GET
    data_selector: records
- name: var
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.var
    method: GET
    data_selector: output
    params: {}
- name: DataFrame.sum
  endpoint:
    path: /api-reference/dataframe/dataframe.sum
    method: GET
    data_selector: sum
    params:
      options:
        axis: 1
- name: DataFrame.count
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.count
    method: GET
    data_selector: parameters
    params: {}
- name: DataFrame.abs
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.abs
    method: GET
    data_selector: records
- name: round
  endpoint:
    path: /api-reference/dataframe/dataframe.round
    method: POST
    data_selector: options
- name: dataframe
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.round
    method: GET
    data_selector: output
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe/query
    method: GET
    data_selector: query_results
    params: {}
- name: DataFrame.addColumn
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.addcolumn
    method: POST
    data_selector: returns
    params:
      inplace: false
- name: DataFrame.cumSum
  endpoint:
    path: /api-reference/dataframe/cumSum
    method: POST
    data_selector: options
    params:
      axis: 1
      inplace: false
- name: addColumn
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.addColumn
    method: GET
    data_selector: output
    params: {}
- name: addSeriesAsColumn
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.addSeriesAsColumn
    method: GET
    data_selector: output
    params: {}
- name: DataFrame.cumMin
  endpoint:
    path: /api-reference/dataframe/cumMin
    method: POST
    data_selector: options
    params:
      axis: 1
      inplace: false
- name: DataFrame.groupby
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.groupby
    method: GET
    data_selector: GroupBy
    params: {}
- name: cumulative_max
  endpoint:
    path: /api-reference/dataframe/cummax
    method: POST
    data_selector: DataFrame
    params:
      options:
        axis: 1
        inplace: false
- name: DataFrame.column
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.column
    method: GET
    data_selector: records
    params: {}
- name: cumulative_max
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.cummax
    method: GET
    data_selector: output
    params: {}
- name: fillNa
  endpoint:
    path: /danfo.DataFrame.fillNa
    method: POST
    data_selector: parameters
    params: {}
- name: cumProd
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.cumprod
    method: GET
    data_selector: results
    params:
      axis: 1
      inplace: false
- name: data_frame
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.fillna
    method: GET
    data_selector: output
    params: {}
- name: DataFrame.copy
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.copy
    method: GET
    data_selector: examples
- name: DataFrame.dropNa
  endpoint:
    path: /danfo.DataFrame/dropNa
    method: POST
    data_selector: parameters
    params:
      axis: 1
      options:
        inplace: false
- name: DataFrame.describe
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.describe
    method: GET
    data_selector: records
- name: DataFrame sum
  endpoint:
    path: /api-reference/dataframe/dataframe.sum
    method: GET
    data_selector: options
    params:
      axis: 1
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.dropna
    method: GET
    data_selector: records
    params: {}
- name: sum
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.sum
    method: GET
    data_selector: elements
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: examples
    params: {}
- name: DataFrame.abs
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.abs
    method: GET
    data_selector: records
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: applyMap
    params: {}
- name: DataFrame
  endpoint:
    path: /dataframe
    method: GET
    data_selector: records
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: query
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.query
    method: GET
    data_selector: records
- name: DataFrame.addColumn
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.addcolumn
    method: GET
    data_selector: parameters
- name: DataFrame_gt
  endpoint:
    path: /api-reference/dataframe/dataframe.gt
    method: GET
    data_selector: parameters
    params:
      axis: 1
- name: add_column_array
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.addColumn
    method: POST
    data_selector: output
- name: add_column_series
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.addColumn
    method: POST
    data_selector: output
- name: DataFrame.groupby
  endpoint:
    path: /api-reference/dataframe/groupby
    method: GET
    data_selector: examples
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: records
- name: groupby_sum
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.groupby
    method: GET
    data_selector: results
    params: {}
- name: DataFrame.column
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.column
    method: GET
    data_selector: parameters
    params: {}
- name: DataFrame.ge
  endpoint:
    path: /api-reference/dataframe/ge
    method: GET
    data_selector: examples
    params: {}
- name: fillNa
  endpoint:
    path: /danfo.DataFrame.fillNa
    method: POST
    data_selector: parameters
    params:
      values: Array | Scalar
      options:
        columns: Array of column name(s)
        inplace: Boolean
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: records
    params: {}
- name: dataframe_comparison
  endpoint:
    path: /api/reference/dataframe/comparison
    method: GET
    data_selector: records
- name: DataFrame.dropNa
  endpoint:
    path: /danfo/dataframe/dropNa
    method: POST
    data_selector: output
    params:
      axis: 1
      options:
        inplace: false
- name: DataFrame.eq
  endpoint:
    path: /api-reference/dataframe/dataframe.eq
    method: GET
    data_selector: parameters
    params: {}
- name: DataFrame.apply
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.apply
    method: GET
    data_selector: examples
    params: {}
- name: DataFrame.replace
  endpoint:
    path: /api-reference/dataframe/replace
    method: GET
    data_selector: parameters
    params: {}
- name: DataFrame.applyMap
  endpoint:
    path: /api-reference/dataframe/dataframe.apply_map
    method: GET
    data_selector: parameters
    params:
      axis: 1
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: data
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: data
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: records
- name: finance_charts
  endpoint:
    path: /plotly/datasets/master/finance-charts-apple.csv
    method: GET
    data_selector: data
    params: {}
- name: violin_plot
  endpoint:
    path: /api-reference/plotting/violin-plots
    method: GET
    data_selector: examples
- name: DataFrame.ge
  endpoint:
    path: /ge
    method: GET
    data_selector: output
    params:
      axis: 1
- name: titanic_data
  endpoint:
    path: /pandas-dev/pandas/master/doc/data/titanic.csv
    method: GET
    data_selector: data
    params: {}
- name: DataFrame.ne
  endpoint:
    path: /api-reference/dataframe/dataframe.ne
    method: GET
    data_selector: returns
    params: {}
- name: titanic_data
  endpoint:
    path: /pandas-dev/pandas/master/doc/data/titanic.csv
    method: GET
    data_selector: data
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe/danfo.dataframe.eq
    method: GET
    data_selector: output
    params: {}
- name: headerStyle
  endpoint:
    path: https://raw.githubusercontent.com/pandas-dev/pandas/master/doc/data/titanic.csv
    method: GET
    data_selector: headerStyle
    params: {}
- name: cellStyle
  endpoint:
    path: https://raw.githubusercontent.com/pandas-dev/pandas/master/doc/data/titanic.csv
    method: GET
    data_selector: cellStyle
    params: {}
- name: DataFrame
  endpoint:
    path: /api-reference/dataframe
    method: GET
    data_selector: data
    params: {}
- name: DataFrame.replace
  endpoint:
    path: /api-reference/dataframe/dataframe.replace
    method: GET
    data_selector: parameters
    params: {}
- name: titanic
  endpoint:
    path: /pandas-dev/pandas/master/doc/data/titanic.csv
    method: GET
    data_selector: data
    params: {}
- name: titanic_data
  endpoint:
    path: /pandas-dev/pandas/master/doc/data/titanic.csv
    method: GET
    data_selector: data
    params: {}
- name: finance_charts
  endpoint:
    path: /plotly/datasets/master/finance-charts-apple.csv
    method: GET
- name: titanic_data
  endpoint:
    path: /titanic.csv
    method: GET
    data_selector: data
    params: {}
- name: line_charts
  endpoint:
    path: /api-reference/plotting/line-charts
    method: GET
    data_selector: examples
    params: {}
- name: titanic_data
  endpoint:
    path: /titanic.csv
    method: GET
    data_selector: data
    params: {}
- name: config
  endpoint:
    path: /api-reference/plotting/configuring-your-plots
    method: GET
    data_selector: config_parameters
    params: {}
- name: layout
  endpoint:
    path: /api-reference/plotting/configuring-your-plots
    method: GET
    data_selector: layout_parameters
    params: {}
- name: titanic
  endpoint:
    path: https://raw.githubusercontent.com/pandas-dev/pandas/master/doc/data/titanic.csv
    method: GET
    data_selector: data
    params: {}
- name: finance_charts
  endpoint:
    path: /finance-charts-apple.csv
    method: GET
    data_selector: data
    params: {}
- name: pie_chart
  endpoint:
    path: /api-reference/plotting/pie-charts
    method: GET
    data_selector: records
- name: GroupBy
  endpoint:
    path: /api-reference/groupby
    method: GET
    data_selector: GroupBy
    params: {}
- name: getGroups
  endpoint:
    path: /api-reference/groupby/getGroups
    method: GET
    data_selector: groups
    params: {}
- name: histogram
  endpoint:
    path: /api/histogram
    method: GET
    data_selector: data
    params: {}
- name: groupby
  endpoint:
    path: /api-reference/groupby/groupby.getgroups
    method: GET
    data_selector: records
- name: groupby_max
  endpoint:
    path: /api-reference/groupby/groupby.max
    method: GET
    data_selector: records
- name: bar_plot_on_series
  endpoint:
    path: /bar-plot-on-series
    method: GET
    data_selector: examples
    params: {}
- name: bar_plot_on_dataframe
  endpoint:
    path: /bar-plot-on-dataframe
    method: GET
    data_selector: examples
    params: {}
- name: groupby_min
  endpoint:
    path: /groupby/min
    method: GET
    data_selector: records
    params: {}
- name: groupby_sum
  endpoint:
    path: /api-reference/groupby/groupby.sum
    method: GET
    data_selector: DataFrame
- name: config_parameter
  endpoint:
    path: /api-reference/plotting/configuring-your-plots
    method: GET
    data_selector: config
    params: {}
- name: layout_parameter
  endpoint:
    path: /api-reference/plotting/layout
    method: GET
    data_selector: layout
    params: {}
- name: groupby_mean
  endpoint:
    path: /api-reference/groupby/groupby.mean
    method: GET
    data_selector: DataFrame
    params: {}
- name: groupby_std
  endpoint:
    path: /api-reference/groupby/groupby.std
    method: GET
    data_selector: results
- name: groupby
  endpoint:
    path: /api-reference/groupby
    method: GET
    data_selector: groupby
    params: {}
- name: group_by_variance
  endpoint:
    path: /api-reference/groupby/groupby.var
    method: GET
    data_selector: DataFrame
    params: {}
- name: groupby
  endpoint:
    path: /api-reference/groupby/groupby.getgroups
    method: GET
    data_selector: records
    params: {}
- name: Groupby.cumSum
  endpoint:
    path: /api-reference/groupby/groupby.cumsum
    method: GET
- name: groupby_max_single_column
  endpoint:
    path: /groupby/max/single_column
    method: GET
    data_selector: records
- name: groupby_max_multiple_columns
  endpoint:
    path: /groupby/max/multiple_columns
    method: GET
    data_selector: records
- name: groupby_cumMax
  endpoint:
    path: /api-reference/groupby/groupby.cummax
    method: GET
    data_selector: records
- name: groupby_min
  endpoint:
    path: /api-reference/groupby/groupby.min
    method: GET
    data_selector: DataFrame
    params: {}
- name: Groupby.cumProd
  endpoint:
    path: /api-reference/groupby/groupby.cumprod
    method: GET
    data_selector: records
- name: groupby_agg
  endpoint:
    path: /core/groupby.js
    method: GET
    data_selector: records
    params: {}
- name: mean_per_group_one_column
  endpoint:
    path: /mean/per/group/one/column
    method: GET
    data_selector: records
- name: mean_per_group_two_columns
  endpoint:
    path: /mean/per/group/two/columns
    method: GET
    data_selector: records
- name: groupby_std
  endpoint:
    path: /api-reference/groupby/groupby.std
    method: GET
    data_selector: data
- name: titanic_data
  endpoint:
    path: https://web.stanford.edu/class/archive/cs/cs109/cs109.1166/stuff/titanic.csv
    method: GET
    data_selector: data
    params: {}
- name: groupby_variance
  endpoint:
    path: /api-reference/groupby/groupby.var
    method: GET
    data_selector: Shape
- name: titanic_data
  endpoint:
    path: /titanic.csv
    method: GET
    data_selector: data
    params: {}
- name: groupby_count
  endpoint:
    path: /api-reference/groupby/groupby.count
    method: GET
    data_selector: DataFrame
- name: groupby_var
  endpoint:
    path: /api-reference/groupby/groupby.var
    method: GET
    data_selector: DataFrame
- name: groupby_cumsum
  endpoint:
    path: /api-reference/groupby/groupby.cumsum
    method: GET
    data_selector: DataFrame
- name: Groupby.cumSum
  endpoint:
    path: /api-reference/groupby/groupby.cumsum
    method: GET
    data_selector: records
- name: git
  endpoint:
    path: /git
    method: GET
    data_selector: repositories
    params: {}
- name: groupby_agg
  endpoint:
    path: /api-reference/groupby/groupby.agg
    method: GET
    data_selector: records
- name: titanic
  endpoint:
    path: https://web.stanford.edu/class/archive/cs/cs109/cs109.1166/stuff/titanic.csv
    method: GET
    data_selector: data
    params: {}
- name: titanic_data
  endpoint:
    path: /load_process_data
    method: GET
    data_selector: records
notes:
- A stable version of Danfojs (v1), has been released, and it comes with full Typescript
  support, new features, and many bug fixes.
- There are a couple of breaking changes, so we have prepared a short migration guide
  for pre-v1 users.
- Operations in general exclude missing data.
- Only available in Nodejs version.
- Only available in Node.js
- Streams a CSV file from a local or remote location in chunks.
- Labels not found in the original data used for fitting are represented with 0s all
  through
- Converts categorical variable into dummy/indicator variables.
- The how parameter takes other types of joins like left, right and outer join and
  these are similar to their SQL equivalent
- Includes functions for converting DataFrames to various formats.
- Convert DataFrame/Series to JSON and return value
- Convert DataFrame/Series to JSON and write to file path
- Convert DataFrame/Series to JSON and download file in browser
- The readJSON method can read JSON files from a local disk, over the internet, or
  directly from input file objects.
- The toJSON function can be used to write out a DataFrame or Series to JSON format/file.
- Writing a DataFrame/Series as JSON, to a local file path is only supported in the
  Nodejs environment
- You can automatically convert and download a DataFrame/Series as a JSON file in
  a browser environment, by specifying a fileName and setting download to true.
- You can automatically convert and download a DataFrame/Series as a JSON file in
  a browser environment
- The toCSV function can be used to write out a DataFrame or Series to CSV file. The
  output is configurable and will depend on the environment.
- Reading files from local disk is only supported in Node.js.
- Reading of input file objects is only supported in the browser.
- Specifying dtypes, and index on Series creation makes the process slightly faster.
- In low memory mode, less space is used by the Series.
- The 'inplace' option determines if the operation is performed in-place.
- 'inplace: false'
- 'inplace: Whether to perform the operation in-place or not.'
- Default startIndex is 0
- Default num is 1
- 'Default options is {''inplace'': false}'
- Obtain the substring of each element in a series
- Repeat the character(s) in a string for a specified number of times
- Replace a word or character(s) in a String element
- Obtain the position of the last found occurrence of a specified value in a string
- Checks whether a string contains the specified string/characters
- Checks whether a string ends with specified characters
- Remove leading and trailing Whitespace from a String element
- This function concatenates strings or arrays to each element in the series.
- Obtain the substring from a String element in a Series
- Parameters include startIndex, num, and options
- Obtain the index position of a searched character in a String
- Repeat the character(s) in a string for a specified number of times.
- Test whether a string begins with specified characters
- Concatenates strings or arrays to each element of a Series
- Obtain the numerical representation of the week day.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Detect Missing values
- Replace values given in replace param with value
- Check if all the values in a series is greater than or equal to a value
- Fill NaN value and then return new series
- Fill NaN value in place
- only the start label is included, and the end label is ignored.
- .iloc will raise IndexError if a requested indexer is out-of-bounds.
- loc will raise a ValueError if a requested label is not found.
- Inner quotes are not needed for numeric indices
- Access a single value for a row/column pair by integer position.
- Obtain the dimension of a series
- 'inplace: Boolean indicating whether to perform the operation in-place or not. Defaults
  to false'
- only **** the start label is included, and the end label is ignored.
- Defaults to not performing the operation inplace
- Inner quotes are not needed for numeric indices!
- resetIndex is useful when the index needs to be treated as a column, or when the
  index is meaningless and needs to be reset to default, before another operation.
- Generate descriptive statistics. Descriptive statistics include those that summarize
  the central tendency, dispersion and shape of a dataset’s distribution, excluding
  NaN values.
- 'Defaults for options include inplace: false and ascending: true'
- Function can be anonymous to apply on each value in a Series.
- 'inplace: Boolean indicating whether to perform the operation inplace or not. Defaults
  to false'
- Obtain the maximum number between two series
- Makes a deep copy of a Series
- Defaults to ascending order for sorting.
- Defaults to not performing the operation in-place.
- Returns the mode of elements in a series
- No authentication required for accessing the API.
- Specifying dtypes, column names and index on DataFrame creation makes the process
  slightly faster.
- In low memory mode, less space is used by the DataFrame. The drawback is that some
  operations especially the ones involving column data become slightly slower.
- Returns a random sample of items from an axis of object.
- Appends new row to the end of a DataFrame
- Returns the number of unique elements in a column, across the specified axis.
- Tensorflow tensors have single dtype, and will replace any string value with NaN.
  Use with care.
- 'Deprecated in v1.1.0: Use the dfd.toCSV function directly instead'
- Writing a CSV file to a local file path is only supported in the Nodejs environment
- You can automatically convert and download a CSV file in a browser environment,
  by specifying a fileName and setting download to true.
- 'Deprecated in v1.1.0: Use the dfd.toJSON function directly instead'
- Appends a new row to the end of a DataFrame
- Sorts DataFrame in ascending or descending order by a specified column name.
- To reset an index to the default values, use the [DataFrame.resetIndex](/api-reference/dataframe/dataframe.reset_index).
- Setting inplace to true modifies the original DataFrame.
- 'Deprecated in v1.1.0: Use the `dfd.toCSV` function directly instead'
- You can automatically convert and download a CSV file in a browser environment,
  by specifying a fileName and setting download to true
- Defaults to false for inplace operation
- Casting a string column of alphabets/words to numeric form will return NaNs as values
- To get the shape of the DataFrame use the .shape property.
- 'Deprecated in v1.1.0: Use the dfd.toExcel function directly instead'
- Columns with mixed types are represented as string.
- To cast a type, use the asType method.
- To reset an index to the default values, use the DataFrame.resetIndex.
- Labels not contained in a dict / Series will be left as-is
- Extra labels listed don’t throw an error
- 'The loc function accepts string slices of the form [start: end], e.g [''a'':''c''].'
- only the start index is included.
- IndexError if a requested indexer is out-of-bounds
- Inplace operation defaults to false
- Defaults to 5, which shuffles and return all rows.
- By setting seed when using sample, you can ensure that the random sampling is reproducible.
- Defaults to adding along axis 1.
- The operation can be performed inplace.
- Addition works inplace
- .loc will raise a ValueError if a requested label is not found.
- Multiplication of dataframe and other, element-wise (binary operator mul).
- Multiplication works inplace
- only the start index is included
- iloc will raise IndexError if a requested indexer is out-of-bounds
- Division of DataFrame and other, element-wise
- Defaults to axis 1 for operation.
- Access a single value for a row/column label pair.
- Addition of DataFrame and other, element-wise (binary operator add).
- Computes the median of values along row axis (0)
- Subtraction of DataFrame is performed element-wise.
- No authentication required for accessing the API
- Subtraction works inplace
- Return the maximum of the values for the requested axis.
- Division works inplace
- Uses Danfo.js for data manipulation
- Defaults axis to 1 and inplace to false for the modulo operation.
- Defaults to rounding to 1 decimal place
- Operation can be performed in place
- Modulo works inplace
- Returns cumulative sum over a DataFrame or Series axis.
- Computes the mean of values along row axis (0)
- Returns cumulative minimum over a DataFrame or Series axis.
- Cumulative minimum of elements along column axis (1)
- Cumulative maximum of elements along column axis
- If axis is 0, compute the mean column-wise, if 1, row-wise. Defaults to 1.
- Counts non-NaN cells for each column or row. The values NaN and undefined are considered
  NaN.
- Return the elements of the specified column as a Series
- Fill NaN/undefined values using the specified method.
- Detect missing values for an array-like object.
- NaN, null and undefined values get mapped to true, and everything else gets mapped
  to false.
- No authentication required.
- The abs function only works on numeric columns and will throw an error if string
  columns are found in the DataFrame.
- Apply a function to a Dataframe values element-wise.
- Get Greater than of DataFrame and other, element-wise
- Defaults to false for inplace option
- Element-wise comparison using the ne method in DataFrame.
- Uses danfo.js for DataFrame manipulation
- Function to apply to each column or row requires an axis parameter.
- Replaces values in a DataFrame with specified values
- There's a slight decrease in speed when low memory mode is set to true.
- Get Less than or Equal to of DataFrame and other, element-wise (binary operator
  eq).
- Uses danfojs library for data manipulation and visualization
- No authentication required for usage.
- No authentication required for usage
- Comparing a DataFrame with a Series along the column axis
- Comparing a DataFrame with a DataFrame
- Comparing a DataFrame with a JavaScript Array
- If not specified, replace all columns.
- Some objects like Contact may return nulls in deeply nested fields
- Uses danfojs for data manipulation
- The CSV file contains information about the Titanic passengers
- The library provides options for plotting line charts from DataFrames.
- For more configuration options for Pie Charts, see the Plotly style doc.
- For more configuration options for Histograms, see the Plotly doc.
- Output from groupby operations may not be useful unless further operations like
  max() or count() are performed.
- To customize your plots, see the Customize your plot page
- This library is used for plotting and visualizing data in JavaScript.
- No parameters are required for the groupby.sum function.
- Danfojs works for both browser and NodeJs environment.
- You must install the browser side version from npm.
- 'Danfo.js comes in two builds: browser-based and Node.js.'
- Danfo now ships with an exported version of tensorflow (v2.8.5) under the namespace
  `tf`.
- Obtain the variance per groups for a specified column
- Uses Tensorflow.js and Danfo.js for data processing and model training.
- Training reaches an accuracy of about 83% after 15 epochs.
- Obtain the cumulative max per groups for each column
- Upgrade of SheetJS dependency
- 'fix: replace does not accept falsy strings or numbers'
- Adds function overload to NDFrame toCSV and toJSON so danfojs-base and danfojs-browser
  can use the same code
- Better error handling for io functions
- Update io.excel.ts to use default values for options
- fix dtypes not used on csv parse
- fix isEmpty bug with bigInt
- 'Typescript support: This new version has been completely re-written using Typescript.'
- 'Standard naming convention: Functions, methods, classes, and variable names have
  been standardized to follow JavaScript best practices.'
- 'Standardize function argument: Functions and methods have been updated to accept
  arguments and parameters intuitively.'
- 'New features: We added a couple of new features which users have been requesting
  for. For example: Stream and process large CSV data.'
- General bug fixes and improvements
- Better error messages
- Danfojs works for both browser and NodeJs environment
- You must install the browser side version from npm
- Danfo now ships with an exported version of tensorflow (v2.8.5). This is exported
  under the namespace `tf`.
- Uses TensorFlow.js and Danfo.js for data processing and model training
- Some Javascript features are supported both in the browser and node environment,
  and it is recommended to add features in the danfojs-base folder.
errors:
- 'IndexError: if a requested indexer is out-of-bounds.'
- 'ValueError: if a requested label is not found.'
- 'IndexError: if a requested indexer is out-of-bounds'
- 'ValueError: If a requested label is not found.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://danfo.jsdata.org
  headers:
    Accept: application/json
source_metadata: null
