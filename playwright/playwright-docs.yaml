resources:
- name: addCookies
  endpoint:
    path: /browserContext/addCookies
    method: POST
- name: addInitScript
  endpoint:
    path: /browserContext/addInitScript
    method: POST
- name: clearCookies
  endpoint:
    path: /browserContext/clearCookies
    method: DELETE
- name: clearPermissions
  endpoint:
    path: /browserContext/clearPermissions
    method: DELETE
- name: close
  endpoint:
    path: /browserContext/close
    method: DELETE
- name: cookies
  endpoint:
    path: /browserContext/cookies
    method: GET
- name: exposeBinding
  endpoint:
    path: /browserContext/exposeBinding
    method: POST
- name: chromium
  endpoint:
    path: /api/chromium
    method: GET
- name: firefox
  endpoint:
    path: /api/firefox
    method: GET
- name: webkit
  endpoint:
    path: /api/webkit
    method: GET
- name: devices
  endpoint:
    path: /api/devices
    method: GET
- name: request
  endpoint:
    path: /api/request
    method: GET
- name: selectors
  endpoint:
    path: /api/selectors
    method: GET
- name: example_test
  endpoint:
    path: /python/docs/intro#add-example-test
    method: GET
    data_selector: example_test_case
- name: trace
  endpoint:
    path: /docs/trace-viewer
    method: GET
    data_selector: traces
    params: {}
- name: Playwright Tests
  endpoint:
    path: /.github/workflows/playwright.yml
    method: GET
    data_selector: jobs
- name: tests
  endpoint:
    path: /tests
    method: GET
    data_selector: tests
    params: {}
- name: Playwright Test Agents
  endpoint:
    path: /playwright/init-agents
    method: POST
    data_selector: agents
    params: {}
- name: test_agents
  endpoint:
    path: /docs/test-agents
    method: GET
    data_selector: agents
    params: {}
- name: new_apis
  endpoint:
    path: /docs/new-apis
    method: GET
    data_selector: apis
    params: {}
- name: ui_mode
  endpoint:
    path: /docs/ui-mode
    method: GET
    data_selector: ui
    params: {}
- name: breaking_changes
  endpoint:
    path: /docs/breaking-changes
    method: GET
    data_selector: changes
    params: {}
- name: aria_snapshots
  endpoint:
    path: /docs/api/class-locatorassertions#locator-assertions-to-match-aria-snapshot
    method: GET
    data_selector: records
- name: test_runner
  endpoint:
    path: /docs/api/class-testconfig#test-config-update-snapshots
    method: GET
    data_selector: records
- name: browserContext.on('weberror')
  endpoint:
    path: /docs/api/class-browsercontext#browser-context-event-web-error
    method: GET
- name: locator.pressSequentially()
  endpoint:
    path: /docs/api/class-locator#locator-press-sequentially
    method: GET
- name: reporter.onEnd()
  endpoint:
    path: /docs/api/class-reporter#reporter-on-end
    method: GET
- name: web_server
  endpoint:
    path: /test/webServer
    method: GET
    data_selector: server_info
- name: planner
  endpoint:
    path: /docs/test-agents
    method: GET
- name: generator
  endpoint:
    path: /docs/test-agents
    method: GET
- name: healer
  endpoint:
    path: /docs/test-agents
    method: GET
- name: annotations
  endpoint:
    path: /docs/test-annotations
    method: GET
    data_selector: annotations
    params: {}
- name: test
  endpoint:
    path: /tests
    method: GET
    data_selector: records
- name: tests
  endpoint:
    path: /tests
    method: GET
- name: devices
  endpoint:
    path: /api/devices
    method: GET
    data_selector: devices
- name: fixtures
  endpoint:
    path: /docs/test-fixtures
    method: GET
    data_selector: records
- name: todoPage
  endpoint:
    path: /todoPage
    method: GET
    data_selector: defaultItem
    params: {}
- name: projects
  endpoint:
    path: /docs/test-projects
    method: GET
    data_selector: projects
    params: {}
- name: HTML reporter
  endpoint:
    path: /docs/test-reporters#html-reporter
    method: GET
    data_selector: reporters
    params: {}
- name: JSON reporter
  endpoint:
    path: /docs/test-reporters#json-reporter
    method: GET
    data_selector: reporters
    params: {}
- name: JUnit reporter
  endpoint:
    path: /docs/test-reporters#junit-reporter
    method: GET
    data_selector: reporters
    params: {}
- name: GitHub Actions annotations
  endpoint:
    path: /docs/test-reporters#github-actions-annotations
    method: GET
    data_selector: reporters
    params: {}
- name: my-awesome-reporter
  endpoint:
    path: /docs/api/class-reporter
    method: GET
- name: playwright.config.ts
  endpoint:
    path: /docs/api/class-testconfig#test-config-reporter
    method: GET
- name: tsconfig
  endpoint:
    path: tsconfig.json
    method: GET
    data_selector: compilerOptions
- name: UI Mode
  endpoint:
    path: /docs/test-ui-mode
    method: GET
    data_selector: tests
    params: {}
- name: webServer
  endpoint:
    path: /docs/api/class-testconfig#test-config-web-server
    method: GET
    data_selector: properties
- name: accessibility_tests
  endpoint:
    path: /accessibility/tests
    method: GET
    data_selector: results
- name: issues
  endpoint:
    path: /repos/${USER}/${REPO}/issues
    method: POST
    data_selector: data
- name: repository
  endpoint:
    path: /user/repos
    method: POST
    data_selector: data
- name: browsers
  endpoint:
    path: /install-browsers
    method: POST
    data_selector: browsers
    params: {}
- name: system_dependencies
  endpoint:
    path: /install-system-dependencies
    method: POST
    data_selector: system_dependencies
    params: {}
- name: chromium
  endpoint:
    path: /install/chromium
    method: GET
    data_selector: browsers
    params: {}
- name: firefox
  endpoint:
    path: /install/firefox
    method: GET
    data_selector: browsers
    params: {}
- name: webkit
  endpoint:
    path: /install/webkit
    method: GET
    data_selector: browsers
    params: {}
- name: installed_browsers
  endpoint:
    path: /list_installed_browsers
    method: GET
    data_selector: browsers
    params: {}
- name: uninstall_browsers
  endpoint:
    path: /uninstall_browsers
    method: POST
    data_selector: status
    params:
      action: remove
      browsers:
      - chromium
      - firefox
      - webkit
- name: service_worker
  endpoint:
    path: /path/to/service_worker
    method: GET
    data_selector: serviceWorker
    params: {}
- name: clock
  endpoint:
    path: /api/clock
    method: GET
    data_selector: methods
    params: {}
- name: dialogs
  endpoint:
    path: /docs/api/class-dialog
    method: GET
    data_selector: dialog-related
    params: {}
- name: download
  endpoint:
    path: /api/class-page#page-event-download
    method: GET
    data_selector: attachments
    params: {}
- name: downloadsPath
  endpoint:
    path: /api/class-browsertype#browser-type-launch-option-downloads-path
    method: GET
    data_selector: option
    params: {}
- name: custom_selector_engines
  endpoint:
    path: /docs/api/class-selectors#selectors-register
    method: GET
    data_selector: properties
- name: frame
  endpoint:
    path: /api/class-frame
    method: GET
    data_selector: frames
    params: {}
- name: page
  endpoint:
    path: /api/class-page
    method: GET
    data_selector: pages
    params: {}
- name: JSHandle
  endpoint:
    path: /docs/api/class-jshandle
    method: GET
    data_selector: JSHandle
- name: ElementHandle
  endpoint:
    path: /docs/api/class-elementhandle
    method: GET
    data_selector: ElementHandle
- name: navigation
  endpoint:
    path: /docs/api/class-page#page-goto
    method: GET
    data_selector: record
    params: {}
- name: HTTP Authentication
  endpoint:
    path: /docs/auth
    method: GET
    data_selector: httpCredentials
    params: {}
- name: HTTP Proxy
  endpoint:
    path: /docs/proxy
    method: GET
    data_selector: proxy
    params: {}
- name: pages
  endpoint:
    path: /api/pages
    method: GET
    data_selector: records
- name: screenshot
  endpoint:
    path: /docs/api/class-page#page-screenshot
    method: GET
    data_selector: parameters
- name: touch_events
  endpoint:
    path: /docs/touch-events
    method: GET
    data_selector: ''
- name: trace_viewer
  endpoint:
    path: /trace/viewer
    method: GET
- name: record_video
  endpoint:
    path: /docs/api/class-playwright
    method: GET
    data_selector: videos
- name: visual_comparisons
  endpoint:
    path: /docs/test-snapshots
    method: GET
    data_selector: snapshots
    params: {}
- name: test_generator
  endpoint:
    path: /python/docs/codegen
    method: GET
    data_selector: records
    params: {}
- name: test
  endpoint:
    path: /docs/api/class-test
    method: GET
    data_selector: records
- name: test_describe
  endpoint:
    path: /test/describe
    method: GET
- name: test_describe_configure
  endpoint:
    path: /test/describe/configure
    method: GET
- name: test_describe_fixme
  endpoint:
    path: /test/describe/fixme
    method: GET
- name: test_describe_only
  endpoint:
    path: /test/describe/only
    method: GET
- name: test_describe_skip
  endpoint:
    path: /test/describe/skip
    method: GET
- name: test_extend
  endpoint:
    path: /test/extend
    method: GET
- name: test.fail
  endpoint:
    path: /test/fail
    method: POST
    data_selector: test
    params: {}
- name: test.fail.only
  endpoint:
    path: /test/fail/only
    method: POST
    data_selector: test
    params: {}
- name: test.fixme
  endpoint:
    path: /test/fixme
    method: POST
    data_selector: test
    params: {}
- name: test.info
  endpoint:
    path: /test/info
    method: GET
    data_selector: test
    params: {}
- name: test.only
  endpoint:
    path: /test/only
    method: POST
    data_selector: test
    params: {}
- name: test.setTimeout
  endpoint:
    path: /test/setTimeout
    method: POST
    data_selector: test
    params: {}
- name: delete
  endpoint:
    path: /apiRequestContext/delete
    method: DELETE
- name: dispose
  endpoint:
    path: /apiRequestContext/dispose
    method: POST
- name: head
  endpoint:
    path: /apiRequestContext/head
    method: HEAD
- name: patch
  endpoint:
    path: /apiRequestContext/patch
    method: PATCH
- name: api_response
  endpoint:
    path: /docs/api/class-apiresponse
    method: GET
    data_selector: response
    params: {}
- name: removeAllListeners
  endpoint:
    path: /browser/removeAllListeners
    method: POST
    data_selector: listeners
    params: {}
- name: startTracing
  endpoint:
    path: /browser/startTracing
    method: POST
    data_selector: tracing
    params: {}
- name: stopTracing
  endpoint:
    path: /browser/stopTracing
    method: POST
    data_selector: traceData
    params: {}
- name: version
  endpoint:
    path: /browser/version
    method: GET
    data_selector: version
    params: {}
- name: onDisconnected
  endpoint:
    path: /browser/on/disconnected
    method: GET
    data_selector: disconnectedEvent
    params: {}
- name: close
  endpoint:
    path: /browserServer/close
    method: POST
    data_selector: void
    params: {}
- name: kill
  endpoint:
    path: /browserServer/kill
    method: POST
    data_selector: void
    params: {}
- name: process
  endpoint:
    path: /browserServer/process
    method: GET
    data_selector: ChildProcess
    params: {}
- name: wsEndpoint
  endpoint:
    path: /browserServer/wsEndpoint
    method: GET
    data_selector: string
    params: {}
- name: browserType
  endpoint:
    path: /api/browsertype
    method: GET
- name: launch
  endpoint:
    path: /browser/type/launch
    method: GET
    data_selector: browser instance
    params: {}
- name: detach
  endpoint:
    path: /cdpSession/detach
    method: POST
    data_selector: void
    params: {}
- name: send
  endpoint:
    path: /cdpSession/send
    method: POST
    data_selector: Object
    params: {}
- name: fastForward
  endpoint:
    path: /clock/fastForward
    method: POST
    data_selector: Promise
    params: {}
- name: install
  endpoint:
    path: /clock/install
    method: POST
    data_selector: Promise
    params: {}
- name: pauseAt
  endpoint:
    path: /clock/pauseAt
    method: POST
    data_selector: Promise
    params: {}
- name: resume
  endpoint:
    path: /clock/resume
    method: POST
    data_selector: Promise
    params: {}
- name: runFor
  endpoint:
    path: /clock/runFor
    method: POST
    data_selector: Promise
    params: {}
- name: setFixedTime
  endpoint:
    path: /clock/setFixedTime
    method: POST
    data_selector: Promise
    params: {}
- name: setSystemTime
  endpoint:
    path: /clock/setSystemTime
    method: POST
    data_selector: Promise
    params: {}
- name: console_message
  endpoint:
    path: /docs/api/class-consolemessage
    method: GET
    data_selector: consoleMessage
- name: startCSSCoverage
  endpoint:
    path: coverage.startCSSCoverage
    method: POST
    data_selector: returns
    params: {}
- name: startJSCoverage
  endpoint:
    path: coverage.startJSCoverage
    method: POST
    data_selector: returns
    params: {}
- name: stopCSSCoverage
  endpoint:
    path: coverage.stopCSSCoverage
    method: POST
    data_selector: returns
    params: {}
- name: stopJSCoverage
  endpoint:
    path: coverage.stopJSCoverage
    method: POST
    data_selector: returns
    params: {}
- name: download
  endpoint:
    path: /docs/api/class-download
    method: GET
- name: type
  endpoint:
    path: /elementHandle/type
    method: POST
    data_selector: arguments
    params: {}
- name: uncheck
  endpoint:
    path: /elementHandle/uncheck
    method: POST
    data_selector: arguments
    params: {}
- name: waitForSelector
  endpoint:
    path: /elementHandle/waitForSelector
    method: POST
    data_selector: arguments
    params: {}
- name: fileChooser
  endpoint:
    method: GET
- name: frameLocator
  endpoint:
    path: /frame/frameLocator
    method: GET
    data_selector: arguments
- name: getByAltText
  endpoint:
    path: /frame/getByAltText
    method: GET
    data_selector: arguments
- name: getByLabel
  endpoint:
    path: /frame/getByLabel
    method: GET
    data_selector: arguments
- name: getByPlaceholder
  endpoint:
    path: /frame/getByPlaceholder
    method: GET
    data_selector: arguments
- name: getByRole
  endpoint:
    path: /frame/getByRole
    method: GET
    data_selector: arguments
- name: getByTestId
  endpoint:
    path: /frame/getByTestId
    method: GET
    data_selector: arguments
- name: getByText
  endpoint:
    path: /frame/getByText
    method: GET
    data_selector: arguments
- name: getByTitle
  endpoint:
    path: /frame/getByTitle
    method: GET
    data_selector: arguments
- name: goto
  endpoint:
    path: /frame/goto
    method: GET
    data_selector: arguments
- name: isDetached
  endpoint:
    path: frame.isDetached
    method: GET
- name: isEnabled
  endpoint:
    path: frame.isEnabled
    method: GET
- name: locator
  endpoint:
    path: frame.locator
    method: GET
- name: name
  endpoint:
    path: frame.name
    method: GET
- name: page
  endpoint:
    path: frame.page
    method: GET
- name: parentFrame
  endpoint:
    path: frame.parentFrame
    method: GET
- name: setContent
  endpoint:
    path: frame.setContent
    method: POST
- name: title
  endpoint:
    path: frame.title
    method: GET
- name: url
  endpoint:
    path: frame.url
    method: GET
- name: waitForFunction
  endpoint:
    path: frame.waitForFunction
    method: GET
- name: waitForLoadState
  endpoint:
    path: frame.waitForLoadState
    method: GET
- name: waitForURL
  endpoint:
    path: frame.waitForURL
    method: GET
- name: frameLocator
  endpoint:
    path: /docs/api/class-framelocator
    method: GET
    data_selector: FrameLocator
    params: {}
- name: getByText
  endpoint:
    path: /frameLocator/getByText
    method: GET
    data_selector: arguments
- name: getByTitle
  endpoint:
    path: /frameLocator/getByTitle
    method: GET
    data_selector: arguments
- name: locator
  endpoint:
    path: /frameLocator/locator
    method: GET
    data_selector: arguments
- name: owner
  endpoint:
    path: /frameLocator/owner
    method: GET
    data_selector: arguments
- name: js_handle
  endpoint:
    path: /api/class-jshandle
    method: GET
    data_selector: methods
    params: {}
- name: keyboard
  endpoint:
    path: /api/class-keyboard
    method: GET
    data_selector: methods
    params: {}
- name: click
  endpoint:
    path: /locator/click
    method: POST
    data_selector: results
    params: {}
- name: dblclick
  endpoint:
    path: /locator/dblclick
    method: POST
    data_selector: results
    params: {}
- name: count
  endpoint:
    path: /locator/count
    method: GET
    data_selector: results
    params: {}
- name: dispatchEvent
  endpoint:
    path: /locator/dispatchEvent
    method: POST
    data_selector: results
    params: {}
- name: dragTo
  endpoint:
    path: /locator/dragTo
    method: POST
    data_selector: results
    params: {}
- name: evaluate
  endpoint:
    path: /locator/evaluate
    method: GET
- name: evaluateAll
  endpoint:
    path: /locator/evaluateAll
    method: GET
- name: evaluateHandle
  endpoint:
    path: /locator/evaluateHandle
    method: GET
- name: fill
  endpoint:
    path: /locator/fill
    method: GET
- name: filter
  endpoint:
    path: /locator/filter
    method: GET
- name: first
  endpoint:
    path: /locator/first
    method: GET
- name: focus
  endpoint:
    path: /locator/focus
    method: GET
- name: frameLocator
  endpoint:
    path: /locator/frameLocator
    method: GET
- name: getAttribute
  endpoint:
    path: /locator/getAttribute
    method: GET
- name: getByAltText
  endpoint:
    path: /locator/getByAltText
    method: GET
- name: getByLabel
  endpoint:
    path: /locator/getByLabel
    method: GET
- name: getByPlaceholder
  endpoint:
    path: /locator/getByPlaceholder
    method: GET
    data_selector: ''
    params: {}
- name: getByRole
  endpoint:
    path: /locator/getByRole
    method: GET
    data_selector: ''
    params: {}
- name: getByTestId
  endpoint:
    path: /locator/getByTestId
    method: GET
    data_selector: ''
    params: {}
- name: getByText
  endpoint:
    path: /locator/getByText
    method: GET
    data_selector: ''
    params: {}
- name: getByTitle
  endpoint:
    path: /locator/getByTitle
    method: GET
    data_selector: ''
    params: {}
- name: highlight
  endpoint:
    path: /locator/highlight
    method: GET
    data_selector: ''
    params: {}
- name: hover
  endpoint:
    path: /locator/hover
    method: GET
    data_selector: ''
    params: {}
- name: innerHTML
  endpoint:
    path: /locator/innerHTML
    method: GET
    data_selector: ''
    params: {}
- name: innerText
  endpoint:
    path: /locator/innerText
    method: GET
    data_selector: ''
    params: {}
- name: pressSequentially
  endpoint:
    path: /locator/pressSequentially
    method: POST
- name: screenshot
  endpoint:
    path: /locator/screenshot
    method: POST
- name: scrollIntoViewIfNeeded
  endpoint:
    path: /locator/scrollIntoViewIfNeeded
    method: POST
- name: selectOption
  endpoint:
    path: /locator/selectOption
    method: POST
- name: selectText
  endpoint:
    path: /locator/selectText
    method: POST
- name: setChecked
  endpoint:
    path: /locator/setChecked
    method: POST
- name: setInputFiles
  endpoint:
    path: /locator/setInputFiles
    method: POST
    data_selector: files
    params: {}
- name: tap
  endpoint:
    path: /locator/tap
    method: POST
    data_selector: options
    params: {}
- name: textContent
  endpoint:
    path: /locator/textContent
    method: GET
    data_selector: options
    params: {}
- name: uncheck
  endpoint:
    path: /locator/uncheck
    method: POST
    data_selector: options
    params: {}
- name: waitFor
  endpoint:
    path: /locator/waitFor
    method: GET
    data_selector: options
    params: {}
- name: mouse
  endpoint:
    path: /docs/api/class-mouse
    method: GET
    data_selector: methods
    params: {}
- name: Page
  endpoint:
    path: /docs/api/class-page
    method: GET
    data_selector: Page methods
    params: {}
- name: consoleMessages
  endpoint:
    path: /page/consoleMessages
    method: GET
- name: content
  endpoint:
    path: /page/content
    method: GET
- name: context
  endpoint:
    path: /page/context
    method: GET
- name: dragAndDrop
  endpoint:
    path: /page/dragAndDrop
    method: POST
- name: emulateMedia
  endpoint:
    path: /page/emulateMedia
    method: POST
- name: evaluate
  endpoint:
    path: /page/evaluate
    method: POST
- name: evaluateHandle
  endpoint:
    path: /page/evaluateHandle
    method: POST
- name: exposeBinding
  endpoint:
    path: /page/exposeBinding
    method: POST
- name: exposeFunction
  endpoint:
    path: /page/exposeFunction
    method: POST
- name: frame
  endpoint:
    path: /page/frame
    method: GET
    data_selector: 'null'
    params: {}
- name: frameLocator
  endpoint:
    path: /page/frameLocator
    method: GET
    data_selector: 'null'
    params: {}
- name: getByAltText
  endpoint:
    path: /page/getByAltText
    method: GET
    data_selector: 'null'
    params: {}
- name: getByLabel
  endpoint:
    path: /page/getByLabel
    method: GET
    data_selector: 'null'
    params: {}
- name: getByPlaceholder
  endpoint:
    path: /page/getByPlaceholder
    method: GET
    data_selector: 'null'
    params: {}
- name: getByRole
  endpoint:
    path: /page/getByRole
    method: GET
    data_selector: 'null'
    params: {}
- name: getByTestId
  endpoint:
    path: /page/getByTestId
    method: GET
    data_selector: 'null'
    params: {}
- name: getByText
  endpoint:
    path: /page/getByText
    method: GET
    data_selector: 'null'
    params: {}
- name: getByTitle
  endpoint:
    path: /page/getByTitle
    method: GET
    data_selector: 'null'
    params: {}
- name: goBack
  endpoint:
    path: /page/goBack
    method: GET
    data_selector: response
    params: {}
- name: goForward
  endpoint:
    path: /page/goForward
    method: GET
    data_selector: response
    params: {}
- name: goto
  endpoint:
    path: /page/goto
    method: GET
    data_selector: response
    params: {}
- name: isClosed
  endpoint:
    path: /page/isClosed
    method: GET
    data_selector: response
    params: {}
- name: locator
  endpoint:
    path: /page/locator
    method: GET
    data_selector: response
    params: {}
- name: mainFrame
  endpoint:
    path: /page/mainFrame
    method: GET
    data_selector: response
    params: {}
- name: opener
  endpoint:
    path: /page/opener
    method: GET
    data_selector: response
    params: {}
- name: pageErrors
  endpoint:
    path: /page/pageErrors
    method: GET
    data_selector: response
    params: {}
- name: pause
  endpoint:
    path: /page/pause
    method: GET
    data_selector: response
    params: {}
- name: pdf
  endpoint:
    path: /page/pdf
    method: GET
- name: reload
  endpoint:
    path: /page/reload
    method: GET
- name: removeAllListeners
  endpoint:
    path: /page/removeAllListeners
    method: GET
- name: removeLocatorHandler
  endpoint:
    path: /page/removeLocatorHandler
    method: GET
- name: requestGC
  endpoint:
    path: /page/requestGC
    method: GET
- name: requests
  endpoint:
    path: /page/requests
    method: GET
- name: route
  endpoint:
    path: /page/route
    method: GET
- name: routeWebSocket
  endpoint:
    path: /page/routeWebSocket
    method: POST
- name: screenshot
  endpoint:
    path: /page/screenshot
    method: POST
- name: setContent
  endpoint:
    path: /page/setContent
    method: POST
- name: setDefaultNavigationTimeout
  endpoint:
    path: /page/setDefaultNavigationTimeout
    method: POST
- name: setDefaultTimeout
  endpoint:
    path: /page/setDefaultTimeout
    method: POST
- name: setExtraHTTPHeaders
  endpoint:
    path: /page/setExtraHTTPHeaders
    method: POST
- name: setViewportSize
  endpoint:
    path: /page/setViewportSize
    method: POST
- name: title
  endpoint:
    path: /page/title
    method: GET
- name: page
  endpoint:
    path: /page
    method: GET
    data_selector: data
- name: hover
  endpoint:
    path: /page/hover
    method: GET
    data_selector: element
- name: innerHTML
  endpoint:
    path: /page/innerHTML
    method: GET
    data_selector: element
- name: innerText
  endpoint:
    path: /page/innerText
    method: GET
    data_selector: element
- name: inputValue
  endpoint:
    path: /page/inputValue
    method: GET
    data_selector: element
- name: isChecked
  endpoint:
    path: /page/isChecked
    method: GET
    data_selector: element
- name: isDisabled
  endpoint:
    path: /page/isDisabled
    method: GET
    data_selector: element
- name: isEditable
  endpoint:
    path: /page/isEditable
    method: GET
    data_selector: element
- name: isEnabled
  endpoint:
    path: /page/isEnabled
    method: GET
    data_selector: element
- name: isHidden
  endpoint:
    path: /page/isHidden
    method: GET
    data_selector: element
- name: request
  endpoint:
    path: /docs/api/class-request
    method: GET
    data_selector: request
    params: {}
- name: response
  endpoint:
    path: /docs/api/class-response
    method: GET
    data_selector: response
    params: {}
- name: route
  endpoint:
    path: /api/class-route
    method: GET
    data_selector: records
- name: fulfill
  endpoint:
    path: /route/fulfill
    method: POST
- name: request
  endpoint:
    path: /route/request
    method: POST
- name: selectors
  endpoint:
    path: /docs/api/class-selectors
    method: GET
    data_selector: selectors
    params: {}
- name: TimeoutError
  endpoint:
    path: /api/class-timeouterror
    method: GET
- name: tap
  endpoint:
    path: /api/touchscreen/tap
    method: POST
    data_selector: void
- name: tracing.group
  endpoint:
    path: /tracing/group
    method: GET
    data_selector: group
    params: {}
- name: tracing.groupEnd
  endpoint:
    path: /tracing/groupEnd
    method: GET
    data_selector: groupEnd
    params: {}
- name: tracing.start
  endpoint:
    path: /tracing/start
    method: GET
    data_selector: start
    params: {}
- name: tracing.startChunk
  endpoint:
    path: /tracing/startChunk
    method: GET
    data_selector: startChunk
    params: {}
- name: tracing.stop
  endpoint:
    path: /tracing/stop
    method: GET
    data_selector: stop
    params: {}
- name: tracing.stopChunk
  endpoint:
    path: /tracing/stopChunk
    method: GET
    data_selector: stopChunk
    params: {}
- name: video_delete
  endpoint:
    path: /video/delete
    method: POST
    data_selector: void
- name: video_path
  endpoint:
    path: /video/path
    method: GET
    data_selector: string
- name: video_saveAs
  endpoint:
    path: /video/saveAs
    method: POST
    data_selector: void
- name: WebSocketMethods
  endpoint:
    path: /docs/api/class-websocket/methods
    method: GET
    data_selector: methods
- name: WebSocketEvents
  endpoint:
    path: /docs/api/class-websocket/events
    method: GET
    data_selector: events
- name: webSocketRoute
  endpoint:
    path: /webSocketRoute
    method: GET
    data_selector: webSocketRoute
- name: worker
  endpoint:
    path: /api/class-worker
    method: GET
    data_selector: worker
    params: {}
- name: any
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-any
    method: GET
- name: anything
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-anything
    method: GET
- name: arrayContaining
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-array-containing
    method: GET
- name: closeTo
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-close-to
    method: GET
- name: objectContaining
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-object-containing
    method: GET
- name: stringContaining
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-string-containing
    method: GET
- name: stringMatching
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-string-matching
    method: GET
- name: toBe
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-be
    method: GET
- name: toBeCloseTo
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-be-close-to
    method: GET
- name: toBeDefined
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-be-defined
    method: GET
- name: toBeFalsy
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-be-falsy
    method: GET
- name: toBeGreaterThan
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-be-greater-than
    method: GET
- name: toBeGreaterThanOrEqual
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-be-greater-than-or-equal
    method: GET
- name: toBeInstanceOf
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-be-instance-of
    method: GET
- name: toBeLessThan
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-be-less-than
    method: GET
- name: toBeLessThanOrEqual
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-be-less-than-or-equal
    method: GET
- name: toBeNaN
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-be-na-n
    method: GET
- name: toBeNull
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-be-null
    method: GET
- name: toBeTruthy
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-be-truthy
    method: GET
- name: toBeUndefined
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-be-undefined
    method: GET
- name: toContain
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-contain-1
    method: GET
- name: toContain
  endpoint:
    path: /docs/api/class-genericassertions#generic-assertions-to-contain-2
    method: GET
- name: toBeAttached
  endpoint:
    path: /locatorAssertions/toBeAttached
    method: GET
    data_selector: arguments
- name: toBeChecked
  endpoint:
    path: /locatorAssertions/toBeChecked
    method: GET
    data_selector: arguments
- name: toBeDisabled
  endpoint:
    path: /locatorAssertions/toBeDisabled
    method: GET
    data_selector: arguments
- name: toBeEditable
  endpoint:
    path: /locatorAssertions/toBeEditable
    method: GET
    data_selector: arguments
- name: toBeEmpty
  endpoint:
    path: /locatorAssertions/toBeEmpty
    method: GET
    data_selector: arguments
- name: toBeEnabled
  endpoint:
    path: /locatorAssertions/toBeEnabled
    method: GET
    data_selector: arguments
- name: toBeFocused
  endpoint:
    path: /locatorAssertions/toBeFocused
    method: GET
    data_selector: arguments
- name: toBeHidden
  endpoint:
    path: /locatorAssertions/toBeHidden
    method: GET
    data_selector: arguments
- name: toBeInViewport
  endpoint:
    path: /locatorAssertions/toBeInViewport
    method: GET
    data_selector: arguments
- name: toBeVisible
  endpoint:
    path: /locatorAssertions/toBeVisible
    method: GET
    data_selector: arguments
- name: toHaveCSS
  endpoint:
    path: /locatorAssertions/toHaveCSS
    method: GET
- name: toHaveId
  endpoint:
    path: /locatorAssertions/toHaveId
    method: GET
- name: toHaveJSProperty
  endpoint:
    path: /locatorAssertions/toHaveJSProperty
    method: GET
- name: toHaveRole
  endpoint:
    path: /locatorAssertions/toHaveRole
    method: GET
- name: toHaveScreenshot
  endpoint:
    path: /locatorAssertions/toHaveScreenshot
    method: GET
- name: toHaveText
  endpoint:
    path: /locatorAssertions/toHaveText
    method: GET
- name: toHaveValue
  endpoint:
    path: /locatorAssertions/toHaveValue
    method: GET
- name: toHaveValues
  endpoint:
    path: /locatorAssertions/toHaveValues
    method: GET
- name: toMatchAriaSnapshot
  endpoint:
    path: /locatorAssertions/toMatchAriaSnapshot
    method: GET
- name: toMatchAriaSnapshotOptions
  endpoint:
    path: /locatorAssertions/toMatchAriaSnapshotOptions
    method: GET
- name: not
  endpoint:
    path: /locatorAssertions/not
    method: GET
- name: pageAssertions
  endpoint:
    path: /docs/api/class-pageassertions
    method: GET
    data_selector: methods
    params: {}
- name: toHaveURL
  endpoint:
    path: /pageAssertions/toHaveURL
    method: GET
    data_selector: arguments
    params: {}
- name: not
  endpoint:
    path: /pageAssertions/not
    method: GET
    data_selector: arguments
    params: {}
- name: browser
  endpoint:
    path: /docs/api/class-browser
    method: GET
    data_selector: fixtures.browser
- name: browserName
  endpoint:
    path: /docs/api/class-browser-name
    method: GET
    data_selector: fixtures.browserName
- name: context
  endpoint:
    path: /docs/api/class-context
    method: GET
    data_selector: fixtures.context
- name: page
  endpoint:
    path: /docs/api/class-page
    method: GET
    data_selector: fixtures.page
- name: request
  endpoint:
    path: /docs/api/class-request
    method: GET
    data_selector: fixtures.request
- name: dependencies
  endpoint:
    path: fullProject.dependencies
    method: GET
    data_selector: Array<string>
- name: grep
  endpoint:
    path: fullProject.grep
    method: GET
    data_selector: RegExp | Array<RegExp>
- name: grepInvert
  endpoint:
    path: fullProject.grepInvert
    method: GET
    data_selector: null | RegExp | Array<RegExp>
- name: metadata
  endpoint:
    path: fullProject.metadata
    method: GET
    data_selector: Object<string, any>
- name: name
  endpoint:
    path: fullProject.name
    method: GET
    data_selector: string
- name: outputDir
  endpoint:
    path: fullProject.outputDir
    method: GET
    data_selector: string
- name: repeatEach
  endpoint:
    path: fullProject.repeatEach
    method: GET
    data_selector: number
- name: retries
  endpoint:
    path: fullProject.retries
    method: GET
    data_selector: number
- name: snapshotDir
  endpoint:
    path: fullProject.snapshotDir
    method: GET
    data_selector: string
- name: teardown
  endpoint:
    path: fullProject.teardown
    method: GET
    data_selector: string
- name: testDir
  endpoint:
    path: fullProject.testDir
    method: GET
    data_selector: string
- name: testIgnore
  endpoint:
    path: fullProject.testIgnore
    method: GET
    data_selector: string | RegExp | Array<string | RegExp>
- name: testMatch
  endpoint:
    path: fullProject.testMatch
    method: GET
    data_selector: string | RegExp | Array<string | RegExp>
- name: timeout
  endpoint:
    path: fullProject.timeout
    method: GET
    data_selector: number
- name: use
  endpoint:
    path: fullProject.use
    method: GET
    data_selector: Fixtures
- name: location
  endpoint:
    path: /docs/api/class-location
    method: GET
    data_selector: properties
    params: {}
- name: test_config
  endpoint:
    path: /test-config
    method: GET
    data_selector: config
    params: {}
- name: TestInfoError
  endpoint:
    path: /docs/api/class-testinfoerror
    method: GET
    data_selector: properties
    params: {}
- name: project
  endpoint:
    path: /testProject
    method: GET
    data_selector: projects
- name: teardown
  endpoint:
    path: /global.teardown.ts
    method: GET
- name: TestStepInfo
  endpoint:
    path: /docs/api/class-teststepinfo
    method: GET
    data_selector: methods
- name: config
  endpoint:
    path: /workerInfo/config
    method: GET
    data_selector: FullConfig
- name: parallelIndex
  endpoint:
    path: /workerInfo/parallelIndex
    method: GET
    data_selector: number
- name: project
  endpoint:
    path: /workerInfo/project
    method: GET
    data_selector: FullProject
- name: workerIndex
  endpoint:
    path: /workerInfo/workerIndex
    method: GET
    data_selector: number
- name: reporter
  endpoint:
    path: /docs/api/class-reporter
    method: GET
    data_selector: reporter
- name: suite
  endpoint:
    path: /api/suite
    method: GET
- name: TestCase
  endpoint:
    path: /docs/api/class-testcase
    method: GET
    data_selector: testCase
    params: {}
- name: TestError
  endpoint:
    path: /docs/api/class-testerror
    method: GET
    data_selector: properties
- name: testResult
  endpoint:
    path: /api/testResult
    method: GET
    data_selector: testResult
    params: {}
- name: testStep
  endpoint:
    path: /api/class-teststep
    method: GET
    data_selector: properties
- name: android
  endpoint:
    path: /api/android
    method: GET
    data_selector: devices
    params: {}
- name: close
  endpoint:
    path: /androidDevice/close
    method: POST
    data_selector: void
- name: drag
  endpoint:
    path: /androidDevice/drag
    method: POST
    data_selector: void
- name: fill
  endpoint:
    path: /androidDevice/fill
    method: POST
    data_selector: void
- name: fling
  endpoint:
    path: /androidDevice/fling
    method: POST
    data_selector: void
- name: info
  endpoint:
    path: /androidDevice/info
    method: GET
    data_selector: AndroidElementInfo
- name: installApk
  endpoint:
    path: /androidDevice/installApk
    method: POST
    data_selector: void
- name: launchBrowser
  endpoint:
    path: /androidDevice/launchBrowser
    method: GET
    data_selector: context
- name: longTap
  endpoint:
    path: /androidDevice/longTap
    method: GET
- name: model
  endpoint:
    path: /androidDevice/model
    method: GET
- name: open
  endpoint:
    path: /androidDevice/open
    method: GET
- name: pinchClose
  endpoint:
    path: /androidDevice/pinchClose
    method: GET
- name: pinchOpen
  endpoint:
    path: /androidDevice/pinchOpen
    method: GET
- name: press
  endpoint:
    path: /androidDevice/press
    method: GET
- name: push
  endpoint:
    path: /androidDevice/push
    method: GET
- name: screenshot
  endpoint:
    path: /androidDevice/screenshot
    method: GET
- name: scroll
  endpoint:
    path: /androidDevice/scroll
    method: GET
- name: serial
  endpoint:
    path: /androidDevice/serial
    method: GET
- name: setDefaultTimeout
  endpoint:
    path: /androidDevice/setDefaultTimeout
    method: GET
- name: shell
  endpoint:
    path: /androidDevice/shell
    method: GET
- name: swipe
  endpoint:
    path: /androidDevice/swipe
    method: GET
- name: tap
  endpoint:
    path: /androidDevice/tap
    method: GET
- name: wait
  endpoint:
    path: /androidDevice/wait
    method: GET
- name: waitForEvent
  endpoint:
    path: /androidDevice/waitForEvent
    method: GET
- name: webView
  endpoint:
    path: /androidDevice/webView
    method: GET
- name: webViews
  endpoint:
    path: /androidDevice/webViews
    method: GET
- name: input
  endpoint:
    path: /androidDevice/input
    method: GET
- name: close_event
  endpoint:
    path: /androidDevice/on/close
    method: POST
- name: webview_event
  endpoint:
    path: /androidDevice/on/webview
    method: POST
- name: drag
  endpoint:
    path: /androidInput/drag
    method: GET
    data_selector: ''
    params: {}
- name: press
  endpoint:
    path: /androidInput/press
    method: GET
    data_selector: ''
    params: {}
- name: swipe
  endpoint:
    path: /androidInput/swipe
    method: GET
    data_selector: ''
    params: {}
- name: tap
  endpoint:
    path: /androidInput/tap
    method: GET
    data_selector: ''
    params: {}
- name: type
  endpoint:
    path: /androidInput/type
    method: GET
    data_selector: ''
    params: {}
- name: close
  endpoint:
    path: /androidSocket/close
    method: POST
    data_selector: void
    params: {}
- name: write
  endpoint:
    path: /androidSocket/write
    method: POST
    data_selector: void
    params: {}
- name: on_close_event
  endpoint:
    path: /androidSocket/on('close')
    method: GET
    data_selector: data
    params: {}
- name: on_data_event
  endpoint:
    path: /androidSocket/on('data')
    method: GET
    data_selector: data
    params: {}
- name: page
  endpoint:
    path: /api/class-androidwebview/page
    method: GET
- name: pid
  endpoint:
    path: /api/class-androidwebview/pid
    method: GET
- name: pkg
  endpoint:
    path: /api/class-androidwebview/pkg
    method: GET
- name: on_close
  endpoint:
    path: /api/class-androidwebview/on_close
    method: GET
- name: launch
  endpoint:
    path: /electron/launch
    method: POST
    data_selector: result
    params: {}
- name: browserWindow
  endpoint:
    path: /api/class-electronapplication#electron-application-browser-window
    method: GET
    data_selector: returns
    params: {}
- name: close
  endpoint:
    path: /api/class-electronapplication#electron-application-close
    method: GET
    data_selector: returns
    params: {}
- name: context
  endpoint:
    path: /api/class-electronapplication#electron-application-context
    method: GET
    data_selector: returns
    params: {}
- name: evaluate
  endpoint:
    path: /api/class-electronapplication#electron-application-evaluate
    method: GET
    data_selector: returns
    params: {}
- name: firstWindow
  endpoint:
    path: /api/class-electronapplication#electron-application-first-window
    method: GET
    data_selector: returns
    params: {}
- name: process
  endpoint:
    path: /api/class-electronapplication#electron-application-process
    method: GET
    data_selector: returns
    params: {}
- name: waitForEvent
  endpoint:
    path: /api/class-electronapplication#electron-application-wait-for-event
    method: GET
    data_selector: returns
    params: {}
- name: windows
  endpoint:
    path: /api/class-electronapplication#electron-application-windows
    method: GET
    data_selector: returns
    params: {}
notes:
- browserContext.setExtraHTTPHeaders() does not guarantee the order of headers in
  the outgoing requests.
- Service workers are only supported on Chromium-based browsers.
- Playwright supports Chromium, WebKit and Firefox on Windows, Linux and macOS, locally
  or in CI, headless or headed, with native mobile emulation for Chrome (Android)
  and Mobile Safari.
- Tests are run in headless mode meaning no browser UI will open up when running the
  tests.
- By default, Playwright runs the browsers in headless mode.
- To see the browser UI, setHeadless option to false.
- Tests are run in headless mode meaning no browser will open up when running the
  tests.
- Tests run in headless mode by default, meaning no browser window opens while running
  the tests.
- We highly recommend running your tests with UI Mode for a better developer experience.
- While debugging you can use the Pick Locator button to select an element on the
  page.
- Traces are setup to run on-first-retry, meaning they run on the first retry of a
  failed test.
- Retries are set to 2 when running on CI and 0 locally.
- This step will not work for pull requests created from a forked repository because
  such workflow doesn't have access to the secrets.
- The Playwright VS Code extension allows you to run, debug, and generate tests.
- New cookie property `partitionKey` in browserContext.cookies and browserContext.addCookies.
- Support for Node.js 16 has been removed.
- New assertion expect(locator).toMatchAriaSnapshot verifies page structure by comparing
  to an expected accessibility tree, represented as YAML.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- New Headless on the other hand is the real Chrome browser, and is thus more authentic,
  reliable, and offers more features.
- New methods page.consoleMessages() and page.pageErrors() for retrieving the most
  recent console messages from the page
- New method page.requests() for retrieving the most recent network requests from
  the page
- DOM snapshots in trace viewer can be now opened in a separate window.
- Official docker images now include Node 18 instead of Node 16.
- Uses multiple web servers configuration in playwright.config.ts
- New assertion verify page structure by comparing to an expected accessibility tree,
  represented as YAML.
- Playwright no longer downloads browsers automatically from version 1.38.
- Users are encouraged to use `@playwright/test` package and download browsers via
  `npx playwright install` command.
- New baseURL fixture to support relative paths in tests.
- Using a canary release in production might seem risky, but in practice, it's not.
- VS Code v1.105 is needed for the agentic experience in VS Code.
- 'Run tests in headed browsers (default: headless).'
- Run tests in interactive UI mode.
- Playwright provides a powerful command line interface for running tests, generating
  code, debugging, and more.
- Uses command line for various operations like running tests and generating code.
- Each test is given 30 seconds.
- Emulates 'prefers-colors-scheme' media feature
- All header values must be strings
- Playwright can emulate real devices including mobile phones and tablets.
- You can configure geolocation, locale, timezone, and permissions for tests.
- By default, test files are run in parallel.
- Tests in a single file are run in order, in the same worker process.
- Parameterized projects behavior has changed in version 1.18.
- Projects can be configured to run tests on different browsers and devices.
- Projects allow running the same tests in different states or environments.
- The easiest way to try out built-in reporters is to pass `--reporter` command line
  option.
- You can use multiple reporters at the same time.
- You can use different reporters locally and on CI.
- Test retries are a way to automatically re-run a test when it fails.
- By default failing tests are not retried.
- Sharding can be done at two levels of granularity depending on whether you use the
  testProject.fullyParallel option or not.
- 'To ensure the most effective use of sharding, especially in CI environments, it
  is recommended to use fullyParallel: true when aiming for balanced distribution
  across shards.'
- Playwright Test has multiple configurable timeouts for various tasks.
- Playwright supports TypeScript out of the box.
- Playwright does not check the types and will run tests even if there are non-critical
  TypeScript compilation errors.
- Be aware that when specifying the --ui-host=0.0.0.0 flag, UI Mode with your traces,
  the passwords and secrets is accessible from other machines inside your network.
- Playwright includes built-in support for TypeScript.
- Automated accessibility tests can detect some common accessibility problems.
- Many accessibility problems can only be discovered through manual testing.
- By default, the timeout for assertions is set to 5 seconds.
- Do not confuse Playwright's `expect` with the `expect` library. The latter is not
  fully integrated with Playwright test runner.
- Tests can load existing authenticated state.
- The browser state file may contain sensitive cookies and headers.
- Reusing authenticated state covers cookies, local storage and IndexedDB based authentication.
- Rarely, session storage is used for storing information associated with the signed-in
  state.
- Automated tests should verify that the application code works for the end users.
- Each test should be completely isolated from another test.
- Playwright needs specific versions of browser binaries to operate.
- Running the command without arguments will install the default browsers.
- Playwright can install supported browsers.
- Each version of Playwright needs specific versions of browser binaries to operate.
- By default, Playwright downloads browsers from Microsoft's CDN.
- Developers can opt-in in this mode via exporting PLAYWRIGHT_BROWSERS_PATH=$HOME/pw-browsers
  in their .bashrc.
- Some objects like Contact may return nulls in deeply nested fields
- Developers can opt-in in this mode via exporting `PLAYWRIGHT_BROWSERS_PATH=$HOME/pw-browsers`
  in their `.bashrc`.
- '`PLAYWRIGHT_BROWSERS_PATH` does not change installation path for Google Chrome
  and Microsoft Edge.'
- Extensions only work in Chromium when launched with a persistent context.
- Accurately simulating time-dependent behavior is essential for verifying the correctness
  of applications.
- Clock API provides methods to control time.
- Downloaded files are deleted when the browser context that produced them is closed.
- Tests written with Playwright execute in isolated clean-slate environments called
  browser contexts.
- Test Isolation is when each test is completely isolated from another test.
- Playwright achieves this using BrowserContext which are equivalent to incognito-like
  profiles.
- Uses HAR files to mock network requests in tests
- Playwright can navigate to URLs and handle navigations caused by the page interactions.
- Modern pages perform numerous activities after the load event was fired.
- Playwright will wait for the text to become visible, will wait for the rest of the
  actionability checks to pass for that element, and will click it.
- Playwright provides APIs to monitor and modify browser network traffic, both HTTP
  and HTTPS.
- Check out the main locators guide for most common and recommended locators.
- Snapshot testing captures a snapshot or representation of the entire state of an
  element.
- Snapshot testing is ideal for UI testing of whole pages and components.
- locator.dispatchEvent() does not set Event.isTrusted property. If your web page
  relies on it, make sure to disable isTrusted check during the test.
- Trace Viewer is a GUI tool that helps you explore recorded Playwright traces after
  the script has run.
- You can open traces locally or in your browser on trace.playwright.dev.
- Videos are saved upon browser context closure at the end of a test.
- The video is only available after the page or browser context is closed.
- Browser rendering can vary based on the host OS, version, settings, hardware, power
  source (battery vs. power adapter), headless mode, and other factors.
- By default, the WebView2 control will use the same user data directory for all instances.
- To avoid interference when running multiple tests in parallel, set the WEBVIEW2_USER_DATA_FOLDER
  environment variable.
- Traces can be recorded by running your tests with the --tracing flag.
- The trace will be placed into the file named trace.zip in your test-results directory.
- Playwright Test provides a test function to declare tests and expect function to
  write assertions.
- Each API request will have `Cookie` header populated with the values from the browser
  context.
- The method will populate request cookies from the context and update context cookies
  from the response.
- The method will automatically follow redirects.
- If directly using this method to create BrowserContext, it is best practice to explicitly
  close the returned context via browserContext.close() when your code is done with
  the BrowserContext, and before calling browser.close(). This will ensure the context
  is closed gracefully and any artifacts—like HARs and videos—are fully flushed and
  saved.
- Emitted when the browser server closes.
- Playwright can also be used to control the Google Chrome or Microsoft Edge browsers,
  but it works best with the version of Chromium it is bundled with.
- Detaches the CDPSession from the target. Once detached, the CDPSession object won't
  emit any events and can't be used to send messages.
- Coverage APIs are only supported on Chromium-based browsers.
- Dialogs are dismissed automatically, unless there is a page.on('dialog') listener.
- The listener must either dialog.accept() or dialog.dismiss() the dialog - otherwise
  the page will freeze waiting for the dialog.
- The use of ElementHandle is discouraged, use Locator objects and web-first assertions
  instead.
- Discouraged — use locator-based methods instead.
- Discouraged — Use locator-based methods instead.
- Discouraged - Use locator-based methods instead.
- frame.tap() requires that the hasTouch option of the browser context be set to true.
- Playwright automatically waits for element to be ready before performing an action.
- Never wait for timeout in production. Tests that wait for time are inherently flaky.
- Frame locators are strict.
- Converting Locator to FrameLocator and vice versa is supported.
- Modifier keys DO influence keyboard.down. Holding down Shift will type the text
  in upper case.
- locator.all() does not wait for elements to match the locator, and instead immediately
  returns whatever is present in the page.
- When the list of elements changes dynamically, locator.all() will produce unpredictable
  and flaky results.
- This class is deprecated. The logs pumped through this class are incomplete. Please
  use tracing instead.
- Mouse class operates in main-frame CSS pixels relative to the top-left corner of
  the viewport.
- The Page class emits various events that can be handled using Node's native EventEmitter
  methods.
- Most of the time, this method is not needed because Playwright auto-waits before
  every action.
- Emitted when the page closes.
- Emitted when the JavaScript DOMContentLoaded event is dispatched.
- This method does not wait for the element to pass actionability checks and therefore
  can lead to the flaky tests.
- Discouraged use of methods in favor of locator-based methods.
- Discouraged methods include page.isVisible, page.press, page.selectOption, page.setChecked,
  and page.setInputFiles.
- page.tap() the method will throw if hasTouch option of the browser context is false.
- Discouraged
- HTTP Error responses, such as 404 or 503, are still successful responses from HTTP
  standpoint, so request will complete with 'requestfinished' event.
- Returns resource timing information for given request.
- The Cookie header cannot be overridden using this method.
- Selectors can be used to install custom selector engines.
- Methods on the touchscreen can only be used in browser contexts that have been initialized
  with hasTouch set to true.
- This class is limited to emulating tap gestures.
- You probably want to enable tracing in your config file instead of using context.tracing.
- The WebSocket class represents WebSocket connections within a page.
- Provides the ability to inspect and manipulate the data being transmitted and received.
- The Worker class represents a WebWorker.
- Screenshot assertions only work with Playwright test runner.
- Playwright Test supports running multiple test projects at the same time.
- Defaults to true unless the devtools option is true.
- Defaults to false.
- Defaults to false and is not supported in Firefox.
- Defaults to true.
- Defaults to 0 (no timeout).
- Defaults to none.
- Defaults to 'off'.
- Defaults to 'allow'.
- Defaults to the system timezone.
- Projects are configured in testConfig.projects specified in the configuration file
- Each project can use a different directory.
- Files matching one of these patterns are not executed as test files.
- testStepInfo.attach() automatically takes care of copying attached files to a location
  that is accessible to reporters.
- Test runner notifies the reporter about various events during test execution.
- All methods of the reporter are optional.
- Corresponds to every test() call in a test file.
- When a single test() is running in multiple projects or repeated multiple times,
  it will have multiple TestCase objects.
- Experimental support for Android automation.
- 'Supported Electron versions are: v12.2.0+, v13.4.0+, v14+.'
- If you are not able to launch Electron and it will end up in timeouts during launch,
  ensure that `nodeCliInspect` fuse is **not** set to `false`.
- Convenience method for managing Electron windows.
errors:
- TimeoutError
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- Node.js 14 is no longer supported since it reached its end-of-life on April 30,
  2023.
- Stop after the first failure.
- Only run tests matching this regular expression.
- test.only marked in the source code
- Limit the number of workers to one to disable parallelism.
- You can limit the number of failed tests in the whole test suite by setting maxFailures
  config option.
- Timeout of 30000ms exceeded.
- 'Error: expect(received).toHaveText(expected)'
- Throttle API calls or reduce frequency
- Break down filters or add selectivity
- 'TimeoutError: Passing zero timeout disables this.'
- 'TimeoutError: This method throws a TimeoutError when all steps combined have not
  finished during the specified timeout'
- Maximum time in milliseconds. Defaults to 0 - no timeout.
- 'aborted: An operation was aborted (due to user action)'
- 'accessdenied: Permission to access a resource, other than the network, was denied'
- 'timedout: An operation timed out'
auth_info:
  mentioned_objects: []
client:
  base_url: https://playwright.dev
  headers:
    Accept: application/json
source_metadata: null
