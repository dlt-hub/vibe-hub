resources:
- name: policies
  endpoint:
    path: /v1/policies
    method: GET
    data_selector: result
    params: {}
- name: policy
  endpoint:
    path: /v1/policies/<id>
    method: GET
    data_selector: result
    params: {}
- name: query
  endpoint:
    path: /v1/query
    method: GET
    data_selector: result
    params: {}
- name: compile
  endpoint:
    path: /v1/compile
    method: POST
    data_selector: result
    params: {}
- name: health
  endpoint:
    path: /health
    method: GET
    data_selector: '{}'
    params: {}
- name: config
  endpoint:
    path: /v1/config
    method: GET
    data_selector: result
    params: {}
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: '{}'
    params: {}
- name: status
  endpoint:
    path: /v1/status
    method: GET
    data_selector: result
- name: create_or_update_policy
  endpoint:
    path: /v1/policies/<id>
    method: PUT
    data_selector: Content-Type
    params: {}
- name: delete_policy
  endpoint:
    path: /v1/policies/<id>
    method: DELETE
    data_selector: Content-Type
    params: {}
- name: get_document
  endpoint:
    path: /v1/data/{path:.+}
    method: GET
    data_selector: result
    params: {}
- name: create_or_overwrite_document
  endpoint:
    path: /v1/data/{path:.+}
    method: PUT
    data_selector: Content-Type
    params: {}
- name: delete_document
  endpoint:
    path: /v1/data/{path:.+}
    method: DELETE
    data_selector: Content-Type
    params: {}
- name: execute_simple_query
  endpoint:
    path: /
    method: POST
    data_selector: response
    params: {}
- name: violation
  endpoint:
    path: /data/example/violation
    method: GET
    data_selector: results
- name: data_example_violation
  endpoint:
    path: /v1/data/example/violation
    method: POST
    data_selector: null
    params: {}
- name: data_example_allow
  endpoint:
    path: /v1/data/example/allow
    method: POST
    data_selector: null
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: apps_and_hostnames
  endpoint:
    path: /apps_and_hostnames
    method: GET
    data_selector: contains
    params: {}
- name: same_site
  endpoint:
    path: /same_site
    method: GET
    data_selector: contains
    params: {}
- name: region
  endpoint:
    path: /region
    method: GET
    data_selector: region
    params: {}
- name: hostnames
  endpoint:
    path: /hostnames
    method: GET
    data_selector: contains
    params: {}
- name: apps_by_hostname
  endpoint:
    path: /apps_by_hostname
    method: GET
    data_selector: apps_by_hostname
    params: {}
- name: apps_and_hostnames
  endpoint:
    path: /data/example/apps
    method: GET
    data_selector: contains
    params: {}
- name: same_site
  endpoint:
    path: /data/example/sites
    method: GET
    data_selector: contains
    params: {}
- name: names_with_dev
  endpoint:
    path: /names_with_dev
    method: GET
    data_selector: records
    params: {}
- name: array_domain
  endpoint:
    path: /array_domain
    method: GET
    data_selector: records
    params: {}
- name: object_domain
  endpoint:
    path: /object_domain
    method: GET
    data_selector: records
    params: {}
- name: set_domain
  endpoint:
    path: /set_domain
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: metadata
  endpoint:
    path: /metadata/scope
    method: GET
    data_selector: rules
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: apps_and_hostnames
  endpoint:
    path: /apps_and_hostnames
    method: GET
    data_selector: contained
- name: same_site
  endpoint:
    path: /same_site
    method: GET
    data_selector: contained
- name: region
  endpoint:
    path: /region
    method: GET
    data_selector: contained
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: apps_and_hostnames
  endpoint:
    path: /apps_and_hostnames
    method: GET
    data_selector: contains
- name: same_site
  endpoint:
    path: /same_site
    method: GET
    data_selector: contains
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: related_resources
  endpoint:
    path: /metadata/related_resources
    method: GET
- name: authors
  endpoint:
    path: /metadata/authors
    method: GET
- name: organizations
  endpoint:
    path: /metadata/organizations
    method: GET
- name: apps_and_hostnames
  endpoint:
    path: /path/to/apps_and_hostnames
    method: GET
    data_selector: data
    params: {}
- name: same_site
  endpoint:
    path: /path/to/same_site
    method: GET
    data_selector: data
    params: {}
- name: input
  endpoint:
    path: /input
    method: POST
    data_selector: decision
    params: {}
- name: input
  endpoint:
    path: /schemas/input
    method: GET
    data_selector: schema.input
- name: acl
  endpoint:
    path: /schemas/acl-schema
    method: GET
    data_selector: schema.acl
- name: whocan-input
  endpoint:
    path: /schemas/whocan-input-schema
    method: GET
    data_selector: schema.whocan-input
- name: related_resources
  endpoint:
    path: /metadata/related_resources
    method: GET
    data_selector: related_resources
- name: authors
  endpoint:
    path: /metadata/authors
    method: GET
    data_selector: authors
- name: organizations
  endpoint:
    path: /metadata/organizations
    method: GET
    data_selector: organizations
- name: schemas
  endpoint:
    path: /metadata/schemas
    method: GET
    data_selector: schemas
- name: entrypoint
  endpoint:
    path: /metadata/entrypoint
    method: GET
    data_selector: entrypoint
- name: custom
  endpoint:
    path: /metadata/custom
    method: GET
    data_selector: custom
- name: apps_and_hostnames
  endpoint:
    path: /data/example/apps
    method: GET
    data_selector: contains
    params: {}
- name: same_site
  endpoint:
    path: /data/example/apps
    method: GET
    data_selector: contains
    params: {}
- name: region
  endpoint:
    path: /data/example/sites
    method: GET
    data_selector: contains
    params: {}
- name: input
  endpoint:
    path: /input
    method: GET
    data_selector: schema.input
    params: {}
- name: input-request-object
  endpoint:
    path: /input/request/object
    method: GET
    data_selector: schema.kubernetes.pod
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: rbac
  endpoint:
    path: /data/rbac.allow
    method: GET
- name: OPA CloudFormation Hook
  endpoint:
    path: /hooks
    method: POST
    data_selector: data
    params: {}
- name: OPA CloudFormation Hook
  endpoint:
    path: /hooks
    method: POST
    data_selector: request
    params: {}
- name: docker_authz
  endpoint:
    path: /v1.38/containers/create
    method: POST
- name: policy_definition
  endpoint:
    path: /var/www/html/bundle.tar.gz
    method: GET
    data_selector: allow
- name: salary
  endpoint:
    path: /finance/salary/{user}
    method: GET
    data_selector: allow
- name: salary
  endpoint:
    path: /finance/salary/{user}
    method: GET
    data_selector: allow
    params: {}
- name: employeeByID
  endpoint:
    path: /
    method: POST
    data_selector: query
- name: click-stream
  endpoint:
    path: /click-stream
    method: POST
- name: policy
  endpoint:
    path: /kafka/authz/allow
    method: GET
    data_selector: allow
- name: kafka_authz
  endpoint:
    path: /v1/data/kafka/authz/allow
    method: GET
    data_selector: allow
    params: {}
- name: ssh_authz
  endpoint:
    path: /sshd/authz
    method: POST
    data_selector: allow
    params: {}
- name: sudo_authz
  endpoint:
    path: /sudo/authz
    method: POST
    data_selector: allow
    params: {}
- name: roles
  endpoint:
    path: /data/roles
    method: PUT
    data_selector: roles
    params: {}
- name: hosts
  endpoint:
    path: /data/hosts
    method: PUT
    data_selector: hosts
    params: {}
- name: pull
  endpoint:
    path: /etc/host_identity.json
    method: GET
    data_selector: files
- name: roles
  endpoint:
    path: /data/roles
    method: GET
    data_selector: admin
- name: hosts
  endpoint:
    path: /data/hosts
    method: GET
    data_selector: frontend
- name: elevate
  endpoint:
    path: /data/elevate
    method: GET
    data_selector: tickets
- name: http_sg
  endpoint:
    path: git::https://github.com/terraform-aws-modules/terraform-aws-security-group.git?ref=v3.10.0
    method: GET
    data_selector: resources
    params: {}
- name: allow_tls
  endpoint:
    path: data.aws_vpc.default.id
    method: GET
    data_selector: resources
    params: {}
- name: terraform_plan
  endpoint:
    path: /terraform/plan
    method: POST
    data_selector: resources
- name: aws_autoscaling_group
  endpoint:
    path: aws_autoscaling_group.my_asg
    method: managed
    data_selector: resource_changes
    params: {}
- name: aws_instance
  endpoint:
    path: aws_instance.web
    method: managed
    data_selector: resource_changes
    params: {}
- name: aws_launch_configuration
  endpoint:
    path: aws_launch_configuration.my_web_config
    method: managed
    data_selector: resource_changes
    params: {}
- name: http_sg
  endpoint:
    path: /services/data/vXX.X/sobjects/SecurityGroup
    method: GET
    data_selector: resources
    params: {}
- name: allow_tls
  endpoint:
    path: /services/data/vXX.X/sobjects/SecurityGroup
    method: GET
    data_selector: resources
    params: {}
- name: policy_decision
  endpoint:
    path: /v1/data/<path>
    method: POST
    data_selector: result
- name: github_repo
  endpoint:
    path: https://api.github.com/repos/%v/%v
    method: GET
- name: decision_logs
  endpoint:
    path: /logs
    method: POST
    data_selector: events
- name: bundles
  endpoint:
    path: /<service path>/<resource>
    method: GET
    data_selector: ''
    params: {}
- name: bundle
  endpoint:
    path: /opa/bundle.tar.gz
    method: PUT
    data_selector: resource
    params: {}
- name: policy_bundle
  endpoint:
    path: /someorg/policy-hello:1.0.0
    method: GET
    data_selector: policies
- name: status
  endpoint:
    path: /status
    method: POST
    data_selector: labels
- name: discovery_bundle
  endpoint:
    path: /configuration/example/discovery.tar.gz
    method: GET
    data_selector: data
    params: {}
- name: ghcr-registry
  endpoint:
    path: https://ghcr.io
    method: GET
- name: acmecorp
  endpoint:
    path: /control-plane-api/v1
    method: GET
- name: azure_storage_account
  endpoint:
    path: https://YOUR_STORAGE_ACCOUNT.blob.core.windows.net/
    method: GET
- name: authz
  endpoint:
    path: bundles%2fauthz.tar.gz?alt=media
- name: authz
  endpoint:
    path: /authz
    method: GET
    data_selector: bundles/http/example/authz.tar.gz
    params: {}
- name: sign
  endpoint:
    path: /sign
    method: POST
    data_selector: signatures
    params: {}
- name: test
  endpoint:
    path: /test
    method: POST
    data_selector: test_results
    params: {}
- name: version
  endpoint:
    path: /version
    method: GET
    data_selector: version_info
    params: {}
- name: output_formats
  endpoint:
    path: --format
    method: GET
    data_selector: formats
- name: schema
  endpoint:
    path: --schema
    method: GET
    data_selector: schemas
- name: capabilities
  endpoint:
    path: --capabilities
    method: GET
    data_selector: capabilities
- name: exec
  endpoint:
    path: exec
    method: GET
    data_selector: exec_command
- name: fmt
  endpoint:
    path: fmt
    method: GET
    data_selector: fmt_command
- name: inspect
  endpoint:
    path: inspect
    method: GET
    data_selector: inspect_command
- name: parse
  endpoint:
    path: parse
    method: GET
    data_selector: parse_command
- name: run
  endpoint:
    path: run
    method: GET
    data_selector: run_command
- name: eval
  endpoint:
    path: /eval
    method: POST
    data_selector: result
    params: {}
- name: builtins
  endpoint:
    path: /builtins
    method: GET
    data_selector: mapping
    params: {}
- name: entrypoints
  endpoint:
    path: /entrypoints
    method: GET
    data_selector: entrypoints_mapping
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: health
  endpoint:
    path: /health
    method: GET
    data_selector: health_status
    params: {}
- name: data
  endpoint:
    path: /v1/data
    method: GET
    data_selector: result
    params: {}
- name: health
  endpoint:
    path: /health
    method: GET
    data_selector: result
    params: {}
- name: data
  endpoint:
    path: /v1/data
    method: GET
    data_selector: result
    params: {}
- name: builtins
  endpoint:
    path: /capabilities/builtins
    method: GET
    data_selector: builtins
    params: {}
- name: allow_net
  endpoint:
    path: /capabilities/allow_net
    method: GET
    data_selector: allow_net
    params: {}
- name: features
  endpoint:
    path: /capabilities/features
    method: GET
    data_selector: features
    params: {}
- name: future_keywords
  endpoint:
    path: /capabilities/future_keywords
    method: GET
    data_selector: future_keywords
    params: {}
- name: wasm_abi_versions
  endpoint:
    path: /capabilities/wasm_abi_versions
    method: GET
    data_selector: wasm_abi_versions
    params: {}
- name: health
  endpoint:
    path: /health
    method: GET
    data_selector: status
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: metrics
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
    data_selector: metrics
- name: health
  endpoint:
    path: /health
    method: GET
    data_selector: health
- name: status
  endpoint:
    path: /status
    method: GET
    data_selector: status
- name: data
  endpoint:
    path: /v1/data
    method: GET
    data_selector: data
- name: policy_rule
  endpoint:
    path: /v0/data/example_package/example_rule
    method: POST
    data_selector: result
notes:
- The API can be broken down into several groups including Policy API, Data API, Query
  API, Compile API, Health API, Config API, and Status API.
- For large queries, use POST method with the query included in the request body.
- The server will respond with 400 if the input document is invalid (i.e. malformed
  JSON).
- The server will respond with 404 if the requested document is missing or undefined.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- The OPA policy can be evaluated using command-line commands.
- The input data must be structured according to the defined schema.
- The Rego playground is intended for development.
- allows user catherine access on Saturday and Sunday
- Several variables appear more than once in the body.
- The `scope` annotation determines how metadata blocks are applied.
- The `document`, `package`, and `subpackages` scope annotations can only be specified
  once per path.
- The rule is joining the apps and sites documents implicitly.
- Ensure to set up required OAuth2 configuration.
- The 'undefined' result above is expected because we did not define a default value
  for no_bitcoin_miners_using_negation.
- Variables can be used in multiple locations within the rule.
- Joins are implicit in Rego.
- Compiler Strict mode is supported by the check command and can be enabled through
  the --strict/-S flag.
- The related_resources annotation links to external resources such as RFCs.
- Authors can be listed as objects or strings.
- Organizations are represented as a list of strings.
- Schemas can be referenced by path or defined inline.
- Overriding is a schema transformation feature and combines existing schemas.
- Care must be taken when defining overrides so that the transformation of schemas
  is sensible and data can be validated against the transformed schema.
- Tests can be written for policies to verify correctness.
- Test reports can be enriched with variable values to assist in debugging.
- Uses OPA for evaluating policies
- Some use cases require very low-latency policy decisions.
- Policy evaluation is typically CPU-bound unless the policies have to pull additional
  data on-the-fly using built-in functions like http.send()
- By default, OPA stores policy and data in-memory.
- Credentials needed for the external service can either be hardcoded into policy
  or pulled from the environment.
- The built-in functions do not implement any retry logic.
- OPA was designed to let you make context-aware authorization and policy decisions
  by injecting external data.
- OPA serves as a powerful 'swiss army knife' for implementing custom checks required
  by your organization
- The hook does not perform any type preprocessing, such as adding default values
  where missing, or providing auto-generated names.
- Boolean values from CloudFormation Templates are provided to the hook in the form
  of strings (i.e. 'true' and 'false').
- If configured to use a bearer token for authenticating against OPA, set the OPA_AUTH_TOKEN_SECRET
  environment variable.
- Docker’s out-of-the-box authorization model is all or nothing.
- Docker does not currently provide a way to authenticate clients.
- Users can see their own salaries.
- Managers can see their direct reports' salaries.
- HR members can see anyone's salary.
- This example shows conceptually a 'manual' REST API integration with OPA.
- Uses SSL client authentication for Kafka brokers
- Requires SSL client authentication for connecting clients
- Requires Docker Compose to run tutorial environment
- The tutorial requires Docker Compose to run dummy SSH hosts along with OPA.
- OPA is NOT running with an authorization policy configured. This means that clients
  can read and write policies in OPA.
- OPA gives you fine-grained policy control over Terraform plans.
- You can use data other than the plan itself (e.g. the user) when writing authorization
  policies.
- Terraform integration uses OPA for policy evaluation
- 'No security groups should be using HTTP. Resource in violation: module.http_sg.aws_security_group.this_name_prefix[0]'
- Policy for Business Authorization category TAA-1.1
- Uses Github Actions for CI configuration
- OPA can be integrated into editors and IDEs to provide features like syntax highlighting,
  query evaluation, policy coverage, and more.
- OPA can periodically report decision logs to remote HTTP servers, using custom plugins,
  or to the console output; or any combination thereof.
- When decision logging is enabled the OPA server will include a decision_id field
  in API calls that return policy decisions.
- Decision logs contain events that describe policy queries.
- The message body contains a gzip compressed JSON array.
- When using multiple sources there are no ordering guarantees for which bundle loads
  first and takes over some root.
- An empty list of operations in a delta bundle patch.json will remove all the data
  from OPA's in-memory store.
- Bundles provide an alternative to pushing policies into OPA via the REST APIs.
- By default, the OPA REST APIs will prevent you from modifying policy and data loaded
  via bundles.
- The above policy permits both uploads and downloads, which is good for testing.
  The OPA client however needs only the s3:GetObject permission for downloads and
  should be the only permission granted for production use cases.
- Uploading bundles to Azure Blob storage is easily done using the azcopy tool.
- Shared Key or Shared Access Signature (SAS) options are not supported.
- Delta bundles only support updates to data. Policies cannot be updated using delta
  bundles.
- Delta bundles do not support bundle signing.
- The S3 url is the bucket's regional endpoint.
- The Azure Blob Storage requires a specific version header in all authenticated requests.
- The OCI downloader plugin requires a storage path
- The empty manifest-config json file should be sufficient to push and allow the OCI
  downloader to use the remote policy image.
- Status updates contain a set of labels that uniquely identify the OPA instance.
- In general, the bootstrap configuration overrides the discovered configuration.
- If the discovered configuration changes the discovery service, an error will be
  logged.
- Uses OAuth2 with client credentials flow — requires setup of client ID and secret.
- If you have a key which contains a special character (`=`, `[`, `,`, `.`), like
  `opa.example.com`, and want to use the `--set` or `--set-file` options you will
  need to escape the character with a backslash (`\`).
- When using it in a shell you may need to put it in quotes or escape the `\` character
  too.
- Use of v0.x compatibility mode is not recommended for most users.
- Using v0 packages and v1 packages in the same program is considered an anti-pattern
  and is not recommended or supported.
- The 'sign' command generates a digital signature for policy bundles.
- OPA 'sign' can ONLY be used with the --bundle flag.
- The compiled Wasm module is a planned evaluation path for the source policy and
  query.
- Built-in functions that are not natively supported can be implemented in the host
  environment.
- Requires a shared memory buffer named 'env.memory'.
- The policy module must have the import functions defined.
- OPA does not perform authentication or authorization by default.
- Traffic between OPA and clients is encrypted.
- Clients verify the OPA API endpoint identity.
- OPA verifies client identities.
- Uses TLS-based authentication — requires setup of certificates
- By default, OPA listens for normal HTTP connections on localhost:8181.
- The default log format is json and intended for production use.
- OPA listens on localhost:8181 by default.
- Use --addr to bind to all interfaces for Docker deployments.
- OPA exposes a /health API endpoint for readiness and liveness probes.
- Not providing a capabilities file, or providing a file without an allow_net key,
  will permit fetching remote schemas from any host.
- The metaschemas <http://json-schema.org/draft-04/schema>, <http://json-schema.org/draft-06/schema>,
  and <http://json-schema.org/draft-07/schema>, are always available, even without
  network access.
- OPA periodically reports its version and specific anonymous runtime statistics to
  a publicly hosted, external service.
- This feature is only applicable to the opa run and opa version commands.
- 'The on-disk storage should be considered ephemeral: you need to secure the means
  to restore that data.'
- Backup and restore, or repair procedures for data corruption are not provided at
  this time.
- Enable debug logging with --log-level debug for more detailed information.
- Common issues can be diagnosed through OPA logs.
errors:
- '200: no error'
- '404: not found'
- '500: server error'
- '400: bad request'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- invalid JWT supplied as input
- '403 Forbidden: Check user permissions'
- '404 Not Found: Verify endpoint URL'
- Not authorized to read from topic credit-scores.
- Request denied by administrative policy
- 'max_decisions_per_second: allows users to set the maximum number of decision log
  events to buffer per second.'
- Bundle activation will fail if OPA cannot apply a data patch.
- If the discovered configuration changes the `discovery` section, those changes are
  ignored.
- If the discovered configuration changes the `labels` section, only labels that are
  additional compared to the bootstrap configuration are used.
- 'OPA_ERR_OK: No error.'
- 'OPA_ERR_INTERNAL: Unrecoverable internal error.'
- 'OPA_ERR_INVALID_TYPE: Invalid value type was encountered.'
- 'OPA_ERR_INVALID_PATH: Invalid object path reference.'
- 'unauthorized: spiffe://example.com/client-2 is not allowed to call /v1/data'
- 'undefined: Returned when no policies are loaded.'
- '{}: Represents an empty JSON object indicating no decision was made.'
- 'Failed to load policy or data bundles: Check OPA logs for details.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: http://localhost:8181
source_metadata: null
