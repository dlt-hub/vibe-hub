resources:
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: GetAgentUserData
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Account/Get
    method: GET
    data_selector: data
    params: {}
- name: PasswordChange
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Account/PasswordChange
    method: POST
    data_selector: data
    params: {}
- name: PersonalPreferencesSet
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Account/PersonalPreferencesSet
    method: POST
    data_selector: data
    params: {}
- name: RecoverPassword
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Account/Recover
    method: POST
    data_selector: data
    params: {}
- name: TwoFactorAvailableMethodList
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Account/TwoFactor/AvailableMethodList
    method: GET
    data_selector: data
    params: {}
- name: customer_user_create
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Customer/User/Create
    method: POST
- name: customer_user_get
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Customer/User/Get
    method: GET
- name: customer_user_list
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Customer/User/List
    method: GET
- name: customer_user_update
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Customer/User/Update
    method: PUT
- name: document_search_simple
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/DocumentSearch/Simple
    method: GET
- name: ticket_get_by_id
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/Get/ByID
    method: GET
- name: ticket_get_by_number
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/Get/ByNumber
    method: GET
- name: ticket_list
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/List
    method: GET
- name: ticket_lock
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/Lock
    method: GET
- name: ticket_mark_seen
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/MarkSeen
    method: GET
- name: ticket_people_get
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/People/Get
    method: GET
- name: ticket_people_list
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/People/List
    method: GET
- name: ticket_print
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/Print
    method: GET
- name: ticket_process_get
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/Process/Get
    method: GET
- name: ticket_process_post
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/Process/Post
    method: POST
- name: ticket_unlock
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/Unlock
    method: GET
- name: ticket_update_check
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/UpdateCheck
    method: GET
- name: ticket_watch
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/Watch
    method: GET
- name: upload_delete
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Upload/Delete
    method: DELETE
- name: upload_get
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Upload/Get
    method: GET
- name: upload_set
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Upload/Set
    method: POST
- name: agent_config
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Config/Get
    method: GET
- name: filter_presets
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Config/Organizer/Item/FilterPresets/Base
    method: GET
- name: create_filter_presets
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Config/Organizer/Item/FilterPresets/Create
    method: POST
- name: delete_filter_presets
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Config/Organizer/Item/FilterPresets/Delete
    method: DELETE
- name: update_filter_presets
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Config/Organizer/Item/FilterPresets/Update
    method: PUT
- name: set_last_used_filter_presets
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Config/Organizer/Item/FilterPresets/SetLastUsed
    method: PATCH
- name: ticket_action_close
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Close
    method: GET
- name: ticket_action_customer
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Customer
    method: GET
- name: ticket_action_email_outbound
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/EmailOutbound
    method: GET
- name: ticket_action_email_to_secondaries
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/EmailToSecondaries
    method: GET
- name: ticket_action_free_text
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/FreeText
    method: GET
- name: ticket_action_merge
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Merge
    method: GET
- name: ticket_action_move
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Move
    method: GET
- name: ticket_action_note
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Note
    method: GET
- name: ticket_action_owner
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Owner
    method: GET
- name: ticket_action_priority
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Priority
    method: GET
- name: agent_account_get
  endpoint:
    path: /api/agent/account/get
    method: GET
- name: agent_auth_login
  endpoint:
    path: /api/agent/auth/login
    method: POST
- name: agent_auth_logout
  endpoint:
    path: /api/agent/auth/logout
    method: POST
- name: customer_user_create
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Agent/Customer/User/Create
    method: POST
- name: customer_user_get
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Agent/Customer/User/Get
    method: GET
- name: customer_user_list
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Agent/Customer/User/List
    method: GET
- name: customer_user_update
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Agent/Customer/User/Update
    method: PUT
- name: document_search_simple
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Agent/DocumentSearch/Simple
    method: GET
- name: ticket_list
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Agent/Ticket/List
    method: GET
- name: TicketActionResponsible
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Frontend/Agent/Ticket/Action/Responsible
    method: GET
- name: TicketSetToPrimary
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Frontend/Agent/Ticket/Action/SetToPrimary
    method: GET
- name: TicketSetToSecondary
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Frontend/Agent/Ticket/Action/SetToSecondary
    method: GET
- name: TicketSmsOutbound
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Frontend/Agent/Ticket/Action/SmsOutbound
    method: GET
- name: TicketSmsToSecondaries
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Frontend/Agent/Ticket/Action/SmsToSecondaries
    method: GET
- name: TicketSummary
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Frontend/Agent/Ticket/Action/TicketSummary
    method: GET
- name: TicketUnsetPrimary
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Frontend/Agent/Ticket/Action/UnsetPrimary
    method: GET
- name: TicketUnsetSecondary
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Frontend/Agent/Ticket/Action/UnsetSecondary
    method: GET
- name: TicketUpdateSecondaries
  endpoint:
    path: /Kernel/WEBAPP/Controller/API/Frontend/Agent/Ticket/Action/UpdateSecondaries
    method: GET
- name: TicketLock
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/Lock
    method: GET
- name: TicketMarkSeen
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/MarkSeen
    method: GET
- name: TicketPeopleGet
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/People/Get
    method: GET
- name: TicketPeopleList
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/People/List
    method: GET
- name: TicketPrint
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/Print
    method: GET
- name: TicketProcessGet
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/Process/Get
    method: GET
- name: TicketProcessPost
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/Process/Post
    method: POST
- name: TicketPropertyBase
  endpoint:
    path: /Kernel/WebApp/Controller/API/Agent/Ticket/Property/Base
    method: GET
- name: GetAgentInterfaceConfig
  endpoint:
    path: /frontend/agent/config/get
    method: GET
- name: UpdateChannel
  endpoint:
    path: /frontend/agent/chat/updatechannel
    method: POST
- name: SetFlag
  endpoint:
    path: /frontend/agent/chat/setflag
    method: POST
- name: ticket_action_close
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Close
    method: GET
- name: ticket_action_customer
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Customer
    method: GET
- name: ticket_action_email_outbound
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/EmailOutbound
    method: GET
- name: ticket_action_email_to_secondaries
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/EmailToSecondaries
    method: GET
- name: ticket_action_free_text
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/FreeText
    method: GET
- name: ticket_action_merge
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Merge
    method: GET
- name: ticket_action_move
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Move
    method: GET
- name: ticket_action_note
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Note
    method: GET
- name: ticket_action_owner
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Owner
    method: GET
- name: ticket_action_priority
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Priority
    method: GET
- name: Foundation Training
  endpoint:
    path: /Events/foundation-training
    method: GET
    data_selector: trainings
    params: {}
- name: Administrator Training
  endpoint:
    path: /Events/administrator-training
    method: GET
    data_selector: trainings
    params: {}
- name: Ticket Action Responsible
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/Responsible
    method: GET
- name: Ticket SetToPrimary
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/SetToPrimary
    method: GET
- name: Ticket SetToSecondary
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/SetToSecondary
    method: GET
- name: Ticket SmsOutbound
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/SmsOutbound
    method: GET
- name: Ticket SmsToSecondaries
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/SmsToSecondaries
    method: GET
- name: Ticket Summary
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/TicketSummary
    method: GET
- name: Ticket UnsetPrimary
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/UnsetPrimary
    method: GET
- name: Ticket UnsetSecondary
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/UnsetSecondary
    method: GET
- name: Ticket UpdateSecondaries
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Action/UpdateSecondaries
    method: GET
- name: Ticket Base
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Base
    method: GET
- name: Ticket Bulk Base
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Bulk/Base
    method: GET
- name: Ticket Bulk Lock
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Bulk/Lock
    method: GET
- name: Ticket Bulk PreCheck
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Bulk/PreCheck
    method: GET
- name: Ticket Bulk PrimarySecondary Config
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Bulk/PrimarySecondary/Config
    method: GET
- name: Ticket Bulk Process
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Bulk/Process
    method: GET
- name: Ticket Process PreCheck
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Process/PreCheck
    method: GET
- name: Ticket SMS HealthCheck
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/SMS/HealthCheck
    method: GET
- name: Ticket Search
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/Ticket/Search
    method: GET
- name: User Search
  endpoint:
    path: /Kernel/WebApp/Controller/API/Frontend/Agent/User/Search
    method: GET
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /services/data/vXX.X/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /services/data/vXX.X/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: DebugLog
  endpoint:
    path: /DebugLog
    method: POST
    data_selector: Data
    params: {}
- name: Debug
  endpoint:
    path: /Debug
    method: POST
    data_selector: Data
    params: {}
- name: Info
  endpoint:
    path: /Info
    method: POST
    data_selector: Data
    params: {}
- name: Notice
  endpoint:
    path: /Notice
    method: POST
    data_selector: Data
    params: {}
- name: Error
  endpoint:
    path: /Error
    method: POST
    data_selector: Data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /services/data/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /services/data/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: HandleError
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: DebuggerConfig
  endpoint:
    path: /new
    method: POST
    data_selector: DebuggerConfig
    params: {}
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: tickets
    params: {}
- name: article
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: articles
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: HandleError
  endpoint:
    path: /HandleError
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: ticket
  endpoint:
    path: /advanced-escalations/tickets/
    method: GET
    data_selector: records
- name: statistics
  endpoint:
    path: /advanced-escalations/statistics-reports/
    method: GET
    data_selector: reports
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: services
  endpoint:
    path: /api/v1/services
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: data
    params: {}
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: tickets
- name: tickets
  endpoint:
    path: /services/data/v1/tickets
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: statistics
  endpoint:
    path: /api/v1/statistics
    method: GET
    data_selector: data
    params: {}
- name: ITSMConfigItem
  endpoint:
    path: /perl-api/kernel-genericinterface-event-objecttype-itsmconfigitem-pm
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: records
    params: {}
- name: ticket
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: ValidateDemo
  endpoint:
    path: /Validate
    method: POST
    data_selector: ValidateResult
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /services/data/vXX.X/tickets
    method: GET
    data_selector: records
    params: {}
- name: Agent Interface
  endpoint:
    path: /user/agent/
    method: GET
- name: External Interface
  endpoint:
    path: /user/external/
    method: GET
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: data
    params: {}
- name: external_interface
  endpoint:
    path: /external
    method: GET
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
- name: tickets
  endpoint:
    path: /services/data/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /services/data/v1/articles
    method: GET
    data_selector: records
- name: SolMan
  endpoint:
    path: /services/data/vXX.X/sobjects/SolMan
    method: POST
    data_selector: Data
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: tickets
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: articles
- name: AITicketSummary
  endpoint:
    path: /kernel/genericinterface/event/validation/aiticketsummary
    method: GET
    data_selector: ValidateResult
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: statistics_reports
  endpoint:
    path: /api/v1/statistics
    method: GET
    data_selector: records
- name: Validate
  endpoint:
    path: /Validate
    method: POST
    data_selector: ValidateResult
    params:
      Data:
        Queue: Postmaster
- name: ticket
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: data
    params: {}
- name: RequestSystemGuid
  endpoint:
    path: /RequestSystemGuid
    method: GET
    data_selector: Data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: tickets
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: articles
- name: tickets
  endpoint:
    path: /services/data/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /services/data/v1/articles
    method: GET
    data_selector: records
- name: Ticket
  endpoint:
    path: /api/ticket
    method: POST
    data_selector: Data
- name: TicketCreate
  endpoint:
    path: /kernel/genericinterface/invoker/ticket/ticketcreate
    method: POST
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: MappingConfig
  endpoint:
    path: /mapping/config
    method: GET
    data_selector: records
- name: SolMan
  endpoint:
    path: /services/data/vXX.X/sobjects/SolMan
    method: POST
    data_selector: Data
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: RequestSystemGuid
  endpoint:
    path: /Kernel/GenericInterface/Invoker/SolMan/RequestSystemGuid
    method: POST
    data_selector: Data
    params: {}
- name: Operation
  endpoint:
    path: /Operation
    method: POST
    data_selector: Data
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: CreateAccessToken
  endpoint:
    method: POST
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: statistics
  endpoint:
    path: /api/statistics
    method: GET
    data_selector: records
    params: {}
- name: AccessToken
  endpoint:
    path: /Run
    method: POST
    data_selector: Data
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: access_token
  endpoint:
    path: /kernel/genericinterface/operation/accesstoken/get
    method: GET
    data_selector: Data
- name: Ticket
  endpoint:
    path: /Ticket
    method: POST
    data_selector: Data
- name: Response
  endpoint:
    path: /Response
    method: POST
    data_selector: Data
- name: Error
  endpoint:
    path: /Error
    method: POST
    data_selector: ErrorCode
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: ConfigItemCreate
  endpoint:
    method: POST
    data_selector: Data
- name: ConfigItemDelete
  endpoint:
    path: /kernel/genericinterface/operation/configitem/configitemdelete
    method: DELETE
    data_selector: success
    params: {}
- name: ConfigItem
  endpoint:
    path: /ConfigItemDelete
    method: POST
    data_selector: Data
    params:
      UserLogin: some agent login
      CustomerUserLogin: some customer login
      AccessToken: eyJhbGciOiJIUzI1NiJ9[...]
      Password: some password
      ConfigItemID: 32,33
- name: ConfigItem
  endpoint:
    path: /kernel/genericinterface/operation/configitem
    method: GET
- name: ConfigItem
  endpoint:
    path: /ConfigItem
    method: POST
    data_selector: Data.ConfigItem
    params:
      UserLogin: some agent login
      AccessToken: eyJhbGciOiJIUzI1NiJ9[...]
      Password: some password
      ConfigItemID: 32,33
      Attachments: 1
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: ConfigItemSearch
  endpoint:
    path: /ConfigItemSearch
    method: POST
    data_selector: Data
    params:
      UserLogin: some agent login
      AccessToken: eyJhbGciOiJIUzI1NiJ9[...]
      Password: some password
      ConfigItem:
        Class: The ConfigItem Class
        Limit: 122
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: data.records
    params: {}
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: data.records
    params: {}
- name: ConfigItemUpdate
  endpoint:
    path: /ConfigItemUpdate
    method: POST
    data_selector: Data
    params:
      UserLogin: some agent login
      AccessToken: 123
      Password: some password
      ReplaceExistingData: 0
      ConfigItemID: 123
      ConfigItem:
        Class: Configuration Item Class
        Name: The Name
        DeplState: deployment state
        InciState: incident state
        CIXMLData: $ArrayHashRef
        Attachment:
        - Content: content
          ContentType: some content type
          Filename: some fine name
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: CustomerCompany
  endpoint:
    path: /CustomerCompanyCreate
    method: POST
    data_selector: Data
    params: {}
- name: Operation
  endpoint:
    path: /Kernel/GenericInterface/Operation
    method: POST
    data_selector: Data
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: CustomerCompany
  endpoint:
    path: /CustomerCompanyGet
    method: POST
    data_selector: CustomerCompany
- name: AccessToken
  endpoint:
    path: /CreateAccessToken
    method: POST
    data_selector: AccessToken
- name: customer_company_search
  endpoint:
    path: /Run
    method: POST
    data_selector: Data
    params:
      Limit: 100
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: CustomerCompanyUpdate
  endpoint:
    path: /CustomerCompanyUpdate
    method: POST
    data_selector: Data
    params:
      CustomerID: some-company-id
- name: tickets
  endpoint:
    path: /services/data/v1.0/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /services/data/v1.0/articles
    method: GET
    data_selector: records
- name: CustomerUserCreate
  endpoint:
    path: /CustomerUserCreate
    method: POST
    data_selector: Data
    params: {}
- name: CustomerUserGet
  endpoint:
    path: /kernel/genericinterface/operation/customeruser/customeruserget
    method: GET
- name: Auth
  endpoint:
    path: /Auth
    method: POST
    data_selector: UserID
    params: {}
- name: CustomerUser
  endpoint:
    path: /CustomerUserGet
    method: POST
    data_selector: Data.CustomerUser
- name: customer_user
  endpoint:
    path: /customeruser/search
    method: POST
    data_selector: Data
    params:
      Limit: 100
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: statistics
  endpoint:
    path: /api/v1/statistics
    method: GET
    data_selector: records
    params: {}
- name: CustomerUser
  endpoint:
    path: /CustomerUserUpdate
    method: POST
    data_selector: Data
    params: {}
- name: tickets
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /services/data/vXX.X/sobjects/Article
    method: GET
    data_selector: records
    params: {}
- name: ConfigItemCreate
  endpoint:
    path: /ConfigItemCreate
    method: POST
    data_selector: Data
- name: LanguageList
  endpoint:
    path: /LanguageList
    method: POST
    data_selector: Data.Language
- name: PublicCategoryList
  endpoint:
    path: /kernel/genericinterface/operation/faq/publiccategorylist
    method: GET
    data_selector: Data.Category
    params: {}
- name: ConfigItem
  endpoint:
    path: /ConfigItemDelete
    method: POST
    data_selector: Data
    params:
      UserLogin: some agent login
      CustomerUserLogin: some customer login
      AccessToken: eyJhbGciOiJIUzI1NiJ9[...]
      Password: some password
      ConfigItemID: 32,33
- name: PublicFAQ
  endpoint:
    path: /PublicFAQ
    method: POST
    data_selector: Data
- name: ConfigItem
  endpoint:
    path: /ConfigItem
    method: POST
    data_selector: Data.ConfigItem
    params:
      UserLogin: some agent login
      AccessToken: eyJhbGciOiJIUzI1NiJ9[...]
      Password: some password
      ConfigItemID: 32,33
      Attachments: 1
- name: ticket
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
    params: {}
- name: ConfigItem
  endpoint:
    path: /ConfigItem
    method: POST
    data_selector: ConfigItemID
- name: PublicFAQSearch
  endpoint:
    path: /publicFAQSearch
    method: POST
    data_selector: Data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: ConfigItemUpdate
  endpoint:
    path: /_ConfigItemUpdate
    method: POST
    data_selector: Data
    params:
      UserLogin: some agent login
      AccessToken: 123
      Password: some password
      ReplaceExistingData: 0
      ConfigItemID: 123
      ConfigItem:
        Class: Configuration Item Class
        Name: The Name
        DeplState: deployment state
        InciState: incident state
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: Agent Interface
  endpoint:
    path: /user/agent/
    method: GET
- name: External Interface
  endpoint:
    path: /user/external/
    method: GET
- name: LinkAdd
  endpoint:
    method: Run
    data_selector: Data
    params: {}
- name: CustomerCompany
  endpoint:
    path: /CustomerCompany
    method: POST
    data_selector: Data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: LinkDelete
  endpoint:
    path: /LinkDelete
    method: POST
    data_selector: Data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: statistics_reports
  endpoint:
    path: /api/statistics_reports
    method: GET
    data_selector: records
    params: {}
- name: customer_company
  endpoint:
    path: /customercompany
    method: GET
    data_selector: CustomerCompany
    params:
      UserLogin: required
      AccessToken: required
      Password: required if UserLogin is sent
      CustomerID: required
- name: LinkDeleteAll
  endpoint:
    path: /LinkDeleteAll
    method: POST
    data_selector: Data
    params:
      UserLogin: some agent login
      SessionID: 123
      Password: some password
      Object: Ticket
      Key: '321'
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: statistics_reports
  endpoint:
    path: /api/v1/statistics_reports
    method: GET
    data_selector: records
    params: {}
- name: LinkList
  endpoint:
    path: /LinkList
    method: POST
    data_selector: Data.LinkList
    params: {}
- name: customer_company_search
  endpoint:
    path: /customer_company/search
    method: POST
    data_selector: Data
- name: PossibleLinkList
  endpoint:
    path: /Run
    method: POST
    data_selector: Data.PossibleLinkList
    params:
      UserLogin: some agent login
      SessionID: 123
      Password: some password
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: records
    params: {}
- name: CustomerCompany
  endpoint:
    path: /CustomerCompanyUpdate
    method: POST
    data_selector: Data
    params:
      CustomerID: some-company-id
      UserLogin: some agent login
      AccessToken: 123
      Password: some password
- name: PossibleObjectsList
  endpoint:
    path: /kernel/genericinterface/operation/link/possibleobjectslist
    method: POST
    data_selector: Data.PossibleObject
    params:
      UserLogin: some agent login
      SessionID: 123
      Password: some password
      Object: Ticket
- name: ticket
  endpoint:
    path: /api/v1/ticket
    method: GET
    data_selector: tickets
- name: customer
  endpoint:
    path: /api/v1/customer
    method: GET
    data_selector: customers
- name: CustomerUser
  endpoint:
    path: /CustomerUserCreate
    method: POST
    data_selector: Data
    params:
      UserLogin: some customer user login
      AccessToken: 123
      Password: some password
      CustomerUserLogin: johndoe
      UserEmail: jdoe@example.com
      UserFirstname: John
      UserLastname: Doe
      UserCustomerID: aglufth-01
      UserPassword: s3cr3t
      Source: SomeSource
      ValidID: 1
- name: PossibleTypesList
  endpoint:
    path: /perform/PossibleTypesList
    method: POST
    data_selector: Data.PossibleType
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: statistics
  endpoint:
    path: /api/statistics
    method: GET
    data_selector: records
- name: CustomerUser
  endpoint:
    path: /CustomerUserGet
    method: POST
    data_selector: Data.CustomerUser
- name: customer_user
  endpoint:
    path: /customer_user_search
    method: POST
    data_selector: Data
    params:
      Limit: 100
- name: ticket
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: user
  endpoint:
    path: /api/users
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: CustomerUserUpdate
  endpoint:
    path: /kernel/genericinterface/operation/customeruser/customeruserupdate
    method: POST
    data_selector: Data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: LanguageList
  endpoint:
    path: /LanguageList
    method: GET
    data_selector: Data.Language
    params: {}
- name: Service
  endpoint:
    path: /service/get
    method: POST
    data_selector: Data.Service
    params:
      UserLogin: some agent login
      AccessToken: 123
      Password: some password
      ServiceID: 32,33
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: tickets
- name: statistics
  endpoint:
    path: /api/v1/statistics
    method: GET
    data_selector: statistics
- name: Ticket
  endpoint:
    path: /ticket
    method: GET
    data_selector: tickets
- name: PublicCategoryList
  endpoint:
    path: /kernel/genericinterface/operation/faq/publiccategorylist
    method: GET
    data_selector: Data.Category
- name: ServiceList
  endpoint:
    path: /ServiceList
    method: POST
    data_selector: ServiceList
    params:
      UserLogin: some agent login
      CustomerUserLogin: some customer user login
      AccessToken: 123
      Password: some password
      ServiceListCustomerUser: TestCustomerUserLogin
- name: PublicFAQ
  endpoint:
    path: /PublicFAQGet
    method: POST
    data_selector: Data
    params: {}
- name: ticket
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
- name: customer
  endpoint:
    path: /services/data/vXX.X/sobjects/Customer
    method: GET
    data_selector: records
- name: ServiceUpdate
  endpoint:
    path: /ServiceUpdate
    method: POST
    data_selector: Data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: PublicFAQSearch
  endpoint:
    path: /perform/PublicFAQSearch
    method: POST
    data_selector: Data
    params: {}
- name: TicketSync
  endpoint:
    path: /TicketSync
    method: POST
    data_selector: Result
    params: {}
- name: GetRemoteSystemGuid
  endpoint:
    path: /GetRemoteSystemGuid
    method: GET
    data_selector: RemoteSystemGuid
    params: {}
- name: GetLocalSystemGuid
  endpoint:
    path: /GetLocalSystemGuid
    method: GET
    data_selector: SystemGuid
    params: {}
- name: SetSystemGuid
  endpoint:
    path: /SetSystemGuid
    method: POST
    data_selector: Success
    params: {}
- name: LinkAdd
  endpoint:
    path: /LinkAdd
    method: POST
    data_selector: Result.Data
    params:
      UserLogin: some agent login
      SessionID: 123
      Password: some password
      SourceObject: Ticket
      SourceKey: '321'
      TargetObject: FAQ
      TargetKey: '321'
      Type: ParentChild
      State: Valid
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: LinkDelete
  endpoint:
    path: /LinkDelete
    method: POST
    data_selector: Data
    params: {}
- name: RequestSystemGuid
  endpoint:
    path: /Run
    method: POST
    data_selector: Data
- name: LinkDeleteAll
  endpoint:
    path: /kernel/genericinterface/operation/link/linkdeleteall
    method: DELETE
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: LinkDeleteAll
  endpoint:
    path: /LinkDeleteAll
    method: POST
    data_selector: Data
    params:
      UserLogin: some agent login
      SessionID: 123
      Password: some password
      Object: Ticket
      Key: '321'
- name: LinkList
  endpoint:
    path: /LinkList
    method: POST
    data_selector: Data.LinkList
    params:
      UserLogin: some agent login
      SessionID: 123
      Password: some password
      Object: Ticket
      Key: '321'
      Object2: FAQ
      State: Valid
      Type: ParentChild
      Direction: Target
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: results
- name: article
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: results
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: Run
  endpoint:
    path: /Run
    method: POST
    data_selector: Data
    params: {}
- name: PossibleLinkList
  endpoint:
    path: /kernel/genericinterface/operation/link/possiblelinklist
    method: POST
    data_selector: Data.PossibleLinkList
    params:
      UserLogin: some agent login
      SessionID: 123
      Password: some password
- name: TicketClone
  endpoint:
    path: /api/ticketclone
    method: POST
    data_selector: Data
    params: {}
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: PossibleObjectsList
  endpoint:
    path: /kernel/genericinterface/operation/link/possibleobjectslist
    method: POST
    data_selector: Data.PossibleObject
    params:
      UserLogin: some agent login
      SessionID: 123
      Password: some password
      Object: Ticket
- name: Ticket
  endpoint:
    path: /TicketCreate
    method: POST
    data_selector: Data
- name: ticket
  endpoint:
    path: /kernel/genericinterface/operation/ticket/ticketget
    method: GET
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: results
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: results
    params: {}
- name: PossibleTypesList
  endpoint:
    path: /kernel/genericinterface/operation/link/possibletypeslist
    method: POST
    data_selector: Data.PossibleType
    params:
      UserLogin: some agent login
      SessionID: 123
      Password: some password
      Object1: Ticket
      Object2: FAQ
- name: ticket
  endpoint:
    path: /api/ticket/get
    method: POST
    data_selector: Data.Ticket
    params:
      UserLogin: some agent login
      CustomerUserLogin: some customer login
      AccessToken: 123
      Password: some password
      TicketID: 32,33
      DynamicFields: 0
      Extended: 1
      AllArticles: 1
      ArticleOrder: DESC
      ArticleLimit: 5
      Attachments: 1
      GetAttachmentContents: 1
      HTMLBodyAsAttachment: 1
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
- name: statistics
  endpoint:
    path: /api/v1/statistics
    method: GET
    data_selector: data
- name: TicketHistory
  endpoint:
    path: /TicketHistoryGet
    method: POST
    data_selector: Data.TicketHistory
- name: TicketSearch
  endpoint:
    path: /TicketSearch
    method: POST
    data_selector: Data
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: TicketUpdate
  endpoint:
    method: POST
    data_selector: Data
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: service
  endpoint:
    path: /Kernel/GenericInterface/Operation/ServiceGet
    method: POST
    data_selector: Data.Service
    params:
      UserLogin: some agent login
      AccessToken: 123
      Password: some password
      ServiceID: 32,33
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: ServiceList
  endpoint:
    path: /service/list
    method: POST
    data_selector: Data.ServiceList
- name: ServiceUpdate
  endpoint:
    path: /Kernel/GenericInterface/Operation/Service/ServiceUpdate
    method: POST
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: TicketSync
  endpoint:
    path: /TicketSync
    method: POST
    data_selector: Result
- name: GetRemoteSystemGuid
  endpoint:
    path: /GetRemoteSystemGuid
    method: GET
    data_selector: RemoteSystemGuid
- name: GetLocalSystemGuid
  endpoint:
    path: /GetLocalSystemGuid
    method: GET
    data_selector: SystemGuid
- name: SetSystemGuid
  endpoint:
    path: /SetSystemGuid
    method: POST
    data_selector: Success
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: tickets
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: local_system_guid
  endpoint:
    path: /Run
    method: POST
    data_selector: Data
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: records
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: tickets
- name: ticket
  endpoint:
    path: /services/data/v1/tickets
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: customer
  endpoint:
    path: /services/data/v1/customers
    method: GET
    data_selector: records
    params: {}
- name: ValidateQueue
  endpoint:
    path: /ValidateQueue
    method: POST
    data_selector: Success
- name: ValidateLock
  endpoint:
    path: /ValidateLock
    method: POST
    data_selector: Success
- name: ValidateType
  endpoint:
    path: /ValidateType
    method: POST
    data_selector: Success
- name: ValidateCustomer
  endpoint:
    path: /ValidateCustomer
    method: POST
    data_selector: Success
- name: ValidateService
  endpoint:
    path: /ValidateService
    method: POST
    data_selector: Success
- name: ValidateSLA
  endpoint:
    path: /ValidateSLA
    method: POST
    data_selector: Success
- name: ValidateState
  endpoint:
    path: /ValidateState
    method: POST
    data_selector: Success
- name: ValidatePriority
  endpoint:
    path: /ValidatePriority
    method: POST
    data_selector: Success
- name: ValidateOwner
  endpoint:
    path: /ValidateOwner
    method: POST
    data_selector: Success
- name: ValidateResponsible
  endpoint:
    path: /ValidateResponsible
    method: POST
    data_selector: Success
- name: ValidatePendingTime
  endpoint:
    path: /ValidatePendingTime
    method: POST
    data_selector: Success
- name: ValidateAutoResponseType
  endpoint:
    path: /ValidateAutoResponseType
    method: POST
    data_selector: Success
- name: ValidateEmailAddresses
  endpoint:
    path: /ValidateEmailAddresses
    method: POST
    data_selector: Success
- name: ValidateArticleCommunicationChannel
  endpoint:
    path: /ValidateArticleCommunicationChannel
    method: POST
    data_selector: Success
- name: ValidateSenderType
  endpoint:
    path: /ValidateSenderType
    method: POST
    data_selector: Success
- name: ValidateHistoryType
  endpoint:
    path: /ValidateHistoryType
    method: POST
    data_selector: Success
- name: ValidateTimeUnit
  endpoint:
    path: /ValidateTimeUnit
    method: POST
    data_selector: Success
- name: ValidateUserID
  endpoint:
    path: /ValidateUserID
    method: POST
    data_selector: Success
- name: ValidateDynamicFieldName
  endpoint:
    path: /ValidateDynamicFieldName
    method: POST
    data_selector: Success
- name: ValidateDynamicFieldValue
  endpoint:
    path: /ValidateDynamicFieldValue
    method: POST
    data_selector: Success
- name: ValidateDynamicFieldObjectType
  endpoint:
    path: /ValidateDynamicFieldObjectType
    method: POST
    data_selector: Success
- name: SetDynamicFieldValue
  endpoint:
    path: /SetDynamicFieldValue
    method: POST
    data_selector: Success
- name: CreateAttachment
  endpoint:
    path: /CreateAttachment
    method: POST
    data_selector: Success
- name: CheckCreatePermissions
  endpoint:
    path: /CheckCreatePermissions
    method: POST
    data_selector: Success
- name: CheckAccessPermissions
  endpoint:
    path: /CheckAccessPermissions
    method: POST
    data_selector: Success
- name: TicketACL
  endpoint:
    path: /kernel/genericinterface/operation/ticket/ticketacl
    method: GET
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: Run
  endpoint:
    path: /Run
    method: POST
    data_selector: Data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
- name: articles
  endpoint:
    path: /api/articles
    method: GET
- name: TicketClone
  endpoint:
    path: /api/ticket/clone
    method: POST
    data_selector: Data
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: TicketCreate
  endpoint:
    path: /api/ticket/create
    method: POST
    data_selector: Data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
    params: {}
- name: ticket
  endpoint:
    path: /TicketGet
    method: POST
    data_selector: Data
    params:
      UserLogin: some agent login
      CustomerUserLogin: some customer login
      AccessToken: 123
      Password: some password
      TicketID: 32,33
      DynamicFields: 0
      Extended: 1
      AllArticles: 1
      ArticleOrder: DESC
      ArticleLimit: 5
      Attachments: 1
      GetAttachmentContents: 1
      HTMLBodyAsAttachment: 1
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: TicketHistory
  endpoint:
    path: /TicketHistory
    method: GET
    data_selector: Data.TicketHistory
- name: FormInputCreate
  endpoint:
    path: /FormInputCreate
    method: POST
    data_selector: Value
- name: FormDataGet
  endpoint:
    path: /FormDataGet
    method: GET
    data_selector: FormData
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: statistics
  endpoint:
    path: /api/v1/statistics
    method: GET
    data_selector: records
    params: {}
- name: TicketSearch
  endpoint:
    path: /_BuildConfig
    method: GET
    data_selector: Data
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: TicketUpdate
  endpoint:
    path: /TicketUpdate
    method: POST
- name: user_initials
  endpoint:
    path: /UserInitialsGet
    method: GET
    data_selector: UserInitials
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: BuildSelectionJSON
  endpoint:
    path: /BuildSelectionJSON
    method: POST
    data_selector: Data
    params: {}
- name: ticket
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
    params: {}
- name: article
  endpoint:
    path: /services/data/vXX.X/sobjects/Article
    method: GET
    data_selector: records
    params: {}
- name: ArticleFields
  endpoint:
    path: /ArticleFields
    method: GET
    data_selector: article_fields
    params:
      TicketID: '123'
      ArticleID: '123'
- name: ArticlePreview
  endpoint:
    path: /ArticlePreview
    method: GET
    data_selector: article_preview
    params:
      TicketID: '123'
      ArticleID: '123'
      ResultType: plain
      MaxLength: '50'
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: DatepickerGetVacationDays
  endpoint:
    path: /DatepickerGetVacationDays
    method: GET
    data_selector: hash
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: statistics
  endpoint:
    path: /api/v1/statistics
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: ticket
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
    params: {}
- name: LoaderCreateAgentCSSCalls
  endpoint:
    path: /LoaderCreateAgentCSSCalls
    method: POST
    data_selector: valid_functions
    params: {}
- name: LoaderCreateAgentJSCalls
  endpoint:
    path: /LoaderCreateAgentJSCalls
    method: POST
    data_selector: valid_functions
    params: {}
- name: LoaderCreateJavaScriptTemplateData
  endpoint:
    path: /LoaderCreateJavaScriptTemplateData
    method: POST
    data_selector: valid_functions
    params: {}
- name: LoaderCreateJavaScriptTranslationData
  endpoint:
    path: /LoaderCreateJavaScriptTranslationData
    method: POST
    data_selector: valid_functions
    params: {}
- name: SkinValidate
  endpoint:
    path: /SkinValidate
    method: GET
    data_selector: valid_functions
    params: {}
- name: ticket
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
- name: customer
  endpoint:
    path: /services/data/vXX.X/sobjects/Customer
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
- name: Output
  endpoint:
    path: Output
    method: POST
    data_selector: HTML
    params: {}
- name: AddJSOnDocumentComplete
  endpoint:
    path: AddJSOnDocumentComplete
    method: POST
    data_selector: JS_Code
    params: {}
- name: AddJSData
  endpoint:
    path: AddJSData
    method: POST
    data_selector: JS_Data
    params: {}
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: tickets
    params: {}
- name: customer
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: customers
    params: {}
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: SettingRender
  endpoint:
    path: /SettingRender
    method: POST
    data_selector: Item
    params:
      UserID: 1
- name: SettingAddItem
  endpoint:
    path: /SettingAddItem
    method: POST
    data_selector: Item
    params:
      UserID: 1
- name: AvailableLanguages
  endpoint:
    path: /AvailableLanguages
    method: GET
    data_selector: AvailableLanguages
- name: CountAllTranslations
  endpoint:
    path: /CountAllTranslations
    method: GET
    data_selector: CountAllTranslations
- name: GetTranslations
  endpoint:
    path: /GetTranslations
    method: GET
    data_selector: Translations
- name: GetBuiltInTranslations
  endpoint:
    path: /GetBuiltInTranslations
    method: GET
    data_selector: BuiltInTranslations
- name: ListAllTranslations
  endpoint:
    path: /ListAllTranslations
    method: GET
    data_selector: Translations
- name: SearchAllTranslations
  endpoint:
    path: /SearchAllTranslations
    method: GET
    data_selector: Translations
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: filters
  endpoint:
    path: /filters
    method: GET
    data_selector: filters
    params: {}
- name: functions
  endpoint:
    path: /functions
    method: GET
    data_selector: functions
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
- name: tickets
  endpoint:
    path: /tickets
    method: GET
- name: statistics
  endpoint:
    path: /statistics
    method: GET
- name: FormInputCreate
  endpoint:
    path: FormInputCreate
    method: POST
    data_selector: Value
    params: {}
- name: FormDataGet
  endpoint:
    path: FormDataGet
    method: GET
    data_selector: FormData
    params: {}
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: tickets
    params: {}
- name: tickets
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /services/data/vXX.X/sobjects/Article
    method: GET
    data_selector: records
    params: {}
- name: ACLList
  endpoint:
    path: ACLList
    method: GET
    data_selector: records
    params:
      UserID: 1
- name: ACLListGet
  endpoint:
    path: ACLListGet
    method: GET
    data_selector: records
    params:
      UserID: 1
- name: ACLDump
  endpoint:
    path: ACLDump
    method: GET
    data_selector: records
    params:
      NoOutput: 0
- name: ACLDeploy
  endpoint:
    path: ACLDeploy
    method: POST
    data_selector: records
    params:
      UserID: 123
- name: Block
  endpoint:
    path: /Block
    method: POST
- name: Notify
  endpoint:
    path: /Notify
    method: POST
- name: Ascii2Html
  endpoint:
    path: /Ascii2Html
    method: POST
- name: Redirect
  endpoint:
    path: /Redirect
    method: POST
- name: Header
  endpoint:
    path: /Header
    method: POST
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: user_initials
  endpoint:
    path: /UserInitialsGet
    method: GET
    data_selector: UserInitials
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: BuildSelectionJSON
  endpoint:
    path: /BuildSelectionJSON
    method: POST
    data_selector: JSON
    params: {}
- name: access_token
  endpoint:
    path: /access-token
    method: GET
    data_selector: tokens
- name: ArticleFields
  endpoint:
    path: /ArticleFields
    method: GET
    data_selector: article_fields
    params:
      TicketID: 123
      ArticleID: 123
- name: ArticlePreview
  endpoint:
    path: /ArticlePreview
    method: GET
    data_selector: article_preview
    params:
      TicketID: 123
      ArticleID: 123
      ResultType: plain
      MaxLength: 50
- name: access_tokens
  endpoint:
    path: /access_tokens
    method: GET
    data_selector: '[]'
    params: {}
- name: DatepickerGetVacationDays
  endpoint:
    path: /DatepickerGetVacationDays
    method: GET
    data_selector: hash
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: AsyncCall
  endpoint:
    path: /AsyncCall
    method: POST
    data_selector: Success
    params:
      Attempts: 3
      MaximumParallelInstances: 1
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: LoaderCreateAgentCSSCalls
  endpoint:
    path: /LoaderCreateAgentCSSCalls
    method: POST
    data_selector: valid_functions
    params: {}
- name: LoaderCreateAgentJSCalls
  endpoint:
    path: /LoaderCreateAgentJSCalls
    method: POST
    data_selector: valid_functions
    params: {}
- name: LoaderCreateJavaScriptTemplateData
  endpoint:
    path: /LoaderCreateJavaScriptTemplateData
    method: POST
    data_selector: valid_functions
    params: {}
- name: LoaderCreateJavaScriptTranslationData
  endpoint:
    path: /LoaderCreateJavaScriptTranslationData
    method: POST
    data_selector: valid_functions
    params: {}
- name: SkinValidate
  endpoint:
    path: /SkinValidate
    method: POST
    data_selector: valid_functions
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: tickets
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: articles
- name: Output
  endpoint:
    path: /Output
    method: POST
    data_selector: HTML
    params:
      TemplateFile: AdminLog.tt
      Data: '%Param'
- name: AddJSOnDocumentComplete
  endpoint:
    path: /AddJSOnDocumentComplete
    method: POST
    data_selector: Code
    params:
      Code: $MyCode
- name: AddJSData
  endpoint:
    path: /AddJSData
    method: POST
    data_selector: Key
    params:
      Key: Key1
      Value: '{}'
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: Run
  endpoint:
    path: /Run
    method: POST
    data_selector: Result
    params:
      User: tt
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: SettingRender
  endpoint:
    path: /Kernel/Output/HTML/SysConfig/SettingRender
    method: POST
    data_selector: HTMLStr
    params: {}
- name: SettingAddItem
  endpoint:
    path: /Kernel/Output/HTML/SysConfig/SettingAddItem
    method: POST
    data_selector: Result
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: PasswordChange
  endpoint:
    path: /Run
    method: POST
    data_selector: Result
    params:
      User: tt
- name: filters
  endpoint:
    path: /filters
    method: GET
    data_selector: filters
    params: {}
- name: functions
  endpoint:
    path: /functions
    method: GET
    data_selector: functions
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: filters
  endpoint:
    path: /filters
    method: GET
    data_selector: filters
    params: {}
- name: functions
  endpoint:
    path: /functions
    method: GET
    data_selector: functions
    params: {}
- name: CheckSessionID
  endpoint:
    path: /CheckSessionID
    method: POST
    data_selector: returns
    params: {}
- name: CheckAgentSessionLimitPriorWarning
  endpoint:
    path: /CheckAgentSessionLimitPriorWarning
    method: GET
    data_selector: returns
    params: {}
- name: SessionIDErrorMessage
  endpoint:
    path: /SessionIDErrorMessage
    method: GET
    data_selector: returns
    params: {}
- name: GetSessionIDData
  endpoint:
    path: /GetSessionIDData
    method: POST
    data_selector: returns
    params: {}
- name: CreateSessionID
  endpoint:
    path: /CreateSessionID
    method: POST
    data_selector: returns
    params: {}
- name: RemoveSessionID
  endpoint:
    path: /RemoveSessionID
    method: DELETE
    data_selector: returns
    params: {}
- name: RemoveSessionByUser
  endpoint:
    path: /RemoveSessionByUser
    method: DELETE
    data_selector: returns
    params: {}
- name: UpdateSessionID
  endpoint:
    path: /UpdateSessionID
    method: PUT
    data_selector: returns
    params: {}
- name: GetExpiredSessionIDs
  endpoint:
    path: /GetExpiredSessionIDs
    method: GET
    data_selector: returns
    params: {}
- name: GetAllSessionIDs
  endpoint:
    path: /GetAllSessionIDs
    method: GET
    data_selector: returns
    params: {}
- name: GetActiveSessions
  endpoint:
    path: /GetActiveSessions
    method: GET
    data_selector: returns
    params: {}
- name: CleanUp
  endpoint:
    path: /CleanUp
    method: POST
    data_selector: returns
    params: {}
- name: AutoResponseAdd
  endpoint:
    path: /AutoResponseAdd
    method: POST
    data_selector: attributes
- name: AutoResponseGet
  endpoint:
    path: /AutoResponseGet
    method: GET
    data_selector: attributes
- name: AutoResponseUpdate
  endpoint:
    path: /AutoResponseUpdate
    method: POST
    data_selector: attributes
- name: AutoResponseGetByTypeQueueID
  endpoint:
    path: /AutoResponseGetByTypeQueueID
    method: GET
    data_selector: attributes
- name: AutoResponseWithoutQueue
  endpoint:
    path: /AutoResponseWithoutQueue
    method: GET
    data_selector: attributes
- name: AutoResponseList
  endpoint:
    path: /AutoResponseList
    method: GET
    data_selector: attributes
- name: AutoResponseTypeList
  endpoint:
    path: /AutoResponseTypeList
    method: GET
    data_selector: attributes
- name: AutoResponseQueue
  endpoint:
    path: /AutoResponseQueue
    method: POST
    data_selector: attributes
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: BrowserTrustAdd
  endpoint:
    path: /BrowserTrustAdd
    method: POST
    data_selector: BrowserTrustID
    params:
      UserType: agent
      UserID: 2
      UUIDFingerprint: ba77134f-a136-4702-bd83-d3dfea0ce1f7
- name: BrowserTrustGet
  endpoint:
    path: /BrowserTrustGet
    method: GET
    data_selector: BrowserTrust
    params:
      BrowserTrustID: 1
      UserType: agent
      UserID: 2
      UUIDFingerprint: ba77134f-a136-4702-bd83-d3dfea0ce1f7
- name: BrowserTrustCleanupForUser
  endpoint:
    path: /BrowserTrustCleanupForUser
    method: POST
    data_selector: Success
    params:
      UserType: agent
      UserID: 2
      UUIDFingerprint: ba77134f-a136-4702-bd83-d3dfea0ce1f7
- name: BrowserTrustCleanupExpired
  endpoint:
    path: /BrowserTrustCleanupExpired
    method: POST
    data_selector: Success
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: Array2CSV
  endpoint:
    path: /Array2CSV
    method: POST
    data_selector: CSV
    params: {}
- name: CSV2Array
  endpoint:
    path: /CSV2Array
    method: POST
    data_selector: Array
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Cache
  endpoint:
    path: /Kernel/System/Cache
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: TicketPreCalc
  endpoint:
    method: GET
- name: DynamicFieldPreCalc
  endpoint:
    method: GET
- name: ACLAdd
  endpoint:
    path: /ACLAdd
    method: POST
    data_selector: returns
    params:
      Name: NameOfACL
      ValidID: 1
      UserID: 123
- name: ACLDelete
  endpoint:
    path: /ACLDelete
    method: DELETE
    data_selector: returns
    params:
      ID: 123
      UserID: 123
- name: ACLGet
  endpoint:
    path: /ACLGet
    method: GET
    data_selector: returns
    params:
      ID: 123
      UserID: 123
- name: ACLUpdate
  endpoint:
    path: /ACLUpdate
    method: PUT
    data_selector: returns
    params:
      ID: 123
      Name: NameOfACL
      ValidID: ValidID
      UserID: 123
- name: ACLList
  endpoint:
    path: /ACLList
    method: GET
    data_selector: returns
    params:
      UserID: 1
- name: ACLListGet
  endpoint:
    path: /ACLListGet
    method: GET
    data_selector: returns
    params:
      UserID: 1
- name: ACLDump
  endpoint:
    path: /ACLDump
    method: GET
    data_selector: returns
    params: {}
- name: ACLDeploy
  endpoint:
    path: /ACLDeploy
    method: POST
    data_selector: returns
    params:
      UserID: 123
- name: ACLDeploymentGetLast
  endpoint:
    path: /ACLDeploymentGetLast
    method: GET
    data_selector: returns
    params: {}
- name: ACLDeploymentListGet
  endpoint:
    path: /ACLDeploymentListGet
    method: GET
    data_selector: returns
    params: {}
- name: ACLDeploymentGet
  endpoint:
    path: /ACLDeploymentGet
    method: GET
    data_selector: returns
    params:
      DeploymentID: 123
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: calendar_create
  endpoint:
    path: /calendar/create
    method: POST
    data_selector: Calendar
    params:
      CalendarName: Meetings
      GroupID: 3
      Color: '#FF7700'
      UserID: 4
- name: calendar_get
  endpoint:
    path: /calendar/get
    method: GET
    data_selector: Calendar
    params:
      CalendarName: Meetings
- name: calendar_list
  endpoint:
    path: /calendar/list
    method: GET
    data_selector: Calendars
    params:
      UserID: 4
      Permission: rw
      ValidID: 1
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: AppointmentCreate
  endpoint:
    path: /create
    method: POST
    data_selector: AppointmentID
- name: AppointmentList
  endpoint:
    path: /list
    method: GET
    data_selector: Appointments
- name: AppointmentGet
  endpoint:
    path: /get
    method: GET
    data_selector: Appointment
- name: AppointmentUpdate
  endpoint:
    path: /update
    method: POST
    data_selector: Success
- name: AppointmentDelete
  endpoint:
    path: /delete
    method: DELETE
    data_selector: Success
- name: AppointmentDeleteOccurrence
  endpoint:
    path: /delete_occurrence
    method: DELETE
    data_selector: Success
- name: AppointmentDays
  endpoint:
    path: /days
    method: GET
    data_selector: AppointmentDays
- name: AppointmentUpcomingGet
  endpoint:
    path: /upcoming
    method: GET
    data_selector: UpcomingAppointments
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: tickets
- name: article
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: articles
- name: AppointmentSearchForCustomerUser
  endpoint:
    method: GET
- name: AppointmentGetForCustomerUser
  endpoint:
    method: GET
- name: SendNotification
  endpoint:
    path: /SendNotification
    method: POST
    data_selector: Success
- name: GetTransportRecipients
  endpoint:
    path: /GetTransportRecipients
    method: GET
    data_selector: TransportRecipients
- name: TransportSettingsDisplayGet
  endpoint:
    path: /TransportSettingsDisplayGet
    method: GET
    data_selector: HTMLOutput
- name: TransportParamSettingsGet
  endpoint:
    path: /TransportParamSettingsGet
    method: POST
    data_selector: Success
- name: IsUsable
  endpoint:
    path: /IsUsable
    method: GET
    data_selector: Success
- name: GetTransportEventData
  endpoint:
    path: /GetTransportEventData
    method: GET
    data_selector: EventData
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: access_token
  endpoint:
    path: /access_tokens
    method: GET
    data_selector: tokens
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: notification_transport
  endpoint:
    path: /Kernel/System/Ticket/Event/NotificationEvent/Transport/Email
    method: GET
- name: Export
  endpoint:
    path: /Export
    method: POST
    data_selector: iCalendarString
    params:
      CalendarID: 1
      UserID: 1
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Import
  endpoint:
    path: /Import
    method: POST
    data_selector: appointments
    params:
      CalendarID: '123'
      UserID: '1'
      UpdateExisting: '0'
      UntilLimit: '2017-01-01 00:00:00'
- name: PluginList
  endpoint:
    path: /PluginList
    method: GET
    data_selector: hash
- name: PluginKeys
  endpoint:
    path: /PluginKeys
    method: GET
    data_selector: hash
- name: PluginLinkAdd
  endpoint:
    path: /PluginLinkAdd
    method: POST
    data_selector: success
- name: PluginLinkList
  endpoint:
    path: /PluginLinkList
    method: GET
    data_selector: list
- name: PluginLinkListData
  endpoint:
    path: /PluginLinkListData
    method: GET
    data_selector: list
- name: PluginLinkDelete
  endpoint:
    path: /PluginLinkDelete
    method: DELETE
    data_selector: success
- name: PluginSearch
  endpoint:
    path: /PluginSearch
    method: GET
    data_selector: result
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: Run
  endpoint:
    path: /Run
    method: POST
    data_selector: Module
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: statistics_reports
  endpoint:
    path: /api/statistics_reports
    method: GET
    data_selector: records
    params: {}
- name: LinkAdd
  endpoint:
    path: /LinkAdd
    method: POST
    data_selector: LinkID
    params: {}
- name: LinkList
  endpoint:
    path: /LinkList
    method: GET
    data_selector: LinkList
    params: {}
- name: LinkListData
  endpoint:
    path: /LinkListData
    method: GET
    data_selector: LinkListData
    params: {}
- name: Search
  endpoint:
    path: /Search
    method: GET
    data_selector: ResultList
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
- name: TeamList
  endpoint:
    path: /TeamList
    method: GET
    data_selector: List
    params: {}
- name: TeamGet
  endpoint:
    path: /TeamGet
    method: GET
    data_selector: Team
    params:
      TeamID: required
      Name: required
      UserID: required
- name: TeamAdd
  endpoint:
    path: /TeamAdd
    method: POST
    data_selector: 'True'
    params:
      Name: required
      GroupID: required
      Comment: optional
      ValidID: required
      UserID: required
- name: TeamUpdate
  endpoint:
    path: /TeamUpdate
    method: PUT
    data_selector: 'True'
    params:
      TeamID: required
      Name: required
      GroupID: required
      Comment: optional
      ValidID: required
      UserID: required
- name: TeamImport
  endpoint:
    path: /TeamImport
    method: POST
    data_selector: 'True'
    params:
      TeamData: required
      OverwriteExistingEntities: optional
      UserID: required
- name: AllowedTeamList
  endpoint:
    path: /AllowedTeamList
    method: GET
    data_selector: List
    params:
      UserID: required
      Valid: optional
      PreventEmpty: optional
- name: TeamUserAdd
  endpoint:
    path: /TeamUserAdd
    method: POST
    data_selector: 'True'
    params:
      TeamID: required
      TeamUserID: required
      UserID: required
- name: TeamUserRemove
  endpoint:
    path: /TeamUserRemove
    method: DELETE
    data_selector: 'True'
    params:
      TeamID: required
      TeamUserID: required
      UserID: required
- name: TeamUserList
  endpoint:
    path: /TeamUserList
    method: GET
    data_selector: List
    params:
      TeamID: required
      UserID: required
      Valid: optional
- name: UserTeamList
  endpoint:
    path: /UserTeamList
    method: GET
    data_selector: List
    params:
      UserID: required
- name: LastLoginSet
  endpoint:
    path: /perl-api/kernel-system-auth-postauth-lastloginset-pm
    method: POST
- name: dynamic_field
  endpoint:
    path: /Kernel/System/Calendar/Ticket/DynamicField
    method: GET
    data_selector: records
- name: EscalationTime
  endpoint:
    path: /kernel/system/calendar/ticket/escalationtime
    method: GET
    data_selector: EscalationTime appointment type
    params: {}
- name: PasswordChange
  endpoint:
    path: /Run
    method: POST
    data_selector: Result.Config
    params:
      User: tt
- name: PendingTime
  endpoint:
    path: /Kernel/System/Calendar/Ticket/PendingTime
    method: GET
    data_selector: PendingTime
    params: {}
- name: Run
  endpoint:
    path: /Run
    method: POST
    data_selector: Result
    params: {}
- name: NotificationEvent
  endpoint:
    path: /NotificationEvent
    method: POST
    data_selector: '%NotificationEvent'
    params: {}
- name: ChatAdd
  endpoint:
    path: /ChatAdd
    method: POST
    data_selector: ChatID
    params: {}
- name: ChatUpdate
  endpoint:
    path: /ChatUpdate
    method: PUT
    data_selector: Success
    params: {}
- name: ChatGet
  endpoint:
    path: /ChatGet
    method: GET
    data_selector: Chat
    params: {}
- name: ChatList
  endpoint:
    path: /ChatList
    method: GET
    data_selector: Chats
    params: {}
- name: CustomerIDGet
  endpoint:
    path: /CustomerIDGet
    method: GET
    data_selector: CustomerUserID
    params: {}
- name: ChatMessageAdd
  endpoint:
    path: /ChatMessageAdd
    method: POST
    data_selector: Success
    params: {}
- name: ChatMessageList
  endpoint:
    path: /ChatMessageList
    method: GET
    data_selector: ChatMessages
    params: {}
- name: OnlineUserList
  endpoint:
    path: /OnlineUserList
    method: GET
    data_selector: OnlineUsers
    params: {}
- name: OnlineUsers
  endpoint:
    path: /AvailableUsersGet
    method: GET
    data_selector: OnlineUsers
    params:
      Key: ExternalChannels
- name: ChatFlagSet
  endpoint:
    path: /ChatFlagSet
    method: POST
    data_selector: Success
    params:
      ChatID: 123
      Key: Seen
      Value: 1
      UserID: 123
- name: ChatFlagDelete
  endpoint:
    path: /ChatFlagDelete
    method: DELETE
    data_selector: Success
    params:
      ChatID: 123
      Key: Seen
      UserID: 123
- name: ChatFlagGet
  endpoint:
    path: /ChatFlagGet
    method: GET
    data_selector: Flags
    params:
      ChatID: 123
      UserID: 123
- name: CheckSessionID
  endpoint:
    path: /CheckSessionID
    method: POST
    data_selector: Ok
- name: CheckAgentSessionLimitPriorWarning
  endpoint:
    path: /CheckAgentSessionLimitPriorWarning
    method: GET
    data_selector: PriorMessage
- name: SessionIDErrorMessage
  endpoint:
    path: /SessionIDErrorMessage
    method: GET
    data_selector: Message
- name: GetSessionIDData
  endpoint:
    path: /GetSessionIDData
    method: GET
    data_selector: Data
- name: CreateSessionID
  endpoint:
    path: /CreateSessionID
    method: POST
    data_selector: SessionID
- name: RemoveSessionID
  endpoint:
    path: /RemoveSessionID
    method: DELETE
    data_selector: deleted
- name: RemoveSessionByUser
  endpoint:
    path: /RemoveSessionByUser
    method: DELETE
    data_selector: deleted
- name: UpdateSessionID
  endpoint:
    path: /UpdateSessionID
    method: PATCH
    data_selector: updated
- name: GetExpiredSessionIDs
  endpoint:
    path: /GetExpiredSessionIDs
    method: GET
    data_selector: Sessions
- name: GetAllSessionIDs
  endpoint:
    path: /GetAllSessionIDs
    method: GET
    data_selector: Sessions
- name: GetActiveSessions
  endpoint:
    path: /GetActiveSessions
    method: GET
    data_selector: Result
- name: CleanUp
  endpoint:
    path: /CleanUp
    method: POST
    data_selector: cleaned
- name: ChatChannel
  endpoint:
    path: /ChatChannel
    method: GET
    data_selector: ChatChannel
    params: {}
- name: AutoResponseAdd
  endpoint:
    path: /AutoResponseAdd
    method: POST
    data_selector: attributes
- name: AutoResponseGet
  endpoint:
    path: /AutoResponseGet
    method: GET
    data_selector: Data
    params:
      ID: '123'
- name: AutoResponseUpdate
  endpoint:
    path: /AutoResponseUpdate
    method: PUT
    data_selector: attributes
- name: AutoResponseGetByTypeQueueID
  endpoint:
    path: /AutoResponseGetByTypeQueueID
    method: GET
    data_selector: QueueAddressData
    params:
      QueueID: 3
      Type: auto reply/new ticket
- name: AutoResponseWithoutQueue
  endpoint:
    path: /AutoResponseWithoutQueue
    method: GET
    data_selector: AutoResponseWithoutQueue
- name: AutoResponseList
  endpoint:
    path: /AutoResponseList
    method: GET
    data_selector: AutoResponse
    params:
      Valid: 1
      TypeID: 1
- name: AutoResponseTypeList
  endpoint:
    path: /AutoResponseTypeList
    method: GET
    data_selector: AutoResponseType
    params:
      Valid: 1
- name: AutoResponseQueue
  endpoint:
    path: /AutoResponseQueue
    method: POST
    data_selector: AutoResponseIDs
- name: BrowserTrustAdd
  endpoint:
    path: /BrowserTrustAdd
    method: POST
    data_selector: BrowserTrustID
    params:
      UserType: agent
      UserID: 2
      UUIDFingerprint: ba77134f-a136-4702-bd83-d3dfea0ce1f7
- name: BrowserTrustGet
  endpoint:
    path: /BrowserTrustGet
    method: GET
    data_selector: BrowserTrust
    params:
      BrowserTrustID: 1
      UserType: agent
      UserID: 2
      UUIDFingerprint: ba77134f-a136-4702-bd83-d3dfea0ce1f7
- name: BrowserTrustCleanupForUser
  endpoint:
    path: /BrowserTrustCleanupForUser
    method: POST
    data_selector: Success
    params:
      UserType: agent
      UserID: 2
      UUIDFingerprint: ba77134f-a136-4702-bd83-d3dfea0ce1f7
- name: BrowserTrustCleanupExpired
  endpoint:
    path: /BrowserTrustCleanupExpired
    method: POST
    data_selector: Success
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: data
- name: PackageList
  endpoint:
    path: /_PackageList
    method: GET
    data_selector: PackagesByCommand
    params: {}
- name: Array2CSV
  endpoint:
    path: /Array2CSV
    method: POST
    data_selector: CSV
    params: {}
- name: CSV2Array
  endpoint:
    path: /CSV2Array
    method: POST
    data_selector: Array
    params: {}
- name: CheckError
  endpoint:
    path: /CheckError
    method: GET
    data_selector: error
- name: CheckErrorType
  endpoint:
    path: /CheckErrorType
    method: GET
    data_selector: errorType
- name: CheckEmail
  endpoint:
    path: /CheckEmail
    method: GET
    data_selector: valid
- name: StringClean
  endpoint:
    path: /StringClean
    method: GET
    data_selector: cleanedString
- name: CreditCardClean
  endpoint:
    path: /CreditCardClean
    method: GET
    data_selector: cleanedString
- name: cache
  endpoint:
    path: /kernel/system/cache
    method: GET
    data_selector: records
    params: {}
- name: CloudServiceAdd
  endpoint:
    path: /CloudServiceAdd
    method: POST
    data_selector: id
    params: {}
- name: CloudServiceGet
  endpoint:
    path: /CloudServiceGet
    method: GET
    data_selector: CloudService
    params: {}
- name: CloudServiceUpdate
  endpoint:
    path: /CloudServiceUpdate
    method: PUT
    data_selector: success
    params: {}
- name: CloudServiceDelete
  endpoint:
    path: /CloudServiceDelete
    method: DELETE
    data_selector: success
    params: {}
- name: CloudServiceList
  endpoint:
    path: /CloudServiceList
    method: GET
    data_selector: list
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: Request
  endpoint:
    path: /Request
    method: POST
    data_selector: Results
    params:
      Timeout: 15
      Proxy: proxy.example.com
- name: OperationResultGet
  endpoint:
    path: /OperationResultGet
    method: POST
    data_selector: Results
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: SendSMS
  endpoint:
    path: /SendSMS
    method: POST
    data_selector: Data
    params: {}
- name: HealthCheck
  endpoint:
    path: /HealthCheck
    method: GET
    data_selector: Data
    params: {}
- name: IsActive
  endpoint:
    path: /IsActive
    method: GET
    data_selector: Result
    params: {}
- name: CalendarCreate
  endpoint:
    path: /CalendarCreate
    method: POST
    data_selector: Calendar
    params:
      CalendarName: Meetings
      GroupID: 3
      Color: '#FF7700'
      UserID: 4
      ValidID: 1
- name: CalendarGet
  endpoint:
    path: /CalendarGet
    method: GET
    data_selector: Calendar
    params:
      CalendarName: Meetings
- name: CalendarList
  endpoint:
    path: /CalendarList
    method: GET
    data_selector: Result
    params:
      UserID: 4
      Permission: rw
      ValidID: 1
      Valid: 1
- name: CalendarUpdate
  endpoint:
    path: /CalendarUpdate
    method: PUT
    data_selector: Success
    params:
      CalendarID: 1
      GroupID: 2
      CalendarName: Meetings
      Color: '#FF9900'
      UserID: 4
      ValidID: 1
- name: CalendarImport
  endpoint:
    path: /CalendarImport
    method: POST
    data_selector: Success
    params:
      UserID: 1
      OverwriteExistingEntities: 0
- name: CalendarExport
  endpoint:
    path: /CalendarExport
    method: GET
    data_selector: Data
    params:
      CalendarID: 2
      UserID: 1
- name: CalendarPermissionGet
  endpoint:
    path: /CalendarPermissionGet
    method: GET
    data_selector: Permission
    params:
      CalendarID: 1
      UserID: 4
- name: TicketAppointmentProcessTicket
  endpoint:
    path: /TicketAppointmentProcessTicket
    method: POST
    data_selector: No Return
    params:
      TicketID: 1
- name: TicketAppointmentProcessCalendar
  endpoint:
    path: /TicketAppointmentProcessCalendar
    method: POST
    data_selector: Result
    params:
      CalendarID: 1
- name: TicketAppointmentProcessRule
  endpoint:
    path: /TicketAppointmentProcessRule
    method: POST
    data_selector: Success
    params:
      CalendarID: 1
      TicketID: 1
- name: TicketAppointmentUpdateTicket
  endpoint:
    path: /TicketAppointmentUpdateTicket
    method: PUT
    data_selector: No Return
    params:
      AppointmentID: 1
      TicketID: 1
- name: TicketAppointmentTicketID
  endpoint:
    path: /TicketAppointmentTicketID
    method: GET
    data_selector: TicketID
    params:
      AppointmentID: 1
- name: TicketAppointmentRuleIDsGet
  endpoint:
    path: /TicketAppointmentRuleIDsGet
    method: GET
    data_selector: RuleIDs
    params:
      CalendarID: 1
- name: TicketAppointmentRuleGet
  endpoint:
    path: /TicketAppointmentRuleGet
    method: GET
    data_selector: Rule
    params:
      CalendarID: 1
      RuleID: 9bb20ea035e7a9930652a9d82d00c725
- name: TicketAppointmentTypesGet
  endpoint:
    path: /TicketAppointmentTypesGet
    method: GET
    data_selector: TicketAppointmentTypes
    params: {}
- name: TicketAppointmentDelete
  endpoint:
    path: /TicketAppointmentDelete
    method: DELETE
    data_selector: Success
    params:
      CalendarID: 1
      RuleID: 9bb20ea035e7a9930652a9d82d00c725
- name: GetAccessToken
  endpoint:
    path: /GetAccessToken
    method: GET
    data_selector: Token
    params:
      CalendarID: 1
      UserLogin: agent-1
- name: GetTextColor
  endpoint:
    path: /GetTextColor
    method: GET
    data_selector: BestTextColor
    params:
      Background: '#FFF'
- name: ChannelAdd
  endpoint:
    path: /ChannelAdd
    method: POST
    data_selector: ChannelID
    params:
      ChannelName: Email
      Module: Kernel::System::CommunicationChannel::Internal
      PackageName: Framework
      UserID: 1
- name: ChannelGet
  endpoint:
    path: /ChannelGet
    method: GET
    data_selector: CommunicationChannel
    params: {}
- name: ChannelUpdate
  endpoint:
    path: /ChannelUpdate
    method: POST
    data_selector: Success
    params:
      ChannelID: '1'
      ChannelName: Email
      UserID: 1
- name: ChannelList
  endpoint:
    path: /ChannelList
    method: GET
    data_selector: CommunicationChannels
    params: {}
- name: ChannelSync
  endpoint:
    path: /ChannelSync
    method: POST
    data_selector: Result
    params:
      UserID: 1
- name: ChannelDrop
  endpoint:
    path: /ChannelDrop
    method: POST
    data_selector: Success
    params:
      ChannelID: '1'
- name: ChannelDelete
  endpoint:
    path: /ChannelDelete
    method: POST
    data_selector: Success
    params:
      ChannelID: '1'
- name: AppointmentCreate
  endpoint:
    path: /create
    method: POST
    data_selector: success
    params: {}
- name: AppointmentList
  endpoint:
    path: /list
    method: GET
    data_selector: appointments
    params:
      CalendarID: 1
- name: AppointmentGet
  endpoint:
    path: /get
    method: GET
    data_selector: appointment
    params:
      AppointmentID: 1
- name: AppointmentUpdate
  endpoint:
    path: /update
    method: POST
    data_selector: success
    params:
      AppointmentID: 2
      CalendarID: 1
- name: AppointmentDelete
  endpoint:
    path: /delete
    method: DELETE
    data_selector: success
    params:
      AppointmentID: 1
- name: AppointmentDeleteOccurrence
  endpoint:
    path: /delete-occurrence
    method: DELETE
    data_selector: success
    params:
      UniqueID: 20160101T160000-71E386@localhost
      RecurrenceID: '2016-01-10 00:00:00'
- name: GetUniqueID
  endpoint:
    path: /get-unique-id
    method: GET
    data_selector: unique_id
    params:
      CalendarID: 1
      StartTime: '2016-01-01 00:00:00'
- name: AppointmentUpcomingGet
  endpoint:
    path: /upcoming
    method: GET
    data_selector: upcoming_appointments
    params:
      Timestamp: '2016-08-02 03:59:00'
- name: article_data_tables
  endpoint:
    path: /article_data_tables
    method: GET
    data_selector: article_data_tables
- name: article_data_article_id_field
  endpoint:
    path: /article_data_article_id_field
    method: GET
    data_selector: article_id
- name: article_backend
  endpoint:
    path: /article_backend
    method: GET
    data_selector: article_backend
- name: package_name
  endpoint:
    path: /package_name
    method: GET
    data_selector: package_name
- name: AppointmentSearchForCustomerUser
  endpoint:
    path: /AppointmentSearchForCustomerUser
    method: GET
    data_selector: List
    params:
      CustomerUserLogin: '...'
      UserID: '...'
      Group: All
      DynamicFields: '...'
- name: AppointmentGetForCustomerUser
  endpoint:
    path: /AppointmentGetForCustomerUser
    method: GET
    data_selector: Appointment
    params:
      AppointmentID: 1
      DynamicFields: 0
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
- name: article_data_otrs_chat
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: statistics
  endpoint:
    path: /api/statistics
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: SendNotification
  endpoint:
    path: /SendNotification
    method: POST
    data_selector: Success
- name: GetTransportRecipients
  endpoint:
    path: /GetTransportRecipients
    method: GET
    data_selector: TransportRecipients
- name: TransportSettingsDisplayGet
  endpoint:
    path: /TransportSettingsDisplayGet
    method: GET
    data_selector: HTMLOutput
- name: TransportParamSettingsGet
  endpoint:
    path: /TransportParamSettingsGet
    method: POST
    data_selector: Success
- name: IsUsable
  endpoint:
    path: /IsUsable
    method: GET
    data_selector: Success
- name: GetTransportEventData
  endpoint:
    path: /GetTransportEventData
    method: GET
    data_selector: EventData
- name: article_data_mime
  endpoint:
    path: /article_data_mime
    method: GET
    data_selector: records
- name: article_data_mime_plain
  endpoint:
    path: /article_data_mime_plain
    method: GET
    data_selector: records
- name: article_data_mime_attachment
  endpoint:
    path: /article_data_mime_attachment
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: tickets
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: articles
- name: article_data_tables
  endpoint:
    path: /article_data_tables
    method: GET
    data_selector: article_tables
    params: {}
- name: article_data_article_id_field
  endpoint:
    path: /article_data_article_id_field
    method: GET
    data_selector: article_id_field
    params: {}
- name: article_backend
  endpoint:
    path: /article_backend
    method: GET
    data_selector: article_backend
    params: {}
- name: package_name
  endpoint:
    path: /package_name
    method: GET
    data_selector: package_name
    params: {}
- name: article_data_tables
  endpoint:
    path: /article_data_tables
    method: GET
    data_selector: article_tables
- name: article_id_field
  endpoint:
    path: /article_id_field
    method: GET
    data_selector: article_id
- name: article_backend
  endpoint:
    path: /article_backend
    method: GET
    data_selector: article_backend
- name: package_name
  endpoint:
    path: /package_name
    method: GET
    data_selector: package_name
- name: tickets
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /services/data/vXX.X/sobjects/Article
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: notification_transport
  endpoint:
    path: /Kernel/System/Calendar/Event/Transport/SMS
    method: POST
- name: article_data_otrs_sms
  endpoint:
    path: /article_data_otrs_sms
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: Export
  endpoint:
    path: /Export
    method: POST
    data_selector: iCalendarString
    params:
      CalendarID: 1
      UserID: 1
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: tickets
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: articles
- name: Communication
  endpoint:
    path: /Communication
    method: GET
    data_selector: CommunicationList
    params: {}
- name: ObjectLog
  endpoint:
    path: /ObjectLog
    method: GET
    data_selector: ObjectLogList
    params: {}
- name: Import
  endpoint:
    path: /Import
    method: POST
    data_selector: appointments
    params:
      CalendarID: 123
      ICal: iCal string
      UserID: 1
      UpdateExisting: 0
      UntilLimit: '2017-01-01 00:00:00'
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: PluginList
  endpoint:
    path: /PluginList
    method: GET
    data_selector: hash
    params: {}
- name: PluginKeys
  endpoint:
    path: /PluginKeys
    method: GET
    data_selector: hash
    params: {}
- name: PluginLinkAdd
  endpoint:
    path: /PluginLinkAdd
    method: POST
    data_selector: success
    params:
      AppointmentID: '1'
      PluginKey: Ticket
      PluginData: '42'
      UserID: '1'
- name: PluginLinkList
  endpoint:
    path: /PluginLinkList
    method: GET
    data_selector: list
    params:
      AppointmentID: '1'
      PluginKey: Ticket
      UserID: '1'
- name: PluginLinkListData
  endpoint:
    path: /PluginLinkListData
    method: GET
    data_selector: listData
    params:
      AppointmentID: '1'
      PluginKey: Ticket
      UserID: '1'
- name: PluginLinkDelete
  endpoint:
    path: /PluginLinkDelete
    method: DELETE
    data_selector: success
    params:
      AppointmentID: '1'
      UserID: '1'
- name: PluginSearch
  endpoint:
    path: /PluginSearch
    method: GET
    data_selector: resultList
    params:
      PluginKey: required
      Search: required
      ObjectID: required
      UserID: required
- name: tickets
  endpoint:
    path: /services/data/vX.X/sobjects/Ticket
    method: GET
    data_selector: records
- name: customers
  endpoint:
    path: /services/data/vX.X/sobjects/Customer
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: statistics
  endpoint:
    path: /api/v1/statistics
    method: GET
    data_selector: records
- name: CompetenceLevelList
  endpoint:
    path: /CompetenceLevelList
    method: GET
    data_selector: hash
    params:
      Valid: 0
- name: CompetenceLevelGet
  endpoint:
    path: /CompetenceLevelGet
    method: GET
    data_selector: hash
    params:
      CompetenceLevelID: 123
      UserID: 1
- name: CompetenceLevelAdd
  endpoint:
    path: /CompetenceLevelAdd
    method: POST
    data_selector: boolean
    params:
      Name: Prio
      Level: 3
      ValidID: 1
      UserID: 1
- name: CompetenceLevelUpdate
  endpoint:
    path: /CompetenceLevelUpdate
    method: POST
    data_selector: boolean
    params:
      CompetenceLevelID: 123
      Name: New Prio
      Level: 2
      ValidID: 1
      UserID: 1
- name: CompetenceLevelLookup
  endpoint:
    path: /CompetenceLevelLookup
    method: GET
    data_selector: id_or_name
    params:
      CompetenceLevel: 3 normal
- name: LinkAdd
  endpoint:
    path: /LinkAdd
    method: POST
    data_selector: LinkID
    params: {}
- name: LinkList
  endpoint:
    path: /LinkList
    method: GET
    data_selector: LinkList
    params: {}
- name: LinkListData
  endpoint:
    path: /LinkListData
    method: GET
    data_selector: LinkListData
    params: {}
- name: Search
  endpoint:
    path: /Search
    method: GET
    data_selector: ResultList
    params: {}
- name: tickets
  endpoint:
    path: /services/data/vXX.X/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /services/data/vXX.X/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: List
  endpoint:
    path: List
    method: GET
    data_selector: records
- name: Get
  endpoint:
    path: Get
    method: GET
    data_selector: records
- name: UpdateAttribute
  endpoint:
    path: UpdateAttribute
    method: POST
    data_selector: records
- name: Export
  endpoint:
    path: Export
    method: GET
    data_selector: records
- name: ImportRecord
  endpoint:
    path: ImportRecord
    method: POST
    data_selector: records
- name: DeleteRecord
  endpoint:
    path: DeleteRecord
    method: DELETE
    data_selector: records
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: TeamList
  endpoint:
    path: /TeamList
    method: GET
    data_selector: List
    params: {}
- name: TeamGet
  endpoint:
    path: /TeamGet
    method: GET
    data_selector: Team
    params:
      TeamID: required
      Name: required
      UserID: required
- name: TeamAdd
  endpoint:
    path: /TeamAdd
    method: POST
    data_selector: 'True'
    params:
      Name: required
      GroupID: required
      Comment: optional
      ValidID: required
      UserID: required
- name: TeamUpdate
  endpoint:
    path: /TeamUpdate
    method: POST
    data_selector: 'True'
    params:
      TeamID: required
      Name: required
      GroupID: required
      Comment: optional
      ValidID: required
      UserID: required
- name: TeamImport
  endpoint:
    path: /TeamImport
    method: POST
    data_selector: 'True'
    params:
      TeamData: required
      OverwriteExistingEntities: optional
      UserID: required
- name: AllowedTeamList
  endpoint:
    path: /AllowedTeamList
    method: GET
    data_selector: List
    params:
      UserID: required
      Valid: optional
      PreventEmpty: optional
- name: TeamUserAdd
  endpoint:
    path: /TeamUserAdd
    method: POST
    data_selector: 'True'
    params:
      TeamID: required
      TeamUserID: required
      UserID: required
- name: TeamUserRemove
  endpoint:
    path: /TeamUserRemove
    method: POST
    data_selector: 'True'
    params:
      TeamID: required
      TeamUserID: required
      UserID: required
- name: TeamUserList
  endpoint:
    path: /TeamUserList
    method: GET
    data_selector: List
    params:
      TeamID: required
      UserID: required
      Valid: optional
- name: UserTeamList
  endpoint:
    path: /UserTeamList
    method: GET
    data_selector: List
    params:
      UserID: required
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: statistics
  endpoint:
    path: /api/statistics
    method: GET
    data_selector: records
    params: {}
- name: DynamicField
  endpoint:
    path: /dynamic_field
    method: GET
    data_selector: DynamicField
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: EscalationTime
  endpoint:
    path: /Kernel/System/Calendar/Ticket/EscalationTime
    method: GET
    data_selector: EscalationTime
- name: PendingTime
  endpoint:
    path: /Kernel/System/Calendar/Ticket/PendingTime
    method: GET
    data_selector: PendingTime
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: Chat
  endpoint:
    path: /Chat
    method: GET
    data_selector: ChatList
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
    params: {}
- name: AvailableUsersGet
  endpoint:
    path: /AvailableUsersGet
    method: GET
    data_selector: Available
    params:
      Key: ExternalChannels
- name: IsChatAgentToAgent
  endpoint:
    path: /IsChatAgentToAgent
    method: GET
    data_selector: A2AChat
    params:
      ChatID: 1
- name: ChatFlagSet
  endpoint:
    path: /ChatFlagSet
    method: POST
    data_selector: Success
    params:
      ChatID: 123
      Key: Seen
      Value: 1
      UserID: 123
- name: ChatFlagDelete
  endpoint:
    path: /ChatFlagDelete
    method: DELETE
    data_selector: Success
    params:
      ChatID: 123
      UserID: 123
- name: ChatFlagGet
  endpoint:
    path: /ChatFlagGet
    method: GET
    data_selector: Flags
    params:
      ChatID: 123
      UserID: 123
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: data
    params: {}
- name: ChatChannelAdd
  endpoint:
    path: /ChatChannelAdd
    method: POST
    data_selector: ChatChannelID
    params:
      Name: request
      GroupID: 12
      UserID: 1
- name: ChatChannelUpdate
  endpoint:
    path: /ChatChannelUpdate
    method: POST
    data_selector: Status
    params:
      ChatChannelID: '{{ChatChannelID}}'
      Name: New channel
      GroupID: 12
      UserID: 1
- name: ChatChannelGet
  endpoint:
    path: /ChatChannelGet
    method: GET
    data_selector: ChatChannel
    params:
      ChatChannelID: '{{ID}}'
- name: ChatChannelsGet
  endpoint:
    path: /ChatChannelsGet
    method: GET
    data_selector: AllChatChannels
    params: {}
- name: ChatChannelDelete
  endpoint:
    path: /ChatChannelDelete
    method: DELETE
    data_selector: Response
    params:
      ChatChannelID: '{{ChatChannelID}}'
      UserID: 1
- name: CustomChatChannelsGet
  endpoint:
    path: /CustomChatChannelsGet
    method: GET
    data_selector: CustomChatChannels
    params:
      Key: ExternalChannels
      UserID: 123
- name: CustomChatChannelsSet
  endpoint:
    path: /CustomChatChannelsSet
    method: POST
    data_selector: Success
    params:
      Key: ExternalChannels
      UserChannels:
      - 1
      - 3
      - 5
      UserID: 123
- name: ChannelLookup
  endpoint:
    path: /ChannelLookup
    method: GET
    data_selector: Channel
    params:
      ChannelID: '{{ChannelID}}'
- name: ChatChannelQueuesGet
  endpoint:
    path: /ChatChannelQueuesGet
    method: GET
    data_selector: Relations
    params:
      CustomerInterface: 1
- name: DefaultChatChannelGet
  endpoint:
    path: /DefaultChatChannelGet
    method: GET
    data_selector: ChannelID
    params: {}
- name: DefaultChatChannelSet
  endpoint:
    path: /DefaultChatChannelSet
    method: POST
    data_selector: Success
    params:
      Channel: Channels
- name: CustomerUser
  endpoint:
    path: /kernel/system/configuration/entity/customeruser
    method: GET
    data_selector: User
    params: {}
- name: tickets
  endpoint:
    path: /services/data/vXX.X/tickets
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: articles
  endpoint:
    path: /services/data/vXX.X/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: data
    params: {}
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: article
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: PackageList
  endpoint:
    path: _PackageList
    method: GET
    data_selector: PackagesByCommand
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: statistics
  endpoint:
    path: /api/statistics
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: faq_ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: CheckError
  endpoint:
    path: /CheckError
    method: GET
    data_selector: error
    params: {}
- name: CheckErrorType
  endpoint:
    path: /CheckErrorType
    method: GET
    data_selector: error_type
    params: {}
- name: CheckEmail
  endpoint:
    path: /CheckEmail
    method: GET
    data_selector: valid
    params: {}
- name: StringClean
  endpoint:
    path: /StringClean
    method: GET
    data_selector: cleaned_string
    params: {}
- name: CreditCardClean
  endpoint:
    path: /CreditCardClean
    method: GET
    data_selector: cleaned_string
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: CloudServiceAdd
  endpoint:
    path: CloudServiceAdd
    method: POST
    data_selector: ID
    params: {}
- name: CloudServiceGet
  endpoint:
    path: CloudServiceGet
    method: GET
    data_selector: CloudService
    params: {}
- name: CloudServiceUpdate
  endpoint:
    path: CloudServiceUpdate
    method: PUT
    data_selector: Success
    params: {}
- name: CloudServiceDelete
  endpoint:
    path: CloudServiceDelete
    method: DELETE
    data_selector: Success
    params: {}
- name: CloudServiceList
  endpoint:
    path: CloudServiceList
    method: GET
    data_selector: List
    params: {}
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: data
- name: CloudServiceTest
  endpoint:
    path: /CloudServiceTest
    method: POST
    data_selector: Results.CloudServiceTest
- name: FeatureAddonManagement
  endpoint:
    path: /FeatureAddonManagement
    method: POST
    data_selector: Results.FeatureAddonManagement
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: SendSMS
  endpoint:
    path: /SendSMS
    method: POST
    data_selector: Data
    params:
      To: '+49172123456789'
      Text: Some Message
      IsFlashMessage: 1
- name: HealthCheck
  endpoint:
    path: /HealthCheck
    method: GET
    data_selector: Data
    params: {}
- name: IsActive
  endpoint:
    path: /IsActive
    method: GET
    data_selector: Data
    params: {}
- name: ChannelList
  endpoint:
    path: /ChannelList
    method: GET
    data_selector: CommunicationChannels
    params:
      ValidID: 1
- name: tickets
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /services/data/vXX.X/sobjects/Article
    method: GET
    data_selector: records
    params: {}
- name: article_data_mime
  endpoint:
    path: /article_data_mime
    method: GET
    data_selector: records
- name: article_data_mime_plain
  endpoint:
    path: /article_data_mime_plain
    method: GET
    data_selector: records
- name: article_data_mime_attachment
  endpoint:
    path: /article_data_mime_attachment
    method: GET
    data_selector: records
- name: article_data_otrs_chat
  endpoint:
    path: /article_data_otrs_chat
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: article_data_mime
  endpoint:
    path: /article_data_mime
    method: GET
    data_selector: article_data_mime
- name: article_data_mime_plain
  endpoint:
    path: /article_data_mime_plain
    method: GET
    data_selector: article_data_mime_plain
- name: article_data_mime_attachment
  endpoint:
    path: /article_data_mime_attachment
    method: GET
    data_selector: article_data_mime_attachment
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: results
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: results
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: article_data_mime
  endpoint:
    path: /ArticleDataTables
    method: GET
    data_selector: article_data_mime
- name: article_data_mime_plain
  endpoint:
    path: /ArticleDataTables
    method: GET
    data_selector: article_data_mime_plain
- name: article_data_mime_attachment
  endpoint:
    path: /ArticleDataTables
    method: GET
    data_selector: article_data_mime_attachment
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: article_data_mime
  endpoint:
    path: /article_data_mime
    method: GET
    data_selector: article_data_mime
- name: article_data_mime_plain
  endpoint:
    path: /article_data_mime_plain
    method: GET
    data_selector: article_data_mime_plain
- name: article_data_mime_attachment
  endpoint:
    path: /article_data_mime_attachment
    method: GET
    data_selector: article_data_mime_attachment
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: article_data_otrs_sms
  endpoint:
    path: /article_data_otrs_sms
    method: GET
    data_selector: article_data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: communication
  endpoint:
    path: /Communication
    method: GET
    data_selector: CommunicationList
    params: {}
- name: object_log
  endpoint:
    path: /ObjectLog
    method: GET
    data_selector: ObjectLogList
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /services/data/vXX.X/sobjects/Article
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
- name: articles
  endpoint:
    path: /api/articles
    method: GET
- name: CompetenceLevelList
  endpoint:
    path: /CompetenceLevelList
    method: GET
    data_selector: List
    params:
      Valid: 0
- name: CompetenceLevelGet
  endpoint:
    path: /CompetenceLevelGet
    method: GET
    data_selector: List
    params:
      CompetenceLevelID: 123
      UserID: 1
- name: CompetenceLevelAdd
  endpoint:
    path: /CompetenceLevelAdd
    method: POST
    data_selector: 'True'
    params:
      Name: Prio
      Level: 3
      ValidID: 1
      UserID: 1
- name: CompetenceLevelUpdate
  endpoint:
    path: /CompetenceLevelUpdate
    method: POST
    data_selector: 'True'
    params:
      CompetenceLevelID: 123
      Name: New Prio
      Level: 2
      ValidID: 1
      UserID: 1
- name: CompetenceLevelLookup
  endpoint:
    path: /CompetenceLevelLookup
    method: GET
    data_selector: CompetenceLevelID
    params:
      CompetenceLevel: 3 normal
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: List
  endpoint:
    path: _List
    method: GET
    data_selector: records
- name: Get
  endpoint:
    path: _Get
    method: GET
    data_selector: record
- name: UpdateAttribute
  endpoint:
    path: UpdateAttribute
    method: POST
    data_selector: result
- name: Export
  endpoint:
    path: Export
    method: GET
    data_selector: records
- name: ImportRecord
  endpoint:
    path: ImportRecord
    method: POST
    data_selector: result
- name: DeleteRecord
  endpoint:
    path: DeleteRecord
    method: DELETE
    data_selector: result
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: ActivityDialog
  endpoint:
    path: /perl-api/kernel-system-configuration-entity-activitydialog-pm
    method: GET
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /tickets
    method: GET
    data_selector: records
    params: {}
- name: statistics_reports
  endpoint:
    path: /statistics/reports
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: ticket
  endpoint:
    path: /api/ticket
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: users
  endpoint:
    path: /services/data/vXX.X/sobjects/User
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /advanced-escalations/agent/tickets
    method: GET
    data_selector: records
- name: statistics_and_reports
  endpoint:
    path: /advanced-escalations/agent/statistics-reports
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /services/data/vXX.X/sobjects/Article
    method: GET
    data_selector: records
    params: {}
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
- name: ticket
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /services/data/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /services/data/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: article
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: tickets
- name: statistics
  endpoint:
    path: /api/v1/statistics
    method: GET
    data_selector: statistics
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: records
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: article
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: ticket
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
- name: services
  endpoint:
    path: /api/v1/services
    method: GET
    data_selector: data
- name: ticket
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: tickets
  endpoint:
    path: /services/data/vXX.X/sobjects/Ticket
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /services/data/vXX.X/sobjects/Article
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: results
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: results
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: tickets
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: articles
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /api/v1/customers
    method: GET
    data_selector: data
    params: {}
- name: tickets
  endpoint:
    path: /tickets
    method: GET
- name: articles
  endpoint:
    path: /articles
    method: GET
- name: customers
  endpoint:
    path: /customers
    method: GET
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/v1/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
    params: {}
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: articles
  endpoint:
    path: /api/articles
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
    params: {}
notes:
- Requires setup of connected app in OTRS
- Some objects may return nulls in deeply nested fields
- API documentation available at https://academy.otrs.com/doc/
- Uses OAuth2 with refresh token — requires setup of connected app in api
- To participate, you need an OTRS Premium contract with appropriate access to our
  training services.
- Recording of the training is not allowed.
- Requires a valid token.
- Uses OAuth2 with refresh token — requires setup of connected app in OTRS
- Requires setup of connected app in OTRS API
- Requires configuration of connected app in OTRS
- Some API endpoints may have rate limits.
- Requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Some objects may return nulls in deeply nested fields.
- Some endpoints may have rate limits
- enable or disable retry for request
- time in seconds for first retry after initial request
- send further retries after the same interval as the first or in increasing intervals
- maximum allowed interval between retries
- maximum allowed number of retries
- maximum time allowed for retries after initial request
- 'Available debug levels are: ''debug'', ''info'', ''notice'' and ''error''.'
- Some endpoints may return nulls in deeply nested fields
- Uses OAuth2 with refresh token — requires setup of connected app in OTRS.
- API supports RESTful integration for ticket and article data.
- API supports RESTful calls
- Make sure to handle rate limiting
- API supports access to tickets and statistics.
- Ensure proper OAuth2 setup for authentication.
- Requires configuration of connected app for API access
- Requires setup of access credentials for API usage.
- API requires authentication via OAuth2.
- Dynamic fields are optional and depend on the specific implementation.
- Requires OAuth2 authentication for access to the API.
- Ensure API access is configured properly before attempting to connect.
- RequestSystemGuid will return the GUID of the remote SolMan system.
- Some API calls may require specific user permissions.
- Some API responses may vary based on user permissions
- Login required with username and password.
- Some API responses may include null values
- Ensure to follow the OAuth2 authentication process for API access.
- Some resources may return nulls in deeply nested fields
- This function updated the Data parameter reference, it does not return the value,
  so Data must be passed as reference so the modification can be applies outside the
  function.
- UserLogin or AccessToken is required
- If UserLogin is sent then Password is required
- DynamicField is optional
- CustomerIDs to be retrieved are required
- Requires configuration of connected applications for OAuth2.
- CustomerUserLogin is required if no AccessToken is given
- Some endpoints may return paginated results
- Dynamic fields will be created if non-existing
- Requires setup of connected app in API
- attachments for articles will be included on ConfigItem data
- Updates a configuration item with attachments if specified.
- ValidID must be 1, 2 or 3
- Requires setup of connected app in OTRS.
- API documentation available at OTRS Academy.
- if UserLogin is sent then Password is required
- Optional parameters include UserPassword, Source, DynamicField, UserPreferences
- Required parameters include UserLogin, CustomerUserLogin, UserEmail, UserFirstname,
  UserLastname, UserCustomerID, ValidID
- Integration may require specific permissions for accessing the API
- Rate limits may apply depending on the subscription plan
- API documentation available at OTRS Academy
- If UserLogin sent then Password is required
- Ensure OAuth2 is properly configured in the OTRS instance
- Ensure that the API user has the necessary permissions.
- Rate limiting may apply.
- UserLogin or SessionID is required
- Either the 'Article' parameter or an article parameter inside the 'Ticket' parameter
  is required.
- Requires authentication to access the API
- DynamicFields indicates if Dynamic Fields should be included or not on the ticket
  content.
- Set ArticleLimit to limit the number of articles returned.
- Dynamic fields support operators connected with AND and values in an operator with
  OR.
- At least one operator must be specified.
- Some endpoints may require additional parameters for filtering.
- Provide only ServiceID OR Name
- Ensure proper authentication setup before accessing the API.
- Requires authentication for accessing tickets and articles.
- Requires setup of OAuth2 for authentication
- Rate limits may apply based on usage
- Requires login with username or email and password.
- Some endpoints may have limitations on response size
- Some fields may return null values
- DynamicFields and Article fields are optional and can be included based on parameters.
- Some endpoints may have specific rate limits
- Uses OAuth2 with refresh token — requires setup of connected app in otrs
- Some endpoints may return nested data structures
- Some API calls may require specific permissions.
- Requires authentication to access the API.
- In the config parameter 'Fail' you can tell the transport to simulate failed network
  requests.
- Some API methods may have rate limits.
- Ensure you have the correct OAuth scopes set for your API client.
- API requires authentication via OAuth2
- API supports various interfaces including Agent and External.
- Check documentation for specific endpoint details.
- Some responses may contain null values in optional fields
- Profiling does incur an administrative cost on the system and one can expect performance
  to drop during the process.
- Requires proper API key setup.
- Rate limits apply for API requests.
- This function will return 'O' if invalid name (without any word characters) was
  supplied.
- Authorization tokens base storage class.
- API documentation is provided in multiple sections
- Attribute that holds record user type ('agent' or 'customer').
- Attribute that indicates if the token should be included in the counting or not.
- API requires authentication.
- Authentication is based on an external authority!
- Some API calls may have rate limits
- Uses OAuth2 with refresh token.
- Checks if a password change is needed for the current user.
- ChangeAfterFirstLogin is set to 1 if a change is needed.
- Ensure proper setup of API credentials before accessing the API
- This is a simple data cache. It can store key/value data both in memory and in a
  configured cache backend for persistent caching.
- Requires setup of a connected app in OTRS
- Authorization tokens database storage class.
- Uses JWT token
- No login screen is needed. Authentication is based on an external authority!
- Requires user authentication via OAuth2
- Uses OAuth2 for authentication.
- All functions that add, modify or delete entries need to make sure that the cache
  stays consistent.
- Avoid calling CleanUp() for an entire cache type, but instead delete individual
  cache entries.
- Timeout parameter is optional.
- Proxy parameter is optional.
- All calendar functions.
- Uses OAuth2 with refresh token
- Some objects may return nulls in specific fields
- This is a class for Short Message Service communication channel.
- API requires OAuth2 authentication.
- Requires OAuth2 authentication setup.
- API documentation available on the OTRS Academy site.
- Chat engine backend
- Ensure to configure connected apps for OAuth2.
- Requires username and password for access
- Some API endpoints may have additional query parameters.
- Timeout is optional and defaults to 15 seconds.
- Proxy is optional and can be specified as needed.
- Some objects like Ticket may return nulls in deeply nested fields
- Refer to the OTRS documentation for specific API usage and configurations.
- API responses may vary based on user permissions.
- Requires OAuth2 setup in OTRS
- Ensure proper permissions for API access
- Certain API responses may vary based on user permissions
- API requires authentication setup for full access.
- Some endpoints may have rate limits.
- Some responses may include nested objects
- Some fields may return nulls in deeply nested objects
- Some objects like tickets may return nulls in deeply nested fields
- Uses OAuth2 for authentication
- Refer to the OTRS User Manual for detailed usage instructions
- Ensure to set up API tokens for authentication
- Ensure to have the correct API endpoint for each resource.
- API may have rate limits.
- Some API endpoints may require specific permissions to access.
- OAuth2 requires setup of connected app in OTRS
- Ensure proper API credentials are configured before accessing endpoints.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '401 Unauthorized: Check your access rights or token.'
- '403 Forbidden: Check user permissions for the requested resource'
- '400 Bad Request: Check the request parameters and format.'
- '401 Unauthorized: Verify the token and its permissions.'
- '404 Not Found: Ensure the endpoint and resource exist.'
- '404 Not Found: Check the endpoint path or resource identifier'
- '403 Forbidden: Check your permissions'
- '404 Not Found: Verify endpoint and parameters'
- '500 Internal Server Error: Retry the request'
- '403 Forbidden: Ensure you have the correct permissions.'
- '404 Not Found: Check the endpoint path and parameters.'
- '401 Unauthorized: Check your credentials or token expiration'
- '404 Not Found: Endpoint may not exist or resource unavailable'
- '401 Unauthorized: Check your API key or access token.'
- '404 Not Found: The requested resource does not exist.'
- '500 Internal Server Error: An error occurred on the server.'
- '401 Unauthorized: Check your API token.'
- 'ErrorCode: ''123'', ErrorMessage: ''an error occured'''
- '401 Unauthorized: Check your API credentials and permissions.'
- '404 Not Found: Verify the endpoint and resource you are trying to access.'
- '401 Unauthorized: Check your API credentials.'
- '404 Not Found: Verify the endpoint URL.'
- '401 Unauthorized: Check your credentials and permissions.'
- '500 Internal Server Error: Try again later.'
- 'ErrorCode: Error Description'
- '401 Unauthorized: Check OAuth credentials.'
- '404 Not Found: Verify endpoint URL.'
- 'Function.Error: Error description'
- 'ConfigItemSearch.ErrorCode: Error Description'
- '0 or 1: if unexpected error'
- '403 Forbidden: Check user permissions'
- '404 Not Found: Verify endpoint path'
- 'ErrorCode: ErrorCode'
- 'ErrorMessage: Error Description'
- '401 Unauthorized: Check OAuth2 credentials'
- '403 Forbidden: Ensure API permissions are set correctly'
- '401 Unauthorized: Check your authentication credentials.'
- '403 Forbidden: You do not have access to this resource.'
- '404 Not Found: The requested resource could not be found.'
- '401 Unauthorized: Check your credentials'
- '401 Unauthorized: Recheck UserLogin or AccessToken'
- '400 Bad Request: Check provided parameters'
- '401 Unauthorized: Check your authentication details.'
- '404 Not Found: Check the endpoint path.'
- '401 Unauthorized: Check the authentication credentials.'
- '401 Unauthorized: Check your API key or token.'
- '401 Unauthorized: Check credentials or token expiration'
- '429 Too Many Requests: Rate limit exceeded, slow down requests'
- '401 Unauthorized: Check API token or permissions'
- '500 Internal Server Error: Retry request or check service status'
- 'Success: 0 or 1 - indicates if the operation was successful.'
- 'ErrorMessage: In case of an error, an error message is provided.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Check authentication details.'
- '404 Not Found: Ensure the endpoint is correct.'
- '400 Bad Request: Check the request format and parameters.'
- '401 Unauthorized: Ensure your API token is valid and not expired.'
- '401 Unauthorized: Check if the access token is valid'
- '404 Not Found: Verify the endpoint path'
- '403 Forbidden: Check API key permissions.'
- '500 Internal Server Error: Retry the request.'
- '404 Not Found: Verify endpoint URL'
- '404 Not Found: Verify the endpoint URL'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Check OAuth scopes or token expiration'
- 1 - in case of success
- C<undef> - in case any error occurs
- '401 Unauthorized: Check your OAuth credentials'
- '403 Forbidden: Insufficient permissions'
- '404 Not Found: The requested resource does not exist'
- '401 Unauthorized: Check your credentials.'
- '401 Unauthorized: Check credentials.'
- '403 Forbidden: Insufficient permissions.'
- 'INVALID_CREDENTIALS: Check username and password'
- 'USER_NOT_FOUND: Ensure the user exists'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'Success => 0: Indicates failure in operation.'
- 'ErrorMessage: Contains details about the failure.'
- '403 Forbidden: Ensure user has appropriate permissions'
- '404 Not Found: Check if the endpoint is correct'
- '403 Forbidden: Check user permissions.'
- '404 Not Found: Verify the endpoint path.'
- '401 Unauthorized: Verify client credentials'
- '404 Not Found: Check endpoint URL'
- '500 Internal Server Error: Retry after a brief wait'
- '401 Unauthorized: Ensure the access token is valid.'
- '404 Not Found: Check if the endpoint is correct.'
- '401 Unauthorized: Check OAuth token and permissions'
- '500 Internal Server Error: Check server logs for details'
- '401 Unauthorized: Check OAuth token or permissions'
- '403 Forbidden: Check API permissions'
- '401 Unauthorized: Check your API token'
- '401 Unauthorized: Check your API token and permissions.'
- '404 Not Found: Verify the endpoint and resource availability.'
- '403 Forbidden: Check API permissions.'
- '404 Not Found: Check the endpoint URL and parameters.'
- '500 Internal Server Error: Try again later or check the server logs.'
- '401 Unauthorized: Check API credentials.'
- '404 Not Found: Verify endpoint paths.'
- '500 Internal Server Error: Contact support.'
auth_info:
  mentioned_objects:
  - AccessToken
  - Auth
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OIDC
  - Kernel::System::AccessToken
  - Kernel::System::Auth
  - RequiresAuthentication
  - RequiresAgentAuthentication
  - RequiresCustomerAuthentication
  - TwoFactor
  - OAuthToken
  - UserID
  - UserType
  - User
  - Session
client:
  base_url: https://academy.otrs.com
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
