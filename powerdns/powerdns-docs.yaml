resources:
- name: dstore-dist
  endpoint:
    path: /dstore-dist
    method: POST
- name: dstore-dist-top-reporter
  endpoint:
    path: /dstore-dist-top-reporter
    method: POST
- name: dstore-dist-eventforwarder
  endpoint:
    path: /dstore-dist-eventforwarder
    method: POST
- name: dstore-dist-report-api
  endpoint:
    path: /dstore-dist-report-api
    method: GET
- name: dstore-dist
  endpoint:
    path: /dstore-dist
    method: POST
- name: dstore-dist-top-reporter
  endpoint:
    path: /dstore-dist-top-reporter
    method: POST
- name: dstore-dist-eventforwarder
  endpoint:
    path: /dstore-dist-eventforwarder
    method: POST
- name: dstore-dist-report-api
  endpoint:
    path: /dstore-dist-report-api
    method: GET
- name: dnspcap2protobuf
  endpoint:
    path: /dnspcap2protobuf
    method: POST
- name: views
  endpoint:
    path: /api/views
    method: GET
    data_selector: views
    params: {}
- name: networks
  endpoint:
    path: /api/networks
    method: GET
    data_selector: networks
    params: {}
- name: metrics
  endpoint:
    path: /metrics
    method: GET
- name: servers
  endpoint:
    path: /servers
    method: GET
- name: server_details
  endpoint:
    path: /servers/{server_id}
    method: GET
- name: autoprimaries
  endpoint:
    path: /servers/{server_id}/autoprimaries
    method: GET
- name: networks
  endpoint:
    path: /servers/{server_id}/networks
    method: GET
- name: network_view
  endpoint:
    path: /servers/{server_id}/networks/{ip}/{prefixlen}
    method: GET
- name: search_data
  endpoint:
    path: /servers/{server_id}/search-data
    method: GET
- name: statistics
  endpoint:
    path: /servers/{server_id}/statistics
    method: GET
- name: tsigkeys
  endpoint:
    path: /servers/{server_id}/tsigkeys
    method: GET
- name: tsigkey_details
  endpoint:
    path: /servers/{server_id}/tsigkeys/{tsigkey_id}
    method: GET
- name: views
  endpoint:
    path: /servers/{server_id}/views
    method: GET
- name: view_contents
  endpoint:
    path: /servers/{server_id}/views/{view}
    method: GET
- name: zones
  endpoint:
    path: /servers/{server_id}/zones
    method: GET
- name: zone_details
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}
    method: GET
- name: cryptokeys
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}/cryptokeys
    method: GET
- name: cryptokey_details
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}/cryptokeys/{cryptokey_id}
    method: GET
- name: zone_export
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}/export
    method: GET
- name: zone_metadata
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}/metadata
    method: GET
- name: metadata_kind
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}/metadata/{metadata_kind}
    method: GET
- name: add_autoprimary
  endpoint:
    path: /servers/{server_id}/autoprimaries
    method: POST
- name: add_tsigkey
  endpoint:
    path: /servers/{server_id}/tsigkeys
    method: POST
- name: add_zone_to_view
  endpoint:
    path: /servers/{server_id}/views/{view}
    method: POST
- name: create_domain
  endpoint:
    path: /servers/{server_id}/zones
    method: POST
- name: create_cryptokey
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}/cryptokeys
    method: POST
- name: create_metadata_entries
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}/metadata
    method: POST
- name: flush_cache
  endpoint:
    path: /servers/{server_id}/cache/flush
    method: PUT
- name: set_network_view
  endpoint:
    path: /servers/{server_id}/networks/{ip}/{prefixlen}
    method: PUT
- name: modify_tsigkey
  endpoint:
    path: /servers/{server_id}/tsigkeys/{tsigkey_id}
    method: PUT
- name: modify_zone_data
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}
    method: PUT
- name: retrieve_slave_zone
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}/axfr-retrieve
    method: PUT
- name: activate_deactivate_key
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}/cryptokeys/{cryptokey_id}
    method: PUT
- name: replace_metadata_content
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}/metadata/{metadata_kind}
    method: PUT
- name: send_dns_notify
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}/notify
    method: PUT
- name: rectify_zone_data
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}/rectify
    method: PUT
- name: delete_autoprimary
  endpoint:
    path: /servers/{server_id}/autoprimaries/{ip}/{nameserver}
    method: DELETE
- name: delete_tsigkey
  endpoint:
    path: /servers/{server_id}/tsigkeys/{tsigkey_id}
    method: DELETE
- name: remove_zone_from_view
  endpoint:
    path: /servers/{server_id}/views/{view}/{id}
    method: DELETE
- name: delete_zone
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}
    method: DELETE
- name: delete_cryptokey
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}/cryptokeys/{cryptokey_id}
    method: DELETE
- name: delete_metadata_kind
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}/metadata/{metadata_kind}
    method: DELETE
- name: modify_rrsets
  endpoint:
    path: /servers/{server_id}/zones/{zone_id}
    method: PATCH
- name: lmdb_backend
  endpoint:
    path: /backends/lmdb
    method: GET
- name: http_api
  endpoint:
    path: /http-api
    method: GET
- name: counters
  endpoint:
    path: /metrics/counters
    method: GET
    data_selector: counters
    params: {}
- name: ring_buffers
  endpoint:
    path: /metrics/ring_buffers
    method: GET
    data_selector: ring_buffers
    params: {}
- name: dns_update
  endpoint:
    path: /dynamic/dns/update
    method: POST
    data_selector: update_records
    params: {}
- name: dns_update
  endpoint:
    path: /dns-update
    method: POST
    data_selector: results
- name: dns_update_policy
  endpoint:
    path: /dns/update/policy
    method: POST
    data_selector: updateResult
- name: BIND
  endpoint:
    path: bind
    method: GET
- name: Generic Mysql/Mariadb
  endpoint:
    path: gmysql
    method: GET
- name: Generic ODBC
  endpoint:
    path: godbc
    method: GET
- name: Generic Postgresql
  endpoint:
    path: gpgsql
    method: GET
- name: Generic SQLite3
  endpoint:
    path: gsqlite3
    method: GET
- name: GeoIP
  endpoint:
    path: geoip
    method: GET
- name: LDAP
  endpoint:
    path: ldap
    method: GET
- name: LMDB
  endpoint:
    path: lmdb
    method: GET
- name: Lua2
  endpoint:
    path: lua2
    method: GET
- name: Pipe
  endpoint:
    path: pipe
    method: GET
- name: Random
  endpoint:
    path: random
    method: GET
- name: Remote
  endpoint:
    path: remote
    method: GET
- name: TinyDNS
  endpoint:
    path: tinydns
    method: GET
- name: servers
  endpoint:
    path: /api/v1/servers
    method: GET
- name: zones
  endpoint:
    path: /api/v1/servers/localhost/zones
    method: GET
- name: axfr
  endpoint:
    path: /api/axfr
    method: GET
    data_selector: records
    params: {}
- name: dnsupdate
  endpoint:
    path: /api/dnsupdate
    method: POST
    data_selector: records
    params: {}
- name: primary
  endpoint:
    path: /settings.html#setting-primary
    method: GET
- name: secondary
  endpoint:
    path: /settings.html#setting-secondary
    method: GET
- name: allow_axfr_from
  endpoint:
    path: /domainmetadata.html#metadata-allow-axfr-from
    method: GET
- name: query_local_address
  endpoint:
    path: /settings.html#setting-query-local-address
    method: GET
- name: local_address
  endpoint:
    path: /settings.html#setting-local-address
    method: GET
- name: local_ipv6
  endpoint:
    path: /settings.html#setting-local-ipv6
    method: GET
- name: local_address_nonexist_fail
  endpoint:
    path: /settings.html#setting-local-address-nonexist-fail
    method: GET
- name: local_ipv6_nonexist_fail
  endpoint:
    path: /settings.html#setting-local-ipv6-nonexist-fail
    method: GET
- name: DomainInfo
  endpoint:
    path: /api/domaininfo
    method: GET
    data_selector: records
    params: {}
- name: DNSResourceRecord
  endpoint:
    path: /api/dnsresourcerecord
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /startTransaction
    method: POST
- name: commit_transaction
  endpoint:
    path: /commitTransaction
    method: POST
- name: abort_transaction
  endpoint:
    path: /abortTransaction
    method: POST
- name: feed_record
  endpoint:
    path: /feedRecord
    method: POST
- name: replace_rrset
  endpoint:
    path: /replaceRRSet
    method: POST
- name: list_sub_zone
  endpoint:
    path: /listSubZone
    method: GET
- name: get_all_domain_metadata
  endpoint:
    path: /getAllDomainMetadata
    method: GET
- name: get_domain_metadata
  endpoint:
    path: /getDomainMetadata
    method: GET
- name: set_domain_metadata
  endpoint:
    path: /setDomainMetadata
    method: POST
- name: get_tsig_key
  endpoint:
    path: /getTSIGKey
    method: GET
- name: set_tsig_key
  endpoint:
    path: /setTSIGKey
    method: POST
- name: delete_tsig_key
  endpoint:
    path: /deleteTSIGKey
    method: DELETE
- name: get_domain_keys
  endpoint:
    path: /getDomainKeys
    method: GET
- name: remove_domain_key
  endpoint:
    path: /removeDomainKey
    method: DELETE
- name: add_domain_key
  endpoint:
    path: /addDomainKey
    method: POST
- name: activate_domain_key
  endpoint:
    path: /activateDomainKey
    method: POST
- name: deactivate_domain_key
  endpoint:
    path: /deactivateDomainKey
    method: POST
- name: publish_domain_key
  endpoint:
    path: /publishDomainKey
    method: POST
- name: unpublish_domain_key
  endpoint:
    path: /unpublishDomainKey
    method: POST
- name: supported_record_types
  endpoint:
    path: /supported_record_types
    method: GET
- name: unknown_dns_resource_record_types
  endpoint:
    path: /unknown_dns_resource_record_types
    method: GET
- name: A
  endpoint:
    path: /A
    method: GET
    data_selector: records
- name: AAAA
  endpoint:
    path: /AAAA
    method: GET
    data_selector: records
- name: AFSDB
  endpoint:
    path: /AFSDB
    method: GET
    data_selector: records
- name: ALIAS
  endpoint:
    path: /ALIAS
    method: GET
    data_selector: records
- name: APL
  endpoint:
    path: /APL
    method: GET
    data_selector: records
- name: CAA
  endpoint:
    path: /CAA
    method: GET
    data_selector: records
- name: CERT
  endpoint:
    path: /CERT
    method: GET
    data_selector: records
- name: CDNSKEY
  endpoint:
    path: /CDNSKEY
    method: GET
    data_selector: records
- name: CDS
  endpoint:
    path: /CDS
    method: GET
    data_selector: records
- name: CNAME
  endpoint:
    path: /CNAME
    method: GET
    data_selector: records
- name: CSYNC
  endpoint:
    path: /CSYNC
    method: GET
    data_selector: records
- name: DNSKEY
  endpoint:
    path: /DNSKEY
    method: GET
    data_selector: records
- name: DNAME
  endpoint:
    path: /DNAME
    method: GET
    data_selector: records
- name: DS
  endpoint:
    path: /DS
    method: GET
    data_selector: records
- name: HINFO
  endpoint:
    path: /HINFO
    method: GET
    data_selector: records
- name: HTTPS
  endpoint:
    path: /HTTPS
    method: GET
    data_selector: records
- name: KEY
  endpoint:
    path: /KEY
    method: GET
    data_selector: records
- name: LOC
  endpoint:
    path: /LOC
    method: GET
    data_selector: records
- name: MX
  endpoint:
    path: /MX
    method: GET
    data_selector: records
- name: NAPTR
  endpoint:
    path: /NAPTR
    method: GET
    data_selector: records
- name: NS
  endpoint:
    path: /NS
    method: GET
    data_selector: records
- name: NSEC
  endpoint:
    path: /NSEC
    method: GET
    data_selector: records
- name: OPENPGPKEY
  endpoint:
    path: /OPENPGPKEY
    method: GET
    data_selector: records
- name: PTR
  endpoint:
    path: /PTR
    method: GET
    data_selector: records
- name: RP
  endpoint:
    path: /RP
    method: GET
    data_selector: records
- name: RRSIG
  endpoint:
    path: /RRSIG
    method: GET
    data_selector: records
- name: SMIMEA
  endpoint:
    path: /SMIMEA
    method: GET
    data_selector: records
- name: SOA
  endpoint:
    path: /SOA
    method: GET
    data_selector: records
- name: SPF
  endpoint:
    path: /SPF
    method: GET
    data_selector: records
- name: SSHFP
  endpoint:
    path: /SSHFP
    method: GET
    data_selector: records
- name: SRV
  endpoint:
    path: /SRV
    method: GET
    data_selector: records
- name: SVCB
  endpoint:
    path: /SVCB
    method: GET
    data_selector: records
- name: TKEY
  endpoint:
    path: /TKEY
    method: GET
    data_selector: records
- name: TLSA
  endpoint:
    path: /TLSA
    method: GET
    data_selector: records
- name: TXT
  endpoint:
    path: /TXT
    method: GET
    data_selector: records
- name: URI
  endpoint:
    path: /URI
    method: GET
    data_selector: records
- name: ZONEMD
  endpoint:
    path: /ZONEMD
    method: GET
    data_selector: records
- name: lmdb
  endpoint:
    path: /services/data/vXX.X/sobjects/LMDB
    method: GET
    data_selector: records
    params: {}
- name: dns_lookup
  endpoint:
    path: /dns_lookup
    method: GET
    data_selector: records
- name: dns_list
  endpoint:
    path: /dns_list
    method: GET
    data_selector: records
- name: dns_get_domaininfo
  endpoint:
    path: /dns_get_domaininfo
    method: GET
    data_selector: records
- name: dns_get_all_domains
  endpoint:
    path: /dns_get_all_domains
    method: GET
    data_selector: records
- name: dns_get_domain_metadata
  endpoint:
    path: /dns_get_domain_metadata
    method: GET
    data_selector: records
- name: dns_get_all_domain_metadata
  endpoint:
    path: /dns_get_all_domain_metadata
    method: GET
    data_selector: records
- name: dns_get_domain_keys
  endpoint:
    path: /dns_get_domain_keys
    method: GET
    data_selector: records
- name: dns_get_before_and_after_names_absolute
  endpoint:
    path: /dns_get_before_and_after_names_absolute
    method: GET
    data_selector: records
- name: dns_set_notified
  endpoint:
    path: /dns_set_notified
    method: GET
    data_selector: records
- name: dns_record
  endpoint:
    path: /ldap/dns-record
    method: GET
    data_selector: records
    params: {}
- name: zone
  endpoint:
    path: /services/data/vXX.X/sobjects/Zone
    method: GET
    data_selector: records
    params: {}
- name: zone
  endpoint:
    path: /pdnsutil/zone
    method: POST
    data_selector: zones
    params: {}
- name: record
  endpoint:
    path: /pdnsutil/record
    method: POST
    data_selector: records
    params: {}
- name: geo.example.com
  endpoint:
    path: /services/data/vXX.X/sobjects/geo.example.com
    method: GET
    data_selector: records
- name: swe.eu.example.com
  endpoint:
    path: /services/data/vXX.X/sobjects/swe.eu.example.com
    method: GET
    data_selector: records
- name: pipe_backend
  endpoint:
    path: /api/v1/pipe_backend
    method: GET
    data_selector: records
    params: {}
- name: SOA_records
  endpoint:
    path: /example.com/SOA
    method: GET
    data_selector: records
- name: NS_records
  endpoint:
    path: /example.com/NS
    method: GET
    data_selector: records
- name: TXT_records
  endpoint:
    path: /example.com/TXT
    method: GET
    data_selector: records
- name: A_records
  endpoint:
    path: /webserver.example.com/A
    method: GET
    data_selector: records
- name: CNAME_records
  endpoint:
    path: /www.example.com/CNAME
    method: GET
    data_selector: records
- name: MX_records
  endpoint:
    path: /example.com/MX
    method: GET
    data_selector: records
- name: SOA
  endpoint:
    path: /services/data/vXX.X/sobjects/SOA
    method: GET
    data_selector: records
    params: {}
- name: NS
  endpoint:
    path: /services/data/vXX.X/sobjects/NS
    method: GET
    data_selector: records
    params: {}
- name: TXT
  endpoint:
    path: /services/data/vXX.X/sobjects/TXT
    method: GET
    data_selector: records
    params: {}
- name: A
  endpoint:
    path: /services/data/vXX.X/sobjects/A
    method: GET
    data_selector: records
    params: {}
- name: CNAME
  endpoint:
    path: /services/data/vXX.X/sobjects/CNAME
    method: GET
    data_selector: records
    params: {}
- name: MX
  endpoint:
    path: /services/data/vXX.X/sobjects/MX
    method: GET
    data_selector: records
    params: {}
- name: random-hostname
  endpoint:
    path: /random-hostname
    method: GET
- name: removeDomainKey
  endpoint:
    path: /dnsapi/removedomainkey/{name}/{id}
    method: DELETE
    data_selector: result
    params: {}
- name: activateDomainKey
  endpoint:
    path: /dnsapi/activatedomainkey/{name}/{id}
    method: POST
    data_selector: result
    params: {}
- name: deactivateDomainKey
  endpoint:
    path: /dnsapi/deactivatedomainkey/{name}/{id}
    method: POST
    data_selector: result
    params: {}
- name: publishDomainKey
  endpoint:
    path: /dnsapi/publishdomainkey/{name}/{id}
    method: POST
    data_selector: result
    params: {}
- name: unpublishDomainKey
  endpoint:
    path: /dnsapi/unpublishdomainkey/{name}/{id}
    method: POST
    data_selector: result
    params: {}
- name: getTSIGKey
  endpoint:
    path: /dnsapi/gettsigkey/{name}
    method: GET
    data_selector: result
    params: {}
- name: getDomainInfo
  endpoint:
    path: /dnsapi/getdomaininfo/{name}
    method: GET
    data_selector: result
    params: {}
- name: setNotified
  endpoint:
    path: /dnsapi/setnotified/{id}
    method: PATCH
    data_selector: result
    params: {}
- name: isMaster
  endpoint:
    path: /dnsapi/isMaster/{name}/{ip}
    method: GET
    data_selector: result
    params: {}
- name: superMasterBackend
  endpoint:
    path: /dnsapi/supermasterbackend/{ip}/{domain}
    method: POST
    data_selector: result
    params: {}
- name: createSlaveDomain
  endpoint:
    path: /dnsapi/createslavedomain/{ip}/{domain}
    method: POST
    data_selector: result
    params: {}
- name: replaceRRSet
  endpoint:
    path: /dnsapi/replacerrset/{domain_id}/{qname}/{qtype}
    method: PATCH
    data_selector: result
    params: {}
- name: feedRecord
  endpoint:
    path: /dnsapi/feedrecord/{trxid}
    method: PATCH
    data_selector: result
    params: {}
- name: feedEnts
  endpoint:
    path: /dnsapi/feedents/{domain_id}
    method: PATCH
    data_selector: result
    params: {}
- name: feedEnts3
  endpoint:
    path: /dnsapi/feedents3/{domain_id}
    method: PATCH
    data_selector: result
    params: {}
- name: startTransaction
  endpoint:
    path: /dnsapi/starttransaction/{domain_id}/{domain}
    method: POST
    data_selector: result
    params: {}
- name: commitTransaction
  endpoint:
    path: /dnsapi/committransaction/{trxid}
    method: POST
    data_selector: result
    params: {}
- name: abortTransaction
  endpoint:
    path: /dnsapi/aborttransaction/{trxid}
    method: POST
    data_selector: result
    params: {}
- name: calculateSOASerial
  endpoint:
    path: /dnsapi/calculatesoaserial
    method: POST
    data_selector: result
    params: {}
- name: initialize
  endpoint:
    path: /path/to/something
    method: POST
    data_selector: result
    params:
      command: /path/to/something
      timeout: '2000'
      something: else
- name: lookup
  endpoint:
    path: /dnsapi/lookup/{qname}/{qtype}
    method: GET
    data_selector: result
    params:
      qtype: ANY
      qname: www.example.com.
      remote: 192.0.2.24
      local: 192.0.2.1
      real-remote: 192.0.2.24
      zone-id: -1
- name: APILookup
  endpoint:
    path: /dnsapi/apilookup/{qname}/{qtype}
    method: GET
    data_selector: result
    params:
      qtype: ANY
      qname: www.example.com.
      zone_id: -1
      include_disabled: 'false'
- name: list
  endpoint:
    path: /dnsapi/list/{domain_id}/{zonename}
    method: GET
    data_selector: result
    params:
      zonename: example.com.
      domain_id: -1
- name: getBeforeAndAfterNamesAbsolute
  endpoint:
    path: /dnsapi/getbeforeandafternamesabsolute/{id}/{qname}
    method: GET
    data_selector: result
    params:
      id: 0
      qname: www.
- name: getAllDomainMetadata
  endpoint:
    path: /dnsapi/getalldomainmetadata/{name}
    method: GET
    data_selector: result
    params:
      name: example.com
- name: getDomainMetadata
  endpoint:
    path: /dnsapi/getdomainmetadata/{name}/{kind}
    method: GET
    data_selector: result
    params:
      name: example.com.
      kind: PRESIGNED
- name: setDomainMetadata
  endpoint:
    path: /dnsapi/setdomainmetadata/{name}/{kind}
    method: PATCH
    data_selector: result
    params:
      name: example.com
      kind: PRESIGNED
      value:
      - 'YES'
- name: getDomainKeys
  endpoint:
    path: /dnsapi/getdomainkeys/{name}/{kind}
    method: GET
    data_selector: result
    params:
      name: example.com.
      kind: '0'
- name: addDomainKey
  endpoint:
    path: /dnsapi/adddomainkey/{name}
    method: PUT
    data_selector: result
    params:
      name: example.com
      key:
        id: 1
        flags: 256
        active: true
        published: true
        content: 'Private-key-format: v1.2

          Algorithm: 8 (RSASHA256)

          Modulus: r+vmQll38ndQqNSCx9eqRBUbSOLcH4PZFX824sGhY2NSQChqt1G4ZfndzRwgjXMUwiE7GkkqU2Vbt/g4iP67V/+MYecMV9YHkCRnEzb47nBXvs9JCf8AHMCnma567GQjPECh4HevPE9wmcOfpy/u7UN1oHKSKRWuZJadUwcjbp8=

          PublicExponent: AQAB

          PrivateExponent: CYC93UtVnOM6wrFJZ+qA9+Yx+p5yk0CSi0Q7c+/6EVMuABQ5gNyTuu0j65lU3X81bwUk2wHPx6smfgoVDRAW5jjO4jgIFV6nE4inzk5YQKycQSL8YG3Nm9GciLFya1KUXs81sHsQpkvK7MNaSbvkaHZQ6iv16bZ4t73Wascwa/E=

          Prime1: 6a165cIC0nNsGlTW/s2jRu7idq5+U203iE1HzSIddmWgx5KIKE/s3I+pwfmXYRUmq+4H9ASd/Yot1lSYW98szw==

          Prime2: wLoCPKxxnuxDx6/9IKOYz8t9ZNLY74iCeQ85koqvTctkFmB9jpOUHTU9BhecaFY2euP9CuHV7z3PLtCoO8s1MQ==

          Exponent1: CuzJaiR/7UboLvL4ekEy+QYCIHpX/Z6FkiHK0ZRevEJUGgCHzRqvgEBXN3Jr2WYbwL4IMShmGoxzSCn8VY9BkQ==

          Exponent2: LDR9/tyu0vzuLwc20B22FzNdd5rFF2wAQTQ0yF/3Baj5NAi9w84l0u07KgKQZX4g0N8qUyypnU5YDyzc6ZoagQ==

          Coefficient: 6S0vhIQITWzqfQSLj+wwRzs6qCvJckHb1+SD1XpwYjSgMTEUlZhf96m8WiaE1/fIt4Zl2PC3fF7YIBoFLln22w=='
- name: lookup
  endpoint:
    path: /dns/lookup/example.com/SOA
    method: GET
    data_selector: result
    params: {}
- name: getAllDomains
  endpoint:
    path: /dnsapi/getAllDomains
    method: GET
    data_selector: result
    params:
      include_disabled: 'true'
- name: searchRecords
  endpoint:
    path: /dnsapi/searchRecords
    method: GET
    data_selector: result
    params:
      pattern: www.example*
      maxResults: 100
- name: getUpdatedMasters
  endpoint:
    path: /dnsapi/getUpdatedMasters
    method: GET
    data_selector: result
    params: {}
- name: getUnfreshSlaveInfos
  endpoint:
    path: /dnsapi/getUnfreshSlaveInfos
    method: GET
    data_selector: result
    params: {}
- name: zone_key_commands
  endpoint:
    path: /zone/key
    method: GET
- name: other_miscellaneous_commands
  endpoint:
    path: /other/miscellaneous
    method: GET
notes:
- The webserver does not allow remote management of the daemon, but allows control
  over the size of the queries and response rings that may be used to monitor activities.
- The documentation is only for the 4.1 and higher series, users of older versions
  are urged to read End of life statements and upgrade!
- Views are an experimental feature, which allows the scope of zones to be narrowed.
- Requires the zone cache to be enabled.
- Upgrade to PowerDNS Authoritative Server 4.0.0 from 3.4.2+.
- Before version 4.5.0, PowerDNS would automatically replace `@` in the SOA RNAME
  with `.`, making it easy for users to enter their hostmaster email address without
  having to think about syntax.
- In version 4.5.0, this feature was accidentally broken in the implementation of
  the zone cache.
- In 4.6.0, this automatic conversion is fully removed.
- Version 5.0.0-alpha1 ships a new version of the LMDB database schema (called version
  6), in support of the new views feature.
- If you upgrade your database (by starting 5.0.0 without setting lmdb-schema-version
  to `5`), you cannot go back.
- The axfr-fetch-timeout setting has been added. This setting controls how long an
  inbound AXFR may be idle in seconds. Its default is 10
- The max-generate-steps setting has been added. This sets the maximum number of steps
  that will be performed when loading a BIND zone with the $GENERATE directive. The
  default is 0, which is unlimited.
- local-ipv6 has been deprecated and will be removed in 4.5.0. Both IPv4 and IPv6
  listen addresses can now be set with local-address. The default for the latter has
  been changed to 0.0.0.0, ::.
- local-address now defaults to 0.0.0.0, ::.
- Primary support is OFF by default, turn it on by adding primary to the configuration.
- Secondary support is OFF by default, turn it on by adding secondary to the configuration.
- PowerDNS does not operate as a secondary or primary server with all backends.
- The Generic SQL and BIND backends have the ability to act as primary or secondary.
- PowerDNS has several options to easily allow it to run more securely.
- The default PowerDNS configuration is best chrooted to './', which boils down to
  the configured location of the controlsocket.
- Best performance is achieved on recent Linux kernels with the bindbackend, or with
  the LMDB backend.
- Many of the largest PowerDNS installations are based on PostgreSQL or MySQL.
- Some Linux distributions leave IPv6 routing cache tables at very small default values.
- PowerDNS contains support for DNSSEC, enabling the easy serving of DNSSEC secured
  data, with minimal administrative overhead.
- When multiple backends are in use, domain metadata is only retrieved from and written
  to the first DNSSEC-capable or metadata-capable backend.
- Apart from raw SQL statements, setting domain metadata can be done with `pdnsutil
  metadata set` and retrieving metadata with `pdnsutil metadata get`.
- There is no support for SIG (TSIG and GSS-TSIG are supported)
- Anything not explicitly mentioned is not supported
- Uses RFC 2136 for DNS updates.
- No support for SIG; TSIG and GSS-TSIG are supported.
- Update policy Lua script must contain a function called updatepolicy.
- It is highly recommended to protect catalog zones with TSIG.
- Most backends require DNSSEC support to be enabled to support TSIG.
- PowerDNS dynamic DNS records are actually tiny (or larger) Lua statements.
- Under NO circumstances serve LUA records from zones from untrusted sources!
- To enable the API, add 'api=yes' and 'api-key=changeme' to pdns.conf
- Enabled by default, freshness checks for secondary zones will set the DO flag on
  SOA queries.
- It is strongly recommended to keep this setting enabled (yes).
- Static pre-shared authentication key for access to the REST API.
- 'Deprecated since version 4.5.0: Renamed to secondary-do-renotify'
- Removed in 4.9.0
- 'Deprecated since version 4.2.0: This setting was removed in 4.4.0'
- 'Changed in version 4.4.0: This option now accepts a comma-separated list of IP
  ranges. This was a list of IP addresses before.'
- New in version 4.5.0
- New in version 5.0.0
- 'Changed in version 4.6.0: This setting now accepts a hashed and salted version.'
- All security advisories for the PowerDNS Authoritative Server are listed here.
- Users with a commercial agreement with PowerDNS.COM BV or Open-Xchange can receive
  extended support for releases which are End Of Life.
- The Primary/Secondary apparatus is off by default.
- PowerDNS does not answer queries on all my IP addresses.
- Backends should implement being able to answer ‘ANY’ queries.
- Implementing the ANY query is NOT optional.
- Each zone should have a unique id, even across backends.
- This simple backend neglects to handle case properly.
- Backend must be able to handle DNS queries and responses effectively.
- To build the PowerDNS Authoritative Server, a C++ compiler with support for C++
  2017 is required.
- By default, the PowerDNS Authoritative Server requires Boost 1.54 or newer and OpenSSL.
- A DNS query is not a straightforward lookup.
- Many DNS queries need to check the backend for additional data.
- The Views feature is currently only available in the LMDB backend.
- Requires the zone cache to be enabled by setting setting-zone-cache-refresh-interval
  to a non-zero value.
- Must be explicitly enabled using setting-views in the configuration file.
- The LMDB backend is considered stable as of 4.4.0.
- Version 4.3.0 was stable but had an important known bug that affects anybody with
  big records such as long TXT content.
- Defaults are used for omitted keys.
- The requested record type is unlikely to match what was asked from PowerDNS.
- Host names and the MNAME of a SOA records are NEVER terminated with a ‘.’ in PowerDNS
  storage.
- The LDAP backend can be compiled by adding `ldap` to either the `--with-modules`
  or `--with-dynmodules` `configure` options.
- When using packages, the `pdns-backend-ldap` package should be installed.
- The LDAP server must support anonymous binds.
- Ensure the PowerDNS process has write permissions to the Kerberos credential cache
  file.
- The API is read-only for zones hosted by the BIND backend.
- It is highly recommended to not use raw SQL commands to manipulate records in the
  database.
- Ensure that record and zone names are never terminated with a trailing ‘.’.
- 'Native: Yes'
- 'Primary: Yes'
- 'Secondary: Yes'
- 'Producer: Yes'
- 'Consumer: Yes'
- 'Autosecondary: Yes'
- 'DNS Update: Yes'
- 'DNSSEC: Yes (set `gmysql-dnssec`)'
- 'Disabled data: Yes'
- 'Comments: Yes'
- 'Search: Yes'
- 'Views: No'
- 'Multiple instances: yes'
- 'Zone caching: Yes'
- When there is a more specific generic sql backend (like gmysql or gsqlite3), it
  is highly recommended to use that backend instead.
- This PostgreSQL backend is based on the Generic SQL Backends.
- With PostgreSQL, you may have to run `createdb pdns` first and then connect to that
  database with `psql pdns`, and feed it the schema above.
- When importing large amounts of data, be sure to run analyze; afterwards as SQLite3
  has a tendency to use very sub-optimal indexes otherwise.
- It is not possible to replace the sqlite3 database file while PowerDNS is running.
- For each domain, one record of the domain name MUST exist with a soa record.
- CNAME records cannot appear in the same label as NS or SOA records.
- This backend allows visitors to be sent to a server closer to them, with no appreciable
  delay.
- The backend can utilize EDNS Client Subnet extension for decision making.
- The PipeBackend allows for easy dynamic resolution based on a ‘Coprocess’ which
  can be written in any programming language that can read a question on standard
  input and answer on standard output.
- The PipeBackend is primarily meant for allowing rapid development of new backends
  without tight integration with PowerDNS.
- The number of distributor (backend) threads (`distributor-threads`) to start per
  receiver thread is low by default.
- There is a breaking change on v4.0 and later. DNS names passed in queries are now
  sent with a trailing dot.
- In some network setups, IPv6 addresses may be suffixed with a % and the name of
  the network interface.
- The TinyDNS backend allows you to use djbdns’s data.cdb file format as the storage
  of your DNS records.
- This backend might solve some issues you have with the current tinydns noted on
  Jonathan de Boyne Pollard’s djbdns known problems page.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
errors:
- '400 Bad Request: Invalid JSON body from client'
- '422 Unprocessable Entity: Input validation failed'
- '400 Bad Request: JSON body from client is not a hash'
- '401 Unauthorized: Recheck API key'
- API calls containing a `priority` field are actively rejected starting with 4.9.
- 'Refused: TSIG validation failed'
- 'ServFail: Invalid zone'
- 'NotZone: Update not for the given zone'
- 'REQUEST_NOT_AUTHORIZED: Ensure valid TSIG key is used.'
- 'INVALID_UPDATE: Check update format and permissions.'
- 'Refused: Request is not allowed.'
- 'ServFail: Service failure.'
- 'NotZone: Update not for the zone.'
- '401 Unauthorized: Ensure the API key is correct'
- '403 Forbidden: Check API key and permissions.'
- '404 Not Found: Endpoint does not exist.'
- '500 Internal Server Error: Check server logs for details.'
- 'PowerDNS Security Advisory 2022-01: incomplete validation of incoming IXFR transfer
  in Authoritative Server and Recursor'
- 'PowerDNS Security Advisory 2021-01: Specific query crashes Authoritative Server'
- 'PowerDNS Security Advisory 2020-06: Various issues in our GSS-TSIG support'
- 'PowerDNS Security Advisory 2020-05: Leaking uninitialised memory through crafted
  zone records'
- 'PowerDNS Security Advisory 2019-06: Denial of service via crafted zone records'
- 'PowerDNS Security Advisory 2019-05: Denial of service via NOTIFY packets'
- 'PowerDNS Security Advisory 2019-04: Denial of service via crafted zone records'
- 'PowerDNS Security Advisory 2019-03: Insufficient validation in the HTTP remote
  backend'
- 'PowerDNS Security Advisory 2018-05: Packet cache pollution via crafted query'
- 'PowerDNS Security Advisory 2018-03: Crafted zone record can cause a denial of service'
- 'PowerDNS Security Advisory 2018-02: Buffer overflow in dnsreplay'
- 'PowerDNS Security Advisory 2017-04: Missing check on API operations'
- 'PowerDNS Security Advisory 2016-05: Crafted zone record can cause a denial of service'
- 'PowerDNS Security Advisory 2016-04: Insufficient validation of TSIG signatures'
- 'PowerDNS Security Advisory 2016-03: Denial of service via the web server'
- 'PowerDNS Security Advisory 2016-02: Crafted queries can cause abnormal CPU usage'
- 'PowerDNS Security Advisory 2016-01: Crafted queries can cause unexpected backend
  load'
- 'PowerDNS Security Advisory 2015-03: Packet parsing bug can lead to crashes'
- 'PowerDNS Security Advisory 2015-02: Packet parsing bug can cause thread or process
  abortion'
- 'PowerDNS Security Advisory 2015-01: Label decompression bug can cause crashes or
  CPU spikes'
- 'PowerDNS Security Advisory 2012-01: PowerDNS Authoritative Server can be caused
  to generate a traffic loop'
- 'PowerDNS Security Advisory 2008-03: Some PowerDNS Configurations can be forced
  to restart remotely'
- 'PowerDNS Security Advisory 2008-02: By not responding to certain queries, domains
  become easier to spoof'
- 'PDNSException: Indicates an error occurred accessing the database.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'POWERDNS_UNPARSEABLE_LINE: PowerDNS sent unparseable line'
- 'FAIL: Received unexpected response'
auth_info:
  mentioned_objects: []
client:
  base_url: /api/v1
  auth:
    type: apikey
    location: header
    header_name: X-API-Key
source_metadata: null
