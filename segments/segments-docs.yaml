resources:
- name: datasets
  endpoint:
    path: /users/:owner/datasets
    method: GET
    data_selector: ''
    params: {}
- name: samples
  endpoint:
    path: /datasets/:owner/:dataset/samples
    method: GET
    data_selector: ''
    params: {}
- name: labels
  endpoint:
    path: /labels/:sample_uuid/:labelset
    method: GET
    data_selector: ''
    params: {}
- name: releases
  endpoint:
    path: /datasets/:owner/:dataset/releases
    method: GET
    data_selector: ''
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: dataset
  endpoint:
    path: /create-dataset
    method: POST
    data_selector: result
    params:
      task_type: segmentation-bitmap
- name: cuboid_settings
  endpoint:
    path: /how-to-annotate/label-3d-point-clouds/cuboid-settings
    method: GET
- name: point_cloud_display_settings
  endpoint:
    path: /how-to-annotate/label-3d-point-clouds/point-cloud-display-settings
    method: GET
- name: camera_settings
  endpoint:
    path: /how-to-annotate/label-3d-point-clouds/camera-settings
    method: GET
- name: panning_settings
  endpoint:
    path: /how-to-annotate/label-3d-point-clouds/panning-settings
    method: GET
- name: helper_objects_settings
  endpoint:
    path: /how-to-annotate/label-3d-point-clouds/helper-objects-settings
    method: GET
- name: pointcloud-segmentation
  endpoint:
    path: /create/dataset
    method: POST
    data_selector: task_type
    params: {}
- name: pointcloud-segmentation-sequence
  endpoint:
    path: /create/dataset
    method: POST
    data_selector: task_type
    params: {}
- name: collaborator_roles
  endpoint:
    path: /guides/add-collaborators-to-a-dataset
    method: GET
- name: organization
  endpoint:
    path: /guides/create-an-organization
    method: GET
- name: dataset
  endpoint:
    path: /guides/create-a-dataset-within-an-organization
    method: GET
- name: organization_members
  endpoint:
    path: /guides/manage-organization-members
    method: GET
- name: default_dataset_role
  endpoint:
    path: /guides/default-dataset-role
    method: GET
- name: set_sample_priority
  endpoint:
    path: /guides/set-sample-priority
    method: GET
    data_selector: samples
    params: {}
- name: assign_specific_labeler_or_reviewer
  endpoint:
    path: /guides/assign-a-specific-labeler-or-reviewer
    method: GET
    data_selector: samples
    params: {}
- name: clone_dataset
  endpoint:
    path: /clone_dataset
    method: POST
    data_selector: results
- name: release_file
  endpoint:
    path: /releases
    method: GET
    data_selector: releaseData
    params: {}
- name: release_file
  endpoint:
    path: /release_file
    method: GET
    data_selector: dataset
- name: sample
  endpoint:
    path: /sample
    method: GET
    data_selector: samples
- name: label
  endpoint:
    path: /label
    method: GET
    data_selector: labels
- name: label_set
  endpoint:
    path: /label_set
    method: GET
    data_selector: labelsets
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: add_label
  endpoint:
    path: /client/add_label
    method: POST
    data_selector: attributes
- name: webhook_events
  endpoint:
    path: /webhooks
    method: POST
    data_selector: event_type
    params: {}
- name: keyframes_and_remove_keyframes
  endpoint:
    path: /how-to-annotate/label-sequences-of-data/use-keyframe-interpolation
    method: GET
    data_selector: frames
    params: {}
- name: label_queue
  endpoint:
    path: /label_queue
    method: GET
    data_selector: records
    params: {}
- name: review_queue
  endpoint:
    path: /review_queue
    method: GET
    data_selector: records
    params: {}
- name: datasets
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
    params: {}
- name: dataset
  endpoint:
    path: /datasets
    method: POST
    data_selector: dataset
    params: {}
- name: sample
  endpoint:
    path: /samples
    method: GET
    data_selector: samples
    params:
      per_page: 1000
      page: 1
- name: datasets
  endpoint:
    path: /datasets
    method: GET
- name: get_user
  endpoint:
    path: /user
    method: GET
- name: issues
  endpoint:
    path: /get_issues
    method: GET
    data_selector: issues
    params:
      dataset_identifier: jane/flowers
- name: releases
  endpoint:
    path: /get_releases
    method: GET
    data_selector: releases
    params:
      dataset_identifier: jane/flowers
- name: workunits
  endpoint:
    path: /workunits
    method: GET
    data_selector: workunits
    params:
      dataset_identifier: jane/flowers
      sort: created_at
      direction: desc
      per_page: 1000
      page: 1
- name: releases
  endpoint:
    path: /releases
    method: DELETE
    data_selector: None
    params:
      dataset_identifier: jane/flowers
      name: v0.1
- name: upload_asset
  endpoint:
    path: /assets
    method: POST
    data_selector: asset
    params:
      filename: label.png
- name: 3D point cloud
  endpoint:
    path: /3d_point_cloud
    method: POST
    data_selector: pcd
- name: point cloud data
  endpoint:
    path: /point_cloud_data
    method: POST
    data_selector: url
- name: Camera image
  endpoint:
    path: /camera/image
    method: GET
    data_selector: frames
    params: {}
- name: 3D point cloud sequence
  endpoint:
    path: /3d/pointcloud/sequence
    method: GET
    data_selector: frames
    params: {}
- name: Multi-sensor sequence
  endpoint:
    path: /multi/sensor/sequence
    method: GET
    data_selector: sensors
    params: {}
- name: labels
  endpoint:
    path: /client.get_label/
    method: GET
    data_selector: annotations
- name: annotations
  endpoint:
    path: /annotations
    method: GET
    data_selector: annotations
- name: sensors
  endpoint:
    path: /sensors
    method: GET
    data_selector: sensors
- name: links
  endpoint:
    path: /links
    method: GET
    data_selector: links
- name: categories
  endpoint:
    path: /reference/categories-and-attributes#category
    method: GET
    data_selector: categories
- name: image_attributes
  endpoint:
    path: /reference/categories-and-attributes#attribute
    method: GET
    data_selector: image_attributes
notes:
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Uses OAuth2 with refresh token â€” requires setup of connected app in Segments.ai
- You can find your api key at https://segments.ai/account
- Segments.ai makes it easy to set up such model-assisted workflows.
- use your GPU in Chrome to make sure the 3D point cloud interface runs smoothly.
- The 3D overlay of objects and the point cloud is only visible if the camera parameters
  of the image are specified.
- Choose pointcloud-vector or pointcloud-vector-sequence as the task_type to use this
  labeling interface.
- When labeling a static object in 3D point cloud sequences, a single frame might
  not show the object in full detail.
- To solve this issue, you can toggle a merged point cloud view.
- Batch mode is only available for 3D cuboid labeling.
- Objects need to contain enough points (~ hundreds of points) to be propagated reliably.
- Objects that move erratically might not be tracked accurately. Specifically, their
  heading might move erratically as well.
- You cannot switch browser tabs while smart cuboid propagation is propagating the
  object.
- Only available in 3D labeling interfaces
- The link between two objects is only rendered for cuboids, not yet for polygons/polylines/keypoints
- 'Collaborators can have one of 4 roles: labeler, reviewer, manager and administrator.'
- Only organization administrators can create new datasets within the organization
- There are only two organization roles, member or administrator
- Samples with a higher priority value are labeled first.
- When a new sample is added to a dataset, its default priority is 0.
- You can assign a negative priority to a sample.
- By default, a sample is not assigned to a specific labeler or reviewer.
- You can only clone public datasets and datasets in which you are an administrator.
- Everyone can 'resolve' issues by clicking the checkmark icon.
- An issue must include a description.
- The webhooks system allows to receive event notifications whenever a sample has
  been labeled, such that the linting process can be triggered.
- Maximum file size for asset storage service is 100MB and gets stored in an AWS S3
  bucket in eu-west-2 (London).
- For production use cases, it is recommended to keep the data in your own cloud bucket.
- Uses API key for authentication
- Use the `release2dataset` function in the Python SDK to convert a Segments dataset
  release to a ðŸ¤— Dataset.
- The structure of the exported dataset closely follows documented sample and label
  formats.
- Every webhook is signed with a unique key for increased security.
- You will start to receive notifications, but only for those events within datasets
  of which you're an owner.
- Samples can be unlabeled, prelabeled, labeled, reviewed, rejected, or skipped.
- Labelers do not have access to the Samples tab.
- 3D tiles are currently only available for 3D vector labeling tasks (cuboid, polygon/polyline,
  and keypoint annotation).
- Gaussian splats can only be uploaded as .splat files at the moment.
- PLY splat files are not supported.
- Requires setup of connected app in Segments.ai
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Sample not found: Check if the sample ID is correct.'
- 'APILimitError: If the API limit is exceeded'
- 'NotFoundError: If the dataset is not found'
- 'NetworkError: If the request is not valid or if the server experienced an error'
- 'TimeoutError: If the request times out'
- 'ValidationError: If validation of the dataset fails.'
- 'APILimitError: If the API limit is exceeded.'
- 'NotFoundError: If the dataset is not found.'
- 'NetworkError: If the request is not valid or if the server experienced an error.'
- 'TimeoutError: If the request times out.'
- 'NotFoundError: If the user or dataset is not found.'
- 'ValidationError: If validation of the sample fails.'
- 'NotFoundError: If the sample is not found.'
- 'NotFoundError: If the dataset or labelset is not found'
- 'NotFoundError: If the user/dataset is not found.'
- 'NotFoundError: If the dataset or labelset is not found.'
- 'NotFoundError: If the dataset or release is not found'
- 'ValidationError: If validation of the samples fails'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://segments.ai
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.segments.ai/services/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
