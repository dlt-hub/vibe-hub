resources:
- name: product
  endpoint:
    path: product
    method: GET
    data_selector: products
- name: order
  endpoint:
    path: order
    method: GET
    data_selector: orders
- name: profile
  endpoint:
    path: profile
    method: GET
    data_selector: profiles
- name: product
  endpoint:
    path: /admin.php
    method: GET
    data_selector: data
    params:
      target: RESTAPI
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: payment_methods
  endpoint:
    path: /billing/payment_methods
    method: GET
    data_selector: methods
- name: invoice_history
  endpoint:
    path: /billing/invoice_history
    method: GET
    data_selector: invoices
- name: customer_gallery
  endpoint:
    path: /customer-gallery
    method: GET
    data_selector: gallery_cards
    params: {}
- name: Customer Gallery
  endpoint:
    path: /customer-gallery
    method: GET
- name: Gallery Card
  endpoint:
    path: /gallery-card
    method: GET
- name: Product Details
  endpoint:
    path: /product-details
    method: GET
- name: Product Import
  endpoint:
    path: /import/products
    method: POST
    data_selector: products
    params: {}
- name: Market Price Calculation
  endpoint:
    path: /settings/market_price
    method: GET
    data_selector: settings
    params: {}
- name: core_charge
  endpoint:
    path: /core_charge
    method: GET
    data_selector: core_charge_data
- name: core_charge
  endpoint:
    path: /add-ons/core-charge.html
    method: GET
    data_selector: core_charge_data
- name: dealer
  endpoint:
    path: /store/shipping/dealer-locator
    method: GET
    data_selector: dealer_list
- name: dealer_addresses
  endpoint:
    path: /dealer-addresses
    method: GET
    data_selector: addresses
    params: {}
- name: store_profile
  endpoint:
    path: /store/profile
    method: GET
    data_selector: records
    params: {}
- name: general_settings
  endpoint:
    path: /store/general_settings
    method: GET
    data_selector: records
    params: {}
- name: terms_and_conditions
  endpoint:
    path: /terms-and-conditions
    method: GET
    data_selector: terms
    params: {}
- name: next_order_number
  endpoint:
    path: /next-order-number
    method: GET
    data_selector: order_number
    params: {}
- name: cart_ttl
  endpoint:
    path: /cart-ttl
    method: GET
    data_selector: cart_ttl
    params: {}
- name: internal_cron_service
  endpoint:
    path: /internal-cron-service
    method: GET
    data_selector: cron_service
    params: {}
- name: membership_signup
  endpoint:
    path: /membership-signup
    method: GET
    data_selector: membership
    params: {}
- name: last_login_data
  endpoint:
    path: /last-login-data
    method: GET
    data_selector: login_data
    params: {}
- name: promotions
  endpoint:
    path: /api/promotions
    method: POST
    data_selector: promotions
- name: eCommerce Dashboard
  endpoint:
    path: /customization/dashboards
    method: POST
    data_selector: dashboard
- name: XML Sitemap
  endpoint:
    path: /sitemap.xml
    method: GET
    data_selector: sitemapindex
- name: returns
  endpoint:
    path: /orders/returns
    method: GET
    data_selector: return_requests
    params: {}
- name: shipping_methods
  endpoint:
    path: /shipping/methods
    method: GET
    data_selector: methods
- name: tracking
  endpoint:
    path: /tracking
    method: GET
    data_selector: tracking_info
- name: returns
  endpoint:
    path: /returns
    method: POST
    data_selector: return_request
- name: FedEx Shipping Options
  endpoint:
    path: /add-fedex-shipping-method
    method: POST
- name: shipping_options
  endpoint:
    path: /services/shipping/options
    method: GET
    data_selector: shippingMethods
- name: FedEx Settings
  endpoint:
    path: /fedex/settings
    method: GET
    data_selector: settings
    params: {}
- name: FedEx Special Services
  endpoint:
    path: /fedex/special_services
    method: GET
    data_selector: special_services
    params: {}
- name: FedEx One Rate
  endpoint:
    path: /fedex/one_rate
    method: GET
    data_selector: one_rate
    params: {}
- name: Cash on Delivery
  endpoint:
    path: /fedex/cash_on_delivery
    method: GET
    data_selector: cash_on_delivery
    params: {}
- name: Advanced Options
  endpoint:
    path: /fedex/advanced_options
    method: GET
    data_selector: advanced_options
    params: {}
- name: Carrier Services
  endpoint:
    path: /fedex/carrier_services
    method: GET
    data_selector: carrier_services
    params: {}
- name: shipping_rates
  endpoint:
    path: /shipping/rates
    method: GET
    data_selector: rates
- name: account_settings
  endpoint:
    path: /account/settings
    method: POST
    data_selector: settings
    params: {}
- name: vat_gst_configuration
  endpoint:
    path: /vat-gst/configuration
    method: GET
    data_selector: configuration
    params: {}
- name: attributes
  endpoint:
    path: /attributes.csv
    method: GET
    data_selector: records
    params: {}
- name: product_attributes
  endpoint:
    path: /product-attributes.csv
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /products.csv
    method: GET
    data_selector: records
    params: {}
- name: products
  endpoint:
    path: /import/products
    method: POST
    data_selector: data
    params: {}
- name: attachmentsPrivate
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: marketPrice
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: sale
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: saleDiscounts
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: vendor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: variantID
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: variantSKU
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: variantPrice
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: variantQuantity
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: variantWeight
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: variantImage
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: variantImageAlt
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: variantsAsTable
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: wholesalePrices
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: variantWholesalePrices
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: upcIsbn
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: mnfVendor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: variantupcIsbn
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: variantmnfVendor
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: relatedProducts
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: fitmentType
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: tags
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: shipForFree
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: freeShipping
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: freightFixedFee
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: callForPrice
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: variantCallForPrice
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: availableForBackorder
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backorderQtyLabel
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: isBackorderLimited
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: backorderLimit
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: reviews
  endpoint:
    path: /import/reviews
    method: POST
    data_selector: data
    params: {}
- name: user_list
  endpoint:
    path: /user/list
    method: GET
    data_selector: users
- name: Authy
  endpoint:
    path: /authy
    method: POST
- name: back_in_stock_requests
  endpoint:
    path: /admin/communication/product_requests/back_in_stock
    method: GET
    data_selector: requests
    params: {}
- name: price_drop_requests
  endpoint:
    path: /admin/communication/product_requests/price_drop
    method: GET
    data_selector: requests
    params: {}
- name: shipping_zones
  endpoint:
    path: /promotions/special_offers
    method: GET
    data_selector: zones
    params: {}
- name: eBay Configuration
  endpoint:
    path: /eBay/Configurations
    method: POST
    data_selector: configuration
    params: {}
- name: User Token
  endpoint:
    path: /eBay/UserToken
    method: POST
    data_selector: token
    params: {}
- name: redirects
  endpoint:
    path: /redirects
    method: GET
    data_selector: rules
    params: {}
- name: installation_wizard
  endpoint:
    path: /install.php
    method: GET
    data_selector: installation_steps
    params: {}
- name: http_to_https_redirect
  endpoint:
    path: /http-to-https-redirect
    method: GET
    data_selector: redirect_rules
    params: {}
- name: restore_files
  endpoint:
    path: /restore/files
    method: POST
    data_selector: result
    params: {}
- name: restore_database
  endpoint:
    path: /restore/database
    method: POST
    data_selector: result
    params: {}
- name: cache_management
  endpoint:
    path: /admin.php?drop_cache&access_key=XXXXXXXXXXXXXX
    method: GET
    data_selector: cache
    params: {}
- name: rebuild_cache
  endpoint:
    path: /service.php?/rebuild&auth_code=XXXXXXXXXXXXXX
    method: GET
    data_selector: rebuild
    params: {}
- name: product_attachment
  endpoint:
    path: /admin.php?target=RESTAPI&_key=write&_path=cdev-fileattachments-product-attachment/0
    method: POST
    data_selector: null
    params: {}
- name: product_translation
  endpoint:
    path: /admin.php?target=RESTAPI&_key=write&_method=put&_path=producttranslation/30
    method: PUT
    data_selector: null
    params: {}
- name: attribute
  endpoint:
    path: /admin.php?target=RESTAPI&_key=write&_method=post&_path=attribute/0
    method: POST
    data_selector: null
    params: {}
- name: attribute_option
  endpoint:
    path: /admin.php?target=RESTAPI&_key=write&_method=post&_path=attributeoption/0
    method: POST
    data_selector: null
    params: {}
- name: product
  endpoint:
    path: /product
    method: POST
    data_selector: model
    params: {}
- name: categoryproducts
  endpoint:
    path: /categoryproducts/0
    method: POST
    data_selector: model
    params: {}
- name: zone
  endpoint:
    path: /zone
    method: POST
    data_selector: model
    params: {}
- name: shipping_method
  endpoint:
    path: ?target=RESTAPI&_path=shipping-method
    method: post
    data_selector: model
    params: {}
- name: shipping_markup
  endpoint:
    path: ?target=RESTAPI&_path=shipping-markup
    method: post
    data_selector: model
    params: {}
- name: order
  endpoint:
    path: ?target=RESTAPI&_path=order/{order_id}
    method: put
    data_selector: model
    params: {}
notes:
- A key allowing an external application to have full access to X-Cart data (reading
  and writing) can be set up.
- If the key is not set up or empty, any request will not be run.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Manually managing product data can become overwhelming as the catalog grows.
- Auto Integrations allow you to import ready-to-use catalogs from global automotive
  data providers.
- Auto-charge cannot be enabled for merchants in India
- You don’t pay anything to X-Cart to use Auto Integrations — but you will need to
  subscribe to third-party providers or meet their requirements.
- Images found online may be legally protected. Always seek permission from the creator
  to avoid potential financial penalties.
- Only columns 'sku', 'name', and 'coreCharge' need to be filled in the CSV file for
  import.
- Choose the calculation method for Save Price according to market price setup.
- Core charge can vary depending on part type, brand, or distributor.
- Core charge values can be imported in bulk from a CSV file.
- Not every core charge is refundable.
- Core charge values can vary by part type, brand, or distributor.
- 'Core Charge Add-on has a single setting: choosing how to calculate the Save price
  for the Market Price feature.'
- Incorrect setting can lead to unrealistic or low Save Price, affecting customer
  trust.
- Requires X-Cart Auto 5.5.1 or later.
- Requires setup of connected app in X-Cart
- Be warned that the new value will automatically display for the new customers only
  (both registered and anonymous). However, if a customer has already visited a category
  listing page, the original display mode is saved in session data and will remain
  unchanged.
- If you want to check the changes you have made, open the storefront in your browser's
  incognito mode.
- Data is pulled from the store using the CloudSearch add-on API installed in the
  store.
- Information becomes searchable via CloudSearch after an 8 hours delay.
- Promotion is a CloudSearch feature available to users on paid accounts.
- Synonyms are another feature available to users on paid CloudSearch accounts.
- Allows creation of custom dashboards with standard and real-time widgets.
- Requires setup of connected app in Kissmetrics and Segment
- Payment gateways requiring a merchant account usually offer attractive commission
  rates.
- Some payment gateways may have hidden costs associated with them that may not be
  disclosed in the beginning.
- It must be a Canadian address, as shipping rates can be calculated only for orders
  shipped from Canadian locations.
- Enable the 'Deliver to Post Office' feature to allow your buyers to get their purchases
  at a nearby post office location of their choice.
- The feature requires the Order Returns add-on installation.
- Shipping cost estimation is based on real-time rates from Canada Post.
- Requires X-Cart 5.0.0.x or later.
- Test credentials must not be used for real shipping.
- Custom packaging options are not available for FedEx Ground or FedEx SmartPost.
- X-Cart's ShippingEasy add-on requires SEO-friendly URLs for correct operation.
- In June 2023, UPS implemented an OAuth 2.0 security model for all APIs and announced
  that users would no longer be able to transact with UPS APIs using an access key
  for authentication after June 03, 2024.
- If USPS fails to work correctly for you in the live mode, while there was no such
  problem in test mode (usually you receive the "API Authorization failure. RateV4
  is not a valid API name for this protocol" error message), contact USPS support
  staff and ask them to transfer your account to the production server.
- In development mode, tax calls will be made to https://development.avalara.net instead
  of the production mode, where the URL https://avatax.avalara.net is used.
- Make sure the TaxJar Sales Tax Automation add-on is installed and enabled.
- Ensure the add-on Value Added Tax / Goods and Services Tax is installed and enabled.
- Ensure that each product in your store falling under taxation has a tax class assigned.
- If you don't specify an API key for any of the suggested VAT validation services
  in your online store when configuring the 'Value Added Tax / Goods and Services
  Tax' add-on, X-Cart will attempt to use a free service.
- The store's order history remains unchanged even for a deleted customer account.
- Ensure you configured the store to use HTTPS (X-Cart Admin -> System Tools -> HTTPS
  Settings). Otherwise, the Facebook Login feature won't work.
- The Geolocation add-on requires PHP OPcache extension for its operation.
- Default Welcome message can be changed in the Admin area.
- Default Front Page Banner can be managed in the Front page settings section.
- AntiFraud service subscription key is valid a limited number of times.
- If the key entered into the 'AntiFraud module service key' field on the AntiFraud
  add-on settings page is not a valid key, you will see a warning that your AntiFraud
  service key is invalid.
- Requires setup of connected app in api
- You must have an account with Authy.
- You need to configure the API key from your Authy account.
- Your store will not create a coupon automatically after you specify the value in
  the coupon code field. Instead, ensure you add a related coupon as described here.
- Connection is made using an API key.
- E-commerce analytics is the core component of the integration functionality; the
  setting is enabled by default, and we recommend keeping it that way.
- For automatic periodical updates, ensure your server is configured to run scheduled
  tasks.
- You will need a seller account for each Amazon marketplace you are going to use.
- The integration allows you to connect your store to any number of Amazon marketplaces
  in different countries.
- Access Tokens are short-term credentials, valid for around an hour.
- Refresh Tokens expire after one year and must be renewed.
- Automatically import orders from Amazon into X-Cart store requires proper server
  configuration.
- Automatically sync X-Cart product updates to Amazon requires proper server configuration.
- An SSL certificate is required because the add-on needs to establish a secure HTTPS
  connection to our service to get a token.
- You need to create a new eBay configuration for each eBay marketplace site you would
  like to connect to.
- If you are creating a Sandbox user token, enter the credentials for a Sandbox User.
- X-Cart 5.5.0.x has compatibility limitations, so please check that your server has
  the following software installed before proceeding with the update.
- The memory limit must be 256 or higher.
- X-Cart 5 tries to alter the server’s time limit (via the set_time_limit() function)
  and allow requests to last forever, but some server configurations do not allow
  X-Cart 5 to achieve the desired result.
- Several server configurations do not allow altering the time limit via the set_time_limit()
  function.
- X-Cart does NOT recommend using shared web hosting due to limited resources. Instead,
  please consider using VPS or dedicated servers as a host for your store.
- Auth Code is stored in the etc/config.php file of an X-Cart package that has been
  downloaded to the server.
- Ensure the server X-cart is installed at is configured securely.
- SSL certificates secure the data in transit during checkout.
- Redirect rules vary based on server type
- Starting May 16, 2022, all X-Cart based stores will need to use the secure HTTPS
  protocol for access to the App Store.
- Uses TAR for file backup on UNIX-based servers
- Remove the SQL dump and the archive from the WWW directory of your server or hosting
  account.
- When X-Cart aggregates CSS and JS files, the result is cached. If you change your
  JS/CSS files directly in the file system after they have been included in the cache,
  you will not see the functionality or style changes you have made. To make your
  changes visible, clear the aggregation cache using the Clear aggregation cache button
  on that page.
- When X-Cart uses a widgets cache, the static content of product lists is stored
  in a temporary cache. After editing the content (modifying the product descriptions,
  titles, or photos), you should clear the widgets cache with the Clear widgets cache
  button in the Look & Feel > Performance section to make these changes visible in
  the frontend right away. If you do not clear it, the changes will be updated anyway,
  which may require more time.
- Use the Safe Mode access key found in var/data/.safeModeAccessKey for cache management.
- Uses API key for authentication.
- 'Order shipping status IDs: New = 1, Processing = 2, Shipped = 3, Delivered = 4,
  Will Not Deliver = 5, Returned = 6'
errors:
- '401 Unauthorized: Ensure that the security key is specified in the request.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Insufficient funds: Default card has insufficient funds'
- 'Transaction blocked: Bank blocked transaction due to suspicious activity'
- 'Card expired: Card expired or reported lost'
- 'Invalid core charge value: Ensure the core charge matches supplier criteria.'
- 'Invalid core: Ensure returned core meets manufacturer''s guidelines.'
- 'Refund denied: Core does not match original purchase.'
- 'API Authorization failure: RateV4 is not a valid API name for this protocol'
- Cannot connect to AvaTax server. Make sure the Account number, License key, and
  Company code have been entered correctly
- Warning! AntiFraud service key expired! You can purchase AntiFraud Service subscription
  here or get your free trial key here (if it has not been used)
- Warning! AntiFraud service key is invalid! You can purchase AntiFraud Service subscription
  here or or get your trial key here (if it has not been used)
- No information regarding requested IP is found
- Billing country/city doesn't match country of IP address
- '401 Unauthorized: Check your token and access permissions.'
- 'FATAL ERROR: Cannot connect to the specified MySQL server : SQLSTATE[28000] [1045]
  Access denied for user ''tony''@''localhost'' (using password: YES)'
- 'FATAL ERROR: Cannot connect to specified MySQL server : SQLSTATE[HY000] [1044]
  Access denied for user ''tony''@''localhost'' to database ''xcart'''
- 'FATAL ERROR: Cannot connect to the specified MySQL server : SQLSTATE[HY000] [2002]
  No connection could be made because the target machine actively refused it.'
- 'FATAL ERROR: Cannot connect to the specified MySQL server : SQLSTATE[HY000] [2002]
  The requested address is not valid in its context.'
- 'FATAL ERROR: MySQL server doesn''t support InnoDB engine. It is required for X-Cart
  5 operation(current version is 5.1.73-cll)'
- 'Permissions checking failed. Please make sure that the following file permissions
  are assigned (UNIX only): chmod 666 /home/tony/public_html/xcart/.htaccess'
- There are disabled functions (phpinfo, escapeshellcmd, escapeshellarg, openlog,
  syslog, exec, popen) that may be used by software in some cases and should be enabled.
- PDO extension with MySQL support must be installed.
- libcurl extension not found
- The system says you do not have enough privileges to write to the file. Set writable
  permissions to the directory.
- The system says you do not have enough free disk space to complete the operation.
  Remove the file with the backup.
- 'Cannot access the site: Check the cache rebuild process or contact your hosting
  team.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - Write key
  - Tracking API Key
client:
  base_url: http://<X-CART-PATH>/admin.php
  auth:
    type: apikey
    location: query
    header_name: _key
source_metadata: null
