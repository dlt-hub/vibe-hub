resources:
- name: campaigns
  endpoint:
    path: /account/campaigns/{search}
    method: GET
- name: vglnk.open
  endpoint:
    path: /vglnk/open
    method: GET
- name: vglnk.link
  endpoint:
    path: /vglnk/link
    method: GET
- name: automatedLibrary
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: campaigns
  endpoint:
    path: /account/campaigns/{search}
    method: GET
- name: campaigns
  endpoint:
    path: /account/campaigns/{search}
    method: GET
- name: redirect
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      key: Your Commerce API key
      u: The URL to monetize
- name: redirect
  endpoint:
    path: /
    method: GET
    data_selector: response
    params:
      key: Your Commerce API key
      u: The URL to monetize
- name: link_check
  endpoint:
    path: /api/link/
    method: GET
    data_selector: response
- name: link_check
  endpoint:
    path: /
    method: GET
    data_selector: null
    params: {}
- name: transactions
  endpoint:
    path: /reports/transactions
    method: GET
    data_selector: transactions
    params:
      clickDate: required
      commissionDate: optional
      updateDate: optional
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params:
      clickDate: ''
      commissionDate: ''
      updateDate: ''
- name: merchants
  endpoint:
    path: /merchants
    method: GET
    params:
      clickDateStart: yyyy-mm-dd
      clickDateEnd: yyyy-mm-dd
      merchantGroupIds: numeric_values
- name: merchants
  endpoint:
    path: /merchants
    method: GET
    data_selector: records
    params:
      clickDateStart: '2023-01-01'
      clickDateEnd: '2023-01-02'
- name: merchants_by_date
  endpoint:
    path: /reporting/merchantsbydate
    method: GET
    data_selector: data
    params:
      clickDateStart: required
      clickDateEnd: required
- name: merchants_by_date
  endpoint:
    path: /merchantsbydate
    method: GET
    params:
      clickDateStart: ''
      clickDateEnd: ''
- name: links
  endpoint:
    path: /reports/links
    method: GET
    data_selector: metrics
    params:
      clickDateStart: required
      clickDateEnd: required
- name: links
  endpoint:
    path: /reports/links
    method: GET
    data_selector: data
    params:
      clickDateStart: ''
      clickDateEnd: ''
- name: pages
  endpoint:
    path: /reports/pages
    method: GET
    params:
      clickDateStart: ''
      clickDateEnd: ''
- name: pages
  endpoint:
    path: /pages
    method: GET
    data_selector: metrics
    params:
      clickDateStart: required
      clickDateEnd: required
- name: merchandise
  endpoint:
    path: /merchandise
    method: GET
    params:
      clickDateStart: ''
      clickDateEnd: ''
- name: merchandise
  endpoint:
    path: /reports/merchandise
    method: GET
    params:
      clickDateStart: ''
      clickDateEnd: ''
- name: networks
  endpoint:
    path: /reports/networks
    method: GET
    params:
      clickDateStart: required
      clickDateEnd: required
- name: networks
  endpoint:
    path: /networks
    method: GET
    params:
      clickDateStart: ''
      clickDateEnd: ''
- name: cuids
  endpoint:
    path: /reports/cuids
    method: GET
    params:
      clickDateStart: ''
      clickDateEnd: ''
- name: cuids
  endpoint:
    path: /reports/cuids
    method: GET
    data_selector: data
    params:
      clickDateStart: ''
      clickDateEnd: ''
- name: approved_merchants
  endpoint:
    path: /merchants/rates/summaries
    method: POST
    params:
      campaignId: ''
- name: approved_merchants
  endpoint:
    path: /merchants/rates/summaries
    method: POST
    data_selector: results
    params:
      campaignId: ''
- name: Merchant Updates
  endpoint:
    path: /merchants/rates/summaries/delta
    method: GET
    params:
      campaignId: required
      since: optional
      If-None-Match: optional
- name: merchant_updates
  endpoint:
    path: /merchants/rates/summaries/delta
    method: GET
    data_selector: results
    params:
      campaignId: ''
      since: ''
      If-None-Match: ''
- name: product_recommendation
  endpoint:
    path: /ai-orchestration/products
    method: POST
    data_selector: results
    params:
      apiKey: your_api_key
      pageUrl: your_page_url
      content: your_content
- name: product_recommendation
  endpoint:
    path: /ai-orchestration/products
    method: POST
    data_selector: products
    params: {}
- name: price_comparison
  endpoint:
    path: /sites/{site-api-key}/compare/prices/{market}/by/accuracy
    method: GET
    data_selector: response
- name: price_comparison
  endpoint:
    path: /sites/{site-api-key}/compare/prices/{market}/by/accuracy
    method: GET
- name: account_level
  endpoint:
    path: /reporting/advertising/publishers/:publisherId/account
    method: GET
- name: bid_level
  endpoint:
    path: /reporting/advertising/publishers/:publisherId/bid
    method: GET
- name: breakout_level
  endpoint:
    path: /reporting/advertising/publishers/:publisherId/breakout
    method: GET
- name: domain_account_level
  endpoint:
    path: /reporting/advertising/publishers/:publisherId/domains/:domainName/account
    method: GET
- name: domain_bid_level
  endpoint:
    path: /reporting/advertising/publishers/:publisherId/domains/:domainName/bid
    method: GET
- name: account_level_reporting
  endpoint:
    path: /reporting/advertising/publishers/:publisherId/account
    method: GET
    data_selector: records
- name: bid_level_reporting
  endpoint:
    path: /reporting/advertising/publishers/:publisherId/bid
    method: GET
    data_selector: records
- name: breakout_level_reporting
  endpoint:
    path: /reporting/advertising/publishers/:publisherId/breakout
    method: GET
    data_selector: records
- name: domain_level_account_reporting
  endpoint:
    path: /reporting/advertising/publishers/:publisherId/domains/:domainName/account
    method: GET
    data_selector: records
- name: domain_level_bid_reporting
  endpoint:
    path: /reporting/advertising/publishers/:publisherId/domains/:domainName/bid
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/account
    method: GET
    params:
      start: '2021-08-10T19:00:00Z'
      end: '2021-08-10T20:00:00Z'
      metrics: requests,impressions
      dimensions: endpoint,country,demandPartnerId
- name: bid
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/bid
    method: GET
- name: breakout
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/breakout
    method: GET
- name: account
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/account
    method: GET
- name: account
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/account
    method: GET
    params:
      start: '2021-08-10T19:00:00Z'
      end: '2021-08-10T20:00:00Z'
      metrics: requests,impressions
      dimensions: endpoint,country,demandPartnerId
- name: bid
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/bid
    method: GET
    params:
      start: '2021-08-10T19:00:00Z'
      end: '2021-08-10T20:00:00Z'
      metrics: requests,impressions
      dimensions: endpoint,country,demandPartnerId
- name: breakout
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/breakout
    method: GET
    params:
      start: '2021-08-10T19:00:00Z'
      end: '2021-08-10T20:00:00Z'
      metrics: requests,impressions
      dimensions: endpoint,country,demandPartnerId
- name: bid
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/bid
    method: GET
- name: account
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/account
    method: GET
- name: breakout
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/breakout
    method: GET
    params:
      start: required
      end: required
      metrics: required
      dimensions: ''
- name: bid
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/bid
    method: GET
- name: account
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/domains/{domainName}/account
    method: GET
    params:
      start: '2021-08-10T19:00:00Z'
      end: '2021-08-10T20:00:00Z'
      metrics: requests,impressions
      dimensions: endpoint,country,demandPartnerId
- name: bid
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/domains/{domainName}/bid
    method: GET
    params:
      start: '2021-08-10T19:00:00Z'
      end: '2021-08-10T20:00:00Z'
      metrics: requests,impressions
      dimensions: endpoint,country,demandPartnerId
- name: breakout
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/breakout
    method: GET
    params:
      start: required
      end: required
      metrics: required
      dimensions: optional
- name: account
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/domains/{domainName}/account
    method: GET
- name: bid_report
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/domains/{domainName}/bid
    method: GET
- name: account
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/domains/{domainName}/account
    method: GET
    data_selector: records
    params:
      start: '2021-08-10T19:00:00Z'
      end: '2021-08-10T20:00:00Z'
      metrics: requests,impressions
      dimensions: endpoint,country,demandPartnerId
- name: bid
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/domains/{domainName}/bidget
    method: GET
    data_selector: records
    params:
      start: '2021-08-10T19:00:00Z'
      end: '2021-08-10T20:00:00Z'
      metrics: requests,impressions
      dimensions: endpoint,country,demandPartnerId
- name: advertising_performance
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/get
    method: GET
    data_selector: data
    params:
      start: '2021-08-10T19:00:00Z'
      end: '2021-08-10T20:00:00Z'
      metrics: requests,impressions
      dimensions: endpoint,country,demandPartnerId
      granularity: hour
- name: account
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/domains/{domainName}/account
    method: GET
- name: advertising_publisher
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/
    method: GET
- name: bid_report
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/domains/{domainName}/bid
    method: GET
    data_selector: report_data
- name: Custom Reporting
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/get
    method: GET
- name: publisher_report
  endpoint:
    path: /reporting/advertising/publishers/{publisherId}/get
    method: GET
notes:
- Registration Required
- This API is rate limited and coupons are updated daily. The suggested usage is to
  perform a daily export of the data to be ingested into your own system.
- The value of the header is 'secret {SECRET KEY}'
- To query this API, include a Secret Key in the Authorization header of your request.
  The value of the header must be formatted as `secret {SECRET_KEY}`.
- The value of the Authorization header must be in the format 'secret {SECRET KEY}'
- Most users will not need to use these options.
- Ensure that the selectors used in options are valid and reference existing elements
  in the DOM.
- To query this API, include a Secret Key in the Authorization header of your request.
- Most browsers will only accept URLs with up to 2056 characters.
- At least one date (clickDate, commissionDate, or updateDate) is required for each
  API call.
- API requests are limited to one day of data based on the date supplied.
- API request is limited to one day of data based on the date supplied in your request.
- 1 month (31 days) limit for data per request
- Rate limit of 1 request every 60 seconds
- 'API Rate Limit: 1 request every 60 seconds'
- 'Date Range Limit: 1 month (31 days)'
- Both clickDateStart and clickDateEnd are required for each API call.
- API is currently limited to return 1 month (31 days) of data per request.
- 'API Rate Limit: 1 request every 60 seconds.'
- API is limited to return 1 month (31 days) of data per request.
- 1 request every 60 seconds
- 'Rate limit: 1 request every 60 seconds.'
- Requests are limited to 1 request every 10 seconds.
- The campaignId parameter is mandatory for all API requests.
- Rate-limited to 30,000 requests per 5 minutes per API key.
- IP-based limit is 100 requests per 5 minutes per IP address.
- Each request must include apiKey, pageUrl, and content.
- You can only use one of the filters includeMerchants or excludeMerchants in a single
  request.
- At least one (barcode, plainlink, or search-keywords) is required for each API call.
- To query this API, include a Secret Key in the Authorization header of your request.
  The value of the header must be formatted as secret {SECRET_KEY}, ensuring that
  the word secret is followed by a space before the key itself.
- Uses Secret Key in the Authorization header formatted as 'secret {SECRET_KEY}'
- Hourly data retention for 10 days, daily for 2 years, and monthly indefinitely.
- Rate limit of 15 requests every 1 minute per API key
- Overall limit of 2000 requests every 5 minutes per IP address
- The API Key is provided as part of the request header, as a key/value pair.
- The API Key will be a 7-character sequence followed by a ‘.’ and then a 32-character
  UUID.
- For the start and end parameters, please request in UTC (providing the “Z” at the
  end for the offset).
- Please only request one hour, one day, or one month in a request.
- Get Account-level reporting data for a publisher
- Get domain-level reporting data for a publisher
- You cannot request all of the available data for a granularity in one request.
errors:
- '400: Required parameters are missing, or their values are not valid.'
- '403: The specified URL is unsafe.'
- 'Rate limit: 1 request every 60 seconds'
- '1 request every 60 seconds: Ensure a minimum gap of 60 seconds between requests.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Rate limit: 1 request every 60 seconds.'
- '1 request every 60 seconds: Ensure a minimum gap of 60 seconds between each request.'
- '401 Unauthorized: Recheck Secret Key'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck API key.'
- '401 Unauthorized: Recheck API Key'
- '401 Unauthorized: Recheck Secret Key format'
- 'Rate limit exceeded: Ensure a delay of at least 60 seconds between requests.'
- 'Request limit exceeded: Throttle API calls or reduce frequency.'
- 'Rate limit exceeded: Exceeding the rate limit may result in your API key being
  temporarily blocked or throttled.'
- 'REQUEST_LIMIT_EXCEEDED: Exceeding the rate limit can result in your API key being
  temporarily blocked or throttled.'
- 'API Key Limit: 30,000 requests per 5 minutes'
- 'IP-Based Limit: 100 requests per 5 minutes per IP address'
- 'No information is returned: The merchant you are requesting is not supported or
  is currently unavailable.'
- The product URL you requested is not available through our merchant sources.
- Some fields (eg. price, stock availability, image, brand) are missing from the merchant
  feeds.
- 'Rate limit: 100 requests every 1 second'
- '400: Invalid or missing request parameters. The response might contain hints on
  what is wrong or missing.'
- '500: Server error. If the error persists please get in contact with our team.'
- '500: Server error. If the error persists please get in contact with our team'
- 'REQUEST_LIMIT_EXCEEDED: You have gone over the amount of requests allowed'
- 400 Required information is missing or invalid
- 401 Authentication information is missing or invalid
- 403 Unauthorized
- 500 Unexpected server error
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects: []
client:
  base_url: https://viglink.io/v1/reports/transactions
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
