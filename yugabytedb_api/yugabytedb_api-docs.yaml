resources:
- name: table
  endpoint:
    path: /api/v1/tables
    method: GET
    data_selector: data
- name: YugabyteDB Java Driver for YCQL
  endpoint:
    path: /preview/drivers-orms/scala/ycql/
    method: GET
    data_selector: records
- name: table
  endpoint:
    path: /api/v1/tables
    method: GET
    data_selector: tables
    params: {}
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: YugabyteDB JDBC Smart Driver
  endpoint:
    path: /drivers/java/yugabyte-jdbc
    method: GET
    data_selector: CRUD
    params: {}
- name: YugabyteDB R2DBC Smart Driver
  endpoint:
    path: /drivers/java/yb-r2dbc
    method: GET
    data_selector: CRUD
    params: {}
- name: YugabyteDB PGX Smart Driver
  endpoint:
    path: /drivers/go/yb-pgx
    method: GET
    data_selector: CRUD
    params: {}
- name: YugabyteDB Psycopg2 Smart Driver
  endpoint:
    path: /drivers/python/yugabyte-psycopg2
    method: GET
    data_selector: CRUD
    params: {}
- name: YugabyteDB node-postgres Smart Driver
  endpoint:
    path: /drivers/nodejs/yugabyte-node-driver
    method: GET
    data_selector: CRUD
    params: {}
- name: YugabyteDB C# Smart Driver for YSQL
  endpoint:
    path: /drivers/csharp/ysql
    method: GET
    data_selector: CRUD
    params: {}
- name: YugabyteDB ruby-pg Smart Driver
  endpoint:
    path: /drivers/ruby/yb-ruby-pg
    method: GET
    data_selector: CRUD
    params: {}
- name: YugabyteDB Java Driver for YCQL
  endpoint:
    path: /drivers/scala/ycql
    method: GET
    data_selector: CRUD
    params: {}
- name: data_modeling
  endpoint:
    path: /api/v1/data/modeling
    method: GET
    data_selector: records
- name: deployments
  endpoint:
    path: /api/v1/deployments
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: table_data
  endpoint:
    path: /services/data/v1/tables
    method: GET
    data_selector: records
- name: data_modeling
  endpoint:
    path: /preview/develop/data-modeling/
    method: GET
    data_selector: records
- name: users
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/v1/transactions
    method: GET
    data_selector: data
    params: {}
- name: cluster
  endpoint:
    path: /clusters
    method: GET
    data_selector: clusters
- name: sample-app
  endpoint:
    path: /sample-app
    method: GET
    data_selector: records
- name: DemoAccount
  endpoint:
    path: /DemoAccount
    method: GET
    data_selector: records
- name: universe
  endpoint:
    path: /api/v1/universes
    method: GET
    data_selector: universes
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Supports multiple database types including PostgreSQL compatibility.
- Requires setup of connected app in YugabyteDB
- Some objects may return nulls in deeply nested fields
- Setup requires OAuth2 authentication.
- Rate limits apply to API requests.
- Requires authentication setup for API access
- Some endpoints may have specific requirements
- Uses gRPC protocol for Change Data Capture
- Some queries may return nulls in deeply nested fields
- Some objects like Contact may return nulls in deeply nested fields
- Uses various drivers and ORMs for integration
- Best practices for data modeling and performance are recommended
- Uses OAuth2 with refresh token — requires setup of connected app in YugabyteDB
- YSQL data modeling
- Best practices for applications
- Requires setup of OAuth2 credentials in YugabyteDB.
- Some APIs may have rate limits.
- Uses TLS to secure connections to the database.
- YugabyteDB Aeon requires SSL connections
- Requires your computer to be added to the cluster IP allow list and an SSL connection.
- Requires the VPC or machine hosting the application to be added to the cluster IP
  allow list and an SSL connection.
- OAuth2 authentication is required for API access.
errors:
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Ensure valid credentials are provided.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429 Too Many Requests: Throttle your API requests.'
- '401 Unauthorized: Check your credentials and scopes.'
- '400 Bad Request: Check request parameters'
- '403 Forbidden: Ensure proper permissions'
- '500 Internal Server Error: Retry after some time'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check your OAuth2 credentials.'
- '429 Too Many Requests: Rate limit exceeded.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - OAuthToken
  - NamedCredential
  - LDAP authentication
  - OIDC with Azure AD
client:
  base_url: 127.0.0.1:5433
  headers:
    Accept: application/json
source_metadata: null
