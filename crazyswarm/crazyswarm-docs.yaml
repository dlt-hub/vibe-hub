resources:
- name: position
  endpoint:
    path: /position
    method: GET
    data_selector: position
    params: {}
- name: getParam
  endpoint:
    path: /getParam
    method: GET
    data_selector: paramValue
    params: {}
- name: setParam
  endpoint:
    path: /setParam
    method: POST
    data_selector: result
    params: {}
- name: cmdFullState
  endpoint:
    path: /cmdFullState
    method: POST
    data_selector: result
    params: {}
- name: cmdVelocityWorld
  endpoint:
    path: /cmdVelocityWorld
    method: POST
    data_selector: result
    params: {}
- name: cmdStop
  endpoint:
    path: /cmdStop
    method: POST
    data_selector: result
    params: {}
- name: cmdPosition
  endpoint:
    path: /cmdPosition
    method: POST
    data_selector: result
    params: {}
- name: hover_swarm
  endpoint:
    path: /ros_ws/src/crazyswarm/launch/hover_swarm.launch
    method: GET
    data_selector: motion_capture_type
    params: {}
- name: hover_swarm
  endpoint:
    path: /ros_ws/src/crazyswarm/launch/hover_swarm.launch
    method: GET
    data_selector: settings
    params: {}
- name: motion_capture
  endpoint:
    path: /services/data/vXX.X/sobjects/MotionCapture
    method: GET
    data_selector: records
    params: {}
- name: hover_swarm
  endpoint:
    path: /hover_swarm.launch
    method: GET
    data_selector: settings
    params: {}
- name: crazyflieTypes
  endpoint:
    path: /crazyflieTypes.yaml
    method: GET
    data_selector: crazyflieTypes
    params: {}
- name: crazyflies
  endpoint:
    path: /ros_ws/src/crazyswarm/launch/crazyflies.yaml
    method: GET
    data_selector: crazyflies
    params: {}
- name: crazyflieTypes
  endpoint:
    path: /ros_ws/src/crazyswarm/launch/crazyflieTypes.yaml
    method: GET
    data_selector: crazyflieTypes
    params: {}
- name: hardware_components
  endpoint:
    path: /hardware/components
    method: GET
    data_selector: components
    params: {}
- name: medium_quadrotor
  endpoint:
    path: /hardware/medium_quadrotor
    method: GET
    data_selector: components
    params: {}
- name: large_quadrotor
  endpoint:
    path: /hardware/large_quadrotor
    method: GET
    data_selector: components
    params: {}
notes:
- The param 'ring/effect' must be set to 7 (solid color) for this command to have
  any effect.
- This is a blocking command, so it may cause stability problems for large swarms
  and/or high-frequency changes.
- Must set the environment variable $CSW_PYTHON to the name of your Python interpreter
- 'Avoid using a virtual machine if possible: they add additional latency and might
  cause issues with the visualization tools.'
- Crazyflies must be rebooted after any change of the channel/address for the changes
  to take effect.
- If you have trouble with receiving data, you can try setting 'motion_capture_interface_ip'
  to the IP of the interface that you want to use.
- If using a custom-built firmware, you can also use chooser.py.
- Crazyswarm is tested with the official Bitcraze firmwares for the Crazyflie and
  Crazyradio.
- The usage of a motion capture system can be disabled by selecting 'none'.
- Bindings are useful for testing and implementing new Crazyflie firmware modules.
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: ros_ws/src/crazyswarm/launch
  headers:
    Accept: application/json
source_metadata: null
