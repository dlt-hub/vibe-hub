resources:
- name: create_referral
  endpoint:
    path: /iterable/referral
    method: GET
    params:
      deployment: company.talon.one
      campaignId: '5843'
      advocateProfileIntegrationId: testAdvocateProfile
      friendProfileIntegrationId: testFriendProfile
      startDate: '2022-09-30T15:35:02Z'
      expiryDate: '2022-10-30T15:35:02Z'
      usageLimit: '1'
- name: customerSession
  endpoint:
    path: /customerSession
    method: GET
    data_selector: customerSession
- name: customerProfile
  endpoint:
    path: /customerProfile
    method: GET
    data_selector: customerProfile
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: event
- name: loyalty
  endpoint:
    path: /loyalty
    method: GET
    data_selector: loyalty
- name: referral
  endpoint:
    path: /referral
    method: GET
    data_selector: referral
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    data_selector: coupons
- name: triggeredCampaigns
  endpoint:
    path: /triggeredCampaigns
    method: GET
    data_selector: triggeredCampaigns
- name: effects
  endpoint:
    path: /effects
    method: GET
    data_selector: effects
- name: ruleFailureReasons
  endpoint:
    path: /ruleFailureReasons
    method: GET
    data_selector: ruleFailureReasons
- name: createdCoupons
  endpoint:
    path: /createdCoupons
    method: GET
    data_selector: createdCoupons
- name: createdReferrals
  endpoint:
    path: /createdReferrals
    method: GET
    data_selector: createdReferrals
- name: awardedGiveaways
  endpoint:
    path: /awardedGiveaways
    method: GET
    data_selector: awardedGiveaways
- name: return
  endpoint:
    path: /return
    method: GET
    data_selector: return
- name: previousReturns
  endpoint:
    path: /previousReturns
    method: GET
    data_selector: previousReturns
- name: coupon
  endpoint:
    path: /iterable/coupon
    method: GET
    data_selector: couponCodes
    params:
      deployment: company.talon.one
      applicationId: 316
      campaignId: 5843
      iterableCampaignId: iterableCampaign
      usageLimit: 1
- name: coupon_reservation
  endpoint:
    path: /braze/coupon_reservation
    method: POST
    data_selector: coupon_reservation
- name: customerSession
  endpoint:
    path: /customer/session
    method: GET
    data_selector: customerSession
- name: customerProfile
  endpoint:
    path: /customer/profile
    method: GET
    data_selector: customerProfile
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: event
- name: loyalty
  endpoint:
    path: /loyalty
    method: GET
    data_selector: loyalty
- name: referral
  endpoint:
    path: /referral
    method: GET
    data_selector: referral
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    data_selector: coupons
- name: createdCoupons
  endpoint:
    path: /createdCoupons
    method: GET
    data_selector: createdCoupons
- name: createdReferrals
  endpoint:
    path: /createdReferrals
    method: GET
    data_selector: createdReferrals
- name: awardedGiveaways
  endpoint:
    path: /awardedGiveaways
    method: GET
    data_selector: awardedGiveaways
- name: returns
  endpoint:
    path: /returns
    method: GET
    data_selector: return
- name: track_event
  endpoint:
    path: /segment/v2/events
    method: PUT
    data_selector: event
    params:
      skipNonExistingAttributes: 'false'
- name: customer_profile
  endpoint:
    path: /segment/v2/customer_profiles/{customerProfileId}
    method: PUT
    data_selector: attributes
    params:
      skipNonExistingAttributes: 'false'
- name: customer_profile_audiences
  endpoint:
    path: /segment/customer_profiles/{customerProfileId}/audiences
    method: PUT
    data_selector: data
- name: customerSession
  endpoint:
    path: /customer/session
    method: POST
    data_selector: customerSession
- name: customerProfile
  endpoint:
    path: /customer/profile
    method: GET
    data_selector: customerProfile
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: event
- name: loyalty
  endpoint:
    path: /loyalty
    method: GET
    data_selector: loyalty
- name: referral
  endpoint:
    path: /referral
    method: GET
    data_selector: referral
- name: audiences
  endpoint:
    path: /segment/customer_profiles/audiences
    method: PUT
    data_selector: data
- name: customer_profiles_audiences
  endpoint:
    path: /segment/v2/customer_profiles/audiences
    method: PUT
    data_selector: data
    params: {}
- name: customerSession
  endpoint:
    path: /customerSession
    method: GET
    data_selector: customerSession
- name: customerProfile
  endpoint:
    path: /customerProfile
    method: GET
    data_selector: customerProfile
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: event
- name: loyalty
  endpoint:
    path: /loyalty
    method: GET
    data_selector: loyalty
- name: referral
  endpoint:
    path: /referral
    method: GET
    data_selector: referral
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    data_selector: coupons
- name: triggeredCampaigns
  endpoint:
    path: /triggeredCampaigns
    method: GET
    data_selector: triggeredCampaigns
- name: audience
  endpoint:
    path: /segment/audiences
    method: POST
    data_selector: audienceId
    params: {}
- name: audience
  endpoint:
    path: /segment/audiences/{audienceId}
    method: PUT
    data_selector: application/json
    params: {}
- name: customerSession
  endpoint:
    path: /customer/session
    method: GET
    data_selector: customerSession
- name: customerProfile
  endpoint:
    path: /customer/profile
    method: GET
    data_selector: customerProfile
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: event
- name: loyalty
  endpoint:
    path: /loyalty
    method: GET
    data_selector: loyalty
- name: referral
  endpoint:
    path: /referral
    method: GET
    data_selector: referral
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    data_selector: coupons
- name: triggeredCampaigns
  endpoint:
    path: /triggered/campaigns
    method: GET
    data_selector: triggeredCampaigns
- name: effects
  endpoint:
    path: /effects
    method: GET
    data_selector: effects
- name: ruleFailureReasons
  endpoint:
    path: /rule/failure/reasons
    method: GET
    data_selector: ruleFailureReasons
- name: createdCoupons
  endpoint:
    path: /created/coupons
    method: GET
    data_selector: createdCoupons
- name: createdReferrals
  endpoint:
    path: /created/referrals
    method: GET
    data_selector: createdReferrals
- name: awardedGiveaways
  endpoint:
    path: /awarded/giveaways
    method: GET
    data_selector: awardedGiveaways
- name: return
  endpoint:
    path: /return
    method: GET
    data_selector: return
- name: previousReturns
  endpoint:
    path: /previous/returns
    method: GET
    data_selector: previousReturns
- name: audience
  endpoint:
    path: /segment/audiences/{audienceId}
    method: DELETE
- name: coupon
  endpoint:
    path: /iterable/coupon
    method: GET
    data_selector: ''
    params:
      deployment: company.talon.one
      applicationId: 316
      campaignId: 5843
      iterableCampaignId: iterableCampaign
      usageLimit: 1
- name: create_referral
  endpoint:
    path: /iterable/referral
    method: GET
    data_selector: ''
    params:
      deployment: string
      campaignId: integer
      advocateProfileIntegrationId: string
      friendProfileIntegrationId: string
      startDate: string
      expiryDate: string
      usageLimit: integer
      attributes: object
- name: loyalty_ledger
  endpoint:
    path: /get/iterable/loyalty
    method: GET
    params:
      deployment: company.talon.one
      profileIntegrationId: URN-GV8294NV
      loyaltyProgramId: '25'
- name: customerSession
  endpoint:
    path: /loyalty/ledger
    method: GET
    data_selector: customerSession
    params: {}
- name: customerProfile
  endpoint:
    path: /loyalty/ledger
    method: GET
    data_selector: customerProfile
    params: {}
- name: event
  endpoint:
    path: /loyalty/ledger
    method: GET
    data_selector: event
    params: {}
- name: loyalty
  endpoint:
    path: /loyalty/ledger
    method: GET
    data_selector: loyalty
    params: {}
- name: referral
  endpoint:
    path: /loyalty/ledger
    method: GET
    data_selector: referral
    params: {}
- name: coupons
  endpoint:
    path: /loyalty/ledger
    method: GET
    data_selector: coupons
    params: {}
- name: triggeredCampaigns
  endpoint:
    path: /loyalty/ledger
    method: GET
    data_selector: triggeredCampaigns
    params: {}
- name: effects
  endpoint:
    path: /loyalty/ledger
    method: GET
    data_selector: effects
    params: {}
- name: ruleFailureReasons
  endpoint:
    path: /loyalty/ledger
    method: GET
    data_selector: ruleFailureReasons
    params: {}
- name: createdCoupons
  endpoint:
    path: /loyalty/ledger
    method: GET
    data_selector: createdCoupons
    params: {}
- name: createdReferrals
  endpoint:
    path: /loyalty/ledger
    method: GET
    data_selector: createdReferrals
    params: {}
- name: awardedGiveaways
  endpoint:
    path: /loyalty/ledger
    method: GET
    data_selector: awardedGiveaways
    params: {}
- name: return
  endpoint:
    path: /loyalty/ledger
    method: GET
    data_selector: return
    params: {}
- name: previousReturns
  endpoint:
    path: /loyalty/ledger
    method: GET
    data_selector: previousReturns
    params: {}
- name: add_loyalty_points
  endpoint:
    path: /customer_engagement/add_loyalty_points
    method: POST
    data_selector: body
- name: coupons
  endpoint:
    path: /emarsys/customer_profiles/coupons
    method: POST
    data_selector: records
- name: loyalty_balance
  endpoint:
    path: /emarsys/loyalty_programs/profile/balance
    method: POST
    data_selector: response
    params:
      deployment: company.talon.one
- name: customer_profiles_audiences
  endpoint:
    path: /segment/customer_profiles/audiences
    method: PUT
    data_selector: data
    params: {}
- name: coupon
  endpoint:
    path: /iterable/coupon
    method: GET
    params:
      deployment: string
      applicationId: integer
      campaignId: integer
      iterableCampaignId: string
      startDate: string
      expiryDate: string
      discountLimit: integer
      recipientIntegrationId: string
      usageLimit: integer
      attributes: object
- name: customerSession
  endpoint:
    path: /customer/session
    method: GET
    data_selector: customerSession
    params: {}
- name: customerProfile
  endpoint:
    path: /customer/profile
    method: GET
    data_selector: customerProfile
    params: {}
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: event
    params: {}
- name: loyalty
  endpoint:
    path: /loyalty
    method: GET
    data_selector: loyalty
    params: {}
- name: referral
  endpoint:
    path: /referral
    method: GET
    data_selector: referral
    params: {}
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    data_selector: coupons
    params: {}
- name: triggeredCampaigns
  endpoint:
    path: /triggered/campaigns
    method: GET
    data_selector: triggeredCampaigns
    params: {}
- name: effects
  endpoint:
    path: /effects
    method: GET
    data_selector: effects
    params: {}
- name: ruleFailureReasons
  endpoint:
    path: /rule/failure/reasons
    method: GET
    data_selector: ruleFailureReasons
    params: {}
- name: createdCoupons
  endpoint:
    path: /created/coupons
    method: GET
    data_selector: createdCoupons
    params: {}
- name: createdReferrals
  endpoint:
    path: /created/referrals
    method: GET
    data_selector: createdReferrals
    params: {}
- name: awardedGiveaways
  endpoint:
    path: /awarded/giveaways
    method: GET
    data_selector: awardedGiveaways
    params: {}
- name: return
  endpoint:
    path: /return
    method: GET
    data_selector: return
    params: {}
- name: previousReturns
  endpoint:
    path: /previous/returns
    method: GET
    data_selector: previousReturns
    params: {}
- name: referral
  endpoint:
    path: /iterable/referral
    method: GET
    params:
      deployment: string
      campaignId: integer
      advocateProfileIntegrationId: string
      friendProfileIntegrationId: string
      startDate: string
      expiryDate: string
      usageLimit: integer
      attributes: object
- name: loyalty_ledger
  endpoint:
    path: /get/iterable/loyalty
    method: GET
    params:
      deployment: company.talon.one
      profileIntegrationId: URN-GV8294NV
      loyaltyProgramId: 25
- name: send_event
  endpoint:
    path: /mparticle
    method: POST
    data_selector: application/json
    params: {}
- name: customer_profile
  endpoint:
    path: /segment/customer_profile/{customerProfileId}
    method: PUT
    data_selector: attributes
    params: {}
- name: customerSession
  endpoint:
    path: /customerSession
    method: GET
    data_selector: customerSession
- name: customerProfile
  endpoint:
    path: /customerProfile
    method: GET
    data_selector: customerProfile
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: event
- name: loyalty
  endpoint:
    path: /loyalty
    method: GET
    data_selector: loyalty
- name: referral
  endpoint:
    path: /referral
    method: GET
    data_selector: referral
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    data_selector: coupons
- name: triggeredCampaigns
  endpoint:
    path: /triggeredCampaigns
    method: GET
    data_selector: triggeredCampaigns
- name: effects
  endpoint:
    path: /effects
    method: GET
    data_selector: effects
- name: ruleFailureReasons
  endpoint:
    path: /ruleFailureReasons
    method: GET
    data_selector: ruleFailureReasons
- name: createdCoupons
  endpoint:
    path: /createdCoupons
    method: GET
    data_selector: createdCoupons
- name: createdReferrals
  endpoint:
    path: /createdReferrals
    method: GET
    data_selector: createdReferrals
- name: awardedGiveaways
  endpoint:
    path: /awardedGiveaways
    method: GET
    data_selector: awardedGiveaways
- name: return
  endpoint:
    path: /return
    method: GET
    data_selector: return
- name: previousReturns
  endpoint:
    path: /previousReturns
    method: GET
    data_selector: previousReturns
- name: customer_profile_v2
  endpoint:
    path: /segment/customer_profile_v2/{customerProfileId}
    method: PUT
    data_selector: attributes
    params: {}
- name: customer_profiles
  endpoint:
    path: /segment/v2/customer_profiles/{customerProfileId}
    method: PUT
    data_selector: attributes
    params:
      skipNonExistingAttributes: 'false'
- name: customer_profile_audiences
  endpoint:
    path: /segment/customer_profiles/{customerProfileId}/audiences
    method: PUT
    data_selector: data
- name: customerSession
  endpoint:
    path: /customer/session
    method: POST
    data_selector: customerSession
- name: customerProfile
  endpoint:
    path: /customer/profile
    method: GET
    data_selector: customerProfile
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: event
- name: loyalty
  endpoint:
    path: /loyalty
    method: GET
    data_selector: loyalty
- name: referral
  endpoint:
    path: /referral
    method: GET
    data_selector: referral
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    data_selector: coupons
- name: update_audiences
  endpoint:
    path: /segment/customer_profiles/audiences
    method: PUT
    data_selector: data
- name: update_audiences
  endpoint:
    path: /segment/v2/customer_profiles/audiences
    method: PUT
    data_selector: data
    params: {}
- name: track_event
  endpoint:
    path: /segment/event
    method: PUT
    data_selector: ''
- name: track_event
  endpoint:
    path: /segment/v2/events
    method: PUT
    data_selector: eventAttributes
    params:
      skipNonExistingAttributes: 'false'
- name: audience
  endpoint:
    path: /segment/audiences
    method: POST
    data_selector: audience
    params: {}
- name: update_audience
  endpoint:
    path: /segment/audiences/{audienceId}
    method: PUT
    data_selector: audienceId
    params: {}
- name: delete_audience
  endpoint:
    path: /delete/segment/audiences/{audienceId}
    method: DELETE
    params:
      audienceId: required
- name: customerSession
  endpoint:
    path: /customerSession
    method: GET
    data_selector: customerSession
    params: {}
- name: customerProfile
  endpoint:
    path: /customerProfile
    method: GET
    data_selector: customerProfile
    params: {}
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: event
    params: {}
- name: loyalty
  endpoint:
    path: /loyalty
    method: GET
    data_selector: loyalty
    params: {}
- name: referral
  endpoint:
    path: /referral
    method: GET
    data_selector: referral
    params: {}
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    data_selector: coupons
    params: {}
- name: triggeredCampaigns
  endpoint:
    path: /triggeredCampaigns
    method: GET
    data_selector: triggeredCampaigns
    params: {}
- name: effects
  endpoint:
    path: /effects
    method: GET
    data_selector: effects
    params: {}
- name: ruleFailureReasons
  endpoint:
    path: /ruleFailureReasons
    method: GET
    data_selector: ruleFailureReasons
    params: {}
- name: createdCoupons
  endpoint:
    path: /createdCoupons
    method: GET
    data_selector: createdCoupons
    params: {}
- name: createdReferrals
  endpoint:
    path: /createdReferrals
    method: GET
    data_selector: createdReferrals
    params: {}
- name: awardedGiveaways
  endpoint:
    path: /awardedGiveaways
    method: GET
    data_selector: awardedGiveaways
    params: {}
- name: return
  endpoint:
    path: /return
    method: GET
    data_selector: return
    params: {}
- name: previousReturns
  endpoint:
    path: /previousReturns
    method: GET
    data_selector: previousReturns
    params: {}
- name: update_customer_session
  endpoint:
    path: /segment/customer_sessions/{customerSessionId}
    method: PUT
- name: customerSession
  endpoint:
    path: /customerSession
    method: GET
    data_selector: customerSession
    params: {}
- name: customerProfile
  endpoint:
    path: /customerProfile
    method: GET
    data_selector: customerProfile
    params: {}
- name: event
  endpoint:
    path: /event
    method: GET
    data_selector: event
    params: {}
- name: loyalty
  endpoint:
    path: /loyalty
    method: GET
    data_selector: loyalty
    params: {}
- name: referral
  endpoint:
    path: /referral
    method: GET
    data_selector: referral
    params: {}
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    data_selector: coupons
    params: {}
- name: triggeredCampaigns
  endpoint:
    path: /triggeredCampaigns
    method: GET
    data_selector: triggeredCampaigns
    params: {}
- name: effects
  endpoint:
    path: /effects
    method: GET
    data_selector: effects
    params: {}
- name: ruleFailureReasons
  endpoint:
    path: /ruleFailureReasons
    method: GET
    data_selector: ruleFailureReasons
    params: {}
- name: createdCoupons
  endpoint:
    path: /createdCoupons
    method: GET
    data_selector: createdCoupons
    params: {}
- name: createdReferrals
  endpoint:
    path: /createdReferrals
    method: GET
    data_selector: createdReferrals
    params: {}
- name: awardedGiveaways
  endpoint:
    path: /awardedGiveaways
    method: GET
    data_selector: awardedGiveaways
    params: {}
- name: return
  endpoint:
    path: /return
    method: GET
    data_selector: return
    params: {}
- name: previousReturns
  endpoint:
    path: /previousReturns
    method: GET
    data_selector: previousReturns
    params: {}
- name: customer_sessions
  endpoint:
    path: /segment/v2/customer_sessions/{customerSessionId}
    method: PUT
    data_selector: response
    params:
      skipNonExistingAttributes: 'false'
- name: achievements
  endpoint:
    path: /v1/customer_profiles/{integrationId}/achievements
    method: GET
    data_selector: data
    params: {}
- name: create_audience
  endpoint:
    path: /v2/audiences
    method: POST
    data_selector: ''
    params: {}
- name: delete_audience
  endpoint:
    path: /delete/v2/audiences/{audienceId}
    method: DELETE
    data_selector: data
    params: {}
- name: update_audience_name
  endpoint:
    path: /put/v2/audiences/{audienceId}
    method: PUT
    data_selector: data
    params: {}
- name: delete_audience_memberships
  endpoint:
    path: /delete/v2/audiences/{audienceId}/memberships
    method: DELETE
    data_selector: data
    params: {}
- name: update_multiple_customer_profiles_audiences
  endpoint:
    path: /post/v2/customer_audiences
    method: POST
    data_selector: data
    params: {}
- name: audience_customers
  endpoint:
    path: /v2/audience_customers/{audienceId}/attributes
    method: PUT
- name: catalogs
  endpoint:
    path: /v1/catalogs/{catalogId}/sync
    method: PUT
- name: create_coupon_reservation
  endpoint:
    path: /v1/coupon_reservations/{couponValue}
    method: POST
    data_selector: body
- name: delete_coupon_reservation
  endpoint:
    path: /v1/coupon_reservations/{couponValue}
    method: DELETE
    data_selector: body
- name: list_customers_with_coupon_reserved
  endpoint:
    path: /v1/coupon_reservations/customerprofiles/{couponValue}
    method: GET
    data_selector: data
- name: update_customer_profile
  endpoint:
    path: /v2/customer_profiles/{integrationId}
    method: PUT
    data_selector: body
- name: customer_profiles
  endpoint:
    path: /v2/customer_profiles
    method: PUT
    data_selector: customerProfiles
    params:
      silent: 'yes'
- name: customer_data
  endpoint:
    path: /v1/customer_data/{integrationId}
    method: DELETE
- name: customer_inventory
  endpoint:
    path: /v1/customer_profiles/{integrationId}/inventory
    method: GET
- name: customer_sessions
  endpoint:
    path: /v2/customer_sessions/{customerSessionId}
    method: PUT
- name: customer_session
  endpoint:
    path: /v2/customer_sessions/{customerSessionId}
    method: GET
- name: return_cart_items
  endpoint:
    path: /v2/customer_sessions/{customerSessionId}/returns
    method: POST
    data_selector: data
    params:
      dry: boolean
- name: reopen_customer_session
  endpoint:
    path: /v2/customer_sessions/{customerSessionId}/reopen
    method: PUT
    data_selector: data
    params: {}
- name: track_event
  endpoint:
    path: /v2/events
    method: POST
    data_selector: data
    params:
      silent: string
      dry: boolean
      forceCompleteEvaluation: boolean
- name: loyalty_balances
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/profile/{integrationId}/balances
    method: GET
    data_selector: data
    params:
      loyaltyProgramId: required
      integrationId: required
- name: loyalty_transactions
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/profile/{integrationId}/transactions
    method: GET
    data_selector: data
    params:
      loyaltyProgramId: required
      integrationId: required
- name: unused_loyalty_points
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/profile/{integrationId}/points
    method: GET
    data_selector: data
    params:
      loyaltyProgramId: required
      integrationId: required
- name: link_customer_profile_to_card
  endpoint:
    path: /v2/loyalty_programs/{loyaltyProgramId}/cards/{loyaltyCardId}/link_profile
    method: POST
    data_selector: body
- name: get_card_point_balances
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards/{loyaltyCardId}/balances
    method: GET
    data_selector: data
- name: list_card_transactions
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards/{loyaltyCardId}/transactions
    method: GET
    data_selector: data
- name: loyalty_card_points
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards/{loyaltyCardId}/points
    method: GET
    data_selector: data
- name: generate_loyalty_card
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards
    method: POST
    data_selector: data
- name: create_referral_code
  endpoint:
    path: /v1/referrals
    method: POST
    data_selector: data
- name: referrals_for_multiple_advocates
  endpoint:
    path: /v1/referrals_for_multiple_advocates
    method: POST
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /v1/users
    method: GET
    params:
      pageSize: '1000'
- name: scim_groups
  endpoint:
    path: /v1/provisioning/scim/Groups
    method: GET
- name: Create SCIM group
  endpoint:
    path: /v1/provisioning/scim/Groups
    method: POST
- name: Get SCIM group
  endpoint:
    path: /v1/provisioning/scim/Groups/{groupId}
    method: GET
- name: Delete SCIM group
  endpoint:
    path: /v1/provisioning/scim/Groups/{groupId}
    method: DELETE
- name: Update SCIM group
  endpoint:
    path: /v1/provisioning/scim/Groups/{groupId}
    method: PUT
- name: Update SCIM group attributes
  endpoint:
    path: /v1/provisioning/scim/Groups/{groupId}
    method: PATCH
- name: List SCIM users
  endpoint:
    path: /v1/provisioning/scim/Users
    method: GET
- name: Create SCIM user
  endpoint:
    path: /v1/provisioning/scim/Users
    method: POST
- name: Get SCIM user
  endpoint:
    path: /v1/provisioning/scim/Users/{userId}
    method: GET
    data_selector: id
    params: {}
- name: Delete SCIM user
  endpoint:
    path: /v1/provisioning/scim/Users/{userId}
    method: DELETE
    data_selector: id
    params: {}
- name: Update SCIM user
  endpoint:
    path: /v1/provisioning/scim/Users/{userId}
    method: PUT
    data_selector: id
    params: {}
- name: Update SCIM user attributes
  endpoint:
    path: /v1/provisioning/scim/Users/{userId}
    method: PATCH
    data_selector: id
    params: {}
- name: List supported SCIM resource types
  endpoint:
    path: /v1/provisioning/scim/ResourceTypes
    method: GET
    data_selector: id
    params: {}
- name: Get SCIM service provider configuration
  endpoint:
    path: /v1/provisioning/scim/ServiceProviderConfig
    method: GET
    data_selector: id
    params: {}
- name: List supported SCIM schemas
  endpoint:
    path: /v1/provisioning/scim/Schemas
    method: GET
    data_selector: id
    params: {}
- name: delete_user
  endpoint:
    path: /v1/users/delete
    method: POST
    data_selector: 'null'
    params: {}
- name: activate_user
  endpoint:
    path: /v1/users/activate
    method: POST
    data_selector: 'null'
    params: {}
- name: deactivate_user
  endpoint:
    path: /v1/users/deactivate
    method: POST
    data_selector: 'null'
    params: {}
- name: invite_user
  endpoint:
    path: /v1/users/invite
    method: POST
    data_selector: 'null'
    params: {}
- name: resend_invitation_email
  endpoint:
    path: /v1/invite_emails
    method: POST
    data_selector: 'null'
    params: {}
- name: request_password_reset
  endpoint:
    path: /v1/password_recovery_emails
    method: POST
    data_selector: 'null'
    params: {}
- name: reset_password
  endpoint:
    path: /v1/reset_password
    method: POST
    data_selector: 'null'
    params: {}
- name: get_account_details
  endpoint:
    path: /v1/accounts/{accountId}
    method: GET
    data_selector: 'null'
    params: {}
- name: account_analytics
  endpoint:
    path: /v1/accounts/{accountId}/analytics
    method: GET
    data_selector: analytics
    params: {}
- name: create_achievement
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/achievements
    method: POST
    data_selector: achievement
    params: {}
- name: list_achievements
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/achievements
    method: GET
    data_selector: achievements
    params: {}
- name: get_achievement
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/achievements/{achievementId}
    method: GET
    data_selector: achievement
    params: {}
- name: update_achievement
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/achievements/{achievementId}
    method: PUT
- name: delete_achievement
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/achievements/{achievementId}
    method: DELETE
- name: export_achievement_customer_data
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/achievements/{achievementId}/export
    method: GET
- name: list_customer_achievements
  endpoint:
    path: /v1/applications/{applicationId}/achievement_progress/{integrationId}
    method: GET
- name: create_additional_cost
  endpoint:
    path: /v1/additional_costs
    method: POST
- name: additional_costs
  endpoint:
    path: /v1/additional_costs
    method: GET
    data_selector: results
    params:
      pageSize: 1000
- name: export_effects
  endpoint:
    path: /v1/applications/{applicationId}/export_effects
    method: GET
    data_selector: results
- name: export_customer_sessions
  endpoint:
    path: /v1/applications/{applicationId}/export_customer_sessions
    method: GET
    data_selector: results
- name: list_applications
  endpoint:
    path: /v1/applications
    method: GET
    params: {}
- name: get_application
  endpoint:
    path: /v1/applications/{applicationId}
    method: GET
    params: {}
- name: get_application_health
  endpoint:
    path: /v1/applications/{applicationId}/health_report
    method: GET
    params: {}
- name: create_custom_attribute
  endpoint:
    path: /v1/attributes
    method: POST
    params: {}
- name: list_custom_attributes
  endpoint:
    path: /v1/attributes
    method: GET
    params: {}
- name: get_custom_attribute
  endpoint:
    path: /v1/attributes/{attributeId}
    method: GET
    params: {}
- name: audiences
  endpoint:
    path: /v1/audiences
    method: GET
    data_selector: audiences
    params: {}
- name: audience_memberships
  endpoint:
    path: /v1/audiences/{audienceId}/memberships
    method: GET
    data_selector: memberships
    params:
      pageSize: 1000
- name: audience_analytics
  endpoint:
    path: /v1/audiences/analytics
    method: GET
    data_selector: analytics
    params: {}
- name: campaign_access_groups
  endpoint:
    path: /v1/campaign_groups
    method: GET
    params:
      pageSize: 1000
- name: campaign_templates
  endpoint:
    path: /v1/campaign_templates
    method: GET
    params:
      pageSize: 1000
- name: create_campaign_from_template
  endpoint:
    path: /v1/applications/{applicationId}/create_campaign_from_template
    method: POST
    data_selector: body
    params: {}
- name: list_campaigns
  endpoint:
    path: /v1/applications/{applicationId}/campaigns
    method: GET
    data_selector: body
    params: {}
- name: get_campaign
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}
    method: GET
    data_selector: body
    params: {}
- name: update_campaign
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}
    method: PUT
    data_selector: body
    params: {}
- name: delete_campaign
  endpoint:
    path: /delete/v1/applications/{applicationId}/campaigns/{campaignId}
    method: DELETE
    params: {}
- name: copy_campaign
  endpoint:
    path: /post/v1/applications/{applicationId}/campaigns/{campaignId}/copy
    method: POST
    params: {}
- name: list_campaigns
  endpoint:
    path: /post/v1/applications/{applicationId}/campaigns_search
    method: POST
    params: {}
- name: list_campaign_rulesets
  endpoint:
    path: /get/v1/applications/{applicationId}/campaigns/{campaignId}/rulesets
    method: GET
    params: {}
- name: get_ruleset
  endpoint:
    path: /get/v1/applications/{applicationId}/campaigns/{campaignId}/rulesets/{rulesetId}
    method: GET
    params: {}
- name: get_campaign_analytics
  endpoint:
    path: /get/v1/applications/{applicationId}/campaigns/{campaignId}/analytics
    method: GET
    params: {}
- name: catalog_items
  endpoint:
    path: /v1/catalogs/{catalogId}/items
    method: GET
    params: {}
- name: collections
  endpoint:
    path: /v1/collections
    method: GET
    params: {}
- name: create_collection
  endpoint:
    path: /v1/collections
    method: POST
    params: {}
- name: get_collection
  endpoint:
    path: /v1/collections/{collectionId}
    method: GET
    params: {}
- name: update_collection
  endpoint:
    path: /v1/collections/{collectionId}
    method: PUT
    params: {}
- name: delete_collection
  endpoint:
    path: /v1/collections/{collectionId}
    method: DELETE
    params: {}
- name: get_collection_items
  endpoint:
    path: /v1/collections/{collectionId}/items
    method: GET
    data_selector: items
    params: {}
- name: list_collections_in_application
  endpoint:
    path: /v1/applications/{applicationId}/collections
    method: GET
    data_selector: collections
    params: {}
- name: list_collections_in_campaign
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/collections
    method: GET
    data_selector: collections
    params: {}
- name: create_campaign_level_collection
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/collections
    method: POST
    data_selector: collection
    params: {}
- name: get_campaign_level_collection
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/collections/{collectionId}
    method: GET
    data_selector: collection
    params: {}
- name: update_campaign_level_collection_description
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/collections/{collectionId}
    method: PUT
    data_selector: collection
    params: {}
- name: delete_campaign_level_collection
  endpoint:
    path: /delete/v1/applications/{applicationId}/campaigns/{campaignId}/collections/{collectionId}
    method: DELETE
    data_selector: ''
    params: {}
- name: import_data_into_existing_account_level_collection
  endpoint:
    path: /post/v1/collections/{collectionId}/import
    method: POST
    data_selector: ''
    params: {}
- name: import_data_into_existing_campaign_level_collection
  endpoint:
    path: /post/v1/applications/{applicationId}/campaigns/{campaignId}/collections/{collectionId}/import
    method: POST
    data_selector: ''
    params: {}
- name: export_account_level_collection_items
  endpoint:
    path: /get/v1/collections/{collectionId}/export
    method: GET
    data_selector: ''
    params: {}
- name: export_campaign_level_collection_items
  endpoint:
    path: /get/v1/applications/{applicationId}/campaigns/{campaignId}/collections/{collectionId}/export
    method: GET
    data_selector: ''
    params: {}
- name: create_coupons
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/coupons
    method: POST
    data_selector: coupons
    params:
      silent: 'yes'
- name: update_coupons
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/coupons
    method: PUT
    data_selector: coupons
    params: {}
- name: delete_coupons
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/coupons
    method: DELETE
    data_selector: coupons
    params: {}
- name: create_coupons_with_recipients
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_with_recipients
    method: POST
    data_selector: coupons
    params:
      silent: 'yes'
- name: create_coupons_async
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_async
    method: POST
    data_selector: coupons
    params: {}
- name: coupons_deletion_jobs
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/coupons_deletion_jobs
    method: POST
- name: list_coupons
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/coupons/no_total
    method: GET
- name: update_coupon
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/coupons/{couponId}
    method: PUT
- name: Delete coupon
  endpoint:
    path: /delete/v1/applications/{applicationId}/campaigns/{campaignId}/coupons/{couponId}
    method: DELETE
    data_selector: response
    params: {}
- name: List coupons
  endpoint:
    path: /post/v1/applications/{applicationId}/campaigns/{campaignId}/coupons_search_advanced/no_total
    method: POST
    data_selector: response
    params:
      pageSize: 1000
- name: Import coupons
  endpoint:
    path: /post/v1/applications/{applicationId}/campaigns/{campaignId}/import_coupons
    method: POST
    data_selector: response
    params: {}
- name: export_coupons
  endpoint:
    path: /v1/applications/{applicationId}/export_coupons
    method: GET
    data_selector: records
    params: {}
- name: list_application_customers
  endpoint:
    path: /v1/applications/{applicationId}/customers
    method: GET
    data_selector: records
    params: {}
- name: customer_search
  endpoint:
    path: /v1/applications/{applicationId}/customer_search
    method: POST
    data_selector: records
    params: {}
- name: customer_profile
  endpoint:
    path: /v1/customers/{customerId}
    method: GET
    data_selector: records
    params: {}
- name: customer_profiles
  endpoint:
    path: /v1/customers/no_total
    method: GET
    params:
      pageSize: 1000
      skip: null
      sandbox: false
- name: application_customer
  endpoint:
    path: /v1/applications/{applicationId}/customers/{customerId}
    method: GET
    params:
      applicationId: null
      customerId: null
- name: customer_activity_reports
  endpoint:
    path: /v1/applications/{applicationId}/customer_activity_reports/no_total
    method: GET
    params:
      applicationId: null
      rangeStart: null
      rangeEnd: null
      pageSize: 1000
      skip: null
      sort: null
      name: null
      integrationId: null
      campaignName: null
      advocateName: null
- name: customer_analytics_report
  endpoint:
    path: /v1/applications/{applicationId}/customers/{customerId}/analytics
    method: GET
    params:
      applicationId: null
      customerId: null
      pageSize: 1000
      skip: null
      sort: null
- name: List Application sessions
  endpoint:
    path: /v1/applications/{applicationId}/sessions
    method: GET
    params:
      pageSize: '1000'
- name: Get Application session
  endpoint:
    path: /v1/applications/{applicationId}/sessions/{sessionId}
    method: GET
- name: List Applications events
  endpoint:
    path: /v1/applications/{applicationId}/events/no_total
    method: GET
    params:
      pageSize: '1000'
- name: List Applications event types
  endpoint:
    path: /v1/applications/{applicationId}/event_types
    method: GET
    params:
      pageSize: '1000'
- name: List event types
  endpoint:
    path: /v1/event_types
    method: GET
    params:
      pageSize: '1000'
- name: import_giveaway_codes
  endpoint:
    path: /v1/giveaways/pools/{poolId}/import
    method: POST
    data_selector: body
    params: {}
- name: export_giveaway_codes
  endpoint:
    path: /v1/giveaways/pools/{poolId}/export
    method: GET
    data_selector: body
    params: {}
- name: access_logs
  endpoint:
    path: /v1/applications/{applicationId}/access_logs/no_total
    method: GET
    data_selector: body
    params: {}
- name: message_logs
  endpoint:
    path: /v1/message_logs
    method: GET
    data_selector: body
    params: {}
- name: audit_logs
  endpoint:
    path: /v1/changes
    method: GET
    data_selector: records
- name: exports
  endpoint:
    path: /v1/exports
    method: GET
    data_selector: records
- name: loyalty_programs
  endpoint:
    path: /v1/loyalty_programs
    method: GET
    data_selector: records
- name: loyalty_program
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}
    method: GET
    data_selector: records
- name: loyalty_dashboard
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/dashboard
    method: GET
    data_selector: records
- name: import_loyalty_points
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/import_points
    method: POST
    data_selector: upFile
    params:
      notificationsEnabled: 'true'
- name: import_customers_tiers
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/import_customers_tiers
    method: POST
    data_selector: upFile
    params: {}
- name: get_customer_loyalty_ledger
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/profile/{integrationId}
    method: GET
    data_selector: ''
    params: {}
- name: add_points_to_customer_profile
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/profile/{integrationId}/add_points
    method: PUT
    data_selector: body
    params: {}
- name: deduct_points
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/profile/{integrationId}/deduct_points
    method: PUT
    data_selector: body
    params: {}
- name: export_logs
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/profile/{integrationId}/export_log
    method: GET
    data_selector: body
    params:
      rangeStart: string <date-time>
      rangeEnd: string <date-time>
      dateFormat: string
- name: export_customers_tiers
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/export_customers_tiers
    method: GET
    data_selector: body
    params:
      subledgerIds: Array of strings
      tierNames: Array of strings
- name: export_customer_balances
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/export_customer_balances
    method: GET
    data_selector: body
    params:
      endDate: string <date-time>
- name: export_customer_balance
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/export_customer_balance
    method: GET
    data_selector: records
    params: {}
- name: list_loyalty_program_transactions
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/transactions
    method: GET
    data_selector: records
    params: {}
- name: import_loyalty_cards
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/import_cards
    method: POST
    data_selector: records
    params: {}
- name: create_loyalty_cards
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards/batch
    method: POST
    data_selector: records
    params: {}
- name: export_card_balances
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/export_card_balances
    method: GET
    data_selector: records
    params: {}
- name: list_loyalty_cards
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards
    method: GET
    params:
      pageSize: '1000'
- name: export_loyalty_cards
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards/export
    method: GET
- name: delete_loyalty_card
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards/{loyaltyCardId}
    method: DELETE
- name: update_loyalty_card_status
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards/{loyaltyCardId}
    method: PUT
- name: get_loyalty_card
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards/{loyaltyCardId}
    method: GET
- name: add_points
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards/{loyaltyCardId}/add_points
    method: PUT
    data_selector: body
    params: {}
- name: deduct_points
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards/{loyaltyCardId}/deduct_points
    method: PUT
    data_selector: body
    params: {}
- name: export_log
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards/{loyaltyCardId}/export_log
    method: GET
    data_selector: body
    params: {}
- name: list_transactions
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards/{loyaltyCardId}/logs
    method: GET
    data_selector: body
    params: {}
- name: transfer_card_data
  endpoint:
    path: /v1/loyalty_programs/{loyaltyProgramId}/cards/{loyaltyCardId}/transfer
    method: PUT
    data_selector: body
    params: {}
- name: delete_referral
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/referrals/{referralId}
    method: DELETE
    data_selector: response
    params: {}
- name: update_referral
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/referrals/{referralId}
    method: PUT
    data_selector: response
    params: {}
- name: list_referrals
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/referrals/no_total
    method: GET
    data_selector: response
    params: {}
- name: list_friends_referred
  endpoint:
    path: /v1/applications/{applicationId}/profile/{integrationId}/friends
    method: GET
    data_selector: response
    params: {}
- name: export_referrals
  endpoint:
    path: /v1/applications/{applicationId}/export_referrals
    method: GET
    data_selector: response
    params: {}
- name: import_referrals
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/import_referrals
    method: POST
    data_selector: response
    params: {}
- name: list_roles
  endpoint:
    path: /v2/roles
    method: GET
    data_selector: response
    params: {}
- name: get_role
  endpoint:
    path: /v2/roles/{roleId}
    method: GET
    data_selector: response
    params: {}
- name: update_role
  endpoint:
    path: /v2/roles/{roleId}
    method: PUT
    data_selector: response
    params: {}
- name: create_session
  endpoint:
    path: /v1/sessions
    method: POST
    data_selector: response
    params: {}
- name: destroy_session
  endpoint:
    path: /delete/v1/sessions
    method: DELETE
    data_selector: ''
    params: {}
- name: create_campaign_store_budget
  endpoint:
    path: /post/v1/applications/{applicationId}/campaigns/{campaignId}/stores/budgets
    method: POST
    data_selector: ''
    params: {}
- name: list_campaign_store_budget_limits
  endpoint:
    path: /get/v1/applications/{applicationId}/campaigns/{campaignId}/stores/budgets
    method: GET
    data_selector: ''
    params: {}
- name: delete_campaign_store_budgets
  endpoint:
    path: /delete/v1/applications/{applicationId}/campaigns/{campaignId}/stores/budgets
    method: DELETE
    data_selector: ''
    params: {}
- name: get_summary_of_campaign_store_budgets
  endpoint:
    path: /get/v1/applications/{applicationId}/campaigns/{campaignId}/stores/budgets/summary
    method: GET
    data_selector: ''
    params: {}
- name: import_campaign_store_budgets
  endpoint:
    path: /post/v1/applications/{applicationId}/campaigns/{campaignId}/stores/budgets/import
    method: POST
    data_selector: ''
    params: {}
- name: export_campaign_store_budgets
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/stores/budgets/export
    method: GET
    data_selector: budgets
    params: {}
- name: list_stores
  endpoint:
    path: /v1/applications/{applicationId}/stores
    method: GET
    data_selector: stores
    params: {}
- name: create_store
  endpoint:
    path: /v1/applications/{applicationId}/stores
    method: POST
    data_selector: store
    params: {}
- name: get_store
  endpoint:
    path: /v1/applications/{applicationId}/stores/{storeId}
    method: GET
    data_selector: store
    params: {}
- name: update_store
  endpoint:
    path: /v1/applications/{applicationId}/stores/{storeId}
    method: PUT
    data_selector: store
    params: {}
- name: delete_store
  endpoint:
    path: /v1/applications/{applicationId}/stores/{storeId}
    method: DELETE
    data_selector: store
    params: {}
- name: export_stores
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/stores/export
    method: GET
    data_selector: stores
    params:
      applicationId: required
      campaignId: required
- name: disconnect_stores
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/stores
    method: DELETE
    data_selector: stores
    params:
      applicationId: required
      campaignId: required
- name: import_stores
  endpoint:
    path: /v1/applications/{applicationId}/campaigns/{campaignId}/stores/import
    method: POST
    data_selector: stores
    params:
      applicationId: required
      campaignId: required
      upFile: required
- name: list_webhooks
  endpoint:
    path: /v1/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: get_webhook
  endpoint:
    path: /v1/webhooks/{webhookId}
    method: GET
    data_selector: webhook
    params:
      webhookId: required
- name: campaign_notifications
  endpoint:
    path: /notifications/campaign
    method: POST
    data_selector: Data
- name: strikethrough_notifications
  endpoint:
    path: /notifications/strikethrough
    method: POST
    data_selector: changedItems
- name: campaign_state_changed
  endpoint:
    path: /v1/campaign/state/changed
    method: POST
    data_selector: Data
- name: notification
  endpoint:
    path: /docs/product/applications/application-notifications/overview
    method: POST
    data_selector: Data
    params: {}
- name: campaign_notification
  endpoint:
    path: /notifications
    method: GET
    data_selector: Data
    params: {}
- name: campaign_notification
  endpoint:
    path: /campaign/notification
    method: POST
    data_selector: Data
- name: campaign_deleted_webhook
  endpoint:
    path: /webhook/campaign/deleted
    method: POST
    data_selector: Data
    params: {}
- name: campaign_evaluation_tree_changed_webhook
  endpoint:
    path: /webhook/campaign/evaluation/tree/changed
    method: POST
    data_selector: Data
    params: {}
- name: coupon_created_webhook
  endpoint:
    path: /management-api/coupons/created
    method: POST
    data_selector: data
    params: {}
- name: coupon_updated_webhook
  endpoint:
    path: /management-api/coupons/updated
    method: POST
    data_selector: data
    params: {}
- name: coupon_deleted_webhook
  endpoint:
    path: /management-api/coupons/deleted
    method: POST
    data_selector: data
    params: {}
- name: coupons_created_asynchronously_webhook
  endpoint:
    path: /management-api/coupons/created_asynchronously
    method: POST
    data_selector: data
    params: {}
- name: CouponsDeleted
  endpoint:
    path: /management-api/coupons/deleted
    method: POST
    data_selector: notification
    params: {}
- name: ExpiringCoupons
  endpoint:
    path: /management-api/coupons/expiring
    method: POST
    data_selector: notification
    params: {}
- name: AddedOrDeductedPoints
  endpoint:
    path: /loyalty-programs/points/changes
    method: POST
    data_selector: notification
    params: {}
- name: pending_points
  endpoint:
    path: /notifications/pending_points
    method: POST
    data_selector: Data
    params: {}
- name: tier_upgrade
  endpoint:
    path: /notifications/tier_upgrade
    method: POST
    data_selector: Data
    params: {}
- name: tier_downgrade
  endpoint:
    path: /notifications/tier_downgrade
    method: POST
    data_selector: Data
    params: {}
- name: upcoming_tier_downgrade
  endpoint:
    path: /notifications/upcoming_tier_downgrade
    method: POST
    data_selector: Data
    params: {}
- name: strikethrough_pricing
  endpoint:
    path: /notifications/strikethrough_pricing
    method: POST
    data_selector: Data
    params: {}
- name: strikethrough_pricing_notification
  endpoint:
    path: /webhook/strikethrough_pricing_updated
    method: POST
    data_selector: notification
    params: {}
- name: campaign
  endpoint:
    path: /services/data/vXX.X/sobjects/Campaign
    method: GET
    data_selector: records
- name: coupon
  endpoint:
    path: /services/data/vXX.X/sobjects/Coupon
    method: GET
    data_selector: records
- name: application
  endpoint:
    path: /services/data/vXX.X/sobjects/Application
    method: GET
    data_selector: records
notes:
- Requires API key for authentication
- You can integrate with any customer data platform, or CDP, using the following endpoints
  designed for third-party tools, rather than your own integration layer.
- Use these endpoints to automate the creation of coupon and referral codes and deliver
  them to specific customer segments.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Create all the required attributes before using this endpoint.
- This v2 version replaces the previous v1 version of this endpoint.
- Campaigns belong to Applications, so we can set up a different campaign in our European
  Application, if needed.
- Management API endpoints are not meant to be used in real-time integrations that
  directly serve your end users.
- This API supports a maximum of 3 requests per second for each of these endpoints.
- 'Rate limit: 3 requests per second.'
- Management API endpoints are **not** meant to be used in real-time integrations
  that directly serve your end users.
- Recommended file size limit is 500MB.
- Required fields are not omitted if they are empty (have null value).
- Uses OAuth2 with refresh token — requires setup of connected app in Talon.One
- NotificationType indicates the type of the notification.
- Payload schema for notifications is required in application/json format.
- Payload must be application/json
- Custom data retention plans are stated in your contract with Talon.One and can be
  modified further to suit your needs.
errors:
- '400: Bad Request'
- '401: Unauthorized'
- '429: Rate limit of 60 requests per second exceeded or too many parallel requests'
- 400 Bad Request
- 401 Unauthorized
- 429 Too Many Requests
- 429 Rate limit of 60 requests per second exceeded or too many parallel requests
- '400 Bad Request: Check the request payload'
- '401 Unauthorized: Verify API key and permissions'
- '429 Too Many Requests: Rate limit exceeded'
- '401 Unauthorized: Check authentication credentials'
- '400'
- '401'
- '429'
- '429: Too Many Requests'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check the request format and required fields'
- '401 Unauthorized: Verify authentication credentials'
- '429 Too Many Requests: Reduce the request rate'
- '400 Bad Request: Indicates a 400 error if non-existing attributes are present'
- '401 Unauthorized: Authentication failed'
- '429 Rate limit exceeded: Too many requests in a given time frame'
- 429 Rate limit of 60 requests per second exceeded or too many parallel requests.
- 400 Bad request
- 401 Unauthorized - Invalid API key
- '400: Bad request'
- '401: Unauthorized - Invalid API key'
- 'Rate limit exceeded: 3 requests per second'
- 200 OK
- Rate limit exceeded
- '401 Unauthorized: Recheck management key or permissions.'
- 'Rate limit: 3 requests per second'
- '400: Trying to create more than 20,000 loyalty cards in a single request returns
  an error message.'
- '401: Unauthorized access due to invalid management_key.'
- '401 Unauthorized: Recheck API key or authentication details'
- '400 Bad Request: Check the payload structure'
- '400 Bad Request: Check the request body format.'
- '404 Not Found: Ensure the endpoint is correct.'
auth_info:
  mentioned_objects:
  - manager_auth
  - management_key
client:
  base_url: https://yourbaseurl.talon.one
  auth:
    type: apikey
  headers:
    Authorization: ApiKey-v1 {{ dlt.secrets['api_key'] }}
source_metadata: null
