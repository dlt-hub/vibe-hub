resources:
- name: create_app
  endpoint:
    path: /api/apps
    method: POST
    data_selector: client_id
    params: {}
- name: user_info
  endpoint:
    path: /oauth2/userinfo
    method: GET
- name: userinfo
  endpoint:
    path: /oauth2/userinfo
    method: GET
    data_selector: data
- name: userinfo
  endpoint:
    path: /oauth2/userinfo
    method: GET
    data_selector: user
    params: {}
- name: userinfo
  endpoint:
    path: /oauth2/userinfo
    method: GET
    data_selector: ''
- name: userinfo
  endpoint:
    path: /oauth2/userinfo
    method: GET
    data_selector: ''
- name: userinfo
  endpoint:
    path: /oauth2/userinfo
    method: GET
- name: webhook
  endpoint:
    path: /plant/webhook
    method: POST
    data_selector: event
    params: {}
- name: userinfo
  endpoint:
    path: /oauth2/userinfo
    method: GET
- name: user_energy_rules
  endpoint:
    path: /api/user/energy/rules
    method: GET
    data_selector: rules
    params: {}
- name: trust_level_conditions
  endpoint:
    path: /api/user/trust/levels
    method: GET
    data_selector: conditions
    params: {}
- name: user_info
  endpoint:
    path: /oauth2/userinfo
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Nodeloc Wiki 欢迎社区用户参与内容完善和更新
- Nodeloc Wiki welcomes community users to participate in content improvement and
  updates.
- 永远不要在前端代码中暴露Client Secret
- Client Secret is only displayed once.
- Do not expose Client Secret in front-end code.
- Nodeloc Wiki 欢迎社区用户参与内容完善和更新。您可以通过提交 Pull Request (PR) 的方式来提供修改、补充或纠正信息，但请务必遵守以下规则
- Uses OAuth2 with refresh token — requires setup of connected app in Nodeloc
- Some objects may return nulls in deeply nested fields
- WEBHOOK endpoint available for authorization events
- 使用强密码并开启邮箱验证
- 遇到账号异常或发现滥用行为，请及时联系管理员
- 使用强密码并开启邮箱验证。
- 每个用户只能中一次奖，单用户最多购买奖券数量可设置
- 使用环境变量存储敏感信息
- Requires setup of connected app in Nodeloc
- Some API responses may vary based on user permissions
- Uses OAuth2 with refresh token — requires setup of connected app in api
- 始终使用随机的state参数防止CSRF攻击
- Some objects like Contact may return nulls in deeply nested fields
errors:
- 400 请求参数错误
- 401 未认证
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401: invalid_token: 访问令牌无效或过期'
- '401: token_expired: 访问令牌过期'
- '403: insufficient_scope: 权限范围不足'
- '429: rate_limit_exceeded: 请求过于频繁'
- '401 invalid_token: 访问令牌无效或过期'
- '401 token_expired: 访问令牌过期'
- '403 insufficient_scope: 权限范围不足'
- '429 rate_limit_exceeded: 请求过于频繁'
- '401: invalid_token'
- '401: token_expired'
- '403: insufficient_scope'
- '429: rate_limit_exceeded'
- 'Token exchange failed: 401'
- '401 Unauthorized: Check your OAuth credentials'
- '404 Not Found: Endpoint does not exist'
- '500 Internal Server Error: Try again later'
- 'invalid_client: Client ID/Secret错误'
- 'invalid_grant: 授权码无效/过期'
- 'invalid_redirect_uri: 回调URI不匹配'
- 'access_denied: 用户拒绝授权'
- 'unsupported_grant_type: 不支持的授权类型'
- '400: Invalid state parameter'
- '401: Token exchange failed'
auth_info:
  mentioned_objects:
  - Client ID
  - Client Secret
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://conn.nodeloc.cc
  auth:
    type: oauth2
source_metadata: null
