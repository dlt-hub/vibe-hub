resources:
- name: Users
  endpoint:
    path: /api/users
    method: GET
    data_selector: users
    params: {}
- name: Permissions
  endpoint:
    path: /api/permissions
    method: GET
    data_selector: permissions
    params: {}
- name: Security Roles
  endpoint:
    path: /api/security_roles
    method: GET
    data_selector: security_roles
    params: {}
- name: Manufacturers
  endpoint:
    path: /v1/Manufacturers
    method: GET
    data_selector: null
    params: {}
- name: import_existing_user
  endpoint:
    path: /v1/Users/importExisting
    method: POST
    data_selector: Id
    params: {}
- name: get_locations
  endpoint:
    path: /v1/Companies({CompanyId})/Locations
    method: GET
    data_selector: Id
    params: {}
- name: assign_user_to_location
  endpoint:
    path: /v1/Users({UserId})/Locations({LocationId})
    method: PUT
    data_selector: null
    params: {}
- name: get_security_roles
  endpoint:
    path: /v1/Entities({EntityId})/SecurityRoles
    method: GET
    data_selector: Id
    params: {}
- name: assign_security_role
  endpoint:
    path: /v1/Users({UserId})/AssignedRoles
    method: POST
    data_selector: Id
    params: {}
- name: locations
  endpoint:
    path: /v1/Companies(14146)/Locations
    method: GET
    data_selector: locations
- name: orders
  endpoint:
    path: /v1/Companies(14146)/OrderFull
    method: POST
    data_selector: Id
- name: process_order
  endpoint:
    path: /v1/Companies(14146)/Orders(cdd26b8f-4ed1-409d-9984-982e081c425e)/Process
    method: POST
    data_selector: Id
- name: catalog_items
  endpoint:
    path: /v1/Companies(14146)/Catalog/Items(SourceId="43d92a51-650e-4b85-b5d0-8d51bf4c59f4")
    method: GET
    data_selector: Items
    params: {}
- name: product_details
  endpoint:
    path: /v1/Companies(14146)/Catalog/Items(a183f1a9-c58f-426a-930a-9a6357db52ed)/ProductDetails
    method: GET
    data_selector: ExtendedAttributes
    params: {}
- name: pricing
  endpoint:
    path: /v1/Companies(14146)/Entities(14146)/CatalogItems(a183f1a9-c58f-426a-930a-9a6357db52ed)/Pricing
    method: GET
    data_selector: ''
    params: {}
- name: supplier_availability
  endpoint:
    path: /v1/Suppliers(14107)/Companies(14146)/SupplierSkus
    method: GET
    data_selector: ''
    params: {}
- name: create_customer
  endpoint:
    path: /v1/Companies(14146)/CustomerFull
    method: POST
    data_selector: Addresses
    params: {}
- name: shipping_options
  endpoint:
    path: /Companies(14146)/ShippingInformation
    method: POST
    data_selector: ''
    params: {}
- name: locations
  endpoint:
    path: /v1/Companies(14146)/Locations
    method: GET
    data_selector: items
    params: {}
- name: users
  endpoint:
    path: /v1/Entities(14146)/Users
    method: GET
    data_selector: items
    params: {}
- name: quantity_adjustment
  endpoint:
    path: /rqinventoryadjustment/Companies/14146/QuantityAdjustment
    method: POST
    data_selector: null
    params: {}
- name: purchase_order
  endpoint:
    path: /rqpurchaseorders/Companies/{CompanyId}/PurchaseOrders
    method: POST
    data_selector: PurchaseOrder
    params:
      CompanyId: Provided in Onboarding Package
      VendorEntityId: Provided in Onboarding Package
      OrdererStoreEntityId: '14192'
      ReceiverStoreEntityId: '14192'
      BillToStoreEntityId: '14192'
      OrderedByEmployeeEntityId: '2576'
      CustomerId: 659c2a38-d083-4421-9330-46d779702f85
- name: location
  endpoint:
    path: /v1/Companies({CompanyId})/Locations
    method: GET
    data_selector: records
    params:
      CompanyId: Provided in Onboarding Package
- name: user
  endpoint:
    path: /v1/Entities({EntityId})/Users
    method: GET
    data_selector: items
    params:
      EntityId: Provided in Onboarding Package
- name: customer
  endpoint:
    path: /v1/Companies({CompanyId})/CustomerSearch
    method: GET
    data_selector: records
    params:
      CompanyId: Provided in Onboarding Package
- name: OrderCreated
  endpoint:
    path: /api/dropship/#operation/Create-a-Dropship-Webhook
    method: POST
    data_selector: Order
    params: {}
- name: OrderUpdated
  endpoint:
    path: /api/dropship/#operation/Update-a-Dropship-Webhook
    method: POST
    data_selector: OrderStatusUpdate
    params: {}
- name: create_transfer_request
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/purchaseOrders
    method: POST
    data_selector: checkStatusEndpoint
    params: {}
- name: check_transfer_request_creation_status
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/transfers/{TransferId}/status
    method: GET
    data_selector: status
    params: {}
- name: purchase_order
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/purchaseOrders
    method: POST
    data_selector: ''
    params: {}
- name: purchase_order_status
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/purchaseOrders/{PurchaseOrderId}/status
    method: GET
    data_selector: ''
    params: {}
- name: shipping_notice
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/shippingNotices
    method: POST
    data_selector: shippingNoticeId
- name: rma
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas
    method: POST
    data_selector: rmaId
- name: rma_creation_status
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/status
    method: GET
    data_selector: status
- name: commit_rma
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/commit
    method: POST
    data_selector: null
- name: ship_rma
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/ship
    method: POST
    data_selector: null
- name: receive_rma
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/receive
    method: POST
    data_selector: null
- name: get_lot_information_for_product_company_level
  endpoint:
    path: /v1/Companies({CompanyId})/CatalogItems({CatalogItemId})/ProductCommits
    method: GET
    data_selector: records
    params: {}
- name: get_lot_information_for_product_location_level
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: GET
    data_selector: records
    params: {}
- name: get_information_for_specific_lot
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: GET
    data_selector: records
    params: {}
- name: Get Supplier Availability for all Products by Company
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: GET
    data_selector: records
    params:
      CompanyId: required
      LocationId: required
      SupplierId: required
- name: Get Serial Numbers for a Serialized Product
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: GET
    data_selector: records
    params:
      CompanyId: required
      LocationId: required
      SerializedProductId: required
- name: Get Information for a Specific Serial Number by Location
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: GET
    data_selector: records
    params:
      CompanyId: required
      LocationId: required
      $filter: required
- name: ProductCommits
  endpoint:
    path: /Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: GET
    data_selector: records
    params: {}
- name: set_catalog_product_availability
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: POST
    data_selector: records
    params:
      CompanyId: required
      EntityId: required
- name: get_availability_all_company
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: GET
    data_selector: records
    params:
      CompanyId: required
- name: get_availability_all_location
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: GET
    data_selector: records
    params:
      CompanyId: required
      LocationId: required
- name: update_catalog_product_availability
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: POST
    data_selector: records
    params:
      CompanyId: required
      EntityId: required
- name: get_availability_catalog_item_company_level
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: GET
    data_selector: records
    params:
      CompanyId: required
      CatalogItemId: required
- name: get_availability_catalog_item_location_level
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: GET
    data_selector: records
    params:
      CompanyId: required
      LocationId: required
      CatalogItemId: required
- name: delete_catalog_product_availability
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: DELETE
    data_selector: records
    params:
      CompanyId: required
      LocationId: required
      CatalogItemId: required
- name: set_catalog_product_availability_bulk
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: POST
    data_selector: records
    params:
      CompanyId: required
- name: get_availability_list_catalog_items
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({LocationId})/CatalogItems({CatalogItemId})/ProductCommits
    method: POST
    data_selector: records
    params:
      CompanyId: required
      LocationId: required
- name: Changed Prices
  endpoint:
    path: /Companies({CompanyId})/Entities({EntityId})/ChangedPrices
    method: GET
    data_selector: records
    params: {}
- name: Pricing Shelf Products
  endpoint:
    path: /Companies({CompanyId})/PricingShelfProducts
    method: GET
    data_selector: records
    params: {}
- name: Pricing Information Record
  endpoint:
    path: /Companies({CompanyId})/Pricing({PricingId})
    method: DELETE
    data_selector: records
    params: {}
- name: Post Sale Override Price
  endpoint:
    path: /Companies({CompanyId})/Pricing({PricingId})/SaleOverridePrices
    method: POST
    data_selector: records
    params: {}
- name: Product Price
  endpoint:
    path: /Companies({CompanyId})/ProductPrices
    method: POST
    data_selector: records
    params: {}
- name: Pricing Terms
  endpoint:
    path: /Companies({CompanyId})/PricingTerms
    method: POST
    data_selector: records
    params: {}
- name: Changed Prices
  endpoint:
    path: /Companies({CompanyId})/Entities({EntityId})/ChangedPrices
    method: GET
    data_selector: records
    params: {}
- name: PricingTerms
  endpoint:
    path: /v1/Companies({CompanyId})/PricingTerms({TermId})
    method: PUT
    data_selector: null
    params: {}
- name: ChangedPrices
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({EntityId})/ChangedPrices
    method: GET
    data_selector: null
    params: {}
- name: Pricing
  endpoint:
    path: /v1/Companies({CompanyId})/Pricing({PricingId})
    method: DELETE
    data_selector: null
    params: {}
- name: PricingTiers
  endpoint:
    path: /v1/Companies({CompanyId})/PricingTiers
    method: POST
    data_selector: null
    params: {}
- name: PricingGroups
  endpoint:
    path: /v1/Companies({CompanyId})/PricingGroups
    method: POST
    data_selector: null
    params: {}
- name: PricingShelves
  endpoint:
    path: /v1/Companies({CompanyId})/PricingShelves
    method: POST
    data_selector: null
    params: {}
- name: changed_prices
  endpoint:
    path: /v1/Companies({CompanyId})/Entities({EntityId})/ChangedPrices
    method: GET
    data_selector: records
    params:
      $filter: LastModifiedDateUtc ge datetime'yyyy-mm-dd'
      $top: 50
      $skip: 0
- name: delete_pricing_record
  endpoint:
    path: /v1/Companies({CompanyId})/Pricing({PricingId})
    method: DELETE
    data_selector: records
    params: {}
- name: import_existing_user
  endpoint:
    path: /v1/Users/importExisting
    method: POST
    data_selector: null
    params: {}
- name: get_locations
  endpoint:
    path: /v1/Companies({CompanyId})/Locations
    method: GET
    data_selector: null
    params: {}
- name: assign_user_to_location
  endpoint:
    path: /v1/Users({UserId})/Locations({LocationId})
    method: PUT
    data_selector: null
    params: {}
- name: get_security_roles
  endpoint:
    path: /v1/Entities({EntityId})/SecurityRoles
    method: GET
    data_selector: null
    params: {}
- name: assign_security_role
  endpoint:
    path: /v1/Users({UserId})/AssignedRoles
    method: POST
    data_selector: null
    params: {}
- name: Import Products
  endpoint:
    path: /companies({CompanyId})/import
    method: POST
    data_selector: products
    params:
      CompanyId: required
- name: Get All Batches
  endpoint:
    path: /companies({CompanyId})/batchStatus
    method: GET
    data_selector: batches
    params:
      CompanyId: required
- name: Get a Batch
  endpoint:
    path: /companies({CompanyId})/batchStatus({BatchId})
    method: GET
    data_selector: batch
    params:
      CompanyId: required
      BatchId: required
- name: Cancel a Batch
  endpoint:
    path: /companies({CompanyId})/batchStatus({BatchId})
    method: POST
    data_selector: cancel
    params:
      CompanyId: required
      BatchId: required
- name: purchase_order_shipment_notice
  endpoint:
    path: /?op=CreatePurchaseOrderShipmentNotice
    method: POST
    data_selector: CreatePurchaseOrderShipmentNoticeResult
    params: {}
- name: GetStoreList
  endpoint:
    path: /?op=GetStoreList
    method: POST
    data_selector: GetStoreListResult.StoreInformation
    params: {}
- name: GetProductSalesReport
  endpoint:
    path: /?op=GetProductSalesReport
    method: POST
    data_selector: GetProductSalesReportResult.ProductSalesReportData
    params: {}
- name: GetReceivingInfo
  endpoint:
    path: /?op=GetReceivingInfo
    method: POST
    data_selector: GetReceivingInfoResult.ReceivingInfo
    params: {}
- name: CreatePurchaseOrder
  endpoint:
    path: /?op=CreatePurchaseOrder
    method: POST
    data_selector: CreatePurchaseOrderResult.PurchaseOrderData
    params: {}
- name: locations
  endpoint:
    path: /v1/Companies(14146)/Locations
    method: GET
    data_selector: records
- name: orders
  endpoint:
    path: /v1/Companies(14146)/OrderFull
    method: POST
    data_selector: Id
- name: process_orders
  endpoint:
    path: /v1/Companies(14146)/Orders(cdd26b8f-4ed1-409d-9984-982e081c425e)/Process
    method: POST
    data_selector: Id
- name: catalog_items
  endpoint:
    path: /v1/Companies(14146)/Catalog/Items(SourceId="43d92a51-650e-4b85-b5d0-8d51bf4c59f4")
    method: GET
    data_selector: Items
    params: {}
- name: product_details
  endpoint:
    path: /v1/Companies(14146)/Catalog/Items(a183f1a9-c58f-426a-930a-9a6357db52ed)/ProductDetails
    method: GET
    data_selector: ExtendedAttributes
    params: {}
- name: pricing
  endpoint:
    path: /v1/Companies(14146)/Entities(14146)/CatalogItems(a183f1a9-c58f-426a-930a-9a6357db52ed)/Pricing
    method: GET
    data_selector: '[0]'
    params: {}
- name: supplier_availability
  endpoint:
    path: /v1/Suppliers(14107)/Companies(14146)/SupplierSkus
    method: GET
    data_selector: '[0]'
    params: {}
- name: create_customer
  endpoint:
    path: /v1/Companies(14146)/CustomerFull
    method: POST
    data_selector: Addresses
    params: {}
- name: shipping_options
  endpoint:
    path: /Companies(14146)/ShippingInformation
    method: POST
    data_selector: Shipments
    params: {}
- name: purchase_orders
  endpoint:
    path: /api/purchase-orders
    method: GET
- name: inventory_adjustments
  endpoint:
    path: /api/inventory-adjustments
    method: GET
- name: create_private_product
  endpoint:
    path: /api/catalog#create-a-private-product
    method: POST
- name: Purchase Orders
  endpoint:
    path: /api/purchase-orders
    method: GET
    data_selector: records
    params: {}
- name: Inventory Adjustments
  endpoint:
    path: /api/inventory-adjustments
    method: GET
    data_selector: records
    params: {}
- name: Private Product
  endpoint:
    path: /api/catalog#create-a-private-product
    method: POST
    data_selector: records
    params: {}
- name: purchase_order
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/purchaseOrders
    method: POST
    data_selector: ''
    params: {}
- name: purchase_order_status
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/purchaseOrders/{PurchaseOrderId}/status
    method: GET
    data_selector: ''
    params: {}
- name: create_transfer_request
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/purchaseOrders
    method: POST
    data_selector: checkStatusEndpoint
    params: {}
- name: check_transfer_request_creation_status
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/transfers/{TransferId}/status
    method: GET
    data_selector: status
    params: {}
- name: shipping_notice
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/shippingNotices
    method: POST
    data_selector: shippingNoticeId
- name: rma_creation
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas
    method: POST
    data_selector: checkStatusEndpoint
- name: rma_creation_status
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/status
    method: GET
    data_selector: status
- name: commit_rma
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/commit
    method: POST
- name: ship_rma
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/ship
    method: POST
- name: receive_rma
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/receive
    method: POST
- name: create_rma
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas
    method: POST
    data_selector: products
- name: get_purchase_order_status
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/purchaseorder/{PurchaseOrderId}/status
    method: GET
    data_selector: status
- name: update_purchase_order
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/purchaseorders/{PurchaseOrderId}
    method: PUT
    data_selector: updated_order
- name: create_purchase_order
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/purchaseOrders
    method: POST
    data_selector: response
    params: {}
- name: get_all_purchase_orders
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/purchaseOrders
    method: GET
    data_selector: response
    params: {}
- name: get_purchase_order
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/purchaseOrders/{PurchaseOrderId}
    method: GET
    data_selector: response
    params: {}
- name: product_serial_numbers
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: records
    params: {}
- name: create_transfer_request
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/transfers
    method: POST
    data_selector: records
    params: {}
- name: get_transfer_request_creation_status
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/transfers/{TransferId}
    method: GET
    data_selector: records
    params: {}
- name: get_transfer_request
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/transfers/{TransferId}
    method: GET
    data_selector: records
    params: {}
- name: Get all RMAs
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: records
    params:
      startDateCreated: 01-01-2021
      endDateCreated: 12-31-2021
      includeShipped: false
      includeCommitted: false
- name: Get an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: records
- name: Delete an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: records
- name: Get RMA Creation Status
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: records
- name: Commit RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: records
- name: Ship RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: records
- name: Receive RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: records
- name: Add Products to an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: records
- name: Update Products on an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: records
- name: Remove Products from an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: records
- name: create_rma
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas
    method: POST
    data_selector: products
- name: update_purchase_order
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/purchaseorders/{PurchaseOrderId}
    method: PUT
    data_selector: purchaseOrder
- name: get_purchase_order_creation_status
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/purchaseorders/{PurchaseOrderId}/status
    method: GET
    data_selector: status
- name: product_serial_numbers
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: records
    params: {}
- name: get_enabled_companies
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: GET
    data_selector: records
    params: {}
- name: get_enabled_locations
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: GET
    data_selector: records
    params: {}
- name: get_inventory_report
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: GET
    data_selector: records
    params: {}
- name: get_transfer_order_details_report
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: GET
    data_selector: records
    params: {}
- name: get_received_purchase_order_report
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: GET
    data_selector: records
    params: {}
- name: get_inventory_adjustments_report
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: GET
    data_selector: records
    params: {}
- name: get_product_sales_report
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: GET
    data_selector: records
    params: {}
- name: create_purchase_order
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: records
    params: {}
- name: get_all_purchase_orders
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: GET
    data_selector: records
    params: {}
- name: get_a_purchase_order
  endpoint:
    path: /vendorinventory/v1/vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: GET
    data_selector: records
    params: {}
- name: Get all RMAs
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: VendorSku
    params: {}
- name: Get an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: VendorSku
    params: {}
- name: Delete an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: VendorSku
    params: {}
- name: Get RMA Creation Status
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: VendorSku
    params: {}
- name: Commit RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: VendorSku
    params: {}
- name: Ship RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: VendorSku
    params: {}
- name: Receive RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: VendorSku
    params: {}
- name: Add Products to an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: VendorSku
    params: {}
- name: Update Products on an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: VendorSku
    params: {}
- name: Remove Products from an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: VendorSku
    params: {}
- name: shipping_notices_for_purchase_order
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/purchaseOrders/{PurchaseOrderId}/shippingNotices
    method: GET
    data_selector: items
    params: {}
- name: shipping_notice
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/shippingNotices/{ShippingNoticeId}
    method: GET
    data_selector: schema
    params: {}
- name: transfer_request_creation_status
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/transfers/{TransferId}/status
    method: GET
    data_selector: schema
    params: {}
- name: transfer_request
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/transfers/{TransferId}
    method: GET
    data_selector: schema
    params: {}
- name: Get Enabled Companies
  endpoint:
    path: /vendors/{VendorId}/companyRelationships
    method: GET
    data_selector: items
- name: Get Enabled Locations
  endpoint:
    path: /vendors/{VendorId}/companyRelationships/{CompanyId}/locations
    method: GET
    data_selector: items
- name: Inventory Report
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/inventory
    method: GET
    data_selector: items
- name: Create a Purchase Order
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/purchaseOrders
    method: POST
    data_selector: purchaseOrderId
- name: Get all Purchase Orders
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/purchaseOrders
    method: GET
    data_selector: items
- name: Get a Purchase Order
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/purchaseOrders/{PurchaseOrderId}
    method: GET
    data_selector: items
- name: Update a Purchase Order
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/purchaseOrders/{PurchaseOrderId}/update
    method: PUT
    data_selector: status
- name: Get Purchase Order Creation Status
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/purchaseOrders/{PurchaseOrderId}/status
    method: GET
    data_selector: status
- name: Get Serial Numbers for Specific SKUs
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/reports/productserialnumbers
    method: POST
    data_selector: items
- name: ShippingNoticeCreateSerialized
  endpoint:
    path: /shipping-notice/create-serialized
    method: POST
    data_selector: records
- name: GetTransferRequest
  endpoint:
    path: /transfer-request/{TransferId}
    method: GET
    data_selector: records
- name: GetProductSerialNumbers
  endpoint:
    path: /product-serial-numbers
    method: GET
    data_selector: ProductSerialNumberDetails
- name: Get all RMAs
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas
    method: GET
    data_selector: records
    params:
      startDateCreated: required
      endDateCreated: required
      includeShipped: 'false'
      includeCommitted: 'false'
- name: Get an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}
    method: GET
    data_selector: rma
    params: {}
- name: Delete an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}
    method: DELETE
    data_selector: rma
    params: {}
- name: Add Products to an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/products
    method: POST
    data_selector: products
    params: {}
- name: Update Products on an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/products
    method: PUT
    data_selector: products
    params: {}
- name: Remove Products from an RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/products
    method: DELETE
    data_selector: products
    params: {}
- name: Get RMA Creation Status
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/status
    method: GET
    data_selector: status
    params: {}
- name: Commit RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/commit
    method: POST
    data_selector: commit
    params: {}
- name: Ship RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/ship
    method: POST
    data_selector: ship
    params: {}
- name: Receive RMA
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/rmas/{RmaId}/receive
    method: POST
    data_selector: receive
    params: {}
- name: Create a Shipping Notice for a Purchase Order
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/shippingNotices
    method: POST
    data_selector: shippingNotice
    params: {}
- name: Create Multiple Shipping Notices for a Purchase Order
  endpoint:
    path: /vendors/{VendorId}/companies/{CompanyId}/locations/{LocationId}/shippingNotices/bulk
    method: POST
    data_selector: bulkShippingNotice
    params: {}
- name: SalesOrder
  endpoint:
    path: /Companies({CompanyId})/PrintableId({PrintableId})
    method: GET
    data_selector: SalesOrders
    params:
      CompanyId: required
      PrintableId: required
- name: Create a Sales Order with No Invoice
  endpoint:
    path: /Companies({CompanyId})/PrintableId({PrintableId})
    method: POST
    data_selector: SalesOrders
    params:
      CompanyId: required
- name: Get a Sales Order
  endpoint:
    path: /Companies({CompanyId})/PrintableId({PrintableId})
    method: GET
    data_selector: SalesOrders
    params:
      CompanyId: required
      SaleOrderId: required
- name: SalesOrderStatus
  endpoint:
    path: /Companies({CompanyId})/PrintableId({PrintableId})
    method: GET
    data_selector: SalesOrders
    params:
      CompanyId: required
      SaleOrderId: required
- name: SalesOrderLogEntries
  endpoint:
    path: /Companies({CompanyId})/LogEntries({LogEntryId})
    method: GET
    data_selector: SalesOrders
    params:
      CompanyId: required
      SaleOrderId: required
      LogEntryId: required
- name: SaleOrder
  endpoint:
    path: /api/sale-order
    method: GET
    data_selector: records
- name: SaleOrderItem
  endpoint:
    path: /api/sale-order-item
    method: GET
    data_selector: records
- name: Payment
  endpoint:
    path: /api/payment
    method: GET
    data_selector: records
- name: ShippingLineItem
  endpoint:
    path: /api/shipping-line-item
    method: GET
    data_selector: records
- name: TaxLineItem
  endpoint:
    path: /api/tax-line-item
    method: GET
    data_selector: records
- name: SaleInvoice
  endpoint:
    path: /Companies({CompanyId})/SaleInvoice
    method: POST
    data_selector: SaleOrder
    params: {}
- name: SaleOrder
  endpoint:
    path: /Companies({CompanyId})/SaleOrder
    method: POST
    data_selector: SaleOrder
    params: {}
- name: GetSaleOrder
  endpoint:
    path: /Companies({CompanyId})/SaleOrder({SaleOrderId})
    method: GET
    data_selector: SaleOrder
    params: {}
- name: GetSaleOrderStatus
  endpoint:
    path: /Companies({CompanyId})/SaleOrderStatus({SaleOrderId})
    method: GET
    data_selector: SaleOrderStatus
    params: {}
- name: GetStatusLog
  endpoint:
    path: /Companies({CompanyId})/SaleOrder({SaleOrderId})/StatusLog
    method: GET
    data_selector: SaleOrderStatusLog
    params: {}
- name: GetPrintableId
  endpoint:
    path: /Companies({CompanyId})/PrintableId({PrintableId})
    method: GET
    data_selector: SalesOrderbyPrintableID
    params: {}
- name: ProductFeed
  endpoint:
    path: /ProductFeeds({FeedId})
    method: GET
    data_selector: records
    params: {}
- name: AddProductToProductFeed
  endpoint:
    path: /ProductFeeds({FeedId})/Products
    method: POST
    data_selector: records
    params: {}
- name: RemoveProductFromProductFeed
  endpoint:
    path: /ProductFeeds({FeedId})/Products({ProductId})
    method: DELETE
    data_selector: records
    params: {}
- name: ProductFeed
  endpoint:
    path: /ProductFeeds({FeedId})
    method: GET
    data_selector: ProductFeed
    params: {}
- name: Products in Product Feed
  endpoint:
    path: /ProductFeeds({FeedId})/Products
    method: POST
    data_selector: ProductFeedProduct
    params: {}
- name: Products in Product Feed
  endpoint:
    path: /ProductFeeds({FeedId})/Products
    method: GET
    data_selector: ProductFeedProduct
    params: {}
- name: Remove a Product from a Product Feed
  endpoint:
    path: /ProductFeeds({FeedId})/Products({ProductId})
    method: DELETE
    data_selector: null
    params: {}
- name: update_wholesale_cost
  endpoint:
    path: /v1/Suppliers(14107)/Cost
    method: POST
    data_selector: Products
- name: update_stock_level
  endpoint:
    path: /v1/Suppliers(14107)/Availability
    method: POST
    data_selector: Products
- name: classification_tree
  endpoint:
    path: /v1/ClassificationTrees(1)
    method: GET
    data_selector: Id
- name: field_definitions
  endpoint:
    path: /v1/FieldDefinitions
    method: GET
    data_selector: Id
- name: product_feed
  endpoint:
    path: /v1/ProductFeeds(5)/Products
    method: POST
    data_selector: Id
- name: subscription_list
  endpoint:
    path: /v1/subscribablelists(83076078-d27e-4ca4-8d42-3bbaf5ec7f68)
    method: PUT
    data_selector: Id
- name: create_or_update_subscription_list
  endpoint:
    path: /subscription
    method: PUT
    data_selector: No Content
    params: {}
- name: get_subscription_list_details
  endpoint:
    path: /subscription({ListId})
    method: GET
    data_selector: Companies
    params: {}
- name: get_all_companies
  endpoint:
    path: /subscription({ListId})/companies
    method: GET
    data_selector: Companies
    params: {}
- name: add_company_to_subscription_list
  endpoint:
    path: /subscription({ListId})/company({CompanyId})
    method: PUT
    data_selector: No Content
    params: {}
- name: remove_company_from_subscription_list
  endpoint:
    path: /subscription({ListId})/company({CompanyId})
    method: DELETE
    data_selector: No Content
    params: {}
- name: create_user
  endpoint:
    path: /v1/Entities({ParentEntityId})/Users
    method: POST
    data_selector: records
- name: get_user
  endpoint:
    path: /v1/Users({UserId})
    method: GET
    data_selector: records
- name: update_user
  endpoint:
    path: /v1/Users({UserId})
    method: PUT
    data_selector: records
- name: disable_user
  endpoint:
    path: /v1/Users({UserId})/disable
    method: DELETE
    data_selector: records
- name: import_user
  endpoint:
    path: /v1/Entities({ParentEntityId})/Users/import
    method: POST
    data_selector: records
- name: enable_user
  endpoint:
    path: /v1/Users({UserId})/enable
    method: POST
    data_selector: records
- name: get_user_assigned_locations
  endpoint:
    path: /v1/Users({UserId})/locations
    method: GET
    data_selector: records
- name: assign_user_to_location
  endpoint:
    path: /v1/Users({UserId})/locations/{LocationId}
    method: PUT
    data_selector: records
- name: unassign_user_from_location
  endpoint:
    path: /v1/Users({UserId})/locations/{LocationId}
    method: DELETE
    data_selector: records
- name: assign_security_role
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: POST
    data_selector: permissions
    params:
      UserId: required
      EntityId: required
      SecurityRoleId: required
- name: get_all_assigned_security_roles
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: GET
    data_selector: roles
    params:
      UserId: required
- name: unassign_security_role
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleAssignmentId})/Permissions({PermissionId})
    method: DELETE
    data_selector: unassignment
    params:
      UserId: required
      SecurityRoleAssignmentId: required
- name: get_all_users_assigned_to_security_role
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: GET
    data_selector: users
    params:
      SecurityRoleId: required
      CompanyId: required
      $skip: optional
      $top: optional
- name: get_all_permissions
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: GET
    data_selector: permissions
    params:
      CompanyId: required
- name: get_enabled_permissions_for_security_role
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: GET
    data_selector: enabled_permissions
    params:
      CompanyId: required
      SecurityRoleId: required
- name: enable_permission_for_security_role
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: POST
    data_selector: enable_permission
    params:
      CompanyId: required
      SecurityRoleId: required
      PermissionId: required
- name: disable_permission_for_security_role
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: DELETE
    data_selector: disable_permission
    params:
      CompanyId: required
      SecurityRoleId: required
      PermissionId: required
- name: Get All Users for an Entity
  endpoint:
    path: /Entities({EntityId})/Users
    method: GET
    data_selector: records
    params:
      $filter: isActive eq true
      $skip: 0
      $top: 30
- name: Get the Number of Users for an Entity
  endpoint:
    path: /Entities({EntityId})/Users/Count
    method: GET
    data_selector: count
    params: {}
- name: Search Users
  endpoint:
    path: /Entities({EntityId})/Users/Search
    method: GET
    data_selector: records
    params:
      terms: ''
      $skip: 0
      $top: 30
- name: Create a Lock Reason
  endpoint:
    path: /Entities({CompanyId})/LockReasons
    method: POST
    data_selector: lockReason
    params: {}
- name: Get All Lock Reasons
  endpoint:
    path: /Entities({CompanyId})/LockReasons
    method: GET
    data_selector: lockReasons
    params: {}
- name: Get a Lock Reason
  endpoint:
    path: /Entities({CompanyId})/LockReasons({LockReasonId})
    method: GET
    data_selector: lockReason
    params: {}
- name: Lock a User
  endpoint:
    path: /Users({UserId})/Lock
    method: POST
    data_selector: lockStatus
    params: {}
- name: Unlock a User
  endpoint:
    path: /Users({UserId})/Unlock
    method: POST
    data_selector: unlockStatus
    params: {}
- name: Get the Lock Status of a User
  endpoint:
    path: /Users({UserId})/LockStatus
    method: GET
    data_selector: lockStatus
    params: {}
- name: Create a Security Role
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles
    method: POST
    data_selector: securityRole
    params: {}
- name: Get All Security Roles
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles
    method: GET
    data_selector: securityRoles
    params: {}
- name: Delete a Security Role
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})
    method: DELETE
    data_selector: deleteStatus
    params: {}
- name: permissions
  endpoint:
    path: /Entities({CompanyId})/Permissions
    method: GET
    data_selector: items
- name: security_roles
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles
    method: POST
    data_selector: schema
- name: users
  endpoint:
    path: /Users
    method: POST
    data_selector: schema
- name: User Operations
  endpoint:
    path: /api/user-operations
    method: GET
- name: User Location
  endpoint:
    path: /api/user-location
    method: GET
- name: User Password
  endpoint:
    path: /api/user-password
    method: GET
- name: Lock Operations
  endpoint:
    path: /api/lock-operations
    method: GET
- name: Lock Reason
  endpoint:
    path: /api/lock-reason
    method: GET
- name: User Security Roles
  endpoint:
    path: /api/user-security-roles
    method: GET
- name: Permissions
  endpoint:
    path: /api/permissions
    method: GET
- name: Get the Lock Status of a User
  endpoint:
    path: /Get-the-Lock-Status-of-a-User
    method: GET
    data_selector: properties
    params: {}
- name: Create a Lock Reason
  endpoint:
    path: /Entities({CompanyId})/LockReasons
    method: POST
    data_selector: properties
    params: {}
- name: Get All Lock Reasons
  endpoint:
    path: /Entities({CompanyId})/LockReasons
    method: GET
    data_selector: items
    params: {}
- name: Get a Lock Reason
  endpoint:
    path: /Entities({CompanyId})/LockReasons({LockReasonId})
    method: GET
    data_selector: properties
    params: {}
- name: Delete a Lock Reason
  endpoint:
    path: /Entities({CompanyId})/LockReasons({LockReasonId})
    method: DELETE
    data_selector: {}
    params: {}
- name: create_user
  endpoint:
    path: /Entities({CompanyId})/Users
    method: POST
    data_selector: records
- name: get_user
  endpoint:
    path: /Entities({CompanyId})/Users({UserId})
    method: GET
    data_selector: records
- name: update_user
  endpoint:
    path: /Entities({CompanyId})/Users({UserId})
    method: PUT
    data_selector: records
- name: disable_user
  endpoint:
    path: /Entities({CompanyId})/Users({UserId})
    method: DELETE
    data_selector: records
- name: get_assigned_locations
  endpoint:
    path: /Entities({CompanyId})/Users({UserId})/Locations
    method: GET
    data_selector: records
- name: assign_user_to_location
  endpoint:
    path: /Entities({CompanyId})/Users({UserId})/Locations({LocationId})
    method: PUT
    data_selector: records
- name: unassign_user_from_location
  endpoint:
    path: /Entities({CompanyId})/Users({UserId})/Locations({LocationId})
    method: DELETE
    data_selector: records
- name: Get All Users for an Entity
  endpoint:
    path: /v2/Entities({EntityId})/Users
    method: GET
    data_selector: users
    params:
      $filter: isActive eq true
      $skip: 0
      $top: 30
- name: Get Number of Users for an Entity
  endpoint:
    path: /v2/Entities({EntityId})/Users/Count
    method: GET
    data_selector: count
    params: {}
- name: Search Users
  endpoint:
    path: /v2/Entities({EntityId})/Users/Search
    method: GET
    data_selector: users
    params:
      terms: ''
      $skip: 0
      $top: 30
- name: Create a Lock Reason
  endpoint:
    path: /v2/Entities({CompanyId})/LockReasons
    method: POST
    data_selector: lockReason
    params: {}
- name: Get All Lock Reasons
  endpoint:
    path: /v2/Entities({CompanyId})/LockReasons
    method: GET
    data_selector: lockReasons
    params: {}
- name: Lock a User
  endpoint:
    path: /v2/Users({UserId})/Lock
    method: POST
    data_selector: lockStatus
    params: {}
- name: Unlock a User
  endpoint:
    path: /v2/Users({UserId})/Unlock
    method: POST
    data_selector: unlockStatus
    params: {}
- name: assign_security_role
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: POST
    data_selector: no_content
    params:
      EntityId: integer
      SecurityRoleId: integer
- name: get_all_assigned_security_roles
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: GET
    data_selector: no_content
    params:
      UserId: integer
- name: unassign_security_role
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: DELETE
    data_selector: no_content
    params:
      UserId: integer
      SecurityRoleAssignmentId: integer
- name: get_all_users_assigned_to_security_role
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: GET
    data_selector: no_content
    params:
      SecurityRoleId: integer
      CompanyId: integer
- name: get_all_permissions
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: GET
    data_selector: no_content
    params:
      CompanyId: integer
- name: get_enabled_permissions_for_security_role
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: GET
    data_selector: no_content
    params:
      CompanyId: integer
      SecurityRoleId: integer
- name: enable_permission_for_security_role
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: POST
    data_selector: no_content
    params:
      CompanyId: integer
      SecurityRoleId: integer
      PermissionId: integer
- name: disable_permission_for_security_role
  endpoint:
    path: /Entities({CompanyId})/SecurityRoles({SecurityRoleId})/Permissions({PermissionId})
    method: DELETE
    data_selector: no_content
    params:
      CompanyId: integer
      SecurityRoleId: integer
      PermissionId: integer
- name: remove_parent_customer
  endpoint:
    path: /Companies({CompanyId})/Customers({CustomerId})/RelatedCustomers({ParentCustomerId})
    method: DELETE
    data_selector: records
- name: create_contact_method
  endpoint:
    path: /Companies({CompanyId})/Customers({CustomerId})/ContactMethods
    method: POST
    data_selector: records
- name: designate_child_customer
  endpoint:
    path: /Companies({CompanyId})/Customers({CustomerId})/RelatedCustomers
    method: POST
    data_selector: records
- name: customers
  endpoint:
    path: /Companies({CompanyId})/Customers
    method: GET
    data_selector: _embedded.self
    params: {}
- name: full_customer
  endpoint:
    path: /Companies({CompanyId})/Customers
    method: POST
    data_selector: Id
    params: {}
- name: CustomerFull
  endpoint:
    path: /Companies({CompanyId})/CustomerFull
    method: GET
    data_selector: records
    params: {}
- name: CustomerSearch
  endpoint:
    path: /Companies({CompanyId})/CustomerSearch
    method: GET
    data_selector: records
    params: {}
- name: CustomerExtensionTypes
  endpoint:
    path: /Companies({CompanyId})/CustomerExtensionTypes
    method: GET
    data_selector: records
    params: {}
- name: CustomerExtensions
  endpoint:
    path: /Companies({CompanyId})/Customers({CustomerId})/CustomerExtensions
    method: POST
    data_selector: records
    params: {}
- name: Addresses
  endpoint:
    path: /Companies({CompanyId})/Customers({CustomerId})/Addresses
    method: POST
    data_selector: records
    params: {}
- name: Customers
  endpoint:
    path: /Companies(14146)/Customers
    method: GET
    data_selector: _embedded.self
    params:
      $filter: PrimaryName eq 'Robert' and FamilyName eq 'Smithson'
- name: BaseCustomer
  endpoint:
    path: /customers
    method: GET
    data_selector: records
    params: {}
- name: Address
  endpoint:
    path: /addresses
    method: GET
    data_selector: records
    params: {}
- name: ContactMethod
  endpoint:
    path: /contact-methods
    method: GET
    data_selector: records
    params: {}
- name: CustomerExtension
  endpoint:
    path: /customer-extensions
    method: GET
    data_selector: records
    params: {}
- name: CustomerFull
  endpoint:
    path: /Companies({CompanyId})/CustomerFull
    method: POST
- name: Customer
  endpoint:
    path: /Companies({CompanyId})/Customers
    method: GET
- name: CustomerSearch
  endpoint:
    path: /Companies({CompanyId})/CustomerSearch
    method: GET
- name: CustomerFull
  endpoint:
    path: /CustomerFull
    method: GET
    data_selector: records
    params: {}
- name: CustomerSearch
  endpoint:
    path: /CustomerSearch
    method: GET
    data_selector: records
    params: {}
- name: bill_payment_transactions
  endpoint:
    path: /Misc/BillPaymentTransactions
    method: GET
    data_selector: records
    params:
      StartDate: string <date>
      StopDate: string <date>
      BillPayInvoice: string
- name: stores
  endpoint:
    path: /Reports/PerformanceMetrixReport
    method: GET
    data_selector: records
    params:
      LocationType: string
      LocationTypeIDs: integer
      LanguageCode: string
- name: stores
  endpoint:
    path: /get/SampleEndpoint
    method: GET
    data_selector: records
    params: {}
- name: ping
  endpoint:
    path: /get/Ping
    method: GET
    data_selector: version
    params: {}
- name: stores
  endpoint:
    path: /Stores
    method: GET
    data_selector: records
    params:
      LocationType: Company
      LocationTypeIDs: '-1'
      LanguageCode: en-us
- name: customer_activities
  endpoint:
    path: /Operations/CustomerActivities
    method: GET
    data_selector: records
    params:
      DateAsOf: '2020-01-01'
      LocationType: Company
      LocationTypeIDs: '-1'
      LanguageCode: en-us
- name: sales_opportunities
  endpoint:
    path: /Operations/SalesOpportunities
    method: GET
    data_selector: records
    params:
      LocationType: Company
      LocationTypeIDs: '-1'
      LanguageCode: en-us
- name: service_requests
  endpoint:
    path: /Operations/ServiceRequests
    method: GET
    data_selector: records
    params:
      LocationType: Company
      LocationTypeIDs: '-1'
      LanguageCode: en-us
- name: AgedSerializedInventoryReport
  endpoint:
    path: /Reports/AgedSeralizedInventoryReport
    method: GET
    data_selector: records
- name: AutoOrderingReport
  endpoint:
    path: /Reports/AutoOrderingReport
    method: GET
    data_selector: records
- name: AutoTransferInReport
  endpoint:
    path: /Reports/AutoTransferInReport
    method: GET
    data_selector: records
- name: AutoTransferOutReport
  endpoint:
    path: /Reports/AutoTransferOutReport
    method: GET
    data_selector: records
- name: ConsignmentHistoryReport
  endpoint:
    path: /Reports/ConsignmentHistoryReport
    method: GET
    data_selector: records
- name: CountSheetHistoryReport
  endpoint:
    path: /Reports/CountSheetHistoryReport
    method: GET
    data_selector: records
- name: InventoryAvailabilitySummaryReport
  endpoint:
    path: /Reports/InventoryAvailabilitySummaryReport
    method: GET
    data_selector: records
- name: inventorylistingreport
  endpoint:
    path: /Reports/inventorylistingreport
    method: GET
    data_selector: records
- name: NonSellableHistoryReport
  endpoint:
    path: /Reports/NonSellableHistoryReport
    method: GET
    data_selector: records
- name: NonSellableProductsReport
  endpoint:
    path: /Reports/NonSellableProductsReport
    method: GET
    data_selector: records
- name: OverReceivingInventoryReport
  endpoint:
    path: /Reports/OverReceivingInventoryReport
    method: GET
    data_selector: records
- name: ProductMasterList
  endpoint:
    path: /inventory/ProductMasterList
    method: GET
    data_selector: records
- name: ProductTrackingReport
  endpoint:
    path: /Reports/ProductTrackingReport
    method: GET
    data_selector: records
- name: ProductsCommittedOnSalesOrdersReport
  endpoint:
    path: /Reports/ProductsCommittedOnSalesOrdersReport
    method: GET
    data_selector: records
- name: SalesByCategoryReport
  endpoint:
    path: /Reports/SalesByCategoryReport
    method: GET
    data_selector: records
- name: SalesByEmployeeReport
  endpoint:
    path: /Reports/SalesByEmployeeReport
    method: GET
    data_selector: records
- name: salesbyinvoicereport
  endpoint:
    path: /Reports/salesbyinvoicereport
    method: GET
    data_selector: records
- name: SalesByLocationReport
  endpoint:
    path: /Reports/SalesByLocationReport
    method: GET
    data_selector: records
- name: SalesOrderDetailReport
  endpoint:
    path: /Reports/SalesOrderDetailReport
    method: GET
    data_selector: records
- name: SalesOrderSummaryReport
  endpoint:
    path: /Reports/SalesOrderSummaryReport
    method: GET
    data_selector: records
- name: SerializedCouponReport
  endpoint:
    path: /Reports/SerializedCouponReport
    method: GET
    data_selector: records
- name: RefundSummaryReport
  endpoint:
    path: /Reports/RefundSummaryReport
    method: GET
    data_selector: records
- name: ProductAvailability
  endpoint:
    path: /Availability/Product
    method: GET
    data_selector: records
- name: ProductPricing
  endpoint:
    path: /Pricing/Product
    method: GET
    data_selector: records
- name: adjustmenthistoryinvoicedetailreport
  endpoint:
    path: /Reports/adjustmenthistoryinvoicedetailreport
    method: GET
    data_selector: records
- name: adjustmenthistoryproductdetailreport
  endpoint:
    path: /Reports/adjustmenthistoryproductdetailreport
    method: GET
    data_selector: records
- name: Stores
  endpoint:
    path: /Inventory/ProductsLifeCycleBySerialNumbers
    method: GET
    data_selector: records
    params:
      LocationType: Company
      LocationTypeIDs: '-1'
      LanguageCode: en-us
- name: PurchaseHistoryReport
  endpoint:
    path: /Reports/PurchaseHistoryReport
    method: GET
    data_selector: records
- name: PurchaseOrders
  endpoint:
    path: /inventory/PurchaseOrders
    method: GET
    data_selector: records
- name: PurchaseOrderDetailReport
  endpoint:
    path: /Reports/PurchaseOrderDetailReport
    method: GET
    data_selector: records
- name: ReceivingInvoiceHistoryReport_ByInvoice
  endpoint:
    path: /Reports/ReceivingInvoiceHistoryReport_ByInvoice
    method: GET
    data_selector: records
- name: ReceivingInvoiceHistoryReport_ByProduct
  endpoint:
    path: /Reports/ReceivingInvoiceHistoryReport_ByProduct
    method: GET
    data_selector: records
- name: rmahistoryinvoicereport
  endpoint:
    path: /Reports/rmahistoryinvoicereport
    method: GET
    data_selector: records
- name: rmahistoryproductreport
  endpoint:
    path: /Reports/rmahistoryproductreport
    method: GET
    data_selector: records
- name: TermDetails
  endpoint:
    path: /Reports/TermDetails
    method: GET
    data_selector: records
- name: transferhistoryinvoicedetailreport
  endpoint:
    path: /Reports/transferhistoryinvoicedetailreport
    method: GET
    data_selector: records
- name: transferhistoryproductdetailreport
  endpoint:
    path: /Reports/transferhistoryproductdetailreport
    method: GET
    data_selector: records
- name: Transfers
  endpoint:
    path: /Inventory/Transfers
    method: GET
    data_selector: records
- name: ProductLibraryMappingDiscrepancy
  endpoint:
    path: /Misc/ProductLibraryMappingDiscrepancy
    method: GET
    data_selector: records
- name: stores
  endpoint:
    path: /Reports/WarrantyInventoryListingReport
    method: GET
    data_selector: records
    params:
      LocationType: Company
      LocationTypeIDs: '-1'
      LanguageCode: en-us
- name: employees
  endpoint:
    path: /Lists/Employees
    method: GET
    data_selector: records
    params: {}
- name: assigned_locations
  endpoint:
    path: /Employees/AssignedLocations
    method: GET
    data_selector: records
    params: {}
- name: employee_reports
  endpoint:
    path: /Reports/AutoPunchOutReport
    method: GET
    data_selector: records
    params: {}
- name: employee_list_report
  endpoint:
    path: /Reports/employeelistreport
    method: GET
    data_selector: records
    params: {}
- name: payroll_report
  endpoint:
    path: /Reports/EmployeePayrollReport
    method: GET
    data_selector: records
    params: {}
- name: master_list_report
  endpoint:
    path: /Reports/employeemasterlistreport
    method: GET
    data_selector: records
    params: {}
- name: location_payroll_report
  endpoint:
    path: /Reports/LocationPayrollReport
    method: GET
    data_selector: records
    params: {}
- name: login_audit_report
  endpoint:
    path: /Reports/LoginAuditReport
    method: GET
    data_selector: records
    params: {}
- name: time_and_attendance_report
  endpoint:
    path: /Reports/TimeAndAttendanceReport
    method: GET
    data_selector: records
    params: {}
- name: manager_time_sheet_approval_report
  endpoint:
    path: /Reports/ManagerTimeSheetApprovalReport/EmployeeAttendanceDetails
    method: GET
    data_selector: records
    params: {}
- name: punch_revision_details
  endpoint:
    path: /Reports/ManagerTimeSheetApprovalReport/PunchRevisionDetails
    method: GET
    data_selector: records
    params: {}
- name: PaymentIntegrationTransactionByDateReport
  endpoint:
    path: /Reports/PaymentIntegrationTransactionByDateReport
    method: GET
    data_selector: records
    params: {}
- name: PaymentTypeAuditReport
  endpoint:
    path: /Reports/PaymentTypeAuditReport
    method: GET
    data_selector: records
    params: {}
- name: TaxDetailsReport
  endpoint:
    path: /Reports/TaxDetailsReport
    method: GET
    data_selector: records
    params: {}
- name: TaxDetailsNonTaxableSalesByBillPay
  endpoint:
    path: /Reports/TaxDetailsNonTaxableSalesByBillPay
    method: GET
    data_selector: records
    params: {}
- name: TaxDetailsNonTaxableSalesByInvoiceId
  endpoint:
    path: /Reports/TaxDetailsNonTaxableSalesByInvoiceId
    method: GET
    data_selector: records
    params: {}
- name: TaxDetailsNonTaxableSalesByInvoices
  endpoint:
    path: /Reports/TaxDetailsNonTaxableSalesByInvoices
    method: GET
    data_selector: records
    params: {}
- name: TaxDetailsNonTaxableSalesByProducts
  endpoint:
    path: /Reports/TaxDetailsNonTaxableSalesByProducts
    method: GET
    data_selector: records
    params: {}
- name: TaxDetailsTaxableSalesByBillPay
  endpoint:
    path: /Reports/TaxDetailsTaxableSalesByBillPay
    method: GET
    data_selector: records
    params: {}
- name: TaxDetailsTaxableSalesByInvoiceId
  endpoint:
    path: /Reports/TaxDetailsTaxableSalesByInvoiceId
    method: GET
    data_selector: records
    params: {}
- name: TaxDetailsTaxableSalesByInvoices
  endpoint:
    path: /Reports/TaxDetailsTaxableSalesByInvoices
    method: GET
    data_selector: records
    params: {}
- name: TaxDetailsTaxableSalesByProducts
  endpoint:
    path: /Reports/TaxDetailsTaxableSalesByProducts
    method: GET
    data_selector: records
    params: {}
- name: CommissionLedgerActivityReport
  endpoint:
    path: /Reports/CommissionLedgerActivityReport
    method: GET
    data_selector: records
    params:
      StartDate: '2019-06-01T10:06:35.133'
      StopDate: '2019-12-31'
      TransactionType: '1'
      ReconcStatus: '-1'
      JournalIDs: '-1'
      LanguageCode: en-us
      LocationType: Company
      LocationTypeIDs: '-1'
      ProductIdentifier: ACPHLG000135
- name: AR_Ledger_Activity_Report
  endpoint:
    path: /Reports/ARLedgerActivityReport
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
      ActivityType: required
      SearchMethod: required
      AccountsReceivableIDByStore: optional
      LocationTypeIDs: optional
      LocationType: optional
      LanguageCode: optional
- name: Stores
  endpoint:
    path: /Reports/BillPayHistoryReport
    method: GET
    data_selector: records
    params:
      LocationType: optional
      LocationTypeIDs: optional
      LanguageCode: optional
- name: Cash_Audit_Trail_Report
  endpoint:
    path: /Reports/CashAuditTrailReport
    method: GET
    data_selector: records
    params:
      LocationType: optional
      LocationTypeIDs: optional
      LanguageCode: optional
- name: Cash_Outs
  endpoint:
    path: /Finance/CashOuts
    method: GET
    data_selector: records
    params:
      LocationType: optional
      LocationTypeIDs: optional
      LanguageCode: optional
- name: Cash_Out_Summary_Report
  endpoint:
    path: /Reports/CashOutSummaryReport
    method: GET
    data_selector: records
    params:
      LocationType: optional
      LocationTypeIDs: optional
      LanguageCode: optional
- name: Chargeback_Summary_Report
  endpoint:
    path: /Reports/chargebacksummaryreport
    method: GET
    data_selector: records
    params:
      LocationType: optional
      LocationTypeIDs: optional
      LanguageCode: optional
- name: Gift_Card_Summary_Report
  endpoint:
    path: /Reports/GiftCardSummaryReport
    method: GET
    data_selector: records
    params:
      LocationType: optional
      LocationTypeIDs: optional
      LanguageCode: optional
- name: GL_Account_Activity_Report
  endpoint:
    path: /Finance/GLAccountActivityReport
    method: GET
    data_selector: records
    params:
      LocationType: optional
      LocationTypeIDs: optional
      LanguageCode: optional
- name: GL_Account_Activity_Report_Company_Detail
  endpoint:
    path: /Finance/GLAccountActivityReport/CompanyDetail
    method: GET
    data_selector: records
    params:
      LocationType: optional
      LocationTypeIDs: optional
      LanguageCode: optional
- name: GL_Account_Activity_Report_Great_Plains
  endpoint:
    path: /Finance/GLAccountActivityReport/GreatPlains
    method: GET
    data_selector: records
    params:
      LocationType: optional
      LocationTypeIDs: optional
      LanguageCode: optional
- name: GL_Account_Activity_Report_QuickBooks
  endpoint:
    path: /Finance/GLAccountActivityReport/QuickBooks
    method: GET
    data_selector: records
    params:
      LocationType: optional
      LocationTypeIDs: optional
      LanguageCode: optional
- name: GL_Account_List_Report
  endpoint:
    path: /Reports/GLAccountListReport
    method: GET
    data_selector: records
    params:
      LocationType: optional
      LocationTypeIDs: optional
      LanguageCode: optional
- name: Tax_Collected_Report
  endpoint:
    path: /Reports/TaxCollectedReport
    method: GET
    data_selector: records
    params:
      LocationType: optional
      LocationTypeIDs: optional
      LanguageCode: optional
- name: stores
  endpoint:
    path: /Lists/Stores
    method: GET
    data_selector: records
    params:
      LocationType: Company
      LocationTypeIDs: -1
      LanguageCode: en-us
- name: activity_type_id
  endpoint:
    path: /Lists/ActivityTypeID
    method: GET
    data_selector: records
- name: bill_pay_provider_id
  endpoint:
    path: /Lists/BillPayProviderID
    method: GET
    data_selector: records
- name: cash_audit_trail_type_id
  endpoint:
    path: /Lists/CashAuditTrailTypeID
    method: GET
    data_selector: records
- name: coupon_id
  endpoint:
    path: /Lists/CouponID
    method: GET
    data_selector: records
- name: discount_level_id
  endpoint:
    path: /Lists/DiscountLevelID
    method: GET
    data_selector: records
- name: financing_detail_id
  endpoint:
    path: /Lists/FinancingDetailID
    method: GET
    data_selector: records
- name: group_id
  endpoint:
    path: /Lists/GroupID
    method: GET
    data_selector: records
- name: integration_provider_ids
  endpoint:
    path: /Lists/IntegrationProviderIDs
    method: GET
    data_selector: records
- name: location_ids
  endpoint:
    path: /Lists/LocationIDs
    method: GET
    data_selector: records
- name: manufacture_id
  endpoint:
    path: /Lists/ManufactureID
    method: GET
    data_selector: records
- name: non_sellable_reason_code
  endpoint:
    path: /Lists/NonSellableReasonCode
    method: GET
    data_selector: records
- name: payment_type_ids
  endpoint:
    path: /Lists/PaymentTypeIDs
    method: GET
    data_selector: records
- name: stores
  endpoint:
    path: /Lists/Stores
    method: GET
    data_selector: records
    params:
      LocationType: Company
      LocationTypeIDs: '-1'
      LanguageCode: en-us
- name: category_number
  endpoint:
    path: /Lists/CategoryNumber
    method: GET
    data_selector: records
    params:
      IncludeDisabled: 'false'
- name: commission_groups
  endpoint:
    path: /Lists/CommissionGroups
    method: GET
    data_selector: records
- name: performance_groups
  endpoint:
    path: /Lists/PerformanceGroups
    method: GET
    data_selector: records
- name: security_roles
  endpoint:
    path: /Lists/SecurityRoles
    method: GET
    data_selector: records
- name: carriers
  endpoint:
    path: /Lists/CarrierSIP
    method: GET
    data_selector: records
- name: employees
  endpoint:
    path: /Lists/Employees
    method: GET
    data_selector: records
- name: ProductIdentifier
  endpoint:
    path: /Lists/ProductIdentifier
    method: GET
    data_selector: records
- name: ReasonCode
  endpoint:
    path: /Lists/ReasonCode
    method: GET
    data_selector: records
- name: TaxID
  endpoint:
    path: /Lists/TaxID
    method: GET
    data_selector: records
- name: TradeInProviderIDs
  endpoint:
    path: /Lists/TradeInProviderIDs
    method: GET
    data_selector: records
- name: VendorAccountID
  endpoint:
    path: /Lists/VendorAccountID
    method: GET
    data_selector: records
- name: VendorID
  endpoint:
    path: /Lists/VendorID
    method: GET
    data_selector: records
- name: CardTypes
  endpoint:
    path: /Lists/CardTypes
    method: GET
    data_selector: records
- name: EntryTypes
  endpoint:
    path: /Lists/EntryTypes
    method: GET
    data_selector: records
- name: GL_SourceType
  endpoint:
    path: /Lists/GL_SourceType
    method: GET
    data_selector: records
- name: LocationType
  endpoint:
    path: /Lists/LocationType
    method: GET
    data_selector: records
- name: ProductType
  endpoint:
    path: /Lists/ProductType
    method: GET
    data_selector: records
- name: SalesOpportunityType
  endpoint:
    path: /Lists/SalesOpportunityType
    method: GET
    data_selector: records
- name: ServiceTypes
  endpoint:
    path: /Lists/ServiceTypes
    method: GET
    data_selector: records
- name: StoreTypes
  endpoint:
    path: /Lists/StoreTypes
    method: GET
    data_selector: records
- name: ShippingOptions
  endpoint:
    path: /ShippingOptions
    method: POST
    data_selector: ShippingOptions
- name: ShippingOptions
  endpoint:
    path: /ShippingOptions
    method: POST
    data_selector: ShippingOptions
- name: Get a Webhook
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: GET
- name: Update a Webhook
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: PUT
- name: Delete a Webhook
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: DELETE
- name: Get Dropship Orders
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: GET
    data_selector: records
    params:
      SupplierId: required
- name: Update Dropship Order Status
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: PUT
    data_selector: records
    params:
      SupplierId: required
      OrderId: required
- name: Create Webhook
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: POST
    data_selector: records
    params:
      EventName: required
      EntityId: required
- name: Get All Webhooks
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: GET
    data_selector: records
    params:
      EventName: required
      EntityId: required
- name: OrderCreated
  endpoint:
    path: /api/order-created
    method: POST
    data_selector: Order
    params: {}
- name: OrderUpdated
  endpoint:
    path: /api/order-updated
    method: POST
    data_selector: Order
    params: {}
- name: webhook
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks
    method: post
    data_selector: application/json
    params: {}
- name: get_all_webhooks
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks
    method: get
    data_selector: application/json
    params: {}
- name: get_webhook
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: get
    data_selector: application/json
    params: {}
- name: update_webhook
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: put
    data_selector: application/json
    params: {}
- name: delete_webhook
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: delete
    data_selector: application/json
    params: {}
- name: OrderStatusUpdate
  endpoint:
    path: /Suppliers({SupplierId})/Orders({OrderId})/OrderStatusUpdate
    method: PUT
    data_selector: application/json
    params: {}
- name: ItemStatusUpdate
  endpoint:
    path: /Suppliers({SupplierId})/Orders({OrderId})/ItemStatusUpdate
    method: PUT
    data_selector: application/json
    params: {}
- name: Notifications
  endpoint:
    path: /Suppliers({SupplierId})/Notifications
    method: GET
    data_selector: application/atom+xml
    params: {}
- name: NavigateOrderFeedArchive
  endpoint:
    path: /Suppliers({SupplierId})/Notifications/Pages({PageId})
    method: GET
    data_selector: application/atom+xml
    params:
      PageId: string
- name: UpdateCost
  endpoint:
    path: /Suppliers({SupplierId})/Cost
    method: POST
    data_selector: application/json
    params: {}
- name: UpdateAvailability
  endpoint:
    path: /Suppliers({SupplierId})/Availability
    method: POST
    data_selector: application/json
    params: {}
- name: Catalog Items
  endpoint:
    path: /Companies({CompanyId})/Catalog/Search
    method: GET
    data_selector: Items
    params:
      CompanyId: '235929'
      includeArchived: false
- name: Get a Catalog Item
  endpoint:
    path: /Companies({CompanyId})/Catalog/Search
    method: GET
    data_selector: Items
- name: Get Product Details for a Catalog Item
  endpoint:
    path: /Companies({CompanyId})/Catalog/Search
    method: GET
    data_selector: Items
    params:
      CompanyId: '235929'
      CatalogItemId: a6ca2fde-3c0e-4b8f-9a65-6c37bd33851a
- name: Get Product Details for a List of Catalog Items
  endpoint:
    path: /Companies({CompanyId})/Catalog/Search
    method: GET
    data_selector: Items
    params:
      CompanyId: '235929'
      CatalogItemIds:
      - 21ac987c-d55a-482a-9450-402976a71563
      - 402976a7-482a-d55a-1563-21ac987c9450
- name: Catalog Items by Subscription List
  endpoint:
    path: /Companies({CompanyId})/Catalog/Search
    method: GET
    data_selector: Items
    params:
      CompanyId: '235929'
      SubscriptionListId: '{{SubscriptionListId}}'
- name: Catalog Items by Product Library Identifier
  endpoint:
    path: /Companies({CompanyId})/Catalog/Search
    method: GET
    data_selector: Items
    params:
      CompanyId: '235929'
      Slug: '{{Slug}}'
- name: Catalog Items by External Identifier
  endpoint:
    path: /Companies({CompanyId})/Catalog/Search
    method: GET
    data_selector: Items
    params:
      CompanyId: '235929'
      RmsId: '{{RmsId}}'
- name: Catalog Item by Catalog SKU
  endpoint:
    path: /Companies({CompanyId})/Catalog/Search
    method: GET
    data_selector: Items
    params:
      CompanyId: '235929'
      CatalogSku: '{{CatalogSku}}'
- name: get_catalog_items_by_vendor_sku
  endpoint:
    path: /Companies({CompanyId})/Catalog/Search
    method: GET
    data_selector: Items
    params:
      CompanyId: required
      VendorSku: required
- name: get_catalog_items_by_manufacturer_sku
  endpoint:
    path: /Companies({CompanyId})/Catalog/Search
    method: GET
    data_selector: Items
    params:
      CompanyId: required
      Sku: required
- name: get_catalog_items_by_search_criteria
  endpoint:
    path: /Companies({CompanyId})/Catalog/Search
    method: GET
    data_selector: Items
    params:
      CompanyId: required
- name: extended_attributes
- name: product_details
- name: compatible_products
- name: search
- name: CatalogItemProduct
  endpoint:
    path: /catalog/item
    method: GET
    data_selector: Items
    params:
      Page: 1
      PageSize: 20
- name: CatalogItemByVendorSKU
  endpoint:
    path: /catalog/item/vendor
    method: GET
    data_selector: Items
    params:
      VendorSku: SKU-123
- name: CatalogItemByManufacturerSKU
  endpoint:
    path: /catalog/item/manufacturer
    method: GET
    data_selector: Items
    params:
      Sku: MSKU-456
- name: Create a Private Product
  endpoint:
    path: /Companies({CompanyId})/Catalog/Items/private
    method: POST
    data_selector: CatalogItem
- name: Import a Product from Product Library
  endpoint:
    path: /Companies({CompanyId})/Catalog/Items
    method: POST
    data_selector: CatalogItem
- name: Get All Catalog Items
  endpoint:
    path: /Companies({CompanyId})/Catalog/Items
    method: GET
    data_selector: CatalogItem
- name: Get a Catalog Item
  endpoint:
    path: /Companies({CompanyId})/Catalog/Items({CatalogItemId})
    method: GET
    data_selector: CatalogItemExtended
- name: Get Catalog Items by Subscription List
  endpoint:
    path: /Companies({CompanyId})/Catalog/Items(SourceId={SubscriptionListId})
    method: GET
    data_selector: CatalogItemRoot
- name: Get Catalog Items by Product Library Identifier
  endpoint:
    path: /Companies({CompanyId})/Catalog/Items(Slug={Slug})
    method: GET
    data_selector: CatalogItemRoot
- name: Get Catalog Items by External Identifier
  endpoint:
    path: /Companies({CompanyId})/Catalog/Items(RmsId={RmsId})
    method: GET
    data_selector: CatalogItemRoot
- name: Get a Catalog Item by Catalog SKU
  endpoint:
    path: /Companies({CompanyId})/Catalog/Items(CatalogSku={CatalogSku})
    method: GET
    data_selector: CatalogItem
- name: Get Extended Attributes for a Catalog Item
  endpoint:
    path: /Companies({CompanyId})/Catalog/Items({CatalogItemId})/attributes
    method: GET
    data_selector: Attribute
- name: Get Product Details for a Catalog Item
  endpoint:
    path: /Companies({CompanyId})/Catalog/Items({CatalogItemId})/ProductDetails
    method: GET
    data_selector: CatalogItemProduct
- name: Get Compatible Products for a Catalog Item
  endpoint:
    path: /Companies({CompanyId})/Catalog/Items({CatalogItemId})/Compatible
    method: GET
    data_selector: CatalogItemCompatible
- name: Get Catalog Items by Vendor SKU
  endpoint:
    path: /Companies({CompanyId})/Catalog/Items/ByVendorSku
    method: GET
    data_selector: CatalogItemByVendorSKU
- name: Get Catalog Items by Manufacturer SKU
  endpoint:
    path: /Companies({CompanyId})/Catalog/Items/ByManufacturerSku
    method: GET
    data_selector: CatalogItemByManufacturerSKU
- name: Get Catalog Items by Search Criteria
  endpoint:
    path: /Companies({CompanyId})/Catalog/Search
    method: GET
    data_selector: CatalogSearch
- name: create_or_update_subscription_list
  endpoint:
    path: /subscription
    method: put
    data_selector: ListId
    params: {}
- name: get_subscription_list_details
  endpoint:
    path: /subscription({ListId})
    method: get
    data_selector: Companies
    params: {}
- name: get_all_companies
  endpoint:
    path: /subscription({ListId})/companies
    method: get
    data_selector: Companies
    params: {}
- name: add_company_to_subscription_list
  endpoint:
    path: /subscription({ListId})/company({CompanyId})
    method: put
    data_selector: ''
    params: {}
- name: remove_company_from_subscription_list
  endpoint:
    path: /subscription({ListId})/company({CompanyId})
    method: delete
    data_selector: ''
    params: {}
- name: set_supplier_availability
  endpoint:
    path: /Suppliers({SupplierId})/SupplierSkus({RecordId})
    method: POST
- name: get_supplier_availability_all_products
  endpoint:
    path: /Suppliers({SupplierId})/SupplierSkus
    method: GET
- name: get_supplier_availability_product
  endpoint:
    path: /Suppliers({SupplierId})/SupplierSkus({RecordId})
    method: GET
- name: update_supplier_availability
  endpoint:
    path: /Suppliers({SupplierId})/SupplierSkus({RecordId})
    method: PUT
- name: delete_supplier_availability
  endpoint:
    path: /Suppliers({SupplierId})/SupplierSkus({RecordId})
    method: DELETE
- name: supplier_availability_all
  endpoint:
    path: /Suppliers({SupplierId})/SupplierSkus
    method: GET
    data_selector: items
    params: {}
- name: supplier_availability_product
  endpoint:
    path: /Suppliers({SupplierId})/SupplierSkus({RecordId})
    method: GET
    data_selector: item
    params: {}
- name: Nodes
  endpoint:
    path: /Entities({CompanyId})/Nodes
    method: GET
    data_selector: records
    params: {}
- name: get_all_locations
  endpoint:
    path: /Entities({CompanyId})/Nodes
    method: GET
    data_selector: records
- name: get_location
  endpoint:
    path: /Entities({CompanyId})/Nodes
    method: GET
    data_selector: records
- name: create_location
  endpoint:
    path: /Entities({CompanyId})/Nodes
    method: POST
    data_selector: records
- name: update_location
  endpoint:
    path: /Entities({CompanyId})/Nodes
    method: PUT
    data_selector: records
- name: delete_group_or_division
  endpoint:
    path: /Entities({CompanyId})/Nodes
    method: DELETE
    data_selector: records
- name: carriers
  endpoint:
    path: /Entities({CompanyId})/Nodes
    method: GET
    data_selector: records
- name: manufacturers
  endpoint:
    path: /Entities({CompanyId})/Nodes
    method: GET
    data_selector: records
- name: suppliers
  endpoint:
    path: /Entities({CompanyId})/Nodes
    method: GET
    data_selector: records
- name: companies
  endpoint:
    path: /Entities({CompanyId})/Nodes
    method: GET
    data_selector: records
- name: company_tree
  endpoint:
    path: /Entities({CompanyId})/Nodes
    method: GET
    data_selector: records
- name: divisions
  endpoint:
    path: /Entities({CompanyId})/Nodes
    method: GET
    data_selector: records
- name: location_groups
  endpoint:
    path: /Entities({CompanyId})/Nodes
    method: GET
    data_selector: records
- name: CompanyTree
  endpoint:
    path: /Search-Company-Tree
    method: GET
    data_selector: nodes
    params:
      CompanyId: required
      $filter: optional
- name: Path
  endpoint:
    path: /path
    method: GET
    data_selector: records
- name: Address
  endpoint:
    path: /address
    method: GET
    data_selector: records
- name: Area
  endpoint:
    path: /area
    method: GET
    data_selector: records
- name: Carriers
  endpoint:
    path: /Carriers
    method: GET
    data_selector: items
- name: Manufacturers
  endpoint:
    path: /Manufacturers
    method: GET
    data_selector: items
- name: Suppliers
  endpoint:
    path: /Suppliers
    method: GET
    data_selector: items
- name: Companies
  endpoint:
    path: /Companies({CompanyId})
    method: GET
    data_selector: items
- name: Company Tree
  endpoint:
    path: /Companies({CompanyId})/Tree
    method: GET
    data_selector: items
- name: Locations
  endpoint:
    path: /Companies({CompanyId})/Locations
    method: GET
    data_selector: items
- name: Divisions
  endpoint:
    path: /Companies({CompanyId})/Tree/Nodes({NodeId})/Divisions
    method: POST
    data_selector: items
- name: Groups
  endpoint:
    path: /Companies({CompanyId})/Tree/Nodes({NodeId})/Groups
    method: POST
    data_selector: items
- name: Process Order
  endpoint:
    path: /Companies({CompanyId})/Orders({OrderId})/Process
    method: POST
    data_selector: ''
    params: {}
- name: Get all Orders with Items
  endpoint:
    path: /Companies({CompanyId})/Orders
    method: GET
    data_selector: ''
    params: {}
- name: Get an Order with Items
  endpoint:
    path: /Companies({CompanyId})/Orders({OrderId})
    method: GET
    data_selector: ''
    params: {}
- name: Update an Order with Items
  endpoint:
    path: /Companies({CompanyId})/Orders({OrderId})
    method: PUT
    data_selector: ''
    params: {}
- name: get_all_orders
  endpoint:
    path: /Companies({CompanyId})/Orders
    method: GET
    data_selector: records
    params:
      $filter: PrintableId eq '80Z0M02'
      $skip: 0
      $top: 50
- name: get_all_items_for_order
  endpoint:
    path: /Companies({CompanyId})/Orders({OrderId})
    method: GET
    data_selector: records
    params: {}
- name: ItemOrder
  endpoint:
    path: /orders
    method: PUT
    data_selector: Items
    params:
      LocationId: string
      OrderId: string
      CompanyId: integer
      CustomerId: string
      $skip: integer
      $top: integer
- name: orders
  endpoint:
    path: /Companies({CompanyId})/Orders
    method: GET
    data_selector: items
    params: {}
- name: order_items
  endpoint:
    path: /Companies({CompanyId})/Orders({OrderId})/Items
    method: GET
    data_selector: items
    params: {}
- name: sales_order
  endpoint:
    path: /Companies({CompanyId})/PrintableId({PrintableId})
    method: GET
    data_selector: SalesOrders
    params:
      CompanyId: required
      PrintableId: required
- name: create_sales_order_no_invoice
  endpoint:
    path: /salesorder
    method: POST
    data_selector: SalesOrders
    params:
      CompanyId: required
- name: get_sales_order
  endpoint:
    path: /salesorder/{SaleOrderId}
    method: GET
    data_selector: SalesOrders
    params:
      CompanyId: required
      SaleOrderId: required
- name: GetLogEntries
  endpoint:
    path: /Companies({CompanyId})/LogEntries
    method: GET
    data_selector: SalesOrders
    params:
      $top: 50
      $skip: 0
- name: GetSalesOrderStatus
  endpoint:
    path: /Companies({CompanyId})/PrintableId({SaleOrderId})
    method: GET
    data_selector: SalesOrders
    params: {}
- name: UpdateSalesOrderStatus
  endpoint:
    path: /Companies({CompanyId})/PrintableId({SaleOrderId})
    method: PUT
    data_selector: SalesOrders
    params: {}
- name: GetDetailsForLogEntry
  endpoint:
    path: /Companies({CompanyId})/LogEntries({LogEntryId})
    method: GET
    data_selector: SalesOrders
    params: {}
- name: create_purchase_order
  endpoint:
    path: /rqpurchaseorders/Companies/{CompanyId}/PurchaseOrders
    method: POST
    data_selector: PurchaseOrder
    params: {}
- name: receive_purchase_order
  endpoint:
    path: /rqpurchaseorders/Companies/{CompanyId}/PurchaseOrders/{PurchaseOrderId}/Receive
    method: POST
    data_selector: PurchaseOrderReceiving
    params: {}
- name: Create a Purchase Order
  endpoint:
    path: /Companies/{CompanyId}/PurchaseOrders
    method: POST
    data_selector: OK
    params: {}
- name: Receive a Purchase Order
  endpoint:
    path: /Companies/{CompanyId}/PurchaseOrders/{PurchaseOrderId}/Receive
    method: POST
    data_selector: OK
    params: {}
- name: locations
  endpoint:
    path: /v1/Companies(14146)/Locations
    method: GET
    data_selector: '[]'
    params:
      CompanyId: Provided in Onboarding Package.
- name: users
  endpoint:
    path: /v1/Entities(14146)/Users
    method: GET
    data_selector: items
    params:
      EntityId: Provided in Onboarding Package.
- name: customers
  endpoint:
    path: /v1/Companies(14146)/CustomerSearch
    method: GET
    data_selector: '[]'
    params:
      CompanyId: Provided in Onboarding Package.
- name: create_purchase_order
  endpoint:
    path: /rqpurchaseorders/Companies/14146/PurchaseOrders
    method: POST
    data_selector: '{}'
- name: invoice_details
  endpoint:
    path: /rqtransactiondetails/companies/{CompanyId}/rqInvoices/{InvoiceIdentifier}
    method: GET
    data_selector: InvoiceTaxTotals
    params: {}
- name: ping
  endpoint:
    path: /ping
    method: GET
    data_selector: application/json
    params: {}
- name: invoice_details
  endpoint:
    path: /companies/{CompanyId}/rqInvoices/{InvoiceIdentifier}
    method: GET
    data_selector: application/json
    params: {}
- name: supplier_cost_all_products
  endpoint:
    path: /v1/Suppliers({SupplierId})/Companies({CompanyId})/SupplierCosts
    method: GET
    data_selector: records
    params:
      $filter: $filter=Sku eq '6445284'
- name: supplier_cost_product_by_company
  endpoint:
    path: /v1/Suppliers({SupplierId})/Companies({CompanyId})/SupplierCosts
    method: GET
    data_selector: records
    params:
      $filter: $filter=Sku eq '6445284'
- name: SupplierCosts
  endpoint:
    path: /Suppliers({SupplierId})/SupplierCosts
    method: GET
    data_selector: items
    params:
      SupplierId: SupplierId
      Filter: $filter
- name: CompanySupplierCosts
  endpoint:
    path: /Suppliers({SupplierId})/Companies({CompanyId})/SupplierCosts
    method: GET
    data_selector: items
    params:
      SupplierId: SupplierId
      CompanyId: CompanyId
      Filter: $filter
- name: vendor_rebate_history_report
  endpoint:
    path: /Partner/Reports/vendorrebatehistoryreport
    method: GET
    data_selector: records
    params:
      CompanyID: required
      StartDate: required
      StopDate: required
      ReconciledStatus: required
      RemoveRefunds: required
      SearchMethod: required
      VendorAccountID: optional
      JournalNumber: optional
      EmployeeIDOfReconcilers: optional
      CategoryNumber: optional
      SerialNumber: optional
      ProductIdentifier: optional
      ApplyShowOnInvoice: optional
      LanguageCode: optional
      LocationType: optional
      LocationTypeIDs: optional
- name: category_number
  endpoint:
    path: /Partner/Lists/categorynumber
    method: GET
    data_selector: records
    params:
      CompanyID: required
      IncludeDisabled: boolean
- name: commission_groups
  endpoint:
    path: /Partner/Lists/CommissionGroups
    method: GET
    data_selector: records
- name: performance_groups
  endpoint:
    path: /Partner/Lists/PerformanceGroups
    method: GET
    data_selector: records
- name: carriers
  endpoint:
    path: /Partner/Lists/CarrierSIP
    method: GET
    data_selector: records
    params:
      CompanyID: required
- name: employees
  endpoint:
    path: /Partner/Lists/employees
    method: GET
    data_selector: records
- name: stores
  endpoint:
    path: /Partner/lists/stores
    method: GET
    data_selector: records
- name: relationships
  endpoint:
    path: /Partner/relationships
    method: GET
    data_selector: records
- name: location_master_list_report
  endpoint:
    path: /Partner/Reports/locationmasterlistreport
    method: GET
    data_selector: records
    params:
      CompanyID: required
      LocationType: optional
      LocationTypeIDs: optional
      StartDateLastModified: optional
      StopDateLastModified: optional
      StoreID: optional
- name: attachment_rates
  endpoint:
    path: /Partner/Lists/AttachmentRates
    method: GET
    data_selector: records
    params:
      CompanyID: required
- name: vendor_account_id
  endpoint:
    path: /Partner/Lists/VendorAccountID
    method: GET
    data_selector: records
    params:
      CompanyID: required
- name: card_types
  endpoint:
    path: /Partner/Lists/CardTypes
    method: GET
    data_selector: records
    params:
      CompanyID: required
- name: entry_types
  endpoint:
    path: /Partner/Lists/EntryTypes
    method: GET
    data_selector: records
    params:
      CompanyID: required
- name: gl_source_type
  endpoint:
    path: /Partner/Lists/GL_SourceType
    method: GET
    data_selector: records
    params:
      CompanyID: required
- name: location_type
  endpoint:
    path: /Partner/Lists/LocationType
    method: GET
    data_selector: records
    params:
      CompanyID: required
- name: product_type
  endpoint:
    path: /Partner/Lists/ProductType
    method: GET
    data_selector: records
    params:
      CompanyID: required
- name: sales_opportunity_type
  endpoint:
    path: /Partner/Lists/SalesOpportunityType
    method: GET
    data_selector: records
    params:
      CompanyID: required
- name: service_types
  endpoint:
    path: /Partner/Lists/ServiceTypes
    method: GET
    data_selector: records
    params:
      CompanyID: required
- name: store_types
  endpoint:
    path: /Partner/Lists/StoreTypes
    method: GET
    data_selector: records
    params:
      CompanyID: required
- name: ProductFeed
  endpoint:
    path: /ProductFeeds({FeedId})
    method: GET
    data_selector: records
    params:
      FeedId: required
- name: AddProductToProductFeed
  endpoint:
    path: /ProductFeeds({FeedId})/Products
    method: POST
    data_selector: records
    params:
      FeedId: required
- name: RemoveProductFromProductFeed
  endpoint:
    path: /ProductFeeds({FeedId})/Products({ProductId})
    method: DELETE
    data_selector: records
    params:
      FeedId: required
      ProductId: required
- name: Tasks
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: ''
      StopDate: ''
      LocationType: ''
      LocationTypeIDs: '-1'
- name: customers
  endpoint:
    path: /getCustomers
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
      LocationTypeIDs: '-1'
- name: employees
  endpoint:
    path: /getEmployees
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
      LocationTypeIDs: '-1'
- name: Adjustments
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
      LocationType: Company
      LocationTypeIDs: '-1'
- name: Adjustments / Products
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
      LocationType: Company
      LocationTypeIDs: '-1'
- name: Adjustments / ReasonCodes
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
- name: Categories
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
      LanguageCode: en-us
- name: CashIn
  endpoint:
    path: /Finance/CashIn
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
      LocationType: Company
      LocationTypeIDs: '-1'
- name: CashOuts
  endpoint:
    path: /Finance/CashOuts
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
      LocationType: Company
      LocationTypeIDs: '-1'
- name: CashOuts / Terminals
  endpoint:
    path: /Finance/CashOuts/Terminals
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
      LocationType: Company
      LocationTypeIDs: '-1'
- name: CashOuts / Totals
  endpoint:
    path: /Finance/CashOuts/Totals
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
      LocationType: Company
      LocationTypeIDs: '-1'
- name: CashSkim
  endpoint:
    path: /Finance/CashSkim
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
      LocationType: Company
      LocationTypeIDs: '-1'
- name: CloseOuts
  endpoint:
    path: /Finance/CloseOuts
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
      LocationType: Company
      LocationTypeIDs: '-1'
- name: Tasks
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
- name: Tasks
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
- name: locations_districts
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
      LocationType: Company
      LocationTypeIDs: '-1'
      LanguageCode: en-us
- name: CountSheets
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
- name: Products
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
- name: Categories
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
- name: Orphaned
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
- name: BatchImports
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
- name: Import
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
- name: Coupons
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
- name: Serialized
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
- name: Stores
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
- name: GiftCards
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
- name: Tasks
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
      LocationType: string
      LocationTypeIDs: '-1'
      LanguageCode: en-us
- name: locations_tasks
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
- name: orders
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
- name: performance_groups
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
- name: groups_products
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
- name: groups_categories
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: '2019-10-01T18:00:00.000'
      StopDate: '2019-10-01T18:15:00.000'
- name: tasks
  endpoint:
    path: /Delta/Tasks
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
      LocationType: string
      LocationTypeIDs: string
- name: reason_codes
  endpoint:
    path: /Delta/ReasonCodes
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
      LocationType: string
      LocationTypeIDs: string
- name: security_overrides
  endpoint:
    path: /Delta/SecurityOverrides
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
      LocationType: string
      LocationTypeIDs: string
- name: service_requests
  endpoint:
    path: /Delta/ServiceRequests
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
      LocationType: string
      LocationTypeIDs: string
- name: adjustments
  endpoint:
    path: /Delta/Adjustments
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
      LocationType: string
      LocationTypeIDs: string
- name: non_sellable
  endpoint:
    path: /Delta/NonSellable
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
      LocationType: string
      LocationTypeIDs: string
- name: taxes
  endpoint:
    path: /Delta/Taxes
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
      LocationType: string
      LocationTypeIDs: string
- name: order_status_update
  endpoint:
    path: /v1/Suppliers(14107)/Orders(0ff6f9f7-9e31-4039-8365-ff5471dbee7e)/OrderStatusUpdate
    method: PUT
    data_selector: Id
    params: {}
- name: item_status_update
  endpoint:
    path: /v1/Suppliers(14107)/Orders(0ff6f9f7-9e31-4039-8365-ff5471dbee7e)/ItemStatusUpdate
    method: PUT
    data_selector: Id
    params: {}
- name: Order Notifications Feed
  endpoint:
    path: /v1/Suppliers({supplierId})/Notifications
    method: GET
    data_selector: feed.entry
    params:
      SupplierId: supplierId
- name: Order Feed Archives
  endpoint:
    path: /v1/Suppliers({supplierId})/Notifications/Pages({pageId})
    method: GET
    data_selector: feed.entry
    params:
      SupplierId: supplierId
      PageId: pageId
- name: ShippingOptions
  endpoint:
    path: /ShippingOptions
    method: POST
    data_selector: ShippingOptions
- name: get_webhook
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: GET
- name: update_webhook
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: PUT
- name: delete_webhook
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: DELETE
- name: get_dropship_orders
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: GET
    data_selector: records
    params: {}
- name: update_dropship_order_status
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks({WebhookId})
    method: PUT
    data_selector: records
    params: {}
- name: create_webhook
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks
    method: POST
    data_selector: records
    params: {}
- name: get_all_webhooks
  endpoint:
    path: /Entities({EntityId})/Events({EventName})/Webhooks
    method: GET
    data_selector: records
    params: {}
- name: classification_tree
  endpoint:
    path: /ClassificationTrees({ClassificationTreeId})
    method: GET
    data_selector: records
    params: {}
- name: FieldDefinitions
  endpoint:
    path: /FieldDefinitions
    method: GET
    data_selector: items
- name: FieldDefinition
  endpoint:
    path: /FieldDefinitions({FieldDefinitionId})
    method: GET
    data_selector: '$ref: ''#/components/schemas/FieldDefinition'''
    params:
      FieldDefinitionId: required
- name: ClassificationTrees
  endpoint:
    path: /ClassificationTrees({ClassificationTreeId})
    method: GET
    data_selector: '$ref: ''#/components/schemas/ClassificationTree'''
    params:
      ClassificationTreeId: required
- name: CreatePurchaseOrder
  endpoint:
    path: /?op=CreatePurchaseOrder
    method: POST
    data_selector: ''
    params: {}
- name: PurchaseOrderShipmentNotice
  endpoint:
    path: /?op=CreatePurchaseOrderShipmentNotice
    method: POST
    data_selector: CreatePurchaseOrderShipmentNoticeResult
- name: purchase_orders_by_status
  endpoint:
    path: /?op=GetPurchaseOrdersByStatus
    method: POST
    data_selector: GetPurchaseOrdersByStatusResult
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: '-1'
      isCommitted: true
      isCompleted: true
      startDate: '2015-01-01T12:00:00.000'
      endDate: '2015-01-30T12:00:00.000'
- name: purchase_orders_by_reference_number
  endpoint:
    path: /?op=GetPurchaseOrderByReferenceNumber
    method: POST
    data_selector: GetPurchaseOrderByReferenceNumberResult
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: '-1'
      purchaseOrderReferenceNumber: '77123'
- name: create_uncommitted_purchase_order
  endpoint:
    path: /?op=CreateUncommittedPurchaseOrder
    method: POST
    data_selector: CreateUncommittedPurchaseOrderResult
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: -1
      vendorId: f8c68dc5-7417-4e4d-b17c-42838660772a
      purchaseOrder:
        PurchaseOrderID: 28890F70-8FC9-4A9B-9458-410A8D08502D
        PurchaseOrderData:
          BillToStoreID: 55
          EstimatedArrivalDate: 3/2/2014 12:00:00 AM
          ShipToStoreID: 55
          VendorInvoiceNumber: '563783'
        ProductsOrdered:
          ProductInformation:
            VendorSKU: SSGS5CB
            QuantityOrdered: 4
- name: update_purchase_order_status
  endpoint:
    path: /?op=UpdatePurchaseOrderStatus
    method: POST
    data_selector: UpdatePurchaseOrderStatusResult
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: -1
      RetailiQPurchaseOrderID: '16931'
      status: Completed
- name: update_purchase_order_comments
  endpoint:
    path: /?op=UpdatePurchaseOrderComments
    method: POST
    data_selector: UpdatePurchaseOrderCommentsResponse
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: -1
      RetailiQPurchaseOrderID: '22075'
      comments: Complete
- name: update_sales_and_purchase_order_location
  endpoint:
    path: /?op=UpdateSalesAndPurchaseOrderLocation
    method: POST
    data_selector: UpdateSalesAndPurchaseOrderLocationResult
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: -1
      RetailiQPurchaseOrderID: '22075'
      shipToStoreId: 4
- name: AddPurchaseOrderProduct
  endpoint:
    path: /?op=AddPurchaseOrderProduct
    method: POST
    data_selector: AddPurchaseOrderProductResult
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: '-1'
      RetailiQPurchaseOrderID: ''
      productIdentifier: ''
      cost: ''
      quantity: ''
- name: UpdatePurchaseOrderProduct
  endpoint:
    path: /?op=UpdatePurchaseOrderProduct
    method: POST
    data_selector: UpdatePurchaseOrderProductResult
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: '-1'
      RetailiQPurchaseOrderID: ''
      productIdentifier: ''
      cost: ''
      quantity: ''
- name: RemovePurchaseOrderProduct
  endpoint:
    path: /?op=RemovePurchaseOrderProduct
    method: POST
    data_selector: RemovePurchaseOrderProductResult
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: '-1'
      RetailiQPurchaseOrderID: ''
      productIdentifier: ''
      approvedToDelete: 'false'
      approvedToComplete: 'false'
- name: DeletePurchaseOrder
  endpoint:
    path: /?op=DeletePurchaseOrder
    method: POST
    data_selector: DeletePurchaseOrderResult
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: '-1'
      RetailiQPurchaseOrderID: ''
- name: UpdatePurchaseOrder
  endpoint:
    path: /?op=UpdatePurchaseOrder
    method: POST
- name: GetPurchaseOrderByBusinessID
  endpoint:
    path: /?op=GetPurchaseOrderByBusinessID
    method: POST
    data_selector: GetPurchaseOrderByBusinessIDResult
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: '-1'
      purchaseOrderIdByStore: '123'
- name: GetReceivingInfo
  endpoint:
    path: /?op=GetReceivingInfo
    method: POST
    data_selector: ReceivingInfo
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: '-1'
      StartDate: 01/01/2016
      EndDate: 05/25/2016
- name: GetStoreList
  endpoint:
    path: /?op=GetStoreList
    method: POST
    data_selector: GetStoreListResult
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: '-1'
- name: GetStoreInformation
  endpoint:
    path: /?op=GetStoreInformation
    method: POST
    data_selector: GetStoreInformationResult
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: '-1'
      storeId: '4'
- name: GetVendors
  endpoint:
    path: /?op=GetVendors
    method: POST
    data_selector: GetVendorsResult
    params:
      client:
        ClientID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        StoreId: '-1'
- name: NonSellable Adjustment
  endpoint:
    path: /Companies/{CompanyEntityId}/NonSellableAdjustment/{NonSellableAdjustmentId}
    method: GET
    data_selector: NonSellableAdjustmentId
    params: {}
- name: Inventory Adjustment
  endpoint:
    path: /Companies/{CompanyEntityId}/NonSellableAdjustment/{NonSellableAdjustmentId}
    method: GET
    data_selector: NonSellableAdjustmentId
    params: {}
- name: currencies
  endpoint:
    path: /Currencies
    method: GET
    data_selector: records
- name: Get Shipping Options
  endpoint:
    path: /Companies({CompanyId})/ShippingInformation
    method: POST
    data_selector: ShippingInformation
    params:
      CompanyId: required
- name: Set Supplier Availability
  endpoint:
    path: /Suppliers({SupplierId})/SupplierSkus
    method: POST
    data_selector: ''
    params: {}
- name: Get Supplier Availability of all Products
  endpoint:
    path: /Suppliers({SupplierId})/SupplierSkus
    method: GET
    data_selector: ''
    params:
      $filter: ''
- name: Get Supplier Availability of a Product
  endpoint:
    path: /Suppliers({SupplierId})/SupplierSkus({RecordId})
    method: GET
    data_selector: ''
    params: {}
- name: Update Supplier Availability
  endpoint:
    path: /Suppliers({SupplierId})/SupplierSkus({RecordId})
    method: PUT
    data_selector: ''
    params: {}
- name: Delete Supplier Availability
  endpoint:
    path: /Suppliers({SupplierId})/SupplierSkus({RecordId})
    method: DELETE
    data_selector: ''
    params: {}
- name: CreatePurchaseOrder
  endpoint:
    path: /?op=CreatePurchaseOrder
    method: POST
    data_selector: CreatePurchaseOrderResult
- name: CreatePurchaseOrderShipmentNotice
  endpoint:
    path: /?op=CreatePurchaseOrderShipmentNotice
    method: POST
    data_selector: CreatePurchaseOrderShipmentNoticeResult
- name: VendorIdentity
  endpoint:
    path: /VendorIdentity
    method: POST
- name: ClientAgent
  endpoint:
    path: /ClientAgent
    method: POST
- name: CompanyInformation
  endpoint:
    path: /CompanyInformation
    method: GET
- name: PurchaseOrderShipmentNotice
  endpoint:
    path: /PurchaseOrderShipmentNotice
    method: POST
- name: PurchaseOrder
  endpoint:
    path: /PurchaseOrder
    method: POST
- name: ProductInformation
  endpoint:
    path: /ProductInformation
    method: GET
- name: StoreInformation
  endpoint:
    path: /StoreInformation
    method: GET
- name: ReceivingInfo
  endpoint:
    path: /ReceivingInfo
    method: GET
- name: EmployeeInformation
  endpoint:
    path: /EmployeeInformation
    method: GET
- name: RMA
  endpoint:
    path: /RMA
    method: POST
- name: ProductData
  endpoint:
    path: /ProductData
    method: GET
- name: completed_purchase_orders
  endpoint:
    path: /?op=GetCompletedPurchaseOrderList
    method: POST
    data_selector: GetCompletedPurchaseOrderListResult
- name: disabled_companies
  endpoint:
    path: /?op=GetDisabledCompanies
    method: POST
    data_selector: GetDisabledCompaniesResult
- name: employee_list
  endpoint:
    path: /?op=GetEmployeeList
    method: POST
    data_selector: GetEmployeeListResult
- name: enabled_companies
  endpoint:
    path: /?op=GetEnabledCompanies
    method: POST
    data_selector: GetEnabledCompaniesResult
- name: Verify API Status
  endpoint:
    path: /?op=Ping
    method: POST
    data_selector: PingResult
    params:
      vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          Name: DropshipTestDemo
          StoreID: '4'
          VendorAccountNumber: ACCT123
- name: Enable or Disable Company
  endpoint:
    path: /?op=EnableCompany
    method: POST
    data_selector: EnableCompanyResponse
    params:
      vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          Name: DropshipTestDemo
          StoreID: '4'
          VendorAccountNumber: ACCT123
      isEnabled: true
- name: Get Committed Purchase Orders
  endpoint:
    path: /?op=GetCommittedPurchaseOrderList
    method: POST
    data_selector: GetCommittedPurchaseOrderListResult
    params:
      vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          Name: DropshipTestDemo
          StoreID: '4'
          VendorAccountNumber: ACCT123
- name: Get Company List
  endpoint:
    path: /?op=GetCompanyList
    method: POST
    data_selector: GetCompanyListResult
    params:
      Vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
      Client:
        ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
        Name: DropshipTestDemo
        StoreID: '-1'
        VendorAccountNumber: ACCT123
- name: Get Hierarchy Info
  endpoint:
    path: /?op=GetHierarchyInfo
    method: POST
    data_selector: GetHierarchyInfoResult
    params:
      Vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          Name: DropshipTestDemo
          StoreID: '4'
          VendorAccountNumber: ACCT123
- name: get_product_serial_numbers
  endpoint:
    path: /?op=GetProductSerialNumbers
    method: POST
    data_selector: GetProductSerialNumbersResult
- name: get_purchase_order_by_business_id
  endpoint:
    path: /?op=GetPurchaseOrderByBusinessID
    method: POST
    data_selector: GetPurchaseOrderByBusinessIDResult
- name: get_purchase_order_by_reference_number
  endpoint:
    path: /?op=GetPurchaseOrderByReferenceNumber
    method: POST
    data_selector: GetPurchaseOrderByReferenceNumberResult
- name: GetClientPurchaseOrdersByStatus
  endpoint:
    path: /?op=GetClientPurchaseOrdersByStatus
    method: POST
- name: GetPurchaseOrderList
  endpoint:
    path: /?op=GetPurchaseOrderList
    method: POST
- name: GetPurchaseOrderShipmentNotices
  endpoint:
    path: /?op=GetPurchaseOrderShipmentNotices
    method: POST
- name: get_store_information
  endpoint:
    path: /?op=GetStoreInformation
    method: POST
    data_selector: GetStoreInformationResult
    params: {}
- name: get_store_list
  endpoint:
    path: /?op=GetStoreList
    method: POST
    data_selector: GetStoreListResult
    params: {}
- name: get_uncommitted_purchase_order_list
  endpoint:
    path: /?op=GetUncommittedPurchaseOrderList
    method: POST
    data_selector: GetUncommittedPurchaseOrderListResult
    params: {}
- name: get_updated_inventory_list
  endpoint:
    path: /?op=GetUpdatedInventoryList
    method: POST
    data_selector: GetUpdatedInventoryListResult
    params: {}
- name: inventory_list
  endpoint:
    path: /?op=GetInventoryList
    method: POST
    data_selector: GetInventoryListResult
    params:
      Vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          StoreID: '4'
          VendorAccountNumber: ACCT123
- name: inventory_report
  endpoint:
    path: /?op=GetInventoryReport
    method: POST
    data_selector: GetInventoryReportResult
    params:
      Vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          StoreID: '4'
          VendorAccountNumber: ACCT123
      StartDate: 01/01/2016
      EndDate: 10/31/2016
- name: inventory_report_by_vendor_sku
  endpoint:
    path: /?op=GetInventoryReportByVendorSku
    method: POST
    data_selector: GetInventoryReportByVendorSkuResult
    params:
      Vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          StoreID: '4'
          VendorAccountNumber: ACCT123
      StartDate: 01/01/2016
      EndDate: 10/31/2016
      VendorSku: SSGS5CB
- name: pending_companies
  endpoint:
    path: /?op=GetPendingCompanies
    method: POST
    data_selector: GetPendingCompaniesResult
    params:
      vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          StoreID: '4'
          VendorAccountNumber: ACCT123
- name: UpdateMinAndMaxProductQuantities
  endpoint:
    path: /?op=UpdateMinAndMaxProductQuantities
    method: POST
    data_selector: UpdateMinAndMaxProductQuantitiesResult
- name: UpdatePurchaseOrder
  endpoint:
    path: /?op=UpdatePurchaseOrder
    method: POST
    data_selector: UpdatePurchaseOrderResult
- name: CancelUncommittedPurchaseOrder
  endpoint:
    path: /?op=CancelUncommittedPurchaseOrder
    method: POST
    data_selector: CancelUncommittedPurchaseOrderResult
- name: CreateUncommittedPurchaseOrder
  endpoint:
    path: /?op=CreateUncommittedPurchaseOrder
    method: POST
    data_selector: CreateUncommittedPurchaseOrderResult
    params: {}
- name: GetReceivingInfo
  endpoint:
    path: /?op=GetReceivingInfo
    method: POST
    data_selector: GetReceivingInfoResult
    params: {}
- name: GetTransferCounts
  endpoint:
    path: /?op=GetTransferCounts
    method: POST
    data_selector: GetTransferCountsResult
    params: {}
- name: commit_rma
  endpoint:
    path: /?op=CommitRMA
    method: POST
    data_selector: CommitRMAResult
- name: complete_rma
  endpoint:
    path: /?op=CompleteRMA
    method: POST
    data_selector: CompleteRMAResult
- name: update_rma
  endpoint:
    path: /?op=UpdateRMA
    method: POST
    data_selector: UpdateRMAResult
- name: GetRMAList
  endpoint:
    path: /?op=GetRMAList
    method: POST
    data_selector: GetRMAListResult
    params:
      vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          StoreID: '4'
          VendorAccountNumber: ACCT123
      isCommitted: 'false'
      isShipped: 'false'
- name: CreateRMA
  endpoint:
    path: /?op=CreateRMA
    method: POST
    data_selector: CreateRMAResult
    params:
      Vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          StoreID: '4'
          VendorAccountNumber: ACCT123
      RMA:
        VendorRMANumber: '123456'
        Comments: Sent
- name: UpdateCommittedRMA
  endpoint:
    path: /?op=UpdateCommittedRMA
    method: POST
    data_selector: UpdateCommittedRMAResult
    params:
      vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          StoreID: '4'
          VendorAccountNumber: ACCT123
      rma:
        VendorRMANumber: '123456'
        Comments: Sent
- name: inventory_listing_report
  endpoint:
    path: /?op=GetInventoryListingReport
    method: POST
    data_selector: GetInventoryListingReportResult
    params:
      Vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          StoreID: '4'
          VendorAccountNumber: ACCT123
      storeId: '4'
- name: adjustment_report
  endpoint:
    path: /?op=GetAdjustmentReport
    method: POST
    data_selector: GetAdjustmentReportResult
    params:
      Vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          StoreID: '4'
          VendorAccountNumber: ACCT123
      storeId: '4'
      StartDate: 01/01/2016
      EndDate: 10/31/2016
- name: geographic_inventory_report
  endpoint:
    path: /?op=GetGeographicInventoryReport
    method: POST
    data_selector: GetGeographicInventoryReportResult
    params:
      Vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          StoreID: '4'
          VendorAccountNumber: ACCT123
      storeId: '4'
      StartDate: 01/01/2016
      EndDate: 10/31/2016
- name: product_sales_report
  endpoint:
    path: /?op=GetProductSalesReport
    method: POST
    data_selector: GetProductSalesReportResult
    params:
      Vendor:
        VendorID: 9DC6AA95-856B-42C9-8AAF-392A2A02AC77
        Username: sampleusername
        Password: samplepassword
        Client:
          ClientID: c46ccb4d-2d44-4289-950a-b9cb51d58ac4
          StoreID: '4'
          VendorAccountNumber: ACCT123
      storeId: '4'
      StartDate: 01/01/2016
      EndDate: 10/31/2016
- name: customers
  endpoint:
    path: /Companies({CompanyId})/Customers
    method: GET
    data_selector: _embedded.self
    params: {}
- name: customer_full
  endpoint:
    path: /Companies({CompanyId})/Customers
    method: POST
    data_selector: Id
    params: {}
- name: remove_parent_customer
  endpoint:
    path: /Companies({CompanyId})/Customers({CustomerId})/CustomerExtensions({CustomerExtensionId})
    method: DELETE
- name: create_contact_method
  endpoint:
    path: /Companies({CompanyId})/Customers({CustomerId})/ContactMethods
    method: POST
- name: designate_child_customer
  endpoint:
    path: /Companies({CompanyId})/Customers({CustomerId})/RelatedCustomers
    method: POST
- name: remove_child_customer
  endpoint:
    path: /Companies({CompanyId})/Customers({CustomerId})/RelatedCustomers({ChildCustomerId})
    method: DELETE
- name: member_of_customer
  endpoint:
    path: /Companies({CompanyId})/Customers({CustomerId})/MemberOf
    method: GET
- name: CustomerFull
  endpoint:
    path: /Companies({CompanyId})/CustomerFull
    method: GET
    data_selector: records
- name: CustomerSearch
  endpoint:
    path: /Companies({CompanyId})/CustomerSearch
    method: GET
    data_selector: records
- name: CustomerAddresses
  endpoint:
    path: /Companies({CompanyId})/Customers({CustomerId})/Addresses
    method: GET
    data_selector: records
- name: CustomerExtensions
  endpoint:
    path: /Companies({CompanyId})/Customers({CustomerId})/CustomerExtensions
    method: POST
    data_selector: records
- name: CustomerExtensionTypes
  endpoint:
    path: /Companies({CompanyId})/CustomerExtensionTypes
    method: GET
    data_selector: records
- name: stores
  endpoint:
    path: /Stores
    method: GET
    data_selector: records
    params: {}
- name: ping
  endpoint:
    path: /Ping
    method: GET
    data_selector: version
    params: {}
- name: Stores
  endpoint:
    path: /Stores
    method: GET
    data_selector: records
    params:
      LocationType: Company
      LocationTypeIDs: '-1'
      LanguageCode: en-us
- name: Customer Activities
  endpoint:
    path: /Operations/CustomerActivities
    method: GET
    data_selector: records
    params:
      DateAsOf: '2020-01-01'
      LanguageCode: en-us
      LocationType: Company
      LocationTypeIDs: '-1'
- name: BillPaymentTransactions
  endpoint:
    path: /Misc/BillPaymentTransactions
    method: GET
    data_selector: records
    params:
      StartDate: string
      StopDate: string
      BillPayInvoice: string
- name: Stores
  endpoint:
    path: /Reports/PerformanceMetrixReport
    method: GET
    data_selector: records
    params:
      LocationType: string
      LocationTypeIDs: integer
      LanguageCode: string
- name: PerformanceMetrixSummaryReport
  endpoint:
    path: /Reports/PerformanceMetrixSummaryReport
    method: GET
    data_selector: records
- name: PerformanceGroupReport
  endpoint:
    path: /Reports/PerformanceGroupReport
    method: GET
    data_selector: records
- name: ActivationGrossProfitReport
  endpoint:
    path: /Reports/ActivationGrossProfitReport
    method: GET
    data_selector: records
- name: CouponSummaryReport
  endpoint:
    path: /Reports/CouponSummaryReport
    method: GET
    data_selector: records
- name: DailySalesSummaryReport
  endpoint:
    path: /Reports/DailySalesSummaryReport
    method: GET
    data_selector: records
- name: DiscountSummaryReport
  endpoint:
    path: /Reports/DiscountSummaryReport
    method: GET
    data_selector: records
- name: InvoiceEditSummaryReport
  endpoint:
    path: /Reports/InvoiceEditSummaryReport
    method: GET
    data_selector: records
- name: InvoiceHistoryReport
  endpoint:
    path: /Reports/InvoiceHistoryReport
    method: GET
    data_selector: records
- name: PawExceptionsReport
  endpoint:
    path: /Reports/PawExceptionsReport
    method: GET
    data_selector: records
- name: productdetailreport
  endpoint:
    path: /Reports/productdetailreport
    method: GET
    data_selector: records
- name: ProductFinancingReport
  endpoint:
    path: /Reports/ProductFinancingReport
    method: GET
    data_selector: records
- name: ProductSummaryReport
  endpoint:
    path: /Reports/ProductSummaryReport
    method: GET
    data_selector: records
- name: SalesByCategoryReport
  endpoint:
    path: /Reports/SalesByCategoryReport
    method: GET
    data_selector: records
- name: SalesByEmployeeReport
  endpoint:
    path: /Reports/SalesByEmployeeReport
    method: GET
    data_selector: records
- name: SalesByLocationReport
  endpoint:
    path: /Reports/SalesByLocationReport
    method: GET
    data_selector: records
- name: SalesOrderDetailReport
  endpoint:
    path: /Reports/SalesOrderDetailReport
    method: GET
    data_selector: records
- name: SalesOrderSummaryReport
  endpoint:
    path: /Reports/SalesOrderSummaryReport
    method: GET
    data_selector: records
- name: SerializedCouponReport
  endpoint:
    path: /Reports/SerializedCouponReport
    method: GET
    data_selector: records
- name: RefundSummaryReport
  endpoint:
    path: /Reports/RefundSummaryReport
    method: GET
    data_selector: records
- name: ProductAvailability
  endpoint:
    path: /Availability/Product
    method: GET
    data_selector: records
- name: ProductPricing
  endpoint:
    path: /Pricing/Product
    method: GET
    data_selector: records
- name: AdjustmentHistoryInvoiceDetailReport
  endpoint:
    path: /Reports/adjustmenthistoryinvoicedetailreport
    method: GET
    data_selector: records
- name: AdjustmentHistoryProductDetailReport
  endpoint:
    path: /Reports/adjustmenthistoryproductdetailreport
    method: GET
    data_selector: records
- name: AgedSerializedInventoryReport
  endpoint:
    path: /Reports/AgedSeralizedInventoryReport
    method: GET
    data_selector: records
- name: AutoOrderingReport
  endpoint:
    path: /Reports/AutoOrderingReport
    method: GET
    data_selector: records
- name: AutoTransferInReport
  endpoint:
    path: /Reports/AutoTransferInReport
    method: GET
    data_selector: records
- name: AutoTransferOutReport
  endpoint:
    path: /Reports/AutoTransferOutReport
    method: GET
    data_selector: records
- name: ConsignmentHistoryReport
  endpoint:
    path: /Reports/ConsignmentHistoryReport
    method: GET
    data_selector: records
- name: CountSheetHistoryReport
  endpoint:
    path: /Reports/CountSheetHistoryReport
    method: GET
    data_selector: records
- name: InventoryAvailabilitySummaryReport
  endpoint:
    path: /Reports/InventoryAvailabilitySummaryReport
    method: GET
    data_selector: records
- name: inventorylistingreport
  endpoint:
    path: /Reports/inventorylistingreport
    method: GET
    data_selector: records
- name: NonSellableHistoryReport
  endpoint:
    path: /Reports/NonSellableHistoryReport
    method: GET
    data_selector: records
- name: NonSellableProductsReport
  endpoint:
    path: /Reports/NonSellableProductsReport
    method: GET
    data_selector: records
- name: OverReceivingInventoryReport
  endpoint:
    path: /Reports/OverReceivingInventoryReport
    method: GET
    data_selector: records
- name: ProductMasterList
  endpoint:
    path: /inventory/ProductMasterList
    method: GET
    data_selector: records
- name: ProductTrackingReport
  endpoint:
    path: /Reports/ProductTrackingReport
    method: GET
    data_selector: records
- name: ProductsCommittedOnSalesOrdersReport
  endpoint:
    path: /Reports/ProductsCommittedOnSalesOrdersReport
    method: GET
    data_selector: records
- name: Stores
  endpoint:
    path: /Inventory/ProductsLifeCycleBySerialNumbers
    method: GET
    data_selector: records
    params: {}
- name: PurchaseHistoryReport
  endpoint:
    path: /Reports/PurchaseHistoryReport
    method: GET
    data_selector: records
    params: {}
- name: PurchaseOrders
  endpoint:
    path: /inventory/PurchaseOrders
    method: GET
    data_selector: records
    params: {}
- name: PurchaseOrderDetailReport
  endpoint:
    path: /Reports/PurchaseOrderDetailReport
    method: GET
    data_selector: records
    params: {}
- name: ReceivingInvoiceHistoryReport_ByInvoice
  endpoint:
    path: /Reports/ReceivingInvoiceHistoryReport_ByInvoice
    method: GET
    data_selector: records
    params: {}
- name: ReceivingInvoiceHistoryReport_ByProduct
  endpoint:
    path: /Reports/ReceivingInvoiceHistoryReport_ByProduct
    method: GET
    data_selector: records
    params: {}
- name: rmahistoryinvoicereport
  endpoint:
    path: /Reports/rmahistoryinvoicereport
    method: GET
    data_selector: records
    params: {}
- name: rmahistoryproductreport
  endpoint:
    path: /Reports/rmahistoryproductreport
    method: GET
    data_selector: records
    params: {}
- name: TermDetails
  endpoint:
    path: /Reports/TermDetails
    method: GET
    data_selector: records
    params: {}
- name: transferhistoryinvoicedetailreport
  endpoint:
    path: /Reports/transferhistoryinvoicedetailreport
    method: GET
    data_selector: records
    params: {}
- name: transferhistoryproductdetailreport
  endpoint:
    path: /Reports/transferhistoryproductdetailreport
    method: GET
    data_selector: records
    params: {}
- name: Transfers
  endpoint:
    path: /Inventory/Transfers
    method: GET
    data_selector: records
    params: {}
- name: ProductLibraryMappingDiscrepancy
  endpoint:
    path: /Misc/ProductLibraryMappingDiscrepancy
    method: GET
    data_selector: records
    params: {}
- name: ARLedgerActivityReport
  endpoint:
    path: /Reports/ARLedgerActivityReport
    method: GET
    data_selector: records
    params:
      StartDate: string <date>
      StopDate: string <date>
      ActivityType: integer [0 .. 2]
      SearchMethod: integer [1 .. 2]
      AccountsReceivableIDByStore: string
      LocationTypeIDs: integer
      LocationType: string
      LanguageCode: string
- name: Stores
  endpoint:
    path: /Reports/Stores
    method: GET
    data_selector: records
    params:
      LocationType: string
      LocationTypeIDs: integer
      LanguageCode: string
- name: stores
  endpoint:
    path: /Stores
    method: GET
    data_selector: records
    params:
      LocationType: Company
      LocationTypeIDs: '-1'
      LanguageCode: en-us
- name: employees
  endpoint:
    path: /Employees
    method: GET
    data_selector: records
    params: {}
- name: assigned_locations
  endpoint:
    path: /Employees/AssignedLocations
    method: GET
    data_selector: records
    params: {}
- name: warranty_inventory_listing_report
  endpoint:
    path: /Reports/WarrantyInventoryListingReport
    method: GET
    data_selector: records
    params: {}
- name: auto_punch_out_report
  endpoint:
    path: /Reports/AutoPunchOutReport
    method: GET
    data_selector: records
    params: {}
- name: employee_list_report
  endpoint:
    path: /Reports/employeelistreport
    method: GET
    data_selector: records
    params: {}
- name: employee_payroll_report
  endpoint:
    path: /Reports/EmployeePayrollReport
    method: GET
    data_selector: records
    params: {}
- name: employee_master_list_report
  endpoint:
    path: /Reports/employeemasterlistreport
    method: GET
    data_selector: records
    params: {}
- name: location_payroll_report
  endpoint:
    path: /Reports/LocationPayrollReport
    method: GET
    data_selector: records
    params: {}
- name: login_audit_report
  endpoint:
    path: /Reports/LoginAuditReport
    method: GET
    data_selector: records
    params: {}
- name: time_and_attendance_report
  endpoint:
    path: /Reports/TimeAndAttendanceReport
    method: GET
    data_selector: records
    params: {}
- name: manager_time_sheet_approval_report_employee_attendance_details
  endpoint:
    path: /Reports/ManagerTimeSheetApprovalReport/EmployeeAttendanceDetails
    method: GET
    data_selector: records
    params: {}
- name: manager_time_sheet_approval_report_punch_revision_details
  endpoint:
    path: /Reports/ManagerTimeSheetApprovalReport/PunchRevisionDetails
    method: GET
    data_selector: records
    params: {}
- name: CommissionLedgerActivityReport
  endpoint:
    path: /Reports/CommissionLedgerActivityReport
    method: GET
    data_selector: records
    params:
      StartDate: required
      StopDate: required
      TransactionType: required
      ReconcStatus: required
      JournalIDs: required
      LanguageCode: optional
      LocationType: optional
      LocationTypeIDs: optional
      ProductIdentifier: optional
- name: Stores
  endpoint:
    path: /Stores
    method: GET
    data_selector: records
    params:
      LocationType: optional
      LocationTypeIDs: optional
      LanguageCode: optional
- name: PaymentIntegrationTransactionByDateReport
  endpoint:
    path: /Reports/PaymentIntegrationTransactionByDateReport
    method: GET
    data_selector: records
- name: PaymentTypeAuditReport
  endpoint:
    path: /Reports/PaymentTypeAuditReport
    method: GET
    data_selector: records
- name: TaxDetailsReport
  endpoint:
    path: /Reports/TaxDetailsReport
    method: GET
    data_selector: records
- name: TaxDetailsNonTaxableSalesByBillPay
  endpoint:
    path: /Reports/TaxDetailsNonTaxableSalesByBillPay
    method: GET
    data_selector: records
- name: TaxDetailsNonTaxableSalesByInvoiceId
  endpoint:
    path: /Reports/TaxDetailsNonTaxableSalesByInvoiceId
    method: GET
    data_selector: records
- name: TaxDetailsNonTaxableSalesByInvoices
  endpoint:
    path: /Reports/TaxDetailsNonTaxableSalesByInvoices
    method: GET
    data_selector: records
- name: TaxDetailsNonTaxableSalesByProducts
  endpoint:
    path: /Reports/TaxDetailsNonTaxableSalesByProducts
    method: GET
    data_selector: records
- name: TaxDetailsTaxableSalesByBillPay
  endpoint:
    path: /Reports/TaxDetailsTaxableSalesByBillPay
    method: GET
    data_selector: records
- name: TaxDetailsTaxableSalesByInvoiceId
  endpoint:
    path: /Reports/TaxDetailsTaxableSalesByInvoiceId
    method: GET
    data_selector: records
- name: TaxDetailsTaxableSalesByInvoices
  endpoint:
    path: /Reports/TaxDetailsTaxableSalesByInvoices
    method: GET
    data_selector: records
- name: TaxDetailsTaxableSalesByProducts
  endpoint:
    path: /Reports/TaxDetailsTaxableSalesByProducts
    method: GET
    data_selector: records
- name: stores
  endpoint:
    path: /Lists/Stores
    method: GET
    data_selector: records
    params:
      LocationType: Company
      LocationTypeIDs: '-1'
      LanguageCode: en-us
- name: activity_type_id
  endpoint:
    path: /Lists/ActivityTypeID
    method: GET
    data_selector: records
- name: bill_pay_provider_id
  endpoint:
    path: /Lists/BillPayProviderID
    method: GET
    data_selector: records
- name: cash_audit_trail_type_id
  endpoint:
    path: /Lists/CashAuditTrailTypeID
    method: GET
    data_selector: records
- name: coupon_id
  endpoint:
    path: /Lists/CouponID
    method: GET
    data_selector: records
- name: discount_level_id
  endpoint:
    path: /Lists/DiscountLevelID
    method: GET
    data_selector: records
- name: financing_detail_id
  endpoint:
    path: /Lists/FinancingDetailID
    method: GET
    data_selector: records
- name: group_id
  endpoint:
    path: /Lists/GroupID
    method: GET
    data_selector: records
- name: integration_provider_ids
  endpoint:
    path: /Lists/IntegrationProviderIDs
    method: GET
    data_selector: records
- name: location_ids
  endpoint:
    path: /Lists/LocationIDs
    method: GET
    data_selector: records
- name: manufacture_id
  endpoint:
    path: /Lists/ManufactureID
    method: GET
    data_selector: records
- name: non_sellable_reason_code
  endpoint:
    path: /Lists/NonSellableReasonCode
    method: GET
    data_selector: records
- name: payment_type_ids
  endpoint:
    path: /Lists/PaymentTypeIDs
    method: GET
    data_selector: records
- name: ProductIdentifier
  endpoint:
    path: /Lists/ProductIdentifier
    method: GET
    data_selector: records
- name: ReasonCode
  endpoint:
    path: /Lists/ReasonCode
    method: GET
    data_selector: records
- name: TaxID
  endpoint:
    path: /Lists/TaxID
    method: GET
    data_selector: records
- name: TradeInProviderIDs
  endpoint:
    path: /Lists/TradeInProviderIDs
    method: GET
    data_selector: records
- name: VendorAccountID
  endpoint:
    path: /Lists/VendorAccountID
    method: GET
    data_selector: records
- name: VendorID
  endpoint:
    path: /Lists/VendorID
    method: GET
    data_selector: records
- name: CardTypes
  endpoint:
    path: /Lists/CardTypes
    method: GET
    data_selector: records
- name: EntryTypes
  endpoint:
    path: /Lists/EntryTypes
    method: GET
    data_selector: records
- name: GL_SourceType
  endpoint:
    path: /Lists/GL_SourceType
    method: GET
    data_selector: records
- name: LocationType
  endpoint:
    path: /Lists/LocationType
    method: GET
    data_selector: records
- name: ProductType
  endpoint:
    path: /Lists/ProductType
    method: GET
    data_selector: records
- name: SalesOpportunityType
  endpoint:
    path: /Lists/SalesOpportunityType
    method: GET
    data_selector: records
- name: ServiceTypes
  endpoint:
    path: /Lists/ServiceTypes
    method: GET
    data_selector: records
- name: StoreTypes
  endpoint:
    path: /Lists/StoreTypes
    method: GET
    data_selector: records
- name: stores
  endpoint:
    path: /Lists/Stores
    method: GET
    data_selector: StoreID
    params:
      LocationType: Company
      LocationTypeIDs: '-1'
      LanguageCode: en-us
- name: category_number
  endpoint:
    path: /Lists/CategoryNumber
    method: GET
    data_selector: StoreID
    params:
      IncludeDisabled: 'false'
- name: commission_groups
  endpoint:
    path: /Lists/CommissionGroups
    method: GET
    data_selector: StoreID
- name: performance_groups
  endpoint:
    path: /Lists/PerformanceGroups
    method: GET
    data_selector: StoreID
- name: security_roles
  endpoint:
    path: /Lists/SecurityRoles
    method: GET
    data_selector: StoreID
- name: carriers
  endpoint:
    path: /Lists/CarrierSIP
    method: GET
    data_selector: StoreID
- name: employees
  endpoint:
    path: /Lists/Employees
    method: GET
    data_selector: StoreID
notes:
- Requests must be made over HTTPS.
- Requests made over plain HTTP or without authentication will fail.
- You must have your onboarding package from iQmetrix, which includes your access
  credentials.
- The inventory adjustment API requires products in RQ to either be mapped to a product
  library product with a corresponding Vendor SKU or created as a private product
  with a corresponding Vendor SKU.
- Ensure your RQ database meets the criteria listed in the documentation.
- Enabling Automated Provisioning will result in a slight configuration delay during
  login
- Limited ability to use the User Manager API - changes that do not match the Identity
  Provider will revert back the next time the user logs in
- Client applications must expose an HTTP endpoint to receive notifications.
- Webhook listener must use an SSL-enabled URL (HTTPS).
- iQmetrix APIs digitally sign webhook notifications.
- A release agreement must be signed by each company before a relationship can be
  established.
- Third Party Authentication (3PA) is required to enable auto-provisioning.
- This request can only be used to cancel a batch that has not started i.e. a batch
  with StatusCode=1 and StatusName=Ready.
- API uses SOAP for communication
- Requires CompanyID, username, and password for authentication
- New API reference for Purchase Orders and Inventory Adjustments.
- A successful response does not guarantee successful Transfer Request creation.
- Creation of a PO is asynchronous. You can check the creation status of the PO by
  calling the link in the returned CheckStatusEndpoint.
- RQ accepts a maximum of 500 characters in this field, larger values will be truncated.
- Authorization using a service token is not supported.
- The `Pending` status remains in effect for the lifetime of the sales order unless
  manually updated to `Cancelled` or `Completed`.
- authorization using a service token is not supported
- Each feed will have its own unique FeedId.
- Periodic updates to your Product Feed(s) are required for accuracy.
- Disabling a user does not free up the user's Email and UserName for use.
- A disabled user is not able to log in to the system.
- Running the Get All Users endpoint returns active users only.
- Get the Number of Users endpoint includes users of child nodes.
- Locking a user does not change their isActive status.
- If you are running into permission issues, please reach out to your iQmetrix representative.
- Users can be assigned to multiple locations.
- Running requests for an entity entails getting the user details for it and its children
  nodes.
- To get disabled users, use the appropriate filter with the /v2 endpoint.
- HAL pagination links are relative; the client must prepend the base endpoint.
- The Delete endpoint acts as a Disable operation, as a Customer cannot be deleted.
- CustomerFull does not support a bulk GET call, you can only retrieve a single customer
  at a time.
- Stores can be both physical (such as brick and mortar) and virtual (such as eCommerce)
- Uses bearer authentication.
- Stores can be both physical and virtual.
- HTTPS is required
- Authorization requires bearerAuth
- CompanyId is provided in onboarding package
- Responses may contain partial results based on search terms
- This may return partial results.
- Get a token via Obtaining an Access Token.
- The current functionality only allows filtering by ClientEntityId.
- Only Divisions and Groups can be deleted this way. If the Node or any of its children
  include Entities other than Groups or Divisions, the request will be rejected.
- This operation cannot be undone.
- 'Get a token via [Obtaining an Access Token](/api/authentication/#operation/Obtaining-an-Access-Token).
  Usage format: `Bearer {token}`.'
- Queries are case-insensitive.
- An order can only be cancelled when in the Pending state.
- HAL pagination links are relative; prepend the link with the base endpoint.
- 'Get a token via Obtaining an Access Token. Usage format: Bearer {token}.'
- A query can contain multiple search filters.
- A successful response does not indicate successful import into RQ, only response
  format and validation.
- Sales order status can be 'Pending', 'Completed', or 'Cancelled'.
- The Purchase Order API works with RQ versions 6.25 and up.
- Ensure your RQ database meets the required criteria, including version and sync
  settings.
- Shipping methods may vary based on localization settings.
- Defaults to the beginning of SQL time (1970-01-01T00:00:00.000 UTC) for StartDate.
- Defaults to the current date and time in UTC for StopDate.
- Uses bearer token for authentication
- Defaults for StartDate and StopDate are mentioned in the documentation
- Each page of the feed contains up to 50 events.
- To avoid duplicate processing, track the identifier for the Dropship order.
- Requires setup of connected app in api
- iQmetrix APIs use OAuth2 for authentication, and all requests must be made over
  HTTPS.
- Creating a Purchase Order allows RQ to properly account for products arriving at
  a store so that stock levels are updated correctly
- Each item must be unique
- To place multiple copies of an item on an order, adjust the quantity
- Requires RQ version 6.9 or higher
- Only the affected product needs to be sent in the request
- The only updatable fields for the purchase order are VendorInvoiceNumber, Comments,
  and EstimatedArrivalDate
- Products can be updated. If you do not wish to change products, leave the products
  collection empty
- To update any product(s), you must send the entire list of products
- If any products are supplied to this call, the PO is cleared and only the supplied
  products are added
- You cannot change state of a PO to Committed through this call
- If the PO is completed or has products received against it, it cannot be updated,
  except for the VendorInvoiceNumber, Comments, and EstimatedArrivalDate
- Every item must be unique. To place multiples of the same item on an order, adjust
  the quantity accordingly
- An unavailable item will be indicated in the body of an HTTP 400 response.
- Allows vendors to create purchase orders and shipment notices.
- Only enabled companies may receive purchase orders through the VMI service
- RQ Business ID is the visual ID by store that RQ users can see on printouts
- Will return both committed and uncommitted purchase orders
- Requests require VendorID, Username, Password, and ClientID parameters.
- Use StoreID value of -1 to pull complete store listing.
- Use Guid.Empty or 00000000-0000-0000-0000-000000000000 for no channel
- Use -1 for no region, district, or store
- For no channel, use Guid.Empty or 00000000-0000-0000-0000-000000000000
- For no region, district or store use -1
- An access token can be used to authorize requests to any iQmetrix API until it expires.
- The CRM API supports Hypermedia Application Language (HAL) in responses.
- HAL pagination links are relative; it is the responsibility of the client to prepend
  the link appropriately.
- Identifier for the Company will be provided in your onboarding package.
- Returns a list of stores configured in RQ. Stores can be both physical (such as
  brick and mortar) and virtual (such as eCommerce).
- Returns a list of stores configured in RQ. Stores can be both physical and virtual.
- Stores can be both physical and virtual (eCommerce).
- Query parameters include LocationType, LocationTypeIDs, LanguageCode with defaults.
errors:
- '429 Too Many Requests: rate limit exceeded'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'ProductVendorCombinationUnavailable: Products or vendors are not configured properly'
- 'Accepted: the creation of the Transfer Request has been received and is currently
  in queue.'
- 'Created: the creation of the Transfer Request is successful.'
- 'FailedValidation: the creation of the Transfer Request is unsuccessful.'
- 'FailedValidation: the creation of the PO is unsuccessful.'
- '401 Unauthorized: Recheck bearer token or authorization'
- 401 Unauthorized
- 'HTTP 200: Successful response'
- 'Invalid credentials: Check username, password, and CompanyID'
- '204 No Content: The request was successful, but there is no content to return.'
- '204 No Content: Indicates successful operation.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Bad Request - An error indicating the request cannot be understood due to
  missing parameters.'
- '401: Unauthorized - An error indicating failure to provide a valid token.'
- '403: Forbidden - An error indicating insufficient user access privileges.'
- '404: Not Found - An error indicating that the requested resource was not found.'
- '413: Payload Too Large - DataConnect estimates the number of records that will
  be returned on a request.'
- '429: Too Many Requests (Rate limiting has been applied)'
- '500: Internal Server Error - This error may indicate issues with the API.'
- 200 OK
- 400 Bad Request
- 403 Forbidden
- 404 Not Found
- 'Error400: Bad Request'
- 'Error401: Unauthorized'
- 'Error403: Forbidden'
- 'Error404: Not Found'
- '401 Unauthorized: Check bearer token validity'
- 'ProductVendorCombinationUnavailable: Ensure products are properly mapped and vendors
  are enabled.'
- '400: Bad Request'
- '401: Unauthorized'
- 400 Bad Request - An error indicating the request cannot be understood due to missing
  parameters.
- 401 Unauthorized - An error indicating failure to provide a valid token.
- 403 Forbidden - An error indicating insufficient user access privileges.
- 404 Not Found - An error indicating that the requested resource was not found.
- 413 Payload Too Large - DataConnect estimates the number of records that will be
  returned on a request. If greater than 1,048,576 records (Matches row limit for
  Microsoft Excel) would be returned, the request is blocked.
- '429 Too Many Requests (Rate limiting has been applied) - This error occurs for
  two possible reasons: (1) the number of active concurrent requests on a single resource
  is dynamically calculated to exceed available capacity or (2) a request has a high
  risk of impacting business critical systems.'
- 500 Internal Server Error - This error may indicate issues with the API.
- '403: Forbidden'
- '404: Not Found'
- '500: Internal Server Error'
- '503: Service Unavailable'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'HTTP 200 Content-Type: text/xml'
- Found Purchase orders for StoreID [x] by VendorInvoiceNumber [y]
- ShipToStoreID must be > 0 or ShipToVendorAccountNumber must be supplied
- BillToStoreID must be > 0 or BillToVendorAccountNumber must be supplied
- Existing Purchase order has been found with Purchase Order ID [x]
- Could not find product by VendorSKU [x]...
- Product is missing VendorSKU
- There is no company configuration
- 401 UnAuthorized
- 404 No Data found
- 'InvalidVendorID: Ensure the VendorID is correct'
- 'AuthenticationFailed: Check VendorIdentity credentials'
- 'Unauthorized: Verify account permissions'
- 'HTTP 500: Found Purchase orders for StoreID [x] by VendorInvoiceNumber [y]'
- 'HTTP 500: ShipToStoreID must be > 0 or ShipToVendorAccountNumber must be supplied'
- 'HTTP 500: BillToStoreID must be > 0 or BillToVendorAccountNumber must be supplied'
- 'HTTP 500: Existing Purchase order has been found with Purchase Order ID [x]'
- 'HTTP 500: Cannot update Purchase Order [x] because it has received products or
  is marked as complete'
- 'HTTP 500: The estimated arrival date is not in the MM/dd/yyyy format'
- '401 Unauthorized: Recheck authentication details'
auth_info:
  mentioned_objects:
  - bearerAuth
  - User
  - UserId
  - ParentEntityId
  - basicAuth
  - apiKey
  - Obtaining an Access Token
  - VendorIdentity
  - ClientAgent
client:
  base_url: https://dataconnect.iqmetrix.net
  auth:
    type: bearer
    location: header
    header_name: Authorization
source_metadata: null
