resources:
- name: forceMode
  endpoint:
    path: /forceMode
    method: POST
- name: forceModeStop
  endpoint:
    path: /forceModeStop
    method: POST
- name: jogStart
  endpoint:
    path: /jogStart
    method: POST
- name: jogStop
  endpoint:
    path: /jogStop
    method: POST
- name: zeroFtSensor
  endpoint:
    path: /zeroFtSensor
    method: POST
- name: setPayload
  endpoint:
    path: /setPayload
    method: POST
- name: teachMode
  endpoint:
    path: /teachMode
    method: POST
- name: endTeachMode
  endpoint:
    path: /endTeachMode
    method: POST
- name: forceModeSetDamping
  endpoint:
    path: /forceModeSetDamping
    method: POST
- name: forceModeSetGainScaling
  endpoint:
    path: /forceModeSetGainScaling
    method: POST
- name: toolContact
  endpoint:
    path: /toolContact
    method: POST
- name: getStepTime
  endpoint:
    path: /getStepTime
    method: GET
- name: getActualJointPositionsHistory
  endpoint:
    path: /getActualJointPositionsHistory
    method: GET
- name: getTargetWaypoint
  endpoint:
    path: /getTargetWaypoint
    method: GET
- name: setTcp
  endpoint:
    path: /setTcp
    method: POST
- name: getInverseKinematics
  endpoint:
    path: /getInverseKinematics
    method: GET
- name: poseTrans
  endpoint:
    path: /poseTrans
    method: POST
- name: triggerProtectiveStop
  endpoint:
    path: /triggerProtectiveStop
    method: POST
- name: isProgramRunning
  endpoint:
    path: /isProgramRunning
    method: GET
- name: getRobotStatus
  endpoint:
    path: /getRobotStatus
    method: GET
- name: getAsyncOperationProgress
  endpoint:
    path: /getAsyncOperationProgress
    method: GET
- name: getAsyncOperationProgressEx
  endpoint:
    path: /getAsyncOperationProgressEx
    method: GET
- name: setWatchdog
  endpoint:
    path: /setWatchdog
    method: POST
- name: kickWatchdog
  endpoint:
    path: /kickWatchdog
    method: POST
- name: isPoseWithinSafetyLimits
  endpoint:
    path: /isPoseWithinSafetyLimits
    method: POST
- name: isJointsWithinSafetyLimits
  endpoint:
    path: /isJointsWithinSafetyLimits
    method: POST
- name: getJointTorques
  endpoint:
    path: /getJointTorques
    method: GET
- name: getTCPOffset
  endpoint:
    path: /getTCPOffset
    method: GET
- name: getForwardKinematics
  endpoint:
    path: /getForwardKinematics
    method: GET
- name: isSteady
  endpoint:
    path: /isSteady
    method: GET
- name: moveUntilContact
  endpoint:
    path: /moveUntilContact
    method: POST
    data_selector: result
    params:
      xd: tool speed
      direction: contact detection direction
      acceleration: tool position acceleration
- name: freedriveMode
  endpoint:
    path: /freedriveMode
    method: POST
    data_selector: result
    params:
      freeAxes: movement axes
      feature: freedrive frame
- name: endFreedriveMode
  endpoint:
    path: /endFreedriveMode
    method: POST
    data_selector: result
- name: getFreedriveStatus
  endpoint:
    path: /getFreedriveStatus
    method: GET
    data_selector: status
- name: actual_joint_velocities
  endpoint:
    path: /getActualQd
    method: GET
    data_selector: Returns
    params: {}
- name: actual_joint_currents
  endpoint:
    path: /getActualCurrent
    method: GET
    data_selector: Returns
    params: {}
- name: joint_control_currents
  endpoint:
    path: /getJointControlOutput
    method: GET
    data_selector: Returns
    params: {}
- name: actual_cartesian_coordinates
  endpoint:
    path: /getActualTCPPose
    method: GET
    data_selector: Returns
    params: {}
- name: actual_tool_speed
  endpoint:
    path: /getActualTCPSpeed
    method: GET
    data_selector: Returns
    params: {}
- name: generalized_forces
  endpoint:
    path: /getActualTCPForce
    method: GET
    data_selector: Returns
    params: {}
- name: target_cartesian_coordinates
  endpoint:
    path: /getTargetTCPPose
    method: GET
    data_selector: Returns
    params: {}
- name: target_tool_speed
  endpoint:
    path: /getTargetTCPSpeed
    method: GET
    data_selector: Returns
    params: {}
- name: actual_digital_input_bits
  endpoint:
    path: /getActualDigitalInputBits
    method: GET
    data_selector: Returns
    params: {}
- name: joint_temperatures
  endpoint:
    path: /getJointTemperatures
    method: GET
    data_selector: Returns
    params: {}
- name: actual_execution_time
  endpoint:
    path: /getActualExecutionTime
    method: GET
    data_selector: Returns
    params: {}
- name: robot_mode
  endpoint:
    path: /getRobotMode
    method: GET
    data_selector: Returns
    params: {}
- name: robot_status
  endpoint:
    path: /getRobotStatus
    method: GET
    data_selector: Returns
    params: {}
- name: joint_mode
  endpoint:
    path: /getJointMode
    method: GET
    data_selector: Returns
    params: {}
- name: safety_mode
  endpoint:
    path: /getSafetyMode
    method: GET
    data_selector: Returns
    params: {}
- name: safety_status_bits
  endpoint:
    path: /getSafetyStatusBits
    method: GET
    data_selector: Returns
    params: {}
- name: actual_tool_accelerometer
  endpoint:
    path: /getActualToolAccelerometer
    method: GET
    data_selector: Returns
    params: {}
- name: speed_scaling
  endpoint:
    path: /getSpeedScaling
    method: GET
    data_selector: Returns
    params: {}
- name: target_speed_fraction
  endpoint:
    path: /getTargetSpeedFraction
    method: GET
    data_selector: Returns
    params: {}
- name: actual_momentum
  endpoint:
    path: /getActualMomentum
    method: GET
    data_selector: Returns
    params: {}
- name: actual_main_voltage
  endpoint:
    path: /getActualMainVoltage
    method: GET
    data_selector: Returns
    params: {}
- name: actual_robot_voltage
  endpoint:
    path: /getActualRobotVoltage
    method: GET
    data_selector: Returns
    params: {}
- name: actual_robot_current
  endpoint:
    path: /getActualRobotCurrent
    method: GET
    data_selector: Returns
    params: {}
- name: actual_joint_voltage
  endpoint:
    path: /getActualJointVoltage
    method: GET
    data_selector: Returns
    params: {}
- name: actual_digital_output_bits
  endpoint:
    path: /getActualDigitalOutputBits
    method: GET
    data_selector: Returns
    params: {}
- name: runtime_state
  endpoint:
    path: /getRuntimeState
    method: GET
    data_selector: Returns
    params: {}
- name: standard_analog_input_0
  endpoint:
    path: /getStandardAnalogInput0
    method: GET
    data_selector: Returns
    params: {}
- name: standard_analog_input_1
  endpoint:
    path: /getStandardAnalogInput1
    method: GET
    data_selector: Returns
    params: {}
- name: standard_analog_output_0
  endpoint:
    path: /getStandardAnalogOutput0
    method: GET
    data_selector: Returns
    params: {}
- name: standard_analog_output_1
  endpoint:
    path: /getStandardAnalogOutput1
    method: GET
    data_selector: Returns
    params: {}
- name: protective_stopped_state
  endpoint:
    path: /isProtectiveStopped
    method: GET
    data_selector: Returns
    params: {}
- name: emergency_stopped_state
  endpoint:
    path: /isEmergencyStopped
    method: GET
    data_selector: Returns
    params: {}
- name: ScriptClient
  endpoint:
    path: /script/client
    method: GET
    data_selector: records
- name: DashboardClient
  endpoint:
    path: /dashboard/client
    method: GET
    data_selector: records
- name: rtde_control
  endpoint:
    path: /control
    method: POST
    data_selector: control_data
- name: rtde_receive
  endpoint:
    path: /receive
    method: GET
    data_selector: receive_data
- name: RTDEControlInterface
  endpoint:
    path: /control
    method: POST
    data_selector: response
    params: {}
- name: RTDEReceiveInterface
  endpoint:
    path: /receive
    method: GET
    data_selector: data
    params: {}
- name: move_until_contact
  endpoint:
    path: /move_until_contact
    method: POST
    data_selector: data
    params: {}
- name: forcemode
  endpoint:
    path: /forcemode
    method: POST
    data_selector: data
    params: {}
- name: servoj
  endpoint:
    path: /servoj
    method: POST
    data_selector: data
    params: {}
- name: speedj
  endpoint:
    path: /speedj
    method: POST
    data_selector: data
    params: {}
- name: movel_path_with_blend
  endpoint:
    path: /movel_path_with_blend
    method: POST
    data_selector: data
    params: {}
- name: io_example
  endpoint:
    path: /io_example
    method: POST
    data_selector: data
    params: {}
- name: gripper
  endpoint:
    path: /robotiq/gripper
    method: GET
    data_selector: status
    params: {}
- name: jog
  endpoint:
    path: /jog
    method: POST
    data_selector: jog_status
    params: {}
notes:
- Currently the RTDEControlInterface should not be considered thread safe, since no
  measures (mutexes) are taken to ensure that a function is done, before another would
  be executed.
- Contact monitoring should get started after a async move command has been started.
- The list of available variables depends on the robot model and software version.
- It is highly recommended that you use ur_rtde in combination with a real-time kernel.
- Currently using the ur_rtde interface has only been tested with MATLAB R2019b using
  Python 2.7, since this seems to be the default interpreter of MATLAB R2019b.
- When using an e-Series robot data will be received at the maximum available frequency
  (500Hz), for a CB3 robot the frequency will be (125Hz).
- This example only works on Linux / UNIX at the moment, since it requires ncurses
  for registering key presses.
errors: []
auth_info:
  mentioned_objects: []
client:
  base_url: 127.0.0.1
source_metadata: null
