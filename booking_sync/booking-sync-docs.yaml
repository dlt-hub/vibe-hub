resources:
- name: rentals
  endpoint:
    path: /rentals
    method: GET
    data_selector: rentals
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
- name: sources
  endpoint:
    path: /sources
    method: GET
    data_selector: sources
- name: create_source
  endpoint:
    path: /sources
    method: POST
    data_selector: sources
- name: bookings
  endpoint:
    path: /rentals/:rental_id/bookings
    method: POST
    data_selector: bookings
- name: rentals
  endpoint:
    path: /api/v3/rentals
    method: GET
    data_selector: records
- name: rentals
  endpoint:
    path: /rentals/search
    method: GET
    data_selector: rentals
    params:
      rental_id: required
      start_at: required
      end_at: required
      adults: required
      children: optional
- name: los_records
  endpoint:
    path: /los_records
    method: GET
    data_selector: records
    params: {}
- name: nightly_rate_maps
  endpoint:
    path: /nightly_rate_maps
    method: GET
    data_selector: records
    params: {}
- name: rentals
  endpoint:
    path: /rentals/search
    method: GET
    data_selector: rentals
    params:
      rental_id: required
      start_at: required
      end_at: required
      adults: required
      children: optional
- name: los_records
  endpoint:
    path: /los_records
    method: GET
    data_selector: rates
    params: {}
- name: nightly_rate_maps
  endpoint:
    path: /nightly_rate_maps
    method: GET
    data_selector: maps
    params: {}
- name: seasons
  endpoint:
    path: /seasons
    method: GET
    data_selector: seasons
    params: {}
- name: periods
  endpoint:
    path: /periods
    method: GET
    data_selector: periods
    params: {}
- name: webhook_events
  endpoint:
    path: /webhooks
    method: POST
    data_selector: resource
- name: los_records
  endpoint:
    path: /services/data/vXX.X/los_records
    method: GET
    data_selector: records
    params: {}
- name: updated_since
  endpoint:
    params:
      updated_since: timestamp_of_last_sync
- name: rentals
  endpoint:
    path: /reference/endpoints/rentals
    method: GET
- name: rates
  endpoint:
    path: /reference/endpoints/rates
    method: GET
- name: los_records
  endpoint:
    path: /reference/endpoints/los_records
    method: GET
- name: LOS Record
  endpoint:
    path: /los/records
    method: GET
    data_selector: records
    params: {}
- name: reviews
  endpoint:
    path: /reference/endpoints/reviews
    method: GET
- name: review_replies
  endpoint:
    path: /reference/endpoints/review_replies
    method: POST
- name: host_reviews
  endpoint:
    path: /reference/endpoints/host_reviews
    method: POST
- name: inbox_conversations
  endpoint:
    path: /reference/endpoints/inbox_conversations
    method: GET
- name: inbox_participants
  endpoint:
    path: /reference/endpoints/inbox_participants
    method: GET
- name: inbox_messages
  endpoint:
    path: /reference/endpoints/inbox_messages
    method: GET
- name: reviews
  endpoint:
    path: /reference/endpoints/reviews
    method: GET
- name: review_replies
  endpoint:
    path: /reference/endpoints/review_replies
    method: POST
- name: host_reviews
  endpoint:
    path: /reference/endpoints/host_reviews
    method: POST
- name: Accounts
  endpoint:
    path: /reference/endpoints/accounts
    method: GET
- name: Amenities
  endpoint:
    path: /reference/endpoints/amenities
    method: GET
- name: Applications
  endpoint:
    path: /reference/endpoints/applications
    method: GET
- name: Bookings
  endpoint:
    path: /reference/endpoints/bookings
    method: GET
- name: Contacts
  endpoint:
    path: /reference/endpoints/contacts
    method: GET
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
- name: amenities
  endpoint:
    path: /amenities
    method: GET
    data_selector: amenities
- name: single_amenity
  endpoint:
    path: /amenities/:amenity_id
    method: GET
    data_selector: amenities
- name: accounts
  endpoint:
    path: /reference/endpoints/accounts
    method: GET
- name: amenities
  endpoint:
    path: /reference/endpoints/amenities
    method: GET
- name: applications
  endpoint:
    path: /reference/endpoints/applications
    method: GET
- name: availabilities
  endpoint:
    path: /reference/endpoints/availabilities
    method: GET
- name: bathrooms
  endpoint:
    path: /reference/endpoints/bathrooms
    method: GET
- name: bedrooms
  endpoint:
    path: /reference/endpoints/bedrooms
    method: GET
- name: bookings
  endpoint:
    path: /reference/endpoints/bookings
    method: GET
- name: clients
  endpoint:
    path: /reference/endpoints/clients
    method: GET
- name: contacts
  endpoint:
    path: /reference/endpoints/contacts
    method: GET
- name: destinations
  endpoint:
    path: /reference/endpoints/destinations
    method: GET
- name: fees
  endpoint:
    path: /reference/endpoints/fees
    method: GET
- name: hosts
  endpoint:
    path: /reference/endpoints/hosts
    method: GET
- name: rentals
  endpoint:
    path: /reference/endpoints/rentals
    method: GET
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
- name: single_application
  endpoint:
    path: /applications/:application_id
    method: GET
    data_selector: applications
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
- name: applications_periods_rentals
  endpoint:
    path: /applications_periods_rentals
    method: GET
    data_selector: applications_periods_rentals
    params: {}
- name: amenities
  endpoint:
    path: /amenities
    method: GET
    data_selector: amenities
- name: single_amenity
  endpoint:
    path: /amenities/:amenity_id
    method: GET
    data_selector: amenities
- name: availabilities
  endpoint:
    path: /availabilities
    method: GET
    data_selector: availabilities
    params: {}
- name: applications
  endpoint:
    path: /applications
    method: GET
    data_selector: applications
- name: single_application
  endpoint:
    path: /applications/:application_id
    method: GET
    data_selector: applications
- name: applications_periods_rentals
  endpoint:
    path: /applications_periods_rentals
    method: GET
    data_selector: applications_periods_rentals
- name: bathrooms
  endpoint:
    path: /bathrooms
    method: GET
    data_selector: bathrooms
    params: {}
- name: single_bathroom
  endpoint:
    path: /bathrooms/:bathroom_id
    method: GET
    data_selector: bathrooms
    params: {}
- name: create_bathroom
  endpoint:
    path: /rentals/:rental_id/bathrooms
    method: POST
    data_selector: bathrooms
    params: {}
- name: update_bathroom
  endpoint:
    path: /bathrooms/:bathroom_id
    method: PUT
    data_selector: bathrooms
    params: {}
- name: destroy_bathroom
  endpoint:
    path: /bathrooms/:bathroom_id
    method: DELETE
    data_selector: ''
    params: {}
- name: availabilities
  endpoint:
    path: /availabilities
    method: GET
    data_selector: availabilities
    params: {}
- name: bedrooms
  endpoint:
    path: /bedrooms
    method: GET
    data_selector: bedrooms
    params: {}
- name: single_bedroom
  endpoint:
    path: /bedrooms/:bedroom_id
    method: GET
    data_selector: bedrooms
    params: {}
- name: create_bedroom
  endpoint:
    path: /rentals/:rental_id/bedrooms
    method: POST
    data_selector: bedrooms
    params: {}
- name: update_bedroom
  endpoint:
    path: /bedrooms/:bedroom_id
    method: PUT
    data_selector: bedrooms
    params: {}
- name: destroy_bedroom
  endpoint:
    path: /bedrooms/:bedroom_id
    method: DELETE
    data_selector: {}
    params: {}
- name: bathrooms
  endpoint:
    path: /bathrooms
    method: GET
    data_selector: bathrooms
- name: single_bathroom
  endpoint:
    path: /bathrooms/:bathroom_id
    method: GET
    data_selector: bathrooms
- name: create_bathroom
  endpoint:
    path: /rentals/:rental_id/bathrooms
    method: POST
    data_selector: bathrooms
- name: update_bathroom
  endpoint:
    path: /bathrooms/:bathroom_id
    method: PUT
    data_selector: bathrooms
- name: destroy_bathroom
  endpoint:
    path: /bathrooms/:bathroom_id
    method: DELETE
- name: booking_comments
  endpoint:
    path: /booking_comments
    method: GET
    data_selector: booking_comments
- name: booking_comment
  endpoint:
    path: /booking_comments/:booking_comment_id
    method: GET
    data_selector: booking_comments
- name: create_booking_comment
  endpoint:
    path: /booking_comments
    method: POST
    data_selector: booking_comments
- name: update_booking_comment
  endpoint:
    path: /booking_comments/:booking_comment_id
    method: PUT
    data_selector: booking_comments
- name: destroy_booking_comment
  endpoint:
    path: /booking_comments/:booking_comment_id
    method: DELETE
- name: bedrooms
  endpoint:
    path: /bedrooms
    method: GET
    data_selector: bedrooms
- name: single_bedroom
  endpoint:
    path: /bedrooms/:bedroom_id
    method: GET
    data_selector: bedrooms
- name: create_bedroom
  endpoint:
    path: /rentals/:rental_id/bedrooms
    method: POST
    data_selector: bedrooms
- name: update_bedroom
  endpoint:
    path: /bedrooms/:bedroom_id
    method: PUT
    data_selector: bedrooms
- name: destroy_bedroom
  endpoint:
    path: /bedrooms/:bedroom_id
    method: DELETE
- name: discount_code_usages
  endpoint:
    path: /booking/discount_code_usages
    method: GET
    data_selector: discount_codes
    params: {}
- name: single_discount_code_usage
  endpoint:
    path: /booking/discount_code_usages/:discount_code_usage_id
    method: GET
    data_selector: discount_codes
    params: {}
- name: booking_comments
  endpoint:
    path: /booking_comments
    method: GET
    data_selector: booking_comments
- name: single_booking_comment
  endpoint:
    path: /booking_comments/:booking_comment_id
    method: GET
    data_selector: booking_comments
- name: create_booking_comment
  endpoint:
    path: /booking_comments
    method: POST
    data_selector: booking_comments
- name: update_booking_comment
  endpoint:
    path: /booking_comments/:booking_comment_id
    method: PUT
    data_selector: booking_comments
- name: destroy_booking_comment
  endpoint:
    path: /booking_comments/:booking_comment_id
    method: DELETE
- name: discount_codes
  endpoint:
    path: /booking/discount_codes
    method: GET
    data_selector: discount_codes
- name: Bookings
  endpoint:
    path: /reference/endpoints/bookings
    method: GET
- name: booking
  endpoint:
    path: /bookings
    method: GET
    data_selector: bookings
- name: discount_code_usages
  endpoint:
    path: /booking/discount_code_usages
    method: GET
    data_selector: discount_codes
    params: {}
- name: single_discount_code_usage
  endpoint:
    path: /booking/discount_code_usages/:discount_code_usage_id
    method: GET
    data_selector: discount_codes
    params: {}
- name: booking
  endpoint:
    path: /bookings
    method: GET
    data_selector: records
- name: discount_codes
  endpoint:
    path: /booking/discount_codes
    method: GET
    data_selector: discount_codes
    params: {}
- name: bookings
  endpoint:
    path: /bookings
    method: GET
    data_selector: bookings
- name: Bookings
  endpoint:
    path: /reference/endpoints/bookings
    method: GET
- name: booking
  endpoint:
    path: /bookings
    method: GET
    data_selector: records
    params: {}
- name: create_booking
  endpoint:
    path: /rentals/:rental_id/bookings
    method: POST
- name: update_booking
  endpoint:
    path: /bookings/:booking_id
    method: PUT
- name: cancel_booking
  endpoint:
    path: /bookings/:booking_id
    method: DELETE
- name: booking
  endpoint:
    path: /bookings
    method: GET
    data_selector: records
- name: bookings
  endpoint:
    path: /bookings
    method: GET
    data_selector: bookings
- name: single_booking
  endpoint:
    path: /bookings/:booking_id
    method: GET
    data_selector: bookings
- name: bookings_fees
  endpoint:
    path: /bookings_fees
    method: GET
    data_selector: bookings_fees
    params: {}
- name: single_booking_fee
  endpoint:
    path: /bookings_fees/:bookings_fee_id
    method: GET
    data_selector: bookings_fees
    params: {}
- name: add_booking_fee
  endpoint:
    path: /bookings/:id/add_bookings_fee
    method: PATCH
    data_selector: bookings
    params: {}
- name: remove_booking_fee
  endpoint:
    path: /bookings/:id/remove_bookings_fee/:bookings_fee_id
    method: PATCH
    data_selector: bookings
    params: {}
- name: bookings
  endpoint:
    path: /rentals/:rental_id/bookings
    method: POST
    data_selector: bookings
- name: update_booking
  endpoint:
    path: /bookings/:booking_id
    method: PUT
    data_selector: bookings
- name: cancel_booking
  endpoint:
    path: /bookings/:booking_id
    method: DELETE
- name: bookings_payments
  endpoint:
    path: /bookings_payments
    method: GET
    data_selector: bookings_payments
    params: {}
- name: single_bookings_payment
  endpoint:
    path: /bookings_payments/:bookings_payment_id
    method: GET
    data_selector: bookings_payments
    params: {}
- name: bookings_fees
  endpoint:
    path: /bookings_fees
    method: GET
    data_selector: bookings_fees
- name: single_bookings_fee
  endpoint:
    path: /bookings_fees/:bookings_fee_id
    method: GET
    data_selector: bookings_fees
- name: add_bookings_fee
  endpoint:
    path: /bookings/:id/add_bookings_fee
    method: PATCH
- name: remove_bookings_fee
  endpoint:
    path: /bookings/:id/remove_bookings_fee/:bookings_fee_id
    method: PATCH
- name: bookings_payments
  endpoint:
    path: /bookings_payments
    method: GET
    data_selector: bookings_payments
    params: {}
- name: single_bookings_payment
  endpoint:
    path: /bookings_payments/:bookings_payment_id
    method: GET
    data_selector: bookings_payments
    params: {}
- name: bookings_tags
  endpoint:
    path: /bookings_tags
    method: GET
    data_selector: bookings_tags
- name: single_booking_tag
  endpoint:
    path: /bookings_tags/:bookings_tag_id
    method: GET
    data_selector: bookings_tags
- name: create_booking_tag
  endpoint:
    path: /bookings_tags
    method: POST
    data_selector: bookings_tags
- name: update_booking_tag
  endpoint:
    path: /bookings_tags/:bookings_tag_id
    method: PUT
    data_selector: bookings_tags
- name: add_booking_tag
  endpoint:
    path: /bookings/:id/add_tag/:bookings_tag_id
    method: POST
- name: remove_booking_tag
  endpoint:
    path: /bookings/:id/remove_tag/:bookings_tag_id
    method: DELETE
- name: bookings_taxes
  endpoint:
    path: /bookings_taxes
    method: GET
    data_selector: bookings_taxes
    params: {}
- name: single_booking_tax
  endpoint:
    path: /bookings_taxes/:bookings_tax_id
    method: GET
    data_selector: bookings_taxes
    params: {}
- name: bookings_tags
  endpoint:
    path: /bookings_tags
    method: GET
    data_selector: bookings_tags
- name: single_booking_tag
  endpoint:
    path: /bookings_tags/:bookings_tag_id
    method: GET
    data_selector: bookings_tags
- name: create_booking_tag
  endpoint:
    path: /bookings_tags
    method: POST
    data_selector: bookings_tags
- name: update_booking_tag
  endpoint:
    path: /bookings_tags/:bookings_tag_id
    method: PUT
    data_selector: bookings_tags
- name: add_booking_tag
  endpoint:
    path: /bookings/:id/add_tag/:bookings_tag_id
    method: POST
- name: remove_booking_tag
  endpoint:
    path: /bookings/:id/remove_tag/:bookings_tag_id
    method: DELETE
- name: change_overs
  endpoint:
    path: /change_overs
    method: GET
    data_selector: change_overs
    params: {}
- name: single_change_over
  endpoint:
    path: /change_overs/:change_over_id
    method: GET
    data_selector: change_overs
    params: {}
- name: clients
  endpoint:
    path: /clients
    method: GET
    data_selector: clients
    params: {}
- name: single_client
  endpoint:
    path: /clients/:client_id
    method: GET
    data_selector: clients
    params: {}
- name: bookings_taxes
  endpoint:
    path: /bookings_taxes
    method: GET
    data_selector: bookings_taxes
    params: {}
- name: single_bookings_tax
  endpoint:
    path: /bookings_taxes/:bookings_tax_id
    method: GET
    data_selector: bookings_taxes
    params: {}
- name: clients
  endpoint:
    path: /clients
    method: POST
- name: update_client
  endpoint:
    path: /clients/:client_id
    method: PUT
- name: change_overs
  endpoint:
    path: /change_overs
    method: GET
    data_selector: change_overs
    params: {}
- name: single_change_over
  endpoint:
    path: /change_overs/:change_over_id
    method: GET
    data_selector: change_overs
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
    params: {}
- name: clients
  endpoint:
    path: /clients
    method: GET
    data_selector: clients
    params: {}
- name: single_client
  endpoint:
    path: /clients/:client_id
    method: GET
    data_selector: clients
    params: {}
- name: destinations
  endpoint:
    path: /destinations
    method: GET
    data_selector: destinations
    params: {}
- name: single_destination
  endpoint:
    path: /destinations/:destination_id
    method: GET
    data_selector: destinations
    params: {}
- name: clients
  endpoint:
    path: /clients
    method: POST
    data_selector: clients
    params: {}
- name: update_client
  endpoint:
    path: /clients/:client_id
    method: PUT
    data_selector: clients
    params: {}
- name: fees
  endpoint:
    path: /fees
    method: GET
    data_selector: fees
    params: {}
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
- name: destroy_contact
  endpoint:
    path: /contacts/:contact_id
    method: DELETE
- name: fees_taxes
  endpoint:
    path: /fees_taxes
    method: GET
    data_selector: fees_taxes
    params: {}
- name: single_fees_tax
  endpoint:
    path: /fees_taxes/:fees_tax_id
    method: GET
    data_selector: fees_taxes
    params: {}
- name: create_fees_tax
  endpoint:
    path: /fees/:fee_id/fees_taxes
    method: POST
    data_selector: fees_taxes
    params: {}
- name: update_fees_tax
  endpoint:
    path: /fees_taxes/:fees_tax_id
    method: PUT
    data_selector: fees_taxes
    params: {}
- name: delete_fees_tax
  endpoint:
    path: /fees_taxes/:fees_tax_id
    method: DELETE
    data_selector: null
    params: {}
- name: destinations
  endpoint:
    path: /destinations
    method: GET
    data_selector: destinations
- name: single_destination
  endpoint:
    path: /destinations/:destination_id
    method: GET
    data_selector: destinations
- name: host_reviews
  endpoint:
    path: /host_reviews
    method: GET
    data_selector: host_reviews
- name: fees
  endpoint:
    path: /fees
    method: GET
    data_selector: fees
    params: {}
- name: host_review
  endpoint:
    path: /host_reviews/draft/:host_review_id/submit
    method: PUT
    data_selector: host_reviews
- name: draft_host_review
  endpoint:
    path: /bookings/:booking_id/host_reviews/draft
    method: POST
    data_selector: host_reviews
- name: submitted_host_review
  endpoint:
    path: /bookings/:booking_id/host_reviews
    method: POST
    data_selector: host_reviews
- name: fees_taxes
  endpoint:
    path: /fees_taxes
    method: GET
    data_selector: fees_taxes
    params: {}
- name: single_fees_tax
  endpoint:
    path: /fees_taxes/:fees_tax_id
    method: GET
    data_selector: fees_taxes
    params: {}
- name: create_fees_tax
  endpoint:
    path: /fees/:fee_id/fees_taxes
    method: POST
    data_selector: fees_taxes
    params: {}
- name: update_fees_tax
  endpoint:
    path: /fees_taxes/:fees_tax_id
    method: PUT
    data_selector: fees_taxes
    params: {}
- name: delete_fees_tax
  endpoint:
    path: /fees_taxes/:fees_tax_id
    method: DELETE
    data_selector: ''
    params: {}
- name: hosts
  endpoint:
    path: /hosts
    method: GET
    data_selector: hosts
    params: {}
- name: host_reviews
  endpoint:
    path: /host_reviews
    method: GET
    data_selector: host_reviews
- name: attachments
  endpoint:
    path: /inbox/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: host_reviews
  endpoint:
    path: /bookings/:booking_id/host_reviews
    method: POST
- name: draft_host_reviews
  endpoint:
    path: /bookings/:booking_id/host_reviews/draft
    method: POST
- name: submit_draft_host_reviews
  endpoint:
    path: /host_reviews/draft/:host_review_id/submit
    method: PUT
- name: modify_draft_host_reviews
  endpoint:
    path: /host_reviews/draft/:host_review_id
    method: PUT
- name: inbox_conversations
  endpoint:
    path: /inbox/conversations
    method: GET
    data_selector: conversations
    params: {}
- name: hosts
  endpoint:
    path: /hosts
    method: GET
    data_selector: hosts
- name: remove_booking
  endpoint:
    path: /inbox/conversations/:conversation_id/disconnect_booking
    method: PUT
    data_selector: conversations
    params: {}
- name: attachments
  endpoint:
    path: /inbox/attachments
    method: GET
    data_selector: attachments
    params: {}
- name: single_attachment
  endpoint:
    path: /inbox/attachments/:attachment_id
    method: GET
    data_selector: attachments
    params: {}
- name: create_attachment
  endpoint:
    path: /inbox/attachments
    method: POST
    data_selector: attachments
    params: {}
- name: update_attachment
  endpoint:
    path: /inbox/attachments/:id
    method: PUT
    data_selector: attachments
    params: {}
- name: inbox_messages
  endpoint:
    path: /inbox/messages
    method: GET
    data_selector: messages
    params: {}
- name: single_message
  endpoint:
    path: /inbox/messages/:message_id
    method: GET
    data_selector: messages
    params: {}
- name: create_message
  endpoint:
    path: /inbox/messages
    method: POST
    data_selector: messages
    params: {}
- name: update_message
  endpoint:
    path: /inbox/messages/:message_id
    method: PUT
    data_selector: messages
    params: {}
- name: add_attachment
  endpoint:
    path: /inbox/messages/:id/add_attachment
    method: PUT
    data_selector: messages
    params: {}
- name: inbox_conversations
  endpoint:
    path: /inbox/conversations
    method: GET
    data_selector: conversations
- name: remove_booking
  endpoint:
    path: /inbox/conversations/:conversation_id/disconnect_booking
    method: PUT
    data_selector: conversations
    params: {}
- name: participants
  endpoint:
    path: /inbox/participants
    method: GET
    data_selector: participants
- name: participant
  endpoint:
    path: /inbox/participants/:participant_id
    method: GET
    data_selector: participants
- name: create_participant
  endpoint:
    path: /inbox/participants
    method: POST
    data_selector: participants
- name: update_participant
  endpoint:
    path: /inbox/participants/:participant_id
    method: PUT
    data_selector: participants
- name: inbox_messages
  endpoint:
    path: /inbox/messages
    method: GET
    data_selector: messages
- name: single_message
  endpoint:
    path: /inbox/messages/:message_id
    method: GET
    data_selector: messages
- name: create_message
  endpoint:
    path: /inbox/messages
    method: POST
    data_selector: messages
- name: update_message
  endpoint:
    path: /inbox/messages/:message_id
    method: PUT
    data_selector: messages
- name: add_attachment
  endpoint:
    path: /inbox/messages/:id/add_attachment
    method: PUT
    data_selector: messages
- name: inquiry
  endpoint:
    path: /inquiries
    method: GET
    data_selector: inquiries
- name: create_inquiry
  endpoint:
    path: /rentals/:rental_id/inquiries
    method: POST
    data_selector: inquiries
- name: inquiry
  endpoint:
    path: /inquiries/:id
    method: PUT
    data_selector: inquiries
- name: participants
  endpoint:
    path: /inbox/participants
    method: GET
    data_selector: participants
    params: {}
- name: single_participant
  endpoint:
    path: /inbox/participants/:participant_id
    method: GET
    data_selector: participants
    params: {}
- name: create_participant
  endpoint:
    path: /inbox/participants
    method: POST
    data_selector: participants
    params: {}
- name: update_participant
  endpoint:
    path: /inbox/participants/:participant_id
    method: PUT
    data_selector: participants
    params: {}
- name: inquiries
  endpoint:
    path: /inquiries
    method: GET
    data_selector: inquiries
- name: create_inquiry
  endpoint:
    path: /rentals/:rental_id/inquiries
    method: POST
    data_selector: inquiries
- name: single_inquiry
  endpoint:
    path: /inquiries/:inquiry_id
    method: GET
    data_selector: inquiries
- name: living_rooms
  endpoint:
    path: /living_rooms
    method: GET
    data_selector: living_rooms
    params: {}
- name: single_living_room
  endpoint:
    path: /living_rooms/:living_room_id
    method: GET
    data_selector: living_rooms
    params: {}
- name: create_living_room
  endpoint:
    path: /rentals/:rental_id/living_rooms
    method: POST
    data_selector: living_rooms
    params: {}
- name: update_living_room
  endpoint:
    path: /living_rooms/:living_room_id
    method: PUT
    data_selector: living_rooms
    params: {}
- name: destroy_living_room
  endpoint:
    path: /living_rooms/:living_room_id
    method: DELETE
    data_selector: ''
    params: {}
- name: inquiry
  endpoint:
    path: /inquiries/:id
    method: PUT
- name: los_records
  endpoint:
    path: /los_records
    method: GET
    data_selector: los_records
    params:
      rental_id: ''
      kinds: ''
      exchange_to_currency: ''
      updated_since: ''
- name: me
  endpoint:
    path: /me
    method: GET
    data_selector: accounts_applications
    params: {}
- name: living_rooms
  endpoint:
    path: /living_rooms
    method: GET
    data_selector: living_rooms
- name: single_living_room
  endpoint:
    path: /living_rooms/:living_room_id
    method: GET
    data_selector: living_rooms
- name: create_living_room
  endpoint:
    path: /rentals/:rental_id/living_rooms
    method: POST
    data_selector: living_rooms
- name: update_living_room
  endpoint:
    path: /living_rooms/:living_room_id
    method: PUT
    data_selector: living_rooms
- name: destroy_living_room
  endpoint:
    path: /living_rooms/:living_room_id
    method: DELETE
- name: mid_term_rate_maps
  endpoint:
    path: /mid_term_rate_maps
    method: GET
    data_selector: mid_term_rate_maps
- name: mid_term_rate_map
  endpoint:
    path: /mid_term_rate_maps/:mid_term_rate_map_id
    method: GET
- name: los_records
  endpoint:
    path: /los_records
    method: GET
    data_selector: los_records
    params:
      updated_since: ''
- name: mid_term_rate_map
  endpoint:
    path: /mid_term_rate_maps/:mid_term_rate_map_id
    method: PUT
    data_selector: mid_term_rate_maps
    params: {}
- name: me
  endpoint:
    path: /me
    method: GET
    data_selector: accounts_applications
    params: {}
- name: nightly_rate_map
  endpoint:
    path: /reference/endpoints/nightly_rate_maps
    method: GET
    data_selector: records
- name: mid_term_rate_maps
  endpoint:
    path: /mid_term_rate_maps
    method: GET
    data_selector: mid_term_rate_maps
- name: nightly_rate_maps
  endpoint:
    path: /nightly_rate_maps
    method: GET
    data_selector: nightly_rate_maps
- name: nightly_rate_map
  endpoint:
    path: /nightly_rate_maps/:nightly_rate_map_id
    method: GET
- name: mid_term_rate_map
  endpoint:
    path: /mid_term_rate_maps/:mid_term_rate_map_id
    method: GET
- name: mid_term_rate_maps
  endpoint:
    path: /mid_term_rate_maps/:mid_term_rate_map_id
    method: PUT
    data_selector: mid_term_rate_maps
    params:
      incremental: start_date
- name: nightly_rate_map
  endpoint:
    path: /nightly_rate_maps/:nightly_rate_map_id
    method: PUT
    data_selector: nightly_rate_maps
    params: {}
- name: nightly_rate_map
  endpoint:
    path: /nightly_rate_maps
    method: GET
    data_selector: records
- name: payment_gateways
  endpoint:
    path: /payment_gateways
    method: GET
    data_selector: payment_gateways
- name: payment_gateway
  endpoint:
    path: /payment_gateways/:payment_gateway_id
    method: GET
    data_selector: payment_gateways
- name: create_payment_gateway
  endpoint:
    path: /payment_gateways
    method: POST
    data_selector: payment_gateways
- name: update_payment_gateway
  endpoint:
    path: /payment_gateways/:payment_gateway_id
    method: PUT
    data_selector: payment_gateways
- name: nightly_rate_maps
  endpoint:
    path: /nightly_rate_maps
    method: GET
    data_selector: nightly_rate_maps
- name: payments
  endpoint:
    path: /reference/endpoints/payments
    method: GET
    data_selector: payments
    params: {}
- name: nightly_rate_maps
  endpoint:
    path: /nightly_rate_maps/:nightly_rate_map_id
    method: GET
    data_selector: nightly_rate_maps
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
- name: search_payments
  endpoint:
    path: /payments
    method: GET
    params:
      order_id: BS-abc-123
- name: single_payment
  endpoint:
    path: /payments/:payment_id
    method: GET
- name: create_payment
  endpoint:
    path: /bookings/:booking_id/payments
    method: POST
- name: update_payment
  endpoint:
    path: /payments/:payment_id
    method: PUT
- name: cancel_payment
  endpoint:
    path: /payments/:payment_id
    method: DELETE
- name: nightly_rate_map
  endpoint:
    path: /nightly_rate_maps/:nightly_rate_map_id
    method: PUT
    data_selector: nightly_rate_maps
    params: {}
- name: payment_gateways
  endpoint:
    path: /payment_gateways
    method: GET
    data_selector: payment_gateways
- name: periods
  endpoint:
    path: /periods
    method: GET
    data_selector: periods
- name: single_period
  endpoint:
    path: /periods/:period_id
    method: GET
    data_selector: periods
- name: create_period
  endpoint:
    path: /seasons/:season_id/periods
    method: POST
    data_selector: periods
- name: update_period
  endpoint:
    path: /periods/:period_id
    method: PUT
    data_selector: periods
- name: destroy_period
  endpoint:
    path: /periods/:period_id
    method: DELETE
- name: payments
  endpoint:
    path: /reference/endpoints/payments
    method: GET
- name: photos
  endpoint:
    path: /photos
    method: GET
    data_selector: photos
- name: create_photo
  endpoint:
    path: /rentals/:rental_id/photos
    method: POST
    data_selector: photos
- name: update_photo
  endpoint:
    path: /photos/:photo_id
    method: PUT
- name: destroy_photo
  endpoint:
    path: /photos/:photo_id
    method: DELETE
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params: {}
- name: search_payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments
    params:
      order_id: BS-abc-123
- name: single_payment
  endpoint:
    path: /payments/:payment_id
    method: GET
    data_selector: payments
    params: {}
- name: create_payment
  endpoint:
    path: /bookings/:booking_id/payments
    method: POST
    data_selector: payments
    params: {}
- name: update_payment
  endpoint:
    path: /payments/:payment_id
    method: PUT
    data_selector: payments
    params: {}
- name: cancel_payment
  endpoint:
    path: /payments/:payment_id
    method: DELETE
    data_selector: payments
    params: {}
- name: rates
  endpoint:
    path: /rates
    method: GET
    data_selector: rates
- name: periods
  endpoint:
    path: /periods
    method: GET
    data_selector: periods
    params: {}
- name: single_period
  endpoint:
    path: /periods/:period_id
    method: GET
    data_selector: periods
    params: {}
- name: create_period
  endpoint:
    path: /seasons/:season_id/periods
    method: POST
    data_selector: periods
    params: {}
- name: update_period
  endpoint:
    path: /periods/:period_id
    method: PUT
    data_selector: periods
    params: {}
- name: delete_period
  endpoint:
    path: /periods/:period_id
    method: DELETE
    data_selector: {}
    params: {}
- name: rates_rules
  endpoint:
    path: /rates_rules
    method: GET
    data_selector: rates_rules
- name: single_rates_rule
  endpoint:
    path: /rates_rules/:rates_rule_id
    method: GET
    data_selector: rates_rules
- name: create_rates_rule
  endpoint:
    path: /rates_tables/:rates_table_id/rates_rules
    method: POST
    data_selector: rates_rules
- name: update_rates_rule
  endpoint:
    path: /rates_rules/:rates_rule_id
    method: PUT
    data_selector: rates_rules
- name: destroy_rates_rule
  endpoint:
    path: /rates_rules/:rates_rule_id
    method: DELETE
- name: photos
  endpoint:
    path: /photos
    method: GET
    data_selector: photos
- name: single_photo
  endpoint:
    path: /photos/:photo_id
    method: GET
    data_selector: photos
- name: create_photo
  endpoint:
    path: /rentals/:rental_id/photos
    method: POST
    data_selector: photos
- name: rates_tables
  endpoint:
    path: /rates_tables
    method: GET
    data_selector: rates_tables
- name: single_rates_table
  endpoint:
    path: /rates_tables/:rates_table_id
    method: GET
    data_selector: rates_tables
- name: create_rates_table
  endpoint:
    path: /rates_tables
    method: POST
    data_selector: rates_tables
- name: update_rates_table
  endpoint:
    path: /rates_tables/:rates_table_id
    method: PUT
    data_selector: rates_tables
- name: destroy_rates_table
  endpoint:
    path: /rates_tables/:rates_table_id
    method: DELETE
- name: photo
  endpoint:
    path: /photos/:photo_id
    method: PUT
- name: photo
  endpoint:
    path: /photos/:photo_id
    method: DELETE
- name: rates
  endpoint:
    path: /rates
    method: GET
    data_selector: rates
    params: {}
- name: rental_agreements
  endpoint:
    path: /rental_agreements
    method: GET
    data_selector: rental_agreements
- name: single_rental_agreement
  endpoint:
    path: /rental_agreements/:rental_agreement_id
    method: GET
    data_selector: rental_agreements
- name: create_default_rental_agreement
  endpoint:
    path: /rental_agreements
    method: POST
    data_selector: rental_agreements
- name: create_rental_agreement_for_booking
  endpoint:
    path: /bookings/:booking_id/rental_agreements
    method: POST
    data_selector: rental_agreements
- name: create_rental_agreement_for_rental
  endpoint:
    path: /rentals/:rental_id/rental_agreements
    method: POST
    data_selector: rental_agreements
- name: rental_cancelation_policies
  endpoint:
    path: /rental_cancelation_policies
    method: GET
    data_selector: rental_cancelation_policies
- name: single_rental_cancelation_policy
  endpoint:
    path: /rental_cancelation_policies/:rental_cancelation_policy_id
    method: GET
    data_selector: rental_cancelation_policies
- name: rates_rules
  endpoint:
    path: /rates_rules
    method: GET
    data_selector: rates_rules
- name: single_rates_rule
  endpoint:
    path: /rates_rules/:rates_rule_id
    method: GET
    data_selector: rates_rules
- name: create_rates_rule
  endpoint:
    path: /rates_tables/:rates_table_id/rates_rules
    method: POST
    data_selector: rates_rules
- name: update_rates_rule
  endpoint:
    path: /rates_rules/:rates_rule_id
    method: PUT
    data_selector: rates_rules
- name: destroy_rates_rule
  endpoint:
    path: /rates_rules/:rates_rule_id
    method: DELETE
- name: rental_cancelation_policy_items
  endpoint:
    path: /rental_cancelation_policy_items
    method: GET
    data_selector: rental_cancelation_policy_items
- name: single_rental_cancelation_policy_item
  endpoint:
    path: /rental_cancelation_policy_items/:rental_cancelation_policy_item_id
    method: GET
    data_selector: rental_cancelation_policy_items
- name: rates_tables
  endpoint:
    path: /rates_tables
    method: GET
    data_selector: rates_tables
- name: rental_contacts
  endpoint:
    path: /rental_contacts
    method: GET
    data_selector: rental_contacts
    params: {}
- name: rental_agreements
  endpoint:
    path: /rental_agreements
    method: GET
    data_selector: rental_agreements
- name: single_rental_agreement
  endpoint:
    path: /rental_agreements/:rental_agreement_id
    method: GET
    data_selector: rental_agreements
- name: create_default_rental_agreement
  endpoint:
    path: /rental_agreements
    method: POST
    data_selector: rental_agreements
- name: create_rental_agreement_for_booking
  endpoint:
    path: /bookings/:booking_id/rental_agreements
    method: POST
    data_selector: rental_agreements
- name: create_rental_agreement_for_rental
  endpoint:
    path: /rentals/:rental_id/rental_agreements
    method: POST
    data_selector: rental_agreements
- name: rental_link_groups
  endpoint:
    path: /rental_link_groups
    method: GET
    data_selector: rental_link_groups
- name: create_rental_link_group
  endpoint:
    path: /rental_link_groups
    method: POST
    data_selector: rental_link_groups
- name: get_single_rental_link_group
  endpoint:
    path: /rental_link_groups/:rental_link_group_id
    method: GET
    data_selector: rental_link_groups
- name: cancel_rental_link_group
  endpoint:
    path: /rental_link_groups/:rental_link_group_id
    method: DELETE
- name: rental_links
  endpoint:
    path: /rental_links
    method: GET
    data_selector: rental_links
    params: {}
- name: single_rental_link
  endpoint:
    path: /rental_links/:rental_link_id
    method: GET
    data_selector: rental_links
    params: {}
- name: rental_cancelation_policies
  endpoint:
    path: /rental_cancelation_policies
    method: GET
    data_selector: rental_cancelation_policies
- name: single_rental_cancelation_policy
  endpoint:
    path: /rental_cancelation_policies/:rental_cancelation_policy_id
    method: GET
    data_selector: rental_cancelation_policies
- name: rental_cancelation_policy_items
  endpoint:
    path: /rental_cancelation_policy_items
    method: GET
    data_selector: rental_cancelation_policy_items
- name: single_rental_cancelation_policy_item
  endpoint:
    path: /rental_cancelation_policy_items/:rental_cancelation_policy_item_id
    method: GET
    data_selector: rental_cancelation_policy_items
- name: rental_urls
  endpoint:
    path: /rental_urls
    method: GET
    data_selector: rental_urls
    params: {}
- name: single_rental_url
  endpoint:
    path: /rental_urls/:rental_url_id
    method: GET
    data_selector: rental_urls
    params: {}
- name: create_rental_url
  endpoint:
    path: /rentals/:rental_id/rental_urls
    method: POST
    data_selector: rental_urls
    params: {}
- name: update_rental_url
  endpoint:
    path: /rental_urls/:rental_url_id
    method: PUT
    data_selector: rental_urls
    params: {}
- name: destroy_rental_url
  endpoint:
    path: /rental_urls/:rental_url_id
    method: DELETE
    data_selector: {}
    params: {}
- name: Rentals
  endpoint:
    path: /reference/endpoints/rentals
    method: GET
- name: rental_contacts
  endpoint:
    path: /rental_contacts
    method: GET
    data_selector: rental_contacts
    params: {}
- name: single_rental_contact
  endpoint:
    path: /rental_contacts/:rental_contact_id
    method: GET
    data_selector: rental_contacts
    params: {}
- name: create_rental_contact
  endpoint:
    path: /rentals/:rental_id/rental_contacts
    method: POST
    data_selector: rental_contacts
    params: {}
- name: update_rental_contact
  endpoint:
    path: /rental_contacts/:rental_contact_id
    method: PUT
    data_selector: rental_contacts
    params: {}
- name: destroy_rental_contact
  endpoint:
    path: /rental_contacts/:rental_contact_id
    method: DELETE
    data_selector: null
    params: {}
- name: rental
  endpoint:
    path: /rentals
    method: GET
    data_selector: records
- name: rentals
  endpoint:
    path: /rentals
    method: GET
- name: search_rentals
  endpoint:
    path: /rentals/search
    method: GET
- name: rental_link_groups
  endpoint:
    path: /rental_link_groups
    method: GET
    data_selector: rental_link_groups
- name: create_rental_link_group
  endpoint:
    path: /rental_link_groups
    method: POST
    data_selector: rental_link_groups
- name: get_single_rental_link_group
  endpoint:
    path: /rental_link_groups/:rental_link_group_id
    method: GET
    data_selector: rental_link_groups
- name: cancel_rental_link_group
  endpoint:
    path: /rental_link_groups/:rental_link_group_id
    method: DELETE
- name: rental
  endpoint:
    path: /rentals/:rental_id
    method: GET
- name: rental_links
  endpoint:
    path: /rental_links
    method: GET
    data_selector: rental_links
    params: {}
- name: single_rental_link
  endpoint:
    path: /rental_links/:rental_link_id
    method: GET
    data_selector: rental_links
    params: {}
- name: create_rental
  endpoint:
    path: /rentals
    method: POST
    data_selector: rentals
- name: update_rental
  endpoint:
    path: /rentals/:rental_id
    method: PUT
    data_selector: rentals
- name: destroy_rental
  endpoint:
    path: /rentals/:rental_id
    method: DELETE
- name: rental_urls
  endpoint:
    path: /rental_urls
    method: GET
    data_selector: rental_urls
- name: single_rental_url
  endpoint:
    path: /rental_urls/:rental_url_id
    method: GET
    data_selector: rental_urls
- name: create_rental_url
  endpoint:
    path: /rentals/:rental_id/rental_urls
    method: POST
    data_selector: rental_urls
- name: update_rental_url
  endpoint:
    path: /rental_urls/:rental_url_id
    method: PUT
    data_selector: rental_urls
- name: destroy_rental_url
  endpoint:
    path: /rental_urls/:rental_url_id
    method: DELETE
- name: rentals_amenities
  endpoint:
    path: /rentals_amenities
    method: GET
    data_selector: rentals_amenities
- name: single_rentals_amenity
  endpoint:
    path: /rentals_amenities/:rentals_amenity_id
    method: GET
    data_selector: rentals_amenities
- name: create_rentals_amenity
  endpoint:
    path: /rentals/:rental_id/rentals_amenities
    method: POST
    data_selector: rentals_amenities
- name: update_rentals_amenity
  endpoint:
    path: /rentals_amenities/:rentals_amenity_id
    method: PUT
    data_selector: rentals_amenities
- name: destroy_rentals_amenity
  endpoint:
    path: /rentals_amenities/:rentals_amenity_id
    method: DELETE
- name: Rentals
  endpoint:
    path: /endpoints/rentals
    method: GET
- name: rental
  endpoint:
    path: /rentals
    method: GET
    data_selector: data
    params: {}
- name: rentals_contents_overrides
  endpoint:
    path: /rentals_contents_overrides
    method: GET
    data_selector: rentals_contents_overrides
    params: {}
- name: rental
  endpoint:
    path: /api/rentals
    method: GET
    data_selector: rentals
    params: {}
- name: rentals
  endpoint:
    path: /rentals
    method: GET
    data_selector: rentals
- name: search_rentals
  endpoint:
    path: /rentals/search
    method: GET
- name: rentals_fees
  endpoint:
    path: /rentals_fees
    method: GET
    data_selector: rentals_fees
- name: single_rentals_fee
  endpoint:
    path: /rentals_fees/:rentals_fee_id
    method: GET
    data_selector: rentals_fees
- name: create_rentals_fee
  endpoint:
    path: /rentals/:rental_id/rentals_fees
    method: POST
    data_selector: rentals_fees
- name: update_rentals_fee
  endpoint:
    path: /rentals_fees/:rentals_fee_id
    method: PUT
    data_selector: rentals_fees
- name: archive_rentals_fee
  endpoint:
    path: /rentals_fees/:rentals_fee_id
    method: DELETE
- name: rental
  endpoint:
    path: /rentals/:rental_id
    method: GET
    data_selector: rentals
- name: rentals_tags
  endpoint:
    path: /rentals_tags
    method: GET
    data_selector: rentals_tags
- name: rentals
  endpoint:
    path: /rentals
    method: POST
    data_selector: rentals
- name: update_rental
  endpoint:
    path: /rentals/:rental_id
    method: PUT
    data_selector: rentals
- name: destroy_rental
  endpoint:
    path: /rentals/:rental_id
    method: DELETE
- name: rentals_taxes
  endpoint:
    path: /rentals_taxes
    method: GET
    data_selector: rentals_taxes
- name: single_rentals_tax
  endpoint:
    path: /rentals_taxes/:rentals_tax_id
    method: GET
    data_selector: rentals_taxes
- name: create_rentals_tax
  endpoint:
    path: /rentals/:rental_id/rentals_taxes
    method: POST
    data_selector: rentals_taxes
- name: update_rentals_tax
  endpoint:
    path: /rentals_taxes/:rentals_tax_id
    method: PUT
    data_selector: rentals_taxes
- name: delete_rentals_tax
  endpoint:
    path: /rentals_taxes/:rentals_tax_id
    method: DELETE
- name: rentals_amenities
  endpoint:
    path: /rentals_amenities
    method: GET
    data_selector: rentals_amenities
- name: single_rentals_amenity
  endpoint:
    path: /rentals_amenities/:rentals_amenity_id
    method: GET
    data_selector: rentals_amenities
- name: create_rentals_amenity
  endpoint:
    path: /rentals/:rental_id/rentals_amenities
    method: POST
    data_selector: rentals_amenities
- name: update_rentals_amenity
  endpoint:
    path: /rentals_amenities/:rentals_amenity_id
    method: PUT
    data_selector: rentals_amenities
- name: destroy_rentals_amenity
  endpoint:
    path: /rentals_amenities/:rentals_amenity_id
    method: DELETE
- name: review_replies
  endpoint:
    path: /review_replies
    method: GET
    data_selector: review_replies
    params: {}
- name: reply_to_guest_review
  endpoint:
    path: /reviews/:review_id/reply
    method: POST
    data_selector: review_replies
    params: {}
- name: reply_to_host_review
  endpoint:
    path: /host_reviews/:host_review_id/reply
    method: POST
    data_selector: review_replies
    params: {}
- name: rentals_contents_overrides
  endpoint:
    path: /rentals_contents_overrides
    method: GET
    data_selector: rentals_contents_overrides
- name: reviews
  endpoint:
    path: /reviews
    method: GET
    data_selector: reviews
- name: review
  endpoint:
    path: /reviews/:review_id
    method: GET
- name: create_review
  endpoint:
    path: /bookings/:booking_id/reviews
    method: POST
- name: rentals_fees
  endpoint:
    path: /rentals_fees
    method: GET
    data_selector: rentals_fees
- name: single_rentals_fee
  endpoint:
    path: /rentals_fees/:rentals_fee_id
    method: GET
    data_selector: rentals_fees
- name: create_rentals_fee
  endpoint:
    path: /rentals/:rental_id/rentals_fees
    method: POST
    data_selector: rentals_fees
- name: update_rentals_fee
  endpoint:
    path: /rentals_fees/:rentals_fee_id
    method: PUT
    data_selector: rentals_fees
- name: archive_rentals_fee
  endpoint:
    path: /rentals_fees/:rentals_fee_id
    method: DELETE
- name: seasons
  endpoint:
    path: /seasons
    method: GET
    data_selector: seasons
- name: rentals_tags
  endpoint:
    path: /rentals_tags
    method: GET
    data_selector: rentals_tags
- name: sources
  endpoint:
    path: /sources
    method: GET
    data_selector: sources
    params: {}
- name: rentals_taxes
  endpoint:
    path: /rentals_taxes
    method: GET
    data_selector: rentals_taxes
    params: {}
- name: single_rentals_tax
  endpoint:
    path: /rentals_taxes/:rentals_tax_id
    method: GET
    data_selector: rentals_taxes
    params: {}
- name: create_rentals_tax
  endpoint:
    path: /rentals/:rental_id/rentals_taxes
    method: POST
    data_selector: rentals_taxes
    params: {}
- name: update_rentals_tax
  endpoint:
    path: /rentals_taxes/:rentals_tax_id
    method: PUT
    data_selector: rentals_taxes
    params: {}
- name: delete_rentals_tax
  endpoint:
    path: /rentals_taxes/:rentals_tax_id
    method: DELETE
    data_selector: rentals_taxes
    params: {}
- name: special_offers
  endpoint:
    path: /special_offers
    method: GET
    data_selector: special_offers
- name: single_special_offer
  endpoint:
    path: /special_offers/:special_offer_id
    method: GET
    data_selector: special_offers
- name: create_special_offer
  endpoint:
    path: /rentals/:rental_id/special_offers
    method: POST
    data_selector: special_offers
- name: update_special_offer
  endpoint:
    path: /special_offers/:special_offer
    method: PUT
    data_selector: special_offers
- name: destroy_special_offer
  endpoint:
    path: /special_offers/:special_offer_id
    method: DELETE
- name: review_replies
  endpoint:
    path: /review_replies
    method: GET
    data_selector: review_replies
    params: {}
- name: reply_to_guest_review
  endpoint:
    path: /reviews/:review_id/reply
    method: POST
    data_selector: review_replies
    params: {}
- name: reply_to_host_review
  endpoint:
    path: /host_reviews/:host_review_id/reply
    method: POST
    data_selector: review_replies
    params: {}
- name: tax_rules
  endpoint:
    path: /tax_rules
    method: GET
    data_selector: tax_rules
- name: single_tax_rule
  endpoint:
    path: /tax_rules/:tax_rule_id
    method: GET
    data_selector: tax_rules
- name: taxes
  endpoint:
    path: /taxes
    method: GET
    data_selector: taxes
- name: reviews
  endpoint:
    path: /reviews
    method: GET
    data_selector: reviews
    params: {}
- name: review
  endpoint:
    path: /reviews/:review_id
    method: GET
    data_selector: reviews
    params: {}
- name: create_review
  endpoint:
    path: /bookings/:booking_id/reviews
    method: POST
    data_selector: reviews
    params: {}
- name: seasons
  endpoint:
    path: /seasons
    method: GET
    data_selector: seasons
- name: single_season
  endpoint:
    path: /seasons/:season_id
    method: GET
    data_selector: seasons
- name: create_season
  endpoint:
    path: /rates_tables/:rates_table_id/seasons
    method: POST
    data_selector: seasons
- name: update_season
  endpoint:
    path: /seasons/:season_id
    method: PUT
    data_selector: seasons
- name: destroy_season
  endpoint:
    path: /seasons/:season_id
    method: DELETE
- name: sources
  endpoint:
    path: /sources
    method: GET
    data_selector: sources
- name: tax_kinds
  endpoint:
    path: /tax_kinds
    method: GET
    data_selector: records
- name: partnership_invoice_recipients
  endpoint:
    path: /partnership_invoice_recipients
    method: GET
    data_selector: records
- name: damage_deposit_collection_methods
  endpoint:
    path: /damage_deposit_collection_methods
    method: GET
    data_selector: records
- name: special_offers
  endpoint:
    path: /special_offers
    method: GET
    data_selector: special_offers
- name: get_special_offer
  endpoint:
    path: /special_offers/:special_offer_id
    method: GET
    data_selector: special_offers
- name: create_special_offer
  endpoint:
    path: /rentals/:rental_id/special_offers
    method: POST
    data_selector: special_offers
- name: update_special_offer
  endpoint:
    path: /special_offers/:special_offer
    method: PUT
    data_selector: special_offers
- name: destroy_special_offer
  endpoint:
    path: /special_offers/:special_offer_id
    method: DELETE
- name: tax_rules
  endpoint:
    path: /tax_rules
    method: GET
    data_selector: tax_rules
- name: single_tax_rule
  endpoint:
    path: /tax_rules/:tax_rule_id
    method: GET
    data_selector: tax_rules
- name: taxes
  endpoint:
    path: /taxes
    method: GET
    data_selector: taxes
- name: tax_kinds
  endpoint:
    path: /tax_kinds
    method: GET
    data_selector: tax_kinds
- name: partnership_invoice_recipients
  endpoint:
    path: /partnership_invoice_recipients
    method: GET
    data_selector: partnership_invoice_recipients
- name: damage_deposit_collection_methods
  endpoint:
    path: /damage_deposit_collection_methods
    method: GET
    data_selector: damage_deposit_collection_methods
notes:
- Every request to the API must use HTTPS.
- Rate limit is 1000 requests per hour.
- Requires setup of API scopes for booking creation.
- Tokens (access_token) are only valid for 2 hours, you then need to request a new
  one.
- Live Quote is recommended for synchronous flow.
- LOS records are recommended for asynchronous flow.
- Synchronize data often enough and persist the objects on your side if you perform
  a lot of queries.
- Fetch all the objects only during the initial synchronization.
- Webhook delivery might fail for various reasons, it is still recommended to periodically
  synchronize data.
- Webhook subscriptions allow for event-driven data synchronization instead of periodic
  fetching.
- Strongly recommended to use write owned scopes by default.
- You will need to demonstrate PCI DSS compliance by providing us an appropriate Attestation
  of Compliance.
- Each application defines certain scopes that allow you to access API.
- You can use the same OAuth scope to access both API v3 and APIs of the applications.
- To take advantage of this feature, you need to fetch all the records from BookingSync
  API and persist them locally along with the timestamp of the synchronization time.
- Using x-updated-since-request-synced-at response header will help avoid missing
  updates due to time differences.
- The request has valid origin only if the value of X-Content-Signature header is
  the same as the one computed in your application.
- It is strongly recommended to use write owned scopes by default.
- The LOS Records API requires proper authentication and permissions.
- Check-in and check-out rules significantly affect pricing.
- Users can opt out from midterm pricing.
- Midterm pricing is calculated differently than short-term pricing.
- Only the Client Credentials Flow currently allow you to retrieve multiple accounts
  at once.
- Only the Client Credentials Flow currently allows you to retrieve multiple accounts
  at once. Using another authorization flow, this endpoint will only return a single
  authorized account.
- 'OAuth Scopes: applications_read / applications_write'
- Avails are regenerated after creation of Bookings and at the beginning of each month.
- Availabilities are regenerated after creation of Bookings and at the beginning of
  each month.
- The resource doesn't cover all cases why a given day might be unavailable.
- This resource is mostly static information used for presentational purposes.
- Each Booking can have multiple comments and can be used for putting some extra notes
  about the Booking.
- Requires OAuth scopes for reading and writing bookings.
- Discount Codes can be applied to rentals.
- Minimum requirements are needed to apply Discount Codes.
- Returns only future and non-canceled bookings by default
- 'OAuth Scopes: public, bookings_write_owned, bookings_read, bookings_write'
- Booking listing will be limited to a certain range based on OAuth token scopes
- 'OAuth Scopes: bookings_read, bookings_write'
- ChangeOvers are regenerated after creation of Bookings, change in Rates Rules and
  at the beginning of each month.
- 'OAuth Scopes: clients_write'
- Requires setup of connected app in api
- Updating grouped attributes requires the full array to be re-sent.
- 'OAuth Scopes: public, rentals_write'
- 'Required OAuth scope: :rentals_write'
- Returns empty response with 204 No Content status code on success.
- OAuth Scopes required for all operations include rates_write.
- 'OAuth Scopes: public'
- A Booking can have only one Host Review and it must share the same source as the
  Booking.
- Fees that were archived are no longer considered valid, but will be present on `index`
  and `show` actions.
- 'OAuth Scopes: reviews_write'
- 'OAuth Scopes: public, rates_write'
- Refer to GDPR guide for processing restrictions
- Each Host Review can have at most one Review Reply.
- OAuth Scopes required for operations include inbox_read and inbox_write.
- 'OAuth Scopes: inbox_read, inbox_write'
- 'OAuth Scopes: inbox_write'
- 'OAuth Scopes: inbox_read / inbox_write'
- Inquiry's client email is required and must be of email format.
- Inquiry's client firstname and lastname are required with maximum lengths.
- 'OAuth Scopes: inquiries_write / inquiries_write_owned'
- 'OAuth Scopes: rates_read, rates_write'
- Rental attribute mid_term_pricing_active must be set to true, before you can write
  to this endpoint.
- This endpoint supports partial updates, meaning you can push only subset that changes
  with corresponding start_date.
- Managing Nightly Rate Maps requires external rates management on the Rental level
  (by setting nightly_rates_managed_externally to true).
- For rentals with internal rates management (nightly_rates_managed_externally is
  false) Nightly Rate Maps are regenerated everyday at 00:00 UTC.
- 'OAuth Scopes: rates_read/rates_write'
- Rental attribute mid_term_pricing_active must be set to true before writing to this
  endpoint.
- Only 1096 nights of data can be sent when start_date is yesterday UTC.
- Rental attribute nightly_rates_managed_externally must be set to true, before you
  can write to this endpoint.
- Payments can be either recorded manually or automated.
- 'OAuth Scopes: payments_write_owned / payments_read / payments_write'
- Partial update is supported, meaning you can push only subset that changes with
  corresponding start_date.
- Only 1096 nights of data can be sent when the start_date is yesterday UTC. Therefore
  if sending start_date as today UTC, you can only set 1095 nights.
- Payments can be recorded manually or automated.
- Payments drive the lifecycle of Bookings.
- Rates are generated based on the price-related resources.
- OAuth scopes are required for all operations.
- OAuth scopes required for accessing rates rules.
- Rates Tables cannot be updated or swapped to a different one if they have private
  status (`shared` as `false`).
- Corresponding rental has external rates management configured (`nightly_rates_managed_externally`
  as `true`).
- Rates are generated based on the price-related resources for Rentals.
- 'Use only one of these: `season_ids`, `always_applied` (if the value is `true`)
  or `start_date`/`end_date`'
- Rates Tables cannot be updated or swapped to a different one if they have private
  status (`shared` as `false`)
- corresponding rental has external rates management configured (`nightly_rates_managed_externally`
  as `true`)
- 'OAuth Scopes: public, rentals_read, rentals_write'
- Required OAuth scope for creating and canceling is rentals_write.
- The purpose of the Rental Links is to mirror the availabilities between two Rentals.
- 'Cancellation Policy: In case of cancelation the downpayment paid upon booking is
  non-refundable.'
- This resource represents Rentals which are the actual properties that are the subject
  of most actions in the BookingSync ecosystem.
- 'OAuth Scopes: public, rentals_read / rentals_write'
- Creating or deleting a Rental Link Group results in creating or deleting Rental
  Links.
- Creating rentals will increase the account monthly fee.
- Destroying rentals will decrease the account monthly fee.
- 'Requires OAuth Scopes: public, rentals_write'
- Right now, 3 amenities are marked as obsolete and are replaced with Rental#checkin_type
  attribute.
- An Application needs to be configured in a way that content overrides are permitted.
- Private comments.
- 'OAuth Scopes required: public, rates_write'
- A Booking can have multiple Reviews – but no more than one per source.
- Translated attributes are updated differently than you read them.
- 'OAuth Scopes: bookings_read, bookings_write, bookings_write_owned'
- Special Offers represent Rental's price modifiers.
- A review reply can belong exclusively to either a guest review OR a host review,
  but not both.
- Each Review can have at most one Review Reply.
- 'OAuth Scopes: public, reviews_write'
- Uses OAuth2 with authorization code flow.
- Tokens (access_token) are only valid for 2 hours, you then need to use the Refresh
  Token to regenerate and new set of Tokens or restart the flow you just used.
- A refresh token is valid as long as it's used (or your application is uninstalled),
  therefore you can also request a new set of tokens after expiration of your access_token.
- 'Requires OAuth scopes: bookings_read, bookings_write, bookings_write_owned'
- Special Offer's discount must be between 1 and 100.
- 'OAuth Scopes: public, rates_read, rates_write'
- Uses OAuth2 with authorization code flow — requires setup of application in Smily
- Requests using a token obtained using the Client Credentials flow are limited to
  using only the public scope
errors:
- '429 Too Many Requests: API v3 rate limit exceeded.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '403: Feature not available - insufficient account subscription plan'
- '404 Not Found: The specified discount code does not exist.'
- '204 No Content: Successful deletion'
- '404 Not Found: Discount Code not found'
- '204 No Content: Successful deletion of archived fees'
- '400 Bad Request: Ensure all required fields are present and correctly formatted.'
- '401 Unauthorized: Check OAuth token and permissions.'
- '204 No Content: Success on destroy living_room'
- '401 Unauthorized: Requires valid OAuth token.'
- '204 No Content: Successful deletion of a rental link group.'
- '401 Unauthorized: When the token used to authorize the request is invalid, expired
  or revoked.'
- '403 Forbidden: When the token is valid, but doesn''t have the scopes necessary
  to perform requested action.'
- '401 Unauthorized: API calls made with expired access_token will return this status
  code.'
- '422: Attempt to associate any record with an internal source will result in an
  error'
- '403 Forbidden: Token valid but lacks necessary scopes'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuth Scopes
  - applications_read
  - applications_write
  - bookings_read
  - bookings_write
  - bookings_write_owned
  - discount_code_read
  - discount_code_write
  - discount_code_usage_read
  - public
  - payments_read
  - payments_write
  - :rentals_write
  - inbox_read
  - inbox_write
  - inquiries_read
  - inquiries_write
  - inquiries_write_owned
  - rates_read
  - rates_write
  - preferences_payments_read
  - preferences_payments_write
  - payments_write_owned
  - 'OAuth Scopes: rates_read'
  - 'OAuth Scopes: rates_write'
  - rentals_write
  - rentals_read
  - reviews_write
  - Oauth Scopes
  - OauthScopes
client:
  base_url: https://www.bookingsync.com/api/v3/
  headers:
    Authorization: Bearer YOUR_ACCESS_TOKEN
    Content-Type: application/vnd.api+json
  paginator:
    type: page
    page_size_param: per_page
source_metadata: null
