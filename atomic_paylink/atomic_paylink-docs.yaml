resources:
- name: account
  endpoint:
    path: /pay-link/accounts/:id
    method: GET
- name: accounts
  endpoint:
    path: /pay-link/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: company
  endpoint:
    path: /company/search
    method: POST
    data_selector: data
    params: {}
- name: detect_accounts
  endpoint:
    path: /pay-link/accounts?accountId
    method: POST
    data_selector: accounts
- name: delete_accounts
  endpoint:
    path: /pay-link/accounts/
    method: DELETE
    data_selector: result
- name: delete_account
  endpoint:
    path: /pay-link/accounts/:id
    method: DELETE
    data_selector: result
- name: action_history
  endpoint:
    path: /pay-link/actions
    method: GET
    data_selector: actions
- name: action_history
  endpoint:
    path: /pay-link/action-history
    method: GET
    data_selector: data
    params:
      accountId: stringOptional
- name: financial_transactions_find_company
  endpoint:
    path: /pay-link/financial-transactions/find-company
    method: POST
    data_selector: data.financialTransactions
    params: {}
- name: suggestion_review
  endpoint:
    path: /pay-link/suggestion-review
    method: POST
    data_selector: data
    params: {}
- name: task_details
  endpoint:
    path: /task/:taskId/details
    method: GET
    data_selector: data.task
    params:
      taskId: string
- name: task_status
  endpoint:
    path: /task/:taskId/status
    method: GET
    data_selector: data
    params:
      taskId: string
- name: update_user
  endpoint:
    path: /user
    method: PUT
    data_selector: success
    params: {}
- name: subscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: data
- name: bills
  endpoint:
    path: /api/v1/bills
    method: GET
    data_selector: data
- name: access-token
  endpoint:
    path: /access-token
    method: POST
- name: access_token
  endpoint:
    path: /access-token
    method: POST
    data_selector: data
    params: {}
- name: user
  endpoint:
    path: /user
    method: PUT
- name: transact
  endpoint:
    path: /transact
    method: POST
    data_selector: response
    params: {}
- name: initialize
  endpoint:
    path: /initialize
    method: POST
    data_selector: data
- name: taxes
  endpoint:
    path: /taxes
    method: GET
    data_selector: taxes
    params: {}
- name: taxes
  endpoint:
    path: /taxes
    method: GET
    data_selector: taxes
    params: {}
- name: income
  endpoint:
    path: /reference/employment-data#income
    method: GET
    data_selector: records
- name: statements
  endpoint:
    path: /reference/employment-data#statements
    method: GET
    data_selector: records
- name: deposit_accounts
  endpoint:
    path: /reference/employment-data#deposit-accounts
    method: GET
    data_selector: records
- name: employment
  endpoint:
    path: /reference/employment-data#employment
    method: GET
    data_selector: records
- name: identity
  endpoint:
    data_selector: records
- name: timesheets
  endpoint:
    data_selector: records
- name: income
  endpoint:
    path: /income/:identifier
    method: GET
    data_selector: data
- name: statements
  endpoint:
    path: /statements/:identifier
    method: GET
    data_selector: data
- name: timesheets
  endpoint:
    path: /timesheets/:identifier
    method: GET
    data_selector: data
- name: taxes
  endpoint:
    path: /taxes/:identifier
    method: GET
    data_selector: data
- name: task_details
  endpoint:
    path: /task/:taskId/details
    method: GET
- name: task_status
  endpoint:
    path: /task/:taskId/status
    method: GET
- name: generate_file_url
  endpoint:
    path: /task/:taskId/file/:fileId/generate-url
    method: GET
- name: prescreen
  endpoint:
    path: /task/prescreen
    method: POST
- name: deposit_accounts
  endpoint:
    path: /deposit-accounts/:identifier
    method: GET
- name: employment
  endpoint:
    path: /employment/:identifier
    method: GET
- name: identity
  endpoint:
    path: /identity/:identifier
    method: GET
- name: list_linked_accounts
  endpoint:
    path: /linked-account/list/:identifier
    method: GET
- name: use_linked_account
  endpoint:
    path: /task-workflow/from-linked-account
    method: POST
- name: end_monitoring
  endpoint:
    path: /user/:identifier/end-monitoring
    method: PUT
- name: get_tasks
  endpoint:
    path: /user/:identifier/tasks
    method: GET
- name: update_user
  endpoint:
    path: /user
    method: PUT
- name: create_webhook_endpoint
  endpoint:
    path: /webhooks/endpoints
    method: POST
- name: get_webhook_endpoints
  endpoint:
    path: /webhooks/endpoints
    method: GET
- name: update_webhook_endpoint
  endpoint:
    path: /webhooks/endpoints/:_id
    method: PUT
- name: delete_webhook_endpoint
  endpoint:
    path: /webhooks/endpoints/:_id
    method: DELETE
- name: create_api_secret
  endpoint:
    path: /secrets
    method: POST
- name: get_api_secrets
  endpoint:
    path: /secrets
    method: GET
    data_selector: data.secrets
    params: {}
- name: delete_api_secret
  endpoint:
    path: /secrets/:_id
    method: DELETE
    data_selector: ''
    params: {}
- name: linked_accounts
  endpoint:
    path: /linked-accounts
    method: GET
- name: income
  endpoint:
    path: /income
    method: GET
- name: statements
  endpoint:
    path: /statements
    method: GET
- name: deposit_accounts
  endpoint:
    path: /deposit-accounts
    method: GET
- name: employment
  endpoint:
    path: /employment
    method: GET
- name: taxes
  endpoint:
    path: /taxes
    method: GET
- name: identity
  endpoint:
    path: /identity
    method: GET
- name: timesheets
  endpoint:
    path: /timesheets
    method: GET
- name: deposit_switch_removed
  endpoint:
    path: /webhooks/deposit-switch-removed
    method: POST
    data_selector: data
    params: {}
- name: deposit_accounts_synced
  endpoint:
    path: /webhooks/deposit-accounts-synced
    method: POST
    data_selector: data
    params: {}
- name: deposit_accounts_added
  endpoint:
    path: /webhooks/deposit-accounts-added
    method: POST
    data_selector: data
    params: {}
- name: deposit_accounts_updated
  endpoint:
    path: /webhooks/deposit-accounts-updated
    method: POST
    data_selector: data
    params: {}
- name: task-status-updated
  endpoint:
    path: /webhooks/task-status-updated
    method: POST
    data_selector: task
    params: {}
- name: task-authentication-status-updated
  endpoint:
    path: /webhooks/task-authentication-status-updated
    method: POST
    data_selector: task
    params: {}
- name: identity
  endpoint:
    path: /identity
    method: GET
    data_selector: identity
    params: {}
- name: employment
  endpoint:
    path: /employment
    method: GET
    data_selector: employment
    params: {}
- name: linked_account
  endpoint:
    path: /linked_account
    method: GET
    data_selector: linkedAccount
    params: {}
- name: taxes
  endpoint:
    path: /services/data/vXX.X/taxes
    method: GET
    data_selector: taxes
    params: {}
- name: taxes-added
  endpoint:
    path: /taxes-added
    method: POST
    data_selector: data.taxes
    params: {}
- name: identity-updated
  endpoint:
    path: /identity-updated
    method: POST
    data_selector: data.identity
    params: {}
- name: income-synced
  endpoint:
    path: /income-synced
    method: POST
    data_selector: data.income
    params: {}
- name: income-updated
  endpoint:
    path: /income-updated
    method: POST
    data_selector: data.income
    params: {}
- name: statements-synced
  endpoint:
    path: /statements-synced
    method: POST
    data_selector: data.statements
    params: {}
- name: taxes-added
  endpoint:
    path: /webhooks/taxes-added
    method: POST
    data_selector: data.taxes
    params: {}
- name: conversion-opportunity
  endpoint:
    path: /webhooks/conversion-opportunity
    method: POST
    data_selector: data
    params: {}
- name: continuous-access-task-failed
  endpoint:
    path: /webhooks/continuous-access-task-failed
    method: POST
    data_selector: data
    params: {}
- name: plugin
  endpoint:
    path: /plugins/banno
    method: POST
    data_selector: plugin_data
- name: access_token
  endpoint:
    path: /access-token
    method: POST
    data_selector: data
    params: {}
- name: update_user
  endpoint:
    path: /user
    method: PUT
    data_selector: data
    params: {}
- name: access_token
  endpoint:
    path: /access-token
    method: POST
    data_selector: data.publicToken
    params: {}
- name: accounts
  endpoint:
    path: /pay-link/accounts
    method: GET
- name: accounts
  endpoint:
    path: /pay-link/accounts
    method: GET
    data_selector: Actions
- name: user
  endpoint:
    path: /user
    method: PUT
- name: company
  endpoint:
    path: /paylink/reference/api#company
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /paylink/reference/api#accounts
    method: GET
    data_selector: records
- name: plan
  endpoint:
    path: /paylink/reference/api#accounts__paylink-account-details--response
    method: GET
    data_selector: records
- name: task
  endpoint:
    path: /paylink/reference/api#task__get-task-details
    method: GET
    data_selector: records
- name: Transact
  endpoint:
    path: /paylink/reference/transact-sdk
    method: POST
- name: Transact
  endpoint:
    path: /paylink/reference/transact-sdk
    method: GET
- name: interaction_events
  endpoint:
    path: /paylink/reference/transact-sdk#event-listeners__interaction-events
    method: GET
    data_selector: events
    params: {}
- name: accounts
  endpoint:
    path: /paylink/reference/api#accounts
    method: GET
    data_selector: data.accounts
    params: {}
- name: task-status-updated
  endpoint:
    path: /webhooks/task-status-updated
    method: POST
    data_selector: event
    params: {}
- name: task-authentication-status-updated
  endpoint:
    path: /webhooks/task-authentication-status-updated
    method: POST
    data_selector: event
    params: {}
- name: task-status-patched
  endpoint:
    path: /webhooks/task-status-patched
    method: POST
    data_selector: event
    params: {}
notes:
- This API is intended to be called from your backend service so your API Keys and
  Secrets are not deployed to your client side application.
- API Keys and Secrets should not be deployed to client side applications
- Atomic uses client-side field level encryption with KMS keys to encrypt sensitive
  data such as account details in our system.
- Some payroll systems require employer-level opt-in, which may result in varying
  levels of coverage depending on the specific implementation of the payroll provider.
- Requires setup of connected app in API
- Some configuration parameters must be provided for the SDK to function correctly
- Uses OAuth2 for authentication.
- The outputMetadata object will serve to replace and enhance the derivedOutputMetadata
  object, which is now deprecated and will be fully sunset in the future.
- API is intended to be called from your backend service so your API Keys and Secrets
  are not deployed to your client side application.
- Occasionally, an account’s connection may be interrupted due to timeout restrictions,
  changes to credentials, or system updates.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Webhook delivery attempts are retried up to three times in case of failure, with
  30-second intervals between attempts.
- Requires Continuous Access to maintain persistent connection with payroll provider.
- The Tax webhooks require our Tax use case be part of your contract.
- You will need to select the data fields you are interested in for your use case
  on the Features section of the Settings page in Console.
- Webhook events require Verify and Continuous Access to be enabled.
- Atomic uses client-side field level encryption with KMS keys to encrypt sensitive
  data.
- You can retrieve your API credentials for the relevant environment from the Atomic
  Console.
- Atomic's bill management solution is designed to seamlessly integrate into your
  existing application.
- Create compelling reasons for users to link their accounts by highlighting immediate
  value and long-term benefits.
- Transact requires a configuration object when initialized in a live application.
- The publicToken is necessary for setting up your client-side code.
- The Transact SDK includes views for a user to self-service account selection.
- A product of `present` must be provided in order to launch the SDK within the Manage
  context.
- Data is collected through a consumer-permissioned connection to a company.
- Webhook notifications will indicate when data is ready.
- Authentication is handled via the API Key and Secret method
- Sensitive card data (PAN and CVV/CVC) never leaves the user's device and is transmitted
  directly to third-party systems.
- Actions may vary by company and account.
- Automated actions are subject to authentication sessions.
- The Atomic Transact SDK is a UI designed to securely handle interactions with our
  products while performing the heavy-lifting of integration.
- Metadata is not used by Atomic and won't be seen by your users.
- Do not store any sensitive information (bank account numbers, card details, etc.)
  as metadata.
errors:
- '400: Bad Request'
- '401: Unauthorized'
- '404: Not Found'
- '422: Validation Error'
- '429: Too Many Requests'
- '50X: Internal Server Error'
- 'test-validation-failure: Test a user whose data does not pass data validation.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'test-system-unavailable: Test the user experience during a third-party system outage.'
- 'test-unknown-failure: Test the user experience when there is an unexpected error.'
- 'test-session-timeout: Test the user experience when the auth session has timed
  out.'
- 'test-connection-error: Test the user experience when there is a connection error
  caused by a network failure.'
- 'test-high-latency: Test the flow which occurs when there is high latency communicating
  with backend systems.'
- 'test-post-auth-delay: Test the flow when there is a post-auth delay happening.
  This may occur due to an unanticipated change in the third-party system.'
- 'test-failure: Test a failure that occurs after a successful authentication.'
- 'test-distribution-not-supported: Test a user who enters an unsupported deposit
  amount.'
- 'test-routing-number-not-supported: Test a user whose payroll system rejects the
  routing number of the target deposit account.'
- 'test-product-not-supported: Test a user whose payroll system does not allow the
  operation.'
- 'test-bad: Test an unsuccessful authentication.'
- 'test-lockout: Test a user who has been locked out of their account.'
- 'test-account-unusable: Test a user whose payroll account rejects the target deposit
  account.'
- 'test-enrolled-in-paycard: Test a user enrolled in a paycard, which prevents payment
  via direct deposit.'
- 'test-expired: Test a user whose payroll password has expired.'
- 'test-transaction-pending: Test a user who already has a direct deposit change in
  progress.'
- 'test-account-setup-incomplete: Test a user who has not fully onboarded to their
  employee payroll system.'
- 'test-work-status-terminated: Test a user who is not an active employee in the payroll
  system.'
- '400: Bad Request - The request was unacceptable.'
- '401: Unauthorized - Missing or invalid credentials.'
- '404: Not Found - The resource does not exist.'
- '422: Validation Error - A validation error occurred.'
- '429: Too Many Requests - Too many requests, please try again later.'
- '50X: Internal Server Error - An error occurred with our API.'
- '400: If a secret is currently assigned to a webhook endpoint, this endpoint will
  throw an error.'
- 'linked-account-disconnected: An account’s connection may be interrupted.'
- 'bad-credentials: Either the username or password was incorrect. This is our most
  common fail reason.'
- 'account-lockout: The account is locked out, most likely the end user has had too
  many failed attempts.'
- 'account-setup-incomplete: The user''s account in the payroll system is not fully
  set up and will require additional information from the user.'
- '401 Unauthorized: Check your authentication token.'
- '400 Bad Request: Verify your request payload.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Reauthenticate user if session has expired.'
- 'User issue: Test a user who doesn''t have an active subscription with the service
  provider.'
- 'Service provider issue: Test a user whose chosen payment method isn''t supported
  by the service provider.'
- 'subscription-inactive: The subscription selected is currently inactive.'
- 'payment-method-locked: The payment method selected is currently locked in the service
  provider''s system.'
auth_info:
  mentioned_objects:
  - AccessToken
  - LinkedAccount
  - Identity
  - Employment
client:
  base_url: https://sandbox-api.atomicfi.com
  auth:
    type: apikey
  headers:
    x-api-key: API Key for your Atomic account
    x-api-secret: API Secret for your Atomic account
    user-identifier: The identifier of the user
source_metadata: null
