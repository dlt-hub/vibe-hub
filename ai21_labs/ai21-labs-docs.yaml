resources:
- name: jamba-large
  endpoint:
    path: /jamba-large
    method: GET
- name: jamba-mini
  endpoint:
    path: /jamba-mini
    method: GET
- name: Jamba Large
  endpoint:
    path: /jamba/large
    method: GET
- name: Jamba Mini
  endpoint:
    path: /jamba/mini
    method: GET
- name: convert_currency
  endpoint:
    path: /v4/latest/{from_currency}
    method: GET
    data_selector: rates
- name: chat_completions
  endpoint:
    path: /v1/chat/completions
    method: POST
    data_selector: messages
- name: upload_workspace_documents
  endpoint:
    path: /workspaces/{workspace_id}/documents
    method: POST
- name: list_library_files
  endpoint:
    path: /workspaces/{workspace_id}/documents
    method: GET
- name: update_file
  endpoint:
    path: /workspaces/{workspace_id}/documents/{document_id}
    method: PUT
- name: delete_file
  endpoint:
    path: /workspaces/{workspace_id}/documents/{document_id}
    method: DELETE
- name: File Storage
  endpoint:
    path: /v2/file-storage
    method: GET
    data_selector: files
    params: {}
- name: Browse Website
  endpoint:
    path: /v2/browse-website
    method: POST
    data_selector: results
    params: {}
- name: File Storage
  endpoint:
    path: /integrations
    method: GET
- name: Browse Website
  endpoint:
    path: /integrations
    method: GET
- name: chat_request
  endpoint:
    path: /studio/v1/chat/completions
    method: POST
    data_selector: data
- name: chat_completion
  endpoint:
    path: /chat/completions
    method: POST
    data_selector: response
    params: {}
- name: cloud_based_services
  endpoint:
    path: /cloud-based-services
    method: GET
    data_selector: services
- name: foundation_models
  endpoint:
    path: /foundation-models
    method: GET
    data_selector: models
- name: create_run
  endpoint:
    path: /v1/maestro/runs
    method: POST
    data_selector: result
    params: {}
- name: Jamba Large
  endpoint:
    method: GET
    params:
      RPS: 10
      RPM: 200
- name: Jamba Mini
  endpoint:
    method: GET
    params:
      RPS: 10
      RPM: 200
- name: retrieve_run_status
  endpoint:
    path: /maestro/runs/{run_id}
    method: GET
    data_selector: run
    params: {}
- name: create_run
  endpoint:
    path: /maestro/runs
    method: POST
    data_selector: result
    params: {}
- name: run
  endpoint:
    path: /reference/run-object
    method: GET
    data_selector: result
    params: {}
- name: retrieve_run_status
  endpoint:
    path: /maestro/runs/{run_id}
    method: GET
    data_selector: run
    params: {}
- name: run
  endpoint:
    path: /run
    method: POST
    data_selector: result
    params: {}
- name: list_library_files
  endpoint:
    path: /manage-library-ref/list-library-files
    method: GET
- name: get_workspace_files
  endpoint:
    path: /manage-library-ref/get-workspace-files
    method: GET
- name: get_file_download_link
  endpoint:
    path: /manage-library-ref/get-file-download-link
    method: GET
- name: upload_workspace_files
  endpoint:
    path: /manage-library-ref/upload-workspace-files
    method: POST
- name: update_file
  endpoint:
    path: /manage-library-ref/update-file
    method: PUT
- name: delete_file
  endpoint:
    path: /manage-library-ref/delete-file
    method: DEL
- name: Upload Workspace Files
  endpoint:
    path: /reference/manage-library-ref/upload-workspace-files
    method: POST
- name: List Library Files
  endpoint:
    path: /reference/manage-library-ref/list-library-files
    method: GET
- name: Get Workspace Files
  endpoint:
    path: /reference/manage-library-ref/get-workspace-files
    method: GET
- name: Get File Download Link
  endpoint:
    path: /reference/manage-library-ref/get-file-download-link
    method: GET
- name: Update File
  endpoint:
    path: /reference/manage-library-ref/update-file
    method: PUT
- name: Delete File
  endpoint:
    path: /reference/manage-library-ref/delete-file
    method: DEL
- name: upload_workspace_files
  endpoint:
    path: /library/files
    method: POST
    data_selector: id
- name: list_library_files
  endpoint:
    path: /library/files
    method: GET
    data_selector: files
- name: get_workspace_files
  endpoint:
    path: /library/files/{file_id}
    method: GET
    data_selector: file
- name: get_file_download_link
  endpoint:
    path: /library/files/{file_id}/download
    method: GET
    data_selector: download_link
- name: update_file
  endpoint:
    path: /library/files/{file_id}
    method: PUT
    data_selector: updated_file
- name: delete_file
  endpoint:
    path: /library/files/{file_id}
    method: DEL
    data_selector: deleted_file
- name: library_files
  endpoint:
    path: /library/files
    method: GET
    data_selector: files
    params: {}
- name: upload_workspace_files
  endpoint:
    path: /
    method: POST
    data_selector: id
- name: list_library_files
  endpoint:
    path: /list
    method: GET
    data_selector: files
- name: get_workspace_files
  endpoint:
    path: /get
    method: GET
    data_selector: file
- name: get_file_download_link
  endpoint:
    path: /get-file-download-link
    method: GET
    data_selector: downloadLink
- name: update_file
  endpoint:
    path: /update
    method: PUT
    data_selector: updatedFile
- name: delete_file
  endpoint:
    path: /delete
    method: DEL
    data_selector: deletedFile
- name: get_workspace_files
  endpoint:
    path: /library/files/{file_id}
    method: GET
    data_selector: file_metadata
- name: library_files
  endpoint:
    path: /library/files
    method: GET
    data_selector: file_metadata
    params: {}
- name: file_download_link
  endpoint:
    path: /library/files/{file_id}/download
    method: GET
- name: get_workspace_files
  endpoint:
    path: /library/files/{file_id}
    method: GET
    data_selector: file_metadata
    params: {}
- name: update_file
  endpoint:
    path: /library/files/{file_id}
    method: PUT
- name: delete_file
  endpoint:
    path: /library/files/{file_id}
    method: DELETE
    data_selector: null
    params: {}
- name: file_download
  endpoint:
    path: /library/files/{file_id}/download
    method: GET
    data_selector: file_metadata
- name: update_file
  endpoint:
    path: /studio/v1/library/files/{file_id}
    method: PUT
- name: delete_file
  endpoint:
    path: /library/files/{file_id}
    method: DELETE
notes:
- 'Option 1: Pass the API key directly'
- 'Option 2: Use an environment variable'
- Models can be privately deployed in a VPC or on-premises.
- LLMs have been known to invent citations, so asking Jamba Instruct for citations
  for its information is not a guarantee of accuracy.
- If you need completely consistent answers, set the temperature to 0.
- Start with a low temperature (0.2-0.3) and increase by tenths until you get the
  variability that you want.
- The API supports a max_tokens parameter, but use it only as a failsafe.
- Output variability is influenced by temperature and top P.
- The API supports a max_tokens parameter to limit output length.
- Using exchangerate-api.com (free tier available)
- AI21’s Batch API is currently available for enterprise use through our SaaS offering.
- Recommended vLLM version between v0.6.5 and v0.8.5.post1 for optimal performance
  and compatibility.
- Ensure you’re using the recommended vLLM version v0.6.5 to v0.8.5.post1.
- Supports PDF, DOCX, TXT, HTML, and Markdown formats
- Upload limit is 50 files, each up to 100MB, with a total limit of 1GB
- Only the first 100 links in the sitemap will be indexed.
- Advanced features are available to Enterprise plan users.
- Full fine-tuning requires multiple high-memory GPUs.
- LoRA fine-tuning injects compact, low-rank adapter layers into a frozen pretrained
  model.
- Pre-quantized FP8 models require no additional quantization parameters since the
  weights are already quantized.
- Requires access to the relevant model’s HuggingFace repository
- To use our API you must have an API key, which is available once you sign in.
- To maintain model quality, we recommend excluding Mamba blocks from quantization
  using `llm_int8_skip_modules=["mamba"]`.
- New accounts are given a $10 credit good for three months on the AI21 platform.
- Usage is charged monthly from account creation date.
- Async tokenizer available for high-performance applications.
- AI21 Studio must not be used for illegal activities, harassment, misinformation,
  or incitement of violence.
- Content generated must not be posted automatically without human intervention to
  public platforms with an audience greater than 100 people.
- The first human to view AI21 generated text must not believe it was written by a
  human.
- Applications with more than 100 users per month must provide a method for reporting
  harmful content.
- Prompt text must contain at least 60 characters not written by users.
- AI21 Labs is on a mission to make reading and writing AI-first experiences.
- Uses API key for authentication.
- All API requests must include an Authorization header with a Bearer token for authentication.
- Maximum allowed value for max_tokens is 4096.
- Rate limits restrict the number of requests that can be made within a specific time
  frame.
- AI21 Maestro is currently in beta and available exclusively to early access users.
- Rate limits are commonly measured by RPM (requests per minute) or RPS (requests
  per second).
- These fields are not included by default and will only appear in the response if
  you explicitly request them using the include parameter.
- Fields requirements_result and data_sources are not included by default and will
  only appear if explicitly requested.
- Every uploaded file must have a unique file name.
- Labels are case-sensitive.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Invalid temperature: Ensure temperature is between 0 and 1.'
- 'Invalid top P: Ensure top P is between 0 and 1.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Recheck API key or authentication method.'
- 500 - Internal Server Error
- 429 - Too Many Requests (You are sending requests too quickly.)
- 503 - Service Unavailable (The engine is currently overloaded, please try again
  later)
- 401 - Unauthorized (Incorrect API key provided/Invalid Authentication)
- 403 - Access Denied
- 422 - Unprocurable Entity (Request body is malformed)
- '422 Unsupported document type: Invalid file type. Supported file types are: text/plain,
  text/html, application/docx, application/pdf'
- '422 Unsupported document type: Invalid file type.'
- '200: A unique identifier for the uploaded file.'
- 422 No matching ID is found
- '422: No matching ID is found'
- '422: Document ID does not exist'
- '422: File by this ID does not exist.'
- 422 No matching ID is found.
auth_info:
  mentioned_objects: []
client:
  base_url: https://studio.ai21.com/v2
  auth:
    type: apikey
source_metadata: null
