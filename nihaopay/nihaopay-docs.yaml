resources:
- name: transactions
  endpoint:
    path: /v1.2/transactions
    method: POST
- name: scanqrcode
  endpoint:
    path: /v1.2/transactions/scanqrcode
    method: POST
- name: withdrawal_history
  endpoint:
    path: /v1.2/withdrawal/history
    method: GET
    data_selector: CSV
- name: withdrawal_detail
  endpoint:
    path: /v1.2/withdrawal/detail/{withdrawal_id}
    method: GET
    data_selector: CSV
- name: sharing_apply
  endpoint:
    path: /v1.2/sharing/apply
    method: POST
    data_selector: sharingStatus
    params: {}
- name: sharing_query
  endpoint:
    path: /v1.2/sharing/query
    method: POST
    data_selector: sharingConfItems
    params: {}
- name: sharing_detail
  endpoint:
    path: /v1.2/sharing/detail
    method: POST
    data_selector: relationTxnId
    params: {}
- name: sharing_cancel
  endpoint:
    path: /v1.2/sharing/cancel
    method: POST
    data_selector: confId
    params: {}
- name: transactions_merchant
  endpoint:
    path: /v1.2/transactions/merchant/{reference}
    method: GET
    data_selector: accounts
    params: {}
- name: transactions_refund
  endpoint:
    path: /v1.2/transactions/refund/{transaction_id}
    method: POST
    data_selector: refundResult
    params: {}
- name: accounts
  endpoint:
    path: /v1.2/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: securepay
  endpoint:
    path: /transactions/securepay
    method: POST
    data_selector: records
- name: qrcode
  endpoint:
    path: /transactions/qrcode
    method: POST
    data_selector: records
- name: apppay
  endpoint:
    path: /transactions/apppay
    method: POST
    data_selector: records
- name: aplus
  endpoint:
    path: /transactions/aplus
    method: POST
    data_selector: records
- name: micropay
  endpoint:
    path: /transactions/micropay
    method: POST
    data_selector: records
- name: scanqrcode
  endpoint:
    path: /transactions/scanqrcode
    method: POST
    data_selector: records
- name: showqrcode
  endpoint:
    path: /transactions/showqrcode
    method: POST
    data_selector: records
- name: merchantqrcode
  endpoint:
    path: /merchantqrcode
    method: POST
    data_selector: records
- name: staticqrcode
  endpoint:
    path: /transactions/staticqrcode
    method: POST
    data_selector: records
- name: customs_declaration
  endpoint:
    path: /customs/declaration/{transaction_id}
    method: POST
    data_selector: records
- name: customs_query
  endpoint:
    path: /customs/{request_no}
    method: GET
    data_selector: records
- name: customs_redeclaration
  endpoint:
    path: /customs/redeclaration/{request_no}
    method: POST
    data_selector: records
- name: transactions_securepay
  endpoint:
    path: /v1.2/transactions/securepay
    method: POST
    data_selector: null
    params: {}
- name: scanqrcode
  endpoint:
    path: /v1.2/transactions/scanqrcode
    method: POST
    data_selector: amount
    params: {}
- name: showqrcode
  endpoint:
    path: /v1.2/transactions/showqrcode
    method: POST
    data_selector: code_url
    params: {}
- name: merchantqrcode
  endpoint:
    path: /v1.2/merchantqrcode
    method: POST
    data_selector: qrcode
    params: {}
- name: staticqrcode
  endpoint:
    path: /v1.2/transactions/staticqrcode
    method: POST
    data_selector: redirect_url
    params: {}
- name: customs_declaration
  endpoint:
    path: /v1.2/customs/declaration/{transaction_id}
    method: POST
    data_selector: request_no
    params: {}
- name: transactions_qrcode
  endpoint:
    path: /v1.2/transactions/qrcode
    method: POST
    data_selector: id
    params: {}
- name: transactions_apppay
  endpoint:
    path: /v1.2/transactions/apppay
    method: POST
    data_selector: orderInfo
    params: {}
- name: transactions_aplus
  endpoint:
    path: /v1.2/transactions/aplus
    method: POST
    data_selector: redirectUrl
    params: {}
- name: transactions_micropay
  endpoint:
    path: /v1.2/transactions/micropay
    method: POST
    data_selector: id
    params: {}
- name: customs_query
  endpoint:
    path: /v1.2/customs/{request_no}
    method: GET
    data_selector: records
    params: {}
- name: customs_redeclaration
  endpoint:
    path: /v1.2/customs/redeclaration/{request_no}
    method: POST
    data_selector: records
    params: {}
- name: contract_sign
  endpoint:
    path: /v1.2/contract/sign
    method: POST
    data_selector: records
    params: {}
- name: contract_terminate
  endpoint:
    path: /v1.2/contract/terminate
    method: POST
    data_selector: records
    params: {}
- name: contract_query
  endpoint:
    path: /v1.2/contract/query
    method: POST
    data_selector: records
    params: {}
- name: deduction_initiate
  endpoint:
    path: /v1.2/deduction/initiate
    method: POST
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1.2/transactions/merchant/{reference}
    method: GET
    data_selector: records
    params: {}
- name: sharing
  endpoint:
    path: /v1.2/sharing/apply
    method: POST
    data_selector: records
    params: {}
- name: cancel_sharing
  endpoint:
    path: /v1.2/sharing/cancel
    method: POST
    data_selector: records
    params: {}
- name: query_sharing
  endpoint:
    path: /v1.2/sharing/query
    method: POST
    data_selector: records
    params: {}
- name: sharing_detail
  endpoint:
    path: /v1.2/sharing/detail
    method: POST
    data_selector: records
    params: {}
- name: transactions
  endpoint:
    path: /v1.2/transactions/{transaction_id}
    method: GET
    data_selector: id
    params: {}
- name: refund
  endpoint:
    path: /v1.2/transactions/refund/{transaction_id}
    method: POST
    data_selector: id
    params: {}
- name: refunds
  endpoint:
    path: /v1.2/transactions/refunds/{transaction_id}/
    method: GET
    data_selector: id
    params: {}
- name: exchangerate
  endpoint:
    path: /v1.2/exchangerate
    method: GET
    data_selector: rates
    params: {}
- name: download_transactions
  endpoint:
    path: /v1.2/download/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: billing
  endpoint:
    path: /v1.2/billing
    method: GET
    data_selector: billing
    params: {}
- name: accounts
  endpoint:
    path: /v1.2/accounts
    method: GET
    data_selector: accounts
    params: {}
- name: withdrawal_history
  endpoint:
    path: /v1.2/withdrawal/history
    method: GET
    data_selector: withdrawal
    params: {}
- name: withdrawal_detail
  endpoint:
    path: /v1.2/withdrawal/detail/{withdrawal_id}
    method: GET
    data_selector: withdrawal
    params: {}
- name: transactions
  endpoint:
    path: /v1.2/transactions
    method: GET
    data_selector: withdrawal
    params: {}
- name: withdrawal_history
  endpoint:
    path: /v1.2/withdrawal/history
    method: GET
    data_selector: withdrawal
    params: {}
- name: showqrcode
  endpoint:
    path: /v1.2/transactions/showqrcode
    method: POST
- name: scanqrcode
  endpoint:
    path: /v1.2/transactions/scanqrcode
    method: POST
- name: securepay
  endpoint:
    path: /v1.2/transactions/securepay
    method: POST
- name: qrcode
  endpoint:
    path: /v1.2/transactions/qrcode
    method: POST
- name: apppay
  endpoint:
    path: /v1.2/transactions/apppay
    method: POST
- name: micropay
  endpoint:
    path: /v1.2/transactions/micropay
    method: POST
- name: transactions_expresspay
  endpoint:
    path: /v1.2/transactions/expresspay
    method: POST
    data_selector: transactions
    params: {}
- name: transactions_scanqrcode
  endpoint:
    path: /v1.2/transactions/scanqrcode
    method: POST
    data_selector: transactions
    params: {}
- name: merchantqrcode
  endpoint:
    path: /v1.2/merchantqrcode
    method: POST
    data_selector: transactions
    params: {}
- name: customs_declaration
  endpoint:
    path: /v1.2/customs/declaration/{transaction_id}
    method: POST
    data_selector: declaration
    params: {}
- name: customs_query
  endpoint:
    path: /v1.2/customs/{request_no}
    method: GET
    data_selector: query
    params: {}
- name: securepay
  endpoint:
    path: /v1.2/transactions/securepay
    method: POST
- name: qrcode
  endpoint:
    path: /v1.2/transactions/qrcode
    method: POST
- name: transactions_apppay
  endpoint:
    path: /transactions/apppay
    method: POST
    data_selector: response
    params: {}
- name: transactions_micropay
  endpoint:
    path: /transactions/micropay
    method: POST
    data_selector: response
    params: {}
- name: transactions_expresspay
  endpoint:
    path: /transactions/expresspay
    method: POST
    data_selector: response
    params: {}
- name: transactions_scanqrcode
  endpoint:
    path: /transactions/scanqrcode
    method: POST
    data_selector: response
    params: {}
- name: transactions_showqrcode
  endpoint:
    path: /transactions/showqrcode
    method: POST
    data_selector: response
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
- name: transaction_details
  endpoint:
    path: /transactions/{transaction_id}
    method: GET
    data_selector: transaction
- name: refund_transaction
  endpoint:
    path: /transactions/{transaction_id}/refund
    method: POST
    data_selector: refund
- name: exchange_rate
  endpoint:
    path: /exchangerate
    method: GET
    data_selector: rates
- name: download_transactions
  endpoint:
    path: /download/transactions
    method: GET
    data_selector: download
- name: billing_file
  endpoint:
    path: /billing
    method: GET
    data_selector: billing
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
- name: withdrawal_history
  endpoint:
    path: /withdrawal/history
    method: GET
    data_selector: withdrawal
- name: merchantqrcode
  endpoint:
    path: /v1.2/merchantqrcode
    method: POST
- name: staticqrcode
  endpoint:
    path: /v1.2/transactions/staticqrcode
    method: POST
- name: customs_declaration
  endpoint:
    path: /v1.2/customs/declaration/{transaction_id}
    method: POST
- name: customs_query
  endpoint:
    path: /v1.2/customs/{request_no}
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: payment
  endpoint:
    path: /payment/create
    method: POST
    data_selector: orderId
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- 所有的 API 请求必须通过 HTTPS 发送，并提供API Token作为身份验证
- 商户需要在NihaoPay上注册并获取API密钥
- 所有请求需包含Authorization Header
- 安全支付是一个异步的，需要页面跳转的支付方式。
- 商户请求NihaoPay API后，同步收到一个HTML页面，商家需将该页面写入到当前的网页请求中
- IPN 结果需要使用POST方式获取
- Uses OAuth2 — requires setup of connected app in nihaopay
- Some endpoints may require specific parameters to function correctly.
- 商家在小程序内，请求预下单接口，生成预下单的支付参数，使用小程序的 wx.requestpayment() 唤醒微信支付。
- 代扣目前仅支持微信支付
- 请求参数格式需遵循API文档规定
- 分账功能是指将支付订单款项中的一部分金额支付给多个收款方的功能。
- 请求时需要提供正确的商户订单号作为URL的请求参数。
- Each request must be made over HTTPS and authenticated using your merchant credentials.
- Exchange rate updates daily.
- Transactions can be downloaded as CSV files.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
errors:
- '401 Unauthorized: Recheck API Token'
- '400: Transaction reference number must be unique. Please re-submit.商户订单号不能重复，请更换订单号后重新提交'
- '402: Transaction not found.交易未找到'
- '500: Merchant config error 商户配置错误，请联系NihaoPay'
- '500: Merchant unavailable 商户不可用'
- '400: The field not valid. 请求参数格式不正确'
- '500: Signature error 签名错误'
- '500: The {0} field is required.请求字段不能为空'
- '500: Timeout 请求超时'
- '500: Inner error 内部错误'
- '500: Vendor error 渠道系统出错，请稍后再试'
- '500: System error 系统错误，请联系NihaoPay'
- '401: Invalid merchant credentials provided 无效的认证信息，或身份验证失败'
- '402: Transaction retransmission fail, Please try it after 5 minutes. 交易重传失败'
- '402: Customs not supported. 报关不支持'
- '402: Customs infomation changed. 报关信息篡改'
- '402: Certification not correct. 认证不正确'
- '402: Split amount not correct. 拆分金额不正确'
- '402: Can not be modified as it is on declaration. 报关时无法修改'
- '402: Same customs declare once. 同一个海关申报一次'
- '402: Your request has been submitted, please confirm that it has taken effect.
  您的请求已提交，请确认已生效'
- '402: The original customs does not exist 原报关订单不存在'
- '402: The declaration is not allowed for refunded orders. 已退款订单不能申报'
- '200: 00: Success 交易成功'
- '402: 01: Transaction failed. Please try again.交易失败，请重试'
- '409: 64: Refund or capture currency does not match the original transaction currency.'
- '400: sharing conf already exists'
- '400: sharing history not exist'
- '400: sharing config not exist'
- '400 Bad Request: 请求参数错误'
- '401 Unauthorized: Token失效或未授权'
- '404 Not Found: 请求的资源不存在'
- '500 Internal Server Error: 服务器内部错误'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400 Bad Request: Check parameter values and structure.'
- '401 Unauthorized: Recheck OAuth token expiration or scopes.'
- '404 Not Found: The requested resource does not exist.'
- '400: Transaction reference number must be unique. Please re-submit.'
- '402: Transaction not found.'
- '500: Merchant config error'
- '401: Invalid merchant credentials provided'
- '200: Success 交易成功'
- '402: Transaction failed. Please try again.交易失败，请重试'
- '402: Cardholder input an incorrect card number. 卡号不正确'
- '402: Cardholder''s issuing bank prevented the transaction.发卡行拒绝交易'
- '402: Customer input an expired card number. 卡片已过期'
- '402: Customer has insufficient funds available. 账户余额不足'
- '402: Cardholder input an incorrect expiration date. 卡片有效期不正确'
- '402: Cardholder authentication failed. Please verify cardholder''s information.验证失败，请检查卡片等信息'
- '402: Card state is incorrect. 卡状态错误'
- '402: The amount exceeds transaction limit placed.订单金额超过限额'
- '400: This payment channel is restricted. Please contact NihaoPay customer service.
  支付方式受限制，请联系NihaoPay'
- '409: Transaction failed. Information submitted in a repeat transaction must match
  the original attempted transaction exactly. 交易失败，重复提交的订单号请与原订单信息一致'
- '429: Too many transactions attempts by cardholder.交易次数过多，卡号被限制'
- '404: Failed. Transaction have refund or chargeback. 交易失败，原交易已经退款或者被拒付，不能撤销'
- '404: Transaction has been cleared, please request refund.交易已清算，不能撤销，请使用退款接口'
- '402: Transaction is not within the acceptance time range. 不在接受时间范围内，消费交易已被关闭，已经超过退款期限。'
- '200: Success'
- '402: Transaction failed. Please try again.'
- '409: Refund or capture currency does not match the original transaction currency.'
- '500: Merchant unavailable'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: The field not valid.'
- '500: Signature error'
- '500: The {0} field is required.'
- '500: Timeout'
- '500: Inner error'
- '500: Vendor error'
- '500: System error'
- '402: Transaction retransmission fail, Please try it after 5 minutes.'
- '402: Customs not supported.'
- '402: Customs information changed.'
- '402: Certification not correct.'
- '402: Split amount not correct.'
- '402: Can not be modified as it is on declaration.'
- '402: Same customs declare once.'
- '402: Your request has been submitted, please confirm that it has taken effect.'
- '402: The original customs does not exist'
- '402: The declaration is not allowed for refunded orders'
- '402: Cardholder input an incorrect card number.'
- '402: Cardholder’s issuing bank prevented the transaction.'
- '402: Customer input an expired card number.'
- '402: Customer has insufficient funds available.'
- '402: Cardholder input an incorrect expiration date.'
- '402: Cardholder authentication failed. Please verify cardholder’s information.'
- '402: Card state is incorrect.'
- '402: The amount exceeds transaction limit placed.'
- '400: This payment channel is restricted. Please contact NihaoPay customer service.'
- '409: Transaction failed. Information submitted in a repeat transaction must match
  the original attempted transaction exactly.'
- '402: Transaction exceeds the cardholder’s credit limit.'
- '429: Too many transactions attempts by cardholder.'
- '402: Cardholder’s chosen payment card is not supported in this Gateway.'
- '402: Cardholder has not activated online payments with their issuing bank.'
- '404: Failed. Transaction have refund or chargeback.'
- '404: Transaction has been cleared, please request refund.'
- '402: Transaction is not within the acceptance time range.'
- '402: The original transaction failed. You cannot refund, cancel, capture, or release
  an unsuccessful transaction.'
- '409: Transaction has previously been cancelled.'
- '409: Failed to refund transaction. Transaction has previously been fully refunded.'
- '402: Failed to refund transaction. Refund amount exceeds original transaction amount
  or remaining transaction balance.'
- '402: Failed to capture transaction. Transaction has previously been released.'
- '402: Failed to capture transaction. Transaction has previously been captured.'
- '402: Failed to capture transaction. Capture amount exceeds authorization amount.'
- '402: Buyer not exist or buyer account info error'
- '402: Transaction amount is exceed the limit'
- '500: QRcode has expired'
- '500: Service is not activated for this account'
- '402: Withdrawal amount exceeds account balance'
- '402: Withdrawal amount less than the minimum withdrawal amount'
- '402: Invalid application, it’s only available for manually withdrawal merchant'
- '404: The Exchange rate not found.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.nihaopay.com
  auth:
    type: Bearer
    location: header
    header_name: Authorization
source_metadata: null
