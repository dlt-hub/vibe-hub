resources:
- name: pair_plot
  endpoint:
    path: /objects/Plot/pair
    method: GET
    data_selector: parameters
- name: Line
  endpoint:
    path: /seaborn.objects.Line
    method: GET
    data_selector: properties
    params: {}
- name: Agg
  endpoint:
    path: /Agg
    method: GET
    data_selector: records
- name: KDE
  endpoint:
    path: /seaborn/objects/KDE
    method: GET
    data_selector: records
- name: Perc
  endpoint:
    path: /seaborn.objects.Perc
    method: GET
    data_selector: parameters
    params: {}
- name: Norm
  endpoint:
    path: /objects/Norm
    method: GET
    data_selector: parameters
    params: {}
- name: tips
  endpoint:
    path: sns.load_dataset('tips')
    method: GET
    data_selector: data
    params: {}
- name: fmri
  endpoint:
    path: sns.load_dataset('fmri')
    method: GET
    data_selector: data
    params: {}
- name: flights_wide
  endpoint:
    path: sns.load_dataset('flights')
    method: GET
    data_selector: data
    params: {}
- name: scatter_plot
  endpoint:
    path: /scatterplot
    method: GET
    data_selector: data
    params: {}
- name: flights
  endpoint:
    path: /datasets/flights
    method: GET
    data_selector: records
- name: fmri
  endpoint:
    path: /datasets/fmri
    method: GET
    data_selector: records
- name: dots
  endpoint:
    path: /datasets/dots
    method: GET
    data_selector: records
- name: distribution_plot
  endpoint:
    path: /displot
    method: GET
    data_selector: data
    params: {}
- name: histogram
  endpoint:
    path: /histplot
    method: GET
    data_selector: data
    params: {}
- name: categorical scatterplots
  endpoint:
    path: /seaborn/catplot/categorical_scatterplots
    method: GET
    data_selector: scatterplots
- name: categorical distribution plots
  endpoint:
    path: /seaborn/catplot/categorical_distribution_plots
    method: GET
    data_selector: distribution_plots
- name: categorical estimate plots
  endpoint:
    path: /seaborn/catplot/categorical_estimate_plots
    method: GET
    data_selector: estimate_plots
- name: violinplot
  endpoint:
    path: /violinplot
    method: GET
    data_selector: data
    params: {}
- name: regression_model
  endpoint:
    path: /seaborn/regplot
    method: GET
    data_selector: data
    params: {}
- name: residplot
  endpoint:
    path: /seaborn/residplot
    method: GET
    data_selector: ax
    params: {}
- name: heatmap
  endpoint:
    path: /seaborn/heatmap
    method: GET
    data_selector: data
    params: {}
- name: jointplot
  endpoint:
    path: /seaborn/jointplot
    method: GET
    data_selector: data
    params: {}
- name: JointGrid
  endpoint:
    path: /seaborn/JointGrid
    method: GET
    data_selector: records
- name: JointGrid
  endpoint:
    path: /seaborn/JointGrid/__init__
    method: GET
    data_selector: parameters
    params: {}
- name: axes_style
  endpoint:
    path: /axes_style
    method: GET
    data_selector: parameters
    params: {}
- name: cubehelix_palette
  endpoint:
    path: /seaborn/cubehelix_palette
    method: GET
    data_selector: palette
- name: blend_palette
  endpoint:
    path: seaborn.blend_palette
    method: GET
    data_selector: palette
- name: mpl_palette
  endpoint:
    path: /mpl_palette
    method: GET
    data_selector: list of RGB tuples
    params: {}
notes:
- seaborn is a Python visualization library based on matplotlib
- Seaborn does not offer an API for accessing statistical results.
- Standard error can be shown instead of confidence intervals using the new errorbar
  API as of v0.12.
- The new interface aims to support a deep amount of customization through Plot.
- SVG images use vector graphics with 'infinite' resolution
- The HiDPI scaling of the default PNG images will also inflate the size of the notebook
  they are stored in
- The API for customizing plot appearance is not yet finalized.
- The choice of bins for computing and plotting a histogram can exert substantial
  influence on the insights that one is able to draw from the visualization.
- It is always a good to try different bin sizes to be sure that you are not missing
  something important.
- The bandwidth, or standard deviation of the smoothing kernel, is an important parameter.
- Because the smoothing is performed with a Gaussian kernel, the estimated density
  curve can extend to values that may not make sense.
- Stacking can make it much harder to compare values between groups that get shifted,
  but it can work well when depicting a part-whole relationship.
- The *bandwidth*, or standard deviation of the smoothing kernel, is an important
  parameter.
- Much like the choice of bin width in a histogram, an over-smoothed curve can erase
  true features of a distribution, while an under-smoothed curve can create false
  features out of random variability.
- The rule-of-thumb that sets the default bandwidth works best when the true distribution
  is smooth, unimodal, and roughly bell-shaped.
- By default, this function treats one of the variables as categorical and draws data
  at ordinal positions (0, 1, … n) on the relevant axis.
- As of version 0.13.0, this can be disabled by setting native_scale=True.
- As of version 0.13.0, this can be disabled by setting `native_scale=True`.
- When the local density of points is too high, they will be forced to overlap in
  the 'gutters' of each swarm and a warning will be issued.
- To disable this behavior and use the original scale of the variable, set `native_scale=True`.
- Starting in version 0.13.0, it is possible to 'split' single violins.
- The `regplot()` and `lmplot()` functions are closely related, but the former is
  an axes-level function while the latter is a figure-level function.
- The regplot() and lmplot() functions are closely related
- It’s also easy to combine regplot() with JointGrid or PairGrid
- The returned object has a `savefig` method that should be used if you want to save
  the figure object without clipping the dendrograms.
- 'The plot need not be square: separate variables can be used to define the rows
  and columns.'
- This function provides a convenient interface to the JointGrid class, with several
  canned plot kinds.
- Grid for drawing a bivariate plot with marginal univariate plots.
- The figure will always be square (unless you resize it at the matplotlib layer)
- By default, the ticks on the density axis of the marginal plots are turned off
- The base context is 'notebook', and the other contexts are 'paper', 'talk', and
  'poster'.
- Produces a colormap with linearly-decreasing (or increasing) brightness.
- Information will be preserved if printed to black and white or viewed by someone
  who is colorblind.
- Requires IPython 2+ and must be used in the notebook.
errors:
- 'UserWarning: 15.4% of the points cannot be placed; you may want to decrease the
  size of the markers or use stripplot.'
- 'UserWarning: 17.3% of the points cannot be placed; you may want to decrease the
  size of the markers or use stripplot.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.seaborn.com
source_metadata: null
