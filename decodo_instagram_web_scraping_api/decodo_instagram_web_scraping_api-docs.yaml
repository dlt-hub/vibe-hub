resources:
- name: instagram_graphql_profile
  endpoint:
    path: /v2/task
    method: POST
    data_selector: results
    params: {}
- name: instagram_graphql_user_posts
  endpoint:
    path: /v2/task
    method: POST
    data_selector: results
    params: {}
- name: instagram_graphql_post
  endpoint:
    path: /v2/task
    method: POST
    data_selector: results
    params: {}
- name: proxies
  endpoint:
    path: /api/v1/proxies
    method: GET
    data_selector: data
    params: {}
- name: sub_users
  endpoint:
    path: /v2/sub-users
    method: GET
    data_selector: ''
    params: {}
- name: whitelisted_ips
  endpoint:
    path: /get-whitelisted-ips
    method: GET
    data_selector: ''
    params: {}
- name: subscriptions
  endpoint:
    path: /get-subscriptions
    method: GET
    data_selector: ''
    params: {}
- name: traffic
  endpoint:
    path: /get-traffic
    method: POST
    data_selector: ''
    params: {}
- name: targets
  endpoint:
    path: /get-targets
    method: POST
    data_selector: ''
    params: {}
- name: sub_user
  endpoint:
    path: /v2/sub-users
    method: GET
    data_selector: records
    params: {}
- name: whitelisted_ips
  endpoint:
    path: /v2/whitelisted-ips
    method: GET
    data_selector: records
    params: {}
- name: subscriptions
  endpoint:
    path: /v2/subscriptions
    method: GET
    data_selector: records
    params: {}
- name: traffic
  endpoint:
    path: /v2/traffic
    method: POST
    data_selector: records
    params: {}
- name: sub_users
  endpoint:
    path: /v2/sub-users
    method: GET
    data_selector: json
    params: {}
- name: sub_user
  endpoint:
    path: /v2/sub-users/{sub_user_id}
    method: GET
    data_selector: object
    params: {}
- name: sub_users
  endpoint:
    path: /v2/sub-users
    method: POST
    data_selector: object
    params: {}
- name: sub_user
  endpoint:
    path: /v2/sub-users/{sub_user_id}
    method: PUT
    data_selector: object
    params: {}
- name: sub_user_traffic
  endpoint:
    path: /v2/sub-users/{sub_user_id}/traffic
    method: GET
    data_selector: traffic
    params:
      type: 24h
      from: yyyy-mm-dd
      to: yyyy-mm-dd
      service_type: residential_proxies
- name: allocated_sub_user_traffic
  endpoint:
    path: /v2/allocated-traffic-limit
    method: GET
    data_selector: object
    params: {}
- name: sub_user
  endpoint:
    path: /v2/sub-users/{sub_user_id}
    method: DELETE
- name: whitelisted_ips
  endpoint:
    path: /v2/whitelisted-ips
    method: GET
    data_selector: json
- name: whitelisted_ips
  endpoint:
    path: /v2/whitelisted-ips
    method: POST
    data_selector: object
    params: {}
- name: get_whitelisted_ips
  endpoint:
    path: /v2/whitelisted-ips
    method: GET
    data_selector: object
    params: {}
- name: whitelisted_ips
  endpoint:
    path: /v2/whitelisted-ips/{id}
    method: DELETE
    data_selector: object
    params: {}
- name: subscriptions
  endpoint:
    path: /v2/subscriptions
    method: GET
    data_selector: json
- name: sub_users
  endpoint:
    path: /v2/sub-users
    method: GET
    data_selector: records
- name: whitelisted_ips
  endpoint:
    path: /v2/whitelisted-ips
    method: GET
    data_selector: records
- name: subscriptions
  endpoint:
    path: /v2/subscriptions
    method: GET
    data_selector: records
- name: generate_custom_endpoints
  endpoint:
    path: /v2/endpoints-custom
    method: GET
    params:
      proxy_type: residential_proxies
      auth_type: basic
      session_type: sticky
      session_time: 10
      location: random
      output_format: protocol:auth@endpoint
      count: 10
      page: 1
      response_format: json
- name: generate_custom_back_connect_endpoints
  endpoint:
    path: /v2/endpoints-custom/back-connect
    method: GET
    data_selector: array of strings
    params:
      session_type: sticky
      session_time: 10
      count: 10
      page: 1
      response_format: json
      line_break: '

        '
      domain: gate.decodo.com
      protocol: http
- name: traffic
  endpoint:
    path: /api/v2/statistics/traffic
    method: POST
    data_selector: object
    params: {}
- name: targets
  endpoint:
    path: /api/v2/statistics/targets
    method: POST
    data_selector: object
    params:
      startDate: '2024-09-01 00:00:00'
      endDate: '2024-10-01 00:00:00'
      proxyType: residential_proxies
- name: proxy_request
  endpoint:
    path: /json
    method: GET
    data_selector: result
- name: countries
  endpoint:
    path: /countries
    method: GET
- name: cities
  endpoint:
    path: /cities
    method: GET
- name: states
  endpoint:
    path: /states
    method: GET
- name: ip
  endpoint:
    path: /json
    method: GET
- name: ip_info
  endpoint:
    path: /json
    method: GET
- name: session_duration
  endpoint:
    path: /residential-proxy-custom-sticky-sessions
    method: GET
    data_selector: sessionduration
    params:
      sessionduration: integer value between 1 and 1440
- name: mobile_proxy
  endpoint:
    path: /json
    method: GET
    data_selector: data
- name: countries
  endpoint:
    path: /countries
    method: GET
- name: cities
  endpoint:
    path: /cities
    method: GET
- name: states
  endpoint:
    path: /states
    method: GET
- name: Sticky Port
  endpoint:
    path: /mobile-proxies/sticky-port
    method: GET
    data_selector: session_types
    params:
      sessionduration: integer between 1 and 1440
- name: Rotating Port
  endpoint:
    path: /mobile-proxies/rotating-port
    method: GET
    data_selector: session_types
    params: {}
- name: residential_proxies
  endpoint:
    path: /api/residential_proxies
    method: GET
    data_selector: data
    params: {}
- name: datacenter_proxies
  endpoint:
    path: /api/datacenter_proxies
    method: GET
    data_selector: data
    params: {}
- name: static_residential_proxies
  endpoint:
    path: /json
    method: GET
- name: static_port
  endpoint:
    path: /static-isp-proxies/proxy-setup
    method: GET
    data_selector: ports
    params: {}
- name: rotating_port
  endpoint:
    path: /rotating-isp-proxies/proxy-setup
    method: GET
    data_selector: ports
    params: {}
- name: static_residential_locations
  endpoint:
    path: /isp-pay-per-gb-proxy-locations
    method: GET
    data_selector: locations
    params: {}
- name: static_residential_proxies
  endpoint:
    path: /json
    method: GET
- name: static_port
  endpoint:
    path: /static-port
    method: GET
    data_selector: static_ports
    params: {}
- name: rotating_port
  endpoint:
    path: /rotating-port
    method: GET
    data_selector: rotating_ports
    params: {}
- name: static_residential_proxies
  endpoint:
    path: /docs/isp-pay-per-ip-proxy-locations
    method: GET
    data_selector: countries
    params: {}
- name: IP List Management
  endpoint:
    path: /isp-pay-per-ip-proxy-ip-management
    method: GET
    data_selector: data
    params: {}
- name: ip_info
  endpoint:
    path: /json
    method: GET
    data_selector: result
- name: Static Residential Proxy
  endpoint:
    path: /dedicated-isp-proxy-session-types/static
    method: GET
- name: Rotating Rort Proxy
  endpoint:
    path: /dedicated-isp-proxy-session-types/rotating
    method: GET
- name: Dedicated Static Residential Locations
  endpoint:
    path: /dedicated-isp-proxy-locations
    method: GET
    data_selector: countries
    params: {}
- name: ip_info
  endpoint:
    path: /json
    method: GET
    data_selector: ''
    params: {}
- name: datacenter_static
  endpoint:
    path: /datacenter/static
    method: GET
- name: datacenter_rotating
  endpoint:
    path: /datacenter/rotating
    method: GET
- name: available_locations
  endpoint:
    path: /datacenter-pay-per-gb-proxy-locations
    method: GET
    data_selector: locations
    params: {}
- name: datacenter_pay_ip
  endpoint:
    path: /datacenter-ips/proxy-setup
    method: GET
- name: available_locations
  endpoint:
    path: /datacenter-pay-per-ip-proxy-locations
    method: GET
    data_selector: countries
- name: IP List
  endpoint:
    path: /isp-pay-per-ip-proxy-ip-management
    method: GET
- name: static_port
  endpoint:
    path: /dedicated-datacenter/static-port
    method: GET
- name: rotating_port
  endpoint:
    path: /dedicated-datacenter/rotating-port
    method: GET
- name: Dedicated Datacenter Locations
  endpoint:
    path: /dedicated-datacenter-proxy-available-locations
    method: GET
- name: session
  endpoint:
    path: /
    method: GET
- name: geolocation
  endpoint:
    path: /
    method: GET
    data_selector: response
    params: {}
- name: locale
  endpoint:
    path: /site-unblocker/amazon-locale
    method: GET
    data_selector: locale
    params: {}
- name: rendered_html
  endpoint:
    path: /
    method: GET
    data_selector: response
    params: {}
- name: rendered_png
  endpoint:
    path: /
    method: GET
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Response Headers
  endpoint:
    path: /response-headers
    method: GET
    data_selector: headers
- name: usage_statistics
  endpoint:
    path: /api/v2/statistics/traffic
    method: POST
    data_selector: proxy_type
- name: real_time_scraping
  endpoint:
    path: /v2/scrape
    method: POST
- name: asynchronous_scraping
  endpoint:
    path: /v2/task
    method: POST
- name: batch_request
  endpoint:
    path: /v2/task/batch
    method: POST
- name: scrape
  endpoint:
    path: /v2/scrape
    method: POST
    data_selector: result
- name: task
  endpoint:
    path: /v2/task
    method: POST
    data_selector: id
    params: {}
- name: task_results
  endpoint:
    path: /v2/task/{task_id}/results
    method: GET
    data_selector: ''
    params: {}
- name: task
  endpoint:
    path: /v2/task
    method: POST
    data_selector: task_id
    params: {}
- name: task_results
  endpoint:
    path: /v2/task/{task_id}/results
    method: GET
    data_selector: results
    params: {}
- name: batch_task
  endpoint:
    path: /v2/task/batch
    method: POST
    data_selector: batch_id
    params: {}
- name: parameters
  endpoint:
    path: /docs/web-scraping-api-parameters
    method: GET
    data_selector: parameters
    params: {}
- name: JavaScript Rendering
  endpoint:
    path: /v2/scrape
    method: POST
    data_selector: body
- name: response_headers
  endpoint:
    path: /web-scraping-api/response-headers
    method: GET
    data_selector: headers
    params: {}
- name: amazon
  endpoint:
    path: /web-scraping-api/amazon
    method: GET
- name: amazon_bestsellers
  endpoint:
    path: /web-scraping-api/amazon_bestsellers
    method: GET
- name: amazon_pricing
  endpoint:
    path: /web-scraping-api/amazon_pricing
    method: GET
- name: amazon_product
  endpoint:
    path: /web-scraping-api/amazon_product
    method: GET
- name: amazon_search
  endpoint:
    path: /web-scraping-api/amazon_search
    method: GET
- name: bing
  endpoint:
    path: /web-scraping-api/bing
    method: GET
- name: google
  endpoint:
    path: /web-scraping-api/google
    method: GET
- name: walmart_product
  endpoint:
    path: /web-scraping-api/walmart_product
    method: GET
- name: products
  endpoint:
    path: /sch/i.html
    method: GET
    data_selector: products
    params:
      target: universal
      parse: true
- name: product_information
  endpoint:
    path: /extract/product_information
    method: POST
    data_selector: results
    params: {}
- name: manual_parsing
  endpoint:
    path: /web-scraping-api/manual-parsing
    method: POST
    data_selector: results
    params:
      custom_parsing: 'true'
- name: screenshot
  endpoint:
    path: /v2/task
    method: POST
    data_selector: ''
    params:
      headless: png
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tweets
  endpoint:
    path: /2/tweets
    method: GET
    data_selector: data
    params: {}
- name: localisation
  endpoint:
    path: /web-scraping-api/localisation
    method: GET
    data_selector: parameters
    params: {}
- name: amazon
  endpoint:
    path: /docs/web-scraping-api-amazon
    method: GET
    data_selector: templates
- name: google
  endpoint:
    path: /docs/web-scraping-api-google
    method: GET
    data_selector: templates
- name: walmart
  endpoint:
    path: /docs/web-scraping-api-walmart
    method: GET
    data_selector: templates
- name: target
  endpoint:
    path: /docs/web-scraping-api-target
    method: GET
    data_selector: templates
- name: youtube
  endpoint:
    path: /docs/web-scraping-api-youtube-transcript
    method: GET
    data_selector: templates
- name: instagram
  endpoint:
    path: /docs/web-scraping-api-instagram
    method: GET
    data_selector: templates
- name: tiktok
  endpoint:
    path: /docs/web-scraping-api-tiktok
    method: GET
    data_selector: templates
- name: reddit
  endpoint:
    path: /docs/web-scraping-api-reddit
    method: GET
    data_selector: templates
- name: bing
  endpoint:
    path: /docs/web-scraping-api-bing
    method: GET
    data_selector: templates
- name: amazon
  endpoint:
    path: /amazon
    method: GET
    data_selector: listings
    params:
      url: string
- name: amazon_product
  endpoint:
    path: /amazon_product
    method: GET
    data_selector: listings
    params:
      query: string
- name: amazon_pricing
  endpoint:
    path: /amazon_pricing
    method: GET
    data_selector: pricing
    params:
      query: string
- name: amazon_search
  endpoint:
    path: /amazon_search
    method: GET
    data_selector: search_results
    params:
      query: string
- name: amazon_sellers
  endpoint:
    path: /amazon_sellers
    method: GET
    data_selector: sellers
    params:
      query: string
- name: amazon_bestsellers
  endpoint:
    path: /amazon_bestsellers
    method: GET
    data_selector: bestsellers
    params:
      query: string
- name: amazon_search
  endpoint:
    path: /scrape
    method: POST
    data_selector: data
    params: {}
- name: amazon_sellers
  endpoint:
    path: /scrape
    method: POST
    data_selector: ''
    params: {}
- name: bing
  endpoint:
    path: /web-scraping-api/bing
    method: GET
    data_selector: results
    params:
      url: string
- name: bing_search
  endpoint:
    path: /web-scraping-api/bing_search
    method: GET
    data_selector: results
    params:
      query: string
- name: google_search
  endpoint:
    path: /google_search
    method: GET
    data_selector: results
    params:
      query: string
- name: google
  endpoint:
    path: /google
    method: GET
    data_selector: results
    params:
      url: string
- name: google_travel_hotels
  endpoint:
    path: /google_travel_hotels
    method: GET
    data_selector: results
    params:
      query: string
- name: google_trends_explore
  endpoint:
    path: /google_trends_explore
    method: GET
    data_selector: results
    params:
      query: string
- name: google_shopping_search
  endpoint:
    path: /google_shopping_search
    method: GET
    data_selector: results
    params:
      query: string
- name: google_shopping_product
  endpoint:
    path: /google_shopping_product
    method: GET
    data_selector: results
    params:
      query: string (item id)
- name: google_shopping_pricing
  endpoint:
    path: /google_shopping_pricing
    method: GET
    data_selector: results
    params:
      query: string (item id)
- name: google_suggest
  endpoint:
    path: /google_suggest
    method: GET
    data_selector: results
    params:
      query: string
      geo: string
- name: google_ads
  endpoint:
    path: /google_ads
    method: GET
    data_selector: results
    params:
      query: string
- name: google_maps
  endpoint:
    path: /google_maps
    method: GET
    data_selector: results
    params:
      query: string
      geo: string
- name: google_lens
  endpoint:
    path: /google_lens
    method: GET
    data_selector: results
    params:
      query: string
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Locale Data Table
  endpoint:
    path: /locale/data/table
    method: GET
    data_selector: records
- name: titles
  endpoint:
    path: /titles
    method: GET
    data_selector: records
- name: Bone Health
  endpoint:
    path: /ai_overviews/bone_health
    method: GET
    data_selector: info_list
    params: {}
- name: ai_overview
  endpoint:
    path: /v2/task
    method: POST
    data_selector: results.ai_overview
- name: posts
  endpoint:
    path: /getkore/posts
    method: GET
    data_selector: data
    params: {}
- name: reddit_post
  endpoint:
    path: /scrape
    method: POST
    data_selector: target
    params:
      target: reddit_post
      url: https://www.reddit.com/r/nba/comments/17jrqc5/serious_next_day_thread_postgame_discussion/
- name: reddit_subreddit
  endpoint:
    path: /scrape
    method: POST
    data_selector: target
    params:
      target: reddit_subreddit
      url: https://www.reddit.com/r/nba
- name: reddit_user
  endpoint:
    path: /scrape
    method: POST
    data_selector: target
    params:
      target: reddit_user
      url: https://www.reddit.com/user/IWasRightOnce/
- name: Target
  endpoint:
    path: /target
    method: GET
    data_selector: response
    params:
      url: string
- name: Target search
  endpoint:
    path: /target/search
    method: GET
    data_selector: response
    params:
      url: string
      parse: boolean
- name: Target product
  endpoint:
    path: /target/product
    method: GET
    data_selector: response
    params:
      url: string
      parse: boolean
- name: tiktok_post
  endpoint:
    path: /web-scraping-api/tiktok
    method: GET
    data_selector: records
    params:
      target: tiktok_post
      url: https://www.tiktok.com/@nba/video/7196793231042989354
- name: walmart_scrape
  endpoint:
    path: /walmart
    method: GET
    data_selector: HTML
    params:
      url: string
      store_id: string
      geo: string
- name: walmart_search
  endpoint:
    path: /walmart/search
    method: GET
    data_selector: results
    params:
      url: string
      parse: boolean
      store_id: string
      geo: string
- name: walmart_product
  endpoint:
    path: /walmart/product
    method: GET
    data_selector: product_info
    params:
      url: string
      parse: boolean
      store_id: string
      geo: string
- name: walmart_geo
  endpoint:
    path: /v2/scrape
    method: POST
    data_selector: data
    params: {}
- name: youtube_video
  endpoint:
    path: /docs/web-scraping-api-video
    method: POST
    data_selector: video
    params: {}
- name: task
  endpoint:
    path: /v2/task
    method: POST
    data_selector: null
    params: {}
- name: task_results
  endpoint:
    path: /v2/task/:id/results
    method: GET
    data_selector: null
    params: {}
- name: video_metadata
  endpoint:
    path: /video/metadata
    method: GET
    data_selector: results
    params: {}
- name: youtube_metadata
  endpoint:
    path: /youtube_metadata
    method: GET
    data_selector: metadata
    params:
      query: Youtube video ID
      target: youtube_metadata
- name: output
  endpoint:
    path: /docs/web-scraping-api-youtube-transcript
    method: GET
    data_selector: transcriptSegmentRenderer
    params: {}
- name: youtube_transcript
  endpoint:
    path: /web-scraping-api/youtube_transcript
    method: GET
    data_selector: transcript
    params:
      query: Youtube video ID
      target: youtube_transcript
      language_code: transcript's language
      transcript_origin: transcript type
- name: languages
  endpoint:
    path: /api/languages
    method: GET
    data_selector: languages
    params: {}
- name: health_trackers
  endpoint:
    path: /best_health_trackers_under_200
    method: GET
    data_selector: response_text
- name: google_ai_mode
  endpoint:
    path: /v2/task
    method: POST
    data_selector: content
    params:
      target: google_ai_mode
      query: What are the top 3 most effective strategies for learning a new language?
      parse: true
- name: chatgpt
  endpoint:
    path: /v2/task
    method: POST
    data_selector: content
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: perplexity
  endpoint:
    path: /v2/task
    method: POST
    data_selector: content
- name: productivity_articles
  endpoint:
    path: /blog/productivity
    method: GET
    data_selector: articles
    params: {}
- name: top_sources
  endpoint:
    path: /search
    method: GET
    data_selector: top_sources
- name: related_queries
  endpoint:
    path: /search
    method: GET
    data_selector: related_queries
- name: traffic
  endpoint:
    path: /subscription-api/v1/api/public/statistics/traffic
    method: POST
- name: targets
  endpoint:
    path: /subscription-api/v1/api/public/statistics/target
    method: POST
- name: proxy_setup
  endpoint:
    path: /docs/proxy-setup
    method: GET
    data_selector: proxy_settings
- name: windows
  endpoint:
    path: /docs/windows-integration#/
    method: GET
    data_selector: ''
    params: {}
- name: mac_os
  endpoint:
    path: /docs/macos-integration#/
    method: GET
    data_selector: ''
    params: {}
- name: linux
  endpoint:
    path: /docs/linux-integration#/
    method: GET
    data_selector: ''
    params: {}
- name: proxy_setup
  endpoint:
    path: /docs/proxy-quick-start-guides
    method: GET
    data_selector: proxyDetails
    params: {}
- name: proxy_setup
  endpoint:
    path: /proxy/setup
    method: POST
    data_selector: profiles
    params: {}
- name: proxy_setup
  endpoint:
    path: /proxy/setup
    method: POST
- name: proxy
  endpoint:
    path: /proxy/settings
    method: POST
    data_selector: settings
    params: {}
- name: proxy_settings
  endpoint:
    path: /proxy/settings
    method: POST
    data_selector: settings
    params:
      ip_address: gate.decodo.com
      port: '10000'
      login_user: proxy username
      login_password: proxy password
- name: proxy
  endpoint:
    path: /proxy
    method: POST
    data_selector: proxy_details
- name: Octoparse
  endpoint:
    path: /docs/octoparse-integration#/
    method: GET
- name: ScrapeBox
  endpoint:
    path: /docs/scrapebox-integration#/
    method: GET
- name: Scrapy Proxy Middleware
  endpoint:
    path: /docs/scrapy-proxy-middleware-integration#/
    method: GET
- name: decodo_auth
  endpoint:
    path: /decodo_auth.py
    method: GET
    data_selector: properties
    params:
      username: DECODO_USER
      password: DECODO_PASSWORD
      endpoint: DECODO_ENDPOINT
      port: DECODO_PORT
- name: android
  endpoint:
    path: /docs/android-integration
    method: GET
- name: tun2socks
  endpoint:
    path: /docs/tun2socks-integration
    method: GET
- name: iphone
  endpoint:
    path: /docs/iphone-integration
    method: GET
- name: shadowrocket
  endpoint:
    path: /docs/shadowrocket-integration
    method: GET
- name: potatso
  endpoint:
    path: /docs/potatso-integration
    method: GET
- name: super_proxy
  endpoint:
    path: /docs/super-proxy-integration
    method: GET
- name: Wi-Fi network setup
  endpoint:
    path: /docs/android/wifi-network-setup
    method: GET
    data_selector: settings
    params: {}
- name: Mobile network setup
  endpoint:
    path: /docs/android/mobile-network-setup
    method: GET
    data_selector: settings
    params: {}
- name: proxy_setup
  endpoint:
    path: /proxy/setup
    method: POST
    data_selector: proxy_settings
    params:
      username: your_username
      password: your_password
- name: proxy_setup
  endpoint:
    path: /setup/proxy
    method: POST
    data_selector: setup_response
    params: {}
- name: proxy_server
  endpoint:
    path: /add_server
    method: POST
    data_selector: server
    params: {}
- name: proxy
  endpoint:
    path: /add-proxy
    method: POST
    data_selector: proxy_details
- name: proxy
  endpoint:
    path: /residential-proxies/proxy-setup
    method: GET
- name: stackposts
  endpoint:
    path: /api/stackposts
    method: GET
    data_selector: data
    params: {}
- name: ID Verification
  endpoint:
    path: /profile?tab=id-verification
    method: GET
    data_selector: verificationStatus
- name: target_groups
  endpoint:
    path: /docs/accessing-target-groups-after-id-verification
    method: GET
    data_selector: categories
- name: verification_reasons
  endpoint:
    path: /docs/id-verification
    method: GET
    data_selector: reasons
- name: failed_payments
  endpoint:
    data_selector: subscription_uuid
- name: pre_billing_alert
  endpoint:
    data_selector: subscription_uuid
- name: auto_top_up_failed
  endpoint:
    data_selector: subscription_uuid
- name: traffic_usage_details
  endpoint:
    data_selector: username
- name: scraping_api_trial_started
  endpoint:
    data_selector: subscription_uuid
- name: scraping_api_trial_expire_alert
  endpoint:
    data_selector: subscription_uuid
- name: scraping_api_sub_expired
  endpoint:
    data_selector: subscription_uuid
- name: payg_auto_charge_failed
  endpoint: {}
- name: payg_auto_charge_success
  endpoint: {}
- name: payg_cancellation_success
  endpoint: {}
- name: account_blocked
  endpoint: {}
- name: payment_details
  endpoint:
    path: /webhooks/payment
    method: POST
    data_selector: notifications
    params: {}
- name: traffic_usage_details
  endpoint:
    path: /webhooks/traffic
    method: POST
    data_selector: notifications
    params: {}
- name: scraping_solution_details
  endpoint:
    path: /webhooks/scraping
    method: POST
    data_selector: notifications
    params: {}
- name: pay_as_you_go_details
  endpoint:
    path: /webhooks/payg
    method: POST
    data_selector: notifications
    params: {}
- name: account_details
  endpoint:
    path: /webhooks/account
    method: POST
    data_selector: notifications
    params: {}
- name: payment_issues
  endpoint:
    path: /docs/payment-issues
    method: GET
    data_selector: content
    params: {}
- name: cryptocurrency_issues
  endpoint:
    path: /docs/crypto-payments
    method: GET
    data_selector: content
    params: {}
- name: residential_proxies
  endpoint:
    path: /docs/residential-proxy-quick-start
    method: GET
- name: mobile_proxies
  endpoint:
    path: /docs/mobile-proxy-quick-start
    method: GET
- name: datacenter_proxies
  endpoint:
    path: /docs/datacenter-pay-per-gb-proxy-quick-start
    method: GET
- name: browsers
  endpoint:
    path: /api/browsers
    method: GET
    data_selector: data
    params: {}
- name: operating_systems
  endpoint:
    path: /api/operating-systems
    method: GET
    data_selector: data
    params: {}
- name: residential_proxies
  endpoint:
    path: /api/v1/residential_proxies
    method: GET
    data_selector: data
    params: {}
- name: datacenter_proxies
  endpoint:
    path: /api/v1/datacenter_proxies
    method: GET
    data_selector: data
    params: {}
- name: Residential Proxies
  endpoint:
    path: /
    method: GET
notes:
- The API uses GraphQL targets which return data in JSON.
- Specific target templates listed below are available with Advanced plans.
- You can scrape Instagram target with Core plans as well by providing page URL.
- Uses OAuth2 with refresh token — requires setup of connected app in Decodo
- API key must be passed with the authorization header
- Old URL parameter option will be supported until August 20th
- The api-key must be passed with the authorization header.
- Api-key must be passed with the authorization header.
- The 'api-key' must be passed with the 'authorization header'.
- The `api-key` must be passed with the `authorization header`.
- Api-key must be passed with the authorization header
- Effortlessly integrate all essential proxy features into your browser with the Decodo
  Chrome Extension.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Sessions of up to 24 hours can be selected or specified from the drop-down menu
  in the dashboard for both user:pass and Whitelisted IP authentication methods.
- The Whitelisted IP session control option is supported only by the HTTPS protocol.
- Endpoints are like gateways to IP pools.
- When you connect to an endpoint, your traffic is automatically routed through a
  random IP address from the Decodo IP pool.
- The default number of whitelisted IP slots is 10.
- You can only add IPs that are in IPv4 format (xx.xx.xx.xx). The IPv6 format is not
  supported.
- Ensure that the IP you are adding is yours, only accessible by you, and that you
  are not using a Proxy or VPN service at the time.
- Every residential proxy plan offers access to over 195 locations worldwide.
- Proxy authentication can be done using either a username and password or by IP-based
  whitelisting.
- You can manually specify a custom duration of up to 24 hours.
- The longer the session you have, the more chances there are that the IP will rotate
  before your specified time due to the residential device at the end going offline.
- Note that you have to use the gate.decodo.com endpoint to use SOCKS5.
- You must choose between city targeting and ASN targeting, as they can’t be used
  simultaneously.
- The same logic would apply for the continent, state, and country parameters.
- The default session duration is 10 minutes.
- Adding sessionduration-x to the username will allow the session to persist for up
  to 24 hours.
- Any integer between 1 and 1440 is accepted for session length.
- Adding sessionduration-x to the endpoint will allow the session to persist for up
  to 24 hours.
- Any integer between 1 and 1440 is accepted for session duration.
- Whitelisted IP authentication only supports HTTPS requests.
- IPv6 IP addresses are currently unsupported for Whitelisted IP authentication.
- The default sticky session time is 10 minutes.
- Proxies use gate.decodo.com:7000 for random requests
- If you’re using services such as Amazon Web Services, we highly recommend using
  the traditional username:password authentication instead.
- Every mobile proxy plan offers access to over 160 locations worldwide.
- The IP address will remain the same for the specified duration with sticky sessions.
- A new proxy IP is assigned every time with rotating sessions.
- Use the gate.decodo.com endpoint to use SOCKS5.
- You must choose between city targeting and asn targeting, as they can’t be used
  simultaneously.
- The session automatically expires within 10 minutes by default.
- Username line will always start with user- followed by your proxy username.
- Default session duration is 10 minutes
- Any integer between 1 and 1440 is accepted for session duration
- The longest possible proxy session is 1440 minutes.
- Mobile Proxies have further limitations due to risk mitigation reasons.
- ID verification may be required to grant access to specific targets.
- For ISP Pay/GB Proxies a location can only be specified when using the user:pass
  authentication method. Otherwise, you can only select a random location with a whitelisted
  IP.
- Static – Ports 10001-63000 provide a static IP address that remains until you decide
  to change it or the session ends.
- Rotating – Port 10000 rotates the IP address on every request you make.
- Ports 10001-63000 provide a static IP address that remains until you decide to change
  it or the session ends.
- Port 10000 rotates the IP address on every request you make.
- 'Only the following ports are accessible: 80, 443, 563, 8443, 43'
- Currently, restricted ports and any others not mentioned in the Accessible Ports
  list cannot be unblocked for Static Residential (ISP) proxies.
- Currently available countries include Australia, Belgium, Canada, France, Germany,
  Hong Kong, Italy, Japan, Netherlands, Poland, Spain, Sweden, United Kingdom, and
  United States.
- Static residential (ISP) Pay/GB proxies are limited up to 10000 threads.
- The amount of limited threads is distributed equally among all proxy users.
- Bandwidth limitations may apply
- A location or IP can only be specified when using the user:pass authentication method.
- Ports 10001-63000 provide a static IP address that remains until you change it or
  the session ends.
- Port 10000 rotates the IP on every request.
- Restricted ports include SMTP, IMAP, and other mailing and messaging related ports.
- Some objects may return nulls in deeply nested fields
- The fair usage policy affects unlimited Static Residential (ISP) Pay/IP bandwidth
  options to maintain service consistency.
- Multiple threads represent the number of sessions available at the same time.
- IP pool availability may be limited based on the amount of IPs purchased.
- For Dedicated ISP Proxies, a location or IP can only be specified when using the
  user:pass authentication method.
- You can control the IP selection and location by adding parameters.
- Ports 10001-63000 provide a static IP lasting until you decide to change the IP/session.
- Static Residential (ISP) proxies support HTTP, HTTPS, and SOCKS5 formats
- The Fair Usage Policy affects Dedicated ISP Proxies to maintain service consistency.
- Once your usage exceeds the traffic limits described above, we take measures to
  ensure fair usage across all users and reduce the number of concurrent sessions
  available for the remaining subscription period.
- For Datacenter Pay/GB Proxies a location can only be specified when using the user:pass
  authentication method.
- Datacenter endpoint will keep the same static IP.
- Rotating endpoint will rotate the IP on every request.
- Datacenter Pay/GB proxies support HTTP, HTTPS, and SOCKS5 formats.
- Currently, restricted ports and any others not mentioned in the Accessible Ports
  list cannot be unblocked for Datacenter proxies.
- 'Currently available countries with Datacenter Pay/GB proxies: Australia, Brazil,
  Canada, China, France, Germany, Hong Kong, Italy, India, Israel, Japan, Netherlands,
  Romania, Singapore, South Korea, Turkey, United Kingdom, United States.'
- Datacenter Pay/GB proxies are limited up to 10000 threads.
- For ISP Pay/IP Proxies, a location or IP can only be specified when using the user:pass
  authentication method.
- Session type that changes your IP with every request.
- Session type that keeps the same IP.
- Datacenter Pay/IP proxies support HTTP, HTTPS, and SOCKS5 formats
- 'Currently available countries include: Australia, Brazil, Canada, China, France,
  Germany, Hong Kong, Italy, India, Israel, Japan, Netherlands, Romania, Singapore,
  South Korea, Turkey, United Kingdom, United States.'
- The Fair Usage Policy affects unlimited Datacenter Pay/IP bandwidth options to maintain
  service consistency.
- Depending on the amount of IPs you purchase, for some countries, due to a limited
  IP pool, these options may not available during checkout, and not all IPs may be
  refreshed during the subscription period.
- At present, support is limited to the USA location only.
- Static Ports 10001-63000 provide a static IP address that remains until you decide
  to change it or the session ends.
- Ports `10001`-`63000` provide a static IP lasting until you decide to change the
  IP/session.
- Port `10000` rotates the IP on every request you make.
- Dedicated Datacenter Proxies Support HTTP, HTTPS, and SOCKS5 Formats
- Currently, only the USA location is available countries with Dedicated Datacenter
  proxies.
- The dynamic threshold is calculated as 100GB for every IP.
- Session IDs can be associated with a unique proxy for multiple requests within a
  10-minute timeframe.
- Accepts geolocation values like country, state, city, or coordinates.
- Format for City is 'City, State, Country'.
- Some Amazon targets accept a locale parameter paired with the domain parameter.
- Requires setup of connected app in decodo
- Headers sent through Site Unblocker will be passed directly to the target website.
- The Cookie header does not require any prefix and can be passed directly.
- When forcing headers or cookies, the request will always be charged from your subscription,
  even if the request fails.
- Transforming to Markdown is only available in the Web Advanced and Site Unblocker
  plans.
- Requires setup of connected app in Decodo
- JavaScript rendering is available for dynamically loaded data.
- Some objects like Contact may return nulls in deeply nested fields
- Set proxy_type parameter for different products.
- Enable JavaScript rendering may be required for some targets.
- We Do Not Support Scraping Post-login Data
- A free trial option is available for both the Core and Advanced API product lines.
- You can have both types of subscriptions active at the same time.
- The Basic Authentication Token is a combination of the username and password in
  Base64 encoding.
- Timeout limit for open connections is 150 seconds.
- Results can be retrieved an unlimited number of times within 24 hours of the initial
  request.
- With a single batch you can submit either multiple queries or urls, but not both.
- Some target templates support query parameter, otherwise url is required.
- Advanced subscriptions are required for JavaScript rendering.
- All requests to Scraper API products return the following headers.
- The following headers are deprecated and will be removed from responses in the future.
- fetch_resource cannot be combined with any other instructions and can only be used
  with separate requests.
- Parsing instructions allow you to manually select website elements for parsing.
- Set the headless parameter to png to receive a base64-encoded screenshot in the
  response payload.
- This feature is available with Web API Advanced plans.
- Uses OAuth2 — requires setup of application in Twitter Developer Portal
- Some endpoints may have rate limits
- Supported with the Advanced plan.
- This will change the search page web interface language (not the results).
- Specialized unblocking strategies – ensure high success rates.
- Target specific parameters – optimized settings for select targets.
- Dedicated parsers – pre-built parsing solutions for supported targets.
- Amazon specific geo parameter should be used with Advanced plans.
- Some exceptions for Amazon domains in geo parameter values.
- You can scrape Google target with Core plans as well by providing page URL.
- AI Overview content is generated dynamically by Google and is subject to caching.
- Downloading videos requires logging in with a TikTok account.
- Using the universal target, along with manually changing tt_chain_token will overcome
  blocks.
- The youtube_video target only supports asynchronous and batch integrations.
- Batch youtube_video requests are limited to 100 video per request.
- Videos must be up to 3 hours in length in order to be downloadable.
- Scraper API does not currently support showing download progress or indicating upload
  failures.
- Extract from JSON response
- Parsing is set to 'true' by default for this source - it is required to successfully
  scrape the results.
- Prices and availability may vary.
- Google AI Mode is currently available only in the United States.
- Skip-the-line tickets are highly recommended for the Eiffel Tower, Louvre, and other
  busy spots.
- Visit off-peak in April, early May, September, or early October for better prices
  and fewer crowds.
- This target does not support batch requests.
- 'The top 3 tips to improve productivity while working from home are: Create a dedicated
  workspace, Establish a consistent routine and clear working hours, Limit distractions
  and take regular breaks.'
- Max date return interval is 180 days.
- Scraper API is most actively used on-the-hour (12:00, 21:00, etc.) throughout the
  day. When making a significant number of synchronous requests, consider splitting
  the requests across minute intervals (12:05, 12:10, etc) to avoid having requests
  hang at peak times.
- The following migration steps should be done before 1st July 2025.
- 24/7 customer support available
- 'Support email: support@decodo.com'
- X Browser is a multi-session browser offering anonymous fingerprint profile management.
- 'Two browsing options to connect: Quick Connect and + New profile.'
- Use Stackoverflow.com to log in with Google for Google services.
- SOCKS5 is currently disabled.
- Only HTTP and HTTPS are available. SOCKS5 is currently disabled.
- When accessing a website, enter your proxy user credentials.
- Proxy authentication may require inputting credentials unless using a Whitelisted
  IP.
- User:pass Authentication required for non-whitelisted IPs
- To see if the proxy is working, check the IP on ip.decodo.com.
- Custom name and Tags fields are optional.
- Visit ip.decodo.com to check the current IP address and location.
- Selenium itself doesn't support username:password authentication for HTTP/HTTPS
  proxies; therefore, you'll need to have your IP whitelisted.
- Proxies will be active during the session you have set them up for.
- If you have the proxies set up using HTTPS protocol, you will not be able to check
  them in the setup page.
- Please be aware that we restrict access to some domains.
- Users must register the account directly on the app; it would not work via another
  browser.
- Access to some domains is restricted.
- Proxy Configuration Guides for Scrapers
- Octoparse only offers IP:PORT based format to authenticate through a proxy network.
- You can whitelist your IP after logging into our dashboard.
- Make sure that you are not checking the status of the proxies in the Proxy Editor
  as you will get negative results. ScrapeBox does not support checks on backconnect
  proxies used by Decodo.
- This set-up will only work on browsers. Phone applications will not work with the
  proxy.
- The names of settings in the mobile network guide will differ depending on your
  Android version.
- Setup will only work on browsers. Phone applications will not work with the proxy.
- Potatso App is only available on an iPhone App Store
- Shadowrocket is a paid app and is only available on an iPhone App Store
- The Tun2Socks App setup with our proxies will only work on an Android phone
- You must use the gate.decodo.com endpoint and the 7000 port to utilize SOCKS5
- Uses OAuth2 for authentication
- Stackposts is a third-party tool that does not run locally on your machine. Therefore,
  whitelist IP authentication for this tool is not available.
- Requires OAuth2 authentication.
- Check rate limits to avoid throttling.
- Please send your request from the email address linked to the account you want to
  delete.
- We might require additional verification steps for security purposes when you want
  to change your account’s email address.
- We don’t provide services for users from Russia or Belarus.
- Users must be over 18 years old to access our services.
- We decline all ID verification requests when we identify the submission of fake
  documents.
- Enterprise subscriptions are non-refundable. We strongly advise testing our proxies
  first with a free trial or smaller plan before committing to Enterprise-level subscriptions.
- Only residential proxies currently support access to target groups through ID verification.
- Target group unblocking is not available for the trial.
- Only owner and admins can invite new users
- Owner role cannot be edited
- The referral program does not apply for refunded payments.
- If you refund a subscription or a wallet payment to the original payment method,
  the referral program will cease.
- If the friend you referred refunds or charges back the payment to the original payment
  method, bonuses will not be paid.
- Webhooks are global for all proxy types - you can’t configure webhooks for different
  proxy types.
- Alipay is available exclusively in the Asia region.
- Currently, Alipay does not support Datacenter Pay/IP plans, Static Residential (ISP)
  Pay/IP plans, and Residential trials.
- Please ensure that you do not use a VPN while making a purchase to avoid checkout
  errors.
- Alipay payments might take 2-4 business days to process.
- Bundle deals will only appear for clients, who have not purchased Mobile proxies
  in the past.
- You will not receive the offer when purchasing the Pay As You Go.
- If the customer paid too little, they can still send the remaining amount.
- If the user has overpaid, CoinGate will provide a refund option to return the excess
  amount.
- Pay As You Go can only be purchased using funds in your Smart Wallet.
- Pay As You Go cannot be activated with an active monthly subscription.
- Transactions coming directly from PayPal account will be declined by our payment
  processor due to high risk of fraudulent transactions.
- 14-day money-back option does not apply when the free trial is activated.
- Wallet token or cryptocurrency upgrades are not supported while the trial is active.
- Ensure proper API key permissions are set.
- Our server's IP may change at any time.
- We do not recommend using this format unless it's absolutely necessary.
- Using any other database to check the proxy IP location may lead to location mismatches,
  which are incorrect.
- IP location does not match
- The recommended subscription plan tag will be visible to you in the Pricing page.
  It will not impact any of your purchases as it is only a recommendation.
- 'Many things can affect the speed of a residential proxy: a different ISP, location,
  mobile signal strength, etc.'
- Due to the nature of residential proxies, some IPs are faster than others.
- The tool you use can also affect the proxy speed.
- The most common way to avoid SSL errors is to make sure that your browser/tool/code
  is up to date.
- Using outdated software may cause SSL version mismatches which will then eliminate
  the option to access a certain website.
- Make sure that your device is using the correct time settings and has all the necessary
  security updates.
- If you keep running into SSL errors, try downgrading your Chrome to v72.
- Ensure you are connected to the internet and have connection ports open.
- Using the correct proxy address and a valid port is required.
- If a website doesn't load, make sure you're able to load other websites.
- You might also be experiencing a speed issue. Try to change the endpoint and/or
  port to fix this.
- Residential or Mobile proxies work best to maintain a human-like connection.
- IP availability can vary when selecting a smaller location due to the fluctuating
  IP pool.
- Web scraping requires careful execution to ensure consistency and efficiency.
- Best practices for scraping using proxies.
- Feedback section suggests missing articles for improvement.
- If you are using a bot, try different endpoints or rotating ports for our service.
- Try randomizing your request times on the application if possible.
- If you are writing custom code for a scraper/crawler type of application, make sure
  that you have a huge list of different user-agents, which will help cover your tracks
  while visiting the website.
- Avoid or never use direct links in your bots that are not publicly available on
  the website page without looking at its source code.
- If possible, sway your traffic by visiting and following paths provided by the website
  rather than asking for a certain link directly constantly.
- Make sure that you limit your requests and are not causing damage to the website.
- If possible, use a headless browser provided by such frameworks as Selenium.
- Check the website source code, make sure that your bot/crawler, etc., is rendering
  all the necessary elements, such as Javascript code.
- Use different accounts for each region.
- Use city-specific proxies to post in the according region.
- One ad per section per 48 hours.
- A safe rule to avoid getting flagged/ghosted.
- Localize ads for each region.
- Avoid spamming the same ad.
- Don't post everything at once.
- Supports various integrations for browsers, operating systems, and smartphones.
errors:
- '401 Unauthorized: Check your authentication credentials.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Bad Request'
- '400: error_code, message'
- '407 Proxy Authentication Error: Ensure credentials are correct'
- 'HTTP Response Codes: Check API response codes for troubleshooting'
- '407 Proxy Authentication Error: Ensure correct username and password'
- 'Premature Rotation: The longer the session you have, the more chances there are
  that the IP will rotate before your specified time due to the mobile device at the
  end going offline.'
- '407 Proxy Authentication Error: Ensure credentials are correct.'
- 'HTTP Response Codes: Refer to the documentation for error codes.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- Traffic per individual IP exceeds 100GB and total traffic usage for a subscription
  period exceeds 10TB.
- '407 Proxy Authentication Required: If you cannot authenticate with proxy user credentials,
  then change your password.'
- Thread limits are distributed among all proxy users.
- 'Unauthorized: Check username and password for proxy authentication.'
- '401 Unauthorized: Check username and password.'
- '400: Bad request - Incorrect request structure. Possibly misspelled parameter or
  an invalid value. The response body will have a more specific error message'
- '401: Auth failed - The authorization header is missing, or your credentials are
  incorrect'
- '403: Forbidden - Your account does not have access to this resource on the target
  website'
- '404: Not found - The target website server understands the request but refuses
  to authorize it'
- '408: Timeout - The request took too long to respond'
- '429: Too many requests - You have exceeded the rate limit'
- '500, 502, 503: Internal Server Error - We''re experiencing some issues on our side.
  Please try again a bit later. We''re probably aware of the issues, but you can contact
  us via Live chat.'
- '550: Faulted After Too Many Retries - Something went wrong, and we were unable
  to complete the job you submitted. You can try again at no extra cost, as we don''t
  charge you for faulty jobs.'
- '500 Internal Server Error: Indicates a failure in the target.'
- 'HTTP status code 200: Successful response.'
- 'Error: Unable to connect'
- 'Error: Invalid task_id'
- 'Invalid subscription: Ensure you have an Advanced subscription for JavaScript rendering.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check API keys and permissions'
- Invalid geo parameter for certain Amazon domains.
- '403 Forbidden: Check your authentication credentials.'
- '404 Not Found: Verify the endpoint path.'
- '204: Download is still processing'
- '200: Download has finished'
- '400: Bad structure of the request. Recheck your request to ensure it is in the
  correct format.'
- '401: Incorrect login credentials or missing authorization. Re-check your provided
  credentials for authorization.'
- '403: Your account does not have access to this resource. Contact us for more information.'
- '404: Your target was not found. Re-check your targeted URL.'
- '429: Exceeded rate limit for your subscription. Make sure you still have at least
  one request left. Wait a couple of minutes and try again. If you encounter the error
  often, contact us to see if your rate limit can be increased.'
- '500: Service unavailable, possibly due to some issues we are encountering. Wait
  a couple of minutes and send another request. Contact us for more information.'
- '524: Service unavailable, possibly due to some issues we are encountering. Wait
  a couple of minutes and send another request. Contact us for more information.'
- '613: After multiple attempts, our scraper was unable to scrape the provided URL
  or query. Try sending the request again. If this error repeats, contact us, and
  we will help you out!'
- '407 Proxy Authentication Error: Recheck proxy authentication settings.'
- Unable to connect with the credentials provided.
- Unsuccessful request. Try changing the location or the session type and connect
  again.
- Unsuccessful request. Try changing the location or the proxy rotation type and connect
  again.
- Unsuccessful request. Please ensure that you enter a valid proxy username, password,
  and IP address.
- Too many unsuccessful login attempts. Please try again later.
- No whitelisted IP found, visit the dashboard to manage IPs.
- '407 Proxy Authentication Error: Check username and password.'
- '407 Proxy Authentication Error: Check your proxy username and password.'
- '407 Proxy Authentication Error: Ensure correct proxy username and password.'
- '407 Proxy Authentication Error: Check IP:PORT format.'
- 'Unable to connect proxies: Verify proxy settings.'
- '407 Proxy Authentication Error: Ensure correct proxy credentials are provided'
- 'RATE_LIMIT_EXCEEDED: Reduce request frequency'
- 'UNAUTHORIZED: Verify token validity'
- 'Geographical restrictions: We don’t provide services for users from Russia or Belarus.'
- 'Age restrictions: Users must be over 18 years old.'
- 'Document authenticity: We decline requests with fake documents.'
- If payments take longer to process than described, contact support.
- This payment was declined by your bank. Please try again, or use a different payment
  method.
- $1 transaction may appear for free trials as a pre-authentication but no charge
  will be made.
- 407 Proxy Authentication Error
- '407 Proxy Authentication Required: Double-check your user:pass credentials in the
  Decodo Dashboard.'
- '403 Forbidden: Check API key permissions'
- '404 Not Found: Verify endpoint URL'
- '429 Too Many Requests: Rate limit exceeded'
- code: 400
  message: Bad request
  description: The proxy server can return this error code if the request did not
    contain a host to connect to or there was a generic error when parsing the HTTP
    request. Make sure your request is correctly formed. Include the URL in the request,
    and then try again.
- code: 401
  message: Unauthorized
  description: The proxy server returns this error when your request fails authentication
    on the target website. Make sure that you provide the correct authentication information
    for the website alongside the request.
- code: 403
  message: Forbidden
  description: The proxy server returns this error when its access to the target website
    has been blocked. Please try using a different proxy server location or ports.
- code: 404
  message: Not Found
  description: The server could not find the requested resources. Usually thrown when
    requesting a broken/dead link. Make sure you did not mistype the link.
- code: 407
  message: Proxy Authentication Required
  description: Request lacks proxy authentication information, or the username or
    password is invalid. Include Proxy Authentication header in your request, and
    make sure your username and password are formed correctly. Then, try again.
- code: 408
  message: Request Timeout
  description: The requested server has closed the connection due to a timeout, regardless
    of the value set. Try sending the request again. If the issue persists, try changing
    the endpoint or session type to match your request.
- code: 500
  message: Internal Server Error
  description: The proxy server has encountered an internal error. Retry the request
    at a later time.
- code: 502
  message: Bad Gateway
  description: The proxy server received an invalid response from the upstream server.
    Retry request.
- code: 503
  message: Service Unavailable
  description: Usually means that the server (which in this context can mean either
    the proxy server or the targeted resource) is currently down or heavily overloaded
    and cannot provide a normal response. Retry your request and check whether your
    targeted resource is not under maintenance.
- code: 504
  message: Gateway Timeout
  description: The proxy server did not receive a response from the upstream server
    in time. Retry request.
- code: 522
  message: Connect Timeout
  description: The custom HTTP status code means that the proxy connection timed out
    during the CONNECT phase.
- code: 525
  message: No Exit Found
  description: A custom HTTP status code means the proxy was unable to find an exit
    node that satisfies the request. Change request filter parameters or try again
    at a later time.
- HTTP Response Codes
- '407 Proxy Authentication Error: Hit monthly traffic limit'
- IP location does not match
- '401 Unauthorized: Recheck authentication methods'
- HTTP Error codes
- '401 Unauthorized: Check your API key and permissions.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://dashboard.decodo.com
  headers:
    Accept: application/json
source_metadata: null
