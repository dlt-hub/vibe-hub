resources:
- name: data_source
  endpoint:
    path: /data-source
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /database
    method: GET
    data_selector: records
    params: {}
- name: data_source
  endpoint:
    path: /api/data/source
    method: GET
    data_selector: data
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: remote_sid
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YSC
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-add
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /services/data/v1/databases
    method: GET
    data_selector: records
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-add
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-add
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
- name: ziwsSessionId
  endpoint:
    path: /ziwsSessionId
    method: GET
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
- name: lastExternalReferrerTime
  endpoint:
    path: /lastExternalReferrerTime
    method: GET
- name: log/error
  endpoint:
    path: /log/error
    method: GET
- name: topicsLastReferenceTime
  endpoint:
    path: /topicsLastReferenceTime
    method: GET
- name: _fbp
  endpoint:
    path: /_fbp
    method: GET
- name: adroll_flgs
  endpoint:
    path: /adroll_flgs
    method: GET
- name: CMID
  endpoint:
    path: /CMID
    method: GET
- name: CMPRO
  endpoint:
    path: /CMPRO
    method: GET
- name: CMPS
  endpoint:
    path: /CMPS
    method: GET
- name: rum
  endpoint:
    path: /rum
    method: GET
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
- name: tuuid_lu
  endpoint:
    path: /tuuid_lu
    method: GET
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
- name: drift_campaign_refresh
  endpoint:
    path: /drift_campaign_refresh
    method: GET
- name: DRIFT_SESSION_CAMPAIGNS
  endpoint:
    path: /DRIFT_SESSION_CAMPAIGNS
    method: GET
- name: IDE
  endpoint:
    path: /IDE
    method: GET
- name: NID
  endpoint:
    path: /NID
    method: GET
- name: pagead/1p-user-list/#
  endpoint:
    path: /pagead/1p-user-list/#
    method: GET
- name: _ga
  endpoint:
    path: /_ga
    method: GET
- name: _gid
  endpoint:
    path: /_gid
    method: GET
- name: __ptq.gif
  endpoint:
    path: /__ptq.gif
    method: GET
- name: privacy_sandbox/topics/registration/
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
- name: tv_UIDM
  endpoint:
    path: /tv_UIDM
    method: GET
- name: tvid
  endpoint:
    path: /tvid
    method: GET
- name: i/jot/embeds
  endpoint:
    path: /i/jot/embeds
    method: GET
- name: '#-#'
  endpoint:
    path: /#-#
    method: GET
- name: __Secure-ROLLOUT_TOKEN
  endpoint:
    path: /__Secure-ROLLOUT_TOKEN
    method: GET
- name: __Secure-YEC
  endpoint:
    path: /__Secure-YEC
    method: GET
- name: iU5q-!O9@$
  endpoint:
    path: /iU5q-!O9@$
    method: GET
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /logs/last_result_entry
    method: GET
- name: remote_sid
  endpoint:
    path: /logs/remote_sid
    method: GET
- name: SERVICE_WORKER_LOGS
  endpoint:
    path: /logs/service_worker
    method: GET
- name: data_source
  endpoint:
    path: /api/data-sources
    method: GET
    data_selector: dataSources
- name: query
  endpoint:
    path: /api/query
    method: POST
    data_selector: results
- name: lastExternalReferrer
  endpoint:
    path: /privacy/lastExternalReferrer
    method: GET
- name: lastExternalReferrerTime
  endpoint:
    path: /privacy/lastExternalReferrerTime
    method: GET
- name: data_source
  endpoint:
    path: /api/data-source
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: knowledge_graphs
  endpoint:
    path: /api/knowledge-graphs
    method: GET
    data_selector: graphs
    params: {}
- name: databases
  endpoint:
    path: /api/databases
    method: GET
    data_selector: databases
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
- name: db
  endpoint:
    path: /stardog-admin-cli-reference/db/
    method: GET
- name: AWS Athena
  endpoint:
    path: AthenaJDBC42_2.0.7.jar
    method: GET
    data_selector: records
    params: {}
- name: Databricks SQL
  endpoint:
    path: databricks-jdbc-2.6.25.jar
    method: GET
    data_selector: records
    params: {}
- name: MongoDB
  endpoint:
    path: mongo-java-driver-3.8.2.jar
    method: GET
    data_selector: records
    params: {}
- name: MySQL & MariaDB
  endpoint:
    path: mysql-connector-java-8.0.25.jar
    method: GET
    data_selector: records
    params: {}
- name: PostgreSQL
  endpoint:
    path: postgresql-42.2.5.jar
    method: GET
    data_selector: records
    params: {}
- name: Snowflake
  endpoint:
    path: snowflake-jdbc-3.13.25.jar
    method: GET
    data_selector: records
    params: {}
- name: Spark SQL
  endpoint:
    path: SparkJDBC42.jar
    method: GET
    data_selector: records
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/LAST_RESULT_ENTRY_KEY
    method: GET
    data_selector: interaction
    params:
      storage_duration: Session
- name: LogsDatabaseV2
  endpoint:
    path: /cookies/LogsDatabaseV2
    method: GET
    data_selector: interaction
    params:
      storage_duration: Persistent
- name: remote_sid
  endpoint:
    path: /cookies/remote_sid
    method: GET
    data_selector: functionality
    params:
      storage_duration: Session
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /cookies/ServiceWorkerLogsDatabase
    method: GET
    data_selector: functionality
    params:
      storage_duration: Persistent
- name: TESTCOOKIESENABLED
  endpoint:
    path: /cookies/TESTCOOKIESENABLED
    method: GET
    data_selector: interaction
    params:
      storage_duration: 1 day
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /cookies/VISITOR_INFO1_LIVE
    method: GET
    data_selector: bandwidth_estimation
    params:
      storage_duration: 180 days
- name: YSC
  endpoint:
    path: /cookies/YSC
    method: GET
    data_selector: statistics
    params:
      storage_duration: Session
- name: user_invitation
  endpoint:
    path: /invite/users
    method: POST
    data_selector: users
    params: {}
- name: data_source
  endpoint:
    path: /data-source
    method: GET
    data_selector: records
    params: {}
- name: knowledge_graph
  endpoint:
    path: /knowledge-graph
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: datasets
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: user_interaction
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: records
- name: topicsLastReferenceTime
  endpoint:
    path: /topicsLastReferenceTime
    method: GET
    data_selector: records
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/last_result_entry_key
    method: GET
    data_selector: interaction
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: /cookies/logs_database_v2
    method: GET
    data_selector: interaction
    params: {}
- name: remote_sid
  endpoint:
    path: /cookies/remote_sid
    method: GET
    data_selector: functionality
    params: {}
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /cookies/service_worker_logs_database
    method: GET
    data_selector: functionality
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: /cookies/testcookiesenabled
    method: GET
    data_selector: interaction
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /cookies/visitor_info1_live
    method: GET
    data_selector: bandwidth_estimation
    params: {}
- name: YSC
  endpoint:
    path: /cookies/ysc
    method: GET
    data_selector: video_statistics
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /api/v1/data-source
    method: GET
    data_selector: dataSources
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /api/data-source
    method: GET
    data_selector: data
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: functions
    params: {}
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: licenses
    params: {}
- name: data_source
  endpoint:
    path: /api/data
    method: GET
    data_selector: records
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: debian_installation
  endpoint:
    path: /debian/installation
    method: GET
    data_selector: commands
    params: {}
- name: rpm_installation
  endpoint:
    path: /rpm/installation
    method: GET
    data_selector: commands
    params: {}
- name: amazon_ec2_installation
  endpoint:
    path: /amazon/ec2/installation
    method: GET
    data_selector: commands
    params: {}
- name: license_key
  endpoint:
    path: /license/key
    method: GET
    data_selector: instructions
    params: {}
- name: package_layout
  endpoint:
    path: /package/layout
    method: GET
    data_selector: instructions
    params: {}
- name: customize_environment
  endpoint:
    path: /customize/environment
    method: GET
    data_selector: instructions
    params: {}
- name: stardog_server
  endpoint:
    path: /server/status
    method: GET
    data_selector: status
- name: function_add
  endpoint:
    path: /stardog-admin-cli-reference/function/function-add
    method: GET
- name: function_list
  endpoint:
    path: /stardog-admin-cli-reference/function/function-list
    method: GET
- name: function_remove
  endpoint:
    path: /stardog-admin-cli-reference/function/function-remove
    method: GET
- name: license_info
  endpoint:
    path: /stardog-admin-cli-reference/license/license-info
    method: GET
- name: license_request
  endpoint:
    path: /stardog-admin-cli-reference/license/license-request
    method: GET
- name: log_print
  endpoint:
    path: /stardog-admin-cli-reference/log/log-print
    method: GET
- name: metadata_convert
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-convert
    method: GET
- name: metadata_get
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-get
    method: GET
- name: metadata_set
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-set
    method: GET
- name: installation_directory
  endpoint:
    path: D:\Users\stardog\stardogs\stardog-7.4.0
    method: SET
    data_selector: parameters
    params: {}
- name: STARDOG_HOME
  endpoint:
    path: D:\Users\stardog\stardog_home
    method: SET
    data_selector: parameters
    params: {}
- name: logs_directory
  endpoint:
    path: D:\Users\stardog\stardogs\stardog-7.4.0\logs
    method: SET
    data_selector: parameters
    params: {}
- name: JAVA_HOME
  endpoint:
    path: C:\Program Files\Microsoft\jdk-11.0.18.10-hotspot
    method: SET
    data_selector: parameters
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /LAST_RESULT_ENTRY_KEY
    method: GET
    data_selector: interaction
    params: {}
- name: remote_sid
  endpoint:
    path: /remote_sid
    method: GET
    data_selector: video-content
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: /TESTCOOKIESENABLED
    method: GET
    data_selector: interaction
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /VISITOR_INFO1_LIVE
    method: GET
    data_selector: bandwidth-estimate
    params: {}
- name: YSC
  endpoint:
    path: /YSC
    method: GET
    data_selector: video-stats
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: functions
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: licenses
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
    data_selector: logs
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
    data_selector: metadata
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
    data_selector: properties
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
    data_selector: processes
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
    data_selector: queries
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
    data_selector: roles
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
    data_selector: sensitiveProperties
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
    data_selector: servers
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
    data_selector: storedItems
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
    data_selector: users
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
    data_selector: virtuals
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
    data_selector: zk
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
- name: ziwsSessionId
  endpoint:
    path: /ziwsSessionId
    method: GET
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
- name: lastExternalReferrerTime
  endpoint:
    path: /lastExternalReferrerTime
    method: GET
- name: log/error
  endpoint:
    path: /log/error
    method: GET
- name: topicsLastReferenceTime
  endpoint:
    path: /topicsLastReferenceTime
    method: GET
- name: _fbp
  endpoint:
    path: /_fbp
    method: GET
- name: adroll_flgs
  endpoint:
    path: /adroll_flgs
    method: GET
- name: CMID
  endpoint:
    path: /CMID
    method: GET
- name: CMPRO
  endpoint:
    path: /CMPRO
    method: GET
- name: CMPS
  endpoint:
    path: /CMPS
    method: GET
- name: rum
  endpoint:
    path: /rum
    method: GET
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
- name: tuuid_lu
  endpoint:
    path: /tuuid_lu
    method: GET
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
- name: drift_campaign_refresh
  endpoint:
    path: /drift_campaign_refresh
    method: GET
- name: DRIFT_SESSION_CAMPAIGNS
  endpoint:
    path: /DRIFT_SESSION_CAMPAIGNS
    method: GET
- name: IDE
  endpoint:
    path: /IDE
    method: GET
- name: NID
  endpoint:
    path: /NID
    method: GET
- name: pagead/1p-user-list/#
  endpoint:
    path: /pagead/1p-user-list/#
    method: GET
- name: pagead/gen_204/
  endpoint:
    path: /pagead/gen_204/
    method: GET
- name: _ga
  endpoint:
    path: /_ga
    method: GET
- name: _ga_#
  endpoint:
    path: /_ga_#
    method: GET
- name: _gcl_au
  endpoint:
    path: /_gcl_au
    method: GET
- name: _gid
  endpoint:
    path: /_gid
    method: GET
- name: _gcl_ls
  endpoint:
    path: /_gcl_ls
    method: GET
- name: __ptq.gif
  endpoint:
    path: /__ptq.gif
    method: GET
- name: privacy_sandbox/topics/registration/
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
- name: tv_UIDM
  endpoint:
    path: /tv_UIDM
    method: GET
- name: tvid
  endpoint:
    path: /tvid
    method: GET
- name: i/jot/embeds
  endpoint:
    path: /i/jot/embeds
    method: GET
- name: '#-#'
  endpoint:
    path: /#-#
    method: GET
- name: __Secure-ROLLOUT_TOKEN
  endpoint:
    path: /__Secure-ROLLOUT_TOKEN
    method: GET
- name: __Secure-YEC
  endpoint:
    path: /__Secure-YEC
    method: GET
- name: iU5q-!O9@$
  endpoint:
    path: /iU5q-!O9@$
    method: GET
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: url
    params: {}
- name: CMID
  endpoint:
    path: /CMID
    method: GET
    data_selector: visitorData
    params: {}
- name: Customers
  endpoint:
    path: /api/customers
    method: POST
    data_selector: records
- name: Locations
  endpoint:
    path: /api/locations
    method: POST
    data_selector: records
- name: Purchases
  endpoint:
    path: /api/purchases
    method: POST
    data_selector: records
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: remote_sid
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: YSC
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: Not Provided
    method: Not Provided
    data_selector: Not Provided
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: music_data
  endpoint:
    path: stardog-tutorial:music:music_data
    method: SELECT
    data_selector: results
    params: {}
- name: music_data
  endpoint:
    path: /stardog-tutorial/music/music_data
    method: SELECT
    data_selector: results
    params: {}
- name: albums_artists
  endpoint:
    path: /02-albums-artists.sparql
    method: SELECT
    data_selector: '*'
    params: {}
- name: music_data
  endpoint:
    path: /stardog-tutorial/music/music_data
    method: SELECT
    data_selector: results
    params: {}
- name: albums
  endpoint:
    path: /04b-albums-dates.sparql
    method: SELECT
    data_selector: '*'
- name: Stardog Server
  endpoint:
    path: /opt/stardog/bin
    method: POST
    data_selector: server start
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
    params: {}
- name: music_data
  endpoint:
    path: /stardog-tutorial/music/music_data
    method: GET
    data_selector: results
    params: {}
- name: music_data
  endpoint:
    path: /stardog-tutorial/music/music_data
    method: GET
    data_selector: results
    params: {}
- name: albums
  endpoint:
    path: /sparql
    method: GET
    data_selector: results
    params:
      query: SELECT * { ?album a :Album ; :artist ?artist ; :date ?date }
- name: albums_years
  endpoint:
    path: /query
    method: POST
    data_selector: results
    params: {}
- name: albums_dates_minmax
  endpoint:
    path: /query
    method: POST
    data_selector: results
    params: {}
- name: predicate_count
  endpoint:
    path: /query
    method: POST
    data_selector: results
    params: {}
- name: music_data
  endpoint:
    path: /stardog-tutorial/music/music_data
    method: GET
    data_selector: results
    params: {}
- name: data_source
  endpoint:
    path: /data-source
    method: GET
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-list
    method: GET
- name: license_info
  endpoint:
    path: /stardog-admin-cli-reference/license/license-info
    method: GET
- name: log_print
  endpoint:
    path: /stardog-admin-cli-reference/log/log-print
    method: GET
- name: metadata_get
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-get
    method: GET
- name: property_get
  endpoint:
    path: /stardog-admin-cli-reference/property/property-get
    method: GET
- name: ps_list
  endpoint:
    path: /stardog-admin-cli-reference/ps/ps-list
    method: GET
- name: query_list
  endpoint:
    path: /stardog-admin-cli-reference/query/query-list
    method: GET
- name: role_list
  endpoint:
    path: /stardog-admin-cli-reference/role/role-list
    method: GET
- name: user_list
  endpoint:
    path: /stardog-admin-cli-reference/user/user-list
    method: GET
- name: namespace_list
  endpoint:
    path: /stardog-admin-cli-reference/namespace/namespace-list
    method: GET
- name: query_execute
  endpoint:
    path: /stardog-admin-cli-reference/query/query-execute
    method: POST
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: LogsDatabaseV2:V#||LogsRequestsStore
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: remote_sid
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YSC
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: adroll_dqs
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: WMF-Uniq
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: seenArticlesArray
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: music_data
  endpoint:
    path: /stardog-tutorial/music
    method: POST
    data_selector: results
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: records
- name: db
  endpoint:
    path: /stardog-admin-cli-reference/db/
    method: GET
    data_selector: records
- name: albums_by_year
  endpoint:
    path: /albums_by_year
    method: GET
    data_selector: results
    params: {}
- name: albums_with_duplicate_dates
  endpoint:
    path: /albums_with_duplicate_dates
    method: GET
    data_selector: results
    params: {}
- name: Customers
  endpoint:
    path: /path/to/customers
    method: POST
    data_selector: records
    params: {}
- name: Locations
  endpoint:
    path: /path/to/locations
    method: POST
    data_selector: records
    params: {}
- name: Purchases
  endpoint:
    path: /path/to/purchases
    method: POST
    data_selector: records
    params: {}
- name: music_data
  endpoint:
    path: /stardog-tutorial/music/music_data
    method: POST
    data_selector: results
    params: {}
- name: albums_grouped_by_year
  endpoint:
    path: /albums/grouped_by_year
    method: GET
    data_selector: results
    params: {}
- name: albums_with_duplicate_dates
  endpoint:
    path: /albums/duplicate_dates
    method: GET
    data_selector: results
    params: {}
- name: average_albums_per_year
  endpoint:
    path: /albums/average_per_year
    method: GET
    data_selector: results
    params: {}
- name: artists
  endpoint:
    path: /artists
    method: GET
    data_selector: results
- name: songs
  endpoint:
    path: /songs
    method: GET
    data_selector: results
    params:
      limit: 5000
- name: music_data
  endpoint:
    path: /stardog-tutorial/music/music_data
    method: GET
    data_selector: results
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /tracks/interactions
    method: GET
    data_selector: interaction_data
- name: LogsDatabaseV2
  endpoint:
    path: /logs/database
    method: GET
    data_selector: log_data
- name: remote_sid
  endpoint:
    path: /youtube/video
    method: GET
    data_selector: video_data
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /serviceworker/logs
    method: GET
    data_selector: serviceworker_log_data
- name: YSC
  endpoint:
    path: /youtube/statistics
    method: GET
    data_selector: statistics_data
- name: music_data
  endpoint:
    path: /stardog-tutorial/music/music_data
    method: GET
    data_selector: results
    params: {}
- name: function list
  endpoint:
    path: /stardog-admin-cli-reference/function/function-list
    method: GET
- name: function remove
  endpoint:
    path: /stardog-admin-cli-reference/function/function-remove
    method: GET
- name: license info
  endpoint:
    path: /stardog-admin-cli-reference/license/license-info
    method: GET
- name: license request
  endpoint:
    path: /stardog-admin-cli-reference/license/license-request
    method: GET
- name: log print
  endpoint:
    path: /stardog-admin-cli-reference/log/log-print
    method: GET
- name: metadata convert
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-convert
    method: GET
- name: metadata get
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-get
    method: GET
- name: metadata set
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-set
    method: GET
- name: property get
  endpoint:
    path: /stardog-admin-cli-reference/property/property-get
    method: GET
- name: property set
  endpoint:
    path: /stardog-admin-cli-reference/property/property-set
    method: GET
- name: ps list
  endpoint:
    path: /stardog-admin-cli-reference/ps/ps-list
    method: GET
- name: query list
  endpoint:
    path: /stardog-admin-cli-reference/query/query-list
    method: GET
- name: role list
  endpoint:
    path: /stardog-admin-cli-reference/role/role-list
    method: GET
- name: user list
  endpoint:
    path: /stardog-admin-cli-reference/user/user-list
    method: GET
- name: namespace list
  endpoint:
    path: /stardog-admin-cli-reference/namespace/namespace-list
    method: GET
- name: query execute
  endpoint:
    path: /stardog-cli-reference/query/query-execute
    method: GET
- name: albums_artists
  endpoint:
    path: /02-albums-artists.sparql
    method: SELECT
    data_selector: '*'
- name: albums_duplicate_dates
  endpoint:
    path: /albums/duplicate_dates
    method: GET
    data_selector: results
    params: {}
- name: songs_length
  endpoint:
    path: /songs/length
    method: GET
    data_selector: results
    params:
      LIMIT: 5000
- name: music_data
  endpoint:
    path: /stardog-tutorial/music/music_data
    method: GET
    data_selector: results
    params: {}
- name: albums
  endpoint:
    path: /albums
    method: SELECT
    data_selector: '*'
- name: music_data
  endpoint:
    path: /kits/tutorial:music:1.0
    method: GET
    data_selector: results
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: interaction
    params: {}
- name: songs_no_length
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: albums_dates_grouped
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: albums_duplicate_dates
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: artists_union
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: artists_reasoning
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: cowriters
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: cowriters_paths
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: bands_writers_ask
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: music_data
  endpoint:
    path: /stardog-tutorial/music/music_data
    method: SELECT
    data_selector: results
- name: music_data
  endpoint:
    path: /stardog-tutorial/music/music_data
    method: GET
    data_selector: results
    params: {}
- name: music_data
  endpoint:
    path: /stardog-tutorial:music:music_data
    method: SELECT
    data_selector: results
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: function_list
  endpoint:
    path: /stardog-admin-cli-reference/function/function-list
    method: GET
- name: license_info
  endpoint:
    path: /stardog-admin-cli-reference/license/license-info
    method: GET
- name: log_print
  endpoint:
    path: /stardog-admin-cli-reference/log/log-print
    method: GET
- name: metadata_get
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-get
    method: GET
- name: property_get
  endpoint:
    path: /stardog-admin-cli-reference/property/property-get
    method: GET
- name: ps_list
  endpoint:
    path: /stardog-admin-cli-reference/ps/ps-list
    method: GET
- name: query_list
  endpoint:
    path: /stardog-admin-cli-reference/query/query-list
    method: GET
- name: role_list
  endpoint:
    path: /stardog-admin-cli-reference/role/role-list
    method: GET
- name: sensitive_property_list
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/sensitive-property-list
    method: GET
- name: server_logs
  endpoint:
    path: /stardog-admin-cli-reference/server/server-logs
    method: GET
- name: stored_list
  endpoint:
    path: /stardog-admin-cli-reference/stored/stored-list
    method: GET
- name: user_list
  endpoint:
    path: /stardog-admin-cli-reference/user/user-list
    method: GET
- name: virtual_list
  endpoint:
    path: /stardog-admin-cli-reference/virtual/virtual-list
    method: GET
- name: zk_info
  endpoint:
    path: /stardog-admin-cli-reference/zk/zk-info
    method: GET
- name: albums
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params:
      limit: 1000
- name: actor
  endpoint:
    path: /actors
    method: GET
    data_selector: records
- name: movie
  endpoint:
    path: /movies
    method: GET
    data_selector: records
- name: albums_years
  endpoint:
    path: /sparql/albums/years
    method: GET
    data_selector: results
    params: {}
- name: albums_dates_minmax
  endpoint:
    path: /sparql/albums/dates/minmax
    method: GET
    data_selector: results
    params: {}
- name: predicate_count
  endpoint:
    path: /sparql/predicate/count
    method: GET
    data_selector: results
    params: {}
- name: query
  endpoint:
    path: /query
    method: POST
    data_selector: results
    params: {}
- name: music_data
  endpoint:
    path: /stardog-tutorial/music/music_data
    method: GET
    data_selector: results
- name: albums
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: albums
  endpoint:
    path: /albums
    method: GET
    data_selector: results
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /track/user-interaction/embedded-content
    method: GET
    data_selector: session
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: /track/user-interaction/embedded-content
    method: GET
    data_selector: persistent
    params: {}
- name: remote_sid
  endpoint:
    path: /implement/youtube/video-content
    method: GET
    data_selector: session
    params: {}
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: /implement/youtube/video-content
    method: GET
    data_selector: persistent
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: /track/user-interaction/embedded-content
    method: GET
    data_selector: 1 day
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /estimate/users/bandwidth/youtube
    method: GET
    data_selector: 180 days
    params: {}
- name: YSC
  endpoint:
    path: /track/user-statistics/youtube
    method: GET
    data_selector: session
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /track/user-interaction/embedded-content
    method: GET
    data_selector: persistent
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: /track/user-interaction/embedded-content
    method: GET
    data_selector: persistent
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: /store/user/video-player-preferences
    method: GET
    data_selector: session
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: /store/user/video-player-preferences
    method: GET
    data_selector: session
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: /store/user/video-player-preferences
    method: GET
    data_selector: persistent
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: /store/user/video-player-preferences
    method: GET
    data_selector: persistent
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: /store/user/video-player-preferences
    method: GET
    data_selector: session
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: /store/user/video-player-preferences
    method: GET
    data_selector: session
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: /store/user/video-player-preferences
    method: GET
    data_selector: session
    params: {}
- name: database
  endpoint:
    path: /databases/MyDB
    method: GET
    data_selector: results
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /logs/last_result_entry_key
    method: GET
    data_selector: data
    params: {}
- name: remote_sid
  endpoint:
    path: /logs/remote_sid
    method: GET
    data_selector: data
    params: {}
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: /logs/sw_health_log
    method: GET
    data_selector: data
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: /logs/test_cookies_enabled
    method: GET
    data_selector: data
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /logs/visitor_info1_live
    method: GET
    data_selector: data
    params: {}
- name: YSC
  endpoint:
    path: /logs/ysc
    method: GET
    data_selector: data
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /logs/ytidb_last_result_entry_key
    method: GET
    data_selector: data
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: /logs/ytidb_meta_databases
    method: GET
    data_selector: data
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: /logs/yt_remote_cast_available
    method: GET
    data_selector: data
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: /logs/yt_remote_cast_installed
    method: GET
    data_selector: data
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: /logs/yt_remote_connected_devices
    method: GET
    data_selector: data
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: /logs/yt_remote_device_id
    method: GET
    data_selector: data
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: /logs/yt_remote_fast_check_period
    method: GET
    data_selector: data
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: /logs/yt_remote_session_app
    method: GET
    data_selector: data
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: /logs/yt_remote_session_name
    method: GET
    data_selector: data
    params: {}
- name: testDB
  endpoint:
    path: /databases/testDB
    method: POST
    data_selector: database
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: functions
    params: {}
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: licenses
    params: {}
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
    data_selector: logs
    params: {}
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
    data_selector: metadata
    params: {}
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
    data_selector: properties
    params: {}
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
    data_selector: processes
    params: {}
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
    data_selector: queries
    params: {}
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
    data_selector: roles
    params: {}
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
    data_selector: sensitive-properties
    params: {}
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
    data_selector: servers
    params: {}
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
    data_selector: stored
    params: {}
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
    data_selector: users
    params: {}
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
    data_selector: virtuals
    params: {}
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
    data_selector: zks
    params: {}
- name: music_data
  endpoint:
    path: /stardog-tutorial:music:music_data
    method: GET
- name: albums_grouped_by_year
  endpoint:
    path: /albums/grouped_by_year
    method: GET
    data_selector: results
- name: albums_duplicate_dates
  endpoint:
    path: /albums/duplicate_dates
    method: GET
    data_selector: results
- name: average_albums_per_year
  endpoint:
    path: /albums/average_per_year
    method: GET
    data_selector: results
- name: artists
  endpoint:
    path: /artists
    method: GET
    data_selector: results
- name: songs
  endpoint:
    path: /songs
    method: GET
    data_selector: results
    params:
      limit: 5000
- name: database
  endpoint:
    path: /admin/databases
    method: POST
    data_selector: db
    params: {}
- name: visitor_statistics
  endpoint:
    path: /api/statistics/visitor
    method: GET
    data_selector: statistics
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: StarWarsDB
  endpoint:
    path: /StarWarsDB
    method: POST
    data_selector: data
    params: {}
- name: characters
  endpoint:
    path: /query
    method: POST
    data_selector: results
    params: {}
- name: function_list
  endpoint:
    path: /stardog-admin-cli-reference/function/function-list
    method: GET
- name: function_add
  endpoint:
    path: /stardog-admin-cli-reference/function/function-add
    method: GET
- name: function_remove
  endpoint:
    path: /stardog-admin-cli-reference/function/function-remove
    method: GET
- name: license_info
  endpoint:
    path: /stardog-admin-cli-reference/license/license-info
    method: GET
- name: license_request
  endpoint:
    path: /stardog-admin-cli-reference/license/license-request
    method: GET
- name: log_print
  endpoint:
    path: /stardog-admin-cli-reference/log/log-print
    method: GET
- name: metadata_convert
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-convert
    method: GET
- name: metadata_get
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-get
    method: GET
- name: metadata_set
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-set
    method: GET
- name: property_get
  endpoint:
    path: /stardog-admin-cli-reference/property/property-get
    method: GET
- name: property_set
  endpoint:
    path: /stardog-admin-cli-reference/property/property-set
    method: GET
- name: ps_list
  endpoint:
    path: /stardog-admin-cli-reference/ps/ps-list
    method: GET
- name: query_list
  endpoint:
    path: /stardog-admin-cli-reference/query/query-list
    method: GET
- name: role_list
  endpoint:
    path: /stardog-admin-cli-reference/role/role-list
    method: GET
- name: user_list
  endpoint:
    path: /stardog-admin-cli-reference/user/user-list
    method: GET
- name: namespace_list
  endpoint:
    path: /stardog-admin-cli-reference/namespace/namespace-list
    method: GET
- name: query_execute
  endpoint:
    path: /stardog-cli-reference/query/query-execute
    method: GET
- name: albums
  endpoint:
    path: /sparql
    method: GET
    data_selector: results
    params: {}
- name: albums_duplicate_dates
  endpoint:
    path: /albums_duplicate_dates
    method: SELECT
    data_selector: ?album (group_concat(?date) AS ?dates)
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /logs/requests
    method: GET
- name: cowriters
  endpoint:
    path: /cowriters
    method: SELECT
    data_selector: results
- name: icv_validate
  endpoint:
    path: /icv/validate
    method: POST
- name: icv_explain
  endpoint:
    path: /icv/explain
    method: POST
- name: albums
  endpoint:
    path: /services/data/albums
    method: GET
    data_selector: results
- name: nodes
  endpoint:
    path: /query
    method: POST
    data_selector: body.data
    params:
      '@reasoning': false
- name: relationships
  endpoint:
    path: /query
    method: POST
    data_selector: body.results.bindings
    params:
      reasoning: false
- name: albums_grouped_by_year
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params:
      query: SELECT ?year (count(distinct ?album) AS ?count) { ?album a :Album ; :date
        ?date ; BIND (year(?date) AS ?year) } GROUP BY ?year ORDER BY desc(?count)
- name: albums_with_duplicate_dates
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params:
      query: SELECT ?album (group_concat(?date) AS ?dates) { ?album a :Album ; :date
        ?date } GROUP BY ?album HAVING (count(?date) > 1)
- name: average_albums_per_year
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params:
      query: SELECT (avg(?count) AS ?avgCount) { SELECT ?year (count(?album) AS ?count)
        { ?album a :Album ; :date ?date ; BIND (year(?date) AS ?year) } GROUP BY ?year
        }
- name: all_artists
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params:
      query: SELECT ?name { { ?artist a :SoloArtist } UNION { ?artist a :Band } ?artist
        rdfs:label ?name }
- name: songs_with_length
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params:
      query: SELECT * { ?song a :Song . ?song :length ?length . } LIMIT 5000
- name: songs_without_length
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params:
      query: SELECT ?song ?length { ?song a :Song . OPTIONAL { ?song :length ?length
        . } } LIMIT 5000
- name: songs_with_missing_length
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params:
      query: SELECT ?song ?length { ?song a :Song . OPTIONAL { ?song :length ?length
        . } FILTER(!bound(?length)) }
- name: songs_without_length_exists
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params:
      query: SELECT ?song { ?song a :Song . FILTER NOT EXISTS { ?song :length ?length
        . } }
- name: describe_query
  endpoint:
    path: /describe
    method: POST
    data_selector: results
    params: {}
- name: entity_recognition
  endpoint:
    path: /extract/entities
    method: POST
    data_selector: mentions
- name: entity_linking
  endpoint:
    path: /link/entities
    method: POST
    data_selector: linked_mentions
- name: music_data
  endpoint:
    path: /kits/tutorial:music:1.0
    method: GET
    data_selector: results
- name: albums_grouped_by_year
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: albums_with_duplicate_dates
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: albums_average_count
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: artists_union
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: songs_with_length
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: songs_without_length
  endpoint:
    path: /sparql
    method: POST
    data_selector: results
    params: {}
- name: actor
  endpoint:
    path: /api/actor
    method: GET
    data_selector: records
- name: movie
  endpoint:
    path: /api/movie
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: denormalized
  endpoint:
    path: /denormalized
    method: SELECT
    data_selector: records
- name: database
  endpoint:
    path: /databases/MyDB
    method: GET
    data_selector: stores
- name: external_catalogs
  endpoint:
    path: /knowledge-catalog/external-catalogs
    method: GET
    data_selector: records
    params: {}
- name: visitor_statistics
  endpoint:
    path: /visitor/statistics
    method: GET
    data_selector: data
    params: {}
- name: testDB
  endpoint:
    path: /testDB
    method: POST
    data_selector: database
    params: {}
- name: length
  endpoint:
    path: /length
    method: GET
    data_selector: rdfs:label
    params: {}
- name: pythondb
  endpoint:
    path: /databases/pythondb
    method: POST
    data_selector: db
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /api/v1/data-source
    method: GET
    data_selector: records
- name: StarWarsDB
  endpoint:
    path: /data
    method: POST
    data_selector: data
    params: {}
- name: characters
  endpoint:
    path: /query
    method: POST
    data_selector: results
    params: {}
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
- name: Geospatial Data
  endpoint:
    path: /geospatial
    method: GET
    data_selector: geometries
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk
    method: GET
- name: nodes
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params:
      query: 'query withAliases @config(alias: {person: "http://api.stardog.com/Person"})
        { person { firstName: stardog_firstName, lastName: stardog_lastName } }'
- name: relationships
  endpoint:
    path: /sparql
    method: GET
    data_selector: results
    params:
      query: select ?source ?target ?linkType where { ?linkType rdfs:subPropertyOf
        :linkType . ?s ?linkType ?t . ?s stardog:firstName ?sfn . ?s stardog:lastName
        ?sln . ?t stardog:firstName ?tfn . ?t stardog:lastName ?tln . BIND (concat
        (?sfn, '_' , ?sln) AS ?source) . BIND (concat (?tfn, '_' , ?tln) AS ?target)
        . FILTER (?linkType != :linkType) }
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: entity_extraction
  endpoint:
    path: /entity/extraction
    method: POST
    data_selector: entities
    params: {}
- name: entity_linking
  endpoint:
    path: /entity/linking
    method: POST
    data_selector: linked_entities
    params: {}
- name: data_source
  endpoint:
    path: /api/data-source
    method: GET
    data_selector: records
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
    params: {}
- name: CoreNLPMentionRDFExtractor
  endpoint:
    path: /extractors/CoreNLPMentionRDFExtractor
    method: POST
    data_selector: entities
- name: CoreNLPEntityLinkerRDFExtractor
  endpoint:
    path: /extractors/CoreNLPEntityLinkerRDFExtractor
    method: POST
    data_selector: entities
- name: CoreNLPRelationRDFExtractor
  endpoint:
    path: /extractors/CoreNLPRelationRDFExtractor
    method: POST
    data_selector: relationships
- name: data_source
  endpoint:
    path: /api/data_source
    method: GET
    data_selector: records
- name: music
  endpoint:
    path: /virtual/music
    method: GET
    data_selector: records
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: AlbumMapping
  endpoint:
    path: /Album
    method: SELECT
    data_selector: '*'
    params: {}
- name: ArtistMapping
  endpoint:
    path: /Artist
    method: SELECT
    data_selector: '*'
    params: {}
- name: SoloArtistMapping
  endpoint:
    path: /Artist
    method: SELECT
    data_selector: '*'
    params:
      type: 1
- name: BandMapping
  endpoint:
    path: /Artist
    method: SELECT
    data_selector: '*'
    params:
      type: 2
- name: MemberMapping
  endpoint:
    path: /Membership
    method: SELECT
    data_selector: '*'
    params: {}
- name: SongMapping
  endpoint:
    path: /Track
    method: SELECT
    data_selector: '*'
    params: {}
- name: SongwriterMapping
  endpoint:
    path: /Songwriter
    method: SELECT
    data_selector: '*'
    params: {}
- name: function_list
  endpoint:
    path: /stardog-admin-cli-reference/function/function-list
    method: GET
- name: license_info
  endpoint:
    path: /stardog-admin-cli-reference/license/license-info
    method: GET
- name: log_print
  endpoint:
    path: /stardog-admin-cli-reference/log/log-print
    method: GET
- name: metadata_convert
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-convert
    method: GET
- name: property_get
  endpoint:
    path: /stardog-admin-cli-reference/property/property-get
    method: GET
- name: ps_list
  endpoint:
    path: /stardog-admin-cli-reference/ps/ps-list
    method: GET
- name: query_list
  endpoint:
    path: /stardog-admin-cli-reference/query/query-list
    method: GET
- name: role_list
  endpoint:
    path: /stardog-admin-cli-reference/role/role-list
    method: GET
- name: sensitive_property_list
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/sensitive-property-list
    method: GET
- name: server_logs
  endpoint:
    path: /stardog-admin-cli-reference/server/server-logs
    method: GET
- name: stored_list
  endpoint:
    path: /stardog-admin-cli-reference/stored/stored-list
    method: GET
- name: user_list
  endpoint:
    path: /stardog-admin-cli-reference/user/user-list
    method: GET
- name: virtual_list
  endpoint:
    path: /stardog-admin-cli-reference/virtual/virtual-list
    method: GET
- name: zk_info
  endpoint:
    path: /stardog-admin-cli-reference/zk/zk-info
    method: GET
- name: denormalized
  endpoint:
    path: /denormalized
    method: GET
    data_selector: records
- name: cookie
  endpoint:
    path: /api/cookies
    method: GET
    data_selector: cookies
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
- name: ziwsSessionId
  endpoint:
    path: /ziwsSessionId
    method: GET
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
- name: lastExternalReferrerTime
  endpoint:
    path: /lastExternalReferrerTime
    method: GET
- name: log/error
  endpoint:
    path: /log/error
    method: GET
- name: topicsLastReferenceTime
  endpoint:
    path: /topicsLastReferenceTime
    method: GET
- name: _fbp
  endpoint:
    path: /_fbp
    method: GET
- name: adroll_flgs
  endpoint:
    path: /adroll_flgs
    method: GET
- name: CMID
  endpoint:
    path: /CMID
    method: GET
- name: CMPRO
  endpoint:
    path: /CMPRO
    method: GET
- name: CMPS
  endpoint:
    path: /CMPS
    method: GET
- name: rum
  endpoint:
    path: /rum
    method: GET
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
- name: tuuid_lu
  endpoint:
    path: /tuuid_lu
    method: GET
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
- name: drift_campaign_refresh
  endpoint:
    path: /drift_campaign_refresh
    method: GET
- name: DRIFT_SESSION_CAMPAIGNS
  endpoint:
    path: /DRIFT_SESSION_CAMPAIGNS
    method: GET
- name: IDE
  endpoint:
    path: /IDE
    method: GET
- name: NID
  endpoint:
    path: /NID
    method: GET
- name: pagead/1p-user-list/#
  endpoint:
    path: /pagead/1p-user-list/#
    method: GET
- name: _ga
  endpoint:
    path: /_ga
    method: GET
- name: _gcl_au
  endpoint:
    path: /_gcl_au
    method: GET
- name: _gid
  endpoint:
    path: /_gid
    method: GET
- name: _gcl_ls
  endpoint:
    path: /_gcl_ls
    method: GET
- name: __ptq.gif
  endpoint:
    path: /__ptq.gif
    method: GET
- name: privacy_sandbox/topics/registration/
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
- name: tv_UIDM
  endpoint:
    path: /tv_UIDM
    method: GET
- name: tvid
  endpoint:
    path: /tvid
    method: GET
- name: i/jot/embeds
  endpoint:
    path: /i/jot/embeds
    method: GET
- name: '#-#'
  endpoint:
    path: /#-#
    method: GET
- name: __Secure-ROLLOUT_TOKEN
  endpoint:
    path: /__Secure-ROLLOUT_TOKEN
    method: GET
- name: __Secure-YEC
  endpoint:
    path: /__Secure-YEC
    method: GET
- name: iU5q-!O9@$
  endpoint:
    path: /iU5q-!O9@$
    method: GET
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: stored_query
  endpoint:
    path: /api/stored_queries
    method: POST
    data_selector: queries
- name: length
  endpoint:
    path: /metadata/length
    method: GET
    data_selector: rdfs:label
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: interaction_records
- name: initiate_indexing_job
  endpoint:
    path: /api/v1/voicebox/bites/jobs
    method: POST
- name: get_job_status
  endpoint:
    path: /api/v1/voicebox/bites/jobs/{job_id}
    method: GET
- name: cancel_indexing_job
  endpoint:
    path: /api/v1/voicebox/bites/jobs/{job_id}/cancel
    method: POST
- name: query_5b
  endpoint:
    path: /query
    method: POST
    data_selector: results
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: similarity_model
  endpoint:
    path: /similarity/search
    method: POST
    data_selector: results
    params:
      limit: 5
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: LogsDatabaseV2:V#||LogsRequestsStore
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: remote_sid
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YSC
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: data
    params: {}
- name: db
  endpoint:
    path: /stardog-admin-cli-reference/db/
    method: GET
    data_selector: databases
    params: {}
- name: geographical_data
  endpoint:
    path: /spatial
    method: POST
    data_selector: nodes
    params:
      spatial: enabled
- name: LogsDatabaseV2
  endpoint:
    path: /logs/requests
    method: GET
    data_selector: logs
    params: {}
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /serviceworker/logs
    method: GET
    data_selector: logs
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /api/data-source
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /services/data/vXX.X/sobjects/Dataset
    method: GET
    data_selector: records
    params: {}
- name: data_source
  endpoint:
    path: /api/data-sources
    method: GET
    data_selector: dataSources
    params: {}
- name: add_data
  endpoint:
    path: /{db}
    method: POST
    data_selector: data
    params: {}
- name: overwrite_data
  endpoint:
    path: /{db}
    method: PUT
    data_selector: data
    params: {}
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
- name: ziwsSessionId
  endpoint:
    path: /ziwsSessionId
    method: GET
    data_selector: statistics
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: referrer
- name: lastExternalReferrerTime
  endpoint:
    path: /lastExternalReferrerTime
    method: GET
    data_selector: referrer_time
- name: log/error
  endpoint:
    path: /log/error
    method: GET
    data_selector: error_log
- name: topicsLastReferenceTime
  endpoint:
    path: /topicsLastReferenceTime
    method: GET
    data_selector: topics_reference_time
- name: _fbp
  endpoint:
    path: /_fbp
    method: GET
    data_selector: fbp_data
- name: adroll_flgs
  endpoint:
    path: /adroll_flgs
    method: GET
    data_selector: adroll_data
- name: CMID
  endpoint:
    path: /CMID
    method: GET
    data_selector: cmid_data
- name: CMPRO
  endpoint:
    path: /CMPRO
    method: GET
    data_selector: cmpro_data
- name: CMPS
  endpoint:
    path: /CMPS
    method: GET
    data_selector: cmps_data
- name: rum
  endpoint:
    path: /rum
    method: GET
    data_selector: rum_data
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
    data_selector: tuuid_data
- name: tuuid_lu
  endpoint:
    path: /tuuid_lu
    method: GET
    data_selector: tuuid_lu_data
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
    data_selector: drift_aid_data
- name: drift_campaign_refresh
  endpoint:
    path: /drift_campaign_refresh
    method: GET
    data_selector: drift_campaign_refresh_data
- name: DRIFT_SESSION_CAMPAIGNS
  endpoint:
    path: /DRIFT_SESSION_CAMPAIGNS
    method: GET
    data_selector: drift_session_campaigns_data
- name: IDE
  endpoint:
    path: /IDE
    method: GET
    data_selector: ide_data
- name: NID
  endpoint:
    path: /NID
    method: GET
    data_selector: nid_data
- name: pagead/1p-user-list/#
  endpoint:
    path: /pagead/1p-user-list/#
    method: GET
    data_selector: pagead_user_list_data
- name: pagead/gen_204/
  endpoint:
    path: /pagead/gen_204/
    method: GET
    data_selector: pagead_gen_204_data
- name: _ga
  endpoint:
    path: /_ga
    method: GET
    data_selector: ga_data
- name: _ga_#
  endpoint:
    path: /_ga_#
    method: GET
    data_selector: ga_hash_data
- name: _gcl_au
  endpoint:
    path: /_gcl_au
    method: GET
    data_selector: gcl_au_data
- name: _gid
  endpoint:
    path: /_gid
    method: GET
    data_selector: gid_data
- name: _gcl_ls
  endpoint:
    path: /_gcl_ls
    method: GET
    data_selector: gcl_ls_data
- name: __ptq.gif
  endpoint:
    path: /__ptq.gif
    method: GET
    data_selector: ptq_data
- name: privacy_sandbox/topics/registration/
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
    data_selector: privacy_sandbox_data
- name: tv_UIDM
  endpoint:
    path: /tv_UIDM
    method: GET
    data_selector: tv_uidm_data
- name: tvid
  endpoint:
    path: /tvid
    method: GET
    data_selector: tvid_data
- name: i/jot/embeds
  endpoint:
    path: /i/jot/embeds
    method: GET
    data_selector: jot_embeds_data
- name: '#-#'
  endpoint:
    path: /#-#
    method: GET
    data_selector: hash_data
- name: __Secure-ROLLOUT_TOKEN
  endpoint:
    path: /__Secure-ROLLOUT_TOKEN
    method: GET
    data_selector: secure_rollout_token_data
- name: __Secure-YEC
  endpoint:
    path: /__Secure-YEC
    method: GET
    data_selector: secure_yec_data
- name: iU5q-!O9@$
  endpoint:
    path: /iU5q-!O9@$
    method: GET
    data_selector: unique_id_data
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /track_user_interaction/embedded_content
    method: GET
    data_selector: session
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: /track_user_interaction/embedded_content
    method: GET
    data_selector: persistent
    params: {}
- name: remote_sid
  endpoint:
    path: /youtube_video_content/functionality
    method: GET
    data_selector: session
    params: {}
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /youtube_video_content/functionality
    method: GET
    data_selector: persistent
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: /track_user_interaction/embedded_content
    method: GET
    data_selector: 1_day
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /estimate_user_bandwidth/youtube_videos
    method: GET
    data_selector: 180_days
    params: {}
- name: YSC
  endpoint:
    path: /register_video_statistics/youtube
    method: GET
    data_selector: session
    params: {}
- name: backup
  endpoint:
    path: /stardog-admin/db/backup
    method: POST
    data_selector: backup
- name: restore
  endpoint:
    path: /stardog-admin/db/restore
    method: POST
    data_selector: restore
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: data
  endpoint:
    path: /stardog-cli-reference/data/
    method: GET
- name: doc
  endpoint:
    path: /stardog-cli-reference/doc/
    method: GET
- name: entity-resolution
  endpoint:
    path: /stardog-cli-reference/entity-resolution/
    method: GET
- name: file
  endpoint:
    path: /stardog-cli-reference/file/
    method: GET
- name: graphql
  endpoint:
    path: /stardog-cli-reference/graphql/
    method: GET
- name: icv
  endpoint:
    path: /stardog-cli-reference/icv/
    method: GET
- name: namespace
  endpoint:
    path: /stardog-cli-reference/namespace/
    method: GET
- name: reasoning
  endpoint:
    path: /stardog-cli-reference/reasoning/
    method: GET
- name: test
  endpoint:
    path: /stardog-cli-reference/test/
    method: GET
- name: tx
  endpoint:
    path: /stardog-cli-reference/tx/
    method: GET
- name: knowledge_catalog
  endpoint:
    path: /api/knowledge/catalog
    method: GET
    data_selector: records
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/last_result_entry_key
    method: GET
    data_selector: maximum_storage_duration
- name: LogsDatabaseV2
  endpoint:
    path: /cookies/logs_database_v2
    method: GET
    data_selector: maximum_storage_duration
- name: remote_sid
  endpoint:
    path: /cookies/remote_sid
    method: GET
    data_selector: maximum_storage_duration
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: /cookies/service_worker_logs_database
    method: GET
    data_selector: maximum_storage_duration
- name: TESTCOOKIESENABLED
  endpoint:
    path: /cookies/testcookiesenabled
    method: GET
    data_selector: maximum_storage_duration
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /cookies/visitor_info1_live
    method: GET
    data_selector: maximum_storage_duration
- name: YSC
  endpoint:
    path: /cookies/ysc
    method: GET
    data_selector: maximum_storage_duration
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/ytidb_last_result_entry_key
    method: GET
    data_selector: maximum_storage_duration
- name: YtIdbMeta#databases
  endpoint:
    path: /cookies/ytidb_meta_databases
    method: GET
    data_selector: maximum_storage_duration
- name: yt-remote-cast-available
  endpoint:
    path: /cookies/yt_remote_cast_available
    method: GET
    data_selector: maximum_storage_duration
- name: yt-remote-cast-installed
  endpoint:
    path: /cookies/yt_remote_cast_installed
    method: GET
    data_selector: maximum_storage_duration
- name: yt-remote-connected-devices
  endpoint:
    path: /cookies/yt_remote_connected_devices
    method: GET
    data_selector: maximum_storage_duration
- name: yt-remote-device-id
  endpoint:
    path: /cookies/yt_remote_device_id
    method: GET
    data_selector: maximum_storage_duration
- name: yt-remote-fast-check-period
  endpoint:
    path: /cookies/yt_remote_fast_check_period
    method: GET
    data_selector: maximum_storage_duration
- name: yt-remote-session-app
  endpoint:
    path: /cookies/yt_remote_session_app
    method: GET
    data_selector: maximum_storage_duration
- name: yt-remote-session-name
  endpoint:
    path: /cookies/yt_remote_session_name
    method: GET
    data_selector: maximum_storage_duration
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: referrer
- name: CMID
  endpoint:
    path: /CMID
    method: GET
    data_selector: visitor_data
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
    data_selector: visitor_data
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
    data_selector: user_id
- name: IDE
  endpoint:
    path: /IDE
    method: GET
    data_selector: ad_measurement
- name: _ga
  endpoint:
    path: /_ga
    method: GET
    data_selector: analytics_data
- name: available_checkpoints
  endpoint:
    path: /db/checkpoint/list/system
    method: GET
    data_selector: Checkpoints
- name: create_checkpoint
  endpoint:
    path: /db/checkpoint/create/system
    method: POST
    data_selector: Successfully created checkpoint
- name: restore_checkpoint
  endpoint:
    path: /db/checkpoint/restore/system
    method: POST
    data_selector: System checkpoint
    params: {}
- name: music
  endpoint:
    path: /virtual/music
    method: GET
    data_selector: records
    params: {}
- name: query
  endpoint:
    path: /query
    method: GET
    data_selector: results
    params: {}
- name: reasoning
  endpoint:
    path: /reasoning
    method: GET
    data_selector: results
    params: {}
- name: search
  endpoint:
    path: /search
    method: GET
    data_selector: results
    params: {}
- name: security
  endpoint:
    path: /security
    method: GET
    data_selector: results
    params: {}
- name: service
  endpoint:
    path: /service
    method: GET
    data_selector: results
    params: {}
- name: Album
  endpoint:
    path: /Album
    method: GET
    data_selector: records
    params: {}
- name: Artist
  endpoint:
    path: /Artist
    method: GET
    data_selector: records
    params: {}
- name: Membership
  endpoint:
    path: /Membership
    method: GET
    data_selector: records
    params: {}
- name: Track
  endpoint:
    path: /Track
    method: GET
    data_selector: records
    params: {}
- name: Songwriter
  endpoint:
    path: /Songwriter
    method: GET
    data_selector: records
    params: {}
- name: spatial
  endpoint:
    params:
      enabled: 'false'
      error_percentage: '0.025'
      precision: '11'
      result_limit: '10000'
- name: sql
  endpoint:
    params:
      schema_auto: 'true'
      schema_auto_source: owl
      data_graphs: tag:stardog:api:context:all
      schema_graph: tag:stardog:api:sql:schema
- name: transaction
  endpoint:
    params:
      isolation: SNAPSHOT
      logging: 'false'
      logging_rotation_remove: 'true'
      logging_rotation_size: '524288000'
      logging_use_rotated: 'true'
      write_conflict_strategy: LAST_COMMIT_WINS
      commit_twophase: 'false'
- name: virtual_graphs
  endpoint:
    params:
      transparency: 'false'
- name: voicebox
  endpoint:
    params:
      enabled: 'false'
      preprocessors: default
- name: visitor_data
  endpoint:
    path: /visitor/data
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dataset
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /track_user_interaction/embedded_content
    method: GET
    data_selector: interaction_data
- name: LogsDatabaseV2
  endpoint:
    path: /track_user_interaction/embedded_content
    method: GET
    data_selector: interaction_data
- name: remote_sid
  endpoint:
    path: /youtube_video_content
    method: GET
    data_selector: video_content_data
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /youtube_video_content
    method: GET
    data_selector: video_content_data
- name: TESTCOOKIESENABLED
  endpoint:
    path: /track_user_interaction/embedded_content
    method: GET
    data_selector: interaction_data
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /track_user_interaction/embedded_content
    method: GET
    data_selector: interaction_data
- name: YSC
  endpoint:
    path: /track_user_interaction/embedded_content
    method: GET
    data_selector: interaction_data
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /track_user_interaction/embedded_content
    method: GET
    data_selector: interaction_data
- name: YtIdbMeta
  endpoint:
    path: /track_user_interaction/embedded_content
    method: GET
    data_selector: interaction_data
- name: yt-remote-cast-available
  endpoint:
    path: /track_user_interaction/embedded_video
    method: GET
    data_selector: video_preferences
- name: yt-remote-cast-installed
  endpoint:
    path: /track_user_interaction/embedded_video
    method: GET
    data_selector: video_preferences
- name: yt-remote-connected-devices
  endpoint:
    path: /track_user_interaction/embedded_video
    method: GET
    data_selector: video_preferences
- name: yt-remote-device-id
  endpoint:
    path: /track_user_interaction/embedded_video
    method: GET
    data_selector: video_preferences
- name: yt-remote-fast-check-period
  endpoint:
    path: /track_user_interaction/embedded_video
    method: GET
    data_selector: video_preferences
- name: yt-remote-session-app
  endpoint:
    path: /track_user_interaction/embedded_video
    method: GET
    data_selector: video_preferences
- name: yt-remote-session-name
  endpoint:
    path: /track_user_interaction/embedded_video
    method: GET
    data_selector: video_preferences
- name: create_database
  endpoint:
    path: /admin/databases
    method: POST
    data_selector: root
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: remote_sid
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: YSC
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: LogsDatabaseV2:V#||LogsRequestsStore
    method: GET
    data_selector: records
- name: remote_sid
  endpoint:
    path: ServiceWorkerLogsDatabase#SWHealthLog
    method: GET
    data_selector: records
- name: TESTCOOKIESENABLED
  endpoint:
    path: Cookies
    method: GET
    data_selector: records
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: Cookies
    method: GET
    data_selector: records
- name: YSC
  endpoint:
    path: Cookies
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /api/data_source
    method: GET
    data_selector: records
    params: {}
- name: create_database
  endpoint:
    path: /admin/databases
    method: POST
    data_selector: root
    params: {}
- name: databases
  endpoint:
    path: /admin/databases
    method: GET
    data_selector: Databases
- name: create_database
  endpoint:
    path: /admin/databases
    method: POST
    data_selector: root
- name: initiate_indexing_job
  endpoint:
    path: /api/v1/voicebox/bites/jobs
    method: POST
- name: get_job_status
  endpoint:
    path: /api/v1/voicebox/bites/jobs/{job_id}
    method: GET
- name: cancel_indexing_job
  endpoint:
    path: /api/v1/voicebox/bites/jobs/{job_id}/cancel
    method: POST
- name: list_databases
  endpoint:
    path: /admin/databases
    method: GET
    data_selector: Databases
- name: database_status
  endpoint:
    path: /admin/db/status/{database_name}
    method: GET
    data_selector: status
- name: offline_database
  endpoint:
    path: /admin/databases/{database_name}/offline
    method: PUT
- name: online_database
  endpoint:
    path: /admin/databases/{database_name}/online
    method: PUT
- name: drop_database
  endpoint:
    path: /admin/databases/{database_name}
    method: DELETE
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: url
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
    params: {}
- name: ziwsSessionId
  endpoint:
    path: /ziwsSessionId
    method: GET
    data_selector: statistics
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: url
    params: {}
- name: lastExternalReferrerTime
  endpoint:
    path: /lastExternalReferrerTime
    method: GET
    data_selector: time
    params: {}
- name: log/error
  endpoint:
    path: /log/error
    method: GET
    data_selector: error
    params: {}
- name: topicsLastReferenceTime
  endpoint:
    path: /topicsLastReferenceTime
    method: GET
    data_selector: data
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: functions
    params: {}
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: licenses
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-add
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: query_management
  endpoint:
    path: /query/management
    method: GET
    data_selector: queries
    params: {}
- name: example_resource
  endpoint:
    path: /services/data/vXX.X/sobjects/ExampleResource
    method: GET
    data_selector: records
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: YtIdbMeta
  endpoint:
    path: /databases
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /data-source
    method: GET
    data_selector: records
    params: {}
- name: function
  endpoint:
    path: /function
    method: POST
    data_selector: functions
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: stored_queries
  endpoint:
    path: /stardog-admin/stored
    method: GET
    data_selector: queries
    params: {}
- name: query_triggers
  endpoint:
    path: /stardog-admin/stored/triggers
    method: GET
    data_selector: triggers
    params: {}
- name: begin_transaction
  endpoint:
    path: /myDatabase/transaction/begin
    method: POST
- name: commit_transaction
  endpoint:
    path: /myDatabase/transaction/commit/{txid}
    method: POST
- name: rollback_transaction
  endpoint:
    path: /myDatabase/transaction/rollback/{txid}
    method: POST
- name: list_open_transactions
  endpoint:
    path: /myDatabase/transaction
    method: GET
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: add_data
  endpoint:
    path: /myDatabase?graph=urn:graph
    method: POST
- name: overwrite_data
  endpoint:
    path: /myDatabase?graph=urn:graph
    method: PUT
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: backup_to_s3
  endpoint:
    path: s3://[<endpoint hostname>:<endpoint port>]/<bucket name>/<path prefix>?region=<AWS
      Region>&AWS_ACCESS_KEY_ID=<access key>&AWS_SECRET_ACCESS_KEY=<verySecretKey1>
    method: GET
    data_selector: backup
    params: {}
- name: backup_to_gcp
  endpoint:
    path: gs://<bucket name>/<path prefix>?GOOGLE_APPLICATION_CREDENTIALS=<path to
      Google Credentials JSON file>
    method: GET
    data_selector: backup
    params: {}
- name: backup_to_azure_blob
  endpoint:
    path: https://<storage account>.blob.core.windows.net/<container>/<prefix>?<token>
    method: GET
    data_selector: backup
    params: {}
- name: restore_from_s3
  endpoint:
    path: s3://[<endpoint hostname>:<endpoint port>]/<bucket name>/<path prefix>/<database
      name>?region=<AWS Region>&AWS_ACCESS_KEY_ID=<access key>&AWS_SECRET_ACCESS_KEY=<verySecretKey1>
    method: POST
    data_selector: restore
    params: {}
- name: restore_from_gcp
  endpoint:
    path: gs://<bucket name>/<path prefix>?GOOGLE_APPLICATION_CREDENTIALS=<path to
      Google Credentials JSON file>
    method: POST
    data_selector: restore
    params: {}
- name: restore_from_azure_blob
  endpoint:
    path: https://<storage account>.blob.core.windows.net/<container>/<prefix>/<database
      name>?<token>
    method: POST
    data_selector: restore
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /SWHealthLog
    method: GET
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: access_log
  endpoint:
    path: /logging/access
    method: GET
    data_selector: logs
    params:
      enabled: 'true'
      type: json
      file: access.log
      rotation_type: size
      rotation_limit: 1000000
- name: audit_log
  endpoint:
    path: /logging/audit
    method: GET
    data_selector: logs
    params:
      enabled: 'true'
      type: json
      file: audit.log
      rotation_type: size
      rotation_limit: 1000000
      compression: 'true'
      rotation_file_count: 5
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: functions
    params: {}
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: licenses
    params: {}
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
    data_selector: logs
    params: {}
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
    data_selector: metadata
    params: {}
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
    data_selector: properties
    params: {}
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
    data_selector: processes
    params: {}
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
    data_selector: queries
    params: {}
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
    data_selector: roles
    params: {}
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
    data_selector: sensitiveProperties
    params: {}
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
    data_selector: servers
    params: {}
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
    data_selector: storedData
    params: {}
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
    data_selector: users
    params: {}
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
    data_selector: virtuals
    params: {}
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
    data_selector: zk
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/LAST_RESULT_ENTRY_KEY
    method: GET
    data_selector: interaction
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: /cookies/LogsDatabaseV2
    method: GET
    data_selector: interaction
    params: {}
- name: remote_sid
  endpoint:
    path: /cookies/remote_sid
    method: GET
    data_selector: interaction
    params: {}
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: /cookies/ServiceWorkerLogsDatabase#SWHealthLog
    method: GET
    data_selector: interaction
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: /cookies/TESTCOOKIESENABLED
    method: GET
    data_selector: interaction
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /cookies/VISITOR_INFO1_LIVE
    method: GET
    data_selector: interaction
    params: {}
- name: YSC
  endpoint:
    path: /cookies/YSC
    method: GET
    data_selector: interaction
    params: {}
- name: checkpoints
  endpoint:
    path: /stardog-admin/db/checkpoint/list/system
    method: GET
    data_selector: Checkpoints
    params: {}
- name: create_checkpoint
  endpoint:
    path: /stardog-admin/db/checkpoint/create/system
    method: POST
    data_selector: Successfully created checkpoint
    params: {}
- name: restore_checkpoint
  endpoint:
    path: /stardog-admin/db/checkpoint/restore/system/{checkpoint_id}
    method: POST
    data_selector: System checkpoint
    params: {}
- name: memory_management
  endpoint:
    path: /server-configuration#memorymanagement
    method: GET
    data_selector: memory_configuration
    params: {}
- name: spilling_data
  endpoint:
    path: /server-configuration#spillingdir
    method: GET
    data_selector: spilling_configuration
    params: {}
- name: memory_configuration
  endpoint:
    path: /server-configuration#memorymode
    method: GET
    data_selector: memory_modes
    params: {}
- name: memory_block_size
  endpoint:
    path: /server-configuration#memorymanagedblocksize
    method: GET
    data_selector: memory_block_size
    params: {}
- name: spatial
  endpoint:
    path: /spatial
    method: GET
    data_selector: records
    params: {}
- name: sql
  endpoint:
    path: /sql
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /transaction
    method: GET
    data_selector: records
    params: {}
- name: virtual_graphs
  endpoint:
    path: /virtual_graphs
    method: GET
    data_selector: records
    params: {}
- name: voicebox
  endpoint:
    path: /voicebox
    method: GET
    data_selector: records
    params: {}
- name: server_status
  endpoint:
    path: /admin/status
    method: GET
    data_selector: JSON
    params: {}
- name: database_status
  endpoint:
    path: /{yourDatabaseName}/status
    method: GET
    data_selector: JSON
    params: {}
- name: prometheus_metrics
  endpoint:
    path: /admin/status/prometheus
    method: GET
    data_selector: JSON
    params: {}
- name: internal_prometheus_metrics
  endpoint:
    path: /admin/status/prometheus/internal
    method: GET
    data_selector: JSON
    params: {}
- name: per_index_metrics
  endpoint:
    path: /metrics/per_index
    method: GET
    data_selector: metrics
    params: {}
- name: http_server_metrics
  endpoint:
    path: /metrics/http_server
    method: GET
    data_selector: metrics
    params: {}
- name: memory_usage_metrics
  endpoint:
    path: /metrics/memory_usage
    method: GET
    data_selector: metrics
    params: {}
- name: process_metrics
  endpoint:
    path: /metrics/process
    method: GET
    data_selector: metrics
    params: {}
- name: create_database
  endpoint:
    path: /admin/databases
    method: POST
    data_selector: root
- name: data_source
  endpoint:
    path: /services/data/vXX.X/sobjects/DataSource
    method: GET
    data_selector: records
    params: {}
- name: create_database
  endpoint:
    path: /admin/databases
    method: POST
    data_selector: root
    params: {}
- name: databases
  endpoint:
    path: /admin/databases
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: records
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: data
  endpoint:
    path: /stardog-cli-reference/data/
    method: GET
- name: doc
  endpoint:
    path: /stardog-cli-reference/doc/
    method: GET
- name: entity-resolution
  endpoint:
    path: /stardog-cli-reference/entity-resolution/
    method: GET
- name: file
  endpoint:
    path: /stardog-cli-reference/file/
    method: GET
- name: graphql
  endpoint:
    path: /stardog-cli-reference/graphql/
    method: GET
- name: icv
  endpoint:
    path: /stardog-cli-reference/icv/
    method: GET
- name: namespace
  endpoint:
    path: /stardog-cli-reference/namespace/
    method: GET
- name: reasoning
  endpoint:
    path: /stardog-cli-reference/reasoning/
    method: GET
- name: test
  endpoint:
    path: /stardog-cli-reference/test/
    method: GET
- name: tx
  endpoint:
    path: /stardog-cli-reference/tx/
    method: GET
- name: database
  endpoint:
    path: /admin/databases
    method: POST
    data_selector: root
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: records
- name: db
  endpoint:
    path: /stardog-admin-cli-reference/db/
    method: GET
    data_selector: records
- name: rename_database
  endpoint:
    path: /admin/databases/oldDatabaseName/rename
    method: POST
- name: backup_database
  endpoint:
    path: /admin/databases/DB-NAME/backup
    method: POST
- name: restore_database
  endpoint:
    path: /admin/databases/DB-NAME/restore
    method: POST
- name: verify_database
  endpoint:
    path: /admin/databases/DB-NAME/verify
    method: POST
- name: knowledge_graph
  endpoint:
    path: /api/knowledge-graph
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: interaction
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: stored_functions
  endpoint:
    path: /function
    method: POST
    data_selector: functions
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: roles
  endpoint:
    path: /role
    method: GET
    data_selector: roles
- name: users
  endpoint:
    path: /user
    method: GET
    data_selector: users
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: stored_queries
  endpoint:
    path: /stored
    method: GET
    data_selector: queries
    params: {}
- name: query_triggers
  endpoint:
    path: /triggers
    method: GET
    data_selector: triggers
    params: {}
- name: query
  endpoint:
    path: /query
    method: POST
    data_selector: results
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: begin_transaction
  endpoint:
    path: /myDatabase/transaction/begin
    method: POST
- name: commit_transaction
  endpoint:
    path: /myDatabase/transaction/commit/{txid}
    method: POST
- name: rollback_transaction
  endpoint:
    path: /myDatabase/transaction/rollback/{txid}
    method: POST
- name: list_open_transactions
  endpoint:
    path: /myDatabase/transaction
    method: GET
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /path/to/endpoint/LAST_RESULT_ENTRY_KEY
    method: GET
    data_selector: records
- name: LogsDatabaseV2
  endpoint:
    path: /path/to/endpoint/LogsDatabaseV2
    method: GET
    data_selector: records
- name: remote_sid
  endpoint:
    path: /path/to/endpoint/remote_sid
    method: GET
    data_selector: records
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /path/to/endpoint/ServiceWorkerLogsDatabase
    method: GET
    data_selector: records
- name: TESTCOOKIESENABLED
  endpoint:
    path: /path/to/endpoint/TESTCOOKIESENABLED
    method: GET
    data_selector: records
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /path/to/endpoint/VISITOR_INFO1_LIVE
    method: GET
    data_selector: records
- name: YSC
  endpoint:
    path: /path/to/endpoint/YSC
    method: GET
    data_selector: records
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /path/to/endpoint/ytidb::LAST_RESULT_ENTRY_KEY
    method: GET
    data_selector: records
- name: YtIdbMeta#databases
  endpoint:
    path: /path/to/endpoint/YtIdbMeta#databases
    method: GET
    data_selector: records
- name: yt-remote-cast-available
  endpoint:
    path: /path/to/endpoint/yt-remote-cast-available
    method: GET
    data_selector: records
- name: yt-remote-cast-installed
  endpoint:
    path: /path/to/endpoint/yt-remote-cast-installed
    method: GET
    data_selector: records
- name: yt-remote-connected-devices
  endpoint:
    path: /path/to/endpoint/yt-remote-connected-devices
    method: GET
    data_selector: records
- name: yt-remote-device-id
  endpoint:
    path: /path/to/endpoint/yt-remote-device-id
    method: GET
    data_selector: records
- name: yt-remote-fast-check-period
  endpoint:
    path: /path/to/endpoint/yt-remote-fast-check-period
    method: GET
    data_selector: records
- name: yt-remote-session-app
  endpoint:
    path: /path/to/endpoint/yt-remote-session-app
    method: GET
    data_selector: records
- name: yt-remote-session-name
  endpoint:
    path: /path/to/endpoint/yt-remote-session-name
    method: GET
    data_selector: records
- name: lastExternalReferrer
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
    data_selector: lastExternalReferrer
    params: {}
- name: CMID
  endpoint:
    path: /CMID
    method: GET
    data_selector: CMID
    params: {}
- name: query_timeout
  endpoint:
    path: /query/timeout
    method: GET
    data_selector: default
    params: {}
- name: backup_dir
  endpoint:
    path: /backup/dir
    method: GET
    data_selector: default
    params: {}
- name: memory_management
  endpoint:
    path: /memory/management
    method: GET
    data_selector: default
    params: {}
- name: security_named_graphs
  endpoint:
    path: /security/named_graphs
    method: GET
    data_selector: default
    params: {}
- name: logging.access
  endpoint:
    path: /logging/access
    method: GET
    data_selector: logging.access
    params: {}
- name: logging.audit
  endpoint:
    path: /logging/audit
    method: GET
    data_selector: logging.audit
    params: {}
- name: logging.slow_query
  endpoint:
    path: /logging/slow_query
    method: GET
    data_selector: logging.slow_query
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: access_log
  endpoint:
    path: /stardog.properties
    method: POST
    data_selector: logging.access.enabled
    params: {}
- name: audit_log
  endpoint:
    path: /stardog.properties
    method: POST
    data_selector: logging.audit.enabled
    params: {}
- name: ziwsSession
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: ziwsSessionId
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: lastExternalReferrerTime
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: log/error
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: topicsLastReferenceTime
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: _fbp
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: adroll_flgs
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: CMID
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: CMPRO
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: CMPS
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: rum
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: tuuid
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: tuuid_lu
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: drift_aid
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: drift_campaign_refresh
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: DRIFT_SESSION_CAMPAIGNS
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: IDE
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: NID
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: pagead/1p-user-list/#
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: pagead/gen_204/
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: _ga
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: _ga_#
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: _gcl_au
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: _gid
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: _gcl_ls
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: __ptq.gif
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: privacy_sandbox/topics/registration/
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: tv_UIDM
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: tvid
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: i/jot/embeds
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: '#-#'
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: __Secure-ROLLOUT_TOKEN
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: __Secure-YEC
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: iU5q-!O9@$
  endpoint:
    path: /
    method: GET
    data_selector: ''
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: server_backup
  endpoint:
    path: /stardog-admin/server/backup
    method: POST
    data_selector: backup_location
    params: {}
- name: server_restore
  endpoint:
    path: /stardog-admin/server/restore
    method: POST
    data_selector: backup_location
    params:
      node_id: unique_node_id
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: stardog_cloud
  endpoint:
    path: /stardog_cloud
    method: GET
    data_selector: cors.allowed.origins
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: users
  endpoint:
    path: /admin/users
    method: GET
    data_selector: users
- name: server_status
  endpoint:
    path: /admin/status
    method: GET
    data_selector: JSON
    params: {}
- name: database_status
  endpoint:
    path: /{yourDatabaseName}/status
    method: GET
    data_selector: JSON
    params: {}
- name: prometheus_metrics
  endpoint:
    path: /admin/status/prometheus
    method: GET
    data_selector: JSON
    params: {}
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: url
    params: {}
- name: adroll_flgs
  endpoint:
    path: /adroll_flgs
    method: GET
    data_selector: ad_data
    params: {}
- name: CMID
  endpoint:
    path: /CMID
    method: GET
    data_selector: visitor_data
    params: {}
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
    data_selector: user_id
    params: {}
- name: index_metrics
  endpoint:
    path: /metrics/index
    method: GET
    data_selector: metrics
- name: http_server_metrics
  endpoint:
    path: /metrics/http
    method: GET
    data_selector: metrics
- name: memory_usage_metrics
  endpoint:
    path: /metrics/memory
    method: GET
    data_selector: metrics
- name: process_metrics
  endpoint:
    path: /metrics/process
    method: GET
    data_selector: metrics
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-list
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/license-info
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/log-print
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-get
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/property-get
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/ps-list
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/query-list
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/role-list
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/sensitive-property-list
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/server-status
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/stored-list
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/user-list
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/virtual-list
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/zk-info
    method: GET
- name: process_management
  endpoint:
    path: /ps/list
    method: GET
    data_selector: results
    params: {}
- name: terminate_process
  endpoint:
    path: /ps/kill/{process_id}
    method: POST
    data_selector: result
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-list
    method: GET
    data_selector: records
    params: {}
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/license-info
    method: GET
    data_selector: records
    params: {}
- name: querylog
  endpoint:
    path: /querylog
    method: GET
    data_selector: '*'
    params: {}
- name: data
  endpoint:
    path: /services/data
    method: GET
    data_selector: records
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-add
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: interaction_logs
    params: {}
- name: user
  endpoint:
    path: /stardog-admin/user
    method: POST
    data_selector: users
    params: {}
- name: role
  endpoint:
    path: /stardog-admin/role
    method: POST
    data_selector: roles
    params: {}
- name: datasets
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: stardog-explorer
  endpoint:
    path: /stardog-explorer
    method: GET
- name: stardog-studio
  endpoint:
    path: /stardog-studio
    method: GET
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: functions
    params: {}
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: licenses
    params: {}
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
    data_selector: logs
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: interaction
- name: default_graph
  endpoint:
    path: /query
    method: POST
    data_selector: results
    params:
      query: SELECT * { ?s ?p ?o }
- name: named_graph
  endpoint:
    path: /query
    method: POST
    data_selector: results
    params:
      query: SELECT * { GRAPH ?g { ?s ?p ?o } }
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: superusers
  endpoint:
    path: /stardogSuperUsers
    method: GET
    data_selector: members
    params: {}
- name: modelers
  endpoint:
    path: /stardogModelers
    method: GET
    data_selector: members
    params: {}
- name: readers
  endpoint:
    path: /stardogReaders
    method: GET
    data_selector: members
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: Human
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: Droid
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: Character
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /admin/users
    method: GET
    data_selector: users
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function
    method: GET
    data_selector: functions
    params: {}
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license
    method: GET
    data_selector: licenses
    params: {}
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log
    method: GET
    data_selector: logs
    params: {}
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata
    method: GET
    data_selector: metadata
    params: {}
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property
    method: GET
    data_selector: properties
    params: {}
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps
    method: GET
    data_selector: processes
    params: {}
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query
    method: GET
    data_selector: queries
    params: {}
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role
    method: GET
    data_selector: roles
    params: {}
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property
    method: GET
    data_selector: sensitive-properties
    params: {}
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server
    method: GET
    data_selector: servers
    params: {}
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored
    method: GET
    data_selector: stored
    params: {}
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user
    method: GET
    data_selector: users
    params: {}
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual
    method: GET
    data_selector: virtuals
    params: {}
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk
    method: GET
    data_selector: zks
    params: {}
- name: visitor_statistics
  endpoint:
    path: /api/statistics
    method: GET
    data_selector: data
    params: {}
- name: cache_target
  endpoint:
    path: /security/cache-target
    method: GET
    data_selector: resources
    params:
      function: CREATE
- name: cached_graph
  endpoint:
    path: /security/cache
    method: GET
    data_selector: resources
    params:
      function: CREATE
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/last_result_entry_key
    method: GET
    data_selector: records
- name: LogsDatabaseV2
  endpoint:
    path: /cookies/logs_database_v2
    method: GET
    data_selector: records
- name: remote_sid
  endpoint:
    path: /cookies/remote_sid
    method: GET
    data_selector: records
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /cookies/service_worker_logs_database
    method: GET
    data_selector: records
- name: TESTCOOKIESENABLED
  endpoint:
    path: /cookies/testcookiesenabled
    method: GET
    data_selector: records
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /cookies/visitor_info1_live
    method: GET
    data_selector: records
- name: YSC
  endpoint:
    path: /cookies/ysc
    method: GET
    data_selector: records
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/ytidb_last_result_entry_key
    method: GET
    data_selector: records
- name: YtIdbMeta
  endpoint:
    path: /cookies/ytidb_meta
    method: GET
    data_selector: records
- name: yt-remote-cast-available
  endpoint:
    path: /cookies/yt_remote_cast_available
    method: GET
    data_selector: records
- name: yt-remote-cast-installed
  endpoint:
    path: /cookies/yt_remote_cast_installed
    method: GET
    data_selector: records
- name: yt-remote-connected-devices
  endpoint:
    path: /cookies/yt_remote_connected_devices
    method: GET
    data_selector: records
- name: yt-remote-device-id
  endpoint:
    path: /cookies/yt_remote_device_id
    method: GET
    data_selector: records
- name: yt-remote-fast-check-period
  endpoint:
    path: /cookies/yt_remote_fast_check_period
    method: GET
    data_selector: records
- name: yt-remote-session-app
  endpoint:
    path: /cookies/yt_remote_session_app
    method: GET
    data_selector: records
- name: yt-remote-session-name
  endpoint:
    path: /cookies/yt_remote_session_name
    method: GET
    data_selector: records
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: TestDefinition
  endpoint:
    path: /test-definitions
    method: GET
    data_selector: tests
    params: {}
- name: albums
  endpoint:
    path: /stardog-tutorial-music
    method: POST
    data_selector: results
    params:
      glob: '[0|1]*.sparql'
- name: Person
  endpoint:
    path: /sql/schema/Person
    method: SELECT
    data_selector: rows
- name: Country
  endpoint:
    path: /sql/schema/Country
    method: SELECT
    data_selector: rows
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: functions
    params: {}
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: licenses
    params: {}
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
    data_selector: logs
    params: {}
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
    data_selector: metadata
    params: {}
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
    data_selector: properties
    params: {}
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
    data_selector: processes
    params: {}
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
    data_selector: queries
    params: {}
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
    data_selector: roles
    params: {}
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
    data_selector: sensitiveProperties
    params: {}
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
    data_selector: servers
    params: {}
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
    data_selector: storedItems
    params: {}
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
    data_selector: users
    params: {}
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
    data_selector: virtuals
    params: {}
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
    data_selector: zkItems
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /logs/last_result_entry_key
    method: GET
- name: LogsRequestsStore
  endpoint:
    path: /logs/requests_store
    method: GET
- name: remote_sid
  endpoint:
    path: /logs/remote_sid
    method: GET
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: /logs/sw_health_log
    method: GET
- name: TESTCOOKIESENABLED
  endpoint:
    path: /logs/test_cookies_enabled
    method: GET
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /logs/visitor_info1_live
    method: GET
- name: YSC
  endpoint:
    path: /logs/ysc
    method: GET
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /logs/ytidb/last_result_entry_key
    method: GET
- name: YtIdbMeta#databases
  endpoint:
    path: /logs/ytidb_meta/databases
    method: GET
- name: yt-remote-cast-available
  endpoint:
    path: /logs/yt_remote/cast_available
    method: GET
- name: yt-remote-cast-installed
  endpoint:
    path: /logs/yt_remote/cast_installed
    method: GET
- name: yt-remote-connected-devices
  endpoint:
    path: /logs/yt_remote/connected_devices
    method: GET
- name: yt-remote-device-id
  endpoint:
    path: /logs/yt_remote/device_id
    method: GET
- name: yt-remote-fast-check-period
  endpoint:
    path: /logs/yt_remote/fast_check_period
    method: GET
- name: yt-remote-session-app
  endpoint:
    path: /logs/yt_remote/session_app
    method: GET
- name: yt-remote-session-name
  endpoint:
    path: /logs/yt_remote/session_name
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_source
  endpoint:
    path: /api/v1/data
    method: GET
    data_selector: data
    params: {}
- name: include
  endpoint:
    path: /obf/include
    method: GET
    data_selector: pattern
    params:
      position: any
      pattern: math
- name: exclude
  endpoint:
    path: /obf/exclude
    method: GET
    data_selector: namespace
    params:
      position: any
      namespace: rdf
- name: Project Resource
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: Data Model
  endpoint:
    path: /data-models
    method: GET
    data_selector: dataModels
- name: sample
  endpoint:
    path: /tag/stardog/api/sample
    method: GET
    data_selector: ''
    params:
      smp:size: required
      smp:ratio: 0.5
      smp:mode: random
      total: 0
- name: sequence
  endpoint:
    path: /tag/stardog/api/sequence
    method: GET
    data_selector: output
    params: {}
- name: stardog_explorer
  endpoint:
    path: /stardog/stardog-explorer
    method: GET
- name: stardog_studio
  endpoint:
    path: /stardog/stardog-studio
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: remote_sid
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: YSC
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: labels
  endpoint:
    path: /stardog:labels
    method: GET
    data_selector: results
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: remote_sid
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YSC
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/LAST_RESULT_ENTRY_KEY
    method: GET
- name: LogsDatabaseV2
  endpoint:
    path: /cookies/LogsDatabaseV2
    method: GET
- name: remote_sid
  endpoint:
    path: /cookies/remote_sid
    method: GET
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /cookies/ServiceWorkerLogsDatabase
    method: GET
- name: TESTCOOKIESENABLED
  endpoint:
    path: /cookies/TESTCOOKIESENABLED
    method: GET
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /cookies/VISITOR_INFO1_LIVE
    method: GET
- name: YSC
  endpoint:
    path: /cookies/YSC
    method: GET
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/ytidb::LAST_RESULT_ENTRY_KEY
    method: GET
- name: YtIdbMeta
  endpoint:
    path: /cookies/YtIdbMeta
    method: GET
- name: yt-remote-cast-available
  endpoint:
    path: /cookies/yt-remote-cast-available
    method: GET
- name: yt-remote-cast-installed
  endpoint:
    path: /cookies/yt-remote-cast-installed
    method: GET
- name: yt-remote-connected-devices
  endpoint:
    path: /cookies/yt-remote-connected-devices
    method: GET
- name: yt-remote-device-id
  endpoint:
    path: /cookies/yt-remote-device-id
    method: GET
- name: yt-remote-fast-check-period
  endpoint:
    path: /cookies/yt-remote-fast-check-period
    method: GET
- name: yt-remote-session-app
  endpoint:
    path: /cookies/yt-remote-session-app
    method: GET
- name: yt-remote-session-name
  endpoint:
    path: /cookies/yt-remote-session-name
    method: GET
- name: adroll_dqs
  endpoint:
    path: /cookies/adroll_dqs
    method: GET
- name: WMF-Uniq
  endpoint:
    path: /cookies/WMF-Uniq
    method: GET
- name: seenArticlesArray
  endpoint:
    path: /cookies/seenArticlesArray
    method: GET
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /path/to/endpoint
    method: GET
    data_selector: records
    params: {}
- name: remote_sid
  endpoint:
    path: /path/to/endpoint
    method: GET
    data_selector: records
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: zookeeper
  endpoint:
    path: /admin/cluster/coordinator
    method: GET
- name: stardog_healthcheck
  endpoint:
    path: /admin/healthcheck
    method: GET
- name: data_source
  endpoint:
    path: /data-source
    method: GET
    data_selector: records
    params: {}
- name: knowledge_catalog
  endpoint:
    path: /knowledge-catalog/
    method: GET
    data_selector: records
- name: graph_analytics
  endpoint:
    path: /graph-analytics/
    method: GET
    data_selector: records
- name: cookies
  endpoint:
    path: /services/data/vXX.X/sobjects/Cookies
    method: GET
    data_selector: records
    params: {}
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: records
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: records
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
    data_selector: records
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
    data_selector: records
- name: IDE
  endpoint:
    path: /IDE
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: dataSources
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /path/to/last_result_entry_key
    method: GET
    data_selector: records
- name: LogsDatabaseV2
  endpoint:
    path: /path/to/logs_database_v2
    method: GET
    data_selector: records
- name: remote_sid
  endpoint:
    path: /path/to/remote_sid
    method: GET
    data_selector: records
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /path/to/service_worker_logs_database
    method: GET
    data_selector: records
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: standby_node_status
  endpoint:
    path: /cluster/standby-status
    method: GET
    data_selector: status
- name: standby_node_pause
  endpoint:
    path: /cluster/standby-pause
    method: POST
    data_selector: pause
- name: standby_node_resume
  endpoint:
    path: /cluster/standby-resume
    method: POST
    data_selector: resume
- name: standby_node_attempt_sync
  endpoint:
    path: /cluster/standby-attempt-sync
    method: POST
    data_selector: attempt_sync
- name: Human
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: Character
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: Droid
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: Episode
  endpoint:
    path: /graphql
    method: POST
    data_selector: data
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: LogsDatabaseV2:V#||LogsRequestsStore
    method: GET
    data_selector: records
- name: remote_sid
  endpoint:
    path: ServiceWorkerLogsDatabase#SWHealthLog
    method: GET
    data_selector: records
- name: TESTCOOKIESENABLED
  endpoint:
    path: LogsDatabaseV2:V#||LogsRequestsStore
    method: GET
    data_selector: records
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: LogsDatabaseV2:V#||LogsRequestsStore
    method: GET
    data_selector: records
- name: YSC
  endpoint:
    path: LogsDatabaseV2:V#||LogsRequestsStore
    method: GET
    data_selector: records
- name: read_replica_node
  endpoint:
    path: /admin/cluster/readreplica
    method: GET
    data_selector: status
    params: {}
- name: visitor_statistics
  endpoint:
    path: /v1/visitor/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: advertisement_data
  endpoint:
    path: /v1/ad/data
    method: GET
    data_selector: ads
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk
    method: GET
- name: test_definition
  endpoint:
    path: /test-definition
    method: POST
    data_selector: tests
    params: {}
- name: test_definition
  endpoint:
    path: /stardog/test
    method: POST
    data_selector: tests
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: interaction
    params: {}
- name: remote_sid
  endpoint:
    path: /YouTubeContent
    method: GET
    data_selector: functionality
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: /trackInteraction
    method: GET
    data_selector: interaction
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /estimateBandwidth
    method: GET
    data_selector: bandwidth
    params: {}
- name: YSC
  endpoint:
    path: /trackVideoStatistics
    method: GET
    data_selector: videoStatistics
    params: {}
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: records
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: abbreviate
  endpoint:
    path: string:abbreviate
    method: GET
    data_selector: results
    params: {}
- name: abbreviateMiddle
  endpoint:
    path: string:abbreviateMiddle
    method: GET
    data_selector: results
    params: {}
- name: abbreviateWithMarker
  endpoint:
    path: string:abbreviateWithMarker
    method: GET
    data_selector: results
    params: {}
- name: ABS
  endpoint:
    path: ABS
    method: GET
    data_selector: results
    params: {}
- name: acos
  endpoint:
    path: math:acos
    method: GET
    data_selector: results
    params: {}
- name: acosec
  endpoint:
    path: math:acosec
    method: GET
    data_selector: results
    params: {}
- name: acotan
  endpoint:
    path: math:acotan
    method: GET
    data_selector: results
    params: {}
- name: addDayTimeDurations
  endpoint:
    path: swrlb:addDayTimeDurations
    method: GET
    data_selector: results
    params: {}
- name: addDayTimeDurationToDate
  endpoint:
    path: swrlb:addDayTimeDurationToDate
    method: GET
    data_selector: results
    params: {}
- name: addDayTimeDurationToDateTime
  endpoint:
    path: swrlb:addDayTimeDurationToDateTime
    method: GET
    data_selector: results
    params: {}
- name: addDayTimeDurationToTime
  endpoint:
    path: swrlb:addDayTimeDurationToTime
    method: GET
    data_selector: results
    params: {}
- name: addYearMonthDurations
  endpoint:
    path: swrlb:addYearMonthDurations
    method: GET
    data_selector: results
    params: {}
- name: addYearMonthDurationToDate
  endpoint:
    path: swrlb:addYearMonthDurationToDate
    method: GET
    data_selector: results
    params: {}
- name: addYearMonthDurationToDateTime
  endpoint:
    path: swrlb:addYearMonthDurationToDateTime
    method: GET
    data_selector: results
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: validate_sparql
  endpoint:
    path: /validate
    method: POST
    data_selector: results
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /logs/last_result_entry_key
    method: GET
    data_selector: records
- name: remote_sid
  endpoint:
    path: /logs/remote_sid
    method: GET
    data_selector: records
- name: TESTCOOKIESENABLED
  endpoint:
    path: /logs/test_cookies_enabled
    method: GET
    data_selector: records
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /logs/visitor_info1_live
    method: GET
    data_selector: records
- name: YSC
  endpoint:
    path: /logs/ysc
    method: GET
    data_selector: records
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: validation_report
  endpoint:
    path: /validate
    method: POST
    data_selector: results
- name: sample
  endpoint:
    path: /tag/stardog/api/sample
    method: GET
    data_selector: results
    params:
      smp:size: required
      smp:ratio: 0.5
      smp:mode: random
      total: 0
- name: dept
  endpoint:
    path: /services/data/vXX.X/sobjects/dept
    method: GET
- name: ziwsSession
  endpoint:
    path: /path/to/ziwsSession
    method: GET
    data_selector: statistics
    params: {}
- name: ziwsSessionId
  endpoint:
    path: /path/to/ziwsSessionId
    method: GET
    data_selector: statistics
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: /path/to/lastExternalReferrer
    method: GET
    data_selector: referrer
    params: {}
- name: lastExternalReferrerTime
  endpoint:
    path: /path/to/lastExternalReferrerTime
    method: GET
    data_selector: referrerTime
    params: {}
- name: topicsLastReferenceTime
  endpoint:
    path: /path/to/topicsLastReferenceTime
    method: GET
    data_selector: topicsReference
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: sequence
  endpoint:
    path: /tag/stardog/api/sequence
    method: GET
    data_selector: results
    params: {}
- name: dept
  endpoint:
    path: /jdbc:mysql://localhost/dept
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: records
    params: {}
- name: predicate_statistics
  endpoint:
    path: /tag/stardog/api/statistics
    method: GET
    data_selector: statistics
- name: subject_star_statistics
  endpoint:
    path: /tag/stardog/api/statistics
    method: GET
    data_selector: statistics
- name: chain_statistics
  endpoint:
    path: /tag/stardog/api/statistics
    method: GET
    data_selector: statistics
- name: types_statistics
  endpoint:
    path: /tag/stardog/api/statistics
    method: GET
    data_selector: statistics
- name: data_source
  endpoint:
    path: /v1/data/source
    method: GET
    data_selector: records
- name: labels
  endpoint:
    path: /stardog:labels
    method: GET
    data_selector: labels
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: zookeeper
  endpoint:
    path: /zookeeper/config
    method: GET
    data_selector: nodes
    params: {}
- name: stardog
  endpoint:
    path: /stardog/config
    method: GET
    data_selector: nodes
    params: {}
- name: jdbc
  endpoint:
    path: /jdbc
    method: GET
    data_selector: records
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: movie
  endpoint:
    path: /movies
    method: GET
    data_selector: records
- name: lastExternalReferrer
  endpoint:
    path: privacy_sandbox/topics/registration/
    method: GET
    data_selector: data
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-add
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: data
  endpoint:
    path: /services/data/v1/data
    method: GET
    data_selector: records
- name: databricks_connection
  endpoint:
    path: /sql/1.0/endpoints/7b80d...
    method: GET
    data_selector: records
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
- name: ziwsSessionId
  endpoint:
    path: /ziwsSessionId
    method: GET
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
- name: lastExternalReferrerTime
  endpoint:
    path: /lastExternalReferrerTime
    method: GET
- name: log/error
  endpoint:
    path: /log/error
    method: GET
- name: topicsLastReferenceTime
  endpoint:
    path: /topicsLastReferenceTime
    method: GET
- name: _fbp
  endpoint:
    path: /_fbp
    method: GET
- name: adroll_flgs
  endpoint:
    path: /adroll_flgs
    method: GET
- name: CMID
  endpoint:
    path: /CMID
    method: GET
- name: CMPRO
  endpoint:
    path: /CMPRO
    method: GET
- name: CMPS
  endpoint:
    path: /CMPS
    method: GET
- name: rum
  endpoint:
    path: /rum
    method: GET
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
- name: tuuid_lu
  endpoint:
    path: /tuuid_lu
    method: GET
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
- name: drift_campaign_refresh
  endpoint:
    path: /drift_campaign_refresh
    method: GET
- name: DRIFT_SESSION_CAMPAIGNS
  endpoint:
    path: /DRIFT_SESSION_CAMPAIGNS
    method: GET
- name: IDE
  endpoint:
    path: /IDE
    method: GET
- name: NID
  endpoint:
    path: /NID
    method: GET
- name: pagead/1p-user-list/#
  endpoint:
    path: /pagead/1p-user-list/#
    method: GET
- name: pagead/gen_204/
  endpoint:
    path: /pagead/gen_204/
    method: GET
- name: _ga
  endpoint:
    path: /_ga
    method: GET
- name: _ga_#
  endpoint:
    path: /_ga_#
    method: GET
- name: _gcl_au
  endpoint:
    path: /_gcl_au
    method: GET
- name: _gid
  endpoint:
    path: /_gid
    method: GET
- name: _gcl_ls
  endpoint:
    path: /_gcl_ls
    method: GET
- name: __ptq.gif
  endpoint:
    path: /__ptq.gif
    method: GET
- name: privacy_sandbox/topics/registration/
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
- name: tv_UIDM
  endpoint:
    path: /tv_UIDM
    method: GET
- name: tvid
  endpoint:
    path: /tvid
    method: GET
- name: i/jot/embeds
  endpoint:
    path: /i/jot/embeds
    method: GET
- name: '#-#'
  endpoint:
    path: /#-#
    method: GET
- name: __Secure-ROLLOUT_TOKEN
  endpoint:
    path: /__Secure-ROLLOUT_TOKEN
    method: GET
- name: __Secure-YEC
  endpoint:
    path: /__Secure-YEC
    method: GET
- name: iU5q-!O9@$
  endpoint:
    path: /iU5q-!O9@$
    method: GET
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
    params: {}
- name: vehicles
  endpoint:
    path: /change/this/path/vehicles.json
    method: GET
    data_selector: vehicles
    params: {}
- name: spacex
  endpoint:
    path: https://api.spacexdata.com/v3/launches
    method: GET
    data_selector: launches
    params: {}
- name: launches
  endpoint:
    path: /v3/launches
    method: GET
    data_selector: records
- name: fuel_stations
  endpoint:
    path: /api/alt-fuel-stations/v1.json
    method: GET
    data_selector: $.fuel_stations
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk
    method: GET
- name: data
  endpoint:
    path: /stardog-cli-reference/data
    method: GET
- name: doc
  endpoint:
    path: /stardog-cli-reference/doc
    method: GET
- name: entity-resolution
  endpoint:
    path: /stardog-cli-reference/entity-resolution
    method: GET
- name: file
  endpoint:
    path: /stardog-cli-reference/file
    method: GET
- name: graphql
  endpoint:
    path: /stardog-cli-reference/graphql
    method: GET
- name: icv
  endpoint:
    path: /stardog-cli-reference/icv
    method: GET
- name: namespace
  endpoint:
    path: /stardog-cli-reference/namespace
    method: GET
- name: reasoning
  endpoint:
    path: /stardog-cli-reference/reasoning
    method: GET
- name: test
  endpoint:
    path: /stardog-cli-reference/test
    method: GET
- name: tx
  endpoint:
    path: /stardog-cli-reference/tx
    method: GET
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
- name: database
  endpoint:
    path: /stardog-admin-cli-reference/db/
    method: GET
- name: movies
  endpoint:
    path: /movies
    method: GET
    data_selector: records
    params: {}
- name: movie
  endpoint:
    path: /movies
    method: POST
    data_selector: movie
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/last_result_entry_key
    method: GET
    data_selector: records
- name: LogsDatabaseV2
  endpoint:
    path: /cookies/logs_database_v2
    method: GET
    data_selector: records
- name: remote_sid
  endpoint:
    path: /cookies/remote_sid
    method: GET
    data_selector: records
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: /cookies/service_worker_logs
    method: GET
    data_selector: records
- name: TESTCOOKIESENABLED
  endpoint:
    path: /cookies/test_cookies_enabled
    method: GET
    data_selector: records
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /cookies/visitor_info1_live
    method: GET
    data_selector: records
- name: YSC
  endpoint:
    path: /cookies/ysc
    method: GET
    data_selector: records
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/ytidb_last_result_entry_key
    method: GET
    data_selector: records
- name: YtIdbMeta#databases
  endpoint:
    path: /cookies/ytidb_meta_databases
    method: GET
    data_selector: records
- name: yt-remote-cast-available
  endpoint:
    path: /cookies/yt_remote_cast_available
    method: GET
    data_selector: records
- name: yt-remote-cast-installed
  endpoint:
    path: /cookies/yt_remote_cast_installed
    method: GET
    data_selector: records
- name: yt-remote-connected-devices
  endpoint:
    path: /cookies/yt_remote_connected_devices
    method: GET
    data_selector: records
- name: yt-remote-device-id
  endpoint:
    path: /cookies/yt_remote_device_id
    method: GET
    data_selector: records
- name: yt-remote-fast-check-period
  endpoint:
    path: /cookies/yt_remote_fast_check_period
    method: GET
    data_selector: records
- name: yt-remote-session-app
  endpoint:
    path: /cookies/yt_remote_session_app
    method: GET
    data_selector: records
- name: yt-remote-session-name
  endpoint:
    path: /cookies/yt_remote_session_name
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /services/data/vXX.X/sobjects/DataSource
    method: GET
    data_selector: records
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: data
  endpoint:
    path: /stardog-cli-reference/data/
    method: GET
- name: doc
  endpoint:
    path: /stardog-cli-reference/doc/
    method: GET
- name: entity-resolution
  endpoint:
    path: /stardog-cli-reference/entity-resolution/
    method: GET
- name: file
  endpoint:
    path: /stardog-cli-reference/file/
    method: GET
- name: graphql
  endpoint:
    path: /stardog-cli-reference/graphql/
    method: GET
- name: icv
  endpoint:
    path: /stardog-cli-reference/icv/
    method: GET
- name: namespace
  endpoint:
    path: /stardog-cli-reference/namespace/
    method: GET
- name: reasoning
  endpoint:
    path: /stardog-cli-reference/reasoning/
    method: GET
- name: test
  endpoint:
    path: /stardog-cli-reference/test/
    method: GET
- name: tx
  endpoint:
    path: /stardog-cli-reference/tx/
    method: GET
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: Session
    method: GET
- name: LogsRequestsStore
  endpoint:
    path: Persistent
    method: GET
- name: remote_sid
  endpoint:
    path: Session
    method: GET
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: Persistent
    method: GET
- name: TESTCOOKIESENABLED
  endpoint:
    path: 1 day
    method: GET
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: 180 days
    method: GET
- name: YSC
  endpoint:
    path: Session
    method: GET
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: Persistent
    method: GET
- name: YtIdbMeta#databases
  endpoint:
    path: Persistent
    method: GET
- name: yt-remote-cast-available
  endpoint:
    path: Session
    method: GET
- name: yt-remote-cast-installed
  endpoint:
    path: Session
    method: GET
- name: yt-remote-connected-devices
  endpoint:
    path: Persistent
    method: GET
- name: yt-remote-device-id
  endpoint:
    path: Persistent
    method: GET
- name: yt-remote-fast-check-period
  endpoint:
    path: Session
    method: GET
- name: yt-remote-session-app
  endpoint:
    path: Session
    method: GET
- name: yt-remote-session-name
  endpoint:
    path: Session
    method: GET
- name: bitcoin
  endpoint:
    path: /virtual/import
    method: POST
    data_selector: records
- name: actors
  endpoint:
    path: /virtual/actors1
    method: GET
    data_selector: s
    params: {}
- name: movies
  endpoint:
    path: /virtual/predicates
    method: GET
    data_selector: s
    params: {}
- name: Remakes
  endpoint:
    path: /examples/virtual/optimization/06functions.sql
    method: SELECT
    data_selector: '*'
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: referrer
- name: CMID
  endpoint:
    path: /CMID
    method: GET
    data_selector: visitorData
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
    data_selector: visitorData
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
    data_selector: userID
- name: IDE
  endpoint:
    path: /IDE
    method: GET
    data_selector: adData
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
- name: db
  endpoint:
    path: /stardog-admin-cli-reference/db/
    method: GET
- name: read_replica
  endpoint:
    path: /admin/cluster/readreplica
    method: GET
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
- name: ziwsSessionId
  endpoint:
    path: /ziwsSessionId
    method: GET
    data_selector: statistics
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: url
- name: lastExternalReferrerTime
  endpoint:
    path: /lastExternalReferrerTime
    method: GET
    data_selector: time
- name: catalog
  endpoint:
    path: /catalog
    method: GET
    data_selector: metadata
    params: {}
- name: geo_replica
  endpoint:
    path: /stardog.properties
    method: GET
    data_selector: properties
    params:
      pack.enabled: 'true'
      pack.geoReplica: 'true'
      pack.geoReplica.address: <Stardog source cluster IP>:5820
      pack.geoReplica.connection.user: <Stardog source cluster superuser>
      pack.geoReplica.connection.password: <Stardog source cluster superuser password>
- name: atlan
  endpoint:
    path: /admin/catalog/credentials
    method: POST
    data_selector: ''
    params: {}
- name: Stardog Knowledge Catalog
  endpoint:
    path: /admin/catalog/credentials
    method: POST
    data_selector: token
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Hashicorp Vault
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: POST
    data_selector: credentials
    params: {}
- name: AWS Secrets Manager
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: POST
    data_selector: credentials
    params: {}
- name: Azure Key Vault
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: POST
    data_selector: credentials
    params: {}
- name: Google Secret Manager
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: POST
    data_selector: credentials
    params: {}
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: referrer_data
- name: log/error
  endpoint:
    path: /log/error
    method: POST
    data_selector: error_log
- name: topicsLastReferenceTime
  endpoint:
    path: /topicsLastReferenceTime
    method: GET
    data_selector: topics_data
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: model_learning
  endpoint:
    path: /api/analytics
    method: POST
    data_selector: results
- name: making_predictions
  endpoint:
    path: /api/analytics/predict
    method: POST
    data_selector: results
- name: assessing_model_quality
  endpoint:
    path: /api/analytics/evaluate
    method: GET
    data_selector: results
- name: consent
  endpoint:
    path: /services/data/vXX.X/sobjects/Consent
    method: GET
    data_selector: records
    params: {}
- name: adult_classification
  endpoint:
    path: /classify/adult
    method: GET
    data_selector: rules
    params: {}
- name: full_name_inference
  endpoint:
    path: /infer/full_name
    method: GET
    data_selector: rules
    params: {}
- name: age_computation
  endpoint:
    path: /compute/age
    method: GET
    data_selector: rules
    params: {}
- name: inactive_account_identification
  endpoint:
    path: /identify/inactive_account
    method: GET
    data_selector: rules
    params: {}
- name: account_aggregation
  endpoint:
    path: /aggregate/account
    method: GET
    data_selector: rules
    params: {}
- name: graph_analytics
  endpoint:
    path: /graph/analytics
    method: POST
    data_selector: output
    params:
      algorithm.name: PageRank
      algorithm.iterations: 5
      stardog.database: testDB
      stardog.query.timeout: 10m
      stardog.reasoning: false
      output.property: example:analytics:rank
      output.graph: example:analytics:graph
- name: router
  endpoint:
    path: /router
    method: POST
    data_selector: results
- name: query
  endpoint:
    path: /query/stardog
    method: POST
    data_selector: results
    params: {}
- name: PageRank
  endpoint:
    path: /graph/analytics/pagerank
    method: POST
    data_selector: results
    params:
      algorithm.iterations: 3
      pagerank.reset.probability: 0.15
- name: LabelPropagation
  endpoint:
    path: /graph/analytics/labelpropagation
    method: POST
    data_selector: results
    params:
      algorithm.iterations: 3
- name: StronglyConnectedComponents
  endpoint:
    path: /graph/analytics/stronglyconnectedcomponents
    method: POST
    data_selector: results
    params:
      algorithm.iterations: 3
- name: ConnectedComponents
  endpoint:
    path: /graph/analytics/connectedcomponents
    method: POST
    data_selector: results
    params:
      algorithm.iterations: 3
- name: TriangleCount
  endpoint:
    path: /graph/analytics/trianglecount
    method: POST
    data_selector: results
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: functions
    params: {}
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: licenses
    params: {}
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
    data_selector: logs
    params: {}
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
    data_selector: metadata
    params: {}
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
    data_selector: properties
    params: {}
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
    data_selector: processes
    params: {}
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
    data_selector: queries
    params: {}
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
    data_selector: roles
    params: {}
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
    data_selector: sensitive_properties
    params: {}
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
    data_selector: servers
    params: {}
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
    data_selector: stored
    params: {}
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
    data_selector: users
    params: {}
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
    data_selector: virtual
    params: {}
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
    data_selector: zk
    params: {}
- name: stardog_dataset
  endpoint:
    path: /
    method: SELECT
    data_selector: properties
    params:
      query: SELECT * { ... }
- name: Databricks
  endpoint:
    path: /external-compute/configuring-external-compute-databricks
    method: GET
- name: EMR Serverless
  endpoint:
    path: /external-compute/configuring-external-compute-emr-serverless
    method: GET
- name: Virtual Graph Materialization
  endpoint:
    path: /external-compute/vg-materialization-external-compute
    method: GET
- name: Entity Resolution
  endpoint:
    path: /external-compute/entity-resolution-external-compute
    method: GET
- name: validate_sparql_query
  endpoint:
    path: /validate
    method: POST
    data_selector: validation_report
    params: {}
- name: validate_service
  endpoint:
    path: /service
    method: GET
    data_selector: validation_service_results
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: Used to track user’s interaction with embedded content.
    method: GET
    data_selector: Session
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: Used to track user’s interaction with embedded content.
    method: GET
    data_selector: Persistent
    params: {}
- name: remote_sid
  endpoint:
    path: Necessary for the implementation and functionality of YouTube video-content
      on the website.
    method: GET
    data_selector: Session
    params: {}
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: Necessary for the implementation and functionality of YouTube video-content
      on the website.
    method: GET
    data_selector: Persistent
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: Used to track user’s interaction with embedded content.
    method: GET
    data_selector: 1 day
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: Tries to estimate the users' bandwidth on pages with integrated YouTube
      videos.
    method: GET
    data_selector: 180 days
    params: {}
- name: YSC
  endpoint:
    path: Registers a unique ID to keep statistics of what videos from YouTube the
      user has seen.
    method: GET
    data_selector: Session
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: Used to track user’s interaction with embedded content.
    method: GET
    data_selector: Persistent
    params: {}
- name: YtIdbMeta
  endpoint:
    path: Used to track user’s interaction with embedded content.
    method: GET
    data_selector: Persistent
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: Stores the user's video player preferences using embedded YouTube video
    method: GET
    data_selector: Session
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: Stores the user's video player preferences using embedded YouTube video
    method: GET
    data_selector: Session
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: Stores the user's video player preferences using embedded YouTube video
    method: GET
    data_selector: Persistent
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: Stores the user's video player preferences using embedded YouTube video
    method: GET
    data_selector: Persistent
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: Stores the user's video player preferences using embedded YouTube video
    method: GET
    data_selector: Session
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: Stores the user's video player preferences using embedded YouTube video
    method: GET
    data_selector: Session
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: Stores the user's video player preferences using embedded YouTube video
    method: GET
    data_selector: Session
    params: {}
- name: stardog.external.compute.platform
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params: {}
- name: stardog.external.aws.region
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: stardog.external.aws.access.key
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: stardog.external.aws.secret.key
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: stardog.external.aws.session.token
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: stardog.external.emr-serverless.application.id
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: stardog.external.emr-serverless.execution.role.arn
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: spark.executorEnv.JAVA_HOME
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: spark.emr-serverless.driverEnv.JAVA_HOME
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: stardog.external.jar.path
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: validate_query
  endpoint:
    path: /validate
    method: POST
    data_selector: validation_report
    params: {}
- name: validate_service
  endpoint:
    path: /service/validate
    method: SELECT
    data_selector: validation_result
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: dept
  endpoint:
    path: /virtual/virtual-add
    method: POST
    data_selector: mappings
    params: {}
- name: entity_resolution
  endpoint:
    path: /entity-resolution/resolve
    method: POST
    data_selector: results
    params: {}
- name: ziwsSession
  endpoint:
    path: /path/to/ziwsSession
    method: GET
    data_selector: statistics
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: /path/to/lastExternalReferrer
    method: GET
    data_selector: referrerData
    params: {}
- name: CMID
  endpoint:
    path: /path/to/CMID
    method: GET
    data_selector: visitorData
    params: {}
- name: IDE
  endpoint:
    path: /path/to/IDE
    method: GET
    data_selector: adData
    params: {}
- name: adroll_dqs
  endpoint:
    path: Pending
    method: GET
    data_selector: records
    params: {}
- name: WMF-Uniq
  endpoint:
    path: Pending
    method: GET
    data_selector: records
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: data
- name: dept
  endpoint:
    path: /data-source/dept
    method: GET
    data_selector: records
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
    data_selector: data
    params: {}
- name: lastExternalReferrerTime
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
    data_selector: data
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: document_management
  endpoint:
    path: /stardog/doc
    method: PUT
    data_selector: results
    params: {}
- name: document_count
  endpoint:
    path: /stardog/doc/count
    method: GET
    data_selector: count
    params: {}
- name: document_delete
  endpoint:
    path: /stardog/doc/delete
    method: DELETE
    data_selector: results
    params: {}
- name: document_reindex
  endpoint:
    path: /stardog/doc/reindex
    method: POST
    data_selector: results
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/last_result_entry_key
    method: GET
    data_selector: logs
- name: LogsDatabaseV2
  endpoint:
    path: /cookies/logs_database_v2
    method: GET
    data_selector: logs
- name: remote_sid
  endpoint:
    path: /cookies/remote_sid
    method: GET
    data_selector: logs
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /cookies/service_worker_logs_database
    method: GET
    data_selector: logs
- name: TESTCOOKIESENABLED
  endpoint:
    path: /cookies/testcookiesenabled
    method: GET
    data_selector: logs
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /cookies/visitor_info1_live
    method: GET
    data_selector: logs
- name: YSC
  endpoint:
    path: /cookies/ysc
    method: GET
    data_selector: logs
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/ytidb_last_result_entry_key
    method: GET
    data_selector: logs
- name: YtIdbMeta
  endpoint:
    path: /cookies/ytidb_meta
    method: GET
    data_selector: logs
- name: yt-remote-cast-available
  endpoint:
    path: /cookies/yt_remote_cast_available
    method: GET
    data_selector: logs
- name: yt-remote-cast-installed
  endpoint:
    path: /cookies/yt_remote_cast_installed
    method: GET
    data_selector: logs
- name: yt-remote-connected-devices
  endpoint:
    path: /cookies/yt_remote_connected_devices
    method: GET
    data_selector: logs
- name: yt-remote-device-id
  endpoint:
    path: /cookies/yt_remote_device_id
    method: GET
    data_selector: logs
- name: yt-remote-fast-check-period
  endpoint:
    path: /cookies/yt_remote_fast_check_period
    method: GET
    data_selector: logs
- name: yt-remote-session-app
  endpoint:
    path: /cookies/yt_remote_session_app
    method: GET
    data_selector: logs
- name: yt-remote-session-name
  endpoint:
    path: /cookies/yt_remote_session_name
    method: GET
    data_selector: logs
- name: visitor_statistics
  endpoint:
    path: /visitor/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: data_source
  endpoint:
    path: /api/v1/data-source
    method: GET
    data_selector: dataSources
    params: {}
- name: entities
  endpoint:
    path: /services/docs/entityExtractor
    method: GET
    data_selector: mentions
- name: linker
  endpoint:
    path: /services/docs/entityExtractor
    method: GET
    data_selector: mentions
- name: dictionary
  endpoint:
    path: /services/docs/entityExtractor
    method: GET
    data_selector: mentions
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: properties
  endpoint:
    path: /properties
    method: GET
    data_selector: records
- name: database
  endpoint:
    path: /databases
    method: POST
    data_selector: database
    params: {}
- name: add_data
  endpoint:
    path: /databases/{db}/statements
    method: POST
    data_selector: statements
    params: {}
- name: remove_data
  endpoint:
    path: /databases/{db}/statements
    method: DELETE
    data_selector: statements
    params: {}
- name: testConnectionPool
  endpoint:
    path: /testConnectionPool
    method: GET
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: logs
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: query
  endpoint:
    path: /query
    method: POST
    data_selector: results
- name: update
  endpoint:
    path: /update
    method: POST
    data_selector: results
- name: vehicles
  endpoint:
    path: /change/this/path/vehicles.json
    method: GET
    data_selector: vehicles
- name: spacex
  endpoint:
    path: /v3/launches
    method: GET
    data_selector: launches
- name: launches
  endpoint:
    path: /launches
    method: GET
    data_selector: records
- name: fuel_stations
  endpoint:
    path: /api/alt-fuel-stations/v1.json
    method: GET
    data_selector: $.fuel_stations
- name: DataSourceFactoryBean
  endpoint:
    path: /com/complexible/stardog/ext/spring/DataSourceFactoryBean
    method: GET
    data_selector: records
- name: SnarlTemplate
  endpoint:
    path: /com/complexible/stardog/ext/spring/SnarlTemplate
    method: GET
    data_selector: records
- name: DataImporter
  endpoint:
    path: /com/complexible/stardog/ext/spring/DataImporter
    method: GET
    data_selector: records
- name: SnarlItemReader
  endpoint:
    path: /com/stardog/ext/spring/batch/SnarlItemReader
    method: GET
    data_selector: records
- name: SnarlItemWriter
  endpoint:
    path: /com/stardog/ext/spring/batch/SnarlItemWriter
    method: GET
    data_selector: records
- name: BatchAdderCallback
  endpoint:
    path: /com/stardog/ext/spring/batch/BatchAdderCallback
    method: GET
    data_selector: records
- name: connection
  endpoint:
    path: /connect
    method: POST
- name: query
  endpoint:
    path: /query
    method: POST
- name: insert
  endpoint:
    path: /insert
    method: POST
- name: update
  endpoint:
    path: /update
    method: POST
- name: ask
  endpoint:
    path: /ask
    method: POST
- name: movies
  endpoint:
    path: /movies
    method: GET
    data_selector: records
    params: {}
- name: movie
  endpoint:
    path: /movies
    method: GET
    data_selector: movie
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
- name: ziwsSessionId
  endpoint:
    path: /ziwsSessionId
    method: GET
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /
    method: GET
    data_selector: user_interaction
    params:
      storage_duration: Session
- name: LogsRequestsStore
  endpoint:
    path: /
    method: GET
    data_selector: user_interaction
    params:
      storage_duration: Persistent
- name: remote_sid
  endpoint:
    path: /
    method: GET
    data_selector: video_content_functionality
    params:
      storage_duration: Session
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: /
    method: GET
    data_selector: video_content_functionality
    params:
      storage_duration: Persistent
- name: TESTCOOKIESENABLED
  endpoint:
    path: /
    method: GET
    data_selector: user_interaction
    params:
      storage_duration: 1 day
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /
    method: GET
    data_selector: user_bandwidth_estimation
    params:
      storage_duration: 180 days
- name: YSC
  endpoint:
    path: /
    method: GET
    data_selector: video_statistics
    params:
      storage_duration: Session
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: records
    params: {}
- name: db
  endpoint:
    path: /stardog-admin-cli-reference/db/
    method: GET
    data_selector: records
    params: {}
- name: bitcoin
  endpoint:
    path: /virtual/import
    method: POST
    data_selector: data
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /
    method: GET
    data_selector: interaction
    params:
      storage_duration: Session
- name: LogsDatabaseV2
  endpoint:
    path: /
    method: GET
    data_selector: interaction
    params:
      storage_duration: Persistent
- name: remote_sid
  endpoint:
    path: /
    method: GET
    data_selector: functionality
    params:
      storage_duration: Session
- name: actors
  endpoint:
    path: /examples/Actors
    method: SELECT
    data_selector: id
    params: {}
- name: movies
  endpoint:
    path: /examples/Movies
    method: SELECT
    data_selector: id
    params: {}
- name: remakes
  endpoint:
    path: /examples/Remakes
    method: SELECT
    data_selector: '*'
    params: {}
- name: actors
  endpoint:
    path: /examples/Actors
    method: SELECT
    data_selector: '*'
    params: {}
- name: movies
  endpoint:
    path: /examples/Movies
    method: SELECT
    data_selector: '*'
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: functions
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: licenses
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
    data_selector: logs
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
    data_selector: metadata
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
    data_selector: properties
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
    data_selector: processes
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
    data_selector: queries
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
    data_selector: roles
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
    data_selector: sensitiveProperties
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
    data_selector: servers
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
    data_selector: storedData
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
    data_selector: users
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
    data_selector: virtuals
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
    data_selector: zk
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: LogsDatabaseV2:V#||LogsRequestsStore
    method: GET
    data_selector: interaction_data
- name: remote_sid
  endpoint:
    path: ServiceWorkerLogsDatabase#SWHealthLog
    method: GET
    data_selector: video_content_data
- name: TESTCOOKIESENABLED
  endpoint:
    path: unknown_path
    method: GET
    data_selector: interaction_data
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: unknown_path
    method: GET
    data_selector: bandwidth_estimate
- name: YSC
  endpoint:
    path: unknown_path
    method: GET
    data_selector: video_statistics
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: AnalyzerFactory
  endpoint:
    path: /META-INF/services/com.complexible.stardog.search.AnalyzerFactory
    method: GET
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: records
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: listUsers
  endpoint:
    path: /path/to/my/service
    method: GET
    data_selector: aUsers
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /api/data_source
    method: GET
    data_selector: data
    params: {}
- name: Atlan metadata provider
  endpoint:
    path: /admin/catalog/credentials
    method: POST
    data_selector: token
    params: {}
- name: Connection
  endpoint:
    path: /path/to/connection
    method: GET
- name: Database
  endpoint:
    path: /path/to/database
    method: GET
- name: Schema
  endpoint:
    path: /path/to/schema
    method: GET
- name: Table
  endpoint:
    path: /path/to/table
    method: GET
- name: Column
  endpoint:
    path: /path/to/column
    method: GET
- name: lastExternalReferrer
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
    data_selector: lastExternalReferrer
    params: {}
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
    data_selector: tuuid
    params: {}
- name: i/jot/embeds
  endpoint:
    path: /i/jot/embeds
    method: GET
    data_selector: i/jot/embeds
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: remote_sid
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: YSC
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: adroll_dqs
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: WMF-Uniq
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: seenArticlesArray
  endpoint:
    path: N/A
    method: N/A
    data_selector: N/A
    params: {}
- name: Hashicorp Vault
  endpoint:
    path: /services/data/vXX.X/sobjects/HashicorpVault
    method: POST
    data_selector: data
    params: {}
- name: AWS Secrets Manager
  endpoint:
    path: /services/data/vXX.X/sobjects/AwsSecretsManager
    method: POST
    data_selector: data
    params: {}
- name: Azure Key Vault
  endpoint:
    path: /services/data/vXX.X/sobjects/AzureKeyVault
    method: POST
    data_selector: data
    params: {}
- name: Google Secret Manager
  endpoint:
    path: /services/data/vXX.X/sobjects/GoogleSecretManager
    method: POST
    data_selector: data
    params: {}
- name: cache
  endpoint:
    path: /cache
    method: GET
- name: catalog
  endpoint:
    path: /catalog
    method: GET
- name: cluster
  endpoint:
    path: /cluster
    method: GET
- name: data-source
  endpoint:
    path: /data-source
    method: GET
- name: db
  endpoint:
    path: /db
    method: GET
- name: diagnostics
  endpoint:
    path: /diagnostics
    method: GET
- name: function
  endpoint:
    path: /function
    method: GET
- name: index
  endpoint:
    path: /index
    method: GET
- name: license
  endpoint:
    path: /license
    method: GET
- name: log
  endpoint:
    path: /log
    method: GET
- name: metadata
  endpoint:
    path: /metadata
    method: GET
- name: perf
  endpoint:
    path: /perf
    method: GET
- name: property
  endpoint:
    path: /property
    method: GET
- name: ps
  endpoint:
    path: /ps
    method: GET
- name: query
  endpoint:
    path: /query
    method: GET
- name: rocks
  endpoint:
    path: /rocks
    method: GET
- name: role
  endpoint:
    path: /role
    method: GET
- name: sensitive-property
  endpoint:
    path: /sensitive-property
    method: GET
- name: server
  endpoint:
    path: /server
    method: GET
- name: stats
  endpoint:
    path: /stats
    method: GET
- name: stored
  endpoint:
    path: /stored
    method: GET
- name: user
  endpoint:
    path: /user
    method: GET
- name: utils
  endpoint:
    path: /utils
    method: GET
- name: vbox
  endpoint:
    path: /vbox
    method: GET
- name: virtual
  endpoint:
    path: /virtual
    method: GET
- name: zk
  endpoint:
    path: /zk
    method: GET
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /ServiceWorkerLogsDatabase
    method: GET
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
- name: ziwsSessionId
  endpoint:
    path: /ziwsSessionId
    method: GET
    data_selector: statistics
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: URL
- name: lastExternalReferrerTime
  endpoint:
    path: /lastExternalReferrerTime
    method: GET
    data_selector: timestamp
- name: log/error
  endpoint:
    path: /log/error
    method: GET
    data_selector: error_logs
- name: topicsLastReferenceTime
  endpoint:
    path: /topicsLastReferenceTime
    method: GET
    data_selector: topics
- name: _fbp
  endpoint:
    path: /_fbp
    method: GET
    data_selector: advertisement
- name: ziwsSession
  endpoint:
    path: /services/data/vXX.X/sobjects/ziwsSession
    method: GET
    data_selector: records
- name: ziwsSessionId
  endpoint:
    path: /services/data/vXX.X/sobjects/ziwsSessionId
    method: GET
    data_selector: records
- name: lastExternalReferrer
  endpoint:
    path: /services/data/vXX.X/sobjects/lastExternalReferrer
    method: GET
    data_selector: records
- name: lastExternalReferrerTime
  endpoint:
    path: /services/data/vXX.X/sobjects/lastExternalReferrerTime
    method: GET
    data_selector: records
- name: topicsLastReferenceTime
  endpoint:
    path: /services/data/vXX.X/sobjects/topicsLastReferenceTime
    method: GET
    data_selector: records
- name: _fbp
  endpoint:
    path: /services/data/vXX.X/sobjects/_fbp
    method: GET
    data_selector: records
- name: adroll_flgs
  endpoint:
    path: /services/data/vXX.X/sobjects/adroll_flgs
    method: GET
    data_selector: records
- name: CMID
  endpoint:
    path: /services/data/vXX.X/sobjects/CMID
    method: GET
    data_selector: records
- name: CMPRO
  endpoint:
    path: /services/data/vXX.X/sobjects/CMPRO
    method: GET
    data_selector: records
- name: CMPS
  endpoint:
    path: /services/data/vXX.X/sobjects/CMPS
    method: GET
    data_selector: records
- name: rum
  endpoint:
    path: /services/data/vXX.X/sobjects/rum
    method: GET
    data_selector: records
- name: tuuid
  endpoint:
    path: /services/data/vXX.X/sobjects/tuuid
    method: GET
    data_selector: records
- name: drift_aid
  endpoint:
    path: /services/data/vXX.X/sobjects/drift_aid
    method: GET
    data_selector: records
- name: DRIFT_SESSION_CAMPAIGNS
  endpoint:
    path: /services/data/vXX.X/sobjects/DRIFT_SESSION_CAMPAIGNS
    method: GET
    data_selector: records
- name: IDE
  endpoint:
    path: /services/data/vXX.X/sobjects/IDE
    method: GET
    data_selector: records
- name: NID
  endpoint:
    path: /services/data/vXX.X/sobjects/NID
    method: GET
    data_selector: records
- name: _ga
  endpoint:
    path: /services/data/vXX.X/sobjects/_ga
    method: GET
    data_selector: records
- name: _gid
  endpoint:
    path: /services/data/vXX.X/sobjects/_gid
    method: GET
    data_selector: records
- name: __Secure-ROLLOUT_TOKEN
  endpoint:
    path: /services/data/vXX.X/sobjects/__Secure-ROLLOUT_TOKEN
    method: GET
    data_selector: records
- name: __Secure-YEC
  endpoint:
    path: /services/data/vXX.X/sobjects/__Secure-YEC
    method: GET
    data_selector: records
- name: tv_UIDM
  endpoint:
    path: /services/data/vXX.X/sobjects/tv_UIDM
    method: GET
    data_selector: records
- name: i/jot/embeds
  endpoint:
    path: /services/data/vXX.X/sobjects/i/jot/embeds
    method: GET
    data_selector: records
- name: '#-#'
  endpoint:
    path: /services/data/vXX.X/sobjects/#-#
    method: GET
    data_selector: records
- name: algorithm_parameters
  endpoint:
    path: /algorithm
    method: POST
    data_selector: parameters
    params:
      algorithm.name: PageRank
      algorithm.iterations: '5'
- name: stardog_connection_parameters
  endpoint:
    path: /stardog
    method: POST
    data_selector: connection
    params:
      stardog.database: testDB
      stardog.username: admin
      stardog.password: admin
      stardog.query.timeout: 10m
      stardog.reasoning: 'false'
- name: output_parameters
  endpoint:
    path: /output
    method: POST
    data_selector: output
    params:
      output.property: example:analytics:rank
      output.graph: example:analytics:graph
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: data
  endpoint:
    path: /stardog-cli-reference/data/
    method: GET
- name: doc
  endpoint:
    path: /stardog-cli-reference/doc/
    method: GET
- name: entity-resolution
  endpoint:
    path: /stardog-cli-reference/entity-resolution/
    method: GET
- name: file
  endpoint:
    path: /stardog-cli-reference/file/
    method: GET
- name: graphql
  endpoint:
    path: /stardog-cli-reference/graphql/
    method: GET
- name: icv
  endpoint:
    path: /stardog-cli-reference/icv/
    method: GET
- name: namespace
  endpoint:
    path: /stardog-cli-reference/namespace/
    method: GET
- name: reasoning
  endpoint:
    path: /stardog-cli-reference/reasoning/
    method: GET
- name: test
  endpoint:
    path: /stardog-cli-reference/test/
    method: GET
- name: tx
  endpoint:
    path: /stardog-cli-reference/tx/
    method: GET
- name: cache_create
  endpoint:
    path: /cache/create
    method: GET
- name: cache_drop
  endpoint:
    path: /cache/drop
    method: GET
- name: cache_refresh
  endpoint:
    path: /cache/refresh
    method: GET
- name: cache_status
  endpoint:
    path: /cache/status
    method: GET
- name: cache_target
  endpoint:
    path: /cache/target
    method: GET
- name: router
  endpoint:
    path: /dbs/router
    method: GET
    data_selector: records
    params: {}
- name: cache_create
  endpoint:
    path: /cache/create
    method: POST
    data_selector: results
    params: {}
- name: PageRank
  endpoint:
    path: /algorithm/PageRank
    method: POST
    data_selector: results
    params:
      algorithm.iterations: 3
      pagerank.reset.probability: 0.15
- name: LabelPropagation
  endpoint:
    path: /algorithm/LabelPropagation
    method: POST
    data_selector: results
    params:
      algorithm.iterations: 3
- name: StronglyConnectedComponents
  endpoint:
    path: /algorithm/StronglyConnectedComponents
    method: POST
    data_selector: results
    params:
      algorithm.iterations: 3
- name: ConnectedComponents
  endpoint:
    path: /algorithm/ConnectedComponents
    method: POST
    data_selector: results
    params:
      algorithm.iterations: 3
- name: TriangleCount
  endpoint:
    path: /algorithm/TriangleCount
    method: POST
    data_selector: results
    params: {}
- name: knowledge_graph
  endpoint:
    path: /api/knowledge-graph
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: cache_drop
  endpoint:
    path: /cache/drop
    method: POST
    data_selector: <name>
- name: dataset
  endpoint:
    path: /
    method: GET
    data_selector: records
    params:
      query: SELECT * { ... }
- name: data_source
  endpoint:
    path: /api/v1/data-sources
    method: GET
    data_selector: dataSources
    params: {}
- name: cache_refresh
  endpoint:
    path: /cache/refresh
    method: POST
    data_selector: <name>
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: interaction_data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: cache_status
  endpoint:
    path: /cache/status
    method: GET
    data_selector: status
    params: {}
- name: cache_target
  endpoint:
    path: /cache/target
    method: GET
- name: stardog_external_compute_properties
  endpoint:
    path: /stardog/external/compute/properties
    method: GET
    data_selector: properties
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /LAST_RESULT_ENTRY_KEY
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: /LogsDatabaseV2
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: remote_sid
  endpoint:
    path: /remote_sid
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /ServiceWorkerLogsDatabase
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: /TESTCOOKIESENABLED
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /VISITOR_INFO1_LIVE
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: YSC
  endpoint:
    path: /YSC
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /ytidb::LAST_RESULT_ENTRY_KEY
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: YtIdbMeta
  endpoint:
    path: /YtIdbMeta
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: /yt-remote-cast-available
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: /yt-remote-cast-installed
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: /yt-remote-connected-devices
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: /yt-remote-device-id
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: /yt-remote-fast-check-period
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: /yt-remote-session-app
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: /yt-remote-session-name
    method: GET
    data_selector: Maximum Storage Duration
    params: {}
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: records
    params: {}
- name: credentials-add
  endpoint:
    path: /catalog/credentials-add
    method: POST
    data_selector: null
    params: {}
- name: credentials-list
  endpoint:
    path: /catalog/credentials-list
    method: GET
    data_selector: null
    params: {}
- name: credentials-remove
  endpoint:
    path: /catalog/credentials-remove
    method: DELETE
    data_selector: null
    params: {}
- name: reload
  endpoint:
    path: /catalog/reload
    method: POST
    data_selector: null
    params: {}
- name: reload-model
  endpoint:
    path: /catalog/reload-model
    method: POST
    data_selector: null
    params: {}
- name: status
  endpoint:
    path: /catalog/status
    method: GET
    data_selector: null
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: knowledge_graph
  endpoint:
    path: /services/data/v1/knowledge_graph
    method: GET
    data_selector: results
    params: {}
- name: credentials-list
  endpoint:
    path: /catalog/credentials-list
    method: GET
    data_selector: credentials
    params: {}
- name: data_resource
  endpoint:
    path: /api/data
    method: GET
    data_selector: data
    params: {}
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
- name: ziwsSessionId
  endpoint:
    path: /ziwsSessionId
    method: GET
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
- name: lastExternalReferrerTime
  endpoint:
    path: /lastExternalReferrerTime
    method: GET
- name: log/error
  endpoint:
    path: /log/error
    method: GET
- name: topicsLastReferenceTime
  endpoint:
    path: /topicsLastReferenceTime
    method: GET
- name: _fbp
  endpoint:
    path: /_fbp
    method: GET
- name: adroll_flgs
  endpoint:
    path: /adroll_flgs
    method: GET
- name: CMID
  endpoint:
    path: /CMID
    method: GET
- name: CMPRO
  endpoint:
    path: /CMPRO
    method: GET
- name: CMPS
  endpoint:
    path: /CMPS
    method: GET
- name: rum
  endpoint:
    path: /rum
    method: GET
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
- name: drift_campaign_refresh
  endpoint:
    path: /drift_campaign_refresh
    method: GET
- name: DRIFT_SESSION_CAMPAIGNS
  endpoint:
    path: /DRIFT_SESSION_CAMPAIGNS
    method: GET
- name: IDE
  endpoint:
    path: /IDE
    method: GET
- name: NID
  endpoint:
    path: /NID
    method: GET
- name: _ga
  endpoint:
    path: /_ga
    method: GET
- name: _gid
  endpoint:
    path: /_gid
    method: GET
- name: __ptq.gif
  endpoint:
    path: /__ptq.gif
    method: GET
- name: entities
  endpoint:
    path: /entityExtractor
    method: POST
- name: linker
  endpoint:
    path: /entityExtractor
    method: POST
- name: dictionary
  endpoint:
    path: /entityExtractor
    method: POST
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: interaction
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /path/to/data/source
    method: GET
    data_selector: records
- name: catalog_status
  endpoint:
    path: /catalog/status
    method: GET
    data_selector: status
    params: {}
- name: cluster_diagnostics_report
  endpoint:
    path: /cluster/diagnostics-report
    method: GET
- name: cluster_info
  endpoint:
    path: /cluster/info
    method: GET
- name: cluster_metrics
  endpoint:
    path: /cluster/metrics
    method: GET
- name: cluster_readonly_start
  endpoint:
    path: /cluster/readonly-start
    method: POST
- name: cluster_readonly_stop
  endpoint:
    path: /cluster/readonly-stop
    method: POST
- name: cluster_standby_attempt_sync
  endpoint:
    path: /cluster/standby-attempt-sync
    method: POST
- name: cluster_standby_pause
  endpoint:
    path: /cluster/standby-pause
    method: POST
- name: cluster_standby_resume
  endpoint:
    path: /cluster/standby-resume
    method: POST
- name: cluster_standby_status
  endpoint:
    path: /cluster/standby-status
    method: GET
- name: cluster_status
  endpoint:
    path: /cluster/status
    method: GET
- name: cluster_stop
  endpoint:
    path: /cluster/stop
    method: POST
- name: cluster_zk_repair
  endpoint:
    path: /cluster/zk-repair
    method: POST
- name: data_source
  endpoint:
    path: /data
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /newDatabase
    method: POST
    data_selector: database
- name: connection
  endpoint:
    path: /testConnectionPool
    method: GET
- name: diagnostics_report
  endpoint:
    path: /cluster/diagnostics-report
    method: GET
    data_selector: report
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: cluster_metrics
  endpoint:
    path: /cluster/metrics
    method: GET
    data_selector: metrics
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /logs/last_result_entry_key
    method: GET
    data_selector: logs
- name: LogsDatabaseV2
  endpoint:
    path: /logs/database_v2
    method: GET
    data_selector: logs
- name: remote_sid
  endpoint:
    path: /remote/sid
    method: GET
    data_selector: remote_sid
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /service_worker/logs
    method: GET
    data_selector: service_worker_logs
- name: TESTCOOKIESENABLED
  endpoint:
    path: /test/cookies_enabled
    method: GET
    data_selector: test_cookies
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /visitor/info1/live
    method: GET
    data_selector: visitor_info
- name: YSC
  endpoint:
    path: /ysc
    method: GET
    data_selector: ysc
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /ytidb/last_result_entry_key
    method: GET
    data_selector: ytidb_logs
- name: YtIdbMeta
  endpoint:
    path: /ytidb/meta
    method: GET
    data_selector: ytidb_meta
- name: yt-remote-cast-available
  endpoint:
    path: /yt/remote/cast/available
    method: GET
    data_selector: yt_remote_cast
- name: yt-remote-cast-installed
  endpoint:
    path: /yt/remote/cast/installed
    method: GET
    data_selector: yt_remote_cast_installed
- name: yt-remote-connected-devices
  endpoint:
    path: /yt/remote/connected_devices
    method: GET
    data_selector: yt_remote_connected_devices
- name: yt-remote-device-id
  endpoint:
    path: /yt/remote/device_id
    method: GET
    data_selector: yt_remote_device_id
- name: yt-remote-fast-check-period
  endpoint:
    path: /yt/remote/fast_check_period
    method: GET
    data_selector: yt_remote_fast_check
- name: yt-remote-session-app
  endpoint:
    path: /yt/remote/session_app
    method: GET
    data_selector: yt_remote_session_app
- name: yt-remote-session-name
  endpoint:
    path: /yt/remote/session_name
    method: GET
    data_selector: yt_remote_session_name
- name: knowledge_graph
  endpoint:
    path: /services/data/vXX.X/sobjects/KnowledgeGraph
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_source
  endpoint:
    path: /api/data_sources
    method: GET
    data_selector: data
    params: {}
- name: stop_read_only_mode
  endpoint:
    path: /cluster/readonly-stop
    method: POST
    data_selector: response
    params: {}
- name: DataSourceFactoryBean
  endpoint:
    path: com.complexible.stardog.ext.spring.DataSourceFactoryBean
- name: SnarlTemplate
  endpoint:
    path: com.complexible.stardog.ext.spring.SnarlTemplate
- name: DataImporter
  endpoint:
    path: com.complexible.stardog.ext.spring.DataImporter
- name: SnarlItemReader
  endpoint:
    path: com.stardog.ext.spring.batch.SnarlItemReader
- name: SnarlItemWriter
  endpoint:
    path: com.stardog.ext.spring.batch.SnarlItemWriter
- name: BatchAdderCallback
  endpoint:
    path: com.stardog.ext.spring.batch.BatchAdderCallback
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: interaction
    params: {}
- name: data_source
  endpoint:
    path: /api/data-sources
    method: GET
    data_selector: dataSources
    params: {}
- name: database
  endpoint:
    path: /api/databases
    method: GET
    data_selector: databases
    params: {}
- name: standby-attempt-sync
  endpoint:
    path: /cluster/standby-attempt-sync
    method: POST
- name: connection
  endpoint:
    path: /connect
    method: POST
    data_selector: results
- name: query
  endpoint:
    path: /query
    method: POST
    data_selector: results
- name: insert
  endpoint:
    path: /insert
    method: POST
    data_selector: results
- name: update
  endpoint:
    path: /update
    method: POST
    data_selector: results
- name: ask
  endpoint:
    path: /ask
    method: POST
    data_selector: results
- name: graph
  endpoint:
    path: /graph
    method: POST
    data_selector: results
- name: standby-pause
  endpoint:
    path: /cluster/standby-pause
    method: POST
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: track_user_interaction
    params:
      storage_duration: Persistent
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: data
  endpoint:
    path: /stardog-cli-reference/data/
    method: GET
- name: doc
  endpoint:
    path: /stardog-cli-reference/doc/
    method: GET
- name: entity-resolution
  endpoint:
    path: /stardog-cli-reference/entity-resolution/
    method: GET
- name: file
  endpoint:
    path: /stardog-cli-reference/file/
    method: GET
- name: graphql
  endpoint:
    path: /stardog-cli-reference/graphql/
    method: GET
- name: icv
  endpoint:
    path: /stardog-cli-reference/icv/
    method: GET
- name: namespace
  endpoint:
    path: /stardog-cli-reference/namespace/
    method: GET
- name: reasoning
  endpoint:
    path: /stardog-cli-reference/reasoning/
    method: GET
- name: test
  endpoint:
    path: /stardog-cli-reference/test/
    method: GET
- name: tx
  endpoint:
    path: /stardog-cli-reference/tx/
    method: GET
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: data
    params: {}
- name: shutdown_cluster
  endpoint:
    path: /cluster/stop
    method: POST
    data_selector: shutdown request
    params: {}
- name: data_source
  endpoint:
    path: /api/data-source
    method: GET
    data_selector: results
- name: zk-repair
  endpoint:
    path: /cluster/zk-repair
    method: POST
    data_selector: null
    params: {}
- name: AnalyzerFactory
  endpoint:
    path: /META-INF/services/com.complexible.stardog.search.AnalyzerFactory
    method: GET
    data_selector: analyzer
    params: {}
- name: graph
  endpoint:
    path: /api/graph
    method: GET
    data_selector: data
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: user_list
  endpoint:
    path: /path/to/my/service
    method: POST
    data_selector: aUsers
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /data-source/online
    method: POST
    data_selector: ''
    params: {}
- name: data_source_query
  endpoint:
    path: /data-source/query
    method: GET
    params: {}
- name: cache
  endpoint:
    path: /cache
    method: GET
- name: catalog
  endpoint:
    path: /catalog
    method: GET
- name: cluster
  endpoint:
    path: /cluster
    method: GET
- name: data-source
  endpoint:
    path: /data-source
    method: GET
- name: db
  endpoint:
    path: /db
    method: GET
- name: diagnostics
  endpoint:
    path: /diagnostics
    method: GET
- name: function
  endpoint:
    path: /function
    method: GET
- name: index
  endpoint:
    path: /index
    method: GET
- name: license
  endpoint:
    path: /license
    method: GET
- name: log
  endpoint:
    path: /log
    method: GET
- name: metadata
  endpoint:
    path: /metadata
    method: GET
- name: perf
  endpoint:
    path: /perf
    method: GET
- name: property
  endpoint:
    path: /property
    method: GET
- name: ps
  endpoint:
    path: /ps
    method: GET
- name: query
  endpoint:
    path: /query
    method: GET
- name: rocks
  endpoint:
    path: /rocks
    method: GET
- name: role
  endpoint:
    path: /role
    method: GET
- name: sensitive-property
  endpoint:
    path: /sensitive-property
    method: GET
- name: server
  endpoint:
    path: /server
    method: GET
- name: stats
  endpoint:
    path: /stats
    method: GET
- name: stored
  endpoint:
    path: /stored
    method: GET
- name: user
  endpoint:
    path: /user
    method: GET
- name: utils
  endpoint:
    path: /utils
    method: GET
- name: vbox
  endpoint:
    path: /vbox
    method: GET
- name: virtual
  endpoint:
    path: /virtual
    method: GET
- name: zk
  endpoint:
    path: /zk
    method: GET
- name: data_source_refresh_counts
  endpoint:
    path: /data-source/refresh-counts
    method: POST
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: interaction
    params: {}
- name: data_source
  endpoint:
    path: /data-source
    method: GET
    data_selector: records
    params: {}
- name: session_statistics
  endpoint:
    path: /api/session/statistics
    method: GET
    data_selector: data
    params: {}
- name: cache
  endpoint:
    path: /cache/create
    method: POST
    data_selector: results
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: data_source
  endpoint:
    path: /data-source/remove
    method: POST
    params: {}
- name: cache_drop
  endpoint:
    path: /cache/drop
    method: POST
    data_selector: <name>
    params: {}
- name: cache_refresh
  endpoint:
    path: /cache/refresh
    method: POST
    data_selector: ''
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: interaction
    params: {}
- name: data_source
  endpoint:
    path: /api/data-source
    method: GET
    data_selector: records
    params: {}
- name: data_source_test
  endpoint:
    path: /data-source/test
    method: GET
    data_selector: records
    params: {}
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
    params: {}
- name: ziwsSessionId
  endpoint:
    path: /ziwsSessionId
    method: GET
    data_selector: statistics
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: lastReferrer
    params: {}
- name: lastExternalReferrerTime
  endpoint:
    path: /lastExternalReferrerTime
    method: GET
    data_selector: lastReferrerTime
    params: {}
- name: topicsLastReferenceTime
  endpoint:
    path: /topicsLastReferenceTime
    method: GET
    data_selector: topicsData
    params: {}
- name: adroll_flgs
  endpoint:
    path: /adroll_flgs
    method: GET
    data_selector: adrollData
    params: {}
- name: CMID
  endpoint:
    path: /CMID
    method: GET
    data_selector: CMIDData
    params: {}
- name: CMPRO
  endpoint:
    path: /CMPRO
    method: GET
    data_selector: CMPROData
    params: {}
- name: CMPS
  endpoint:
    path: /CMPS
    method: GET
    data_selector: CMPSData
    params: {}
- name: rum
  endpoint:
    path: /rum
    method: GET
    data_selector: rumData
    params: {}
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
    data_selector: tuuidData
    params: {}
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
    data_selector: driftData
    params: {}
- name: IDE
  endpoint:
    path: /IDE
    method: GET
    data_selector: IDEData
    params: {}
- name: NID
  endpoint:
    path: /NID
    method: GET
    data_selector: NIDData
    params: {}
- name: _ga
  endpoint:
    path: /_ga
    method: GET
    data_selector: gaData
    params: {}
- name: _gcl_au
  endpoint:
    path: /_gcl_au
    method: GET
    data_selector: gclData
    params: {}
- name: _gid
  endpoint:
    path: /_gid
    method: GET
    data_selector: gidData
    params: {}
- name: __ptq.gif
  endpoint:
    path: /__ptq.gif
    method: GET
    data_selector: ptqData
    params: {}
- name: tv_UIDM
  endpoint:
    path: /tv_UIDM
    method: GET
    data_selector: tvData
    params: {}
- name: tvid
  endpoint:
    path: /tvid
    method: GET
    data_selector: tvidData
    params: {}
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: cache_status
  endpoint:
    path: /cache/status
    method: GET
    data_selector: status
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-list
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/license-info
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/log-print
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-get
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/property-get
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/query-list
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/role-list
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/user-list
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/virtual-list
    method: GET
- name: db_backup
  endpoint:
    path: /db/backup
    method: POST
    data_selector: backup
    params: {}
- name: checkpoint
  endpoint:
    path: /db/checkpoint
    method: POST
    data_selector: checkpoints
    params: {}
- name: create_database
  endpoint:
    path: /db/create
    method: POST
    data_selector: database_creation
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: data
    params: {}
- name: database
  endpoint:
    path: /db/drop
    method: DELETE
    data_selector: database
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/LAST_RESULT_ENTRY_KEY
    method: GET
    data_selector: interaction_data
- name: LogsDatabaseV2
  endpoint:
    path: /cookies/LogsDatabaseV2
    method: GET
    data_selector: interaction_data
- name: remote_sid
  endpoint:
    path: /cookies/remote_sid
    method: GET
    data_selector: functionality_data
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /cookies/ServiceWorkerLogsDatabase
    method: GET
    data_selector: functionality_data
- name: TESTCOOKIESENABLED
  endpoint:
    path: /cookies/TESTCOOKIESENABLED
    method: GET
    data_selector: interaction_data
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /cookies/VISITOR_INFO1_LIVE
    method: GET
    data_selector: bandwidth_data
- name: YSC
  endpoint:
    path: /cookies/YSC
    method: GET
    data_selector: video_statistics
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /cookies/ytidb::LAST_RESULT_ENTRY_KEY
    method: GET
    data_selector: interaction_data
- name: YtIdbMeta#databases
  endpoint:
    path: /cookies/YtIdbMeta#databases
    method: GET
    data_selector: interaction_data
- name: yt-remote-cast-available
  endpoint:
    path: /cookies/yt-remote-cast-available
    method: GET
    data_selector: video_preferences
- name: yt-remote-cast-installed
  endpoint:
    path: /cookies/yt-remote-cast-installed
    method: GET
    data_selector: video_preferences
- name: yt-remote-connected-devices
  endpoint:
    path: /cookies/yt-remote-connected-devices
    method: GET
    data_selector: video_preferences
- name: yt-remote-device-id
  endpoint:
    path: /cookies/yt-remote-device-id
    method: GET
    data_selector: video_preferences
- name: yt-remote-fast-check-period
  endpoint:
    path: /cookies/yt-remote-fast-check-period
    method: GET
    data_selector: video_preferences
- name: yt-remote-session-app
  endpoint:
    path: /cookies/yt-remote-session-app
    method: GET
    data_selector: video_preferences
- name: yt-remote-session-name
  endpoint:
    path: /cookies/yt-remote-session-name
    method: GET
    data_selector: video_preferences
- name: credentials-list
  endpoint:
    path: /stardog-admin-cli-reference/catalog/credentials-list
- name: db_list
  endpoint:
    path: /db/list
    method: GET
- name: ziwsSession
  endpoint:
    path: /
    method: GET
    data_selector: statistics
- name: lastExternalReferrer
  endpoint:
    path: /
    method: GET
    data_selector: lastReferrer
- name: tuuid
  endpoint:
    path: /
    method: GET
    data_selector: visitorData
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: LogsDatabaseV2:V#||LogsRequestsStore
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: remote_sid
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YSC
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: database
  endpoint:
    path: /db/offline
    method: POST
    data_selector: database
    params:
      timeout: 5s
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: data
  endpoint:
    path: /stardog-cli-reference/data/
    method: GET
- name: doc
  endpoint:
    path: /stardog-cli-reference/doc/
    method: GET
- name: entity-resolution
  endpoint:
    path: /stardog-cli-reference/entity-resolution/
    method: GET
- name: file
  endpoint:
    path: /stardog-cli-reference/file/
    method: GET
- name: graphql
  endpoint:
    path: /stardog-cli-reference/graphql/
    method: GET
- name: icv
  endpoint:
    path: /stardog-cli-reference/icv/
    method: GET
- name: namespace
  endpoint:
    path: /stardog-cli-reference/namespace/
    method: GET
- name: reasoning
  endpoint:
    path: /stardog-cli-reference/reasoning/
    method: GET
- name: test
  endpoint:
    path: /stardog-cli-reference/test/
    method: GET
- name: tx
  endpoint:
    path: /stardog-cli-reference/tx/
    method: GET
- name: db_online
  endpoint:
    path: /db/online
    method: POST
    data_selector: database
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: catalog
  endpoint:
    path: /catalog/reload
    method: POST
    data_selector: provider
    params: {}
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: data
    params: {}
- name: db_optimize
  endpoint:
    path: /db/optimize
    method: POST
    data_selector: database
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: rename_database
  endpoint:
    path: /db/rename
    method: POST
    data_selector: response
    params:
      from: <From database name>
      to: <To database name>
      username: <username>
      password: <password>
      token: <token>
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: functions
    params: {}
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: licenses
    params: {}
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
    data_selector: logs
    params: {}
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
    data_selector: metadata
    params: {}
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
    data_selector: properties
    params: {}
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
    data_selector: processes
    params: {}
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
    data_selector: queries
    params: {}
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
    data_selector: roles
    params: {}
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
    data_selector: sensitiveProperties
    params: {}
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
    data_selector: servers
    params: {}
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
    data_selector: storedData
    params: {}
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
    data_selector: users
    params: {}
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
    data_selector: virtuals
    params: {}
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
    data_selector: zkNodes
    params: {}
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
- name: adroll_flgs
  endpoint:
    path: /adroll_flgs
    method: GET
- name: CMID
  endpoint:
    path: /CMID
    method: GET
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
- name: IDE
  endpoint:
    path: /IDE
    method: GET
- name: tv_UIDM
  endpoint:
    path: /tv_UIDM
    method: GET
- name: i/jot/embeds
  endpoint:
    path: /i/jot/embeds
    method: GET
- name: '#-#'
  endpoint:
    path: /#-#
    method: GET
- name: catalog_status
  endpoint:
    path: /catalog/status
    method: GET
- name: database_repair
  endpoint:
    path: /db/repair
    method: POST
    params: {}
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: records
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: restore_database
  endpoint:
    path: /db/restore
    method: POST
    data_selector: backup location
    params: {}
- name: diagnostics_report
  endpoint:
    path: /cluster/diagnostics-report
    method: GET
- name: info
  endpoint:
    path: /cluster/info
    method: GET
- name: metrics
  endpoint:
    path: /cluster/metrics
    method: GET
- name: readonly_start
  endpoint:
    path: /cluster/readonly-start
    method: POST
- name: readonly_stop
  endpoint:
    path: /cluster/readonly-stop
    method: POST
- name: standby_attempt_sync
  endpoint:
    path: /cluster/standby-attempt-sync
    method: POST
- name: standby_pause
  endpoint:
    path: /cluster/standby-pause
    method: POST
- name: standby_resume
  endpoint:
    path: /cluster/standby-resume
    method: POST
- name: standby_status
  endpoint:
    path: /cluster/standby-status
    method: GET
- name: status
  endpoint:
    path: /cluster/status
    method: GET
- name: stop
  endpoint:
    path: /cluster/stop
    method: POST
- name: zk_repair
  endpoint:
    path: /cluster/zk-repair
    method: POST
- name: diagnostics_report
  endpoint:
    path: /cluster/diagnostics-report
    method: GET
    data_selector: ''
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /LAST_RESULT_ENTRY_KEY
    method: GET
    data_selector: data
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: /LogsDatabaseV2
    method: GET
    data_selector: data
    params: {}
- name: remote_sid
  endpoint:
    path: /remote_sid
    method: GET
    data_selector: data
    params: {}
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /ServiceWorkerLogsDatabase
    method: GET
    data_selector: data
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: /TESTCOOKIESENABLED
    method: GET
    data_selector: data
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /VISITOR_INFO1_LIVE
    method: GET
    data_selector: data
    params: {}
- name: YSC
  endpoint:
    path: /YSC
    method: GET
    data_selector: data
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /ytidb::LAST_RESULT_ENTRY_KEY
    method: GET
    data_selector: data
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: /YtIdbMeta#databases
    method: GET
    data_selector: data
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: /yt-remote-cast-available
    method: GET
    data_selector: data
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: /yt-remote-cast-installed
    method: GET
    data_selector: data
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: /yt-remote-connected-devices
    method: GET
    data_selector: data
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: /yt-remote-device-id
    method: GET
    data_selector: data
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: /yt-remote-fast-check-period
    method: GET
    data_selector: data
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: /yt-remote-session-app
    method: GET
    data_selector: data
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: /yt-remote-session-name
    method: GET
    data_selector: data
    params: {}
- name: database_status
  endpoint:
    path: /db/status
    method: GET
    data_selector: ''
    params: {}
- name: verify_database
  endpoint:
    path: /db/verify
    method: POST
    data_selector: database
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: referrer_data
- name: adroll_flgs
  endpoint:
    path: /adroll_flgs
    method: GET
    data_selector: ad_data
- name: CMID
  endpoint:
    path: /CMID
    method: GET
    data_selector: visitor_data
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
    data_selector: visitor_id
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
    data_selector: user_id
- name: IDE
  endpoint:
    path: /IDE
    method: GET
    data_selector: ad_performance
- name: visits
  endpoint:
    path: /api/v1/visits
    method: GET
    data_selector: data
    params:
      incremental: visit_time
- name: cluster_metrics
  endpoint:
    path: /cluster/metrics
    method: GET
    data_selector: ''
    params: {}
- name: diagnostics_report
  endpoint:
    path: /diagnostics/report
    method: GET
    data_selector: report
- name: readonly-start
  endpoint:
    path: /cluster/readonly-start
    method: POST
    data_selector: ''
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /track/user_interaction/embedded_content
    method: GET
    data_selector: session
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: /track/user_interaction/embedded_content
    method: GET
    data_selector: persistent
    params: {}
- name: remote_sid
  endpoint:
    path: /youtube/video_content
    method: GET
    data_selector: session
    params: {}
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: /youtube/video_content
    method: GET
    data_selector: persistent
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: /track/user_interaction/embedded_content
    method: GET
    data_selector: 1_day
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /youtube/video_content
    method: GET
    data_selector: 180_days
    params: {}
- name: YSC
  endpoint:
    path: /track/user_interaction/youtube
    method: GET
    data_selector: session
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /track/user_interaction/embedded_content
    method: GET
    data_selector: persistent
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: /track/user_interaction/embedded_content
    method: GET
    data_selector: persistent
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: /youtube/video_content/preferences
    method: GET
    data_selector: session
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: /youtube/video_content/preferences
    method: GET
    data_selector: session
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: /youtube/video_content/preferences
    method: GET
    data_selector: persistent
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: /youtube/video_content/preferences
    method: GET
    data_selector: persistent
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: /youtube/video_content/preferences
    method: GET
    data_selector: session
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: /youtube/video_content/preferences
    method: GET
    data_selector: session
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: /youtube/video_content/preferences
    method: GET
    data_selector: session
    params: {}
- name: add_function
  endpoint:
    path: /function/add
    method: GET
    data_selector: functions
    params: {}
- name: list_function
  endpoint:
    path: /function/list
    method: GET
    data_selector: functions
    params: {}
- name: remove_function
  endpoint:
    path: /function/remove
    method: GET
    data_selector: functions
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: standby-attempt-sync
  endpoint:
    path: /cluster/standby-attempt-sync
    method: POST
    data_selector: ''
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: /privacy/lastExternalReferrer
    method: GET
- name: lastExternalReferrerTime
  endpoint:
    path: /privacy/lastExternalReferrerTime
    method: GET
- name: topicsLastReferenceTime
  endpoint:
    path: /privacy/topicsLastReferenceTime
    method: GET
- name: CMID
  endpoint:
    path: /privacy/CMID
    method: GET
- name: CMPRO
  endpoint:
    path: /privacy/CMPRO
    method: GET
- name: CMPS
  endpoint:
    path: /privacy/CMPS
    method: GET
- name: rum
  endpoint:
    path: /privacy/rum
    method: GET
- name: tuuid
  endpoint:
    path: /privacy/tuuid
    method: GET
- name: tuuid_lu
  endpoint:
    path: /privacy/tuuid_lu
    method: GET
- name: drift_aid
  endpoint:
    path: /privacy/drift_aid
    method: GET
- name: drift_campaign_refresh
  endpoint:
    path: /privacy/drift_campaign_refresh
    method: GET
- name: DRIFT_SESSION_CAMPAIGNS
  endpoint:
    path: /privacy/DRIFT_SESSION_CAMPAIGNS
    method: GET
- name: IDE
  endpoint:
    path: /privacy/IDE
    method: GET
- name: NID
  endpoint:
    path: /privacy/NID
    method: GET
- name: pagead/1p-user-list/#
  endpoint:
    path: /privacy/pagead/1p-user-list/#
    method: GET
- name: pagead/gen_204/
  endpoint:
    path: /privacy/pagead/gen_204/
    method: GET
- name: _ga
  endpoint:
    path: /privacy/_ga
    method: GET
- name: _gcl_au
  endpoint:
    path: /privacy/_gcl_au
    method: GET
- name: _gid
  endpoint:
    path: /privacy/_gid
    method: GET
- name: _gcl_ls
  endpoint:
    path: /privacy/_gcl_ls
    method: GET
- name: __ptq.gif
  endpoint:
    path: /privacy/__ptq.gif
    method: GET
- name: privacy_sandbox/topics/registration/
  endpoint:
    path: /privacy/privacy_sandbox/topics/registration/
    method: GET
- name: tv_UIDM
  endpoint:
    path: /privacy/tv_UIDM
    method: GET
- name: tvid
  endpoint:
    path: /privacy/tvid
    method: GET
- name: i/jot/embeds
  endpoint:
    path: /privacy/i/jot/embeds
    method: GET
- name: '#-#'
  endpoint:
    path: /privacy/#-#
    method: GET
- name: __Secure-ROLLOUT_TOKEN
  endpoint:
    path: /privacy/__Secure-ROLLOUT_TOKEN
    method: GET
- name: __Secure-YEC
  endpoint:
    path: /privacy/__Secure-YEC
    method: GET
- name: iU5q-!O9@$
  endpoint:
    path: /privacy/iU5q-!O9@$
    method: GET
- name: cluster_standby_pause
  endpoint:
    path: /cluster/standby-pause
    method: POST
    data_selector: ''
    params: {}
- name: function_list
  endpoint:
    path: /function/list
    method: GET
    data_selector: functions
- name: example_resource
  endpoint:
    path: /services/data/vXX.X/sobjects/ExampleResource
    method: GET
    data_selector: records
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: lastExternalReferrer
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
- name: lastExternalReferrerTime
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
- name: log/error
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
- name: function_remove
  endpoint:
    path: /function/remove
    method: POST
    data_selector: response
    params: {}
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: records
    params: {}
- name: db
  endpoint:
    path: /stardog-admin-cli-reference/db/
    method: GET
    data_selector: records
    params: {}
- name: data
  endpoint:
    path: /api/data
    method: GET
    data_selector: records
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: LogsDatabaseV2:V#||LogsRequestsStore
    method: GET
    data_selector: interaction
- name: remote_sid
  endpoint:
    path: YouTubeVideoContent
    method: GET
    data_selector: functionality
- name: TESTCOOKIESENABLED
  endpoint:
    path: TrackingInteraction
    method: GET
    data_selector: interaction
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: BandwidthEstimation
    method: GET
    data_selector: estimation
- name: YSC
  endpoint:
    path: YouTubeStatistics
    method: GET
    data_selector: statistics
- name: knowledge_catalog
  endpoint:
    path: /knowledge-catalog
    method: GET
    data_selector: data
    params: {}
- name: license_info
  endpoint:
    path: /license/info
    method: GET
    data_selector: license_info
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: privacy_sandbox/topics/registration/
    method: GET
    data_selector: data
    params: {}
- name: tuuid
  endpoint:
    path: tuuid
    method: GET
    data_selector: data
    params: {}
- name: zk-repair
  endpoint:
    path: /cluster/zk-repair
    method: POST
- name: data-source_commands
  endpoint:
    path: /data-source/commands
    method: GET
    data_selector: commands
    params: {}
- name: knowledge_graph
  endpoint:
    path: /api/knowledge-graph
    method: GET
    data_selector: data
    params: {}
- name: query
  endpoint:
    path: /api/query
    method: POST
    data_selector: results
    params: {}
- name: dataset
  endpoint:
    path: /api/v1/datasets
    method: GET
    data_selector: datasets
- name: query
  endpoint:
    path: /api/v1/query
    method: POST
    data_selector: results
- name: data_source
  endpoint:
    path: /data-source/add
    method: POST
    data_selector: ''
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: log_print
  endpoint:
    path: /log/print
    method: GET
    data_selector: logs
    params: {}
- name: data-source list
  endpoint:
    path: /data-source/list
    method: GET
    data_selector: ''
    params: {}
- name: metadata_convert
  endpoint:
    path: /metadata/convert
    method: POST
    data_selector: output
    params:
      input_format:
      - BINARY
      - JSON
      - PROPERTIES
      - RDF
      output_format:
      - BINARY
      - JSON
      - PROPERTIES
      - RDF
- name: data_source
  endpoint:
    path: /data-source/online
    method: POST
    data_selector: data
- name: metadata
  endpoint:
    path: /metadata/get
    method: GET
    params:
      database: <database>
- name: metadata_set
  endpoint:
    path: /metadata/set
    method: POST
    data_selector: options
    params: {}
- name: data-source
  endpoint:
    path: /data-source/query
    method: GET
    data_selector: results
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /logs/LastResultEntryKey
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: /logs/LogsDatabaseV2
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: remote_sid
  endpoint:
    path: /logs/remote_sid
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /logs/ServiceWorkerLogsDatabase
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: /logs/TESTCOOKIESENABLED
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /logs/VISITOR_INFO1_LIVE
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: YSC
  endpoint:
    path: /logs/YSC
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /logs/ytidb::LAST_RESULT_ENTRY_KEY
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: /logs/YtIdbMeta
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: /logs/yt-remote-cast-available
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: /logs/yt-remote-cast-installed
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: /logs/yt-remote-connected-devices
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: /logs/yt-remote-device-id
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: /logs/yt-remote-fast-check-period
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: /logs/yt-remote-session-app
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: /logs/yt-remote-session-name
    method: GET
    data_selector: MaxStorageDuration
    params: {}
- name: knowledge_graph
  endpoint:
    path: /services/data/v1/knowledge_graph
    method: GET
    data_selector: results
- name: server_properties
  endpoint:
    path: /property/get
    method: GET
    data_selector: properties
    params: {}
- name: data-source
  endpoint:
    path: /data-source/refresh-metadata
    method: POST
- name: cookies
  endpoint:
    path: /cookies
    method: GET
    data_selector: records
    params: {}
- name: data_source
  endpoint:
    path: /data-source/remove
    method: POST
    data_selector: response
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /data-source/share
    method: POST
    data_selector: response
    params: {}
- name: visitor_statistics
  endpoint:
    path: /api/visitor/statistics
    method: GET
    data_selector: data
    params: {}
- name: advertisement_data
  endpoint:
    path: /api/advertisement/data
    method: GET
    data_selector: data
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: LogsDatabaseV2:V#||LogsRequestsStore
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: remote_sid
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YSC
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /path/to/last_result_entry_key
    method: GET
    data_selector: records
- name: LogsDatabaseV2
  endpoint:
    path: /path/to/logs_database_v2
    method: GET
    data_selector: records
- name: remote_sid
  endpoint:
    path: /path/to/remote_sid
    method: GET
    data_selector: records
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /path/to/service_worker_logs_database
    method: GET
    data_selector: records
- name: TESTCOOKIESENABLED
  endpoint:
    path: /path/to/testcookiesenabled
    method: GET
    data_selector: records
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /path/to/visitor_info1_live
    method: GET
    data_selector: records
- name: YSC
  endpoint:
    path: /path/to/ysc
    method: GET
    data_selector: records
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /path/to/ytidb_last_result_entry_key
    method: GET
    data_selector: records
- name: YtIdbMeta
  endpoint:
    path: /path/to/ytidbmeta
    method: GET
    data_selector: records
- name: yt-remote-cast-available
  endpoint:
    path: /path/to/yt_remote_cast_available
    method: GET
    data_selector: records
- name: yt-remote-cast-installed
  endpoint:
    path: /path/to/yt_remote_cast_installed
    method: GET
    data_selector: records
- name: yt-remote-connected-devices
  endpoint:
    path: /path/to/yt_remote_connected_devices
    method: GET
    data_selector: records
- name: yt-remote-device-id
  endpoint:
    path: /path/to/yt_remote_device_id
    method: GET
    data_selector: records
- name: yt-remote-fast-check-period
  endpoint:
    path: /path/to/yt_remote_fast_check_period
    method: GET
    data_selector: records
- name: yt-remote-session-app
  endpoint:
    path: /path/to/yt_remote_session_app
    method: GET
    data_selector: records
- name: yt-remote-session-name
  endpoint:
    path: /path/to/yt_remote_session_name
    method: GET
    data_selector: records
- name: data_source
  endpoint:
    path: /data-source/test
    method: GET
    data_selector: ''
    params: {}
- name: process
  endpoint:
    path: /ps/kill
    method: POST
    data_selector: processIDs
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: LogsDatabaseV2:V#||LogsRequestsStore
    method: GET
- name: remote_sid
  endpoint:
    path: ServiceWorkerLogsDatabase#SWHealthLog
    method: GET
- name: TESTCOOKIESENABLED
  endpoint:
    path: LogsDatabaseV2:V#||LogsRequestsStore
    method: GET
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: LogsDatabaseV2:V#||LogsRequestsStore
    method: GET
- name: YSC
  endpoint:
    path: LogsDatabaseV2:V#||LogsRequestsStore
    method: GET
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
    params:
      type: HTML Local Storage
- name: ziwsSessionId
  endpoint:
    path: /ziwsSessionId
    method: GET
    data_selector: statistics
    params:
      type: HTML Local Storage
- name: process_status
  endpoint:
    path: /ps/status
    method: GET
    data_selector: status
    params: {}
- name: db_backup
  endpoint:
    path: /db/backup
    method: POST
    data_selector: backup
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-add
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: checkpoint
  endpoint:
    path: /db/checkpoint
    method: POST
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
- name: ziwsSessionId
  endpoint:
    path: /ziwsSessionId
    method: GET
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
- name: lastExternalReferrerTime
  endpoint:
    path: /lastExternalReferrerTime
    method: GET
- name: log/error
  endpoint:
    path: /log/error
    method: GET
- name: topicsLastReferenceTime
  endpoint:
    path: /topicsLastReferenceTime
    method: GET
- name: _fbp
  endpoint:
    path: /_fbp
    method: GET
- name: adroll_flgs
  endpoint:
    path: /adroll_flgs
    method: GET
- name: CMID
  endpoint:
    path: /CMID
    method: GET
- name: CMPRO
  endpoint:
    path: /CMPRO
    method: GET
- name: CMPS
  endpoint:
    path: /CMPS
    method: GET
- name: rum
  endpoint:
    path: /rum
    method: GET
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
- name: tuuid_lu
  endpoint:
    path: /tuuid_lu
    method: GET
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
- name: drift_campaign_refresh
  endpoint:
    path: /drift_campaign_refresh
    method: GET
- name: DRIFT_SESSION_CAMPAIGNS
  endpoint:
    path: /DRIFT_SESSION_CAMPAIGNS
    method: GET
- name: IDE
  endpoint:
    path: /IDE
    method: GET
- name: NID
  endpoint:
    path: /NID
    method: GET
- name: pagead/1p-user-list/#
  endpoint:
    path: /pagead/1p-user-list/#
    method: GET
- name: _ga
  endpoint:
    path: /_ga
    method: GET
- name: _ga_#
  endpoint:
    path: /_ga_#
    method: GET
- name: _gcl_au
  endpoint:
    path: /_gcl_au
    method: GET
- name: _gid
  endpoint:
    path: /_gid
    method: GET
- name: _gcl_ls
  endpoint:
    path: /_gcl_ls
    method: GET
- name: __ptq.gif
  endpoint:
    path: /__ptq.gif
    method: GET
- name: privacy_sandbox/topics/registration/
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
- name: tv_UIDM
  endpoint:
    path: /tv_UIDM
    method: GET
- name: tvid
  endpoint:
    path: /tvid
    method: GET
- name: i/jot/embeds
  endpoint:
    path: /i/jot/embeds
    method: GET
- name: '#-#'
  endpoint:
    path: /#-#
    method: GET
- name: __Secure-ROLLOUT_TOKEN
  endpoint:
    path: /__Secure-ROLLOUT_TOKEN
    method: GET
- name: __Secure-YEC
  endpoint:
    path: /__Secure-YEC
    method: GET
- name: iU5q-!O9@$
  endpoint:
    path: /iU5q-!O9@$
    method: GET
- name: query_kill
  endpoint:
    path: /query/kill
    method: POST
- name: database
  endpoint:
    path: /db/create
    method: POST
    data_selector: database
- name: query_list
  endpoint:
    path: /query/list
    method: GET
    data_selector: ''
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: LogsRequestsStore
    method: GET
- name: drop_database
  endpoint:
    path: /db/drop
    method: POST
    data_selector: database
    params: {}
- name: db_list
  endpoint:
    path: db/list
    method: GET
- name: role add
  endpoint:
    path: /role/add
    method: GET
    data_selector: ''
    params: {}
- name: role grant
  endpoint:
    path: /role/grant
    method: GET
    data_selector: ''
    params: {}
- name: role list
  endpoint:
    path: /role/list
    method: GET
    data_selector: ''
    params: {}
- name: role permission
  endpoint:
    path: /role/permission
    method: GET
    data_selector: ''
    params: {}
- name: role remove
  endpoint:
    path: /role/remove
    method: GET
    data_selector: ''
    params: {}
- name: role revoke
  endpoint:
    path: /role/revoke
    method: GET
    data_selector: ''
    params: {}
- name: role
  endpoint:
    path: /role/add
    method: POST
    data_selector: N/A
    params:
      role: <role>
- name: database_offline
  endpoint:
    path: /db/offline
    method: POST
    data_selector: status
    params:
      timeout: 5s
- name: data_source
  endpoint:
    path: /data-source
    method: GET
    data_selector: records
    params: {}
- name: database
  endpoint:
    path: /db/online
    method: POST
    data_selector: null
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: interaction_logs
- name: db_optimize
  endpoint:
    path: /db/optimize
    method: POST
    data_selector: response
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: Used to track user’s interaction with embedded content.
    method: GET
    data_selector: 'Maximum Storage Duration: Session'
- name: LogsRequestsStore
  endpoint:
    path: Used to track user’s interaction with embedded content.
    method: GET
    data_selector: 'Maximum Storage Duration: Persistent'
- name: remote_sid
  endpoint:
    path: Necessary for the implementation and functionality of YouTube video-content
      on the website.
    method: GET
    data_selector: 'Maximum Storage Duration: Session'
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: Necessary for the implementation and functionality of YouTube video-content
      on the website.
    method: GET
    data_selector: 'Maximum Storage Duration: Persistent'
- name: TESTCOOKIESENABLED
  endpoint:
    path: Used to track user’s interaction with embedded content.
    method: GET
    data_selector: 'Maximum Storage Duration: 1 day'
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: Tries to estimate the users' bandwidth on pages with integrated YouTube
      videos.
    method: GET
    data_selector: 'Maximum Storage Duration: 180 days'
- name: YSC
  endpoint:
    path: Registers a unique ID to keep statistics of what videos from YouTube the
      user has seen.
    method: GET
    data_selector: 'Maximum Storage Duration: Session'
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: Used to track user’s interaction with embedded content.
    method: GET
    data_selector: 'Maximum Storage Duration: Persistent'
- name: YtIdbMeta#databases
  endpoint:
    path: Used to track user’s interaction with embedded content.
    method: GET
    data_selector: 'Maximum Storage Duration: Persistent'
- name: yt-remote-cast-available
  endpoint:
    path: Stores the user's video player preferences using embedded YouTube video
    method: GET
    data_selector: 'Maximum Storage Duration: Session'
- name: yt-remote-cast-installed
  endpoint:
    path: Stores the user's video player preferences using embedded YouTube video
    method: GET
    data_selector: 'Maximum Storage Duration: Session'
- name: yt-remote-connected-devices
  endpoint:
    path: Stores the user's video player preferences using embedded YouTube video
    method: GET
    data_selector: 'Maximum Storage Duration: Persistent'
- name: yt-remote-device-id
  endpoint:
    path: Stores the user's video player preferences using embedded YouTube video
    method: GET
    data_selector: 'Maximum Storage Duration: Persistent'
- name: yt-remote-fast-check-period
  endpoint:
    path: Stores the user's video player preferences using embedded YouTube video
    method: GET
    data_selector: 'Maximum Storage Duration: Session'
- name: yt-remote-session-app
  endpoint:
    path: Stores the user's video player preferences using embedded YouTube video
    method: GET
    data_selector: 'Maximum Storage Duration: Session'
- name: yt-remote-session-name
  endpoint:
    path: Stores the user's video player preferences using embedded YouTube video
    method: GET
    data_selector: 'Maximum Storage Duration: Session'
- name: roles
  endpoint:
    path: /role/list
    method: GET
    data_selector: roles
    params: {}
- name: rename_database
  endpoint:
    path: /db/rename
    method: POST
    data_selector: null
    params:
      from: <From database name>
      to: <To database name>
      token: <token>
      username: <username>
      password: <password>
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: records
    params: {}
- name: db_repair
  endpoint:
    path: /db/repair
    method: POST
    data_selector: database
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: functions
    params: {}
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: licenses
    params: {}
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
    data_selector: logs
    params: {}
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
    data_selector: metadata
    params: {}
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
    data_selector: properties
    params: {}
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
    data_selector: ps
    params: {}
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
    data_selector: queries
    params: {}
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
    data_selector: roles
    params: {}
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
    data_selector: sensitive-properties
    params: {}
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
    data_selector: servers
    params: {}
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
    data_selector: stored
    params: {}
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
    data_selector: users
    params: {}
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
    data_selector: virtuals
    params: {}
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
    data_selector: zk
    params: {}
- name: db_restore
  endpoint:
    path: /db/restore
    method: POST
    params:
      backup_location: <backup location>
      new_name: <new name>
      overwrite: true
      passwd: <password>
      run_as: <username>
      server: <server url>
      token: <token>
      username: <username>
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
    params: {}
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: url
    params: {}
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
    data_selector: visitor_data
    params: {}
- name: database
  endpoint:
    path: /databases
    method: GET
    data_selector: databases
    params: {}
- name: role
  endpoint:
    path: /role/remove
    method: POST
    data_selector: role name
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /logs/last_result_entry_key
    method: GET
    data_selector: logs
- name: remote_sid
  endpoint:
    path: /logs/remote_sid
    method: GET
    data_selector: logs
- name: YSC
  endpoint:
    path: /logs/ysc
    method: GET
    data_selector: logs
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: role_revoke
  endpoint:
    path: /role/revoke
    method: POST
    data_selector: action
    params:
      action: <action>
      object: <obj>
      password: <password>
      run_as: <username>
      server: <server url>
      token: <token>
      username: <username>
      role_name: <role name>
- name: database_status
  endpoint:
    path: /db/status
    method: GET
    data_selector: null
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /track/user/interaction
    method: GET
    data_selector: session
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: /logs/database
    method: GET
    data_selector: persistent
    params: {}
- name: remote_sid
  endpoint:
    path: /video/content
    method: GET
    data_selector: session
    params: {}
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: /serviceworker/logs
    method: GET
    data_selector: persistent
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: /track/user/interaction
    method: GET
    data_selector: session
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: /estimate/user/bandwidth
    method: GET
    data_selector: session
    params: {}
- name: YSC
  endpoint:
    path: /track/user/video/statistics
    method: GET
    data_selector: session
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: /track/user/interaction
    method: GET
    data_selector: persistent
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: /track/user/interaction
    method: GET
    data_selector: persistent
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: /video/player/preferences
    method: GET
    data_selector: session
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: /video/player/preferences
    method: GET
    data_selector: session
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: /video/player/preferences
    method: GET
    data_selector: persistent
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: /video/player/preferences
    method: GET
    data_selector: persistent
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: /video/player/preferences
    method: GET
    data_selector: session
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: /video/player/preferences
    method: GET
    data_selector: session
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: /video/player/preferences
    method: GET
    data_selector: session
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk
    method: GET
- name: verify_database
  endpoint:
    path: /db/verify
    method: GET
    data_selector: database
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-add
    method: GET
    data_selector: records
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: records
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
    data_selector: records
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
    data_selector: records
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
    data_selector: records
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
    data_selector: records
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
    data_selector: records
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
    data_selector: records
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
    data_selector: records
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
    data_selector: records
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
    data_selector: records
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
    data_selector: records
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
    data_selector: records
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
    data_selector: records
- name: sensitive_property_add
  endpoint:
    path: /sensitive-property/add
    method: POST
    data_selector: properties
- name: diagnostics_report
  endpoint:
    path: /diagnostics/report
    method: GET
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: ''
    params: {}
- name: sensitive_property_list
  endpoint:
    path: /sensitive-property/list
    method: GET
    data_selector: properties
    params: {}
- name: function
  endpoint:
    path: /function/add
    method: POST
    data_selector: functions
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-list
    method: GET
    data_selector: records
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/license-info
    method: GET
    data_selector: records
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/log-print
    method: GET
    data_selector: records
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-get
    method: GET
    data_selector: records
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/property-get
    method: GET
    data_selector: records
- name: sensitive_property_remove
  endpoint:
    path: /sensitive-property/remove
    method: POST
    data_selector: properties
    params: {}
- name: function_list
  endpoint:
    path: /function/list
    method: GET
    data_selector: ''
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: function_remove
  endpoint:
    path: /function/remove
    method: POST
    data_selector: function_removal
    params: {}
- name: server_backup
  endpoint:
    path: /server/backup
    method: GET
- name: server_logs
  endpoint:
    path: /server/logs
    method: GET
- name: server_metrics
  endpoint:
    path: /server/metrics
    method: GET
- name: server_migrate
  endpoint:
    path: /server/migrate
    method: POST
- name: server_profile
  endpoint:
    path: /server/profile
    method: GET
- name: server_restore
  endpoint:
    path: /server/restore
    method: POST
- name: server_start
  endpoint:
    path: /server/start
    method: POST
- name: server_status
  endpoint:
    path: /server/status
    method: GET
- name: server_stop
  endpoint:
    path: /server/stop
    method: POST
- name: databases
  endpoint:
    path: /v1/databases
    method: GET
    data_selector: databases
- name: queries
  endpoint:
    path: /v1/queries
    method: POST
    data_selector: results
- name: backup
  endpoint:
    path: /server/backup
    method: POST
    data_selector: ''
    params: {}
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: records
    params: {}
- name: license_info
  endpoint:
    path: /license/info
    method: GET
    data_selector: ''
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: LogsRequestsStore
    method: GET
- name: data_source
  endpoint:
    path: /data-source
    method: GET
    data_selector: records
    params: {}
- name: server_logs
  endpoint:
    path: /server/logs
    method: GET
    data_selector: logs
- name: knowledge_graph
  endpoint:
    path: /v1/knowledge-graph
    method: GET
    data_selector: data
    params: {}
- name: query
  endpoint:
    path: /api/v1/query
    method: POST
    data_selector: results
    params: {}
- name: server_metrics
  endpoint:
    path: /server/metrics
    method: GET
    data_selector: metrics
- name: migrate
  endpoint:
    path: /server/migrate
    method: POST
    data_selector: migration_results
    params:
      old-stardog-home: <old-stardog-home>
      new-stardog-home: <new-stardog-home>
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: functions
    params: {}
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: license
    params: {}
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
    data_selector: log_entries
    params: {}
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
    data_selector: metadata
    params: {}
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
    data_selector: properties
    params: {}
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
    data_selector: processes
    params: {}
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
    data_selector: queries
    params: {}
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
    data_selector: roles
    params: {}
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
    data_selector: sensitive_properties
    params: {}
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
    data_selector: servers
    params: {}
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
    data_selector: stored_items
    params: {}
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
    data_selector: users
    params: {}
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
    data_selector: virtuals
    params: {}
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
    data_selector: zks
    params: {}
- name: data_source
  endpoint:
    path: /stardog-admin-cli-reference/data-source/
    method: GET
    data_selector: records
    params: {}
- name: log_print
  endpoint:
    path: /log/print
    method: GET
    data_selector: events
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: records
- name: server_restore
  endpoint:
    path: /server/restore
    method: POST
    data_selector: backup
    params:
      backup_id: backupId
      node_id: node-id
      username: username
      token: token
      backup_location: backup location
- name: metadata convert
  endpoint:
    path: /metadata/convert
    method: GET
    data_selector: ''
    params: {}
- name: metadata get
  endpoint:
    path: /metadata/get
    method: GET
    data_selector: ''
    params: {}
- name: metadata set
  endpoint:
    path: /metadata/set
    method: POST
    data_selector: ''
    params: {}
- name: metadata_convert
  endpoint:
    path: /metadata/convert
    method: GET
    data_selector: metadata
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: data
  endpoint:
    path: /stardog-cli-reference/data/
    method: GET
- name: doc
  endpoint:
    path: /stardog-cli-reference/doc/
    method: GET
- name: entity-resolution
  endpoint:
    path: /stardog-cli-reference/entity-resolution/
    method: GET
- name: file
  endpoint:
    path: /stardog-cli-reference/file/
    method: GET
- name: graphql
  endpoint:
    path: /stardog-cli-reference/graphql/
    method: GET
- name: icv
  endpoint:
    path: /stardog-cli-reference/icv/
    method: GET
- name: namespace
  endpoint:
    path: /stardog-cli-reference/namespace/
    method: GET
- name: reasoning
  endpoint:
    path: /stardog-cli-reference/reasoning/
    method: GET
- name: test
  endpoint:
    path: /stardog-cli-reference/test/
    method: GET
- name: tx
  endpoint:
    path: /stardog-cli-reference/tx/
    method: GET
- name: server_start
  endpoint:
    path: /server/start
    method: POST
    data_selector: default
    params:
      bind: <network interface>
      daemon: true
      disable_security: true
      enable_ssl: true
      force_join: true
      foreground: true
      home: <home>
      insecure_geo_replica: true
      no_cors: true
      port: <port>
      require_ssl: true
      safe: true
      ssl_cert_required: true
      ssl_port: <ssl-port>
      upgrade: true
      verbose: true
      wait_init: true
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: data
  endpoint:
    path: /stardog-cli-reference/data/
    method: GET
- name: doc
  endpoint:
    path: /stardog-cli-reference/doc/
    method: GET
- name: entity-resolution
  endpoint:
    path: /stardog-cli-reference/entity-resolution/
    method: GET
- name: file
  endpoint:
    path: /stardog-cli-reference/file/
    method: GET
- name: graphql
  endpoint:
    path: /stardog-cli-reference/graphql/
    method: GET
- name: icv
  endpoint:
    path: /stardog-cli-reference/icv/
    method: GET
- name: namespace
  endpoint:
    path: /stardog-cli-reference/namespace/
    method: GET
- name: reasoning
  endpoint:
    path: /stardog-cli-reference/reasoning/
    method: GET
- name: test
  endpoint:
    path: /stardog-cli-reference/test/
    method: GET
- name: tx
  endpoint:
    path: /stardog-cli-reference/tx/
    method: GET
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: LogsDatabaseV2
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: remote_sid
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ServiceWorkerLogsDatabase
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YSC
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: metadata
  endpoint:
    path: /metadata/get
    method: GET
- name: server_status
  endpoint:
    path: /server/status
    method: GET
    data_selector: status_info
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-add
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: metadata_set
  endpoint:
    path: /metadata/set
    method: POST
    data_selector: options
    params:
      database: <database>
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: LogsDatabaseV2:V#||LogsRequestsStore
    method: GET
- name: remote_sid
  endpoint:
    path: ServiceWorkerLogsDatabase#SWHealthLog
    method: GET
- name: TESTCOOKIESENABLED
  endpoint:
    path: TESTCOOKIESENABLED
    method: GET
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: VISITOR_INFO1_LIVE
    method: GET
- name: YSC
  endpoint:
    path: YSC
    method: GET
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ytidb::LAST_RESULT_ENTRY_KEY
    method: GET
- name: YtIdbMeta#databases
  endpoint:
    path: YtIdbMeta#databases
    method: GET
- name: yt-remote-cast-available
  endpoint:
    path: yt-remote-cast-available
    method: GET
- name: yt-remote-cast-installed
  endpoint:
    path: yt-remote-cast-installed
    method: GET
- name: yt-remote-connected-devices
  endpoint:
    path: yt-remote-connected-devices
    method: GET
- name: yt-remote-device-id
  endpoint:
    path: yt-remote-device-id
    method: GET
- name: yt-remote-fast-check-period
  endpoint:
    path: yt-remote-fast-check-period
    method: GET
- name: yt-remote-session-app
  endpoint:
    path: yt-remote-session-app
    method: GET
- name: yt-remote-session-name
  endpoint:
    path: yt-remote-session-name
    method: GET
- name: server_property
  endpoint:
    path: /property/get
    method: GET
    data_selector: properties
- name: knowledge_graph
  endpoint:
    path: /api/knowledge-graph
    method: GET
    data_selector: data
    params: {}
- name: stored_add
  endpoint:
    path: /stored/add
    method: POST
    data_selector: ''
    params: {}
- name: stored_export
  endpoint:
    path: /stored/export
    method: POST
    data_selector: ''
    params: {}
- name: stored_get
  endpoint:
    path: /stored/get
    method: GET
    data_selector: ''
    params: {}
- name: stored_import
  endpoint:
    path: /stored/import
    method: POST
    data_selector: ''
    params: {}
- name: stored_list
  endpoint:
    path: /stored/list
    method: GET
    data_selector: ''
    params: {}
- name: stored_remove
  endpoint:
    path: /stored/remove
    method: DELETE
    data_selector: ''
    params: {}
- name: stored_rename
  endpoint:
    path: /stored/rename
    method: POST
    data_selector: ''
    params: {}
- name: stored_set
  endpoint:
    path: /stored/set
    method: POST
    data_selector: ''
    params: {}
- name: stored_query
  endpoint:
    path: /stored/add
    method: POST
    data_selector: query
    params:
      database: '*'
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: server_property
  endpoint:
    path: /property/set
    method: POST
    data_selector: ''
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: stored_export
  endpoint:
    path: /stored/export
    method: GET
    data_selector: queries
    params: {}
- name: query
  endpoint:
    path: /api/v1/query
    method: POST
    data_selector: results
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: stored_query
  endpoint:
    path: /stored/get
    method: GET
    params: {}
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: LogsDatabaseV2:V#||LogsRequestsStore
    method: GET
    data_selector: logs
    params: {}
- name: remote_sid
  endpoint:
    path: ServiceWorkerLogsDatabase#SWHealthLog
    method: GET
    data_selector: logs
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: Cookies
    method: GET
    data_selector: cookies
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: Cookies
    method: GET
    data_selector: cookies
    params: {}
- name: YSC
  endpoint:
    path: Cookies
    method: GET
    data_selector: cookies
    params: {}
- name: stored_queries
  endpoint:
    path: /stored/import
    method: POST
    data_selector: queries
    params: {}
- name: stored_queries
  endpoint:
    path: /stored/list
    method: GET
    data_selector: queries
- name: stored_query
  endpoint:
    path: /stored/remove
    method: DELETE
    data_selector: query
    params: {}
- name: ziwsSession
  endpoint:
    path: /ziwsSession
    method: GET
    data_selector: statistics
- name: ziwsSessionId
  endpoint:
    path: /ziwsSessionId
    method: GET
    data_selector: statistics
- name: lastExternalReferrer
  endpoint:
    path: /lastExternalReferrer
    method: GET
    data_selector: referrer
- name: lastExternalReferrerTime
  endpoint:
    path: /lastExternalReferrerTime
    method: GET
    data_selector: referrerTime
- name: log/error
  endpoint:
    path: /log/error
    method: GET
    data_selector: errorLog
- name: topicsLastReferenceTime
  endpoint:
    path: /topicsLastReferenceTime
    method: GET
    data_selector: topics
- name: _fbp
  endpoint:
    path: /_fbp
    method: GET
    data_selector: fbpData
- name: adroll_flgs
  endpoint:
    path: /adroll_flgs
    method: GET
    data_selector: adrollData
- name: CMID
  endpoint:
    path: /CMID
    method: GET
    data_selector: CMIDData
- name: CMPRO
  endpoint:
    path: /CMPRO
    method: GET
    data_selector: CMPROData
- name: CMPS
  endpoint:
    path: /CMPS
    method: GET
    data_selector: CMPSData
- name: rum
  endpoint:
    path: /rum
    method: GET
    data_selector: rumData
- name: tuuid
  endpoint:
    path: /tuuid
    method: GET
    data_selector: tuuidData
- name: tuuid_lu
  endpoint:
    path: /tuuid_lu
    method: GET
    data_selector: tuuidLuData
- name: drift_aid
  endpoint:
    path: /drift_aid
    method: GET
    data_selector: driftData
- name: drift_campaign_refresh
  endpoint:
    path: /drift_campaign_refresh
    method: GET
    data_selector: driftCampaignData
- name: DRIFT_SESSION_CAMPAIGNS
  endpoint:
    path: /DRIFT_SESSION_CAMPAIGNS
    method: GET
    data_selector: driftSessionData
- name: IDE
  endpoint:
    path: /IDE
    method: GET
    data_selector: IDEData
- name: NID
  endpoint:
    path: /NID
    method: GET
    data_selector: NIDData
- name: pagead/1p-user-list/#
  endpoint:
    path: /pagead/1p-user-list/#
    method: GET
    data_selector: pageadData
- name: _ga
  endpoint:
    path: /_ga
    method: GET
    data_selector: gaData
- name: _gid
  endpoint:
    path: /_gid
    method: GET
    data_selector: gidData
- name: __ptq.gif
  endpoint:
    path: /__ptq.gif
    method: GET
    data_selector: ptqData
- name: privacy_sandbox/topics/registration/
  endpoint:
    path: /privacy_sandbox/topics/registration/
    method: GET
    data_selector: privacySandboxData
- name: tv_UIDM
  endpoint:
    path: /tv_UIDM
    method: GET
    data_selector: tvUIDMData
- name: tvid
  endpoint:
    path: /tvid
    method: GET
    data_selector: tvidData
- name: i/jot/embeds
  endpoint:
    path: /i/jot/embeds
    method: GET
    data_selector: jotData
- name: '#-#'
  endpoint:
    path: /#-#
    method: GET
    data_selector: embedData
- name: data_source
  endpoint:
    path: /api/v1/data_source
    method: GET
    data_selector: records
    params: {}
- name: stored_query_rename
  endpoint:
    path: /stored/rename
    method: POST
    data_selector: query
    params: {}
- name: process_status
  endpoint:
    path: /ps/status
    method: GET
    data_selector: ''
    params: {}
- name: stored_query
  endpoint:
    path: /stored/set
    method: POST
    data_selector: ''
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: records
    params: {}
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: records
    params: {}
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
    data_selector: records
    params: {}
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
    data_selector: records
    params: {}
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
    data_selector: records
    params: {}
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
    data_selector: records
    params: {}
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
    data_selector: records
    params: {}
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
    data_selector: records
    params: {}
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
    data_selector: records
    params: {}
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
    data_selector: records
    params: {}
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
    data_selector: records
    params: {}
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
    data_selector: records
    params: {}
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
    data_selector: records
    params: {}
- name: query_list
  endpoint:
    path: /query/list
    method: GET
    data_selector: ''
    params: {}
- name: user_add
  endpoint:
    path: /user/add
    method: POST
- name: user_addrole
  endpoint:
    path: /user/addrole
    method: POST
- name: user_disable
  endpoint:
    path: /user/disable
    method: POST
- name: user_enable
  endpoint:
    path: /user/enable
    method: POST
- name: user_grant
  endpoint:
    path: /user/grant
    method: POST
- name: user_list
  endpoint:
    path: /user/list
    method: GET
- name: user_passwd
  endpoint:
    path: /user/passwd
    method: POST
- name: user_permission
  endpoint:
    path: /user/permission
    method: GET
- name: user_remove
  endpoint:
    path: /user/remove
    method: POST
- name: user_removerole
  endpoint:
    path: /user/removerole
    method: POST
- name: user_revoke
  endpoint:
    path: /user/revoke
    method: POST
- name: user_token
  endpoint:
    path: /user/token
    method: POST
- name: query_status
  endpoint:
    path: /query/status
    method: GET
    data_selector: null
    params:
      queryID: <queryID>
- name: role_add
  endpoint:
    path: /role/add
    method: POST
    data_selector: ''
    params: {}
- name: role_grant
  endpoint:
    path: /role/grant
    method: POST
    data_selector: ''
    params: {}
- name: role_list
  endpoint:
    path: /role/list
    method: GET
    data_selector: ''
    params: {}
- name: role_permission
  endpoint:
    path: /role/permission
    method: GET
    data_selector: ''
    params: {}
- name: role_remove
  endpoint:
    path: /role/remove
    method: DELETE
    data_selector: ''
    params: {}
- name: role_revoke
  endpoint:
    path: /role/revoke
    method: POST
    data_selector: ''
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: data
  endpoint:
    path: /stardog-cli-reference/data/
    method: GET
- name: doc
  endpoint:
    path: /stardog-cli-reference/doc/
    method: GET
- name: entity-resolution
  endpoint:
    path: /stardog-cli-reference/entity-resolution/
    method: GET
- name: file
  endpoint:
    path: /stardog-cli-reference/file/
    method: GET
- name: graphql
  endpoint:
    path: /stardog-cli-reference/graphql/
    method: GET
- name: icv
  endpoint:
    path: /stardog-cli-reference/icv/
    method: GET
- name: namespace
  endpoint:
    path: /stardog-cli-reference/namespace/
    method: GET
- name: reasoning
  endpoint:
    path: /stardog-cli-reference/reasoning/
    method: GET
- name: test
  endpoint:
    path: /stardog-cli-reference/test/
    method: GET
- name: tx
  endpoint:
    path: /stardog-cli-reference/tx/
    method: GET
- name: role
  endpoint:
    path: /role/add
    method: POST
    params: {}
- name: function_list
  endpoint:
    path: /stardog-admin-cli-reference/function/function-list
    method: GET
- name: function_add
  endpoint:
    path: /stardog-admin-cli-reference/function/function-add
    method: GET
- name: function_remove
  endpoint:
    path: /stardog-admin-cli-reference/function/function-remove
    method: GET
- name: license_info
  endpoint:
    path: /stardog-admin-cli-reference/license/license-info
    method: GET
- name: license_request
  endpoint:
    path: /stardog-admin-cli-reference/license/license-request
    method: GET
- name: log_print
  endpoint:
    path: /stardog-admin-cli-reference/log/log-print
    method: GET
- name: metadata_convert
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-convert
    method: GET
- name: metadata_get
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-get
    method: GET
- name: metadata_set
  endpoint:
    path: /stardog-admin-cli-reference/metadata/metadata-set
    method: GET
- name: property_get
  endpoint:
    path: /stardog-admin-cli-reference/property/property-get
    method: GET
- name: property_set
  endpoint:
    path: /stardog-admin-cli-reference/property/property-set
    method: GET
- name: ps_list
  endpoint:
    path: /stardog-admin-cli-reference/ps/ps-list
    method: GET
- name: query_list
  endpoint:
    path: /stardog-admin-cli-reference/query/query-list
    method: GET
- name: role_list
  endpoint:
    path: /stardog-admin-cli-reference/role/role-list
    method: GET
- name: sensitive_property_list
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/sensitive-property-list
    method: GET
- name: server_logs
  endpoint:
    path: /stardog-admin-cli-reference/server/server-logs
    method: GET
- name: stored_list
  endpoint:
    path: /stardog-admin-cli-reference/stored/stored-list
    method: GET
- name: user_list
  endpoint:
    path: /stardog-admin-cli-reference/user/user-list
    method: GET
- name: virtual_list
  endpoint:
    path: /stardog-admin-cli-reference/virtual/virtual-list
    method: GET
- name: zk_info
  endpoint:
    path: /stardog-admin-cli-reference/zk/zk-info
    method: GET
- name: role_grant
  endpoint:
    path: /role/grant
    method: POST
    data_selector: permissions
    params: {}
- name: role_list
  endpoint:
    path: /role/list
    method: GET
    data_selector: ''
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: role_remove
  endpoint:
    path: /role/remove
    method: POST
    data_selector: role
    params: {}
- name: consent
  endpoint:
    path: /consent
    method: GET
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/function-add
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: sensitive_property
  endpoint:
    path: /sensitive-property/add
    method: POST
    data_selector: ''
    params: {}
- name: sensitive_property_list
  endpoint:
    path: /sensitive-property/list
    method: GET
    data_selector: sensitive properties
    params: {}
- name: sensitive_property_remove
  endpoint:
    path: /sensitive-property/remove
    method: POST
    data_selector: properties
    params: {}
- name: server_backup
  endpoint:
    path: /server/backup
    method: POST
- name: server_logs
  endpoint:
    path: /server/logs
    method: GET
- name: server_metrics
  endpoint:
    path: /server/metrics
    method: GET
- name: server_migrate
  endpoint:
    path: /server/migrate
    method: POST
- name: server_profile
  endpoint:
    path: /server/profile
    method: GET
- name: server_restore
  endpoint:
    path: /server/restore
    method: POST
- name: server_start
  endpoint:
    path: /server/start
    method: POST
- name: server_status
  endpoint:
    path: /server/status
    method: GET
- name: server_stop
  endpoint:
    path: /server/stop
    method: POST
- name: backup
  endpoint:
    path: /server/backup
    method: POST
    data_selector: backups
- name: server_logs
  endpoint:
    path: /server/logs
    method: GET
    data_selector: logs
    params:
      server: http://example.com:5820
- name: server_metrics
  endpoint:
    path: /server/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: migrate
  endpoint:
    path: /server/migrate
    method: POST
    params:
      old-stardog-home: <old-stardog-home>
      new-stardog-home: <new-stardog-home>
- name: server_restore
  endpoint:
    path: /server/restore
    method: POST
    data_selector: backup location
    params:
      backupId: backup id
      node-id: node-id
      passwd: password
      run-as: username
      token: token
      username: username
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: function list
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: license info
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
    data_selector: log print
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
    data_selector: metadata convert
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
    data_selector: property get
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
    data_selector: ps list
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
    data_selector: query list
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
    data_selector: role list
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
    data_selector: sensitive-property list
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
    data_selector: server status
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
    data_selector: stored list
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
    data_selector: user list
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
    data_selector: virtual list
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
    data_selector: zk info
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
    data_selector: interaction
    params: {}
- name: server_status
  endpoint:
    path: /server/status
    method: GET
    data_selector: ''
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
- name: server_stop
  endpoint:
    path: /server/stop
    method: POST
    params:
      server_url: http://12.34.56.78:5820
- name: stored_query
  endpoint:
    path: /stored/add
    method: POST
- name: LogsRequestsStore
  endpoint:
    path: /LogsRequestsStore
    method: GET
- name: stored_export
  endpoint:
    path: /stored/export
    method: GET
    data_selector: queries
    params: {}
- name: function
  endpoint:
    path: /stardog-admin-cli-reference/function/
    method: GET
    data_selector: functions
    params: {}
- name: license
  endpoint:
    path: /stardog-admin-cli-reference/license/
    method: GET
    data_selector: licenses
    params: {}
- name: log
  endpoint:
    path: /stardog-admin-cli-reference/log/
    method: GET
    data_selector: logs
    params: {}
- name: metadata
  endpoint:
    path: /stardog-admin-cli-reference/metadata/
    method: GET
    data_selector: metadata
    params: {}
- name: property
  endpoint:
    path: /stardog-admin-cli-reference/property/
    method: GET
    data_selector: properties
    params: {}
- name: ps
  endpoint:
    path: /stardog-admin-cli-reference/ps/
    method: GET
    data_selector: processes
    params: {}
- name: query
  endpoint:
    path: /stardog-admin-cli-reference/query/
    method: GET
    data_selector: queries
    params: {}
- name: role
  endpoint:
    path: /stardog-admin-cli-reference/role/
    method: GET
    data_selector: roles
    params: {}
- name: sensitive-property
  endpoint:
    path: /stardog-admin-cli-reference/sensitive-property/
    method: GET
    data_selector: sensitive_properties
    params: {}
- name: server
  endpoint:
    path: /stardog-admin-cli-reference/server/
    method: GET
    data_selector: servers
    params: {}
- name: stored
  endpoint:
    path: /stardog-admin-cli-reference/stored/
    method: GET
    data_selector: stored
    params: {}
- name: user
  endpoint:
    path: /stardog-admin-cli-reference/user/
    method: GET
    data_selector: users
    params: {}
- name: virtual
  endpoint:
    path: /stardog-admin-cli-reference/virtual/
    method: GET
    data_selector: virtuals
    params: {}
- name: zk
  endpoint:
    path: /stardog-admin-cli-reference/zk/
    method: GET
    data_selector: zks
    params: {}
- name: stored_query
  endpoint:
    path: /stored/get
    method: GET
    data_selector: annotations
    params: {}
- name: stored_import
  endpoint:
    path: /stored/import
    method: POST
    data_selector: storedQueries
    params: {}
- name: stored_queries
  endpoint:
    path: /stored/list
    method: GET
- name: data
  endpoint:
    path: /api/data
    method: GET
    data_selector: records
- name: LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: LogsRequestsStore
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: remote_sid
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ServiceWorkerLogsDatabase#SWHealthLog
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: TESTCOOKIESENABLED
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: VISITOR_INFO1_LIVE
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YSC
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: ytidb::LAST_RESULT_ENTRY_KEY
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: YtIdbMeta#databases
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-available
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-cast-installed
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-connected-devices
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-device-id
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-fast-check-period
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-app
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: yt-remote-session-name
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: stored_query
  endpoint:
    path: /stored/remove
    method: POST
    data_selector: query
- name: stored_rename
  endpoint:
    path: /stored/rename
    method: POST
    data_selector: ''
    params: {}
- name: stored_query
  endpoint:
    path: /stored/set
    method: POST
    data_selector: annotations
    params: {}
- name: user add
  endpoint:
    path: /user/add
    method: POST
- name: user addrole
  endpoint:
    path: /user/addrole
    method: POST
- name: user disable
  endpoint:
    path: /user/disable
    method: POST
- name: user enable
  endpoint:
    path: /user/enable
    method: POST
- name: user grant
  endpoint:
    path: /user/grant
    method: POST
- name: user list
  endpoint:
    path: /user/list
    method: GET
- name: user passwd
  endpoint:
    path: /user/passwd
    method: POST
- name: user permission
  endpoint:
    path: /user/permission
    method: GET
- name: user remove
  endpoint:
    path: /user/remove
    method: POST
- name: user removerole
  endpoint:
    path: /user/removerole
    method: POST
- name: user revoke
  endpoint:
    path: /user/revoke
    method: POST
- name: user token
  endpoint:
    path: /user/token
    method: POST
notes:
- Necessary for the implementation and functionality of YouTube video-content on the
  website.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Cookies are small text files that can be used by websites to make a user's experience
  more efficient.
- Uses OAuth2 with refresh token — requires setup of connected app in Stardog
- Some objects may return nulls in deeply nested fields
- Collects statistics on the user's visits to the website, such as the number of visits,
  average time spent on the website and what pages have been read.
- Some objects like Contact may return nulls in deeply nested fields
- Uses various storage types to collect data on user visits and interactions.
- Requires setup of connected app in Stardog
- Some queries may have limitations on response size
- Cookies collect statistics on user visits to the website.
- 'WARNING: There is a change to the storage format for data sources that prevents
  reverting back to version 8.0.1 once the upgrade to 8.1.0 has been made.'
- Users without permissions can drop dbs if the request goes through non-coordinator
  nodes in the cluster.
- Added ephemeral API security tokens as an authentication mechanism
- As discovered by Martin Hostettler and Fabian Cretton, Stardog cluster has a privilege
  escalation vulnerability fixed in 4.2.4.
- Server option to require client certificate via SSL
- Reduced offline wait time
- Update to Sesame 4.0.0 final
- Significantly improved write performance
- Significant improvements to query planning
- The law states that we can store cookies on your device if they are strictly necessary
  for the operation of this site.
- Uses OAuth2 with refresh token — requires setup of connected app in stardog
- Uses OAuth2 with refresh token — requires setup of connected app in ZoomInfo
- Necessary cookies help make a website usable by enabling basic functions like page
  navigation and access to secure areas of the website.
- Uses cookies for tracking user behavior.
- Do not publish invalid relationship mappings (VET-5954)
- Initial release.
- Some notifications don’t return the right message
- Used to track user’s interaction with embedded content.
- Some responses may have nested structures
- Uses OAuth2 with refresh token — requires setup of connected app in Stardog.
- No changelog for this release.
- Ensure proper OAuth setup for authentication.
- Unclassified cookies are cookies that we are in the process of classifying, together
  with the providers of individual cookies.
- Requires OAuth setup with connected app
- API rate limits may apply
- Stardog uses role based access control (RBAC) similar to many traditional databases.
- It is not recommended to grant SysAdmin access to specific databases.
- It is not recommended to grant Owner access to specific databases.
- Drivers marked with an asterisk (*) are included with each Stardog endpoint, and
  they are known to work with Stardog, but they are currently being Beta-tested in
  Stardog Cloud.
- Drivers noted with two asterisks (**) are not currently supported in Stardog Designer.
- Stardog uses role based access control (RBAC).
- It is recommended to create a dedicated service account user for programmatic access.
- Uses OAuth2 with refresh token
- All traffic originating from Stardog Cloud will originate from produswest2-vg-egress.stardog.cloud
  (44.238.183.206). Please whitelist this domain to ensure that your Stardog Cloud
  endpoint can make virtual graph queries to your external data source.
- Enterprise customers can request backup of individual databases to S3 buckets via
  the Stardog API. The credential for the S3 bucket is stored only during the time
  the backup is occurring.
- Instance-level automated snapshot backups occur daily and are retained for 30 days
  by default.
- Do not delete or modify the cloud role, and always make sure at least one user has
  the cloud role.
- Ensure your full endpoint, including the port, is listed here. Omitting the port
  is a common cause of error.
- Check if there are VPNs or firewalls that could be blocking your access to Stardog
  Cloud.
- Some datasets may return nulls in deeply nested fields
- If you fail to connect to your endpoint, ensure your full endpoint, including the
  port, is listed.
- Requires setup of connected app in Stardog Cloud
- Requires OAuth setup for client access
- Data sources may have specific configurations
- Stardog runs best on local / block storage devices. Network based disk storage is
  not recommended.
- Linux installations need to verify that the user executing Stardog is configured
  to allow at least 100,000 open files.
- The most important piece of configuration to do before you start Stardog is setting
  the STARDOG_HOME environment variable.
- By default, Stardog server will become available at http://localhost:5820.
- Some data is used for tracking user visits and advertisement relevance.
- Uses HTTP cookies and local storage to track user interactions.
- Requires OAuth2 setup for access
- Stardog 9+ is tested on Java version 11, and requires `sun.misc.Unsafe`. Note that
  Stardog does not run on any other versions of Java.
- Stardog runs best on local / block storage devices. Network based disk storage is
  not recommended, including NFS, SMB, and EFS based storage systems.
- OAuth2 requires setup of a connected app in Stardog
- Some functions may have rate limits
- Stardog binaries should now be in the /opt/stardog directory.
- Set STARDOG_HOME to /var/opt/stardog
- Ensure that the stardog-license-key.bin file is readable by the Stardog process
- Stardog server will be available at http://localhost:5820
- Cookies are used for tracking user visits and displaying targeted ads.
- Running Stardog directly on Windows is deprecated.
- If you do not have a license, you can obtain one on the Stardog website.
- Uses various mechanisms to collect user statistics and track behavior across websites.
- By default, the Stardog server will become available at http://localhost:5820.
- Uses cookies and local storage for tracking user behavior.
- Some Docker volume drivers do not respect Stardog’s lock file which may cause data
  loss if two Stardogs use the same $STARDOG_HOME.
- If you need to load in external jars (e.g., for virtual graph JDBC drivers or custom
  function), you will need to both specify an environment variable for STARDOG_EXT
  as well as mount an additional volume containing the jars.
- Creating all resources takes about 5 min.
- If you see rollback complete error, check your permissions.
- Stardog is installed at /opt/stardog
- You should change the default password for the admin account by running ./stardog-admin
  user passwd --new-password "$ADMIN_PASS"
- Stardog running directly on Windows is deprecated.
- Set STARDOG_HOME environment variable.
- Ensure a valid license is present in STARDOG_HOME.
- Uses cookies and local storage to track user behavior.
- 'If using an IDP: Verify users are created, can authenticate, and inherit roles
  and permissions correctly via OAuth/Entra ID.'
- Cookies used for tracking user interactions with embedded content.
- Persistent cookies store data across sessions.
- Marketing cookies are used to track visitors across websites.
- Some data is collected for the purposes of personalization and measuring advertising
  effectiveness.
- Collects statistics on user's visits to the website.
- Project resources are the data sources of your knowledge graph.
- Classes represent categories of instances with similar characteristics.
- Some Docker volume drivers do not respect Stardog’s lock file which may cause data
  loss if two Stardogs use the same `$STARDOG_HOME`.
- Stardog supports the SPARQL query language, a W3C standard for querying RDF graphs.
- You will need an SSH key created beforehand in the region you want to deploy Stardog.
- Ensure the SPARQL type is selected for the Editor Tab.
- By default, Stardog runs on port 5820
- This website uses cookies
- You can override Studio’s default limit of 1000 by specifying a limit higher than
  1000.
- Verify correct permissions are associated with your superusers/admins and any other
  planned user roles.
- Maximum Storage Duration for cookies varies, some are session-based.
- Maximum Storage Duration for cookies varies by type.
- Some data is collected for personalization and measuring advertising effectiveness.
- This site uses different types of cookies. Some cookies are placed by third party
  services that appear on our pages.
- Maximum Storage Duration for cookies and local storage varies by type.
- A knowledge graph is only as powerful as the data it can access, but accessing data
  in real-world IT environments can be challenging.
- Stardog supports Virtual Graphs
- Reasoning enables Stardog’s Inference Engine
- Stardog Knowledge Graph supports SPARQL query language
- Uses various storage types like HTTP Cookie and IndexedDB for tracking user interactions.
- Uses HTTP Cookies for tracking user interactions.
- Cookies have varying maximum storage durations.
- This tutorial corresponds to Stardog's SPARQL Tutorial knowledge kit.
- Cookies are used to track user interactions with embedded content.
- Ensure the SPARQL type is selected for your Editor Tab
- This tutorial corresponds to Stardog’s SPARQL Tutorial knowledge kit.
- 'Maximum Storage Duration: 1 year'
- 'Maximum Storage Duration: Session'
- The dataset may contain duplicate entries for albums with multiple release dates.
- Some queries may return no results if certain patterns do not exist.
- Studio limits result sets to 1000 results by default.
- You can change Studio’s default query limit by opening Preferences.
- Path Queries can be used to find connections between actors through movies.
- This tutorial corresponds to Stardog’s SPARQL Tutorial knowledge kit
- Admin connection is used to drop and recreate the database for demonstration purposes.
- Cookies are used to track user’s interaction with embedded content.
- Uses Stardog's SPARQL and GraphQL capabilities for querying data.
- Requires setup of connected app in API
- Uses various types of storage for tracking user visits and interactions.
- Some data is collected for advertising purposes.
- Stardog ICV services help improve data quality.
- Guard mode must be enabled explicitly in the database configuration.
- Refer to Stardog CLI Reference for detailed command usage
- The API supports SPARQL queries.
- No extra configuration is required.
- Ensure the SPARQL type is selected for your Editor Tab.
- CoreNLP provides models to extract several different kinds of relationships, such
  as lives_in and works_for.
- Cookies and local storage are used to track user behavior.
- Queries may return nulls for optional fields.
- RDF graph patterns can be complex and require reasoning.
- Double check that the query is going to return the results you want it to return
  (and, ideally, nothing else).
- When performance is unsatisfactory, it may be possible to reformulate the query
  such that it’s easier for the optimizer to find the best plan.
- If reasoning is not enabled, query results may only contain information that is
  explicit.
- The default reasoning level used by Stardog is SL.
- Some data may be collected for personalization and measuring advertising effectiveness.
- Make sure to change server URL, username, password, and database name as needed.
- Use parameterized queries with the SNARL API for better performance.
- FILTER operations should be used carefully to ensure optimal execution.
- The website cannot function properly without these cookies.
- Authentication requires setup in the ZoomInfo platform.
- Use admin connection for demonstration purposes by dropping and re-creating the
  database.
- Ensure to adjust connection parameters like url, username, password, and database
  name.
- Using RDFS properties for human-readable names and descriptions is considered a
  good practice but this is not a requirement.
- Uses OAuth2
- Some API responses may include null values for certain fields
- Learning how to read Stardog query plans is a great way to become more adept at
  writing more performant queries.
- Spatial index is not enabled by default when creating a new database — set the database
  configuration option `spatial.enabled=true`.
- Stardog’s Integrity Constraint Validation (ICV) services provide a powerful way
  to improve data quality in the Knowledge Graph.
- Modeling constraints declaratively and running validation periodically gives a mechanism
  to collect data and exploit the results to measure and track data quality.
- The spatial index is not enabled by default when creating a new database.
- The spatial operators in Stardog 11 exhibit certain properties that may affect query
  results.
- geof:distance measures the distance between the center points of two objects.
- geof:nearby is not a symmetric relation for polygons.
- Stardog can only use its spatial index efficiently for certain queries.
- Spatial resources can only appear in results returned by geof:nearby and geof:within
  operators.
- Uses OAuth2 for authentication
- Spatial index is not enabled by default when creating a new database. It can be
  enabled by setting the database configuration option 'spatial.enabled=true'.
- The spatial operators in Stardog 11 exhibit properties that may affect query results.
- geof:nearby is not a symmetric relation.
- Ensure data contains indexed spatial resources for well-defined query results.
- WKT points are expressed as (LONG LAT), with no comma.
- Named entity recognition is based on OpenNLP.
- Uses HTTP cookies for tracking user visits and interactions.
- Requires configuration of OAuth integration in Stardog.
- 'Stardog supports two geospatial specs: W3C’s WGS 84 and OGC’s GeoSPARQL.'
- The spatial operators in Stardog 11 exhibit properties that sometimes affect query
  results.
- If polygons had been added to the data but later removed, one may need to perform
  db optimize to refresh the value of spatial.features.
- Both geof:within and geof:nearby are binary relations between spatial objects represented
  as RDF resources.
- Cookies and local storage data are used to track user behavior and interactions.
- CoreNLP provides models to extract several different kinds of relationships.
- Uses HTTP cookies and local storage to track user data.
- Stardog’s Virtual Graph capability provides extreme flexibility by exposing relational
  data as a graph without moving the data out of the RDBMS.
- First, let’s consider unselective queries, that is, those which return large result
  sets and are often user errors.
- Even experienced users can occasionally overlook such mistakes.
- Uses OAuth2 - requires setup of connected app in Stardog
- Cookies and local storage are used for tracking user behavior on the website.
- For all other types of cookies we need your permission.
- Stardog does not materialize (i.e., explicitly calculate and store) inferences,
  instead finding them as needed at query time.
- By default Stardog uses the SL level because it’s the most expressive level that
  can be computed efficiently over large graphs.
- Logs for the Stardog platform are stored in the stardog.log file within your STARDOG_HOME
  directory.
- It is almost always better to include selective patterns in the query rather than
  doing filtering on the client side.
- Voicebox translates natural language queries into SPARQL queries, which are then
  executed against the Stardog Knowledge Graph.
- Voicebox provides detailed lineage information, tracing the origin of data used
  to generate responses.
- Uses cookies and local storage to track user visits and interactions.
- Voicebox only supports SELECT queries.
- Using RDFS properties for human-readable names and descriptions is considered a
  good practice.
- Uses HTTP Cookies and Local Storage for tracking and statistics
- Some tracking mechanisms are session-based
- Tracks user’s interaction with embedded content.
- The API Key must be included with each request.
- The current indexing implementation does not support automatic cluster scaling.
  Consequently, you must manually configure the cluster with a fixed number of nodes.
- Spark cluster is not supported in auto-scale mode.
- This feature is currently in beta and available only to limited set of customers.
- Uses OAuth2 for authentication.
- Similarity search features can have any datatype
- Using feature hashing for vectorization
- 'Maximum Storage Duration: Persistent'
- 'Maximum Storage Duration: 3 months'
- 'Maximum Storage Duration: 400 days'
- 'Maximum Storage Duration: 13 months'
- 'Maximum Storage Duration: 2 years'
- Spatial index is not enabled by default when creating a new database. It can be
  enabled by setting the database configuration option `spatial.enabled=true`.
- The spatial operators in Stardog 11 exhibit certain properties that can affect query
  results.
- Both `geof:nearby` and `geof:within` accept WKT literals as constant inputs in SPARQL
  queries.
- Uses various types of cookies and storage for tracking user behavior.
- Requires OAuth2 setup for accessing data.
- Loading compressed data is the recommended way to load large input files.
- ZIP files can only be added via the CLI or Stardog Studio.
- Collects statistics on user visits to the website, including number of visits and
  pages read.
- Ensure connected app is set up correctly for OAuth2.
- Backups may be accomplished while a database is online.
- Automatic restore is not supported for GCP or Azure Blob Storage backups.
- By default, the spatial index is not enabled when creating a new database.
- It is often one of the more troublesome features, having the potential to cause
  a few headaches when getting started.
- Only spatial resources can appear in results returned by geof:nearby and geof:within
  operators.
- Queries with non-indexed spatial objects may return undefined results.
- The compaction operation is disk IO intensive and should be scheduled during low
  system activity.
- Running optimize too frequently can burden the disk subsystem.
- Spatial index is not enabled by default when creating a new database.
- The spatial operators in Stardog 11 exhibit the following properties, which sometimes
  affect query results.
- Both geof:within and geof:neaby are binary relations between spatial objects that
  are represented as RDF resources.
- Only spatial resources (and not literals) can appear in results returned by geof:nearby
  and geof:within operators.
- Stardog 8.0 introduces checkpoints only for the system database, not user databases.
- Checkpoints on Windows systems are limited to certain types of storage volumes.
- Stardog’s checkpoints are not yet operational in cluster configurations.
- Some configuration options must be set at creation time; others may be changed subsequently
  and some may never be changed.
- Stardog supports various query management options.
- Configuration options for reasoning and search are available.
- The index is in-memory only and is not persisted.
- The index is currently stored on Java heap.
- While the index supports transactional updates, it's not recommended for frequently
  updated numerical properties.
- Voicebox translates natural language queries into SPARQL queries, executed against
  the Stardog Knowledge Graph.
- Uses knowledge graphs to mitigate the risk of hallucinations in LLM outputs.
- Database names must start with an alpha character followed by zero or more alphanumeric,
  hyphen or underscore characters.
- 'Four reserved words that may not be used for the names of Stardog databases: system,
  admin, docs and watchdog.'
- Voicebox option will only be available if your Stardog installation has a license
  that allows Voicebox.
- If using an existing database, set the database option `voicebox.enabled` manually.
- API access to Voicebox is currently limited and not enabled for most users.
- Be sure to enable reasoning if you have inference rules in your database.
- Cookies are used to track user interaction with embedded content.
- Stardog will not let you create a database with the same name as an existing database.
- Databases are either online or offline.
- Dropping a database deletes all associated files and metadata.
- Database must be offline to rename it
- Operation is not fully atomic, a failure may leave the database in an inconsistent
  state
- Requires OAuth2 for authentication
- Profiling is only supported in CLI via the `query explain --profile` command or
  directly via HTTP.
- Profiling is only supported for read queries.
- By default, the first case of homogeneous named graphs is assumed.
- In the presence of heterogeneous named graphs, the database option index.statistics.enable_active_graph
  can be set to false to improve the accuracy of cardinality estimations and thus
  query performance.
- Stardog does not log slow queries in the default configuration because there isn’t
  a single value that determines what counts as a 'slow query'.
- Uses cookies and local storage to track user behavior and interactions.
- Stored queries can be shared with other users.
- Stored queries can be executed over any database by default.
- This API requires authentication
- The add operation is atomic — if multiple files are being added to the database
  and there is an error, the entire operation will be rolled back.
- Uses OAuth2 with refresh token — requires setup of connected app in zoominfo
- Stardog CLI Reference
- This API requires OAuth2 authentication.
- Backups created by version 7.7.1 or newer include permissions related to the database
  in the backup.
- Safe mode is not supported with HA Cluster.
- Safe mode should be a temporary fallback.
- Access log is disabled by default and should be enabled explicitly in the stardog.properties
  configuration file.
- Audit log is disabled by default and should be enabled explicitly in the stardog.properties
  configuration file.
- Slow query log is enabled with logging.slow_query.enabled = true
- Slow query time is specified as logging.slow_query.time = 10s
- Default log type for slow query log is logging.slow_query.type = text
- Running optimize at times of low system activity is recommended since it’s disk
  IO intensive.
- When data is only added but never deleted, the ratio won’t deviate from 8x.
- Cookies are small text files used by websites to enhance user experience.
- Server backups do not contain your license file, stardog.properties, or any other
  additional files or directories created externally under STARDOG_HOME.
- Uses various tracking technologies for user behavior analysis
- Some data is used for personalization and measuring advertising effectiveness.
- The server has to be restarted after the user changes the memory mode.
- Enables the geospatial search index for the database
- Configures isolation level for transactions
- For production usage, we recommend running Stardog on a server with at least 32GB
  of system memory, regardless of data volume.
- Heap memory must be set to a minimum of 2GB, and setting it higher than 100GB is
  typically not recommended due to increased GC pauses.
- Direct memory should be set higher than heap memory for optimal performance.
- The sum of heap and direct memory settings should be around 90% of the total system
  memory available so the operating system has enough memory for its own operations.
- It is not recommended to run any other memory-intensive application on the same
  machine that a Stardog server is running.
- READ permission on dbms-admin:metrics is required to access the /admin/status and
  /admin/status/prometheus endpoints.
- Any user can kill any running process submitted by that user, and a superuser can
  kill any running process.
- Stardog database names must start with an alpha character followed by zero or more
  alphanumeric, hyphen or underscore characters.
- 'There are four reserved words that may not be used for the names of Stardog databases:
  system, admin, docs and watchdog.'
- Uses cookies to track visitors across websites.
- Uses various types of storage for tracking visitor behavior
- Different maximum storage durations for different types of cookies
- Best practice is to keep installation directories for different versions separate
  and use a STARDOG_HOME in another location for storing databases.
- Once you set your STARDOG_HOME environment variable to point to this directory,
  you can simply stop the old version and start the new version without copying or
  moving any files.
- Uses various types of storage for tracking user behavior.
- Stardog databases must start with an alpha character followed by zero or more alphanumeric,
  hyphen or underscore characters.
- Bulk loading performance is better if data files don’t have to be transferred over
  a network during creation and initial loading.
- Requires setup of connected app in api
- Databases are either online or offline; maintenance operations block until other
  database activity is completed.
- Users created in versions of Stardog prior to 7.0.2 will need to have their password
  reset before connecting through the BI server.
- MySQL’s ODBC driver requires 'cleartext' password authentication to be enabled when
  using LDAP authentication.
- The database must be offline to rename it.
- A failure during the rename operation may leave the database in an inconsistent
  state.
- Requires OAuth2 setup in Stardog Cloud for authentication
- Be aware of rate limits when accessing the API
- Profiling is only supported in CLI via the query explain --profile command or directly
  via HTTP.
- Query hints are not a part of the SPARQL Query Language.
- Statistics are computed and managed against all local graphs in a database.
- Do not deploy Stardog in production or in hostile environments with the default
  security settings.
- The user anonymous was created automatically by default prior to version 9.0.
- The default values of query.timeout and query.update.timeout are 5 minutes and 10
  hours, respectively.
- To disable query timeout, set query.timeout to 0.
- Only a user with superuser privileges can create other users with superuser privileges.
- It is highly recommended to manage user permissions by assigning users to roles.
- It is highly recommended to configure the Stardog server to only accept connections
  that are encrypted with SSL.
- Queries can be stored using the stored add command.
- Stored queries can be executed directly by using the name of the stored query.
- Requires OAuth2 setup for API access
- Highly recommended to configure the Stardog server to only accept connections that
  are encrypted with SSL.
- You must explicitly tell Stardog to start up with SSL.
- By default, the HTTP server will be accessible via port 5820, and the HTTPS server
  will be accessible via port 5821.
- When the Stardog service is managed by systemd, it is required to modify /etc/systemd/system/stardog.service
  to pass in the --enable-ssl or --require-ssl flags.
- If you plan to communicate with your data sources over SSL, you need Stardog to
  trust the certificates your data source is presenting to it.
- The most common cause of SSLPeerUnverifiedException is that the server presented
  a certificate that was not issued by an authority that the client trusts.
- The only workarounds for hostname mismatch are to replace the server’s certificate
  or modify the connection string.
- Collects statistics on the user's visits to the website.
- Used to track user interactions and display relevant advertisements.
- This feature is disabled by default.
- Values of sensitive nodes can be revealed through zero-length paths and full-text
  search.
- Stardog uses the value of the JVM argument `java.io.tmpdir` to write temporary files
  for many different operations.
- Stardog will delete temporary files when they’re no longer needed.
- Access log is disabled by default and should be enabled explicitly by setting this
  to true.
- Audit log is disabled by default and should be enabled explicitly by setting this
  to true.
- Slow query logging is disabled by default and should be enabled explicitly by setting
  this to true.
- Named Graph Security is disabled by default.
- Named graph permissions do not affect the schema axioms used in reasoning.
- Safe mode helps users overcome initialization errors when starting the server.
- Safe mode is not supported with the HA Cluster.
- Access logging is disabled by default and should be enabled explicitly in the stardog.properties
  configuration file.
- Audit logging is disabled by default and should be enabled explicitly in the stardog.properties
  configuration file.
- Slow query time is specified with a positive integer followed by 'h', 'm', 's',
  or 'ms'.
- Default value for slow query time is 1 minute if not specified.
- Uses HTTP cookies and local storage for tracking purposes
- All CREATE permissions on the data-source and virtual-graph resources should be
  granted over a wildcard (i.e., the permission should be CREATE data-source:* or
  CREATE virtual-graph:*)
- Server backups require a special Stardog license.
- S3 server backup does not currently support on-premises S3 clones.
- This documentation does not provide specific details about the authentication flow.
- Enabling Kerberos will disable username / password based authentication by default.
  This can be overridden via setting security.disable.password=false in stardog.properties.
- Stardog uses a custom memory management approach to minimize GC activity during
  query evaluation.
- To enable LDAP authentication in Stardog, must provide a value of 'ldap' for security.realms
- Permissions and roles in Stardog might refer to users that no longer exist
- Stardog is configured to issue authentication tokens by default.
- The Authorization HTTP header must contain the JWT access token.
- Stardog expects the JWT access token to be in the Authorization HTTP header with
  the format bearer <token>.
- Uses OAuth2 with authorization code flow
- Auto-created users cannot be assigned roles within Stardog
- Uses various tracking methods across different providers for advertisement relevance.
- User must be granted access to Database, data-source, named-graph and entity-resolution
  security resource types.
- Uses HTTP Cookies for tracking user sessions and statistics
- Cache security lets you specify what users are allowed to perform administrative
  tasks around cache and cache target management.
- Functions involving cache security are limited to creating and deleting caches and
  cache targets and do not apply to a user's ability to query a cached graph.
- Stardog provides a default user admin and password admin in stardog-admin commands
  if no user or password are given.
- Uses various types of cookies and storage for tracking user visits and interactions
- You can simply stop the old version and start the new version without copying or
  moving any files.
- We strongly recommend not running other processes on the same machine Stardog is
  running on. Doing so can reduce the amount of memory available to Stardog.
- Not all Docker volume drivers respect the file locking mechanism. This means if
  you have Stardog running outside of Docker and use Docker to start another instance
  of Stardog that maps to the same $STARDOG_HOME, they will both start and cause data
  loss.
- Uses OAuth2 with refresh token — requires setup of connected app in ZoomInfo API
- Uses HTTP Cookies and HTML Local Storage for tracking
- Read access to this database must be granted manually.
- Uses various types of storage for tracking user statistics.
- To have the best experience, we recommend all users have `METADATA` permission for
  the Stardog database(s) they will be accessing while using any of the Stardog Applications.
- Google Chrome does not allow Mixed Content. Therefore, accessing non-localhost Stardog
  servers without SSL enabled is not recommended and not supported at cloud.stardog.com.
- Requires setup of connected app in ZoomInfo
- For the best experience in Stardog Designer, use Stardog version 7.9.0 or above.
- Designer does not support project resources with field names that start with underscores,
  such as `_columnOne`. Underscores are supported in non-starting positions. For example,
  a field labeled `column_one` is supported.
- Designer does not support project resources with fields names that include diacritics,
  such as the `ó` in `La canción`.
- Explorer text-based search results are limited to the top 50 instances.
- Explorer Query Builder results are limited to the 100 instances of each class type
  variable.
- Explorer visualizations are limited to approximately 5000 individual objects. A
  group counts as only 1 object.
- Shortest path expansions are limited to within 20 hops.
- Using a self-signed certificate is not recommended for production.
- The certificate will be valid for 365 days.
- Some data collected for personalization and measuring advertising effectiveness.
- To authenticate using Kerberos, both the Stardog server and your browser must be
  correctly configured.
- Uses HTTP cookies and HTML local storage for data collection.
- Collects statistics on user visits, behavior, and advertisement relevancy.
- To enable SSL, pass --enable-ssl to the server start command.
- To require SSL only, pass --require-ssl to the server start command.
- When managed by systemd, modify /etc/systemd/system/stardog.service to include SSL
  flags in ExecStart.
- Uses HTML Local Storage and HTTP Cookies for tracking.
- Dockerized Stardog Application access is only available upon request and is not
  included in any Stardog trial or free offering.
- All network traffic between clients and Stardog can be performed over either HTTP
  or HTTPS protocols.
- Stardog can produce JWTs (JSON Web Tokens) it can later accept for authenticated
  API requests.
- Stardog can also be configured to accept JWTs issued by a trusted issuer and optionally
  auto-create users if roles from the IdP are mapped properly to pre-defined Stardog
  roles.
- This feature is disabled by default (i.e., there are no sensitive properties), and
  no values will be masked.
- Sensitive property permissions only limit read access. Users without read permission
  to sensitive properties can still write triples with those properties.
- Requires setup of the connected app in Stardog
- Some queries may return nulls in deeply nested fields
- Stardog requires authentication.
- Path queries return only the shortest paths by default.
- Uses SPARQL for querying graphs.
- Named Graph Security is disabled by default. It can be enabled globally by setting
  security.named.graphs=true in stardog.properties.
- Path queries can return all paths or shortest paths based on query syntax.
- Use with caution, especially with ALL and reasoning, as they may return many results.
- Full-text support for a database is disabled by default but can be enabled by setting
  the configuration option search.enabled to true.
- Enabling Kerberos will disable username / password based authentication by default.
- Full-text support for a database is disabled by default but can be enabled at any
  time by setting the configuration option `search.enabled` to true.
- Must provide a value of 'ldap' for security.realms
- The principal’s password is required for ldap.security.credentials
- A mapping from Stardog roles to LDAP groups is necessary
- Typically, full-text search queries are selective because the number of literals
  matching a search query will be relatively small.
- Uses tracking cookies for analytics and advertising purposes.
- To get started using Stardog’s geospatial support, you’ll need to create a database
  with geospatial support enabled by setting the database configuration option `spatial.enabled`
  to `true`.
- Uses cookies for tracking and advertising purposes
- Stardog can use OAuth 2.0 JWT Tokens for authentication and authorization.
- Stardog by default uses HTTP basic access authentication
- In non-production settings, use the default credentials admin/admin
- Stardog supports OAuth 2.0 authentication using tokens from supported identity providers.
- If you experience suboptimal performance, contact us.
- Uses OAuth2 — requires setup of connected app in Stardog
- Stardog CLI provides a comprehensive set of functions to manage data and server
  configurations.
- Edge properties require the use of the abort on conflict write strategy.
- Only subjects of RDF triples can be triples; nested edge properties are not allowed.
- Uses OAuth2 with refresh token.
- The credentials to access the server are not specified as part of the test definitions.
- Update queries are not allowed against Stardog express.
- Server-side prepared statements (SSPS) must be disabled when using MySQL ODBC or
  Connector/NET.
- By default, BI Server queries are run against all the named graphs, both local and
  virtual, that are visible to the user.
- The dataset can also be changed at the connection level by setting the data_graph
  session variable.
- We strongly recommend not running other processes on the same machine Stardog is
  running on.
- Uses a file lock to prevent two instances of Stardog from running on the same home
  directory.
- The feature has to be enabled by setting the server’s option `query.log.enabled`
  to `true`.
- Updates to the Query Log Database are batched to minimize the overhead of logging
  queries and replicating the log in the cluster.
- 'Maximum Storage Duration: 6 months'
- Stored Query Service was released as beta in Stardog 7.3.2 and is generally available
  (GA) as of version 7.4.0.
- As of version 7.7.2, designating variables as inputs has an effect of implicitly
  treating all non-input variables as outputs.
- Data obfuscation exports data in an obscure, unclear, and unintelligible dataset
  while keeping the overall structure of the data intact.
- Data obfuscation is very secure. Once the data is obfuscated, it is impossible to
  return to the original data.
- By default, all URIs, bnodes, and string literals in the database will be obfuscated
  using the SHA256 message digest algorithm.
- If a custom configuration file is used to obfuscate the data, then the same configuration
  should be used for obfuscating the queries as well.
- Stardog Designer requires Stardog version 7.9.0 or above.
- Only single triple patterns are supported inside service <tag:stardog:api:sample>
- Sampling without replacement is useful for training and testing ML models, data
  exploration and visualization
- Both the Stardog server and your browser must be correctly configured for Kerberos.
- Cookies and local storage are used to track user visits and display relevant advertisements.
- The label service can take advantage of full-text search if enabled.
- The service does not interfere with reasoning.
- Cookies used for tracking user behavior across websites.
- Stardog Cluster requires at least three Stardog and three ZooKeeper nodes for high
  availability.
- The default Service implementation assumes HTTP BASIC authentication.
- Named graph aliases allow queries to run against different graphs without changing
  the query itself.
- Stardog nodes must have the same superuser credentials for securing data in ZooKeeper.
- In a single node setup, configuration option `database.ignore.bulk.load.errors`
  is set to `true`. In a cluster, this is set to `false` by default.
- Helm charts describe the services and applications to run in k8s and how they should
  be deployed, providing a single means for repeatable application deployment.
- Cookies and local storage are used for tracking user behavior.
- Requires OAuth integration for API access.
- Three Stardog nodes is the minimum recommended configuration for a production Stardog
  HA cluster
- Run each Stardog node process on its own server
- Do NOT share the server running a Stardog process with any other applications, including
  a ZooKeeper node process
- Minimize dependencies between the servers hosting each Stardog node process
- Ensure the network between the nodes in the Stardog cluster is low-latency and reliable
- Similarly, ensure the network between the Stardog cluster and its ZooKeeper ensemble
  is low-latency and reliable
- Allocate a volume for the JVM’s temporary directory that is at least as large and
  performant as the STARDOG_HOME volume
- Semantic mode requires a language model. By default, a model bundled with Stardog
  is used when semantic mode is enabled.
- Some API endpoints may have rate limits.
- Ensure correct configuration of OAuth2 client.
- Ensure OAuth setup is complete before making API calls.
- You should measure the performance of your cluster using your own client load and
  adjust the specifications of your production cluster accordingly.
- Cookies have various maximum storage durations ranging from session to persistent.
- Full-text support for a database is disabled by default but can be enabled at any
  time by setting the configuration option search.enabled to true.
- Semantic mode requires a language model. By default, a model bundled with Stardog
  (all-MiniLM-L6-v2) is used when semantic mode is enabled.
- highlighting works only with lexical search
- Stardog Cluster can run in read-only mode as a preview feature starting in 7.7.0
  and in general availability in 9.0.
- Caches are not automatically invalidated if the configuration of the virtual graph
  or underlying data source change (e.g. mappings or connection information). The
  cache must be dropped and recreated by the user.
- Cache targets that run as separate Stardog processes can only be used with Stardog
  Cluster. A single node Stardog instance cannot use a separate standalone cache target.
- Cache targets do not prevent authorized users from using the Stardog server for
  other purposes. This can have unintended consequences when used in conjunction with
  caching.
- To enable geospatial support, set the database configuration option `spatial.enabled`
  to `true`.
- This API uses GraphQL for querying data.
- Standby nodes do not service user requests, neither reads nor writes.
- A standby node can be promoted to a full node.
- You must point directly to the standby node address for certain commands.
- GraphQL queries are translated to SPARQL and results are returned in JSON format.
- Introspection queries are supported for schema discovery.
- To disable BARQ globally for all SPARQL queries, add 'query.executor=LEGACY' to
  stardog.properties.
- The executor specified in the preamble has priority over the setting specified in
  stardog.properties.
- A read replica node can respond to SPARQL queries but cannot service user write
  requests.
- The synchronization interval can be adjusted depending on requirements.
- Requires setup of OAuth2 authentication.
- The geo replica requires a Stardog superuser and password to connect to the Stardog
  cluster endpoint and sync.
- The standby sync interval is the frequency that the geo replica attempts to sync
  from the primary cluster.
- Cookies are used to track visitors across websites for targeted advertising.
- Edge properties require the use of the abort on conflict write strategy, which is
  problematic in the cluster if your workload contains write conflicts.
- Enabling abort on conflict (AoC) write strategy may cause nodes to be expelled if
  the workload experiences write conflicts.
- It is possible to get the cluster into an inconsistent state with nodes that are
  misconfigured for data sources and virtual graphs.
- Cookies and local storage used for tracking users' visits and interactions.
- Uses a query-time reasoning approach — no need for upfront materialization.
- Default reasoning schema is initially an empty named graph.
- Care should be taken to enable schema versioning with very large schemas, e.g. if
  there are millions of triples in schema graphs, especially if the schema contents
  are being updated frequently.
- Update queries are not allowed against Stardog Express.
- Server-side prepared statements (SSPS) must be disabled in ODBC settings.
- For MySQL Connector/NET, disable SSPS by adding UseServerPrepStmts=false to the
  connection string.
- Rules in Stardog correspond to Datalog rules expressed over RDF graphs using SPARQL
  syntax.
- Conceptually, user-defined rules are similar to SPARQL CONSTRUCT queries that generate
  new RDF triples.
- Cookies collect user visit statistics including number of visits and pages read.
- The new Stride reasoner is required for negation and aggregation support.
- Inferences implied by the rules will not be materialized.
- The advanced reasoning features explained in this chapter are not supported by the
  new Stride reasoner.
- Some cookies have session duration.
- Certain cookies collect statistics on user visits.
- Avoid unnecessarily deep class/property hierarchies.
- Avoid variable predicates and variable types.
- Specify domain and range of the properties in the schema.
- If you are working with a very large schema like SNOMED, you might need to increase
  the default memory settings for Stardog.
- Stardog reasoning works by pulling the complete schema into memory.
- Limit the expressivity of your schema to OWL 2 EL.
- Stardog supports full OWL 2 DL reasoning, but only for data that fits into main
  memory.
- The Stored Query Service (SQS) was released as beta in Stardog 7.3.2 and is generally
  available (GA) as of version 7.4.0.
- Starting with version 7.7.2 it is possible to specify a limit (and offset) for an
  existing query.
- Uses cookies for tracking user visits and behavior.
- The SL reasoning profile supported by Blackout is a superset of QL, EL, and RL profiles.
- The restrictions for SubClassOf axioms imply restrictions on the EquivalentClasses
  axioms due to the logical equivalence.
- Various cookies and storage types are used to collect statistics on user visits
  and behaviors.
- Data obfuscation is a mechanism that exports data in an obscure, unclear and unintelligible
  dataset while keeping the overall structure of the data intact.
- Once the data is obfuscated, it is impossible to return to the original data.
- Obfuscation namespace is used only for parsing the config file
- Typical ICV usage is to add constraints to a database and validate for violations.
- Validation can be performed over specific named graphs.
- Stardog supports SPARQL-based constraints but does not support prebinding the $shapesGraph
  or $currentShape variables in SPARQL.
- Stardog does not support property validators.
- Stardog does not support the Advanced Features or the JavaScript Extensions.
- Cookies are used to track visitors across websites.
- Sampling without replacement is useful for training and testing ML models, data
  exploration and visualization.
- Only single triple patterns are supported inside service <tag:stardog:api:sample>.
- The properties file must be in the Java properties file format.
- A mapping file is required for data sources without a built-in schema.
- This API requires authentication.
- Cookies and local storage are used for tracking user visits and interactions.
- Base IRI used to resolve relative IRIs from virtual graphs.
- Should IRI template strings be percent-encoded to be valid IRIs? (true/false)
- A comma-separated list of tables to include when generating default mappings.
- A comma-separated list of tables to exclude when generating default mappings.
- Whether to include the name of the schema in the templates for IRIs.
- This API requires OAuth2 authentication
- Uses cookies and local storage to track user behavior
- Uses SPARQL service to retrieve labels for resources in data.
- Matching labels is sensitive to the labels’ language tags.
- Stardog Cluster should be tuned for your specific use case.
- ZooKeeper maintains the list of cluster members.
- Stardog requires a JDBC 4.2 compatible client driver.
- Some functions may return nulls in deeply nested fields
- ZooKeeper requires a myid file in the dataDir folder to identify itself.
- Stardog must be started with the same superuser credentials on each node.
- In a single node setup, the configuration option `database.ignore.bulk.load.errors`
  is set to `true`.
- In a cluster, `database.ignore.bulk.load.errors` is set to `false` by default.
- The batch size option determines how many solutions will be evaluated at a Virtual
  Graph per request.
- Helm charts are open source and available on GitHub
- To customize the Stardog image in k8s, extend the base Stardog image and push your
  custom image into a container registry
- 'Stardog supports mapping to the following MongoDB data types: double, string, objectId,
  bool, date, int, long, decimal.'
- The MongoDB Date type is stored as a 64-bit integer that represents the number of
  milliseconds since Jan 1, 1970, Universal Time Coordinated (UTC).
- MongoDB is a schemaless database in the sense that there is no requirement that
  fields in two documents in the same index have the same data type.
- If your Postgres server uses Private access, Stardog needs to be in the same VNet
  as your Postgres server.
- If your Postgres server uses Public access, you can add the IP address of the machine
  on which Stardog is running to the list of firewall rules for your Postgres server.
- 'You need to add the following external parameters when creating your data source
  in Stardog: ext.sslmode=verify-full, ext.sslrootcert=/path/to/cert-bundle.crt.'
- Pass-through authentication uses Microsoft’s on-behalf-of flow to implement OAuth
  token exchange.
- Set jdbc.passthrough to OAUTH to enable pass-through authentication.
- Use 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d/.default for the scope.
- Using pass-through authentication requires configuring OAuth with client credentials
  for the Stardog server.
- CData uses a script language called API Script for mapping.
- CData offers three different ways to model the document data.
- Uses paging with page number URL parameter.
- API requires OAuth setup for integration.
- Uses SMS2 for mapping data sources
- Supports multiple source data models including SQL, JSON, CSV, and GraphQL
- Virtual Transparency is a feature that, when enabled, will include results from
  virtual graphs in queries over the set of all graphs.
- Virtual Transparency is compatible with all SPARQL operators with the exception
  of 'zero or more' and 'one or more' property paths.
- Uses HTTP Cookies and HTML Local Storage for tracking.
- Caches are not automatically invalidated if the configuration of the virtual graph
  or underlying data source change.
- Cache targets that run as separate Stardog processes can only be used with Stardog
  Cluster.
- There are many choices to make when setting up a data source and virtual graph.
  Many of these choices can affect how a query over that virtual graph will perform.
- In almost all cases, the goal will be to minimize the number of joins and unions
  in the query plan.
- Stardog uses information on unique columns from table metadata to reduce the number
  of joins in the queries it generates.
- Many data sources, in particular big data architectures such as Databricks, Hive,
  MongoDB, and Athena, do not support these constraints.
- The unique.key.sets property can be used with all database types, not just those
  that do not support key constraints.
- When mapping to a denormalized table, create a node mapped to a template built with
  the keys of the row and treat the non-key columns as properties of that node.
- Reserve rdf:type in mappings for those sources that represent the authoritative
  source of truth on which IRIs are what type.
- Mixing * and specific fields is non-standard SQL but the Stardog SQL parser supports
  it
- Accurate cardinality estimations are essential for the Stardog query optimizer to
  determine efficient join orders and select appropriate physical operators.
- Prefetching for Virtual Graphs can be enabled using the service.prefetch.threshold
  database configuration.
- By default, Stardog will prefetch at most 10000 solution mappings from the Virtual
  Graph.
- The query plan cache might interfere with the query plans returned after updating
  the service.prefetch.threshold configuration.
- Standby nodes do not service any user requests, neither reads nor writes.
- The standby node can be upgraded to a full node and thereby quickly join the cluster.
- Pausing synchronization can take some time if the node is in the middle of a large
  synchronization event.
- You cannot use the IP address of a full cluster node, nor that of a load balancer
  directing requests to full cluster nodes.
- Configuration requires OAuth setup for API access.
- Ensure you have the correct client credentials.
- The metadata inspection tool is for JDBC-type data sources only.
- It is a client-side application. It does not connect to Stardog but to the backing
  database directly.
- A read replica node runs next to the Stardog cluster and periodically requests updates.
- The read replica node can respond to SPARQL queries but cannot service any user
  write requests.
- Cookies may collect statistics on user visits to the website.
- Data collected may be used for displaying relevant advertisements.
- The Knowledge Catalog is enabled by default.
- To prevent the Knowledge Catalog database from being created automatically set `catalog.auto.create.db`
  to `false`.
- The geo replica address is the IP or domain name of the source Stardog Cluster endpoint
  and port.
- If you need to test a geo replica without HTTPS for non-production use cases, you
  can pass the flag '--insecure-geo-replica'.
- Uses various cookies and local storage to track user behavior and deliver targeted
  advertisements.
- The Atlan API token needs to be linked to an Atlan Persona with required data policies
  for metadata read access.
- By default, Atlan asset types 'Table', 'Column', 'View', 'Schema', 'Connection',
  'Database', 'Purpose' are imported into Stardog.
- Assets imported into Atlan are added to a Stardog Knowledge Catalog purpose.
- By default, only the account attached to the API key will have access to those entities
  details.
- It’s important to make sure your liveness probe settings are high enough for your
  workload to prevent unnecessary restarts by k8s.
- It’s important to always shut down Stardog servers cleanly in order to avoid data
  corruption.
- Uses HTML Local Storage and HTTP Cookies for data collection
- Uses query-time reasoning approach
- Default reasoning schema is initially an empty named graph
- The database option reasoning.schema.versioning.enabled needs to be set to true
  for schema versioning to be active.
- The configuration option reasoning.precompute.non_empty.predicates should be set
  to false before reasoning.schema.versioning.enabled can be set to true.
- Care should be taken to enable schema versioning with very large schemas, e.g. if
  there are millions of triples in schema graphs.
- Uses SPARQL for modeling and predictions.
- Properly defining the model properties is crucial for quality predictions.
- If you have a 32 bit operating system, or an older version of Linux, you will be
  greeted with a `Unable to load analytics native library` error when trying to create
  your first model.
- You might need to install some dependencies, namely `zlib-devel`, `automake`, `libtool`,
  and `autoconf`.
- Uses OAuth2 authentication.
- Rule Limitations
- Recursion involving negation or aggregation can cause ambiguity.
- Linear recursion requires that every rule can have at most one recursive term in
  its body.
- Uses basic authentication with username and password.
- Uses cookies for tracking user behavior
- The algorithm outputs a number for each node in the input graph.
- Uses various types of cookies and local storage for tracking user behavior.
- If you are working with a very large schema like SNOMED, consider increasing the
  default memory settings for Stardog.
- Limit the expressivity of your schema to OWL 2 EL for better performance.
- stardog-spark-connector-3.*.* requires Java 11. Therefore, please configure Java
  Version to JAVA 11 in the external compute platform.
- Necessary cookies help make a website usable by enabling basic functions like page
  navigation and access to secure areas of the website. The website cannot function
  properly without these cookies.
- Validation can be performed over the whole database or specific named graphs.
- The number of violations can be limited for performance or readability.
- The Cache target can not be set to localhost.
- Stardog creates a new Spark job for each executed external compute-supported operation.
- Uses various cookies and local storage to track website visits and behavior.
- Some data may be collected for advertising purposes.
- Stardog does not ship with client drivers. You must add drivers for each data source
  you want to connect to.
- This feature is in Beta.
- External compute is the recommended way to use the entity-resolution functionality.
- Uses various types of cookies and local storage for tracking user visits and interactions.
- A virtual graph properties file must be in the Java properties file format.
- Entity resolution is in Beta.
- In-memory entity resolution is supported only for smaller graphs, i.e., having less
  than 100K triples.
- Data Sources load metadata on demand, or lazily.
- Metadata caching is currently supported for JDBC Data Sources only.
- The example is created to run every hour, so if you leave NiFi running, the data
  will be fetched, transformed, and uploaded into Stardog every hour.
- Document storage is independent of file and data formats.
- Documents can be stored on a local filesystem, or on Amazon S3.
- Some data may not be available for certain visitors
- Some resources may have specific access controls based on user roles
- Stardog will by default use the `tika` RDF extractor.
- The extraction results of `linker` will only contain existing resources for which
  a link was found.
- The batch.size option determines how many solutions will be evaluated at a Virtual
  Graph per request.
- Uses HTTP Cookies and HTML Local Storage.
- Configuration options are stored in a Java properties file.
- A larger batch size can reduce the number of requests to a data source but can make
  the evaluation of each request more expensive.
- MongoDB is schemaless, fields can have different types in different documents.
- Always clean up connections to the database by calling AdminConnection#close()
- Stardog configured for OAuth authentication with Entra ID as the IdP
- Databricks configured for Entra ID authentication
- Uses HTTP cookies to track user visits and preferences.
- Use 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d/.default for Databricks' client id scope.
- Necessary for the functionality of the website's chat-box function.
- Uses OAuth with pass-through authentication
- Uses CData JDBC REST driver to map XML and JSON data.
- Uses cookies and local storage for tracking user statistics.
- SMS2 supports multiple source data models, including SQL, JSON, CSV, and GraphQL.
- We recommend using SMS2 for supporting all features.
- OAuth2 integration is required for accessing the API.
- A user requires WRITE permission on a database in order to import JSON or CSV files.
- If Named Graph Security is enabled, they will also require WRITE permission on the
  named graph into which they want to import data.
- There are many choices to make when setting up a data source and virtual graph.
- The goal will be to minimize the number of joins and unions in the query plan.
- The default prefetch limit value can be overridden using the service.prefetch.limit
  query hint in the preamble of the query.
- The robust query planning feature is available starting with Stardog version 10
  and it is enabled by default.
- Uses OAuth2 authentication
- Only one AnalyzerFactory can be registered at a time, attempts to register more
  than one will yield errors on startup.
- To prevent the Knowledge Catalog database from being created automatically set catalog.auto.create.db
  to false.
- Cookies are used to track users and collect statistics on visits.
- Some data is used for targeted advertising.
- The HTTP API is documented for developers here.
- The Atlan API token needs to be linked to an Atlan Persona with required data policies.
- Only the account attached to the API key will have access to those entities details.
- Some data collected by this provider is for the purposes of personalization and
  measuring advertising effectiveness.
- Uses SPARQL for machine learning model definitions and predictions.
- Uses OAuth2 with refresh token — requires setup of connected app in Zoominfo
- Uses basic authentication with admin credentials.
- A cached graph duplicates the entire contents of the graph in the cache.
- Several input parameters apply to all algorithms.
- The output will be a double value representing the rank computed for each node.
- This API uses OAuth2 for authentication.
- Some data sources may have specific requirements
- stardog-spark-connector-3.*.* requires Java 11.
- For Databricks, set JNAME=zulu11-ca-amd64 as the Spark environment variable in compute.
- The latest version of EMR Serverless does not have support for Java11, which is
  mandatory for the Stardog spark connector.
- Cookies and local storage used for tracking user visits and displaying relevant
  ads.
- Uses various types of storage to track user visits and interactions.
- If server URL has no explicit port value, the default port value ‘5820’ is used.
- Ensure OAuth2 is properly configured in the Stardog admin settings
- Entity Resolution is in Beta.
- Some endpoints may require additional parameters
- Check for rate limiting on large datasets
- Uses cookies for tracking user visits and interactions.
- Stardog treats documents as opaque blobs of data; it defers to the extraction process
  to make sense of individual documents.
- Some data collection is for personalization and measuring advertising effectiveness.
- All extractors accept one more output variable, `docs:type`, which will output the
  type of entity (e.g., Person, Organization), when available.
- If server URL has no explicit port value, the default port value '5820' is used.
- Uses various types of cookies and local storage for tracking.
- Uses various types of storage to collect user statistics across websites.
- Uses various storage methods including HTTP cookies and local storage to track user
  behavior.
- Ensure that the OAuth integration is set up correctly to avoid authentication issues.
- Always clean up connections by calling AdminConnection#close()
- Using try-with-resources is a good practice
- Some queries may have rate limits
- Some resources may have rate limits and require careful handling
- Tracks visitors across websites for advertising purposes.
- Various cookies and local storage types are used for tracking and personalization.
- This API requires authentication setup.
- Uses cookies to track user activity on the website.
- Some endpoints may have rate limits
- Cookies are used to store user preferences and interaction data.
- Requires OAuth2 setup within Stardog.
- If the JVM arg isn’t set, the default value ‘http://localhost:5820’ is used.
- Uses marketing cookies to track visitors across websites.
- Various cookies and local storage used for tracking and advertising purposes.
- Service is intended for lightweight exploratory queries and it is recommended to
  include a limit in the query to avoid large result sets.
- Uses HTTP cookies and local storage to track user behavior.
- Unclassified cookies are cookies that we are in the process of classifying
- The API requires setup of connected app in ZoomInfo.
- Ensure to handle session management properly.
- Caches a graph with the given name.
- Certain cookies have specific maximum storage durations.
- Various cookies and local storage data types are used for tracking user behavior
  across websites.
- 'Maximum Storage Duration: 1 year for CMID'
- 'Maximum Storage Duration: 3 months for CMPRO'
- 'Maximum Storage Duration: 3 months for CMPS'
- 'Maximum Storage Duration: Session for drift_aid'
- 'Maximum Storage Duration: 400 days for IDE'
- 'Maximum Storage Duration: 6 months for NID'
- 'Maximum Storage Duration: 2 years for _ga'
- 'Maximum Storage Duration: 1 day for _gid'
- Files to be added to the database may be passed as final arguments.
- By default, files are not copied to the remote server; only the paths are sent.
- Deletes an existing database. Once removed, the database will no longer be available
  to users and all extant data on disk will be removed.
- Uses various storage types for tracking user behavior and preferences.
- Optimizes the indexes of a database for query answering and disk utilization after
  the database has been heavily modified.
- Some cookies are used to track visitors across websites for advertisement purposes.
- A backup will not be restored over an existing database of the same name.
- To force an overwrite using the restored database, use the -o/--overwrite flag.
- Some of the data collected by this provider is for the purposes of personalization
  and measuring advertising effectiveness.
- Data may vary based on user permissions
- Collects statistics on the user's visits to the website
- Adds a new stored function. Stored functions assign a name to a SPARQL function
  expression and allows the expression to be executed in a SPARQL query by using the
  name.
- Some data may be collected for advertisement targeting.
- Command can only be run against standby nodes or read replicas.
- Requires an OAuth2 setup for authentication
- Uses HTML Local Storage for session tracking.
- This command has been deprecated. Please visit https://stardog.com to acquire a
  new license.
- Endpoints may have rate limits
- Uses various cookies and local storage for tracking user behavior and preferences.
- Uses cookies for tracking user behavior and personalization
- This service is intended for lightweight exploratory queries and it is recommended
  to include a limit in the query to avoid large result sets.
- Cookies and local storage are used for tracking user behavior and displaying relevant
  advertisements.
- Some identifiers have varying maximum storage durations.
- Some queries may return large datasets and could require pagination
- Some data may be subject to privacy regulations and limitations
- Some data collected is for the purposes of personalization and measuring advertising
  effectiveness.
- A checkpoint is a quick backup of a specific database.
- If a directory is passed as one of the final arguments, all the files in that directory
  and its child directories will be recursively loaded to the database.
- A single @ can be used to switch back to the default graph.
- Various cookies and local storage types are used for tracking user behavior and
  advertising purposes.
- Default timeout is 5 seconds if no timeout is specified.
- Uses various tracking mechanisms for user behavior and advertisement targeting.
- Brings an offline database back online so that it can accept connections.
- Bringing a database online can be expensive depending on how large the database
  is and what, if any, housekeeping needs to be done.
- Some cookies are set for session duration, while others are persistent.
- The target name must not already exist.
- The database must be offline before it can be renamed.
- 'Maximum Storage Duration: 1 day'
- Some operations may require specific permissions.
- If the JVM argument is not set, the default value ‘http://localhost:5820’ is used.
- To use a secure connection, you should specify the full connection string and postfix
  ‘s’ to the protocol, e.g. https.
- The default server URL will be read from the JVM argument ‘stardog.default.cli.server’.
  If not set, the default value ‘http://localhost:5820’ is used.
- Stardog API requires OAuth2 authentication
- Cookies and storage types are used for tracking user interactions and statistics.
- Uses various types of cookies and local storage for tracking user behavior
- Data retention varies by cookie type and provider
- Stardog requires a license in order to start up. Anyone can obtain a free license
  on the Getting Started Page.
- Requires OAuth2 setup for connected apps in Stardog.
- Backups are stored in the ‘.backup’ directory by default.
- The ‘backup.dir’ property can specify a different location for backups.
- Some queries may return nulls for certain fields
- Migration is not needed for most version upgrades but sometimes there are backward-incompatible
  changes between two versions.
- The new home directory should exist and contain nothing but the license file.
- This command has been deprecated and will be removed in the next major release.
- Stardog server must have profiler.enabled=true set in the server configuration file.
- By default the output is printed in a tabular format but this option can be used
  to output in CSV or TSV format.
- Reads database metadata from a file and prints the contents in requested format
  to the console.
- Uses various types of storage for tracking user visits and behavior.
- If server URL isn’t specified, it will read from JVM argument ‘stardog.default.cli.server’.
- Requires setup of connected app in Stardog.
- Some objects may return nulls in deeply nested fields.
- Uses cookies and local storage for tracking
- Stored queries can be executed directly by using their name.
- Shared queries can be executed by any user. Private queries can only be executed
  by their creator or super users.
- Exports the queries currently stored in the system in RDF format.
- Requires setup of OAuth2 authentication in Stardog
- Ensure correct permissions are granted for the API
- Uses HTTP Cookies for tracking user behavior.
- Multiple processes can be killed by providing multiple IDs.
- The user should have permission to kill the specified process.
- Reads stored queries from an RDF file and adds them to the Stardog server. This
  action is not atomic so if an error occurs at some point only some of the stored
  queries might be added as a result.
- Sets new annotations to an existing stored query or updates the existing ones
- If existing values are needed to be kept, –append option helps for it
- Cookies and local storage used for tracking user visits and behavior.
- A role cannot be removed if it is in use by one or more users of the system.
- Cookies and local storage are used to track user behavior across visits.
- Uses JWT token for authentication
- Default server URL is read from the JVM argument ‘stardog.default.cli.server’. If
  not set, defaults to ‘http://localhost:5820’.
- By default, backups are stored in the ‘.backup’ directory in your Stardog home.
- You can use the ‘backup.dir’ property in your ‘stardog.configuration’ file to specify
  a different location for backups.
- This command requires a running Stardog server to retrieve the logs.
- By default, the HTTP server listens on 0.0.0.0:5820.
- Shared queries can be executed by any user.
- Private queries can only be executed by their creator or super users.
- Gets the specified or all of the annotations of an existing stored query.
- Some queries may have performance implications
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'Unauthorized: A user can use SHACL constraints to validate the contents of a named
  graph and the SHACL violation messages would reveal the contents of the named graph
  even if the user does not have read access to that named graph.'
- The limit cannot be greater than the page size
- ClassCastException in algebraic rewriter with VALUES and UNION
- Date/time comparison functions not working in DL mode
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check your OAuth credentials.'
- '401 Unauthorized: Check credentials and scopes'
- '404 Not Found: Verify endpoint URLs'
- '429 Too Many Requests: Reduce request rate'
- '401 Unauthorized: Check API key or OAuth token'
- '404 Not Found: Verify endpoint URL'
- '500 Internal Server Error: Retry the request'
- '401 Unauthorized: Check your OAuth credentials'
- '404 Not Found: Verify the endpoint path'
- '401 Unauthorized: Check OAuth scopes or token expiration'
- Access is denied. Failed to install service.
- A valid Stardog license was not found.
- 'Rollback Complete: Check the events tab in Cloudformation console.'
- 'Permission issues: Minimum permissions are defined in the requirements section.'
- 'Access is denied: Failed to install service'
- Pending
- 'Session expired: Re-authenticate the user.'
- 'Data not found: Ensure the correct parameters are used.'
- 'Rollback Complete: This is most likely a permission issue. Check with AWS administrator
  your permissions.'
- '200: Successful connection to the Stardog server.'
- 'SESSION_EXPIRED: Re-establish user session.'
- 'DATA_NOT_FOUND: Ensure the data requested exists.'
- 'QUERY_TIMEOUT: Simplify the query or break it into smaller parts.'
- 'NO_RESULTS_FOUND: Ensure the query patterns are correct.'
- '400 Bad Request: Check your request format and parameters.'
- '401 Unauthorized: Verify username and password.'
- '401 Unauthorized: Check your authentication token.'
- 'Not a valid SL axiom: Range(...).'
- Data is NOT valid.
- '401 Unauthorized: Check OAuth credentials.'
- '404 Not Found: Verify endpoint path.'
- In the event you have permission issues with spark-operator, ensure roles are assigned
  appropriately to a service account such that it can manage (create, get, and delete)
  SparkApplications.
- '400 Bad Request: Check the request payload for errors.'
- '401 Unauthorized: Recheck username and password.'
- '409 Conflict: Database already exists.'
- '401 Unauthorized: Check credentials'
- '404 Not Found: Database does not exist'
- '500 Internal Server Error: Server encountered an error'
- Database X will not be present in the system because of an initialization error
- X is put offline due to an initialization error
- 'Corruption: Can''t access /007226.sst: IO error'
- '401 Unauthorized: Check your credentials and OAuth token'
- '400 Bad Request: Verify request format and parameters'
- Out-Of-Memory (OOM) exceptions may occur under heavy load.
- '401 Unauthorized: Recheck user permissions for accessing metrics.'
- 'DATABASE_ALREADY_EXISTS: Stardog will not let you create a database with the same
  name as an existing database.'
- Database X will not be present in the system because of an initialization error.
- 'Can''t access /007226.sst: IO error: while stat a file for size.'
- 'RATE_LIMIT_EXCEEDED: Reduce request frequency'
- '401 Unauthorized: Ensure correct OAuth scopes and valid tokens'
- '401 Unauthorized: Check user permissions or credentials.'
- '401 Unauthorized: Check your credentials'
- Invalid logging.access.file setting when logging.access.type is not json.
- 'Log header is missing or malformed: Check if the --text flag is needed.'
- Out-Of-Memory (OOM) exceptions may occur if not enough memory is available.
- '401 Unauthorized: Requires valid credentials with READ permission on dbms-admin:metrics.'
- '403 Forbidden: User lacks permission to access the requested resource.'
- '401 Unauthorized: Recheck authentication credentials.'
- '401 Unauthorized: Verify the access token and scopes.'
- 'NoSuchFileException: query2.sparql'
- 'Query Time Expected : 184 Actual: 226 (Slowdown: 22%)'
- 'Query Results Expected : 1036 Actual: 1037'
- 'SESSION_TIMEOUT: Ensure adequate memory allocation and proper timeout settings.'
- '401 Unauthorized: Check your credentials and token.'
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Check API token and permissions.'
- '401 Unauthorized: Check credentials used to connect to the server.'
- 'AADSTS65001: The user or administrator has not consented to use the application
  with ID 5439b38f-21f3-459c-b417-c7f6ec3ef55a named Stardog.'
- Inaccurate estimations can lead to inefficient query plans that timeout.
- 'INVALID_CREDENTIALS: Check client ID and secret.'
- 'ACCESS_DENIED: Verify permissions on the requested resource.'
- 'TOKEN_EXPIRED: Refresh your access token.'
- 'GATEWAY_TIMEOUT: The operation may still be successful even if the client receives
  a timeout.'
- Unable to load analytics native library
- Validation reports may contain violations indicating issues with constraints.
- '401 Unauthorized: Check OAuth token or client credentials'
- '404 Not Found: Verify endpoint path or resource availability'
- '400 Bad Request: Check the request payload for correctness'
- '404 Not Found: Ensure the database name is correct'
- '500 Internal Server Error: Check server logs for more details'
- 'AADSTS65001: The user or administrator has not consented to use the application'
- 'Unable to load analytics native library: Please refer to http://www.stardog.com/docs/#_native_library_errors'
- '401 Unauthorized: Check OAuth2 credentials or token validity'
- '400 Bad Request: Check your request parameters'
- '404 Not Found: Endpoint may not exist'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Recheck OAuth token.'
- '403 Forbidden: Check user permissions'
- '429 Too Many Requests: Rate limit exceeded'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Authentication failed.'
- '404 Not Found: Requested resource does not exist.'
- '403 Forbidden: Check permissions for the requested resource'
- '401 Unauthorized: Check your API key or token.'
- '401 Unauthorized: Verify OAuth credentials.'
- '429 Too Many Requests: Implement exponential backoff.'
- 'DATABASE_EXISTS: A database with the same name already exists, cannot overwrite.'
- '401 Unauthorized: Check your credentials and token'
- '429 Too Many Requests: Throttle API calls'
- '401 Unauthorized: Verify client credentials'
- '401 Unauthorized: Check OAuth token'
- '500 Internal Server Error: Retry after a moment'
- 'QUERY_TIMEOUT: Break down queries or increase selectivity'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '401 Unauthorized: Check your credentials and permissions.'
- '404 Not Found: Verify the endpoint or resource exists.'
- '403 Forbidden: Check your API token and permissions.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Check client credentials or token validity'
- '404 Not Found: Verify endpoint path'
- '500 Internal Server Error: Contact support if persistent'
- 'Frame buffer overflowed: Increase buffer size.'
- Profiling duration must be set.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
  - OAuth
  - Client
  - Token
  - OAuth2Token
  - AdminConnection
  - OAuth 2.0
  - Kerberos
  - LDAP
  - jwt.conf
  - usernameField
  - rolesField
  - OAuth2
  - Provider
  - Credential
client:
  base_url: https://stardog.ai
  auth:
    type: oauth2
source_metadata: null
