resources:
- name: advertiser
  endpoint:
    path: /api/advertiser
    method: GET
    data_selector: advertisers
- name: webhook_api_key
  endpoint:
    path: /api/webhook_api_key
    method: GET
    data_selector: webhookKeys
- name: proof_of_play_links
  endpoint:
    path: /white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      advId: required
- name: webhook_api_key
  endpoint:
    path: /white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: ''
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: webhook_api_key
  endpoint:
    path: /api/white-label/webhook/api/key
    method: GET
    data_selector: records
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: update_team_assignment
  endpoint:
    path: /webhook/api/key/team/assignment
    method: GET
    params:
      customerId: integer
      webhookApiKeyId: string
- name: get_player_devices
  endpoint:
    path: /player/devices
    method: GET
    params:
      campaignId: integer
- name: update_webhook_api_key
  endpoint:
    path: /webhook/api/key
    method: PUT
    params:
      id: string
- name: delete_webhook_api_key
  endpoint:
    path: /webhook/api/key
    method: DELETE
    params:
      id: string
- name: delete_by_date
  endpoint:
    path: /data/delete
    method: DELETE
    params:
      customerId: integer
      date: string
- name: import_content
  endpoint:
    path: /content/import
    method: POST
    params:
      customerId: integer
      contentGroupId: string
      fileFolderId: string
      useOriginalFilesOnDuplicate: boolean
      teamIds: string
- name: export_content
  endpoint:
    path: /content/export
    method: GET
    params:
      search: string
- name: duplicate_loop
  endpoint:
    path: /loop/duplicate
    method: POST
    params:
      simpleLoopId: string
      customerId: integer
      contentGroupId: string
      teamIds: string
- name: upload_preview
  endpoint:
    path: /preview/upload
    method: POST
    params:
      simpleLoopId: string
      fileName: string
      createdAt: integer
- name: lock_unlock_schedule
  endpoint:
    path: /schedule/lock
    method: POST
    params:
      scheduleId: string
      locked: boolean
      lockContents: boolean
- name: Add tag
  endpoint:
    path: /api/white-label/add-tag
    method: POST
    data_selector: response
    params:
      fileId: required
      customerId: integer
      tag: required
- name: Set tag
  endpoint:
    path: /api/white-label/set-tag
    method: POST
    data_selector: response
    params:
      contentId: required
      customerId: integer
- name: Remove tag
  endpoint:
    path: /api/white-label/remove-tag
    method: DELETE
    data_selector: response
    params:
      fileId: required
      customerId: integer
      tag: required
- name: Create from template
  endpoint:
    path: /api/white-label/create-from-template
    method: POST
    data_selector: response
    params:
      templateId: required
      customerId: integer
      contentGroupId: string
      name: string
      comment: string
      teamIds: string
- name: Create webhook api key
  endpoint:
    path: /api/white-label/create-webhook-key
    method: POST
    data_selector: response
    params:
      customerId: integer
      teamIds: string
- name: Get webhook api key
  endpoint:
    path: /api/white-label/get-webhook-key
    method: GET
    data_selector: response
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: Get device online and offline ratio
  endpoint:
    path: /api/white-label/device-ratio
    method: GET
    data_selector: response
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: Get user csv data
  endpoint:
    path: /api/white-label/get-csv
    method: GET
    data_selector: response
    params:
      customerId: integer
- name: Get webhook api key by ID
  endpoint:
    path: /api/white-label/get-webhook-key/{id}
    method: GET
    data_selector: response
    params:
      id: required
- name: webhook_api_key
  endpoint:
    path: /api/white-label/webhook-api-key
    method: DELETE
    data_selector: response
    params: {}
- name: customer
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: datasource
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: Get usage details
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    params:
      customerId: integer (customerId)
      search: string (search)
      page: integer (page)
      size: integer (size)
      sort: string (sort)
- name: Get csv
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    params:
      customerId: integer (customerId)
- name: Apply minimum refresh time
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
- name: Update data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: PUT
    params:
      datasourceId: string
- name: Update
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: PUT
    params:
      id: string
- name: Delete
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    params:
      id: string
- name: Clear cache
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    params:
      customerId: integer
      search: string
      applyOn: string
      contentId: string
      limit: integer
- name: Set data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    params:
      datasourceId: string
- name: Merge data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: PUT
    params:
      datasourceId: string
- name: Delete data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    params:
      datasourceId: string
      selector: string
- name: Increase value of data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: PATCH
    params:
      datasourceId: string
      selector: string
      maximumValue: integer
- name: Decrease value of data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: PATCH
    params:
      datasourceId: string
      selector: string
      minimumValue: integer
- name: webhook_api_key
  endpoint:
    path: /api/white-label/webhook-api-key
    method: GET
    data_selector: records
- name: alert_management
  endpoint:
    path: /alert
    method: GET
    data_selector: alerts
- name: device_alert
  endpoint:
    path: /device_alert
    method: GET
    data_selector: device_alerts
- name: datasource_alert
  endpoint:
    path: /datasource_alert
    method: GET
    data_selector: datasource_alerts
- name: webhook_api_key
  endpoint:
    path: /webhook_api_key
    method: GET
    data_selector: webhook_api_keys
- name: webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: insert_data_to_array
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: object
    params:
      datasourceId: required
      selector: required
      index: optional
      maxElementCount: optional
      rotateEnabled: optional
- name: rotate_data_in_array
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: object
    params:
      datasourceId: required
      arraySelector: required
      dateAttributeSelector: optional
      keepThresholdMilliseconds: optional
- name: remove_data_from_array
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: object
    params:
      datasourceId: required
      selector: required
      index: optional
- name: empty_array
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: object
    params:
      datasourceId: required
      selector: required
- name: assign_to_customer
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: object
    params:
      customerId: optional
- name: update_team_assignment
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: object
    params:
      customerId: optional
      webhookApiKeyId: required
- name: move_to_server
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: object
    params:
      deviceGroupId: required
      serverAddress: required
      installRuleKey: required
- name: move_to_customer
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: object
    params:
      deviceGroupId: required
      customerId: required
- name: move_to_device_group
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: object
    params:
      deviceGroupId: required
      targetGroupId: required
- name: set_license
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: object
    params:
      deviceId: required
      customerId: optional
      licenseOrderId: optional
      licenseType: optional
- name: set_license_batch
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: object
    params:
      customerId: optional
      search: optional
      licenseOrderId: optional
      licenseType: optional
- name: set_data_row
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: object
    params:
      customerId: optional
      search: optional
      applyOn: required
      dataRowId: required
- name: Update team assignment
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      customerId: integer (customerId)
      webhookApiKeyId: string
- name: Get player devices
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      campaignId: integer
- name: Update webhook api key data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      id: string
- name: Delete webhook api key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      id: string
- name: Delete by date
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      customerId: integer
      date: string
- name: Import content
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      customerId: integer
      contentGroupId: string
      fileFolderId: string
      useOriginalFilesOnDuplicate: boolean
      teamIds: string
- name: Export content
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      search: string
- name: Duplicate loop
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      simpleLoopId: string
      customerId: integer
      contentGroupId: string
      teamIds: string
- name: Upload preview
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      simpleLoopId: string
      fileName: string
      createdAt: integer
- name: Lock/unlock schedule
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      scheduleId: string
      locked: boolean
      lockContents: boolean
- name: delete_data_row
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: 'null'
    params:
      customerId: integer
      search: string
      applyOn: string
- name: set_datasource
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: 'null'
    params:
      customerId: integer
      search: string
      applyOn: string
      datasourceId: string
- name: set_reboot_time
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: 'null'
    params:
      customerId: integer
      search: string
      applyOn: string
      time: string
- name: delete_reboot_time
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: 'null'
    params:
      customerId: integer
      search: string
      applyOn: string
- name: rename
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: 'null'
    params:
      folderId: string
      newName: string
- name: set_advanced_configuration
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: 'null'
    params:
      customerId: integer
      search: string
      applyOn: string
- name: set_update_rule
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: 'null'
    params:
      customerId: integer
      search: string
      applyOn: string
- name: set_rotation
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: 'null'
    params:
      customerId: integer
      search: string
      applyOn: string
      angle: integer
      type: string
- name: set_brightness
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: 'null'
    params:
      customerId: integer
      search: string
      applyOn: string
      level: integer
- name: set_volume
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: 'null'
    params:
      customerId: integer
      search: string
      applyOn: string
      level: integer
- name: set_time
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: 'null'
    params:
      customerId: integer
      search: string
      applyOn: string
      timeZone: string
- name: Add Tag
  endpoint:
    path: /api/white-label/add-tag
    method: POST
    data_selector: response
    params:
      fileId: required
      customerId: optional
      tag: required
- name: Set Tag
  endpoint:
    path: /api/white-label/set-tag
    method: POST
    data_selector: response
    params:
      contentId: required
      customerId: optional
- name: Remove Tag
  endpoint:
    path: /api/white-label/remove-tag
    method: DELETE
    data_selector: response
    params:
      fileId: required
      customerId: optional
      tag: required
- name: Create from Template
  endpoint:
    path: /api/white-label/create-from-template
    method: POST
    data_selector: response
    params:
      templateId: required
      customerId: optional
      contentGroupId: optional
      name: optional
      comment: optional
      teamIds: optional
- name: Create Webhook API Key
  endpoint:
    path: /api/white-label/create-webhook-api-key
    method: POST
    data_selector: response
    params:
      customerId: optional
      teamIds: optional
- name: Get Webhook API Key Data
  endpoint:
    path: /api/white-label/get-webhook-api-key
    method: GET
    data_selector: response
    params:
      customerId: optional
      search: optional
      page: optional
      size: optional
      sort: optional
- name: Get with Basic Attributes
  endpoint:
    path: /api/white-label/get-basic-attributes
    method: GET
    data_selector: response
    params:
      customerId: optional
      includeReadOnlyInfo: optional
      search: optional
- name: Get Device Online and Offline Ratio
  endpoint:
    path: /api/white-label/device-online-offline-ratio
    method: GET
    data_selector: response
    params:
      customerId: optional
      search: optional
      page: optional
      size: optional
      sort: optional
- name: Get CSV
  endpoint:
    path: /api/white-label/get-csv
    method: GET
    data_selector: response
    params:
      customerId: optional
- name: Get by ID
  endpoint:
    path: /api/white-label/get-by-id
    method: GET
    data_selector: response
    params:
      id: required
- name: webhook_api_key
  endpoint:
    path: /webhook/api/key
    method: DELETE
    data_selector: response
    params: {}
- name: customer
  endpoint:
    path: /api/white-label/customer
    method: GET
    data_selector: data
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: datasource
  endpoint:
    path: /api/white-label/datasource
    method: GET
    data_selector: data
    params:
      search: string
      page: integer
      size: integer
      sort: string
- name: set_weather_location
  endpoint:
    path: /set/weather/location
    method: GET
    data_selector: weatherLocation
    params:
      customerId: required
      applyOn: required
      weatherLocation: required
- name: set_working_hours
  endpoint:
    path: /set/working/hours
    method: POST
    data_selector: workingHours
    params:
      applyOn: required
- name: set_update_version_upper_limit
  endpoint:
    path: /set/update/version/upper/limit
    method: POST
    data_selector: updateVersion
    params:
      customerId: required
      version: required
- name: add_tag
  endpoint:
    path: /add/tag
    method: POST
    data_selector: tag
    params:
      fileId: required
      tag: required
- name: set_tag
  endpoint:
    path: /set/tag
    method: POST
    data_selector: tag
    params:
      contentId: required
- name: remove_tag
  endpoint:
    path: /remove/tag
    method: DELETE
    data_selector: tag
    params:
      fileId: required
      tag: required
- name: set_sensor_config
  endpoint:
    path: /set/sensor/config
    method: POST
    data_selector: sensorConfig
    params:
      customerId: required
- name: reset_sensor
  endpoint:
    path: /reset/sensor
    method: POST
    data_selector: sensorReset
    params:
      customerId: required
- name: turn_on_off_display
  endpoint:
    path: /turn/on/off/display
    method: POST
    data_selector: displayStatus
    params:
      customerId: required
      enabled: required
- name: turn_on_off_emergency
  endpoint:
    path: /turn/on/off/emergency
    method: POST
    data_selector: emergencyStatus
    params:
      customerId: required
      emergencyStatus: required
- name: turn_on_off_lock
  endpoint:
    path: /turn/on/off/lock
    method: POST
    data_selector: lockStatus
    params:
      locked: required
      customerId: required
- name: show_console
  endpoint:
    path: /show/console
    method: POST
    data_selector: consoleStatus
    params:
      customerId: required
      enabled: required
- name: usage_details
  endpoint:
    path: /usage
    method: GET
    data_selector: usageDetails
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: user_csv
  endpoint:
    path: /user/csv
    method: GET
    data_selector: userCsv
    params:
      customerId: integer
- name: set_data
  endpoint:
    path: /data/set/{datasourceId}
    method: POST
    data_selector: setData
    params: {}
- name: merge_data
  endpoint:
    path: /data/merge/{datasourceId}
    method: POST
    data_selector: mergeData
    params: {}
- name: delete_data
  endpoint:
    path: /data/delete/{datasourceId}
    method: DELETE
    data_selector: deleteData
    params:
      selector: string
- name: increase_value
  endpoint:
    path: /data/increase/{datasourceId}
    method: PATCH
    data_selector: increaseValue
    params:
      selector: string
      maximumValue: integer
- name: decrease_value
  endpoint:
    path: /data/decrease/{datasourceId}
    method: PATCH
    data_selector: decreaseValue
    params:
      selector: string
      minimumValue: integer
- name: set_data_row
  endpoint:
    path: /set-data-row
    method: DELETE
    params:
      customerId: integer
      search: string
      applyOn: string
      dataRowId: string
- name: set_license
  endpoint:
    path: /set-license/{deviceId}
    method: DELETE
    params:
      customerId: integer
      licenseOrderId: integer
      licenseType: string
- name: set_license_batch
  endpoint:
    path: /set-license-batch
    method: DELETE
    params:
      customerId: integer
      licenseOrderId: integer
      licenseType: string
- name: delete_data_row
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: '200'
    params:
      customerId: integer
      search: string
      applyOn: string
- name: set_datasource
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: '200'
    params:
      customerId: integer
      search: string
      applyOn: string
      datasourceId: string
- name: set_reboot_time
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: '200'
    params:
      customerId: integer
      search: string
      applyOn: string
      time: string
- name: delete_reboot_time
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: '200'
    params:
      customerId: integer
      search: string
      applyOn: string
- name: set_advanced_configuration
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: '200'
    params:
      customerId: integer
      search: string
      applyOn: string
- name: set_update_rule
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: '200'
    params:
      customerId: integer
      search: string
      applyOn: string
- name: set_rotation
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: '200'
    params:
      customerId: integer
      search: string
      applyOn: string
      angle: integer
      type: string
- name: set_brightness
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: '200'
    params:
      customerId: integer
      search: string
      applyOn: string
      level: integer
- name: set_volume
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: '200'
    params:
      customerId: integer
      search: string
      applyOn: string
      level: integer
- name: set_time
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: '200'
    params:
      customerId: integer
      search: string
      applyOn: string
      timeZone: string
- name: Load page
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    params:
      customerId: required
      search: string
      applyOn: required
      url: required
- name: Request log
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    params:
      customerId: integer
      search: string
      applyOn: required
      systemLog: boolean
      systemReport: boolean
- name: Install application
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    params:
      customerId: integer
      search: string
      applyOn: required
      url: required
- name: Take high resolution preview
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    params:
      customerId: integer
      search: string
      applyOn: required
- name: Turn on rapid preview mode
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    params:
      customerId: integer
      search: string
      applyOn: required
      duration: required
      minimumDelayBetweenPreviews: required
- name: Set preview content
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    params:
      customerId: required
      search: string
      applyOn: required
      contentId: required
- name: Set preview template
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    params:
      customerId: required
      search: string
      applyOn: required
      templateId: required
- name: Assign content
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    params:
      customerId: required
      search: string
      applyOn: required
      contentId: required
      nextContentId: string
      nextContentStartDate: string
      asAssigned: boolean
      asEmergency: boolean
- name: Refresh content
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    params:
      customerId: integer
      search: string
      applyOn: required
- name: Detach content
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    params:
      customerId: required
      search: string
      applyOn: required
      detachNext: boolean
      detachAssigned: boolean
      detachEmergency: boolean
- name: Cache content
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    params:
      customerId: required
      search: string
      applyOn: required
      contentId: required
      cacheAt: string
- name: set_weather_location
  endpoint:
    path: /set_weather_location
    method: GET
    data_selector: responses
    params:
      customerId: required
      search: string
      applyOn: required
      weatherLocation: required
- name: set_working_hours
  endpoint:
    path: /set_working_hours
    method: GET
    data_selector: responses
    params:
      customerId: optional
      search: string
      applyOn: required
- name: set_update_version_upper_limit
  endpoint:
    path: /set_update_version_upper_limit
    method: GET
    data_selector: responses
    params:
      customerId: required
      search: string
      applyOn: required
      version: required
- name: add_tag
  endpoint:
    path: /add_tag
    method: GET
    data_selector: responses
    params:
      fileId: required
      customerId: optional
      tag: required
- name: set_tag
  endpoint:
    path: /set_tag
    method: GET
    data_selector: responses
    params:
      contentId: required
      customerId: optional
- name: remove_tag
  endpoint:
    path: /remove_tag
    method: GET
    data_selector: responses
    params:
      fileId: required
      customerId: optional
      tag: required
- name: set_sensor_config
  endpoint:
    path: /set_sensor_config
    method: GET
    data_selector: responses
    params:
      customerId: required
      search: string
      applyOn: required
- name: reset_sensor
  endpoint:
    path: /reset_sensor
    method: GET
    data_selector: responses
    params:
      customerId: required
      search: string
      applyOn: required
- name: turn_on_off_display
  endpoint:
    path: /turn_on_off_display
    method: GET
    data_selector: responses
    params:
      customerId: required
      search: string
      applyOn: required
      enabled: required
- name: turn_on_off_emergency
  endpoint:
    path: /turn_on_off_emergency
    method: GET
    data_selector: responses
    params:
      customerId: required
      search: string
      applyOn: required
      emergencyStatus: required
- name: turn_on_off_lock
  endpoint:
    path: /turn_on_off_lock
    method: GET
    data_selector: responses
    params:
      locked: required
      customerId: required
      search: string
      applyOn: required
- name: show_console
  endpoint:
    path: /show_console
    method: GET
    data_selector: responses
    params:
      customerId: required
      search: string
      applyOn: required
      enabled: required
- name: cache_content_files
  endpoint:
    path: /api/white-label/cache-content-files
    method: DELETE
    data_selector: response
    params:
      customerId: required
      search: string
      applyOn: required
      cacheAt: string
- name: clear_cache
  endpoint:
    path: /api/white-label/clear-cache
    method: DELETE
    data_selector: response
    params:
      customerId: required
      search: string
      applyOn: required
      contentId: required
      limit: integer
- name: set_location_image
  endpoint:
    path: /api/white-label/set-location-image
    method: DELETE
    data_selector: response
    params:
      deviceId: required
- name: delete_location_image
  endpoint:
    path: /api/white-label/delete-location-image
    method: DELETE
    data_selector: response
    params:
      deviceId: required
      fileName: required
- name: get_location_image
  endpoint:
    path: /api/white-label/get-location-image
    method: DELETE
    data_selector: response
    params:
      deviceId: required
- name: get_webhook_api_key_data
  endpoint:
    path: /api/white-label/get-webhook-api-key-data
    method: DELETE
    data_selector: response
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: get_summary_of_files
  endpoint:
    path: /api/white-label/get-summary-of-files
    method: DELETE
    data_selector: response
    params:
      customerId: integer
      folderSearch: string
      fileSearch: string
      quickFilterId: string
      page: integer
      size: integer
      sort: string
- name: get_path_of_file
  endpoint:
    path: /api/white-label/get-path-of-file
    method: DELETE
    data_selector: response
    params:
      customerId: integer
      folderId: string
- name: get_preview
  endpoint:
    path: /api/white-label/get-preview
    method: DELETE
    data_selector: response
    params:
      deviceId: required
- name: get_status
  endpoint:
    path: /api/white-label/get-status
    method: DELETE
    data_selector: response
    params:
      customerId: integer
- name: view_map
  endpoint:
    path: /api/white-label/view-map
    method: DELETE
    data_selector: response
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
      select: string
      includeRectangleNorthLat: required
      includeRectangleEastLon: required
      includeRectangleSouthLat: required
      includeRectangleWestLon: required
      excludeRectangleNorthLat: integer
      excludeRectangleEastLon: integer
      excludeRectangleSouthLat: integer
      excludeRectangleWestLon: integer
- name: active_browser_connections
  endpoint:
    path: /api/active-browser-connections
    method: GET
    data_selector: connections
    params:
      customerId: integer (customerId)
      slaveId: string
- name: user_csv_data
  endpoint:
    path: /api/user-csv-data
    method: GET
    data_selector: csvData
    params:
      customerId: integer (customerId)
- name: webhook_api_key_data
  endpoint:
    path: /api/webhook-api-key
    method: GET
    data_selector: webhookData
    params:
      customerId: integer (customerId)
      search: string (search)
      page: integer (page)
      size: integer (size)
      sort: string (sort)
- name: device_content_path
  endpoint:
    path: /api/device-content-path
    method: GET
    data_selector: contentPath
    params:
      customerId: integer (customerId)
      folderId: string
- name: close_device_content_session
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      sessionId: required
      waitMinutes: 10
- name: create_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    data_selector: ''
    params:
      customerId: integer
      teamIds: string
- name: move_device_group_to_server
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    data_selector: ''
    params:
      deviceGroupId: required
      serverAddress: required
      installRuleKey: required
- name: update_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: PUT
    data_selector: ''
    params:
      id: required
- name: delete_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      id: required
- name: show_device_info
  endpoint:
    path: /show_device_info
    method: GET
    data_selector: response
    params:
      customerId: required
      search: optional
      applyOn: required
      enabled: required
- name: show_name
  endpoint:
    path: /show_name
    method: GET
    data_selector: response
    params:
      customerId: required
      search: optional
      applyOn: required
      enabled: required
- name: show_state_indicator
  endpoint:
    path: /show_state_indicator
    method: GET
    data_selector: response
    params:
      customerId: required
      search: optional
      applyOn: required
      enabled: required
- name: set_toast_message
  endpoint:
    path: /set_toast_message
    method: POST
    data_selector: response
    params:
      customerId: required
      search: optional
      applyOn: required
      message: required
- name: send_command
  endpoint:
    path: /send_command
    method: POST
    data_selector: response
    params:
      customerId: required
      search: optional
      applyOn: required
      command: required
- name: execute_shell_commands
  endpoint:
    path: /execute_shell_commands
    method: POST
    data_selector: response
    params:
      deviceId: required
- name: update
  endpoint:
    path: /update
    method: PUT
    data_selector: response
    params:
      id: required
      token: required
      name: required
      createdAt: required
      restricted: required
      customerId: required
      readOnly: required
- name: restart
  endpoint:
    path: /restart
    method: POST
    data_selector: response
    params:
      customerId: required
      search: optional
      applyOn: required
- name: snooze
  endpoint:
    path: /snooze
    method: POST
    data_selector: response
    params:
      customerId: required
      search: optional
      applyOn: required
- name: wake_up
  endpoint:
    path: /wake_up
    method: POST
    data_selector: response
    params:
      customerId: required
      search: optional
      applyOn: required
- name: start_recovery
  endpoint:
    path: /start_recovery
    method: POST
    data_selector: response
    params:
      customerId: required
      search: optional
      applyOn: required
- name: start_settings
  endpoint:
    path: /start_settings
    method: POST
    data_selector: response
    params:
      customerId: required
      search: optional
      applyOn: required
- name: regenerate_install_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
- name: update_team_assignment
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
- name: create_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
- name: update_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
- name: get_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
- name: get_webhook_api_key_simple
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
- name: get_webhook_api_key_simple_paged
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
- name: get_webhook_api_key_by_id
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
- name: delete_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
- name: upload_file
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
- name: load_page
  endpoint:
    path: /api/white-label/load-page
    method: GET
    data_selector: response
    params:
      customerId: required
      search: string
      applyOn: required
      url: required
- name: request_log
  endpoint:
    path: /api/white-label/request-log
    method: GET
    data_selector: response
    params:
      customerId: optional
      search: string
      applyOn: required
      systemLog: boolean
      systemReport: boolean
- name: install_application
  endpoint:
    path: /api/white-label/install-application
    method: POST
    data_selector: response
    params:
      customerId: optional
      search: string
      applyOn: required
      url: required
- name: take_high_resolution_preview
  endpoint:
    path: /api/white-label/take-high-resolution-preview
    method: GET
    data_selector: response
    params:
      customerId: optional
      search: string
      applyOn: required
- name: turn_on_rapid_preview_mode
  endpoint:
    path: /api/white-label/turn-on-rapid-preview-mode
    method: POST
    data_selector: response
    params:
      customerId: optional
      search: string
      applyOn: required
      duration: required
      minimumDelayBetweenPreviews: required
- name: set_preview_content
  endpoint:
    path: /api/white-label/set-preview-content
    method: POST
    data_selector: response
    params:
      customerId: required
      search: string
      applyOn: required
      contentId: required
- name: set_preview_template
  endpoint:
    path: /api/white-label/set-preview-template
    method: POST
    data_selector: response
    params:
      customerId: required
      search: string
      applyOn: required
      templateId: required
- name: assign_content
  endpoint:
    path: /api/white-label/assign-content
    method: POST
    data_selector: response
    params:
      customerId: required
      search: string
      applyOn: required
      contentId: required
      nextContentId: string
      nextContentStartDate: string
      asAssigned: boolean
      asEmergency: boolean
- name: refresh_content
  endpoint:
    path: /api/white-label/refresh-content
    method: GET
    data_selector: response
    params:
      customerId: optional
      search: string
      applyOn: required
- name: detach_content
  endpoint:
    path: /api/white-label/detach-content
    method: POST
    data_selector: response
    params:
      customerId: required
      search: string
      applyOn: required
      detachNext: boolean
      detachAssigned: boolean
      detachEmergency: boolean
- name: cache_content
  endpoint:
    path: /api/white-label/cache-content
    method: POST
    data_selector: response
    params:
      customerId: required
      search: string
      applyOn: required
      contentId: required
      cacheAt: string
- name: rename
  endpoint:
    path: /api/white-label/rename
    method: DELETE
    data_selector: ''
    params:
      folderId: required
      newName: required
- name: set_validity
  endpoint:
    path: /api/white-label/set-validity
    method: DELETE
    data_selector: ''
    params:
      fileId: required
      customerId: ''
      validFrom: ''
      validTo: ''
- name: add_tag
  endpoint:
    path: /api/white-label/add-tag
    method: DELETE
    data_selector: ''
    params:
      fileId: required
      customerId: ''
      tag: required
- name: set_tags
  endpoint:
    path: /api/white-label/set-tags
    method: DELETE
    data_selector: ''
    params:
      fileId: required
      customerId: ''
- name: remove_tag
  endpoint:
    path: /api/white-label/remove-tag
    method: DELETE
    data_selector: ''
    params:
      fileId: required
      customerId: ''
      tag: required
- name: update_team_assignment
  endpoint:
    path: /api/white-label/update-team-assignment
    method: DELETE
    data_selector: ''
    params:
      customerId: ''
      webhookApiKeyId: required
- name: get_webhook_api_key_data
  endpoint:
    path: /api/white-label/get-webhook-api-key-data
    method: DELETE
    data_selector: ''
    params:
      customerId: ''
      search: ''
      page: ''
      size: ''
      sort: ''
- name: get_summary
  endpoint:
    path: /api/white-label/get-summary
    method: DELETE
    data_selector: ''
    params:
      customerId: ''
      folderSearch: ''
      fileSearch: ''
      quickFilterId: ''
      page: ''
      size: ''
      sort: ''
- name: get_path
  endpoint:
    path: /api/white-label/get-path
    method: DELETE
    data_selector: ''
    params:
      customerId: ''
      folderId: ''
- name: get_all_by_quick_filter
  endpoint:
    path: /api/white-label/get-all-by-quick-filter
    method: DELETE
    data_selector: ''
    params:
      quickFilterId: required
      customerId: ''
- name: get_by_quick_filter
  endpoint:
    path: /api/white-label/get-by-quick-filter
    method: DELETE
    data_selector: ''
    params:
      quickFilterId: required
      customerId: ''
      page: ''
      size: ''
      sort: ''
- name: get_storage_statistics
  endpoint:
    path: /api/white-label/get-storage-statistics
    method: DELETE
    data_selector: ''
    params:
      customerId: ''
- name: terms_of_service
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
- name: cache_content_files
  endpoint:
    path: /api/cache/content/files
    method: GET
    data_selector: records
    params:
      customerId: required
      search: optional
      applyOn: required
      cacheAt: optional
- name: clear_cache
  endpoint:
    path: /api/clear/cache
    method: POST
    data_selector: records
    params:
      customerId: required
      search: optional
      applyOn: required
      contentId: required
      limit: optional
- name: set_location_image
  endpoint:
    path: /api/set/location/image
    method: POST
    data_selector: records
    params:
      deviceId: required
      files: required
      previews: optional
- name: delete_location_image
  endpoint:
    path: /api/delete/location/image
    method: DELETE
    data_selector: records
    params:
      deviceId: required
      fileName: required
- name: get_location_image
  endpoint:
    path: /api/get/location/image
    method: GET
    data_selector: records
    params:
      deviceId: required
- name: get_webhook_api_key_data
  endpoint:
    path: /api/get/webhook/api/key
    method: GET
    data_selector: records
    params:
      customerId: optional
      search: optional
      page: optional
      size: optional
      sort: optional
- name: get_summary
  endpoint:
    path: /api/get/summary
    method: GET
    data_selector: records
    params:
      customerId: optional
      folderSearch: optional
      fileSearch: optional
      quickFilterId: optional
      page: optional
      size: optional
      sort: optional
- name: get_path
  endpoint:
    path: /api/get/path
    method: GET
    data_selector: records
    params:
      customerId: optional
      folderId: optional
- name: get_preview
  endpoint:
    path: /api/get/preview
    method: GET
    data_selector: records
    params:
      deviceId: required
- name: get_status
  endpoint:
    path: /api/get/status
    method: GET
    data_selector: records
    params:
      customerId: optional
- name: view_map
  endpoint:
    path: /api/view/map
    method: GET
    data_selector: records
    params:
      customerId: optional
      search: optional
      page: optional
      size: optional
      sort: optional
      select: optional
      includeRectangleNorthLat: required
      includeRectangleEastLon: required
      includeRectangleSouthLat: required
      includeRectangleWestLon: required
      excludeRectangleNorthLat: optional
      excludeRectangleEastLon: optional
      excludeRectangleSouthLat: optional
      excludeRectangleWestLon: optional
- name: active_browser_connections
  endpoint:
    path: /api/active-browser-connections
    method: GET
    data_selector: records
    params:
      customerId: integer
      slaveId: string
- name: user_csv_data
  endpoint:
    path: /api/user-csv-data
    method: GET
    data_selector: records
    params:
      customerId: integer
- name: webhook_api_key_data
  endpoint:
    path: /api/webhook-api-key
    method: GET
    data_selector: records
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: device group
  endpoint:
    path: /api/white-label/device-group
    method: GET
    data_selector: records
    params: {}
- name: webhook api key
  endpoint:
    path: /api/white-label/webhook-api-key
    method: GET
    data_selector: records
    params: {}
- name: rename
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      folderId: required
      newName: required
- name: update_team_assignment
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      customerId: optional
      webhookApiKeyId: required
- name: get_webhook_data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      customerId: optional
      search: optional
      page: optional
      size: optional
      sort: optional
- name: get_folder_content
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      folderId: required
      customerId: optional
      contentType: optional
      nameKeyword: optional
      searchFiles: optional
      searchFolders: optional
      page: optional
      size: optional
      sort: optional
- name: get_folders_by_path
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      folderPath: required
      customerId: optional
- name: synchronize
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      folderId: required
- name: set_automatic_synchronization
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      folderId: required
      autoSync: required
- name: set_cleanup_outdated_files
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      folderId: required
      cleanupOutdatedFiles: required
- name: set_ignored_subfolders
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      folderId: required
- name: set_validity_column_names
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      folderId: required
      validFromColumnName: optional
      validToColumnName: optional
- name: update_google_drive_folder
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      customerId: optional
      folderId: required
- name: update_one_drive_folder
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      customerId: optional
      folderId: required
- name: detach_google_credential
  endpoint:
    path: /white-label/terms-of-service-html/{lang}
    method: DELETE
    params:
      folderId: required
- name: detach_microsoft_tenant
  endpoint:
    path: /white-label/terms-of-service-html/{lang}
    method: DELETE
    params:
      folderId: required
- name: delete_webhook_api_key
  endpoint:
    path: /white-label/terms-of-service-html/{lang}
    method: DELETE
    params:
      id: required
- name: get_webhook_api_key_data
  endpoint:
    path: /white-label/terms-of-service-html/{lang}
    method: GET
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: get_user_csv_data
  endpoint:
    path: /white-label/terms-of-service-html/{lang}
    method: GET
    params:
      customerId: integer
- name: update_webhook_api_key_team_assignment
  endpoint:
    path: /white-label/terms-of-service-html/{lang}
    method: PUT
    params:
      customerId: integer
      webhookApiKeyId: required
- name: create_webhook_api_key
  endpoint:
    path: /white-label/terms-of-service-html/{lang}
    method: POST
    params:
      customerId: integer
      teamIds: string
- name: update_webhook_api_key_data
  endpoint:
    path: /white-label/terms-of-service-html/{lang}
    method: PUT
    params:
      id: required
- name: regenerate_install_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      deviceInstallRuleId: required
- name: update_team_assignment
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      customerId: required
      webhookApiKeyId: required
- name: create_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      customerId: required
      teamIds: required
- name: update_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      id: required
- name: get_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      customerId: required
- name: get_webhook_api_key_simple
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      customerId: required
- name: get_webhook_api_key_simple_paged
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      customerId: required
- name: get_webhook_api_key_by_id
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      id: required
- name: delete_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      id: required
- name: upload_file
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      customerId: required
- name: create_webhook_api_key
  endpoint:
    path: /create
    method: POST
    data_selector: ''
    params:
      customerId: integer
      teamIds: string
- name: get_webhook_api_key_data
  endpoint:
    path: /get
    method: GET
    data_selector: ''
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: update_webhook_api_key
  endpoint:
    path: /update
    method: PUT
    data_selector: ''
    params:
      id: string
- name: delete_webhook_api_key
  endpoint:
    path: /delete
    method: DELETE
    data_selector: ''
    params:
      id: string
- name: webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: id
    params: {}
- name: rename_file_folder
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      folderId: required
      newName: required
- name: set_validity
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      fileId: required
      customerId: optional
      validFrom: optional
      validTo: optional
- name: add_tag
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      fileId: required
      customerId: optional
      tag: required
- name: set_tags
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      fileId: required
      customerId: optional
- name: remove_tag
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      fileId: required
      customerId: optional
      tag: required
- name: update_team_assignment
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      customerId: optional
      webhookApiKeyId: required
- name: get_webhook_api_key_data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      customerId: optional
      search: optional
      page: optional
      size: optional
      sort: optional
- name: get_summary_of_files
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      customerId: optional
      folderSearch: optional
      fileSearch: optional
      quickFilterId: optional
      page: optional
      size: optional
      sort: optional
- name: get_path_of_file
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      customerId: optional
      folderId: optional
- name: get_all_by_quick_filter
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      quickFilterId: required
      customerId: optional
- name: get_by_quick_filter
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      quickFilterId: required
      customerId: optional
      page: optional
      size: optional
      sort: optional
- name: get_storage_statistics
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      customerId: optional
- name: duplicate_loop
  endpoint:
    path: /api/duplicate_loop
    method: POST
    data_selector: response
    params:
      customerId: integer
      contentGroupId: string
      teamIds: string
- name: upload_preview
  endpoint:
    path: /api/upload_preview
    method: POST
    data_selector: response
    params:
      fileName: string
      createdAt: integer
- name: lock_unlock_schedule
  endpoint:
    path: /api/lock_unlock_schedule
    method: POST
    data_selector: response
    params:
      scheduleId: string
      locked: boolean
      lockContents: boolean
- name: create_webhook_api_key
  endpoint:
    path: /api/create_webhook_api_key
    method: POST
    data_selector: response
    params:
      customerId: integer
      teamIds: string
- name: get_webhook_api_key_data
  endpoint:
    path: /api/get_webhook_api_key_data
    method: GET
    data_selector: response
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: get_device_online_offline_ratio
  endpoint:
    path: /api/get_device_online_offline_ratio
    method: GET
    data_selector: response
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: get_by_id
  endpoint:
    path: /api/get_by_id
    method: GET
    data_selector: response
    params:
      id: string
- name: update_webhook_api_key
  endpoint:
    path: /api/update_webhook_api_key
    method: PUT
    data_selector: response
    params:
      id: string
- name: delete_schedule
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      scheduleId: required
      autoSave: required
- name: create_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    data_selector: response
    params:
      customerId: integer
      teamIds: string
- name: duplicate_loop
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    data_selector: response
    params:
      simpleLoopId: required
      customerId: integer
      contentGroupId: string
      teamIds: string
- name: upload_preview
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    data_selector: response
    params:
      simpleLoopId: required
      fileName: string
      createdAt: integer
- name: get_webhook_api_key_data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: response
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: get_device_online_offline_ratio
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: response
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: terms_of_service_html
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params: {}
- name: total_size_of_files
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: ''
    params:
      customerId: integer (customerId)
- name: update_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: PUT
    data_selector: ''
    params:
      id: string
- name: delete_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      id: string
- name: create_webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    data_selector: ''
    params:
      customerId: integer (customerId)
      teamIds: string
- name: create_filtered_folder
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    data_selector: ''
    params:
      customerId: integer (customerId)
      parentId: string
      name: string
      quickFilterId: string
      inheritParentTeams: boolean
- name: add_synced_google_drive_folder
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    data_selector: ''
    params:
      customerId: integer (customerId)
      parentId: string
      name: string
      inheritParentTeams: boolean
- name: add_synced_one_drive_folder
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    data_selector: ''
    params:
      customerId: integer (customerId)
      parentId: string
      name: string
      inheritParentTeams: boolean
- name: move_batch_to_folder
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    data_selector: ''
    params:
      customerId: integer (customerId)
      inheritParentTeams: boolean
- name: remove_batch_from_folder
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      customerId: integer (customerId)
- name: Get system dashboard
  endpoint:
    path: /api/white-label/system-dashboard
    method: GET
    params:
      force: false
- name: Get network dashboard
  endpoint:
    path: /api/white-label/network-dashboard
    method: GET
    params:
      includeOwnerData: false
- name: Get sessions
  endpoint:
    path: /api/white-label/sessions
    method: GET
    params:
      customerId: required
- name: Get all tags
  endpoint:
    path: /api/white-label/tags
    method: GET
    params:
      customerId: optional
- name: Suggest tag
  endpoint:
    path: /api/white-label/suggest-tag
    method: GET
    params:
      customerId: optional
      keyword: required
      entity: optional
- name: Get webhook api key
  endpoint:
    path: /api/white-label/webhook
    method: GET
    params:
      customerId: optional
      search: optional
      page: 0
      size: 20
      sort: optional
- name: Create webhook api key
  endpoint:
    path: /api/white-label/webhook
    method: POST
    params:
      customerId: required
      teamIds: required
- name: Update webhook api key
  endpoint:
    path: /api/white-label/webhook/{id}
    method: PUT
    params:
      id: required
- name: rename
  endpoint:
    path: /white-label/terms-of-service-html
    method: DELETE
    params:
      folderId: required
      newName: required
- name: update_team_assignment
  endpoint:
    path: /white-label/terms-of-service-html
    method: DELETE
    params:
      customerId: integer
      webhookApiKeyId: required
- name: get
  endpoint:
    path: /white-label/terms-of-service-html
    method: GET
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: get_folder_content
  endpoint:
    path: /white-label/terms-of-service-html
    method: GET
    params:
      folderId: string
      customerId: integer
      contentType: string
      nameKeyword: string
      searchFiles: string
      searchFolders: string
      page: integer
      size: integer
      sort: string
- name: get_folders_by_path
  endpoint:
    path: /white-label/terms-of-service-html
    method: GET
    params:
      folderPath: string
      customerId: integer
- name: synchronize
  endpoint:
    path: /white-label/terms-of-service-html
    method: POST
    params:
      folderId: required
- name: set_automatic_synchronization
  endpoint:
    path: /white-label/terms-of-service-html
    method: POST
    params:
      folderId: required
      autoSync: required
- name: set_cleanup_outdated_files
  endpoint:
    path: /white-label/terms-of-service-html
    method: POST
    params:
      folderId: required
      cleanupOutdatedFiles: required
- name: set_ignored_subfolders
  endpoint:
    path: /white-label/terms-of-service-html
    method: POST
    params:
      folderId: required
- name: set_validity_column_names
  endpoint:
    path: /white-label/terms-of-service-html
    method: POST
    params:
      folderId: required
      validFromColumnName: string
      validToColumnName: string
- name: update_google_drive_folder
  endpoint:
    path: /white-label/terms-of-service-html
    method: POST
    params:
      customerId: integer
      folderId: required
- name: update_one_drive_folder
  endpoint:
    path: /white-label/terms-of-service-html
    method: POST
    params:
      customerId: integer
      folderId: required
- name: delete_webhook_api_key
  endpoint:
    path: /delete/api/white-label/terms-of-service-html/{lang}
    method: DELETE
- name: create_webhook_api_key
  endpoint:
    path: /create/api/white-label/terms-of-service-html
    method: POST
- name: update_webhook_api_key
  endpoint:
    path: /update/api/white-label/terms-of-service-html/{id}
    method: PUT
- name: get_webhook_api_key
  endpoint:
    path: /get/api/white-label/terms-of-service-html/{id}
    method: GET
- name: list_team_data
  endpoint:
    path: /list/api/white-label/teams
    method: GET
- name: get_team_advertiser_assignments
  endpoint:
    path: /get/team/advertiser/assignments
    method: GET
- name: get_advertiser_team_assignments
  endpoint:
    path: /get/advertiser/team/assignments
    method: GET
- name: get_team_alert_rule_assignments
  endpoint:
    path: /get/team/alert/rule/assignments
    method: GET
- name: get_alert_rule_team_assignments
  endpoint:
    path: /get/alert/rule/team/assignments
    method: GET
- name: Detach google credential
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: '200'
    params:
      folderId: required
- name: Detach microsoft tenant
  endpoint:
    path: /api/white-label/terms-of-service-html/value
    method: DELETE
    data_selector: '200'
    params:
      folderId: required
- name: Delete webhook api key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: '200'
    params:
      id: required
- name: Get webhook api key data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: '200'
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: Get user csv data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: '200'
    params:
      customerId: integer
- name: Update webhook api key team assignment
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: PUT
    data_selector: '200'
    params:
      customerId: integer
      webhookApiKeyId: required
- name: Create webhook api key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    data_selector: '200'
    params:
      customerId: integer
      teamIds: string
- name: Update webhook api key data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: PATCH
    data_selector: '200'
    params:
      id: required
- name: webhook_api_key
  endpoint:
    path: /api/webhook_api_key
    method: GET
    data_selector: records
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: team_campaign_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: id
    params:
      teamId: required
- name: campaign_team_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: id
    params:
      campaignId: required
- name: team_content_group_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: id
    params:
      teamId: required
- name: content_group_team_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: id
    params:
      contentGroupId: required
- name: team_datasource_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: id
    params:
      teamId: required
- name: datasource_team_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: id
    params:
      datasourceId: required
- name: team_device_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: id
    params:
      teamId: required
- name: device_team_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: id
    params:
      deviceId: required
- name: team_device_content_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: id
    params:
      teamId: required
- name: device_content_team_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: id
    params:
      deviceContentId: required
- name: team_device_group_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: id
    params:
      teamId: required
- name: duplicate_loop
  endpoint:
    path: /api/duplicate
    method: POST
    data_selector: response
    params:
      simpleLoopId: required
      customerId: integer
      contentGroupId: string
      teamIds: string
- name: upload_preview
  endpoint:
    path: /api/upload-preview
    method: POST
    data_selector: response
    params:
      simpleLoopId: required
      fileName: string
      createdAt: integer
- name: lock_unlock_schedule
  endpoint:
    path: /api/lock-unlock
    method: POST
    data_selector: response
    params:
      scheduleId: required
      locked: boolean
      lockContents: boolean
- name: create_webhook_api_key
  endpoint:
    path: /api/create-webhook
    method: POST
    data_selector: response
    params:
      customerId: integer
      teamIds: string
      id: integer
      token: string
      name: string
      createdAt: integer
      restricted: boolean
      readOnly: boolean
- name: get_webhook_api_key
  endpoint:
    path: /api/get-webhook
    method: GET
    data_selector: response
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: get_device_ratio
  endpoint:
    path: /api/get-device-ratio
    method: GET
    data_selector: response
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: get_by_id
  endpoint:
    path: /api/get-webhook/{id}
    method: GET
    data_selector: response
    params:
      id: required
- name: update_webhook_api_key
  endpoint:
    path: /api/update-webhook/{id}
    method: PUT
    data_selector: response
    params:
      id: required
      token: string
      name: string
      createdAt: integer
      restricted: boolean
      customerId: integer
      readOnly: boolean
- name: device_group_team_assignments
  endpoint:
    path: /api/device-group-team-assignments
    method: GET
    data_selector: records
    params:
      deviceGroupId: ''
- name: team_device_install_rule_assignments
  endpoint:
    path: /api/team-device-install-rule-assignments
    method: GET
    data_selector: records
    params:
      teamId: ''
- name: device_install_rule_team_assignments
  endpoint:
    path: /api/device-install-rule-team-assignments
    method: GET
    data_selector: records
    params:
      deviceInstallRuleId: ''
- name: team_file_assignments
  endpoint:
    path: /api/team-file-assignments
    method: GET
    data_selector: records
    params:
      teamId: ''
- name: file_team_assignments
  endpoint:
    path: /api/file-team-assignments
    method: GET
    data_selector: records
    params:
      fileId: ''
- name: team_file_folder_assignments
  endpoint:
    path: /api/team-file-folder-assignments
    method: GET
    data_selector: records
    params:
      teamId: ''
- name: file_folder_team_assignments
  endpoint:
    path: /api/file-folder-team-assignments
    method: GET
    data_selector: records
    params:
      fileFolderId: ''
- name: team_google_credential_assignments
  endpoint:
    path: /api/team-google-credential-assignments
    method: GET
    data_selector: records
    params:
      teamId: ''
- name: google_credential_team_assignments
  endpoint:
    path: /api/google-credential-team-assignments
    method: GET
    data_selector: records
    params:
      googleCredentialId: ''
- name: team_message_assignments
  endpoint:
    path: /api/team-message-assignments
    method: GET
    data_selector: records
    params:
      teamId: ''
- name: message_team_assignments
  endpoint:
    path: /api/message-team-assignments
    method: GET
    data_selector: records
    params:
      messageId: ''
- name: team_message_group_assignments
  endpoint:
    path: /api/team-message-group-assignments
    method: GET
    data_selector: records
    params:
      teamId: ''
- name: Delete schedule
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      scheduleId: required
      autoSave: required
- name: Create webhook api key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    data_selector: response
    params:
      customerId: integer
      teamIds: string
- name: Get webhook api key data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: response
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: webhook_team_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      webhookEventActionId: integer
- name: team_user_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      teamId: string
- name: user_team_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      userEmail: string
- name: team_webhook_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      teamId: string
- name: Get system dashboard
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: response
    params:
      force: 'false'
- name: Get network dashboard
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: response
    params:
      includeOwnerData: 'false'
      force: 'false'
      customerId: ''
- name: Get sessions
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: response
    params:
      customerId: ''
- name: Get all tags
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: response
    params:
      customerId: ''
- name: Suggest tag
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: response
    params:
      customerId: ''
      keyword: ''
      entity: ''
- name: Get webhook api key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: response
    params:
      customerId: ''
      search: ''
      page: '0'
      size: '20'
      sort: ''
- name: Create webhook api key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    data_selector: response
    params:
      customerId: ''
      teamIds: ''
- name: Update webhook api key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: PUT
    data_selector: response
    params:
      id: ''
- name: Delete webhook api key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params:
      id: ''
- name: team_webhook_api_key_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: records
    params:
      teamId: required
- name: webhook_api_key_team_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: records
    params:
      webhookApiKeyId: required
- name: advertiser_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: alert_rule_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: campaign_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: content_group_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: datasource_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: device_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: device_content_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: device_group_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: device_install_rule_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: file_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: file_folder_assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: Delete Webhook API Key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: none
    params:
      id: required
- name: Create Webhook API Key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: POST
    data_selector: none
    params:
      customerId: integer
      teamIds: string
- name: Update Webhook API Key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: PUT
    data_selector: none
    params:
      id: required
- name: Get Webhook API Key Data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: none
    params:
      customerId: integer
      search: string
      page: integer
      size: integer
      sort: string
- name: Get Team Advertiser Assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: none
    params:
      teamId: required
- name: Get Advertiser Team Assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: none
    params:
      advertiserId: required
- name: Get Team Alert Rule Assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: none
    params:
      teamId: required
- name: Get Alert Rule Team Assignments
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: GET
    data_selector: none
    params:
      alertRuleId: required
- name: team_campaign_assignments
  endpoint:
    path: /api/white-label/team/campaign-assignments
    method: GET
    data_selector: campaignAssignments
    params:
      teamId: required
- name: campaign_team_assignments
  endpoint:
    path: /api/white-label/campaign/team-assignments
    method: GET
    data_selector: teamAssignments
    params:
      campaignId: required
- name: team_content_group_assignments
  endpoint:
    path: /api/white-label/team/content-group-assignments
    method: GET
    data_selector: contentGroupAssignments
    params:
      teamId: required
- name: content_group_team_assignments
  endpoint:
    path: /api/white-label/content-group/team-assignments
    method: GET
    data_selector: groupAssignments
    params:
      contentGroupId: required
- name: team_datasource_assignments
  endpoint:
    path: /api/white-label/team/datasource-assignments
    method: GET
    data_selector: datasourceAssignments
    params:
      teamId: required
- name: datasource_team_assignments
  endpoint:
    path: /api/white-label/datasource/team-assignments
    method: GET
    data_selector: datasourceAssignments
    params:
      datasourceId: required
- name: team_device_assignments
  endpoint:
    path: /api/white-label/team/device-assignments
    method: GET
    data_selector: deviceAssignments
    params:
      teamId: required
- name: device_team_assignments
  endpoint:
    path: /api/white-label/device/team-assignments
    method: GET
    data_selector: teamAssignments
    params:
      deviceId: required
- name: team_device_content_assignments
  endpoint:
    path: /api/white-label/team/device-content-assignments
    method: GET
    data_selector: deviceContentAssignments
    params:
      teamId: required
- name: device_content_team_assignments
  endpoint:
    path: /api/white-label/device/content-team-assignments
    method: GET
    data_selector: contentTeamAssignments
    params:
      deviceContentId: required
- name: team_device_group_assignments
  endpoint:
    path: /api/white-label/team/device-group-assignments
    method: GET
    data_selector: deviceGroupAssignments
    params:
      teamId: required
- name: update_team_assignment
  endpoint:
    path: /api/update_team_assignment
    method: POST
    data_selector: response
    params: {}
- name: send_feedback
  endpoint:
    path: /api/send_feedback
    method: POST
    data_selector: response
    params: {}
- name: send_content_request
  endpoint:
    path: /api/send_content_request
    method: POST
    data_selector: response
    params: {}
- name: create_webhook_api_key
  endpoint:
    path: /api/create_webhook_api_key
    method: POST
    data_selector: response
    params: {}
- name: update_webhook_api_key
  endpoint:
    path: /api/update_webhook_api_key/{id}
    method: PUT
    data_selector: response
    params: {}
- name: delete_webhook_api_key
  endpoint:
    path: /api/delete_webhook_api_key/{id}
    method: DELETE
    data_selector: response
    params: {}
- name: get_webhook_api_key_data
  endpoint:
    path: /api/get_webhook_api_key_data
    method: GET
    data_selector: response
    params: {}
- name: get_user_csv_data
  endpoint:
    path: /api/get_user_csv_data
    method: GET
    data_selector: response
    params: {}
- name: assign_user_interface_profile
  endpoint:
    path: /api/assign_user_interface_profile/{userInterfaceProfileId}
    method: POST
    data_selector: response
    params: {}
- name: webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
- name: webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: device_group_team_assignments
  endpoint:
    path: /api/device_group/team_assignments
    method: GET
    data_selector: records
    params:
      deviceGroupId: required
- name: team_device_install_rule_assignments
  endpoint:
    path: /api/team/device_install_rule_assignments
    method: GET
    data_selector: records
    params:
      teamId: required
- name: device_install_rule_team_assignments
  endpoint:
    path: /api/device_install_rule/team_assignments
    method: GET
    data_selector: records
    params:
      deviceInstallRuleId: required
- name: team_file_assignments
  endpoint:
    path: /api/team/file_assignments
    method: GET
    data_selector: records
    params:
      teamId: required
- name: file_team_assignments
  endpoint:
    path: /api/file/team_assignments
    method: GET
    data_selector: records
    params:
      fileId: required
- name: team_file_folder_assignments
  endpoint:
    path: /api/team/file_folder_assignments
    method: GET
    data_selector: records
    params:
      teamId: required
- name: file_folder_team_assignments
  endpoint:
    path: /api/file_folder/team_assignments
    method: GET
    data_selector: records
    params:
      fileFolderId: required
- name: team_google_credential_assignments
  endpoint:
    path: /api/team/google_credential_assignments
    method: GET
    data_selector: records
    params:
      teamId: required
- name: google_credential_team_assignments
  endpoint:
    path: /api/google_credential/team_assignments
    method: GET
    data_selector: records
    params:
      googleCredentialId: required
- name: team_message_assignments
  endpoint:
    path: /api/team/message_assignments
    method: GET
    data_selector: records
    params:
      teamId: required
- name: message_team_assignments
  endpoint:
    path: /api/message/team_assignments
    method: GET
    data_selector: records
    params:
      messageId: required
- name: team_message_group_assignments
  endpoint:
    path: /api/team/message_group_assignments
    method: GET
    data_selector: records
    params:
      teamId: required
- name: remove_logo_horizontal_menu
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      domainId: integer
- name: upload_logo_horizontal_menu
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      domainId: integer
- name: remove_logo_login_form
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      domainId: integer
- name: upload_logo_login_form
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      domainId: integer
- name: remove_large_logo_login_page
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      domainId: integer
- name: upload_large_logo_login_page
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      domainId: integer
- name: remove_medium_logo_login_page
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      domainId: integer
- name: upload_medium_logo_login_page
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      domainId: integer
- name: remove_small_logo_login_page
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      domainId: integer
- name: upload_small_logo_login_page
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      domainId: integer
- name: upload_moving_logo
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: file
    params:
      domainId: integer
- name: remove_moving_logo
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: file
    params:
      domainId: integer
- name: upload_icon_for_browser_tab
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: file
    params:
      domainId: integer
- name: remove_icon_from_browser_tab
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: file
    params:
      domainId: integer
- name: upload_terms_of_service_html
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: file
    params:
      domainId: integer
- name: remove_terms_of_service_html
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: file
    params:
      domainId: integer
- name: team_webhook_api_key_assignments
  endpoint:
    path: /api/white-label/webhook/api/key/assignments
    method: GET
    data_selector: records
    params:
      teamId: required
- name: webhook_api_key_team_assignments
  endpoint:
    path: /api/white-label/webhook/api/key/team/assignments
    method: GET
    data_selector: records
    params:
      webhookApiKeyId: required
- name: update_advertiser_assignments
  endpoint:
    path: /api/white-label/advertiser/assignments
    method: PUT
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: update_alert_rule_assignments
  endpoint:
    path: /api/white-label/alert/rule/assignments
    method: PUT
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: update_campaign_assignments
  endpoint:
    path: /api/white-label/campaign/assignments
    method: PUT
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: update_content_group_assignments
  endpoint:
    path: /api/white-label/content/group/assignments
    method: PUT
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: update_datasource_assignments
  endpoint:
    path: /api/white-label/datasource/assignments
    method: PUT
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: update_device_assignments
  endpoint:
    path: /api/white-label/device/assignments
    method: PUT
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: update_device_content_assignments
  endpoint:
    path: /api/white-label/device/content/assignments
    method: PUT
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: update_device_group_assignments
  endpoint:
    path: /api/white-label/device/group/assignments
    method: PUT
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: update_device_install_rule_assignments
  endpoint:
    path: /api/white-label/device/install/rule/assignments
    method: PUT
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: update_file_assignments
  endpoint:
    path: /api/white-label/file/assignments
    method: PUT
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: update_file_folder_assignments
  endpoint:
    path: /api/white-label/file/folder/assignments
    method: PUT
    data_selector: records
    params:
      teamId: required
      customerId: optional
- name: playlists
  endpoint:
    path: /api/playlists
    method: GET
    data_selector: records
- name: contents
  endpoint:
    path: /api/contents
    method: GET
    data_selector: records
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: records
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: records
- name: slides
  endpoint:
    path: /api/slides
    method: GET
    data_selector: records
- name: user_roles
  endpoint:
    path: /api/user_roles
    method: GET
    data_selector: roles
    params: {}
- name: update_google_credential_assignments
  endpoint:
    path: /api/white-label/update-google-credential-assignments
    method: POST
    data_selector: resourcesToAdd
    params:
      teamId: required
      customerId: optional
- name: update_message_assignments
  endpoint:
    path: /api/white-label/update-message-assignments
    method: POST
    data_selector: resourcesToAdd
    params:
      teamId: required
      customerId: optional
- name: update_message_group_assignments
  endpoint:
    path: /api/white-label/update-message-group-assignments
    method: POST
    data_selector: resourcesToAdd
    params:
      teamId: required
      customerId: optional
- name: update_microsoft_tenant_assignments
  endpoint:
    path: /api/white-label/update-microsoft-tenant-assignments
    method: POST
    data_selector: resourcesToAdd
    params:
      teamId: required
      customerId: optional
- name: update_notification_channel_assignments
  endpoint:
    path: /api/white-label/update-notification-channel-assignments
    method: POST
    data_selector: resourcesToAdd
    params:
      teamId: required
      customerId: optional
- name: update_quick_filter_assignments
  endpoint:
    path: /api/white-label/update-quick-filter-assignments
    method: POST
    data_selector: resourcesToAdd
    params:
      teamId: required
      customerId: optional
- name: update_user_assignments
  endpoint:
    path: /api/white-label/update-user-assignments
    method: POST
    data_selector: resourcesToAdd
    params:
      teamId: required
      customerId: optional
- name: update_webhook_assignments
  endpoint:
    path: /api/white-label/update-webhook-assignments
    method: POST
    data_selector: resourcesToAdd
    params:
      teamId: required
      customerId: optional
- name: update_webhook_api_key_assignments
  endpoint:
    path: /api/white-label/update-webhook-api-key-assignments
    method: POST
    data_selector: resourcesToAdd
    params:
      teamId: required
      customerId: optional
- name: update_password
  endpoint:
    path: /api/white-label/update-password
    method: POST
    data_selector: oldPassword
    params:
      oldPassword: required
      newPassword: required
- name: update_pin_code
  endpoint:
    path: /api/white-label/update-pin-code
    method: POST
    data_selector: email
    params:
      email: required
      pinCode: optional
- name: accept_terms_of_service
  endpoint:
    path: /api/white-label/accept-terms-of-service
    method: POST
    data_selector: accepted
    params:
      accepted: required
- name: Update team assignment
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: Send feedback
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: Send content request
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: Create webhook api key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: Update webhook api key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: Delete webhook api key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: Delete own user account
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: Delete profile picture
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: Add profile picture
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: Get webhook api key data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: Get user csv data
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: Assign user interface profile
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params: {}
- name: webhook_api_key
  endpoint:
    path: /api/white-label/terms-of-service-html/{lang}
    method: DELETE
    data_selector: response
    params: {}
- name: delete_webhook_api_key
  endpoint:
    path: /delete/api/white-label/terms-of-service-html/{lang}
    method: DELETE
- name: upload_background
  endpoint:
    path: /upload/background/to/login/page
    method: POST
- name: remove_background
  endpoint:
    path: /remove/background/from/login/page
    method: DELETE
- name: upload_small_logo
  endpoint:
    path: /upload/small/logo/to/login/page
    method: POST
- name: remove_small_logo
  endpoint:
    path: /remove/small/logo/from/login/page
    method: DELETE
- name: upload_medium_logo
  endpoint:
    path: /upload/medium/logo/to/login/page
    method: POST
- name: remove_medium_logo
  endpoint:
    path: /remove/medium/logo/from/login/page
    method: DELETE
- name: upload_large_logo
  endpoint:
    path: /upload/large/logo/to/login/page
    method: POST
- name: remove_large_logo
  endpoint:
    path: /remove/large/logo/from/login/page
    method: DELETE
- name: upload_logo_to_login_form
  endpoint:
    path: /upload/logo/to/login/form
    method: POST
- name: remove_logo_from_login_form
  endpoint:
    path: /remove/logo/from/login/form
    method: DELETE
- name: upload_logo_to_horizontal_menu
  endpoint:
    path: /upload/logo/to/horizontal/menu
    method: POST
- name: remove_logo_from_horizontal_menu
  endpoint:
    path: /remove/logo/from/horizontal/menu
    method: DELETE
- name: upload_moving_logo
  endpoint:
    path: /upload-moving-logo
    method: POST
    data_selector: file
    params:
      domainId: integer
- name: remove_moving_logo
  endpoint:
    path: /remove-moving-logo
    method: DELETE
    data_selector: ''
    params:
      domainId: integer
- name: upload_icon_browser_tab
  endpoint:
    path: /upload-icon-browser-tab
    method: POST
    data_selector: file
    params:
      domainId: integer
- name: remove_icon_browser_tab
  endpoint:
    path: /remove-icon-browser-tab
    method: DELETE
    data_selector: ''
    params:
      domainId: integer
- name: upload_terms_of_service_html
  endpoint:
    path: /upload-terms-of-service-html/{lang}
    method: POST
    data_selector: file
    params:
      domainId: integer
- name: remove_terms_of_service_html
  endpoint:
    path: /remove-terms-of-service-html/{lang}
    method: DELETE
    data_selector: ''
    params:
      domainId: integer
- name: playlists
  endpoint:
    path: /api/playlists
    method: GET
    data_selector: playlists
    params: {}
- name: contents
  endpoint:
    path: /api/contents
    method: GET
    data_selector: contents
    params: {}
- name: channels
  endpoint:
    path: /api/channels
    method: GET
    data_selector: channels
    params: {}
- name: schedules
  endpoint:
    path: /api/schedules
    method: GET
    data_selector: schedules
    params: {}
- name: slides
  endpoint:
    path: /api/slides
    method: GET
    data_selector: slides
    params: {}
- name: Device Control
  endpoint:
    path: /api/device/control
    method: GET
    data_selector: functionality
    params: {}
- name: Display Control
  endpoint:
    path: /api/display/control
    method: GET
    data_selector: functionality
    params: {}
- name: Device Functions
  endpoint:
    path: /api/device/functions
    method: GET
    data_selector: functionality
    params: {}
- name: Sensoring and technologies
  endpoint:
    path: /api/sensoring
    method: GET
    data_selector: functionality
    params: {}
notes:
- The API only uses JSON format for data transfer objects.
- The update logic usually follows the 'if an attribute is null, it's ignored' logic.
- In the return value if an attribute is not present it means NULL (to lower the overall
  traffic).
- OAuth2 client credentials required for access
- Access token validity is 20 minutes
- 'Minimum role: TECHNICIAN with customer selector'
- 'Minimum role: TECHNICIAN required for most operations.'
- The update logic usually follows the 'if an attribute is null, it’s ignored' logic.
- 'Minimum role required for certain endpoints: OWNER for updating team assignment,
  TECHNICIAN for create and get operations, VIEWER for getting proof of play links.'
- Minimum role for update and delete operations is TECHNICIAN.
- 'Minimum role: TECHNICIAN with customer selector.'
- 'Minimum role: VIEWER with customer selector for getting total size of files.'
- 'Minimum role: TECHNICIAN for updating, deleting, and creating webhook API key data.'
- 'Minimum role: EDITOR with customer selector for creating filtered folder and adding
  synced folders.'
- 'Minimum roles vary by endpoint: EDITOR for duplication, APPROVER for lock/unlock,
  TECHNICIAN for create and update.'
- 'Minimum role: `TECHNICIAN` with customer selector'
- Minimum roles required for each endpoint vary.
- Minimum role required for access is TECHNICIAN
- Uses OAuth2 with refresh token — requires setup of connected app in Wallboard
- Use Playlists for simple and flexible content loops.
- Use Content for structured layouts and embedded Playlists.
- Use Channels for advanced balancing and permissioning.
- Use Schedules for high-priority content overrides.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Roles in the 2.0 UI and the legacy 1.12 UI are not interchangeable.
- If a role is assigned in the 1.12 interface, it will take effect.
- The most recently assigned role—regardless of which interface was used—will override
  the previous one and be applied system-wide.
- Make sure the device is connected to the internet
- Check if the device has the latest application version that your server provides
- Uses advanced scheduling capabilities for content management.
- Some contents may require additional setup for complex playback logic.
errors:
- '401 Unauthorized: Check client credentials or token expiration'
- '403 Forbidden: Insufficient permissions for the requested operation'
- '401 Unauthorized: Ensure proper permissions and role.'
- '401 Unauthorized: Ensure proper role and valid credentials.'
- '200: Successful response'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'INVALID_REQUEST: Ensure all required parameters are provided.'
- 'CONTENT_NOT_FOUND: Verify the content ID or path specified.'
auth_info:
  mentioned_objects:
  - access_token
  - refresh_token
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: '{{server_root}}/api/white-label'
  headers:
    Content-Type: multipart/form-data
source_metadata: null
