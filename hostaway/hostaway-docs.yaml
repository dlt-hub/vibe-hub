resources:
- name: access_tokens
  endpoint:
    path: /v1/accessTokens
    method: POST
    data_selector: null
    params:
      grant_type: client_credentials
      scope: general
- name: revoke_access_token
  endpoint:
    path: /v1/accessTokens
    method: DELETE
    data_selector: null
    params:
      token: token
- name: listing
  endpoint:
    path: /listings
    method: GET
    data_selector: records
- name: expense
  endpoint:
    path: /create-expensesextras
    method: POST
    data_selector: records
    params: {}
- name: user
  endpoint:
    path: /get-user-by-ID
    method: GET
    data_selector: records
    params:
      includeResources: '1'
- name: listings
  endpoint:
    path: /v1/listings
    method: GET
    data_selector: response
    params: {}
- name: listing_by_id
  endpoint:
    path: /v1/listings/{listingId}
    method: GET
    data_selector: response
    params: {}
- name: listings
  endpoint:
    path: /listings
    method: POST
    data_selector: response
    params: {}
- name: listings
  endpoint:
    path: /v1/listings/40214
    method: PUT
    data_selector: response
    params: {}
- name: listings
  endpoint:
    path: /v1/listings/40214
    method: PUT
    data_selector: data
    params: {}
- name: listings
  endpoint:
    path: /v1/listings/{listingId}
    method: PUT
    data_selector: listing
    params: {}
- name: listings
  endpoint:
    path: /v1/listings
    method: POST
    data_selector: data
- name: listingAgreement
  endpoint:
    path: /v1/listingAgreement/{listingId}
    method: GET
- name: duplicateListingAgreement
  endpoint:
    path: /v1/listingAgreement/duplicate
    method: POST
    data_selector: records
- name: listings
  endpoint:
    path: /v1/listings/{listingId}
    method: DELETE
- name: export_airbnb
  endpoint:
    path: /v1/listings/{listingId}/export/airbnb
    method: POST
- name: listingFeeSettings
  endpoint:
    path: /v1/listingFeeSettings/{listingId}
    method: GET
- name: listingFeeSettings
  endpoint:
    path: /v1/listingFeeSettings/{listingId}
    method: POST
    data_selector: payload
- name: listingFeeSettings
  endpoint:
    path: /v1/listingFeeSettings/{listingId}
    method: PUT
    data_selector: payload
- name: listingFeeSettings
  endpoint:
    path: /v1/listingFeeSettings/{id}
    method: DELETE
- name: cancellation_policies
  endpoint:
    path: /v1/cancellationPolicies
    method: GET
    data_selector: records
- name: listing_units
  endpoint:
    path: /v1/listingUnits/{listingMapId}
    method: GET
    data_selector: records
- name: pricingSettings
  endpoint:
    path: /v1/listing/pricingSettings/{listingId}
    method: GET
    data_selector: ''
- name: updatePricingSettings
  endpoint:
    path: /v1/listing/pricingSettings/{listingId}
    method: PUT
    data_selector: ''
- name: cancellationPolicies_airbnb
  endpoint:
    path: /v1/cancellationPolicies/airbnb
    method: GET
- name: cancellationPolicies_booking
  endpoint:
    path: /v1/cancellationPolicies/booking
    method: GET
- name: cancellation_policy
  endpoint:
    path: /v1/cancellationPolicies
    method: POST
    data_selector: ''
- name: cancellation_policy_marriott
  endpoint:
    path: /v1/cancellationPolicies/marriott
    method: GET
- name: cancellation_policy_vrbo
  endpoint:
    path: /v1/cancellationPolicies/vrbo
    method: GET
- name: cancellation_policy
  endpoint:
    path: /v1/cancellationPolicies/11
    method: GET
- name: cancellation_policy
  endpoint:
    path: /v1/cancellationPolicies/4015
    method: PUT
    data_selector: null
    params: {}
- name: reservations
  endpoint:
    path: /reservations
    method: GET
    data_selector: reservations
- name: cancellation_policy
  endpoint:
    path: /v1/cancellationPolicies/4010
    method: DELETE
- name: reservations
  endpoint:
    path: /v1/reservations
    method: GET
    data_selector: response
    params: {}
- name: reservations
  endpoint:
    path: /v1/reservations/{reservationId}
    method: GET
    data_selector: response
- name: reservations
  endpoint:
    path: /reservations
    method: POST
- name: reservations
  endpoint:
    path: /v1/reservations
    method: POST
    data_selector: reservation
    params:
      forceOverbooking: '1'
- name: reservations
  endpoint:
    path: /v1/reservations
    method: POST
    data_selector: response
    params:
      validatePaymentMethod: '1'
- name: reservations
  endpoint:
    path: /v1/reservations
    method: POST
    data_selector: reservations
    params:
      forceOverbooking: '1'
- name: reservations
  endpoint:
    path: /v1/reservations
    method: POST
    data_selector: ''
    params:
      forceOverbooking: 1
- name: reservations
  endpoint:
    path: /v1/reservations
    method: POST
    params:
      validatePaymentMethod: '1'
- name: reservations
  endpoint:
    path: /v1/reservations/117277
    method: PUT
    data_selector: response
    params:
      forceOverbooking: '1'
- name: reservations
  endpoint:
    path: /v1/reservations/{reservationId}
    method: PUT
    data_selector: payload
    params:
      forceOverbooking: '1'
- name: reservations
  endpoint:
    path: /v1/reservations/{reservationId}/statuses/cancelled
    method: PUT
    data_selector: updated reservation object or error response
    params: {}
- name: price_details
  endpoint:
    path: /v1/listings/{listingId}/calendar/priceDetails
    method: POST
    data_selector: result.components
    params:
      startingDate: '2020-12-01'
      endingDate: '2020-12-31'
      numberOfGuests: '1'
      version: 2
- name: reservations
  endpoint:
    path: /v1/reservations/{reservationId}
    method: DELETE
- name: priceDetails
  endpoint:
    path: /v1/listings/{listingId}/calendar/priceDetails
    method: POST
    data_selector: payload
- name: reservations
  endpoint:
    path: /v1/reservations/{id}
    method: PUT
    data_selector: null
    params: {}
- name: price_details
  endpoint:
    path: /v1/listings/{listingId}/calendar/priceDetails
    method: POST
    data_selector: result.components
    params:
      startingDate: '2020-12-01'
      endingDate: '2020-12-31'
      numberOfGuests: '1'
      version: 2
- name: financeField
  endpoint:
    path: /v1/financeField/{reservationId}
    method: GET
    data_selector: response
- name: financeFieldUpdate
  endpoint:
    path: /v1/financeField/{reservationId}/{financeFieldId}
    method: PUT
    data_selector: response
- name: paymentCard
  endpoint:
    path: /v1/paymentCards/{reservationId}
    method: POST
    data_selector: response
    params: {}
- name: payment_methods
  endpoint:
    path: /v1/reservations/paymentMethods
    method: GET
- name: rental_agreement
  endpoint:
    path: /v1/reservations/{reservationId}/rentalAgreement
    method: GET
- name: add_payment_method
  endpoint:
    path: /v1/paymentCards/154242/addPaymentMethodId
    method: POST
    data_selector: null
    params: {}
- name: set_default_payment_method
  endpoint:
    path: /v1/paymentCards/154242/defaultPaymentMethod/622
    method: PUT
    data_selector: null
    params: {}
- name: message_template
  endpoint:
    path: /v1/reservations/{reservationId}/messageTemplates
    method: GET
- name: message_template_detail
  endpoint:
    path: /v1/reservations/{reservationId}/messageTemplates/{messageTemplateId}
    method: GET
- name: calendar
  endpoint:
    path: /v1/listings/40160/calendar
    method: GET
    params:
      startDate: '2018-09-01'
      endDate: '2018-09-30'
      includeResources: 1
- name: calendar_intervals
  endpoint:
    path: /v1/listings/{listingId}/calendarIntervals
    method: PUT
    data_selector: ''
    params: {}
- name: calendar
  endpoint:
    path: /v1/listings/{listingId}/calendar
    method: PUT
    data_selector: null
    params:
      startDate: '2017-09-01'
      endDate: '2017-09-05'
      isAvailable: 1
      isProcessed: 1
      price: 20
      minimumStay: 1
      maximumStay: 1125
      closedOnArrival: null
      closedOnDeparture: null
      note: test
- name: calendar
  endpoint:
    path: /v1/listings/40160/calendar
    method: PUT
    data_selector: calendar
- name: conversations
  endpoint:
    path: /v1/conversations
    method: GET
    data_selector: conversationMessages
    params:
      reservationId: ''
      limit: ''
      offset: ''
      includeResources: ''
- name: conversation
  endpoint:
    path: /v1/reservations/{reservationId}/conversations
    method: GET
    params: {}
- name: conversation_detail
  endpoint:
    path: /v1/conversations/{conversationId}
    method: GET
    params:
      includeResources: '0'
- name: conversation_messages
  endpoint:
    path: /v1/conversations/{conversationId}/messages
    method: GET
    data_selector: responses
    params:
      includeScheduledMessages: '1'
- name: conversation_message
  endpoint:
    path: /v1/conversations/{conversationId}/messages/{conversationMessageId}
    method: GET
    data_selector: response
- name: conversation_message
  endpoint:
    path: /v1/conversations/{conversationId}/messages
    method: POST
    data_selector: body
- name: messageTemplates
  endpoint:
    path: /v1/messageTemplates
    method: GET
    data_selector: records
    params: {}
- name: messageTemplateById
  endpoint:
    path: /v1/messageTemplates/{messageTemplateId}
    method: GET
    data_selector: records
    params: {}
- name: amenities
  endpoint:
    path: /v1/amenities
    method: GET
- name: bedTypes
  endpoint:
    path: /v1/bedTypes
    method: GET
- name: property_types
  endpoint:
    path: /v1/propertyTypes
    method: GET
    data_selector: records
- name: reservation_webhook_logs
  endpoint:
    path: /v1/reservationWebhooklogs
    method: GET
    data_selector: Array of reservation webhook logs objects
    params: {}
- name: conversationMessageWebhooklogs
  endpoint:
    path: /v1/conversationMessageWebhooklogs
    method: GET
    data_selector: Array of conversation message webhook logs objects.
    params: {}
- name: unifiedWebhookLogs
  endpoint:
    path: /v1/unifiedWebhookLogs
    method: GET
    data_selector: Array of unified webhook logs objects
    params: {}
- name: custom_fields
  endpoint:
    path: /v1/reservations/customFields
    method: GET
    data_selector: Array of custom field objects
- name: countries
  endpoint:
    path: /v1/countries
    method: GET
- name: currencies
  endpoint:
    path: /v1/currencies
    method: GET
- name: languages
  endpoint:
    path: /v1/languages
    method: GET
- name: timezones
  endpoint:
    path: /v1/timezones
    method: GET
- name: stripe_publishableKey
  endpoint:
    path: /v1/stripe/publishableKey
    method: GET
- name: stripe_publishableKey_with_id
  endpoint:
    path: /v1/stripe/publishableKey/{listingMapId}
    method: GET
- name: createSetupIntent
  endpoint:
    path: /v1/stripe/createSetupIntent
    method: POST
- name: createSetupIntent_with_id
  endpoint:
    path: /v1/stripe/createSetupIntent/{listingMapId}
    method: POST
- name: financeStandardField
  endpoint:
    path: /v1/financeStandardField/reservation/{reservationId}
    method: GET
- name: financeCalculatedField
  endpoint:
    path: /v1/financeCalculatedField/reservation/{reservationId}
    method: GET
- name: financeCustomFormula
  endpoint:
    path: /v1/financeCustomFormula
    method: GET
- name: financeReportStandard
  endpoint:
    path: /v1/finance/report/standard
    method: POST
    params:
      listingMapIds[0]: 123
      fromDate: '2019-01-30'
      toDate: '2019-02-25'
      dateType: arrivalDate
      channelIds[0]: 2007
      statuses[0]: new
      format: csv
      sortBy: arrivalDate
      sortOrder: asc
      delimiter: tab
- name: listingFinancials
  endpoint:
    path: /v1/finance/report/listingFinancials
    method: POST
    data_selector: response
    params: {}
- name: accountTaxSettings
  endpoint:
    path: /v1/accountTaxSettings
    method: GET
    data_selector: response
    params: {}
- name: listingTaxSettings
  endpoint:
    path: /v1/listingTaxSettings/{listingId}
    method: GET
    data_selector: response
    params: {}
- name: ownerStatements
  endpoint:
    path: /v1/ownerStatements
    method: GET
    data_selector: response
    params: {}
- name: finance_report_consolidated
  endpoint:
    path: /finance/report/consolidated
    method: POST
    data_selector: null
    params:
      listingMapIds[]: '123'
      fromDate: '2019-01-30'
      toDate: '2019-02-25'
      dateType: arrivalDate
      channelIds[]: '2007'
      statuses[]: new
      format: csv
      sortBy: arrivalDate
      sortOrder: asc
      delimiter: tab
- name: finance_report_calculated
  endpoint:
    path: /finance/report/calculated
    method: POST
    data_selector: null
    params:
      listingMapIds[]: '123'
      fromDate: '2019-01-30'
      toDate: '2019-02-25'
      dateType: arrivalDate
      channelIds[]: '2007'
      statuses[]: new
      format: csv
      sortBy: arrivalDate
      sortOrder: asc
      delimiter: tab
- name: expenses
  endpoint:
    path: /v1/expenses
    method: GET
- name: ownerStatement
  endpoint:
    path: /v1/ownerStatement/{ownerStatementId}
    method: GET
- name: expense_by_id
  endpoint:
    path: /v1/expenses/{id}
    method: GET
- name: customFields
  endpoint:
    path: /v1/customFields
    method: GET
    data_selector: records
    params:
      limit: 100
      offset: 0
      objectType: null
- name: expenses
  endpoint:
    path: /v1/expenses
    method: GET
    data_selector: records
    params: {}
- name: expenses
  endpoint:
    path: /v1/expenses
    method: POST
    data_selector: ''
    params: {}
- name: delete_expense
  endpoint:
    path: /v1/expenses/1
    method: DELETE
    data_selector: ''
    params: {}
- name: update_expense
  endpoint:
    path: /v1/expenses/1
    method: PUT
    data_selector: ''
    params: {}
- name: reviews
  endpoint:
    path: /v1/reviews
    method: GET
- name: review
  endpoint:
    path: /v1/reviews/{reviewId}
    method: GET
- name: users
  endpoint:
    path: /users
    method: GET
- name: user
  endpoint:
    path: /user/{userId}
    method: GET
    params:
      includeResources: '0'
- name: guestPaymentsCharges
  endpoint:
    path: /v1/guestPayments/charges/{reservationId:\d+}
    method: POST
    data_selector: charge
    params: {}
- name: guestPaymentsAutoPayment
  endpoint:
    path: /v1/guestPayments/autoPayment
    method: GET
    data_selector: autoPayment
    params: {}
- name: guest_payments_charges
  endpoint:
    path: /v1/guestPayments/charges
    method: GET
    data_selector: ''
    params:
      reservationId: '175239893'
- name: guest_payments_charge_id
  endpoint:
    path: /v1/guestPayments/charges/{guestChargeId}
    method: GET
    data_selector: ''
    params: {}
- name: userGroups
  endpoint:
    path: /v1/userGroups
    method: GET
- name: coupons
  endpoint:
    path: /v1/coupons
    method: GET
    data_selector: ''
    params: {}
- name: reservationCoupons
  endpoint:
    path: /v1/reservationCoupons
    method: GET
    data_selector: ''
    params: {}
- name: create_reservationCoupon
  endpoint:
    path: /v1/reservationCoupons
    method: POST
    data_selector: ''
    params: {}
- name: reservations
  endpoint:
    path: /v1/webhooks/reservations
    method: POST
    data_selector: null
    params: {}
- name: reservations
  endpoint:
    path: /v1/webhooks/reservations
    method: GET
    data_selector: null
    params: {}
- name: reservation_detail
  endpoint:
    path: /v1/webhooks/reservations/{webhookId}
    method: GET
    data_selector: null
    params: {}
- name: reservation_webhook
  endpoint:
    path: /v1/webhooks/reservations/1
    method: PUT
- name: conversation_message
  endpoint:
    path: /v1/webhooks/conversationMessages/{webhookId}
    method: GET
    data_selector: ''
- name: conversationMessages
  endpoint:
    path: /v1/webhooks/conversationMessages
    method: POST
    data_selector: null
    params: {}
- name: webhook_reservations
  endpoint:
    path: /v1/webhooks/reservations/{webhookId}
    method: DELETE
    data_selector: null
    params: {}
- name: conversation_messages
  endpoint:
    path: /v1/webhooks/conversationMessages
    method: GET
    data_selector: null
    params:
      limit: null
      offset: null
- name: conversation_message
  endpoint:
    path: /v1/webhooks/conversationMessages/{webhookId}
    method: PUT
    data_selector: response
    params: {}
- name: webhook
  endpoint:
    path: /v1/webhooks/conversationMessages/{webhookId}
    method: DELETE
- name: unified_webhooks
  endpoint:
    path: /v1/webhooks/unifiedWebhooks
    method: GET
    data_selector: ''
- name: unified_webhooks
  endpoint:
    path: /v1/webhooks/unifiedWebhooks/1
    method: GET
- name: unified_webhook
  endpoint:
    path: /v1/webhooks/unifiedWebhooks/1
    method: PUT
    data_selector: null
    params: {}
- name: unified_webhooks
  endpoint:
    path: /v1/webhooks/unifiedWebhooks/{webhookId}
    method: DELETE
- name: unified_webhook
  endpoint:
    path: /v1/webhooks/unifiedWebhooks
    method: POST
    data_selector: null
    params: {}
- name: tasks
  endpoint:
    path: /v1/tasks
    method: GET
    data_selector: records
    params: {}
- name: seasonal_rules
  endpoint:
    path: /v1/seasonalRules
    method: GET
    data_selector: records
    params: {}
- name: seasonal_rules_intervals
  endpoint:
    path: /v1/seasonalRules/intervals
    method: GET
    data_selector: records
    params:
      listingMapId: required
      startDate: required
      endDate: required
      channelId: optional
- name: tasks
  endpoint:
    path: /v1/tasks/{taskId}
    method: DELETE
- name: tasks
  endpoint:
    path: /v1/tasks/{taskId}
    method: GET
- name: tasks_create
  endpoint:
    path: /v1/tasks
    method: POST
    data_selector: title
    params: {}
- name: tasks_update
  endpoint:
    path: /v1/tasks/{taskId}
    method: PUT
    data_selector: title
    params: {}
notes:
- Access token expires in 24 months.
- Use query parameter includeResources=1 to get attached objects.
- Uses OAuth2 with access token that expires in 24 months.
- We use Client Credentials Grant of OAuth 2.0 protocol for API authentication.
- Some fields are required to change listing status to 'complete'. Only 'complete'
  listings can be activated for synchronization.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Authorization token is required in the header.
- Requires Bearer token for authorization.
- Authorization requires a Bearer token
- Reservation statuses include new, modified, cancelled, ownerStay, pending, awaitingPayment,
  declined, expired.
- A reservation object should be provided in the request body.
- To calculate correct total price, including coupon discounts call calculate reservation
  price with all necessary query params.
- Requires setup of connected app in api
- Authorization token should be included in the header.
- It’s not possible to update the listingMapId of a reservation with this request.
- cancelledBy JSON body parameter should be specified with value host or guest
- Uses OAuth2 with Bearer token for authentication
- Authorization token must be included in the header.
- Number of intervals to send in one request can’t be more than 200.
- A conversation message object should be provided in the request body. We do not
  support sending attachments in the message.
- Uses OAuth2 with Bearer token.
- Authorization requires Bearer token.
- Limit and offset query parameters are available for pagination.
- A conversation message webhook object should be provided in the request body.
- A unified webhook object should be provided in the request body.
errors:
- '429: This error occurs because a server detects that your application has exceeded
  the rate limits or has made too many requests in a given period of time.'
- '403: Access denied, likely due to expired token.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'Authorization Error: Check the provided token.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Check if the token is valid'
- '401 Unauthorized: Recheck OAuth token.'
- 'cURL Error #:'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://api.hostaway.com
  auth:
    type: oauth2
  paginator:
    type: offset
source_metadata: null
