resources:
- name: render
  endpoint:
    path: /v1/render
    method: POST
    data_selector: response
    params: {}
- name: render
  endpoint:
    path: /render
    method: POST
    data_selector: null
    params: {}
- name: render_video
  endpoint:
    path: /stage/render
    method: POST
    data_selector: response.id
- name: get_render_status
  endpoint:
    path: /stage/render/{RESPONSE_ID}
    method: GET
    data_selector: response.url
- name: render
  endpoint:
    path: /render
    method: POST
    data_selector: output
    params: {}
- name: render
  endpoint:
    path: /render
    method: POST
- name: render_video
  endpoint:
    path: /render
    method: POST
    data_selector: timeline.tracks
    params: {}
- name: render_video
  endpoint:
    path: /v1/render
    method: POST
    data_selector: null
    params: {}
- name: render_video
  endpoint:
    path: /v1/render
    method: POST
    data_selector: null
    params: {}
- name: render
  endpoint:
    path: /render
    method: POST
    data_selector: timeline
- name: render
  endpoint:
    path: /render
    method: POST
    data_selector: timeline
    params: {}
- name: render
  endpoint:
    path: /v1/render
    method: POST
    data_selector: response
    params: {}
- name: render_video
  endpoint:
    path: /render
    method: POST
- name: ImageAsset
  endpoint:
    path: /ImageAsset
    method: POST
    data_selector: src
    params: {}
- name: TextAsset
  endpoint:
    path: /TextAsset
    method: POST
    data_selector: text
    params: {}
- name: ImageAsset
  endpoint:
    path: /imageAsset
    method: POST
    data_selector: asset
    params: {}
- name: TextAsset
  endpoint:
    path: /textAsset
    method: POST
    data_selector: asset
    params: {}
- name: ImageAsset
  endpoint:
    path: /image/asset
    method: POST
    data_selector: image
- name: TextAsset
  endpoint:
    path: /text/asset
    method: POST
    data_selector: text
- name: AudioAsset
  endpoint:
    path: /audio/asset
    method: POST
    data_selector: audio
- name: GeneratedAssetErrorResponseData
  endpoint:
    path: /error/response
    method: POST
    data_selector: error
- name: GeneratedAssetErrorResponseData
  endpoint:
    path: /generated-asset-error-response
    method: POST
    data_selector: error
    params: {}
- name: render
  endpoint:
    path: /render
    method: POST
    data_selector: response
    params: {}
- name: ImageAsset
  endpoint:
    path: /imageAsset
    method: POST
    data_selector: asset
    params: {}
- name: render
  endpoint:
    path: /render
    method: POST
    data_selector: response
    params: {}
- name: render_status
  endpoint:
    path: /render/{id}
    method: GET
    data_selector: response
    params: {}
- name: templates
  endpoint:
    path: /templates
    method: GET
    data_selector: response
    params: {}
- name: template
  endpoint:
    path: /templates/{id}
    method: GET
    data_selector: response
    params: {}
- name: ImageAsset
  endpoint:
    path: /imageasset
    method: POST
    data_selector: image
    params: {}
- name: TextAsset
  endpoint:
    path: /textasset
    method: POST
    data_selector: text
    params: {}
- name: render
  endpoint:
    path: /render
    method: POST
    data_selector: response
    params: {}
- name: get_render_status
  endpoint:
    path: /render/{id}
    method: GET
    data_selector: response
    params: {}
- name: create_template
  endpoint:
    path: /templates
    method: POST
    data_selector: response
    params: {}
- name: list_templates
  endpoint:
    path: /templates
    method: GET
    data_selector: response
    params: {}
- name: retrieve_template
  endpoint:
    path: /templates/{id}
    method: GET
    data_selector: response
    params: {}
- name: update_template
  endpoint:
    path: /templates/{id}
    method: PUT
    data_selector: response
    params: {}
- name: asset
  endpoint:
    path: /assets/{id}
    method: GET
    data_selector: data
    params:
      id: path
- name: image_asset
  endpoint:
    path: /image_asset
    method: POST
    data_selector: data
- name: text_asset
  endpoint:
    path: /text_asset
    method: POST
    data_selector: data
- name: render
  endpoint:
    path: /render
    method: POST
    data_selector: response
    params: {}
- name: get_asset
  endpoint:
    path: /assets/{id}
    method: GET
    data_selector: data
    params: {}
- name: delete_asset
  endpoint:
    path: /assets/{id}
    method: DELETE
    data_selector: null
    params: {}
- name: get_asset_by_render_id
  endpoint:
    path: /assets/render/{id}
    method: GET
    data_selector: data
    params: {}
- name: sources
  endpoint:
    path: /ingest/{version}/sources
    method: POST
    data_selector: data
    params: {}
- name: get_source
  endpoint:
    path: /ingest/{version}/sources/{id}
    method: GET
    data_selector: data
    params: {}
- name: text-to-speech
  endpoint:
    path: /text-to-speech
    method: POST
    data_selector: data
    params: {}
- name: text-to-avatar
  endpoint:
    path: /text-to-avatar
    method: POST
    data_selector: data
    params: {}
- name: text-generator
  endpoint:
    path: /text-generator
    method: POST
    data_selector: data
    params: {}
- name: text-to-image
  endpoint:
    path: /text-to-image
    method: POST
    data_selector: data
    params: {}
- name: render
  endpoint:
    path: /v1/render
    method: POST
    data_selector: response
    params: {}
- name: render
  endpoint:
    path: /v1/render
    method: POST
    data_selector: timeline
    params: {}
- name: render
  endpoint:
    path: /stage/render
    method: POST
    data_selector: response.id
- name: probe
  endpoint:
    path: /v1/probe
    method: GET
    data_selector: response
- name: render
  endpoint:
    path: /v1/render
    method: POST
    data_selector: null
    params: {}
- name: render
  endpoint:
    path: /v1/render
    method: POST
    data_selector: response
    params: {}
- name: status
  endpoint:
    path: /stage/render/<id>
    method: GET
    data_selector: status
    params: {}
- name: render
  endpoint:
    path: /v1/render
    method: POST
    data_selector: output
    params: {}
- name: render
  endpoint:
    path: /v1/render
    method: POST
    data_selector: output
    params: {}
- name: render_video
  endpoint:
    path: /render
    method: POST
    data_selector: timeline
    params: {}
- name: render
  endpoint:
    path: /v1/render
    method: POST
    data_selector: null
    params: {}
notes:
- Requires a developer key for access.
- Ensure to check the status of the render after posting.
- Requires registration for an API key and access to the free to use, developer sandbox.
- This demo is provided as open source code so you can use it as is, adapt it to your
  own needs or use it as the basis to build a fully automated video watermark application.
- Positioning elements using JSON can still take a lot of trial and error.
- Shotstack provides a positioning tool to help calculate the correct offsets.
- The HTML asset supports basic features of CSS for text styling.
- Set the stage to v1 for production usage without watermarks.
- Set to stage to use the development sandbox.
- API keys are required for all requests.
- All files must be downloaded within 24 hours of rendering.
- Use 'v1' for production usage without watermarks. Use 'stage' for the development
  sandbox.
- Each API uses the same set of API keys.
- All ingested files are available directly from an S3 bucket URL or via CDN (Serve
  API).
- Rendering an image typically takes one to two seconds and multiple images can be
  created concurrently.
- The Shotstack API was very intuitive and easy to implement.
- The documentation was comprehensive and complete.
- The free account gives you 20 minutes render time per month, plus a developer sandbox.
- This demo integrates with the Pexels API to search their video library.
- Shotstack's HTML engine is limited to simple text styling, tables and basic layouts
  only.
- Shotstack does not use a browser to render HTML so there is no support for @font-face
  configuration. The actual font TTF file must be specified in the edit JSON.
- Shotstack only supports a subset of HTML and CSS and is based on HTML4/CSS2.
errors:
- '400 Bad Request: Check the JSON format and required fields.'
- '401 Unauthorized: Recheck API key validity.'
- '404 Not Found: Ensure the endpoint is correctly specified.'
- '400 Bad Request: "body/options/text" is required.'
- '401 Unauthorized: Check your API key.'
- '404 Not Found: The requested resource does not exist.'
- '401 Unauthorized: Recheck API key or access rights.'
- '404 Not Found: Verify that the asset or render ID is correct.'
- '400 Bad Request: A list of validation and other errors.'
- status: 400
  title: Bad Request
  detail: '"body/options/text" is required.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.shotstack.io
  auth:
    type: apikey
    header_name: x-api-key
    location: header
  headers:
    Content-Type: application/json
    Accept: application/json
    x-api-key: YOUR_API_KEY
source_metadata: null
