resources:
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: stores
  endpoint:
    path: /api/stores
    method: GET
- name: customers
  endpoint:
    path: /api/customers
    method: GET
- name: products
  endpoint:
    path: /api/products
    method: GET
- name: variants
  endpoint:
    path: /api/variants
    method: GET
- name: prices
  endpoint:
    path: /api/prices
    method: GET
- name: orders
  endpoint:
    path: /api/orders
    method: GET
- name: order_items
  endpoint:
    path: /api/order-items
    method: GET
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
- name: discounts
  endpoint:
    path: /api/discounts
    method: GET
- name: checkouts
  endpoint:
    path: /v1/checkouts
    method: POST
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /api/orders
    method: GET
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
    data_selector: data.attributes.urls.customer_portal
    params: {}
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: data.attributes.urls.customer_portal
    params: {}
- name: webhook
  endpoint:
    path: /v1/webhooks
    method: POST
- name: subscriptions
  endpoint:
    path: /v1/subscriptions
    method: PATCH
    data_selector: data
    params: {}
- name: cancel_subscription
  endpoint:
    path: /v1/subscriptions/cancel-subscription
    method: DELETE
    data_selector: data
    params: {}
- name: list_variants
  endpoint:
    path: /api/variants
    method: GET
    data_selector: data
    params: {}
- name: checkouts
  endpoint:
    path: /v1/checkouts
    method: POST
    data_selector: data
    params: {}
- name: subscription-items
  endpoint:
    path: /v1/subscription-items
    method: GET
    data_selector: data
    params: {}
- name: usage-records
  endpoint:
    path: /v1/usage-records
    method: POST
    data_selector: data
    params: {}
- name: checkout
  endpoint:
    path: /checkout
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /subscription
    method: GET
    data_selector: data
    params: {}
- name: plans
  endpoint:
    path: /listProducts
    method: GET
    data_selector: data.included
    params:
      filter:
        storeId: process.env.LEMONSQUEEZY_STORE_ID
      include:
      - variants
- name: webhook
  endpoint:
    path: /api/webhook
    method: POST
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: update_payment_method
  endpoint:
    path: /update_payment_method
    method: GET
    data_selector: data
    params: {}
- name: customer_portal
  endpoint:
    path: /customer_portal
    method: GET
    data_selector: data
    params: {}
- name: usage_record
  endpoint:
    path: /v1/usage-records
    method: POST
    data_selector: data
    params: {}
- name: checkouts
  endpoint:
    path: /v1/checkouts
    method: POST
    data_selector: data
    params:
      preview: true
- name: products
  endpoint:
    path: /api/v1/products
    method: GET
    data_selector: data
- name: orders
  endpoint:
    path: /api/v1/orders
    method: GET
    data_selector: data
- name: activate_license_key
  endpoint:
    path: /v1/licenses/activate
    method: POST
    data_selector: license_key
    params: {}
- name: validate_license_key
  endpoint:
    path: /v1/licenses/validate
    method: POST
    data_selector: license_key
    params: {}
- name: deactivate_license_key
  endpoint:
    path: /v1/licenses/deactivate
    method: POST
    data_selector: license_key
    params: {}
- name: products
  endpoint:
    path: /v1/products
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: included
    params: {}
- name: subscription-invoices
  endpoint:
    path: /subscription-invoices
    method: GET
    data_selector: included
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: data
    params: {}
- name: variants
  endpoint:
    path: /variants
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /v1/subscriptions/{subscription_id}
    method: PATCH
    data_selector: data.attributes
    params: {}
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: products
- name: create_checkout
  endpoint:
    path: /api/create-checkout
    method: POST
    data_selector: checkoutUrl
- name: users
  endpoint:
    path: /api/users
    method: GET
- name: stores
  endpoint:
    path: /api/stores
    method: GET
- name: customers
  endpoint:
    path: /api/customers
    method: GET
- name: products
  endpoint:
    path: /api/products
    method: GET
- name: orders
  endpoint:
    path: /api/orders
    method: GET
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: products
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: customers
- name: license_keys
  endpoint:
    path: /api/license_keys
    method: GET
    data_selector: license_keys
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: data
- name: prices
  endpoint:
    path: /prices
    method: GET
    data_selector: data
- name: customers
  endpoint:
    path: /customers
    method: GET
    data_selector: data
- name: payment_methods
  endpoint:
    path: /payment_methods
    method: GET
    data_selector: data
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: coupons
  endpoint:
    path: /coupons
    method: GET
    data_selector: data
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: data
    params: {}
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: coupons
  endpoint:
    path: /api/coupons
    method: GET
    data_selector: data
    params: {}
- name: license_keys
  endpoint:
    path: /api/license-keys
    method: GET
    data_selector: data
    params: {}
- name: W-9 form
  endpoint:
    path: /help/tax-forms/w-9-form
    method: GET
    data_selector: form
    params: {}
- name: W-8 forms
  endpoint:
    path: /help/tax-forms/w-8-forms
    method: GET
    data_selector: form
    params: {}
- name: W9 Form Submission
  endpoint:
    path: /help/tax-forms/w-9-form
    method: GET
    data_selector: form_details
- name: W-8BEN
  endpoint:
    path: /help/tax-forms/w-8-forms
    method: GET
    data_selector: forms
    params: {}
- name: W-8BEN-E
  endpoint:
    path: /help/tax-forms/w-8-forms
    method: GET
    data_selector: forms
    params: {}
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: products
    params: {}
- name: usage_records
  endpoint:
    path: /api/usage-records
    method: POST
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: orders
  endpoint:
    path: /api/orders
    method: GET
- name: refund_order
  endpoint:
    path: /orders/refund
    method: POST
- name: resend_receipt
  endpoint:
    path: /orders/resend-receipt
    method: POST
- name: generate_invoice
  endpoint:
    path: /orders/generate-invoice
    method: POST
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params: {}
- name: discount
  endpoint:
    path: /api/discounts
    method: POST
    data_selector: discounts
    params: {}
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
    data_selector: subscriptions
    params: {}
- name: checkout
  endpoint:
    path: /api/checkouts/create-checkout
    method: POST
    data_selector: checkout
    params:
      quantity: N
- name: checkouts
  endpoint:
    path: /checkouts
    method: POST
    data_selector: data
    params: {}
- name: checkouts
  endpoint:
    path: /v1/checkouts
    method: POST
    data_selector: data.attributes.checkout_data
    params: {}
- name: Teams
  endpoint:
    path: /settings/team
    method: GET
- name: my_orders
  endpoint:
    path: /my-orders
    method: GET
    data_selector: orders
- name: refunds
  endpoint:
    path: /payments/refunds
    method: GET
    data_selector: refunds
    params: {}
- name: chargebacks
  endpoint:
    path: /payments/chargebacks
    method: GET
    data_selector: chargebacks
    params: {}
- name: affiliates
  endpoint:
    path: /affiliates
    method: GET
- name: affiliates
  endpoint:
    path: /settings/affiliates
    method: GET
    data_selector: pending_affiliates
- name: referrals
  endpoint:
    path: /affiliates/getting-referrals
    method: GET
    data_selector: referral_data
- name: affiliates
  endpoint:
    path: /affiliates
    method: GET
- name: referrals
  endpoint:
    path: /affiliates/referrals
    method: GET
- name: payouts
  endpoint:
    path: /affiliates/payouts
    method: GET
- name: creatives
  endpoint:
    path: /affiliates/creatives
    method: GET
- name: affiliate_application
  endpoint:
    path: /affiliates/apply
    method: POST
- name: affiliate_programs
  endpoint:
    path: /affiliates/programs
    method: GET
- name: programs
  endpoint:
    path: /programs
    method: GET
- name: clicks
  endpoint:
    path: /clicks
    method: GET
- name: referrals
  endpoint:
    path: /referrals
    method: GET
- name: payouts
  endpoint:
    path: /payouts
    method: GET
- name: creatives
  endpoint:
    path: /creatives
    method: GET
- name: settings
  endpoint:
    path: /settings/profile
    method: GET
- name: referrals
  endpoint:
    path: /api/referrals
    method: GET
    data_selector: referrals
    params: {}
- name: affiliate_payouts
  endpoint:
    path: /api/v1/affiliate_payouts
    method: GET
    data_selector: payouts
- name: email_campaigns
  endpoint:
    path: /api/email_campaigns
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /api/subscribers
    method: GET
    data_selector: data
    params: {}
- name: sending_limits
  endpoint:
    path: /help/email/sending-limits
    method: GET
    data_selector: sending_limits
    params: {}
- name: subscribers
  endpoint:
    path: /email/subscribers/import
    method: POST
    data_selector: subscribers
    params: {}
- name: subscriber
  endpoint:
    path: /email-subscribe/external
    method: POST
    data_selector: subscriber
    params: {}
- name: subscribers
  endpoint:
    path: /email/subscribers/export
    method: GET
    data_selector: subscribers
- name: store
  endpoint:
    path: /api/stores
    method: GET
    data_selector: stores
- name: products
  endpoint:
    path: /api/products
    method: GET
    data_selector: products
- name: subscriptions
  endpoint:
    path: /api/subscriptions
    method: GET
    data_selector: subscriptions
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: customers
- name: affiliates
  endpoint:
    path: /api/affiliates
    method: GET
    data_selector: affiliates
- name: checkout_buttons
  endpoint:
    path: /checkout/buttons
    method: POST
    data_selector: data
    params: {}
- name: license_keys
  endpoint:
    path: /api/license-keys
    method: POST
    data_selector: license_key
    params: {}
- name: checkouts
  endpoint:
    path: /api/checkouts/create-checkout
    method: POST
    data_selector: data.attributes.url
- name: subscriptions
  endpoint:
    path: /api/subscriptions/retrieve-subscription
    method: GET
    data_selector: data.attributes.urls.update_payment_method
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: events
- name: webhooks
  endpoint:
    path: /api/webhooks
    method: POST
    data_selector: events
    params: {}
- name: order_created
  endpoint:
    path: /api/orders
    method: POST
    data_selector: Order object
- name: order_refunded
  endpoint:
    path: /api/orders
    method: POST
    data_selector: Order object
- name: subscription_created
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: Subscription object
- name: subscription_updated
  endpoint:
    path: /api/subscriptions
    method: PATCH
    data_selector: Subscription object
- name: subscription_cancelled
  endpoint:
    path: /api/subscriptions
    method: DELETE
    data_selector: Subscription object
- name: subscription_resumed
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: Subscription object
- name: subscription_expired
  endpoint:
    path: /api/subscriptions
    method: GET
    data_selector: Subscription object
- name: subscription_paused
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: Subscription object
- name: subscription_unpaused
  endpoint:
    path: /api/subscriptions
    method: POST
    data_selector: Subscription object
- name: subscription_payment_success
  endpoint:
    path: /api/subscription-invoices
    method: POST
    data_selector: Subscription invoice object
- name: subscription_payment_failed
  endpoint:
    path: /api/subscription-invoices
    method: POST
    data_selector: Subscription invoice object
- name: subscription_payment_recovered
  endpoint:
    path: /api/subscription-invoices
    method: POST
    data_selector: Subscription invoice object
- name: subscription_payment_refunded
  endpoint:
    path: /api/subscription-invoices
    method: POST
    data_selector: Subscription invoice object
- name: license_key_created
  endpoint:
    path: /api/license-keys
    method: POST
    data_selector: License key object
- name: license_key_updated
  endpoint:
    path: /api/license-keys
    method: PATCH
    data_selector: License key object
- name: affiliate_activated
  endpoint:
    path: /api/affiliates
    method: POST
    data_selector: Affiliate object
- name: orders
  endpoint:
    path: /v1/orders
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /v1/subscriptions
    method: GET
    data_selector: data
- name: subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
    params: {}
- name: order_events
  endpoint:
    path: /webhooks/order_events
    method: POST
    data_selector: events
    params: {}
- name: subscription_events
  endpoint:
    path: /webhooks/subscription_events
    method: POST
    data_selector: events
    params: {}
- name: customers
  endpoint:
    path: /customers
    method: POST
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /api/customers
    method: POST
    data_selector: data
- name: Order
  endpoint:
    path: /orders
    method: GET
    data_selector: data
- name: Subscription
  endpoint:
    path: /subscriptions
    method: GET
    data_selector: data
- name: License Key
  endpoint:
    path: /license-keys
    method: GET
    data_selector: data
- name: webhooks
  endpoint:
    path: /api/webhooks/the-webhook-object
    method: GET
    data_selector: attributes
    params: {}
- name: users
  endpoint:
    path: /v1/users/me
    method: GET
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /v1/orders
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /v1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: stores
  endpoint:
    path: /v1/stores
    method: GET
    data_selector: data
- name: products
  endpoint:
    path: /v1/products
    method: GET
    data_selector: data
- name: orders
  endpoint:
    path: /v1/orders
    method: GET
    data_selector: data
- name: subscriptions
  endpoint:
    path: /v1/subscriptions
    method: GET
    data_selector: data
- name: discounts
  endpoint:
    path: /v1/discounts
    method: GET
    data_selector: data
- name: license-keys
  endpoint:
    path: /v1/license-keys
    method: GET
    data_selector: data
- name: webhooks
  endpoint:
    path: /v1/webhooks
    method: GET
    data_selector: data
- name: users
  endpoint:
    path: /api/users/the-user-object
    method: GET
- name: stores
  endpoint:
    path: /api/stores/the-store-object
    method: GET
- name: customers
  endpoint:
    path: /api/customers/the-customer-object
    method: GET
- name: products
  endpoint:
    path: /api/products/the-product-object
    method: GET
- name: variants
  endpoint:
    path: /api/variants/the-variant-object
    method: GET
- name: prices
  endpoint:
    path: /api/prices/the-price-object
    method: GET
- name: files
  endpoint:
    path: /api/files/the-file-object
    method: GET
- name: orders
  endpoint:
    path: /api/orders/the-order-object
    method: GET
- name: order_items
  endpoint:
    path: /api/order-items/the-order-item-object
    method: GET
- name: subscriptions
  endpoint:
    path: /api/subscriptions/the-subscription-object
    method: GET
- name: subscription_invoices
  endpoint:
    path: /api/subscription-invoices/the-subscription-invoice-object
    method: GET
- name: subscription_items
  endpoint:
    path: /api/subscription-items/the-subscription-item-object
    method: GET
- name: usage_records
  endpoint:
    path: /api/usage-records/the-usage-record-object
    method: GET
- name: discounts
  endpoint:
    path: /api/discounts/the-discount-object
    method: GET
- name: discount_redemptions
  endpoint:
    path: /api/discount-redemptions/the-discount-redemption-object
    method: GET
- name: license_keys
  endpoint:
    path: /api/license-keys/the-license-key-object
    method: GET
- name: license_key_instances
  endpoint:
    path: /api/license-key-instances/the-license-key-instance-object
    method: GET
- name: checkouts
  endpoint:
    path: /api/checkouts/the-checkout-object
    method: GET
- name: webhooks
  endpoint:
    path: /api/webhooks/the-webhook-object
    method: GET
- name: license_api
  endpoint:
    path: /api/license-api
    method: GET
- name: affiliates
  endpoint:
    path: /api/affiliates/the-affiliate-object
    method: GET
- name: user
  endpoint:
    path: /api/users/the-user-object
    method: GET
    data_selector: attributes
- name: user
  endpoint:
    path: /v1/users/me
    method: GET
    data_selector: data
    params: {}
- name: store
  endpoint:
    path: /api/stores/the-store-object
    method: GET
    data_selector: attributes
- name: store
  endpoint:
    path: /v1/stores/:id
    method: GET
    data_selector: data.attributes
- name: stores
  endpoint:
    path: /v1/stores
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /api/customers
    method: GET
    data_selector: attributes
- name: customers
  endpoint:
    path: /v1/customers
    method: POST
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /v1/customers/:id
    method: GET
    data_selector: data.attributes
    params: {}
- name: customers
  endpoint:
    path: /v1/customers/:id
    method: PATCH
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /api/products/the-product-object
    method: GET
    data_selector: attributes
- name: product
  endpoint:
    path: /v1/products/:id
    method: GET
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /v1/products
    method: GET
    data_selector: data
    params: {}
- name: variant
  endpoint:
    path: /api/variants/the-variant-object
    method: GET
    data_selector: attributes
- name: variant
  endpoint:
    path: /v1/variants/:id
    method: GET
- name: variants
  endpoint:
    path: /v1/variants
    method: GET
    data_selector: data
    params: {}
- name: prices
  endpoint:
    path: /api/prices
    method: GET
    data_selector: attributes
- name: prices
  endpoint:
    path: /v1/prices/:id
    method: GET
    data_selector: data
    params: {}
- name: prices
  endpoint:
    path: /v1/prices
    method: GET
    data_selector: data
    params:
      filter[variant_id]: variant_id
- name: files
  endpoint:
    path: /api/files
    method: GET
    data_selector: data
- name: files
  endpoint:
    path: /v1/files/:id
    method: GET
    data_selector: data
    params: {}
- name: files
  endpoint:
    path: /v1/files
    method: GET
    data_selector: data
    params:
      filter[variant_id]: variant_id
- name: orders
  endpoint:
    path: /api/orders/the-order-object
    method: GET
    data_selector: attributes
    params: {}
- name: order
  endpoint:
    path: /v1/orders/:id
    method: GET
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /v1/orders
    method: GET
    data_selector: data
    params: {}
- name: generate_order_invoice
  endpoint:
    path: /v1/orders/:id/generate-invoice
    method: POST
    data_selector: jsonapi
    params: {}
- name: issue_refund
  endpoint:
    path: /v1/orders/:id/refund
    method: POST
    data_selector: data
    params:
      amount: optional
- name: order_item
  endpoint:
    path: /api/order-items
    method: GET
    data_selector: attributes
- name: order_item
  endpoint:
    path: /v1/order-items/:id
    method: GET
    data_selector: data
    params: {}
- name: order_items
  endpoint:
    path: /v1/order-items
    method: GET
    data_selector: data
    params:
      filter[order_id]: '1'
- name: subscriptions
  endpoint:
    path: /api/subscriptions/the-subscription-object
    method: GET
    data_selector: attributes
- name: subscriptions
  endpoint:
    path: /v1/subscriptions/:id
    method: PATCH
    data_selector: data.attributes
- name: subscription
  endpoint:
    path: /v1/subscriptions/:id
    method: GET
    data_selector: data
    params: {}
- name: subscriptions
  endpoint:
    path: /v1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscriptions/:id
    method: DELETE
- name: subscription_invoices
  endpoint:
    path: /api/subscription-invoices
    method: GET
    data_selector: data
- name: subscription_invoice
  endpoint:
    path: /v1/subscription-invoices/:id
    method: GET
    data_selector: data.attributes
    params: {}
- name: subscription_invoices
  endpoint:
    path: /v1/subscription-invoices
    method: GET
    data_selector: data
    params: {}
- name: generate_subscription_invoice
  endpoint:
    path: /v1/subscription-invoices/:id/generate-invoice
    method: POST
    data_selector: jsonapi
    params: {}
- name: subscription_invoices
  endpoint:
    path: /v1/subscription-invoices/:id/refund
    method: POST
    data_selector: data
    params: {}
- name: subscription_items
  endpoint:
    path: /api/subscription-items
    method: GET
    data_selector: records
- name: subscription_item
  endpoint:
    path: /v1/subscription-items/:id
    method: GET
    data_selector: data
    params: {}
- name: subscription_item_current_usage
  endpoint:
    path: /v1/subscription-items/:id/current-usage
    method: GET
    data_selector: meta
- name: subscription_item
  endpoint:
    path: /v1/subscription-items/:id
    method: PATCH
- name: subscription_items
  endpoint:
    path: /v1/subscription-items
    method: GET
    data_selector: data
    params: {}
- name: usage_record
  endpoint:
    path: /api/usage-records
    method: GET
    data_selector: records
- name: usage_record
  endpoint:
    path: /v1/usage-records
    method: POST
    data_selector: data
    params: {}
- name: usage_record
  endpoint:
    path: /v1/usage-records/:id
    method: POST
- name: usage_records
  endpoint:
    path: /v1/usage-records
    method: POST
    data_selector: data
    params:
      filter[subscription_item_id]: '1'
- name: discount
  endpoint:
    path: /api/discounts/the-discount-object
    method: GET
    data_selector: attributes
    params: {}
- name: discounts
  endpoint:
    path: /v1/discounts
    method: POST
    data_selector: data.attributes
    params: {}
- name: discount
  endpoint:
    path: /v1/discounts/:id
    method: GET
    data_selector: data.attributes
    params: {}
- name: discount
  endpoint:
    path: /v1/discounts/:id
    method: DELETE
    data_selector: ''
    params: {}
- name: discounts
  endpoint:
    path: /v1/discounts
    method: GET
    data_selector: data
    params: {}
- name: discount_redemptions
  endpoint:
    path: /api/discount-redemptions/the-discount-redemption-object
    method: GET
    data_selector: attributes
- name: discount_redemption
  endpoint:
    path: /v1/discount-redemptions/:id
    method: GET
    data_selector: data
    params: {}
- name: discount_redemptions
  endpoint:
    path: /v1/discount-redemptions
    method: GET
    data_selector: data
    params:
      filter[discount_id]: discount_id
      filter[order_id]: order_id
- name: license_keys
  endpoint:
    path: /api/license-keys/the-license-key-object
    method: GET
    data_selector: attributes
- name: license_key_instances
  endpoint:
    path: /api/license-key-instances/the-license-key-instance-object
    method: GET
    data_selector: attributes
- name: license_key
  endpoint:
    path: /v1/license-keys/:id
    method: GET
    data_selector: data
    params: {}
- name: license_key
  endpoint:
    path: /v1/license-keys/:id
    method: PATCH
    data_selector: data
    params: {}
- name: license_keys
  endpoint:
    path: /v1/license-keys
    method: GET
    data_selector: data
    params: {}
- name: license_key_instances
  endpoint:
    path: /api/license-key-instances
    method: GET
    data_selector: data
- name: license_key_instance
  endpoint:
    path: /v1/license-key-instances/:id
    method: GET
    data_selector: data
    params: {}
- name: license_key_instances
  endpoint:
    path: /v1/license-key-instances
    method: GET
    data_selector: data
    params: {}
- name: checkouts
  endpoint:
    path: /api/checkouts/the-checkout-object
    method: GET
    data_selector: attributes
- name: checkouts
  endpoint:
    path: /v1/checkouts
    method: POST
    data_selector: data.attributes
    params: {}
- name: checkout
  endpoint:
    path: /v1/checkouts/:id
    method: GET
    data_selector: data
    params: {}
- name: checkouts
  endpoint:
    path: /v1/checkouts
    method: GET
    data_selector: data
    params: {}
- name: webhook
  endpoint:
    path: /api/webhooks/the-webhook-object
    method: GET
    data_selector: attributes
    params: {}
- name: webhooks
  endpoint:
    path: /v1/webhooks
    method: POST
    data_selector: data.attributes
- name: webhook
  endpoint:
    path: /v1/webhooks/:id
    method: GET
    data_selector: data.attributes
    params: {}
- name: webhook
  endpoint:
    path: /v1/webhooks/:id
    method: PATCH
    data_selector: data.attributes
    params: {}
- name: webhook
  endpoint:
    path: /v1/webhooks/:id
    method: DELETE
    data_selector: null
    params: {}
- name: webhooks
  endpoint:
    path: /v1/webhooks
    method: GET
    data_selector: data
    params:
      filter[store_id]: '1'
- name: activate_license
  endpoint:
    path: /v1/licenses/activate
    method: POST
    data_selector: activated
    params:
      license_key: required
      instance_name: required
- name: deactivate_license_key
  endpoint:
    path: /v1/licenses/deactivate
    method: POST
    data_selector: deactivated
    params:
      license_key: required
      instance_id: required
- name: validate_license_key
  endpoint:
    path: /v1/licenses/validate
    method: POST
    data_selector: valid
    params:
      license_key: required
      instance_id: optional
- name: affiliates
  endpoint:
    path: /api/affiliates
    method: GET
    data_selector: attributes
    params: {}
- name: affiliate
  endpoint:
    path: /v1/affiliates/:id
    method: GET
    data_selector: data
    params: {}
- name: affiliates
  endpoint:
    path: /v1/affiliates
    method: GET
    data_selector: data
    params: {}
notes:
- Includes the major version number as a prefix for all endpoints.
- Easy-peasy guides and tutorials on how to get set up and use Lemon Squeezy for your
  business.
- Lemon Squeezy acts as a merchant of record.
- The API uses Bearer authentication for all requests.
- Always share the original checkout URL (with /checkout/buy/), not the converted
  cart URL.
- Proration occurs by default when changing plans.
- Both modes for handling proration can be used in the same request, but 'disable_prorations'
  overrides 'invoice_immediately'.
- Customers are charged based on usage during the previous billing period.
- Uses a JavaScript library for integration
- When Test mode is active, your Lemon Squeezy account changes into a test environment
  completely separate from your live store.
- Products created in test mode will not be available in your live store.
- Lemon Squeezy API keys are tied to users, not stores.
- API requests will pull data from all stores you have access to if you have more
  than one.
- Webhook URL must be publicly accessible and include '/billing/webhook' at the end.
- Webhook secret must be set in environment variables.
- Requires OAuth2 setup with Lemon Squeezy.
- Customers are billed in arrears based on the reported usage.
- No charge is made at checkout when starting a subscription.
- You’ll be able to see customer subscription and payment information in the context
  of each customer conversation.
- The request is valid, parse the data here
- Ensure proper OAuth setup for API access.
- It’s not currently possible to disable license keys using the API.
- Uses OAuth2 for authentication
- Use the include query parameter to load related data in a single request.
- Requires OAuth2 setup for API access.
- Ensure to handle rate limits when making requests.
- Repeating discounts can only be controlled on a monthly frequency
- Requires API key for authentication.
- Webhook setup is necessary for event handling.
- Webhook signature verification is required using the X-Signature header.
- Payouts made using PayPal are always in USD.
- There is a minimum payout threshold of $50.
- The platform fee is calculated on the total order value and collected when the order
  is placed.
- Lemon Squeezy will always try to minimize any fees associated with payouts.
- Lemon Squeezy acts as the merchant of record.
- Re-verification is mandatory to ensure the security and accuracy of your account
  information.
- Failure to re-verify will result in a pause of payouts and pay-ins to your store.
- Two-factor authentication (2FA) adds an extra layer of security to your Lemon Squeezy
  account.
- Test mode allows testing without using real data.
- Products created in test mode won’t automatically transfer to live mode.
- Currently, importing your sales is a manual process.
- We work with Paddle to securely migrate your data to Lemon Squeezy while maintaining
  PCI compliance.
- Payouts may be disabled until you have completed the relevant tax form.
- US merchants and affiliates are required to complete a standard IRS form called
  the Form W-9.
- If you do not provide your tax information, we are required by the IRS to apply
  backup withholding tax of 24% on all your earnings.
- Non-US merchants and affiliates must complete IRS form W-8BEN or W-8BEN-E.
- If tax information is not submitted, earnings from US buyers will be taxed at 30%.
- Marketplace listings are essentially a public destination for visitors to discover
  your products, they do not replace your existing Lemon Squeezy store items.
- Marketplace listings do not replace your existing Lemon Squeezy store items.
- Product must be listed in your Lemon Squeezy store to create a marketplace listing.
- Usage-based billing charges customers based on past usage rather than in advance.
- Free trials are supported on all subscription products.
- Refunds can take up to 10 days to appear on your customer’s statement.
- Customers have the flexibility of checking out with PayPal.
- Any changes to a subscription need to be confirmed by the customer via PayPal.
- Merchants are limited in how much they can change a subscription.
- Some payment methods are only available on certain devices or in certain locations.
- A checkout overlay is a seamless popup, allowing users to purchase products without
  leaving your website.
- You can specify a quantity in the product Share options.
- You can set quantity as a URL parameter to product URLs.
- Customizable email receipt includes a button to access product or content and an
  optional thank you note.
- The checkout[billing_address][country] field must use the ISO 3166-1 alpha-2 format.
- All data will undergo sanitization and validation before the checkout submission.
- Ad blockers in customer browsers can stop event tracking and analytics from working
  for some visitors to your store.
- Events may not show up immediately in Meta so you may not see data in your account
  right away.
- Only owners can invite new team members.
- Only owners can remove team members.
- It’s currently not possible to remove yourself from a store.
- Abandoned cart emails will not be sent for new stores less than a week old.
- We charge a small 5% fee for any revenue recovered by this abandoned cart process.
- Lemon Squeezy has built-in recovery and dunning features to help you recover lost
  revenue from abandoned carts and subscription payment failures.
- Customers will have to go through a magic link sign in flow if they’re not already
  signed in on lemonsqueezy.com.
- As Lemon Squeezy is a merchant of record, you shouldn’t need to report sales tax
  for sales you make through Lemon Squeezy.
- Lemon Squeezy processes all transactions in US dollars (USD)
- Payouts are always made in USD
- Lemon Squeezy reserves the right to issue refunds within 60 days of purchase.
- Lemon Squeezy’s Affiliates features let you easily set up an affiliate program.
- New referrals will be created whenever a customer visits an affiliate’s unique link
  and then buys a product.
- Payouts for affiliates are created on the 1st and 15th of each month.
- Referral commissions are held for 30 days before becoming available and then payouts
  are paid on the 14th and 28th of the month.
- By default, the minimum threshold for payouts is $10.
- Lemon Squeezy will charge small 3% fee for each order referred by an affiliate,
  which will be added to the normal platform fee.
- Applicants must ensure they are eligible for payouts in supported countries.
- Lemon Squeezy offers bi-monthly affiliate payouts for approved referrals, with a
  30-day holding period.
- Ensure OAuth2 is set up correctly to use the API
- Your store will need to be approved before sending broadcasts and marketing emails.
- Subscriber email addresses are automatically validated in the background to ensure
  your email list stays clean to protect our sending reputation.
- A subscriber is either a customer who has bought a product from your store or an
  email subscriber added manually or via a signup form.
- Integrates with WordPress using a dedicated block for seamless checkout experiences.
- License keys will remain active as long as the subscription is active.
- Please don’t self-host Lemon.js, you may miss out on new features and important
  security patches.
- Events are triggered by actions from the Checkout and Payment Method Update overlays.
- Return a 200 response to show that the webhook was successfully captured.
- If the response status is anything else, the webhook will be retried up to three
  more times using an exponential backoff strategy.
- Verify webhook requests from Lemon Squeezy by using a signing secret to generate
  and compare hashes of the payload.
- The secret can be anything you want but is normally a random string between 6 and
  40 characters in length.
- Returns webhook event data.
- Subscription object includes multiple nested relationships.
- Currently, the integration is a one-way sync, meaning Lemon Squeezy sends data to
  ConvertKit but ConvertKit does not send data back to Lemon Squeezy.
- Currently, the integration is a one-way sync, meaning Lemon Squeezy sends data to
  Mailchimp but Mailchimp does not send data back to Lemon Squeezy.
- Any existing customers in Lemon Squeezy when you set up the integration will not
  be sent to Mailchimp. The sync will only trigger for new customers added after you
  create the integration.
- Uses OAuth2 with refresh token — requires setup of connected app in Lemon Squeezy
- API requests must be made over HTTPS
- Generated API keys are valid for a year
- Retrieves a paginated list of all stores ordered by name field in ascending order.
- The country field is optional and follows ISO 3166-1 two-letter country code.
- Fields name, address, city, state, zip_code, and country will soon become required.
- A subscription is created when a subscription product is purchased. Bills the customer
  on a recurring basis.
- For all subscriptions that have PayPal as their payment system, the update endpoint
  will not modify the subscription.
- Returns a paginated list of Subscription objects ordered by created_at in descending
  order.
- Requires authorization using Bearer token
- Returns a paginated list of subscription invoices.
- This endpoint is only for subscriptions with usage-based billing enabled.
- This endpoint is only used with quantity-based billing. If the related subscription’s
  product/variant has usage-based billing enabled, this endpoint will return a `422
  Unprocessable Entity` response.
- Returns a paginated list of usage records ordered by created_at in descending order.
- Returns a paginated list of discounts ordered by created_at in descending order.
- Assign null to set the activation limit to 'unlimited'.
- Can be null if the license key is perpetual.
- Creates a unique checkout for a specific variant with specified attributes.
- Returns a paginated list of Checkout objects ordered by created_at in descending
  order.
- The `secret` is never returned in the API.
- All API requests must be made over HTTPS
- 'POST requests should be sent with the Content-Type: application/x-www-form-urlencoded
  header'
- The license key to deactivate is required.
- The instance ID returned when activating a license key is also required.
errors:
- '429 Too Many Requests: Rate limit exceeded.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Check your OAuth token'
- '404 Not Found: Verify the resource exists'
- 'Invalid signature: Ensure the X-Signature header matches.'
- 'User is not authenticated: Check user session.'
- '404 Not Found: Subscription not found.'
- '400 Bad Request: Invalid request parameters.'
- '401 Unauthorized: Recheck API key'
- '401 Unauthorized: Check your access token.'
- '404 Not Found: Verify the endpoint URL.'
- 'RATE_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Check your API key and permissions.'
- '404 Not Found: Verify the endpoint and parameters.'
- '500 Internal Server Error: Try again later.'
- Failed to fetch products
- Failed to create checkout
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- Submission of incorrect tax information may lead to penalties.
- Payment retries occur every 5 days, up to twice per billing cycle.
- Subscriptions are suspended when they reach the payment failure threshold.
- Chargeback can occur for various reasons including fraud.
- '401 Unauthorized: Check credentials and permissions'
- '429 Too Many Requests: Reduce request frequency'
- '401 Unauthorized: Recheck API key validity'
- '401 Unauthorized: Unauthenticated.'
- '4xx: Client error with provided information.'
- '5xx: Server error'
- '401 Unauthorized: Check the Authorization header.'
- '404 Not Found: If the related subscription product/variant does not have usage-based
  billing enabled.'
- '422 Unprocessable Entity: If the related subscription’s product/variant has usage-based
  billing enabled.'
- 204 No Content
- '400: An error occurred. See the error field for details.'
- '404: An item could not be found.'
- '422: A required field was invalid or missing.'
auth_info:
  mentioned_objects:
  - OauthToken
client:
  base_url: https://api.lemonsqueezy.com
  auth:
    type: oauth2
source_metadata: null
