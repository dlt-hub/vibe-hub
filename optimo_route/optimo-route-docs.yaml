resources:
- name: create_or_update_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
    params:
      dateRange:
        from: '2022-01-01'
        to: '2022-01-03'
      includeOrderData: true
      orderStatus:
      - failed
      - rejected
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
    params:
      dateRange:
        from: '2022-01-01'
        to: '2022-01-03'
      includeOrderData: true
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: get_events
  endpoint:
    path: /v1/get_events
    method: GET
    data_selector: events
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params: {}
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: get_events
  endpoint:
    path: /v1/get_events
    method: GET
    data_selector: events
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params:
      includeOrderData: true
- name: create_order
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /search/orders
    method: GET
    data_selector: orders
    params: {}
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params: {}
- name: create_order
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: data
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params:
      dateRange:
        from: '2022-01-01'
        to: '2022-01-03'
      includeOrderData: true
      orderStatus:
      - failed
      - rejected
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params:
      dateRange:
        from: '2022-01-01'
        to: '2022-01-03'
      includeOrderData: true
      orderStatus:
      - failed
      - rejected
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params:
      includeOrderData: true
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
    params:
      dateRange:
        from: '2022-01-01'
        to: '2022-01-03'
      includeOrderData: true
      orderStatus:
      - failed
      - rejected
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
    params:
      dateRange:
        from: '2022-01-01'
        to: '2022-01-03'
      includeOrderData: true
      orderStatus:
      - failed
      - rejected
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: get_events
  endpoint:
    path: /v1/get_events
    method: GET
    data_selector: events
- name: update_driver_positions
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params:
      includeOrderData: true
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: get_events
  endpoint:
    path: /v1/get_events
    method: GET
    data_selector: events
- name: update_driver_positions
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params:
      includeOrderData: true
- name: create_or_update_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: delete_order
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params: {}
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: delete_order
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /search_orders
    method: POST
- name: search_orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
    params:
      dateRange:
        from: '2022-01-01'
        to: '2022-01-03'
      includeOrderData: true
      orderStatus:
      - failed
      - rejected
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: get_events
  endpoint:
    path: /v1/get_events
    method: GET
    data_selector: events
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /search/orders
    method: GET
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: get_events
  endpoint:
    path: /v1/get_events
    method: GET
    data_selector: events
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params:
      includeOrderData: true
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /search/orders
    method: GET
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params:
      includeOrderData: true
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /search_orders
    method: POST
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
    params:
      includeOrderData: true
      orderStatus:
      - failed
      - rejected
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: get_events
  endpoint:
    path: /get_events
    method: GET
    data_selector: events
    params: {}
- name: search_orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
    params: {}
- name: search_orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
    params:
      includeOrderData: true
- name: update_drivers_positions
  endpoint:
    path: /v1/search_orders
    method: POST
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: orders
    params:
      dateRange:
        from: '2022-01-01'
        to: '2022-01-03'
      includeOrderData: true
      orderStatus:
      - failed
      - rejected
- name: search_orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
    params:
      dateRange:
        from: '2022-01-01'
        to: '2022-01-03'
      includeOrderData: true
- name: create_order
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: data
    params: {}
- name: get_events
  endpoint:
    path: /get_events
    method: GET
    data_selector: events
    params:
      after_tag: ''
- name: search_orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: POST
    data_selector: orders
    params:
      includeOrderData: true
      includeScheduleInformation: true
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: create_order
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: response
    params: {}
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
- name: events
  endpoint:
    path: /v1/search_orders
    method: POST
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: update_order_completion
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params:
      includeOrderData: true
      orderStatus:
      - failed
      - rejected
- name: update_driver_positions
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
- name: get_events
  endpoint:
    path: /v1/get_events
    method: POST
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: automated_planning
  endpoint:
    path: /fr/planification-automatisee/
    method: GET
- name: driver_app
  endpoint:
    path: /fr/application-pour-conducteurs/
    method: GET
- name: real_time_tracking
  endpoint:
    path: /fr/nouveaux-outils-de-suivi-en-direct-pour-ameliorer-la-performance/
    method: GET
- name: customer_notifications
  endpoint:
    path: /fr/messages-texte-de-suivi-de-commande-en-temps-reel/
    method: GET
- name: proof_of_delivery
  endpoint:
    path: /fr/preuve-de-livraison/
    method: GET
- name: customer_feedback
  endpoint:
    path: /fr/feedback-des-clients/
    method: GET
- name: analytics
  endpoint:
    path: /fr/analytique/
    method: GET
- name: order_completion
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
    params:
      dateRange:
        from: '2022-01-01'
        to: '2022-01-03'
      includeOrderData: true
      orderStatus:
      - failed
      - rejected
- name: driver_positions
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
    params: {}
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: create_order
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: data
- name: search_orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: delivery_planning
  endpoint:
    path: /api/v1/delivery
    method: GET
    data_selector: data
    params: {}
- name: real_time_tracking
  endpoint:
    path: /api/v1/real_time_tracking
    method: GET
    data_selector: data
    params: {}
- name: customer_notifications
  endpoint:
    path: /api/v1/customer_notifications
    method: GET
    data_selector: data
    params: {}
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
    params: {}
- name: automated_planning
  endpoint:
    path: /api/automated-planning
    method: POST
    data_selector: data
    params: {}
- name: driver_management
  endpoint:
    path: /api/driver-management
    method: GET
    data_selector: drivers
    params: {}
- name: route_follow_up
  endpoint:
    path: /api/route-follow-up
    method: GET
    data_selector: routes
    params: {}
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: customer_feedback
  endpoint:
    path: /fr/feedback-des-clients/
    method: GET
    data_selector: feedback_data
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
- name: create_order
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: data
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
    params: {}
- name: events
  endpoint:
    path: /get_events
    method: GET
    data_selector: events
    params: {}
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: update_driver_positions
  endpoint:
    path: /v1/search_orders
    method: POST
- name: update_order_completion
  endpoint:
    path: /v1/search_orders
    method: POST
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
- name: Rückkehr zum Depot
  endpoint:
    path: /de/api/
    method: GET
    data_selector: records
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: delivery
  endpoint:
    path: /services/data/vXX.X/sobjects/Delivery
    method: GET
    data_selector: records
    params: {}
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: search_orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
- name: get_events
  endpoint:
    path: /v1/get_events
    method: GET
    data_selector: events
- name: update_driver_positions
  endpoint:
    path: /v1/search_orders
    method: POST
- name: update_order_completion
  endpoint:
    path: /v1/search_orders
    method: POST
- name: orders
  endpoint:
    path: /v1/search_orders
    method: POST
    data_selector: orders
notes:
- At least one of `orders` or `dateRange` properties must be specified in the request.
- Up to 500 orders will be returned in one call.
- Specify the `after_tag` to retrieve the next page of results.
- Use after_tag to fetch the remaining pages.
- At most 500 orders can be specified in a single request.
- If there are more pages of results, use the after_tag to fetch the next set.
- Au maximum 500 commandes peuvent être spécifiées.
- La plage peut s'étendre sur au plus 35 jours, soit 5 semaines.
- Utilisez 'after_tag' pour récupérer les pages restantes.
- Up to 500 orders can be specified in a single request.
- At least one of orders or dateRange properties must be specified in the request.
- SSL ist erforderlich, um zu vermeiden, dass der Authentifizierungsschlüssel und
  potenziell vertrauliche Daten im Klartext über das Web übertragen werden.
- Die maximale Anzahl gleichzeitiger Webdienst-API-Anfragen für ein Konto oder eine
  IP-Adresse ist auf 5 begrenzt.
- Use AUTH_KEY in the query parameter for API key authentication.
- AUTH_KEY must be replaced with your API key.
- Höchstens 500 Bestellungen können angegeben werden.
- Der Bereich kann höchstens 35 Tage, d.h. 5 Wochen umfassen.
- Der Bereich für dateRange kann höchstens 35 Tage umfassen.
- Some mobile devices may be temporarily offline and may only synchronize their events
  once they reconnect.
- Höchstzahl von 500 Bestellungen können angegeben werden.
- Some mobile devices may be temporarily offline, thus events may not arrive in chronological
  order.
- Mindestens eine der Eigenschaften `orders` oder `dateRange` muss in der Anfrage
  angegeben werden.
- Se debe especificar al menos una de las propiedades orders o dateRange en la solicitud.
- La planification automatisée est au cœur de l'expérience OptimoRoute et est disponible
  dans les trois plans tarifaires.
- Aucune installation ou carte de crédit requise
- 'Many delivery businesses face the same issue: your driver completes their route
  but still has an hour or two left in their shift.'
- With the addition of one simple checkbox, OptimoRoute™ has further increased in
  both efficiency and productivity for the delivery industry.
- Utilizes API for integration with existing systems.
- Automated planning is core to the OptimoRoute experience.
- Real-time updates are sent to drivers and clients.
- Feedback des clients est essentiel pour renforcer la réputation de votre entreprise
  et accroître la fidélité des clients.
- Il ne faut qu'une minute pour personnaliser votre question de sondage.
- Utilisez after_tag pour récupérer les pages restantes.
- Die Rückkehr zum Depot Funktion ermöglicht es Fahrern, zum Lager zurückzukehren,
  um nachzuladen.
- Utilizing the Return to Depot feature can optimize delivery schedules.
- The Service is designed to provide you with the capability to manage your transport
  or service business.
- OptimoRoute™ has the right to close or suspend Customer’s account, if we reasonably
  believe that Customer has breached this Agreement.
- All services are provided 'as is', 'as available', and 'with all faults' and without
  any warranty.
- OptimoRoute does not actively monitor the type of data being collected.
- OptimoRoute acts as a Data processor.
- Utilisez le paramètre after_tag pour récupérer les pages restantes.
- Durch die Nutzung der Zurück-zum-Depot-Funktion können Sie unnötige und ungenaue
  Umgehungslösungen für Zeitpläne, die ein Nachladen erfordern, vermeiden.
- 'Molte aziende di consegna affrontano lo stesso problema: il conducente completa
  il suo percorso ma ha ancora un’ora o due di turno.'
- Utilizzando la funzione Ritorno al Deposito, puoi eliminare la necessità di soluzioni
  alternative inutili e imprecise per le pianificazioni che richiedono il ricarico.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The Customer is the Data controller, whereas OptimoRoute acts as their Data processor.
errors:
- 'AUTH_KEY_MISSING: the authentication key is missing'
- 'AUTH_KEY_UNKNOWN: a wrong authentication key was supplied'
- 'MALFORMED_REQUEST: something is wrong with the input'
- 'ERR_MISSING_MAND_FIELD: one of the mandatory fields is missing'
- 'ERR_INVALID_PARAM_FORMAT: one of the specified fields is not in a valid format'
- 'ERR_TOO_MANY_CONNECTIONS: there are too many concurrent requests'
- 'ERR_INTERNAL: an internal server error occur'
- 'ERR_DRIVER_NOT_FOUND: the driver with the specified `externalId or serial` was
  not found'
- 'ERR_MULTIPLE_DRV: multiple drivers with specified `externalId or serial` have been
  found'
- 'ERR_MULTIPLE_DRV_POS: multiple drivers positions objects specified for a single
  driver'
- 'ERR_DRIVER_NOT_FOUND: the driver with the specified externalId or serial was not
  found'
- 'ERR_MULTIPLE_DRV: multiple drivers with specified externalId or serial have been
  found'
- '401 Unauthorized: Check your API key.'
- 'AUTH_KEY_MISSING: la clé d''authentification est manquante'
- 'AUTH_KEY_UNKNOWN: une clé d''authentification incorrecte a été fournie'
- 'MALFORMED_REQUEST: quelque chose ne va pas avec l''entrée'
- 'ERR_MISSING_MAND_FIELD: l''un des champs obligatoires est manquant'
- 'ERR_INVALID_PARAM_FORMAT: l''un des champs spécifiés n''est pas dans un format
  valide'
- 'ERR_TOO_MANY_CONNECTIONS: il y a trop de requêtes simultanées'
- 'ERR_INTERNAL: une erreur interne du serveur s''est produite'
- 'ERR_ORD_NOT_FOUND: la commande avec le `orderNo` et/ou `id` correspondant n''a
  pas été trouvée'
- 'ERR_MULTIPLE_ORD_FOUND: il y a plusieurs commandes correspondant au `orderNo`,
  mais `deleteMultiple` était défini sur *false*'
- 'ERR_OPT_RUNNING: l''optimisation est en cours pour cette commande'
- 'ERR_INVALID_PARAM_FORMAT: ce `orderNo` ou `id` n''est pas valide'
- 'ERR_ORD_NOT_FOUND: la commande avec le orderNo et/ou id correspondant n''a pas
  été trouvée'
- 'ERR_MULTIPLE_ORD_FOUND: il y a plusieurs commandes correspondant au orderNo, mais
  deleteMultiple était défini sur false'
- 'ERR_INVALID_PARAM_FORMAT: ce orderNo ou id n''est pas valide'
- 'ERR_DRIVER_NOT_FOUND: le conducteur avec le externalId ou serial spécifié n''a
  pas été trouvé'
- 'ERR_MULTIPLE_DRV: plusieurs conducteurs avec le externalId ou serial spécifié ont
  été trouvés'
- 'ERR_MULTIPLE_DRV_POS: plusieurs objets de positions de conducteurs spécifiés pour
  un conducteur unique'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key validity'
- '401 Unauthorized: Recheck API key or token expiration'
- 'ERR_DRIVER_NOT_FOUND: le conducteur avec le `externalId ou serial` spécifié n''a
  pas été trouvé'
- 'ERR_MULTIPLE_DRV: plusieurs conducteurs avec le `externalId ou serial` spécifié
  ont été trouvés'
- '401 Unauthorized: Recheck API key'
- 'AUTH_KEY_MISSING: der Authentifizierungsschlüssel fehlt'
- 'AUTH_KEY_UNKNOWN: ein falscher Authentifizierungsschlüssel wurde angegeben'
- 'MALFORMED_REQUEST: etwas ist mit der Eingabe falsch'
- 'ERR_MISSING_MAND_FIELD: eines der Pflichtfelder fehlt'
- 'ERR_INVALID_PARAM_FORMAT: eines der angegebenen Felder hat ein ungültiges Format'
- 'ERR_TOO_MANY_CONNECTIONS: es gibt zu viele gleichzeitige Anfragen'
- 'ERR_INTERNAL: ein interner Serverfehler ist aufgetreten'
- 'ERR_JOB_NOT_FOUND: Der Planungsauftrag mit der angegebenen ID wurde nicht gefunden'
- 'ERR_DRIVER_NOT_FOUND: der Fahrer mit der angegebenen externalId oder serial wurde
  nicht gefunden'
- 'ERR_MULTIPLE_DRV: mehrere Fahrer mit angegebener externalId oder serial wurden
  gefunden'
- 'ERR_MULTIPLE_DRV_POS: mehrere Fahrerpositionsobjekte für einen einzelnen Fahrer
  angegeben'
- 'ERR_DRIVER_NOT_FOUND: der Fahrer mit der angegebenen `externalId oder serial` wurde
  nicht gefunden'
- 'ERR_MULTIPLE_DRV: mehrere Fahrer mit angegebener `externalId oder serial` wurden
  gefunden'
- 'ERR_DRIVER_NOT_FOUND: Der Fahrer mit der angegebenen externalId oder serial wurde
  nicht gefunden'
- 'ERR_MULTIPLE_DRV: Mehrere Fahrer mit angegebener externalId oder serial wurden
  gefunden'
- 'ERR_MULTIPLE_DRV_POS: Mehrere Fahrerpositionsobjekte für einen einzelnen Fahrer
  angegeben'
- 'AUTH_KEY_MISSING: falta la clave de autenticación'
- 'AUTH_KEY_UNKNOWN: se suministró una clave de autenticación incorrecta'
- 'MALFORMED_REQUEST: algo está mal en la entrada'
- 'ERR_MISSING_MAND_FIELD: falta uno de los campos obligatorios'
- 'ERR_INVALID_PARAM_FORMAT: uno de los campos especificados no tiene un formato válido'
- 'ERR_TOO_MANY_CONNECTIONS: hay demasiadas solicitudes concurrentes'
- 'ERR_INTERNAL: ocurrió un error interno del servidor'
- '401 Unauthorized: Check API key or permissions.'
- 'ERR_ORD_EXISTS: un pedido con el `orderNo` especificado ya existe en el sistema'
- 'ERR_RELATED_ORD_MISSING: el pedido con el ID pasado en `relatedOrderNo` no existe'
- 'ERR_RELATED_ORD_MULTIPLE: existen múltiples pedidos con el ID pasado en `relatedOrderNo`'
- 'ERR_RELATED_ORD_LINK: el pedido no se puede vincular al pedido con el ID pasado
  en `relatedOrderNo`'
- 'ERR_DRV_NOT_EXISTS: el conductor con el número de serie pasado en `assignedTo`
  no existe'
- 'ERR_DRV_MULTIPLE: hay más de un conductor con el número de serie `assignedTo`'
- 'ERR_LOC_NOT_VALID: la ubicación especificada no es válida'
- 'ERR_LOC_GEOCODING: no se pudo geocodificar la dirección especificada'
- 'ERR_LOC_GEOCODING_MULTIPLE: se encontraron múltiples resultados durante la geocodificación'
- 'ERR_LOC_GEOCODING_PARTIAL: el geocodificador no devolvió una coincidencia exacta
  para la solicitud original'
- 'ERR_LOC_NON_EXISTING_LOC: la ubicación especificada por `locationNo` no existe'
- 'ERR_LOC_MULTIPLE_LOC: se encontraron múltiples ubicaciones con el `locationNo`
  especificado'
- 'ERR_VF_NOT_EXISTS: la característica del vehículo no existe'
- 'ERR_VF_MULTIPLE: existen múltiples características de vehículos'
- 'ERR_SK_NOT_EXISTS: la habilidad no existe'
- 'ERR_SK_MULTIPLE: existen múltiples habilidades'
- 'WAR_LOC_GEOCODING: no se pudo geocodificar la dirección especificada'
- 'WAR_LOC_GEOCODING_MULTIPLE: se encontraron múltiples resultados durante la geocodificación'
- 'WAR_LOC_GEOCODING_PARTIAL: el geocodificador no devolvió una coincidencia exacta
  para la solicitud original'
- 'ERR_DRIVER_NOT_FOUND: el conductor con el externalId o serial especificado no fue
  encontrado'
- 'ERR_MULTIPLE_DRV: se encontraron múltiples conductores con el externalId o serial
  especificado'
- 'ERR_MULTIPLE_DRV_POS: se especificaron múltiples objetos de posiciones de conductores
  para un solo conductor'
- 'ERR_JOB_NOT_FOUND: no se encontró el trabajo de planificación con el id especificado'
- 'ERR_OPT_NOT_RUNNING: el trabajo de planificación no se está ejecutando'
- 'ERR_OPT_COULD_NOT_STOP: error interno, por favor contacta al soporte técnico'
- 'ERR_DRIVER_NOT_FOUND: el conductor con el `externalId o serial` especificado no
  fue encontrado'
- 'ERR_MULTIPLE_DRV: se encontraron múltiples conductores con el `externalId o serial`
  especificado'
- 'ERR_ORD_EXISTS: un pedido con el orderNo especificado ya existe en el sistema'
- 'ERR_RELATED_ORD_MISSING: el pedido con el ID pasado en relatedOrderNo no existe'
- 'ERR_RELATED_ORD_MULTIPLE: existen múltiples pedidos con el ID pasado en relatedOrderNo'
- 'ERR_RELATED_ORD_LINK: el pedido no se puede vincular al pedido con el ID pasado
  en relatedOrderNo'
- 'ERR_DRV_NOT_EXISTS: el conductor con el número de serie pasado en assignedTo no
  existe'
- 'ERR_DRV_MULTIPLE: hay más de un conductor con el número de serie assignedTo'
- 'ERR_LOC_NON_EXISTING_LOC: la ubicación especificada por locationNo no existe'
- 'ERR_LOC_MULTIPLE_LOC: se encontraron múltiples ubicaciones con el locationNo especificado'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: Verify the endpoint and resource.'
- '500 Internal Server Error: Try again later.'
- '400 Bad Request: Check your request payload.'
- '404 Not Found: Ensure the endpoint path is correct.'
- '500 Internal Server Error: Contact support if this persists.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.optimoroute.com/v1/search_orders
source_metadata: null
