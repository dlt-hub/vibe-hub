resources:
- name: orders
  endpoint:
    path: /orders
    method: GET
    data_selector: data
- name: products
  endpoint:
    path: /products
    method: GET
    data_selector: data
- name: purchase_orders
  endpoint:
    path: /atum/purchase-orders
    method: GET
    params: {}
- name: products
  endpoint:
    path: /atum/products
    method: GET
    params: {}
- name: purchase_orders
  endpoint:
    path: /wp-json/wc/v3/atum/purchase-orders
    method: GET
- name: purchase_orders
  endpoint:
    path: /wp-json/wc/v3/atum/purchase-orders
    method: GET
    data_selector: orders
- name: orders
  endpoint:
    path: /wp-json/wc/v3/orders
    method: GET
    data_selector: orders
- name: default
  endpoint:
    path: ''
    method: GET
    data_selector: data
    params: {}
- name: customers
  endpoint:
    path: /wc/v3/customers
    method: GET
    data_selector: customers
- name: coupons
  endpoint:
    path: /wc/v3/coupons
    method: GET
    data_selector: coupons
- name: coupons
  endpoint:
    path: /wc/v3/coupons
    method: GET
    data_selector: records
    params:
      per_page: 10
      page: 1
- name: coupons_id
  endpoint:
    path: /wc/v3/coupons/(?P<id>[\d]+)
    method: GET
    data_selector: records
    params: {}
- name: orders
  endpoint:
    path: /wc/v3/orders
    method: GET
    data_selector: orders
    params:
      page: 1
      per_page: 10
      status: any
- name: orders
  endpoint:
    path: /wc/v3/orders
    method: GET
    data_selector: orders
    params: {}
- name: orders_batch
  endpoint:
    path: /wc/v3/orders/batch
    method: POST
    data_selector: orders
    params: {}
- name: attributes
  endpoint:
    path: /wc/v3/products/attributes
    method: GET
    data_selector: attributes
    params: {}
- name: categories
  endpoint:
    path: /wc/v3/products/categories
    method: GET
    data_selector: categories
    params: {}
- name: orders
  endpoint:
    path: /wc/v3/orders
    method: GET
    data_selector: orders
- name: order_by_id
  endpoint:
    path: /wc/v3/orders/(?P<id>[\d]+)
    method: GET
    data_selector: order
- name: products_tags
  endpoint:
    path: /wc/v3/products/tags
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /wc/v3/products
    method: GET
    data_selector: records
- name: products
  endpoint:
    path: /wc/v3/products
    method: GET
    data_selector: products
- name: product_id
  endpoint:
    path: /wc/v3/products/(?P<id>[\d]+)
    method: GET
    data_selector: product
- name: products_reviews
  endpoint:
    path: /wc/v3/products/reviews
    method: GET
    data_selector: data
    params:
      context: view
      page: 1
      per_page: 10
      status: approved
- name: products_shipping_classes
  endpoint:
    path: /wc/v3/products/shipping_classes
    method: GET
    data_selector: data
    params:
      context: view
      page: 1
      per_page: 10
- name: products_tags
  endpoint:
    path: /wc/v3/products/tags
    method: GET
    data_selector: data
    params:
      context: view
      page: 1
      per_page: 10
- name: products
  endpoint:
    path: /wc/v3/products
    method: GET
- name: products_batch
  endpoint:
    path: /wc/v3/products/batch
    method: POST
- name: products
  endpoint:
    path: /wc/v3/products
    method: GET
    data_selector: products
- name: product_variations
  endpoint:
    path: /wc/v3/products/(?P<product_id>[\d]+)/variations/(?P<id>[\d]+)
    method: GET
    data_selector: variations
- name: variations
  endpoint:
    path: /wc/v3/products/(?P<product_id>[\d]+)/variations/batch
    methods:
    - POST
    - PUT
    - PATCH
- name: products
  endpoint:
    path: /wc/v3/products
    method: GET
    data_selector: products
- name: product_variations
  endpoint:
    path: /wc/v3/products/(?P<product_id>[\d]+)/variations
    method: GET
    data_selector: variations
- name: webhooks
  endpoint:
    path: /wc/v3/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: webhook_by_id
  endpoint:
    path: /wc/v3/webhooks/(?P<id>[\d]+)
    method: GET
    data_selector: webhook
    params: {}
- name: webhooks_batch
  endpoint:
    path: /wc/v3/webhooks/batch
    method: POST
    data_selector: webhooks
    params: {}
- name: taxes_classes
  endpoint:
    path: /wc/v3/taxes/classes
    method: GET
- name: taxes
  endpoint:
    path: /wc/v3/taxes
    method: GET
- name: taxes_by_id
  endpoint:
    path: /wc/v3/taxes/(?P<id>[\d]+)
    method: GET
- name: taxes_batch
  endpoint:
    path: /wc/v3/taxes/batch
    method: POST
- name: webhooks
  endpoint:
    path: /wc/v3/webhooks
    method: GET
- name: suppliers
  endpoint:
    path: /wc/v3/atum/suppliers
    method: GET
    data_selector: _links
    params: {}
- name: supplier_by_id
  endpoint:
    path: /wc/v3/atum/suppliers/(?P<id>[\d]+)
    method: GET
    data_selector: self
    params: {}
- name: reports_sales
  endpoint:
    path: /wc/v3/reports/sales
    method: GET
    data_selector: self
- name: reports_top_sellers
  endpoint:
    path: /wc/v3/reports/top_sellers
    method: GET
    data_selector: self
- name: reports_orders_totals
  endpoint:
    path: /wc/v3/reports/orders/totals
    method: GET
    data_selector: self
- name: reports_products_totals
  endpoint:
    path: /wc/v3/reports/products/totals
    method: GET
    data_selector: self
- name: reports_customers_totals
  endpoint:
    path: /wc/v3/reports/customers/totals
    method: GET
    data_selector: self
- name: reports_coupons_totals
  endpoint:
    path: /wc/v3/reports/coupons/totals
    method: GET
    data_selector: self
- name: reports_reviews_totals
  endpoint:
    path: /wc/v3/reports/reviews/totals
    method: GET
    data_selector: self
- name: reports
  endpoint:
    path: /wc/v3/reports
    method: GET
    data_selector: self
- name: settings
  endpoint:
    path: /wc/v3/settings
    method: GET
    data_selector: self
- name: shipping_zones
  endpoint:
    path: /wc/v3/shipping/zones
    method: GET
    data_selector: self
- name: taxes_classes
  endpoint:
    path: /wc/v3/taxes/classes
    method: GET
    data_selector: self
- name: suppliers_batch
  endpoint:
    path: /wc/v3/atum/suppliers/batch
    method: POST
    data_selector: records
    params: {}
- name: purchase_orders
  endpoint:
    path: /wc/v3/atum/purchase-orders
    method: GET
    data_selector: records
    params: {}
- name: system_status
  endpoint:
    path: /wc/v3/system_status
    method: GET
- name: system_status_tools
  endpoint:
    path: /wc/v3/system_status/tools
    method: GET
- name: shipping_methods
  endpoint:
    path: /wc/v3/shipping_methods
    method: GET
- name: payment_gateways
  endpoint:
    path: /wc/v3/payment_gateways
    method: GET
- name: data
  endpoint:
    path: /wc/v3/data
    method: GET
- name: continents
  endpoint:
    path: /wc/v3/data/continents
    method: GET
- name: countries
  endpoint:
    path: /wc/v3/data/countries
    method: GET
- name: currencies
  endpoint:
    path: /wc/v3/data/currencies
    method: GET
- name: atum_suppliers
  endpoint:
    path: /wc/v3/atum/suppliers
    method: GET
- name: orders
  endpoint:
    method: POST
    params:
      status:
        default: atum_pending
      currency:
        default: EUR
      dp:
        default: 2
- name: purchase_orders
  endpoint:
    path: /wc/v3/atum/purchase-orders
    method: GET
- name: purchase_order_notes
  endpoint:
    path: /wc/v3/atum/purchase-orders/(?P<order_id>[\d]+)/notes
    method: GET
- name: purchase_orders
  endpoint:
    path: /wc/v3/atum/purchase-orders
    method: GET
- name: purchase_order_by_id
  endpoint:
    path: /wc/v3/atum/purchase-orders/(?P<id>[\d]+)
    method: GET
- name: batch_purchase_orders
  endpoint:
    path: /wc/v3/atum/purchase-orders/batch
    method: POST
- name: purchase_orders
  endpoint:
    path: /wc/v3/atum/purchase-orders/(?P<order_id>[\d]+)/notes/(?P<id>[\d]+)
    method: GET
    data_selector: notes
    params: {}
- name: inventory_logs
  endpoint:
    path: /wc/v3/atum/inventory-logs
    method: GET
    data_selector: logs
    params:
      per_page: 10
      page: 1
- name: inventory_logs
  endpoint:
    path: /wc/v3/atum/inventory-logs/batch
    method: POST
- name: inventory_log_notes
  endpoint:
    path: /wc/v3/atum/inventory-logs/(?P<order_id>[\d]+)/notes
    method: GET
- name: inventory_logs
  endpoint:
    path: /wc/v3/atum/inventory-logs
    method: GET
- name: inventory_logs_single
  endpoint:
    path: /wc/v3/atum/inventory-logs/(?P<id>[\d]+)
    method: GET
- name: inventory_logs_batch
  endpoint:
    path: /wc/v3/atum/inventory-logs/batch
    method: POST
- name: tools
  endpoint:
    path: /atum/tools/<id>
    method: PUT
    data_selector: success
    params: {}
- name: addons
  endpoint:
    path: /atum/addons
    method: GET
    data_selector: records
    params: {}
- name: dashboard
  endpoint:
    path: /atum/dashboard
    method: GET
    data_selector: records
    params: {}
- name: current_stock_value
  endpoint:
    path: /wc/v3/atum/dashboard/current-stock-value
    method: GET
- name: stock_control
  endpoint:
    path: /wc/v3/atum/dashboard/stock-control
    method: GET
- name: tools
  endpoint:
    path: /wc/v3/atum/tools
    method: GET
- name: product_inventories
  endpoint:
    path: /wc/v3/products/(?P<product_id>[\d]+)/inventories
    method: GET
- name: product_inventory
  endpoint:
    path: /wc/v3/products/(?P<product_id>[\d]+)/inventories/(?P<id>[\d]+)
    method: GET
- name: inventory_logs
  endpoint:
    path: /wc/v3/atum/inventory-logs/(?P<order_id>[\d]+)/notes/(?P<id>[\d]+)
    method: GET
    data_selector: records
    params: {}
- name: settings
  endpoint:
    path: /wc/v3/atum/settings
    method: GET
    data_selector: records
    params: {}
- name: settings_batch
  endpoint:
    path: /wc/v3/atum/settings/batch
    method: POST
    data_selector: records
    params: {}
- name: settings_group
  endpoint:
    path: /wc/v3/atum/settings/(?P<group_id>[\w-]+)
    method: GET
    data_selector: records
    params: {}
- name: locations
  endpoint:
    path: /wc/v3/products/atum-locations
    method: GET
    data_selector: records
    params: {}
- name: inbound_stock
  endpoint:
    path: /wc/v3/atum/inbound-stock
    method: GET
    data_selector: records
    params: {}
- name: addons
  endpoint:
    path: /wc/v3/atum/addons
    method: GET
    data_selector: records
    params: {}
- name: dashboard
  endpoint:
    path: /wc/v3/atum/dashboard
    method: GET
    data_selector: records
    params: {}
- name: statistics
  endpoint:
    path: /wc/v3/atum/dashboard/statistics
    method: GET
    data_selector: records
    params: {}
- name: inventories
  endpoint:
    path: /atum/inventories
    method: GET
    data_selector: data
    params: {}
- name: update_inventory
  endpoint:
    path: /products/<product_id>/inventories/<inventory_id>
    method: PUT
    data_selector: data
    params: {}
- name: enable_manage_stock
  endpoint:
    path: /atum/tools/enable-manage-stock
    method: PUT
    data_selector: data
    params: {}
- name: enable_manage_stock
  endpoint:
    path: /atum/tools/enable-manage-stock
    method: PUT
    data_selector: success
    params: {}
- name: inbound_stock
  endpoint:
    path: /atum/inbound-stock/<id>
    method: GET
    data_selector: ''
    params: {}
- name: inventories
  endpoint:
    path: /products/<product_id>/inventories
    method: POST
    data_selector: ''
    params: {}
- name: retrieve_inventory
  endpoint:
    path: /products/<product_id>/inventories/<inventory_id>
    method: GET
    data_selector: ''
    params: {}
- name: inventory_log
  endpoint:
    path: /atum/inventory-logs
    method: POST
    data_selector: data
- name: update_inventory_log
  endpoint:
    path: /atum/tools/<id>
    method: PUT
    data_selector: data
- name: purchase_orders
  endpoint:
    path: /atum/purchase-orders/<id>
    method: DELETE
    data_selector: response
    params:
      force: 'true'
- name: enable_manage_stock
  endpoint:
    path: /atum/tools/enable-manage-stock
    method: PUT
    data_selector: response
    params: {}
- name: inventory_log_notes
  endpoint:
    path: /atum/inventory-logs/<id>/notes
    method: POST
    data_selector: response
    params: {}
- name: orders
  endpoint:
    path: /orders
    method: POST
    data_selector: data
    params: {}
- name: retrieve_order
  endpoint:
    path: /atum/tools/<id>
    method: PUT
    data_selector: data
    params: {}
- name: products
  endpoint:
    path: /products
    method: POST
    data_selector: response
    params: {}
- name: enable_manage_stock
  endpoint:
    path: /wp-json/wc/v3/atum/tools/enable-manage-stock
    method: PUT
    data_selector: success
    params: {}
- name: delete_purchase_order
  endpoint:
    path: /wp-json/wc/v3/atum/purchase-orders/<id>
    method: DELETE
    data_selector: status
    params:
      force: 'true'
- name: products
  endpoint:
    path: /products
    method: POST
    data_selector: id
    params: {}
- name: product_variation
  endpoint:
    path: /wp-json/wc/v3/atum/tools/<id>
    method: PUT
    data_selector: ''
    params: {}
- name: product_variations
  endpoint:
    path: /wp-json/wc/v3/products/<product_id>/variations
    method: POST
    data_selector: ''
    params: {}
- name: atum_tools
  endpoint:
    path: /atum/tools/<id>
    method: PUT
- name: products_atum_locations
  endpoint:
    path: /products/atum-locations
    method: POST
- name: products_atum_locations_id
  endpoint:
    path: /products/atum-locations/<id>
    method: GET
- name: purchase_order
  endpoint:
    path: /atum/purchase-orders
    method: POST
    data_selector: data
- name: enable_manage_stock
  endpoint:
    path: /atum/tools/enable-manage-stock
    method: PUT
    data_selector: data
- name: tools
  endpoint:
    path: /atum/tools/<id>
    method: PUT
    data_selector: success
    params: {}
- name: enable-manage-stock
  endpoint:
    path: /atum/tools/enable-manage-stock
    method: PUT
    data_selector: success
    params: {}
- name: purchase-orders
  endpoint:
    path: /atum/purchase-orders/<id>
    method: DELETE
    data_selector: id
    params:
      force: 'true'
- name: purchase-order-notes
  endpoint:
    path: /atum/purchase-orders/<id>/notes
    method: POST
    data_selector: id
    params: {}
- name: settings-groups
  endpoint:
    path: /atum/tools/<id>
    method: PUT
    data_selector: success
    params: {}
- name: settings
  endpoint:
    path: /atum/settings
    method: GET
    data_selector: ''
- name: tools
  endpoint:
    path: /atum/tools/<id>
    method: PUT
    data_selector: ''
- name: suppliers
  endpoint:
    path: /atum/suppliers
    method: POST
    data_selector: ''
notes:
- You must use OAuth 1.0a 'one-legged' authentication.
- Occasionally some servers may not parse the Authorization header correctly.
- The auth endpoint will send the API Keys in JSON format to the callback_url.
- Define if the order is paid using 'set_paid' field.
- Uses basic authentication with consumer_key and consumer_secret.
- Uses OAuth2 with refresh token — requires setup of connected app in woocommerce
- By default, batch updates are limited to up to 100 objects.
- Requires consumer_key and consumer_secret for authentication.
errors:
- '400 Bad Request: Invalid request, e.g. using an unsupported HTTP method'
- '401 Unauthorized: Authentication or permission error, e.g. incorrect API keys'
- '404 Not Found: Requests to resources that don''t exist or are missing'
- '500 Internal Server Error: Server error'
- 'Consumer key is missing: Check server configuration.'
- '401 Unauthorized: Check consumer_key and consumer_secret.'
- '401 Unauthorized: Check your consumer_key and consumer_secret.'
auth_info:
  mentioned_objects: []
client:
  base_url: /wc/v3/orders
  paginator:
    type: page
    page_size_param: per_page
    default_page_size: 10
source_metadata: null
