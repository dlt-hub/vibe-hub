resources:
- name: surveys
  endpoint:
    path: /v2/client/surveys
    method: GET
- name: surveys
  endpoint:
    path: /v2/client/surveys
    method: GET
- name: surveys
  endpoint:
    path: /v2/client/surveys
    method: GET
    data_selector: surveys
- name: surveys
  endpoint:
    path: /v2/client/surveys
    method: GET
- name: open_click
  endpoint:
    path: /v2/client/clicks
    method: GET
- name: click
  endpoint:
    path: /v2/client/clicks
    method: GET
- name: create_click
  endpoint:
    path: /v2/client/clicks
    method: POST
- name: create_click
  endpoint:
    path: /v2/client/clicks
    method: POST
- name: click
  endpoint:
    path: /v2/client/clicks/{clickId}
    method: GET
- name: update_click
  endpoint:
    path: /v2/client/clicks/{clickId}
    method: POST
- name: click
  endpoint:
    path: /v2/client/clicks/{clickId}
    method: GET
- name: survey_reconciliation_count
  endpoint:
    path: /v1/client/surveys/reconciliation-count
    method: GET
- name: update_click
  endpoint:
    path: /v2/client/clicks/{clickId}
    method: POST
- name: offers
  endpoint:
    path: /v2/client/offers
    method: GET
- name: survey_reconciliation_count
  endpoint:
    path: /v1/client/surveys/reconciliation-count
    method: GET
- name: user_history_offer_details
  endpoint:
    path: /v1/client/user/history/offers/{offerId}
    method: GET
- name: offers
  endpoint:
    path: /v2/client/offers
    method: GET
- name: store_mobile_advertising_id
  endpoint:
    path: /v1/client/user/maid
    method: POST
- name: user_history_offer_details
  endpoint:
    path: /v1/client/user/history/offers/{offerId}
    method: GET
- name: user_history_magic_receipt_offer_details
  endpoint:
    path: /v1/client/user/history/magic-receipts/{receiptOfferId}
    method: GET
- name: store_mobile_advertising_id
  endpoint:
    path: /v1/client/user/maid
    method: POST
- name: user_history
  endpoint:
    path: /v1/client/user/history
    method: GET
- name: magic_receipt_offer_details
  endpoint:
    path: /v1/client/user/history/magic-receipts/{receiptOfferId}
    method: GET
- name: magic_receipts_access_token
  endpoint:
    path: /v1/client/magic-receipts/access-token
    method: GET
- name: user_history
  endpoint:
    path: /v1/client/user/history
    method: GET
- name: user
  endpoint:
    path: /v1/client/user
    method: GET
- name: magic_receipts_access_token
  endpoint:
    path: /v1/client/magic-receipts/access-token
    method: GET
- name: spin_the_wheel
  endpoint:
    path: /v1/client/promotions/wheel/spin
    method: POST
- name: user
  endpoint:
    path: /client/user
    method: GET
- name: update_user
  endpoint:
    path: /v1/client/user
    method: PATCH
- name: spin_wheel
  endpoint:
    path: /v1/client/promotions/wheel/spin
    method: POST
- name: level_info
  endpoint:
    path: /v1/client/level-info
    method: GET
- name: update_user
  endpoint:
    path: /v1/client/user
    method: PATCH
- name: claim_reward
  endpoint:
    path: /v1/client/level-rewards/{rewardId}/claim
    method: POST
- name: level_info
  endpoint:
    path: /client/level-info
    method: GET
- name: current_promotion_streak
  endpoint:
    path: /v1/client/promotions/streak
    method: GET
    data_selector: ''
- name: claim_reward
  endpoint:
    path: /v1/client/level-rewards/{rewardId}/claim
    method: POST
- name: welcome_bonus
  endpoint:
    path: /v1/client/promotions/welcome-bonus
    method: GET
    data_selector: response
- name: current_promotion_streak
  endpoint:
    path: /v1/client/promotions/streak
    method: GET
    data_selector: ''
- name: claim_user_welcome_bonus
  endpoint:
    path: /v1/client/promotions/welcome-bonus
    method: POST
- name: welcome_bonus
  endpoint:
    path: /v1/client/promotions/welcome-bonus
    method: GET
- name: generate_referral_code
  endpoint:
    path: /v1/client/promotions/referral-code/generate
    method: POST
- name: claim_user_welcome_bonus
  endpoint:
    path: /v1/client/promotions/welcome-bonus
    method: POST
- name: activate_referral_code
  endpoint:
    path: /v1/client/promotions/referral-code/activate
    method: POST
- name: generate_referral_code
  endpoint:
    path: /v1/client/promotions/referral-code/generate
    method: POST
- name: referral_info
  endpoint:
    path: /v1/client/promotions/referral-info
    method: GET
- name: activate_referral_code
  endpoint:
    path: /v1/client/promotions/referral-code/activate
    method: POST
- name: claim_user_reward
  endpoint:
    path: /v1/client/claim/{rewardType}/reward/{rewardId}
    method: POST
- name: user_referral_info
  endpoint:
    path: /client/promotions/referral-info
    method: GET
    data_selector: response
- name: delete_user
  endpoint:
    path: /v1/publishers/users/{userId}
    method: DELETE
- name: claim_user_reward
  endpoint:
    path: /v1/client/claim/{rewardType}/reward/{rewardId}
    method: POST
- name: user_data
  endpoint:
    path: /publishers/users/{userId}/profile
    method: GET
- name: import_users
  endpoint:
    path: /v1/publishers/users
    method: POST
- name: user_gdpr_requests
  endpoint:
    path: /v1/publishers/users/{userId}/gdpr-requests
    method: GET
    data_selector: response
- name: delete_user
  endpoint:
    path: /publishers/users/{userId}
    method: DELETE
- name: GDPR data request
  endpoint:
    path: /v1/publishers/users/{userId}/gdpr-requests
    method: POST
- name: user_data
  endpoint:
    path: /v1/publishers/users/{userId}/profile
    method: GET
    data_selector: user_data
- name: offers
  endpoint:
    path: /v2/publishers/offers
    method: GET
- name: user_gdpr_requests
  endpoint:
    path: /publishers/users/{userId}/gdpr-requests
    method: GET
- name: offer_revenue_report
  endpoint:
    path: /v2/publishers/offers/report
    method: GET
    data_selector: null
    params: {}
- name: create_gdpr_data_request
  endpoint:
    path: /publishers/users/{userId}/gdpr-requests
    method: POST
- name: auth_token
  endpoint:
    path: /publishers/auth/s2s
    method: POST
- name: offers
  endpoint:
    path: /v2/publishers/offers
    method: GET
- name: offer_revenue_report
  endpoint:
    path: /v2/publishers/offers/report
    method: GET
    data_selector: response
- name: revenue
  endpoint:
    path: /v2/publishers/revenue
    method: GET
- name: create_auth_token
  endpoint:
    path: /publishers/auth/s2s
    method: POST
- name: cashback_offers
  endpoint:
    path: /v1/client/cashback/offers
    method: GET
- name: test_callback_url
  endpoint:
    path: /publishers/callbacks/test
    method: POST
- name: user_history_cashback_details
  endpoint:
    path: /v1/client/user/history/cashback/{cashbackId}
    method: GET
- name: revenue
  endpoint:
    path: /v2/publishers/revenue
    method: GET
- name: update_user_legal_information
  endpoint:
    path: /v1/client/user/legal
    method: PATCH
- name: cashback_offers
  endpoint:
    path: /v1/client/cashback/offers
    method: GET
- name: update_user_marketing
  endpoint:
    path: /v1/client/user/marketing
    method: PATCH
- name: user_history_cashback_details
  endpoint:
    path: /v1/client/user/history/cashback/{cashbackId}
    method: GET
- name: app_settings
  endpoint:
    path: /v1/client/settings
    method: GET
- name: update_user_legal_information
  endpoint:
    path: /v1/client/user/legal
    method: PATCH
- name: app_settings
  endpoint:
    path: /v1/client/settings/v2
    method: GET
- name: update_user_marketing
  endpoint:
    path: /v1/client/user/marketing
    method: PATCH
- name: app_settings
  endpoint:
    path: /v1/client/settings
    method: GET
    data_selector: settings
- name: get_progress_of_a_goal
  endpoint:
    path: /v1/client/promotions/progress/{goalId}
    method: GET
- name: app_leaderboard
  endpoint:
    path: /v1/client/leaderboard
    method: GET
- name: app_settings
  endpoint:
    path: /v1/client/settings/v2
    method: GET
    data_selector: settings
- name: GDPR file
  endpoint:
    path: /v1/client/gdpr/files/{filename}/{hash}
    method: GET
- name: user_balance
  endpoint:
    path: /v1/client/balance
    method: GET
- name: promotion_progress
  endpoint:
    path: /v1/client/promotions/progress/{goalId}
    method: GET
- name: set_custom_fields
  endpoint:
    path: /v1/client/auth/custom-fields
    method: PATCH
- name: leaderboard
  endpoint:
    path: /v1/client/leaderboard
    method: GET
- name: magic_receipts
  endpoint:
    path: /v1/client/magic-receipts/url
    method: GET
- name: GDPR_file
  endpoint:
    path: /v1/client/gdpr/files/{filename}/{hash}
    method: GET
- name: user_gdpr_requests
  endpoint:
    path: /v1/client/user/gdpr-requests
    method: GET
- name: user_balance
  endpoint:
    path: /v1/client/balance
    method: GET
- name: GDPR data request
  endpoint:
    path: /v1/client/user/gdpr-requests
    method: POST
- name: set_custom_fields
  endpoint:
    path: /v1/client/auth/custom-fields
    method: PATCH
- name: delete_gdpr_data_request
  endpoint:
    path: /v1/client/user/gdpr-requests
    method: DELETE
- name: magic_receipts
  endpoint:
    path: /v1/client/magic-receipts/url
    method: GET
- name: set_user_preferred_notifications
  endpoint:
    path: /v1/client/user/notifications
    method: PATCH
- name: user_gdpr_requests
  endpoint:
    path: /client/user/gdpr-requests
    method: GET
- name: GDPR data request
  endpoint:
    path: /v1/client/user/gdpr-requests
    method: POST
- name: user_preferred_email_channels
  endpoint:
    path: /v1/client/user/notifications
    method: GET
- name: Delete GPDR data request
  endpoint:
    path: /v1/client/user/gdpr-requests
    method: DELETE
- name: set_user_preferred_notifications
  endpoint:
    path: /v1/client/user/notifications
    method: PATCH
- name: create_user_payout_request
  endpoint:
    path: /v1/client/redeem-rewards
    method: POST
- name: user_preferred_email_channels
  endpoint:
    path: /client/user/notifications
    method: GET
- name: user_payout_history
  endpoint:
    path: /v1/client/redeem-rewards/history
    method: GET
- name: unsubscribe_user_notifications
  endpoint:
    path: /v1/client/user/notifications/unsubscribe
    method: GET
- name: create_user_payout_request
  endpoint:
    path: /v1/client/redeem-rewards
    method: POST
- name: user_payout_history
  endpoint:
    path: /v1/client/redeem-rewards/history
    method: GET
- name: offerwall
  endpoint:
    path: /?token=YOUR_TOKEN
    method: GET
    data_selector: offers
    params:
      display_mode: magic_receipts
- name: survey_settings
  endpoint:
    path: /surveys/settings
    method: GET
    data_selector: settings
    params: {}
- name: redirect_urls
  endpoint:
    path: /surveys/redirect-urls
    method: GET
    data_selector: redirects
    params: {}
- name: Offerwall
  endpoint:
    path: /offerwall
    method: GET
    data_selector: offerwall
    params: {}
- name: Surveys
  endpoint:
    path: /surveys
    method: GET
    data_selector: surveys
    params: {}
- name: surveys
  endpoint:
    path: /getSurveys
    method: GET
    data_selector: surveys
    params: {}
- name: leaderboard
  endpoint:
    path: /getLeaderboard
    method: GET
    data_selector: leaderboard
    params: {}
- name: offer_wall
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: OfferWall
  endpoint:
    path: /api/offerwall
    method: POST
- name: Surveys
  endpoint:
    path: /api/surveys
    method: GET
- name: survey_widgets
  endpoint:
    path: /getSurveyWidgets
    method: GET
- name: leaderboard
  endpoint:
    path: /getLeaderboardView
    method: GET
- name: offers
  endpoint:
    path: /api/offers
    method: GET
- name: surveys
  endpoint:
    path: /api/surveys
    method: GET
- name: surveys
  endpoint:
    path: /getSurveys
    method: GET
    data_selector: surveys
- name: Magic Receipts
  endpoint:
    path: /magic-receipts-api
    method: GET
- name: Cashback
  endpoint:
    path: /cashback-api
    method: GET
- name: Games & Offers API
  endpoint:
    path: /docs/offer-api
    method: GET
- name: Survey API
  endpoint:
    path: /docs/user-based-survey-api
    method: GET
- name: Magic Receipts API
  endpoint:
    path: /docs/magic-receipts-api
    method: GET
- name: Cashback API
  endpoint:
    path: /docs/cashback-api
    method: GET
- name: surveys
  endpoint:
    path: /api/surveys
    method: GET
    data_selector: surveys
- name: offer_wall
  endpoint:
    path: /offer_wall
    method: POST
    data_selector: offerWall
    params: {}
- name: surveys
  endpoint:
    path: /surveys
    method: GET
    data_selector: surveys
    params: {}
- name: leaderboard
  endpoint:
    path: /leaderboard
    method: GET
    data_selector: data
    params: {}
- name: offer_wall
  endpoint:
    path: /api/offer-wall
    method: GET
    data_selector: offers
    params: {}
- name: surveys
  endpoint:
    path: /api/surveys
    method: GET
    data_selector: surveys
    params: {}
- name: get_offers
  endpoint:
    path: /reference/getoffersv2
    method: GET
- name: offers
  endpoint:
    path: /v1/user-based-api/offers
    method: GET
    data_selector: data.offers
    params: {}
- name: started_offers
  endpoint:
    path: /v1/user-based-api/started_offers
    method: GET
    data_selector: data.started_offers
    params: {}
- name: get_offers
  endpoint:
    path: /reference/getoffersv2
    method: GET
- name: impression_tracking
  endpoint:
    path: /v1/user-based-api/i
    method: POST
    data_selector: null
    params: {}
- name: started_offers
  endpoint:
    path: /getuserhistory
    method: GET
    data_selector: started_offers
    params: {}
- name: multi_conversion_rules
  endpoint:
    path: /multiple_conversions_rules
    method: GET
    data_selector: null
    params: {}
- name: offers
  endpoint:
    path: /v1/user-based-api/offers
    method: GET
    data_selector: data.offers
- name: started_offers
  endpoint:
    path: /v1/user-based-api/started_offers
    method: GET
    data_selector: data.started_offers
- name: offers
  endpoint:
    path: /reference/getpublisheroffersv2
    method: GET
    data_selector: offers
    params: {}
- name: get_surveys
  endpoint:
    path: /reference/getsurveysv2
    method: GET
    data_selector: surveys
- name: user_history
  endpoint:
    path: /reference/getuserhistory
    method: GET
    data_selector: latest_action
- name: skip_survey
  endpoint:
    path: /reference/skipsurveyv2
    method: POST
    data_selector: skip_result
- name: impression_tracking
  endpoint:
    path: /v1/user-based-api/i
    method: POST
    data_selector: impression_url
    params: {}
- name: user_progress
  endpoint:
    path: /reference/getuserhistory
    method: GET
    data_selector: started_offers
    params: {}
- name: multi_conversion_events
  endpoint:
    path: /reference/getuserhistory
    method: GET
    data_selector: events
    params: {}
- name: sticky_offers
  endpoint:
    path: /docs/static-offer-api
    method: GET
    data_selector: sticky
    params: {}
- name: get_surveys
  endpoint:
    path: /v2/client/clicks
    method: GET
    data_selector: data.surveys
    params: {}
- name: import_users
  endpoint:
    path: /v1/publishers/users
    method: POST
    data_selector: users
    params: {}
- name: user_history
  endpoint:
    path: /reference/getuserhistory
    method: GET
    data_selector: latest_action
    params: {}
- name: get_user_data
  endpoint:
    path: /reference/getuserdata
    method: GET
    data_selector: data
    params: {}
- name: delete_user_data
  endpoint:
    path: /reference/deleteuser
    method: DELETE
    data_selector: status
    params: {}
- name: Get Offers for Publishers
  endpoint:
    path: /reference/getpublisheroffersv2
    method: GET
    data_selector: data.offers
    params: {}
- name: get_surveys
  endpoint:
    path: /reference/getsurveysv2
    method: GET
    data_selector: surveys
- name: user_history
  endpoint:
    path: /reference/getuserhistory
    method: GET
    data_selector: latest_action
- name: skip_survey
  endpoint:
    path: /reference/skipsurveyv2
    method: POST
    data_selector: skip_result
- name: instore-offers-short
  endpoint:
    path: /v1/client/magic-receipts/instore-offers-short
    method: GET
    data_selector: offers
- name: instore-offer-details
  endpoint:
    path: /v1/client/magic-receipts/instore-offer-details
    method: GET
    data_selector: details
- name: instore-categories
  endpoint:
    path: /v1/client/magic-receipts/instore-categories
    method: GET
    data_selector: categories
- name: instore-merchants
  endpoint:
    path: /v1/client/magic-receipts/instore-merchants
    method: GET
    data_selector: merchants
- name: receipt-upload
  endpoint:
    path: /v1/client/magic-receipts/receipt-upload
    method: POST
    data_selector: upload_response
- name: instore-manual-review
  endpoint:
    path: /v1/client/magic-receipts/instore-manual-review
    method: POST
    data_selector: review_response
- name: offers_short
  endpoint:
    path: /?cmd=mp-mr-api-offers-short
    method: GET
    data_selector: ''
    params: {}
- name: offer_details
  endpoint:
    path: /?cmd=mp-mr-api-offer-details
    method: GET
    data_selector: ''
    params: {}
- name: upload_receipt
  endpoint:
    path: /?cmd=mp-mr-api-upload-receipt
    method: POST
    data_selector: ''
    params: {}
- name: manual_review
  endpoint:
    path: /?cmd=mp-mr-api-manual-review
    method: POST
    data_selector: ''
    params: {}
- name: get_surveys
  endpoint:
    path: /v2/client/clicks
    method: GET
    data_selector: surveys
    params: {}
- name: import_users
  endpoint:
    path: /v1/publishers/users
    method: POST
    data_selector: users
    params: {}
- name: user_history
  endpoint:
    path: /reference/getuserhistory
    method: GET
    data_selector: latest_action
    params: {}
- name: create_click
  endpoint:
    path: /reference/createclickv2
    method: POST
    data_selector: data
    params: {}
- name: get_click
  endpoint:
    path: /reference/getclickv2
    method: GET
    data_selector: data
    params: {}
- name: update_click
  endpoint:
    path: /reference/updateclickv2
    method: POST
    data_selector: data
    params: {}
- name: offers
  endpoint:
    path: /?cmd=mp-mr-api-offers-short
    method: GET
    data_selector: data
- name: instore_offer_details
  endpoint:
    path: /
    method: POST
    data_selector: data
    params:
      offerID: '{offerId}'
- name: offer_detail
  endpoint:
    path: /docs/instore-offers-short-endpoint
    method: GET
    data_selector: data
    params: {}
- name: instore-offers-short
  endpoint:
    path: /instore-offers-short
    method: GET
- name: instore-offer-details
  endpoint:
    path: /instore-offer-details
    method: GET
- name: categories
  endpoint:
    path: /instore-categories-api-endpoint
    method: GET
- name: instore-merchants
  endpoint:
    path: /instore-merchants-endpoint
    method: GET
- name: receipt-upload-enabled-check
  endpoint:
    path: /receipt-upload-enabled-check-api-endpoint
    method: GET
- name: receipt-upload
  endpoint:
    path: /receipt-upload-endpoint
    method: POST
- name: instore-manual-review
  endpoint:
    path: /instore-manual-review-endpoint
    method: POST
- name: instore_categories
  endpoint:
    path: /?cmd=mp-mr-api-categories
    method: GET
    data_selector: categories
    params: {}
- name: merchants
  endpoint:
    path: /?cmd=mp-mr-api-merchants
    method: GET
    data_selector: data
    params: {}
- name: offers_short
  endpoint:
    path: /?cmd=mp-mr-api-offers-short
    method: GET
    data_selector: offers
    params: {}
- name: offer_details
  endpoint:
    path: /?cmd=mp-mr-api-offer-details
    method: GET
    data_selector: offerDetails
    params:
      offerID: required
- name: clip_offer
  endpoint:
    path: /?cmd=mp-mr-api-offer-action
    method: POST
    data_selector: response
    params:
      offerID: required
      action: add
- name: upload_receipt
  endpoint:
    path: /?cmd=mp-mr-api-upload-receipt
    method: POST
    data_selector: uploadResponse
    params:
      imageCount: required
      offerIDs: required
      merchantID: required
- name: clip_offer
  endpoint:
    path: /?cmd=mp-mr-api-offer-action
    method: POST
    data_selector: null
    params: {}
- name: offers
  endpoint:
    path: /?cmd=mp-mr-api-offers-short
    method: GET
    data_selector: data
- name: check_clipped_offers
  endpoint:
    path: /?cmd=mp-mr-api-offers-short&sortType=0&myList=true
    method: GET
    data_selector: data
- name: instore_offer_details
  endpoint:
    path: /?cmd=mp-mr-api-offer-details&offerID={offerId}
    method: POST
    data_selector: data
    params: {}
- name: offer_detail
  endpoint:
    path: /docs/instore-offers-short-endpoint
    method: GET
    data_selector: data
    params: {}
- name: receipt_upload_enabled_check
  endpoint:
    path: /?cmd=mp-mr-api-receipt-upload-enabled
    method: GET
    data_selector: maxManualReviewForUpload, maxOfferUploads, dataShareOptInBonusAmount,
      enabled
    params: {}
- name: categories
  endpoint:
    path: /?cmd=mp-mr-api-categories
    method: GET
    data_selector: categories
    params: {}
- name: receipt_upload
  endpoint:
    path: /?cmd=mp-mr-api-upload-receipt
    method: POST
    data_selector: data
    params: {}
- name: merchants
  endpoint:
    path: /?cmd=mp-mr-api-merchants
    method: GET
    data_selector: data
    params: {}
- name: receipt_upload
  endpoint:
    path: /api/receipt/upload
    method: POST
    data_selector: data
    params:
      isQA: 'true'
- name: clip_offer
  endpoint:
    path: /?cmd=mp-mr-api-offer-action
    method: POST
    data_selector: null
    params: {}
- name: manual_review
  endpoint:
    path: /?cmd=mp-mr-api-manual-review
    method: POST
    data_selector: manualReview
    params:
      uploadOfferIDs: []
- name: clipped_offers
  endpoint:
    path: /?cmd=mp-mr-api-offers-short&sortType=0&myList=true
    method: GET
    data_selector: data
    params: {}
- name: cashback_offers
  endpoint:
    path: /v1/client/cashback/offers
    method: GET
    data_selector: data.offers
- name: cashback_offer
  endpoint:
    path: /cashback/offers
    method: GET
    data_selector: offers
- name: receipt_upload_enabled_check
  endpoint:
    path: /?cmd=mp-mr-api-receipt-upload-enabled
    method: GET
    data_selector: enabled
    params: {}
- name: delete_user
  endpoint:
    path: /reference/deleteuser
    method: POST
- name: create_gdpr_data_requests
  endpoint:
    path: /reference/accessuser
    method: POST
- name: get_gdpr_request_status
  endpoint:
    path: /reference/getusergdprrequests
    method: GET
- name: receipt_upload
  endpoint:
    path: /?cmd=mp-mr-api-upload-receipt
    method: POST
    data_selector: data
    params: {}
- name: delete_user
  endpoint:
    path: /v1/publishers/users/{userId}
    method: DELETE
    data_selector: status
    params: {}
- name: receipt_upload
  endpoint:
    path: /?cmd=mp-mr-api-upload-receipt
    method: POST
    data_selector: data
    params:
      isQA: 'true'
- name: manual_review
  endpoint:
    path: /?cmd=mp-mr-api-manual-review
    method: POST
    data_selector: manualReview
    params:
      uploadOfferIDs: array
- name: Magic Receipt Callbacks
  endpoint:
    path: /magic-receipts/callbacks
    method: POST
    data_selector: callbacks
    params: {}
- name: cashback_offers
  endpoint:
    path: /v1/client/cashback/offers
    method: GET
    data_selector: data.offers
- name: cashback_offer
  endpoint:
    path: /cashback_offers
    method: GET
    data_selector: offers
- name: cashback_callback
  endpoint:
    path: /cashback/callbacks
    method: POST
    data_selector: callback_data
    params: {}
- name: Delete User
  endpoint:
    path: /reference/deleteuser
    method: POST
- name: Create GDPR data requests
  endpoint:
    path: /reference/accessuser
    method: POST
- name: Get GDPR request status
  endpoint:
    path: /reference/getusergdprrequests
    method: GET
- name: delete_user
  endpoint:
    path: /v1/publishers/users/{userId}
    method: DELETE
    data_selector: ''
    params: {}
- name: general_reward_callback
  endpoint:
    path: /docs/general-reward-callbacks
    method: GET
    data_selector: callbacks
    params: {}
- name: offer_callbacks
  endpoint:
    path: /api/offer/callbacks
    method: POST
    data_selector: callbacks
    params: {}
- name: Magic Receipts Callbacks
  endpoint:
    path: /magic-receipts/callbacks
    method: POST
    data_selector: callbacks
    params: {}
- name: cashback_callbacks
  endpoint:
    path: /cashback/callbacks
    method: POST
    data_selector: callback_data
    params: {}
- name: list_apps
  endpoint:
    path: /workspaces/{workspaceUuid}/apps
    method: GET
    data_selector: null
    params: {}
- name: create_app
  endpoint:
    path: /workspaces/{workspaceUuid}/apps
    method: POST
    data_selector: null
    params: {}
- name: get_app
  endpoint:
    path: /workspaces/{workspaceUuid}/apps/{appUuid}
    method: GET
    data_selector: null
    params: {}
- name: update_app_configuration
  endpoint:
    path: /workspaces/{workspaceUuid}/apps/{appUuid}
    method: PATCH
    data_selector: null
    params: {}
- name: delete_app
  endpoint:
    path: /workspaces/{workspaceUuid}/apps/{appUuid}
    method: DELETE
    data_selector: null
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: payments_data
- name: billing
  endpoint:
    path: /billing
    method: GET
    data_selector: billing_data
- name: general_reward_callbacks
  endpoint:
    path: /docs/general-reward-callbacks
    method: GET
- name: offer_callbacks
  endpoint:
    path: /docs/offer-callbacks
    method: GET
- name: survey_callbacks
  endpoint:
    path: /docs/survey-callbacks
    method: GET
- name: magic_receipt_callbacks
  endpoint:
    path: /docs/magic-receipt-callbacks
    method: GET
- name: cashback_callbacks
  endpoint:
    path: /docs/cashback-callbacks
    method: GET
- name: arpu_goals
  endpoint:
    path: /offer-metrics/arpu-goals
    method: GET
    data_selector: arpu_goals
- name: list_apps
  endpoint:
    path: /workspaces/{workspaceUuid}/apps
    method: GET
    data_selector: '[]'
- name: create_app
  endpoint:
    path: /workspaces/{workspaceUuid}/apps
    method: POST
    data_selector: uuid
- name: get_app
  endpoint:
    path: /workspaces/{workspaceUuid}/apps/{appUuid}
    method: GET
    data_selector: uuid
- name: update_app_configuration
  endpoint:
    path: /workspaces/{workspaceUuid}/apps/{appUuid}
    method: PATCH
    data_selector: null
- name: delete_app
  endpoint:
    path: /workspaces/{workspaceUuid}/apps/{appUuid}
    method: DELETE
    data_selector: null
- name: callbacks
  endpoint:
    path: /docs/callbacks
    method: GET
    data_selector: attributes
    params: {}
- name: arpu_goals
  endpoint:
    path: /offer-metrics/arpu-goals
    method: GET
    data_selector: arpu_goals
notes:
- Bulk imports given user accounts. This feature must be enabled by your account manager!
- Get App Settings returns the settings of the app. This is deprecated, please use
  `/v1/client/settings/v2` instead.
- Get App Settings V2 returns the settings of the app.
- This is deprecated, please use `/v1/client/settings/v2` instead.
- Games and Offers are automatically built into the BitLabs product and can be enabled
  on the Dashboard under the Games and Offers section.
- Surveys are automatically built into the BitLabs product and can be enabled on the
  Dashboard under the Demand Settings section.
- Magic Receipts are currently available in the US.
- Verification may take up to two days.
- Currently, there is no way for you to reapply to BitLabs.
- Make sure to set the correct currency factor before going live!
- Integrate via an iFrame for best user experience
- Some query parameters may not be stored locally when using link integration
- Ensure to retrieve API Key from the BitLabs Dashboard.
- Currently, the SDK callbacks only work with surveys. For offers, please use the
  server-to-server callback instead.
- We highly recommend using server-to-server callbacks instead!
- Always integrate via an iFrame on Web.
- Mandatory parameters must be included to ensure functionality.
- This page describes how the offerwall settings can be overwritten in the iframe
  during runtime with iframe post messages.
- You must configure the SDK before you can use it.
- Upon closing the Offer Wall, several Assertion Errors might be printed into the
  console.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Retrieve your API Key for integration from the BitLabs Dashboard.
- The earnings will reset at the end of each month.
- By default, rewards are disabled and not shown in the leaderboard.
- The library uses Native Modules, so expect that it will be installing via `pod install`
  when you run it for the first time.
- To enable gaming offers for SDK integrations on iOS, you need to follow the guide.
- The Offerwall will be launched in Safari on iOS.
- Server-to-server callbacks are recommended for reward tracking.
- 'If you want to allow any HTTP request instead, inside *info.plist* put the following:
  <key>NSAppTransportSecurity</key><dict><key>NSAllowsArbitraryLoads</key><true/></dict>'
- 'If you want to allow any HTTP request instead, inside *AndroidManifest.xml* put
  the following: <Application ... android:usesCleartextTraffic="true" ...>'
- Requires API key from the BitLabs Dashboard.
- Enable JavaScript to support all survey types
- Disable any option to go forward/backward navigation in the Web-View
- Display a small X in the upper right corner to close the Web-View
- 'If you want to allow any HTTP request instead, inside the *info.plist* put the
  following: <key>NSAppTransportSecurity</key><dict><key>NSAllowsArbitraryLoads</key><true/></dict>'
- 'If you want to allow any HTTP request instead, inside *AndroidManifest.xml* put
  the following: <Application android:usesCleartextTraffic="true">'
- You have to always include the Editor in the plugins folder.
- For Android, you must assign the Target API Level to API Level 31 or later.
- Offers confirmation time may vary
- Some offers may have restrictions on redemption
- As soon as the URL in the Web-View does not contain 'web.bitlabs.ai' anymore, change
  the X in the upper corner to a back button.
- The `sticky` flag indicates whether an offer should be promoted or highlighted on
  the offerwall.
- Points will appear as Pending for 30 days. Must enter valid sign-up information
  to earn Points. Each person may redeem this offer only ONCE (1 time). This offer
  is presented to you by website or app on behalf of a third party merchant or sponsor
  ("Merchant"), which advises us when the offer is completed and a reward should be
  issued.
- Fetch the offer list every 10 to 15 minutes for updates.
- Store user clicks and completed events for reference.
- When the sticky field is set to true, the offer should be displayed more prominently.
- You have to enable Offers for the App via our Publisher Dashboard
- Fetching the offer list every 10 to 15 minutes is recommended
- The API does only return magic receipts offers for US and CA.
- You must refresh the get survey endpoint after opening a survey
- A token is only valid for 24 hours and therefore needs to be requested again after
  it is no longer valid.
- When you generate an access token for the QA API, please make sure that the test
  mode is enabled on the BitLabs Dashboard.
- Endpoint gets the list of offers for a logged-in member.
- Some fields may return null values depending on the offer.
- Adaptive Filtering based on member activity
- Merchants are sorted by user favorites, popularity, featured status, and alphabetical
  order
- Ensure users specify the quantity of purchased items before proceeding with receipt
  uploads.
- This endpoint gets the list of offers for a logged-in member.
- Certain new users will automatically have their offers go into award pending.
- The documentation for restrictToMerchants is provided below about the instore merchant
  dto.
- This endpoint should be called before attempting to upload a receipt to ensure the
  feature is available and to retrieve the current operational parameters.
- The Receipt Upload API allows members to upload their shopping receipts to claim
  offers listed under the Magic Receipts program.
- 'Image formats that are allowed: PNG, JPG and static GIF.'
- The method includes comprehensive error handling, providing clear error messages
  and codes for various failure scenarios such as invalid merchant ID, image count,
  offer IDs, receipt data, and upload progress state.
- It also ensures that if a receipt upload is already in progress, it will not start
  another, preserving the integrity of the member's upload queue.
- Adaptive filtering based on member activity.
- Custom sorting based on user preferences and geographical trends.
- This QA test API is for testing purposes only. Do not use these offer IDs in production
  environments.
- User-based API, requires user ID to match offers.
- This endpoint should be called before attempting to upload a receipt to ensure the
  feature is available.
- The API processes the uploaded receipt image, evaluates the eligibility for cashback,
  and returns the status of each claimed offer.
- Callbacks are sent for different demand types like offers, surveys, and magic receipts.
- This QA test API is for testing purposes only.
- Uses stateful offer callbacks for all states
- Avoid using TYPE parameter for offers
- Each survey callback will have a different state (type).
- We highly recommend setting up reconciliation callbacks.
- 'Important: Use the TYPE parameter for magic receipts with caution.'
- Ensure to only reward users for magic_receipt_state=COMPLETED callbacks.
- Pending Review states are used for various validation checks.
- Cashback callbacks are always stateful; all cashback states will be sent.
- The callback will include a debug=true parameter, so you can make sure that it won't
  impact your production environment.
- Hashing is really important to make the callbacks safe!
- Do not encode/decode the URL before generating the hash. This will cause differences
  in the result.
- 'Always attached: Hash of the complete URI (HEX encoded SHA-1 HMAC) with the App
  Secret. We recommend using this to verify your callbacks.'
- Callbacks cannot be guaranteed to only send once; a unique Transaction ID is provided
  to prevent double-booking.
- Custom parameters can be passed in callbacks.
- API integrations should not enable the 7-Day Streak feature.
- Callback URL Host must be configured.
- Include parameters UID, TX, VAL, and RAW for processing callbacks.
- Widgets are complementary to the offerwall you are already using.
- The colors will automatically be synced with your offerwall.
- Stateful offer callbacks can be enabled for all states.
- Transaction IDs for reconciled callbacks will have an 'or' prefix if stateful callbacks
  are disabled.
- To set up the survey callbacks, visit the Publisher Dashboard -> Apps -> Your App
  -> Integration -> Reward Callback.
- Make sure to update the App token and User ID
- Make sure that your page contains a HTML element with id='leaderboard'
- Make sure to only reward users for magic_receipt_state=COMPLETED callbacks.
- Pending automated review
- Error parsing receipt - manual reviews disabled
- Cashback callbacks are always stateful. All cashback states will be sent, not only
  the COMPLETED ones.
- Do not use S2S callbacks without validating the hash.
- BitLabs pays publishers on a NET-30 basis.
- Minimum payment threshold is $100.
- Custom parameters need to be URL encoded when passed in callback URLs.
- Make sure that your callback integration is working properly
- Callbacks could be duplicated, or delayed
- Minimum payment threshold of $100.
- 'Your callback integration must be configured to receive attributes: User ID [%UID%],
  Reward [%VAL%], Gross revenue [%RAW%], Transaction ID [%TX%]'
- ARPU goals are not available for all offers.
errors:
- 'Invalid uid: Ensure uid does not contain special characters.'
- 'Missing token: Token must be provided for offer wall access.'
- '401 Unauthorized: Check API Key or permissions.'
- '500 Internal Server Error: Try again later.'
- '401 Unauthorized: Check API key or permissions'
- '404 Not Found: Endpoint does not exist'
- 'INVALID_REQUEST: Check request format and parameters'
- 'UNAUTHORIZED: Ensure API key is valid'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400: failure'
- '200: success'
- '401 Unauthorized: Check if the token is valid.'
- '400 Bad Request: Verify required parameters are present.'
- '400 (failure): Check request parameters'
- '200: Indicates a successful request'
- '100: Offer does not meet criteria'
- '200: The receipt was flagged for potential fraud.'
- '400: error'
- invalid offer IDs
- offers that are not eligible for manual review
- Only a configurable amount of manual review submissions are allowed per upload
- '200: Successful receipt upload'
- '400: Bad Request'
- '401: Unauthorized'
- '500: Internal Server Error'
- '404: user not found'
- '3103: Contact your account manager for more insights'
- '{"status": 400, "message": "error"}'
- 'Error Parsing Receipt Retry Failed: Your receipt was rejected due to an error.
  Please try again with a different image.'
- '404: Your endpoint is returning a 404 error, which could indicate an incorrect
  setup on your end.'
- '200: user deleted'
- '3103: Check with your account manager for insights.'
- Error Parsing Receipt Retry Upload
- Error Parsing Receipt Retry Failed
- '404: Indicates an incorrect setup on your end'
- '40X: Errors from your callback endpoint'
- '50X: Errors from your callback endpoint'
- 401 - Unauthorized (invalid API key)
- 403 - Forbidden (insufficient permissions)
- 404 - Not Found (resource doesn't exist)
- 422 - Unprocessable Entity (validation errors)
- 500 - Internal Server Error
auth_info:
  mentioned_objects:
  - API Key
client:
  base_url: https://api.bitlabs.ai
  resources:
  - name: validate_zipcode
    endpoint:
      path: /v1/client/zipcodes/{zipcode}/valid
      method: GET
source_metadata: null
