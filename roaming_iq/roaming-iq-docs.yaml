resources:
- name: network_equipment
  endpoint:
    path: /network/equipment
    method: GET
    data_selector: records
- name: network_administrator
  endpoint:
    path: /network/administrator
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: access_point_configuration
  endpoint:
    path: /access-point/configuration
    method: GET
    data_selector: configuration
    params: {}
- name: VAULT-AUTH
  endpoint:
    path: /services/authentication
    method: POST
    data_selector: response
    params: {}
- name: VAULT-ACCT
  endpoint:
    path: /services/accounting
    method: POST
    data_selector: response
    params: {}
- name: AAA Authentication Server
  endpoint:
    path: /configure/authentication
    method: POST
    data_selector: configuration
    params:
      name: VAULT-AUTH
      service_protocol: RADIUS
      primary_server:
        ip_address: xx.xx.xx.x
        port: xxxx
        shared_secret: XXXXXXX
      secondary_server:
        ip_address: xx.xx.xx.x
        port: xxxx
        shared_secret: XXXXXXX
        response_window: 20 Seconds
        zombie_period: 40 Seconds
        revive_interval: 60 Seconds
        no_response_fail: 'No'
        mor: 0 Requests per Server
- name: AAA Accounting Server
  endpoint:
    path: /configure/accounting
    method: POST
    data_selector: configuration
    params:
      name: VAULT-ACCT
      service_protocol: RADIUS Accounting
      primary_server:
        ip_address: xx.xx.xx.x
        port: xxxx
        shared_secret: XXXXXXX
      secondary_server:
        enable: 'ON'
        ip_address: xx.xx.xx.x
        port: xxxx
        shared_secret: XXXXXXX
      response_window: 20 Seconds
      zombie_period: 40 Seconds
      revive_interval: 120 Seconds
      mor: 0 Requests per server
- name: WLAN Configuration
  endpoint:
    path: /configure/wlan
    method: POST
    data_selector: configuration
    params:
      name: VAULT
      ssid: VAULT
      authentication_options:
        type: Standard Usage
        method: Open
      encryption_options:
        method: WPA2
        algorithm: AES
        mfp: Disabled
        dynamic_psk: External
      authentication_accounting_service:
        authentication_service: 'ON'
        accounting_service: 'ON'
        interim_update: 30 Minutes
      radius_options:
        nas_id: User-Defined
        nas_request_timeout: 20 Seconds
        nas_max_retries: 2 Times
        nas_reconnect_primary: 5 Minutes
        called_station_id: AP MAC
        nas_ip: User-Defined
      advanced_options:
        access_vlan:
          vlan_id: Set as appropriate for Venue
          dynamic_vlan: Set as appropriate for Venue
- name: network_equipment
  endpoint:
    path: /api/v1/network/equipment
    method: GET
    data_selector: records
- name: access_points
  endpoint:
    path: /api/v1/access/points
    method: GET
    data_selector: records
- name: VAULT-AUTH
  endpoint:
    path: /network-control/policies-profiles/radius-server
    method: POST
- name: VAULT-ACCT
  endpoint:
    path: /network-control/policies-profiles/radius-server
    method: POST
- name: Wi-Fi Network
  endpoint:
    path: /services/wifi/networks
    method: POST
    data_selector: networks
    params: {}
- name: network_equipment
  endpoint:
    path: /api/v1/network/equipment
    method: GET
    data_selector: records
    params: {}
- name: AAA Authentication Server
  endpoint:
    path: /services/data/vXX.X/sobjects/VAULT-AUTH
    method: POST
    data_selector: records
- name: AAA Accounting Server
  endpoint:
    path: /services/data/vXX.X/sobjects/VAULT-ACCT
    method: POST
    data_selector: records
- name: WLAN
  endpoint:
    path: /services/data/vXX.X/sobjects/VAULT
    method: POST
    data_selector: records
- name: RADIUS Profile
  endpoint:
    path: /settings/radius-profile
    method: POST
    data_selector: profile
    params: {}
- name: Wireless Network
  endpoint:
    path: /settings/wireless-network
    method: POST
    data_selector: network
    params: {}
- name: network_operators
  endpoint:
    path: /api/network-operators
    method: GET
    data_selector: data
    params: {}
- name: venues
  endpoint:
    path: /api/venues
    method: GET
    data_selector: data
    params: {}
- name: group_setup
  endpoint:
    path: /services/data/vXX.X/setup/group
    method: POST
    data_selector: records
    params: {}
- name: wlan_configuration
  endpoint:
    path: /services/data/vXX.X/configure/wlan
    method: POST
    data_selector: records
    params: {}
- name: router
  endpoint:
    path: /network-equipment/supported-routers
    method: GET
    data_selector: routers
    params: {}
- name: api_ssl
  endpoint:
    path: /api/ssl
    method: GET
    data_selector: records
    params:
      port: 8729
- name: api
  endpoint:
    path: /api
    method: GET
    data_selector: records
    params:
      port: 8728
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: network_administrators
  endpoint:
    path: /network-administrator-console/network-administrators
    method: GET
    data_selector: administrators
- name: service_plans
  endpoint:
    path: /services/data/vXX.X/sobjects/ServicePlan
    method: GET
    data_selector: records
    params: {}
- name: service_plans
  endpoint:
    path: /network-operator/service-plans
    method: GET
    data_selector: servicePlans
    params: {}
- name: service_plan_settings
  endpoint:
    path: /network-administrator-console/network-operator-settings/service-plans
    method: GET
    data_selector: settings
    params: {}
- name: venue_settings
  endpoint:
    path: /network-administrator-console/creating-a-new-venue/venue-details-configuration-options
    method: GET
    data_selector: settings
    params: {}
- name: keypool
  endpoint:
    path: /network-administrator-console/creating-a-new-venue/add-a-keypool-to-a-venue
    method: POST
    data_selector: keypool
    params: {}
- name: VenueUnitAdded
  endpoint:
    path: (VU1)
    method: POST
- name: VenueUnitUpdated
  endpoint:
    path: (VU2)
    method: POST
- name: KeyStart
  endpoint:
    path: (V7)
    method: POST
- name: KeyEnd
  endpoint:
    path: (V8)
    method: POST
- name: LoginPasswordCreated
  endpoint:
    path: (S1)
    method: POST
- name: SubscriptionSetupSuccess
  endpoint:
    path: (SU1)
    method: POST
- name: SubscriptionPlanUpdated
  endpoint:
    path: (SU2)
    method: POST
- name: SubscriptionVenueUnitUpdated
  endpoint:
    path: (SU3)
    method: POST
- name: SubscriptionPriceUpdated
  endpoint:
    path: (SU4)
    method: POST
- name: SubscriptionNextInvoiceAdjustment
  endpoint:
    path: (SU5)
    method: POST
- name: SubscriptionStartDateAdjustment
  endpoint:
    path: (SU6)
    method: POST
- name: SubscriptionEndDateAdjustment
  endpoint:
    path: (SU7)
    method: POST
- name: StripePaymentSuccess
  endpoint:
    path: (SUS2)
    method: POST
- name: StripePaymentFailed
  endpoint:
    path: (SUS3)
    method: POST
- name: StripePaymentMethodUpdated
  endpoint:
    path: (SUS4)
    method: POST
- name: StripeChargeRefunded
  endpoint:
    path: (SUS5)
    method: POST
- name: network_operator_logs
  endpoint:
    path: /network-operator/logs
    method: GET
- name: equipment_error_logs
  endpoint:
    path: /network/equipment/error/logs
    method: GET
    data_selector: logs
    params: {}
- name: pending_vlan_changes
  endpoint:
    path: /network/pending/vlan/changes
    method: GET
    data_selector: vlan_changes
    params: {}
- name: venue
  endpoint:
    path: /create_venue
    method: POST
    data_selector: venue_details
- name: venue_general_information
  endpoint:
    path: /network-administrator-console/creating-a-new-venue/venue-details-general-information
    method: GET
    data_selector: venue_information
    params: {}
- name: email_settings
  endpoint:
    path: /network-administrator-console/venue-email-settings
    method: GET
    data_selector: settings
    params: {}
- name: vlan_ranges
  endpoint:
    path: /network-administrator-console/venue-vlan-ranges
    method: GET
    data_selector: vlan_ranges
    params: {}
- name: other_settings
  endpoint:
    path: /network-administrator-console/other-venue-settings
    method: GET
    data_selector: other_settings
    params: {}
- name: venue_units
  endpoint:
    path: /api/venue_units
    method: POST
    data_selector: data
    params: {}
- name: venue_units
  endpoint:
    path: /api/v1/venue_units
    method: POST
    data_selector: units
    params: {}
- name: service_plan
  endpoint:
    path: /network-operator-console/service-plans
    method: GET
    data_selector: servicePlans
    params: {}
- name: Keypool
  endpoint:
    path: /network-administrator-console/network-operator-settings/keypools
    method: GET
- name: venue_administrators
  endpoint:
    path: /network-operator-console/venues/{venue_id}/administrators
    method: POST
    data_selector: administrator
    params: {}
- name: shopping_cart
  endpoint:
    path: /network-operator-settings/shopping-cart
    method: GET
    data_selector: settings
    params: {}
- name: venue
  endpoint:
    path: /venues
    method: GET
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /network-administrator-console/managing-your-subscribers
    method: GET
    data_selector: subscribers
    params: {}
- name: subscribers
  endpoint:
    path: /api/v1/subscribers
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /network-administrator-console/managing-your-subscribers/add-subscribers-to-a-venue
    method: POST
    data_selector: subscribers
    params: {}
- name: subscriber
  endpoint:
    path: /subscribers
    method: GET
    data_selector: records
- name: subscribers
  endpoint:
    path: /subscribers
    method: GET
    data_selector: records
- name: subscription
  endpoint:
    path: /subscriptions
    method: DELETE
    data_selector: response
    params: {}
- name: subscriber
  endpoint:
    path: /network-administrator-console/managing-your-subscribers
    method: GET
    data_selector: subscribers
- name: Refund
  endpoint:
    path: /network-administrator-console/managing-your-subscribers/issuing-a-refund-or-credit
    method: GET
- name: Credit
  endpoint:
    path: /network-administrator-console/managing-your-subscribers/issuing-a-refund-or-credit
    method: GET
- name: subscriber_transaction_history
  endpoint:
    path: /network-administrator-console/managing-your-subscribers/view-subscriber-transaction-history
    method: GET
    data_selector: transactions
    params: {}
- name: subscribers
  endpoint:
    path: /api/v1/subscribers
    method: GET
    data_selector: data
- name: subscriber_bandwidth
  endpoint:
    path: /network-administrator-console/managing-your-subscribers/view-subscriber-bandwidth
    method: GET
- name: subscriber_wifi_password
  endpoint:
    path: /manage/subscriber_wifi_passwords
    method: GET
    data_selector: records
- name: subscriber_transaction_history
  endpoint:
    path: /managing-your-subscribers/view-subscriber-transaction-history
    method: GET
    data_selector: records
- name: subscriber_transaction_history
  endpoint:
    path: /network-administrator-console/managing-your-subscribers/view-subscriber-transaction-history
    method: GET
- name: subscriber_logs
  endpoint:
    path: /subscribers/logs
    method: GET
    data_selector: logs
    params: {}
- name: subscriber_log
  endpoint:
    path: /network-administrator-console/managing-your-subscribers/view-subscriber-logs
    method: GET
    data_selector: logs
- name: subscriber_devices
  endpoint:
    path: /api/v1/subscriber/devices
    method: GET
    data_selector: devices
- name: subscriber_devices
  endpoint:
    path: /managing-your-subscribers/view-subscriber-devices
    method: GET
    data_selector: devices
    params: {}
- name: subscriber_system_data
  endpoint:
    path: /subscribers/system_data
    method: GET
    data_selector: data
    params: {}
- name: subscriber_system_data
  endpoint:
    path: /network-administrator-console/managing-your-subscribers/view-system-data
    method: GET
- name: subscriber
  endpoint:
    path: /managing-your-subscribers/permanently-delete-a-subscriber-record
    method: DELETE
- name: venues
  endpoint:
    path: /api/v1/venues
    method: GET
    data_selector: data
    params: {}
- name: venue_details
  endpoint:
    path: /services/data/vXX.X/sobjects/VenueDetails
    method: GET
    data_selector: records
- name: venue_details
  endpoint:
    path: /network-administrator-console/view-and-modify-venue-details
    method: GET
- name: venue_units
  endpoint:
    path: /api/venue_units
    method: GET
    data_selector: units
    params: {}
- name: units
  endpoint:
    path: /api/v1/units
    method: GET
- name: export_units
  endpoint:
    path: /network-administrator-console/managing-your-venues/export-units
    method: GET
- name: venue_bandwidth
  endpoint:
    path: /venues/bandwidth
    method: GET
    data_selector: data
    params: {}
- name: venue_logs
  endpoint:
    path: /venues/logs
    method: GET
    data_selector: records
- name: venue_logs
  endpoint:
    path: /network-administrator-console/managing-your-venues/view-and-modify-venue-units
    method: GET
    data_selector: logs
- name: venue_transaction_history
  endpoint:
    path: /network-administrator-console/managing-your-venues/view-venue-transaction-history
    method: GET
- name: venue_transaction
  endpoint:
    path: /network-administrator-console/managing-your-venues/view-venue-transaction-history
    method: GET
- name: venue
  endpoint:
    path: /api/venues
    method: DELETE
    data_selector: data
    params: {}
- name: delete_venue
  endpoint:
    path: /network-administrator-console/managing-your-venues/delete-a-venue
    method: POST
    data_selector: results
    params: {}
- name: Network Administrator Console
  endpoint:
    path: /network-administrator-console
    method: GET
- name: Venue Administrator Console
  endpoint:
    path: /venue-administrator-console
    method: GET
- name: Subscriber Console
  endpoint:
    path: /subscriber-console
    method: GET
- name: add_subscribers
  endpoint:
    path: /venue-administrator-dashboard/add-subscribers
    method: GET
- name: add_guests
  endpoint:
    path: /venue-administrator-dashboard/add-guests
    method: GET
- name: add_venue_administrators
  endpoint:
    path: /venue-administrator-dashboard/add-venue-administrators
    method: GET
- name: message_subscribers
  endpoint:
    path: /venue-administrator-dashboard/message-subscribers
    method: GET
- name: subscribers
  endpoint:
    path: /api/v1/subscribers
    method: POST
    data_selector: data
    params: {}
- name: subscribers
  endpoint:
    path: /venue-administrator-console/managing-your-subscribers/add-subscribers
    method: POST
    data_selector: subscriber
    params: {}
- name: guest
  endpoint:
    path: /api/guests
    method: POST
    data_selector: guests
    params: {}
- name: Add Guest
  endpoint:
    path: /venue-administrator-console/add-guest
    method: POST
- name: New Residents Today
  endpoint:
    path: /venue-administrator-console/managing-your-subscribers/view-and-modify-subscriber-details
    method: GET
- name: New Residents Next 7 Days
  endpoint:
    path: /venue-administrator-console/managing-your-subscribers/view-and-modify-subscriber-details
    method: GET
- name: Expiring Within 14 Days
  endpoint:
    path: /venue-administrator-console/managing-your-subscribers/view-and-modify-subscriber-details
    method: GET
- name: service_status
  endpoint:
    path: /venue-administrator-dashboard/service-status
    method: GET
    data_selector: service_status_data
- name: open_tickets
  endpoint:
    path: /support/open_tickets
    method: GET
    data_selector: tickets
- name: core_equipment_status
  endpoint:
    path: /support/core_equipment_status
    method: GET
    data_selector: equipment_status
- name: customer_premise_equipment
  endpoint:
    path: /support/customer_premise_equipment
    method: GET
    data_selector: customer_equipment_status
- name: recent_service_activations
  endpoint:
    path: /recent/service/activations
    method: GET
    data_selector: records
- name: recent_service_activations
  endpoint:
    path: /venue-administrator-console/recent-service-activations
    method: GET
    data_selector: activations
- name: Renew or Confirm Upcoming Expirations Table
  endpoint:
    path: /venue-administrator-console/venue-administrator-dashboard/renew-or-confirm-upcoming-expirations
    method: GET
    data_selector: subscriptions
    params: {}
- name: subscribers
  endpoint:
    path: /manage/subscribers
    method: GET
    data_selector: records
    params: {}
- name: subscriber
  endpoint:
    path: /api/subscriber
    method: GET
    data_selector: records
- name: subscriber_details
  endpoint:
    path: /venue-administrator-console/managing-your-subscribers/view-and-modify-subscriber-details
    method: GET
    data_selector: subscriber_details
    params: {}
- name: subscriptions
  endpoint:
    path: /api/v1/subscriptions
    method: GET
    data_selector: data
    params: {}
- name: subscriber_details
  endpoint:
    path: /venue-administrator-console/managing-your-subscribers/view-and-modify-subscriber-details
    method: GET
- name: subscriber_bandwidth
  endpoint:
    path: /managing-your-subscribers/view-subscriber-bandwidth
    method: GET
- name: subscriber_bandwidth
  endpoint:
    path: /venue-administrator-console/managing-your-subscribers/view-subscriber-bandwidth
    method: GET
- name: subscriber_transactions
  endpoint:
    path: /managing-your-subscribers/view-subscriber-transactions
    method: GET
- name: subscriber_transactions
  endpoint:
    path: /venue-administrator-console/managing-your-subscribers/view-subscriber-transactions
    method: GET
- name: resend_activation
  endpoint:
    path: /resend/activation
    method: POST
- name: subscriber_activation
  endpoint:
    path: /resend-activation
    method: POST
    data_selector: activation_status
    params: {}
- name: subscriber
  endpoint:
    path: /subscriber
    method: GET
- name: VenueUnitAdded
  endpoint:
    path: /path/to/venueunitadded
    method: POST
- name: VenueUnitUpdated
  endpoint:
    path: /path/to/venueunitupdated
    method: PUT
- name: KeyStart
  endpoint:
    path: /path/to/keystart
    method: POST
- name: KeyEnd
  endpoint:
    path: /path/to/keyend
    method: POST
- name: LoginPasswordCreated
  endpoint:
    path: /path/to/loginpasswordcreated
    method: POST
- name: SubscriptionSetupSuccess
  endpoint:
    path: /path/to/subscriptionsetupsuccess
    method: POST
- name: SubscriptionPlanUpdated
  endpoint:
    path: /path/to/subscriptionplanupdated
    method: PUT
- name: SubscriptionVenueUnitUpdated
  endpoint:
    path: /path/to/subscriptionvenueunitupdated
    method: PUT
- name: SubscriptionPriceUpdated
  endpoint:
    path: /path/to/subscriptionpriceupdated
    method: PUT
- name: SubscriptionNextInvoiceAdjustment
  endpoint:
    path: /path/to/subscriptionnextinvoiceadjustment
    method: POST
- name: SubscriptionStartDateAdjustment
  endpoint:
    path: /path/to/subscriptionstartdateadjustment
    method: POST
- name: SubscriptionEndDateAdjustment
  endpoint:
    path: /path/to/subscriptionenddateadjustment
    method: POST
- name: StripePaymentSuccess
  endpoint:
    path: /path/to/stripepaymentsuccess
    method: POST
- name: StripePaymentFailed
  endpoint:
    path: /path/to/stripepaymentfailed
    method: POST
- name: StripePaymentMethodUpdated
  endpoint:
    path: /path/to/stripepaymentmethodupdated
    method: PUT
- name: StripeChargeRefunded
  endpoint:
    path: /path/to/stripechargerefunded
    method: POST
- name: VenueUnitAdded
  endpoint:
    path: /webhooks/venue-unit-added
    method: POST
    data_selector: Payload
- name: VenueUnitUpdated
  endpoint:
    path: /webhooks/venue-unit-updated
    method: POST
    data_selector: Payload
- name: KeyStart
  endpoint:
    path: /webhooks/key-start
    method: POST
    data_selector: Payload
- name: KeyEnd
  endpoint:
    path: /webhooks/key-end
    method: POST
    data_selector: Payload
- name: LoginPasswordCreated
  endpoint:
    path: /webhooks/login-password-created
    method: POST
    data_selector: Payload
- name: subscription_setup_success
  endpoint:
    path: /subscription/setup/success
    method: POST
    data_selector: Payload
    params: {}
- name: subscription_plan_updated
  endpoint:
    path: /subscription/plan/updated
    method: POST
    data_selector: Payload
    params: {}
- name: subscription_venue_unit_updated
  endpoint:
    path: /subscription/venue/unit/updated
    method: POST
    data_selector: Payload
    params: {}
- name: subscription_price_updated
  endpoint:
    path: /subscription/price/updated
    method: POST
    data_selector: Payload
    params: {}
- name: subscription_next_invoice_adjustment
  endpoint:
    path: /subscription/next/invoice/adjustment
    method: POST
    data_selector: Payload
    params: {}
- name: SubscriptionStartDateAdjustment
  endpoint:
    path: /subscription/start_date_adjustment
    method: POST
    data_selector: Payload
- name: SubscriptionEndDateAdjustment
  endpoint:
    path: /subscription/end_date_adjustment
    method: POST
    data_selector: Payload
- name: StripePaymentSuccess
  endpoint:
    path: /stripe/payment_success
    method: POST
    data_selector: Payload
- name: StripePaymentFailed
  endpoint:
    path: /stripe/payment_failed
    method: POST
    data_selector: Payload
- name: StripePaymentMethodUpdated
  endpoint:
    path: /stripe/payment_method_updated
    method: POST
    data_selector: Payload
- name: StripeChargeRefunded
  endpoint:
    path: /stripe/charge_refunded
    method: POST
    data_selector: Payload
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- VAULT is fully API-driven, allowing development teams to integrate their user interface
  with VAULT.
- Some objects may return nulls in deeply nested fields
- Some objects like Contact may return nulls in deeply nested fields
- For technical support, e-mail support@roamingiq.com.
- For sales inquiries, e-mail sales@roamingiq.com.
- For network operators who intend to take advantage of SMS Sign Up or the Shopping
  Cart, the RoamingiQ team will need to take additional steps to set up SMS features.
- 'The following elements were provided to you by RoamingiQ during your Network Operator
  onboarding: IP Address, Port, Shared Secret, Confirm Secret.'
- 'The following element is unique to each Venue: NAS-ID.'
- Uses RADIUS for authentication and accounting
- Fields like IP Address and Port are placeholders and should be configured as needed
- Client Inactivity Timeout is set to 86400 seconds.
- Custom NAS ID is provided by VAULT and is Venue Specific.
- Enable Backup RADIUS support for both authentication and accounting servers
- Set Interim-Update for WLAN every 30 Minutes
- All other settings should be set to Best Practices
- All other fields may remain DEFAULT or set to Best Practices
- Ensure Access Point Group is created and associated with an Access Point.
- Access Point firmware must be EAP653v1 or later.
- Omada Pro Firmware must be 5.9.50 or later.
- Requires setup of connected app in API
- Some endpoints may have rate limits
- Configuration parameters will be provided by VAULT and are unique to your account.
- Please refer to Cisco Meraki's documentation for additional information on how to
  configure VAULT with Cisco Meraki.
- If a router/gateway you want to see supported is not listed, please contact your
  VAULT Account Manager to discuss support.
- Requires setup of connected app in api
- All configuration steps detailed assume the Mikrotik Router has an accessible IP
  address and configuration steps are accomplished via WebFig user interface.
- The FCC regulation requires the display of some information that is service plan
  dependent.
- The label will appear during the service plan selection in the Shopping Cart during
  Self-Sign Up.
- 'VAULT has two types of keypools: global and local.'
- Best practice is to ensure a local keypool has a lower display order than a global
  keypool.
- VAULT does not presently support RealPage integration for properties using the VAULT
  Shopping Cart.
- In order for VAULT to automatically add subscribers, VAULT must also automatically
  add units.
- VAULT will only add a subscriber using the 'Head of Household' according to RealPage.
- Venue Administrators and Network Administrators are not able to delete subscriptions
  that have synced with RealPage.
- Overlapping Subscriptions are not supported for RealPage connected properties.
- Logs can be accessed from the Network Administrator Console.
- You can view individual equipment logs within the Venue Details page.
- A single log of all errors across all equipment can be viewed from the Network Operator
  Console.
- Creating a Venue in VAULT allows Network Operators to manage their own venues.
- Uses OAuth2 with refresh token — requires setup of connected app in VAULT
- You cannot remove a service plan from a Venue if there are subscribers currently
  associated with that service plan.
- If you remove a service plan from a Venue that is set to be required, the service
  plan may show as removed, but VAULT will automatically re-add the plan to the Venue
  within a couple of minutes.
- Any Keypool set as a Global Keypool will automatically be added to the Venue.
- The Administrator will receive an email inviting them to complete the account creation
  process.
- VAULT can perform necessary functions including Disable Captive Portal on a VLAN
  when a valid subscriber exists in a unit assigned to that VLAN.
- VAULT will display information such as Device name, Operating System, and Device
  Type to network administrators and subscribers.
- You can enable or disable the shopping cart for a specific Venue.
- You can provide a universal discount across all Service Plans for this Venue.
- You can adjust the number of trial cycles a user will receive for all Service Plans
  for this Venue.
- You can use a separate Stripe account for each Venue.
- Requires setup of connected app in RealPage.
- Before configuring a RealPage Venue in VAULT, you will need to reach out to your
  contact at the venue and ask them to approve VAULT for integration.
- VAULT allows Network Operators total control over their subscribers, including adding
  and removing subscribers, issuing refunds, and more.
- API requires consent for sending SMS messages.
- Requires setup of connected app in RoamingiQ
- Ensure proper permissions for subscription management
- Subscriptions will automatically end at midnight, local venue time, on the service
  end date.
- Requires authentication to access subscriber data
- Network Administrators can view and modify Subscriber Wi-Fi passwords.
- Requires authentication to access subscriber logs
- This process is not reversable. Performing this action will permanently remove all
  existence, including logs, of a subscriber.
- Requires setup of connected app in VAULT
- You can modify most of the information you entered when you created the venue.
- VAULT will not allow a Network Administrator to delete a unit with an active subscription
  in the unit.
- VAULT will receive and capture bandwidth data for your Venues.
- Venue-level bandwidth data is received from your wireless controller.
- VAULT is only able to display bandwidth data for one day at a time.
- Deletion process may take an extended period of time to complete.
- VAULT will not fully delete a Venue if there are any active subscriptions in the
  Venue.
- VAULT offers the convenience of delivering Wi-Fi passwords to subscribers via SMS.
- The VAULT team must complete an SMS number registration, which can take up to thirty
  days to receive.
- The support summary may not display all values if VAULT does not support the ticketing
  system or Network Monitoring System your Network Operator is using.
- VAULT supports Connectwise for ticketing and PRTG for Network Monitoring.
- This table provides a list of subscriptions that are about to expire or reach their
  service end date.
- Requires setup of OAuth2 with refresh token
- Requires setup of OAuth2 credentials in the developer console
- Ensure subscriber consent for SMS messages.
- To export your subscribers to a CSV, navigate to your Venue Administrator Console->Residents->Export
  Residents.
- The Subscriber Console is the central hub for subscribers to manage their accounts
- The shopping cart supports both paid and free service plans
- Ensure proper authentication is set up for webhook endpoints.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400 Bad Request: Check the format of the uploaded CSV file'
- '400 Bad Request: Check subscription IDs or parameters'
- '403 Forbidden: Check if you have the necessary permissions'
- '404 Not Found: Verify the endpoint and parameters'
- '400 Bad Request: Check the request format and data'
- '401 Unauthorized: Verify OAuth token'
- '401 Unauthorized: Check OAuth token'
- '401 Unauthorized: Check your credentials or token expiration'
- '404 Not Found: Verify the endpoint path'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
  - SubscriberToken
  - StripeCustomerID
client:
  base_url: https://api.roamingiq.com
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.roamingiq.com/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
