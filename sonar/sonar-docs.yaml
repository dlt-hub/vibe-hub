resources:
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: billing
  endpoint:
    path: /billing
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.accounts.entities
    params: {}
- name: accounts
  endpoint:
    path: /api/graphql
    method: POST
    data_selector: data.accounts.entities
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: records
    params: {}
- name: billing
  endpoint:
    path: /api/v1/billing
    method: GET
    data_selector: records
    params: {}
- name: jobs
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /api/accounts
    method: GET
    data_selector: records
- name: payment_processors
  endpoint:
    path: /article/2usfa8hw82-setting-up-bank-account-credit-card-processors
    method: GET
- name: billing_settings
  endpoint:
    path: /article/xn12ok0281-billing-parameters
    method: GET
- name: billing_defaults
  endpoint:
    path: /billing/billing-defaults
    method: GET
- name: taxes_setup
  endpoint:
    path: /billing/taxes-setup
    method: GET
- name: adding_payment_method
  endpoint:
    path: /accounts/account-view-overview#payment_details
    method: GET
- name: building_services
  endpoint:
    path: /billing/building-a-data-service
    method: GET
- name: building_packages
  endpoint:
    path: /billing/building-packages
    method: GET
- name: customer_portal_user
  endpoint:
    path: /api/customer_portal/user
    method: POST
    params: {}
- name: customer_portal_role
  endpoint:
    path: /api/customer_portal/role
    method: POST
    params: {}
- name: customer_portal_api
  endpoint:
    path: /api/customer_portal
    method: POST
    data_selector: response
    params:
      username: customer_portal_api
      password: must_be_16_characters!
- name: account_groups
  endpoint:
    path: /account_groups
    method: GET
    data_selector: accountGroups
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: records
- name: billing
  endpoint:
    path: /api/v1/billing
    method: GET
    data_selector: records
- name: account_list
  endpoint:
    path: /accounts
    method: GET
- name: account_group
  endpoint:
    path: /api/account_groups
    method: POST
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /api/accounts
    method: PATCH
    data_selector: data
    params: {}
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: accountDetails
- name: invoices
  endpoint:
    path: /api/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: transactions
  endpoint:
    path: /api/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: child_accounts
  endpoint:
    path: /api/child_accounts
    method: GET
    data_selector: child_accounts
    params: {}
- name: account
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: records
    params: {}
- name: IP Assignments
  endpoint:
    path: /account/ip-assignments
    method: GET
    data_selector: active_assignments
    params: {}
- name: Inventory Items
  endpoint:
    path: /account/inventory-items
    method: GET
    data_selector: inventory
    params: {}
- name: RADIUS Accounts
  endpoint:
    path: /account/radius-accounts
    method: GET
    data_selector: radius_accounts
    params: {}
- name: Uninventoried MAC Addresses
  endpoint:
    path: /account/uninventoried-macs
    method: GET
    data_selector: uninventoried_macs
    params: {}
- name: Data Usage
  endpoint:
    path: /account/data-usage
    method: GET
    data_selector: data_usage
    params: {}
- name: Tickets
  endpoint:
    path: /account/tickets
    method: GET
    data_selector: tickets
    params: {}
- name: Jobs
  endpoint:
    path: /account/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: Correspondence
  endpoint:
    path: /account/correspondence
    method: GET
    data_selector: correspondence
    params: {}
- name: Contacts
  endpoint:
    path: /account/contacts
    method: GET
    data_selector: contacts
    params: {}
- name: Custom Fields
  endpoint:
    path: /account/custom-fields
    method: GET
    data_selector: custom_fields
    params: {}
- name: All Logs
  endpoint:
    path: /account/logs
    method: GET
    data_selector: logs
    params: {}
- name: Account Management View
  endpoint:
    path: /account/management/view
    method: GET
    data_selector: accounts
- name: Billing
  endpoint:
    path: /billing
    method: GET
    data_selector: billing_details
- name: Network & Inventory
  endpoint:
    path: /network/inventory
    method: GET
    data_selector: network_inventory
- name: Correspondence
  endpoint:
    path: /correspondence
    method: GET
    data_selector: correspondence_details
- name: Contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: contacts
- name: Account
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
    params: {}
- name: invoices
  endpoint:
    path: /billing/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: transactions
  endpoint:
    path: /billing/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: services_and_packages
  endpoint:
    path: /billing/services
    method: GET
    data_selector: services
    params: {}
- name: child_accounts
  endpoint:
    path: /billing/child_accounts
    method: GET
    data_selector: child_accounts
    params: {}
- name: account_status
  endpoint:
    path: /account_statuses
    method: GET
    data_selector: statuses
    params: {}
- name: IP Assignments
  endpoint:
    path: /account/ip-assignments
    method: GET
    data_selector: active_assignments
    params: {}
- name: Inventory Items
  endpoint:
    path: /account/inventory-items
    method: GET
    data_selector: inventory_items
    params: {}
- name: RADIUS Accounts
  endpoint:
    path: /account/radius-accounts
    method: GET
    data_selector: radius_accounts
    params: {}
- name: Uninventoried MAC Addresses
  endpoint:
    path: /account/uninventoried-mac-addresses
    method: GET
    data_selector: uninventoried_mac_addresses
    params: {}
- name: Data Usage
  endpoint:
    path: /account/data-usage
    method: GET
    data_selector: data_usage
    params: {}
- name: Tickets
  endpoint:
    path: /account/tickets
    method: GET
    data_selector: tickets
    params: {}
- name: Jobs
  endpoint:
    path: /account/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: Correspondence
  endpoint:
    path: /account/correspondence
    method: GET
    data_selector: correspondence
    params: {}
- name: Contacts
  endpoint:
    path: /account/contacts
    method: GET
    data_selector: contacts
    params: {}
- name: Custom Fields
  endpoint:
    path: /account/custom-fields
    method: GET
    data_selector: custom_fields
    params: {}
- name: All Logs
  endpoint:
    path: /account/all-logs
    method: GET
    data_selector: all_logs
    params: {}
- name: Anchor Address
  endpoint:
    path: /serviceable_addresses/anchor
    method: POST
    data_selector: address
    params: {}
- name: Linked Address
  endpoint:
    path: /serviceable_addresses/linked
    method: POST
    data_selector: address
    params: {}
- name: Bulk Linked Addresses
  endpoint:
    path: /serviceable_addresses/bulk_linked
    method: POST
    data_selector: addresses
    params: {}
- name: default_account_statuses
  endpoint:
    path: /account-statuses/default
    method: GET
    data_selector: statuses
- name: created_account_statuses
  endpoint:
    path: /account-statuses/created
    method: GET
    data_selector: statuses
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: CA Broadband Data
  endpoint:
    path: /reports/CA_Broadband_Data
    method: GET
    data_selector: records
    params: {}
- name: child_account
  endpoint:
    path: /accounts/child
    method: POST
    data_selector: data
    params: {}
- name: parent_account
  endpoint:
    path: /accounts/parent
    method: POST
    data_selector: data
    params: {}
- name: Anchor Address
  endpoint:
    path: /api/anchor-address
    method: POST
    data_selector: anchorAddress
    params: {}
- name: Linked Address
  endpoint:
    path: /api/linked-address
    method: POST
    data_selector: linkedAddress
    params: {}
- name: Bulk Linked Addresses
  endpoint:
    path: /api/bulk-linked-address
    method: POST
    data_selector: bulkLinkedAddresses
    params: {}
- name: accounts
  endpoint:
    path: /accounts/create
    method: POST
    data_selector: account_data
- name: broadband_deployment
  endpoint:
    path: /accounts/cpuc-for-june-2022
    method: GET
    data_selector: records
- name: CA Broadband Data
  endpoint:
    path: /reports/ca-broadband-data
    method: GET
    data_selector: records
- name: mass_messages
  endpoint:
    path: /mass_messages
    method: GET
    data_selector: records
- name: triggered_messages
  endpoint:
    path: /triggered_messages
    method: GET
    data_selector: records
- name: messaging_categories
  endpoint:
    path: /messaging_categories
    method: GET
    data_selector: records
- name: saved_messages
  endpoint:
    path: /saved_messages
    method: GET
    data_selector: records
- name: saved_message_categories
  endpoint:
    path: /saved_message_categories
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: accounts
    params: {}
- name: fixed_broadband_subscription
  endpoint:
    path: /Subscription_Data.csv
    method: GET
    data_selector: records
    params: {}
- name: fixed_voice_subscription
  endpoint:
    path: /Voice_Data.csv
    method: GET
    data_selector: records
    params: {}
- name: BDC Subscribers
  endpoint:
    path: /reports/bdc-subscribers
    method: GET
    data_selector: subscriber_data
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: serviceable_addresses
  endpoint:
    path: /serviceable_addresses
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: custom_fields
  endpoint:
    path: /custom_fields
    method: GET
    data_selector: records
- name: Fixed Broadband Subscription
  endpoint:
    path: /api/fcc/subscription
    method: GET
    data_selector: records
- name: Fixed Voice Subscription
  endpoint:
    path: /api/fcc/voice
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
    params: {}
- name: future_serviceable_address
  endpoint:
    path: /accounts/serviceable_addresses/future
    method: GET
    data_selector: addresses
- name: scheduled_job
  endpoint:
    path: /accounts/scheduled_jobs
    method: GET
    data_selector: jobs
- name: Lead Intake Form
  endpoint:
    path: /accounts/lead-intake-form
    method: GET
    data_selector: records
    params: {}
- name: lead_intake
  endpoint:
    path: /accounts/lead-intake-form
    method: GET
    data_selector: records
    params: {}
- name: createAccount
  endpoint:
    path: /graphql
    method: POST
    data_selector: createAccount
    params: {}
- name: Fixed Broadband Subscription
  endpoint:
    path: /Subscription_Data.csv
    method: GET
    data_selector: records
- name: Fixed Voice Subscription
  endpoint:
    path: /Voice_Data.csv
    method: GET
    data_selector: records
- name: future_serviceable_address
  endpoint:
    path: /accounts/serviceable_addresses/future_serviceable_addresses
    method: GET
    data_selector: addresses
- name: lead_intake_form
  endpoint:
    path: /accounts/lead-intake-form
    method: GET
    data_selector: records
- name: scheduled_event
  endpoint:
    path: /scheduled_events
    method: POST
    data_selector: event
    params: {}
- name: serviceable_addresses
  endpoint:
    path: /serviceable_addresses
    method: GET
    data_selector: records
    params: {}
- name: serviceable_address
  endpoint:
    path: /serviceable_addresses
    method: GET
    data_selector: records
    params: {}
- name: scheduled_events
  endpoint:
    path: /services/data/vXX.X/sobjects/ScheduledEvent
    method: GET
    data_selector: records
    params: {}
- name: create_account
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createAccount
    params: {}
- name: scheduled_event
  endpoint:
    path: /scheduled_events
    method: POST
    data_selector: event
    params: {}
- name: serviceable_address
  endpoint:
    path: /api/serviceable_addresses
    method: POST
    data_selector: data
    params:
      incremental: created_at
- name: ACH Payment Processors
  endpoint:
    path: /billing/setting-up-bank-account-credit-card-processors
    method: GET
    data_selector: processors
    params: {}
- name: Create ACH Batch
  endpoint:
    path: /billing/ach-batches
    method: POST
    data_selector: batch
    params: {}
- name: create_account
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.createAccount
    params: {}
- name: Account Status
  endpoint:
    path: /accounts/status
    method: POST
    data_selector: status
    params: {}
- name: Vacation Service
  endpoint:
    path: /services/vacation
    method: POST
    data_selector: service
    params: {}
- name: batch_payments
  endpoint:
    path: /billing/batch-payments
    method: GET
    data_selector: records
- name: deposit_slips
  endpoint:
    path: /billing/deposit-slips
    method: GET
    data_selector: records
- name: ACH Batches
  endpoint:
    path: /billing/ACH_Batches
    method: GET
    data_selector: batches
    params: {}
- name: batch_payments
  endpoint:
    path: /billing/batch-payments
    method: GET
    data_selector: records
- name: deposit_slips
  endpoint:
    path: /billing/deposit-slips
    method: GET
    data_selector: records
- name: Account Status
  endpoint:
    path: /settings/accounts/statuses
    method: POST
    data_selector: status
    params: {}
- name: Vacation Service
  endpoint:
    path: /services/vacation
    method: POST
    data_selector: service
    params: {}
- name: billing_parameters
  endpoint:
    path: /billing/v2/parameters
    method: GET
    data_selector: records
- name: billing_defaults
  endpoint:
    path: /api/billing/defaults
    method: GET
    data_selector: records
- name: Billing Defaults
  endpoint:
    path: /billing/defaults
    method: GET
    data_selector: billing_defaults
    params: {}
- name: Available Services
  endpoint:
    path: /billing/available_services
    method: GET
    data_selector: available_services
    params: {}
- name: Batch Payment Entry
  endpoint:
    path: /batch/payment/entry
    method: GET
    data_selector: payments
- name: Deposit Slips
  endpoint:
    path: /deposit/slips
    method: GET
    data_selector: deposits
- name: billing_parameters
  endpoint:
    path: /billing/v2/parameters
    method: GET
    data_selector: parameters
    params: {}
- name: data_service
  endpoint:
    path: /services/data/vXX.X/sobjects/DataService
    method: POST
    data_selector: records
    params: {}
- name: fixed_billing
  endpoint:
    path: /billing/fixed
    method: GET
    data_selector: billing_defaults
    params: {}
- name: anniversary_billing
  endpoint:
    path: /billing/anniversary
    method: GET
    data_selector: billing_defaults
    params: {}
- name: anniversary_invoice_billing
  endpoint:
    path: /billing/anniversary_invoice
    method: GET
    data_selector: billing_defaults
    params: {}
- name: routing_code
  endpoint:
    path: /conversion_tool
    method: GET
- name: packages
  endpoint:
    path: /packages
    method: POST
    data_selector: package
    params: {}
- name: services
  endpoint:
    path: /billing/services
    method: GET
- name: price_override
  endpoint:
    path: /graphql
    method: POST
    data_selector: data.updateAccountService
    params: {}
- name: account
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
    data_selector: records
- name: discounts
  endpoint:
    path: /billing/services/discounts
    method: POST
    data_selector: discounts
    params: {}
- name: routing_code
  endpoint:
    path: /routing_code
    method: GET
    data_selector: routing_codes
- name: price_override
  endpoint:
    path: /system/how-to-use-graphi-ql-to-understand-the-sonar-api
    method: POST
    data_selector: updateAccountService
    params: {}
- name: delinquency_exclusions
  endpoint:
    path: /delinquency/exclusions
    method: GET
    data_selector: exclusions
    params: {}
- name: discounts
  endpoint:
    path: /billing/services/discounts
    method: GET
    data_selector: records
    params: {}
- name: delinquency_billing
  endpoint:
    path: /billing/delinquency
    method: GET
    data_selector: billing_data
    params: {}
- name: delinquency_exclusions
  endpoint:
    path: /billing/delinquency_exclusions
    method: GET
    data_selector: records
- name: delinquency_exclusions
  endpoint:
    path: /api/delinquency_exclusions
    method: GET
    data_selector: results
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: billing
  endpoint:
    path: /billing
    method: GET
    data_selector: data
    params: {}
- name: general_transactions
  endpoint:
    path: /billing/general-transactions
    method: GET
    data_selector: records
- name: billing_settings
  endpoint:
    path: /settings/billing/billing_settings
    method: GET
    data_selector: settings
    params: {}
- name: account_management
  endpoint:
    path: /account_management
    method: GET
    data_selector: accounts
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: sent_invoices
  endpoint:
    path: /accounts/account-view-overview
    method: GET
    data_selector: Emails
    params: {}
- name: email_report
  endpoint:
    path: /billing/dual-data-services-overview
    method: GET
    data_selector: All Emails
    params: {}
- name: ACH
  endpoint:
    path: /billing/ach
    method: GET
    data_selector: transactions
    params: {}
- name: eCheck
  endpoint:
    path: /billing/echeck
    method: GET
    data_selector: transactions
    params: {}
- name: Wire
  endpoint:
    path: /billing/wire
    method: GET
    data_selector: transactions
    params: {}
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: transactions
  endpoint:
    path: /transactions
    method: GET
    data_selector: transactions
    params: {}
- name: invoice_template
  endpoint:
    path: /invoice/templates
    method: GET
    data_selector: templates
    params: {}
- name: proration_settings
  endpoint:
    path: /settings/billing/proration
    method: GET
    data_selector: settings
    params: {}
- name: account_management
  endpoint:
    path: /account/management
    method: GET
    data_selector: accounts
    params: {}
- name: Adjustments
  endpoint:
    path: /billing/transactions/adjustments
    method: POST
    data_selector: adjustment
    params: {}
- name: One Time Transactions
  endpoint:
    path: /billing/transactions/one-time
    method: POST
    data_selector: one_time_transaction
    params: {}
- name: Manual Payments
  endpoint:
    path: /billing/transactions/manual-payments
    method: POST
    data_selector: manual_payment
    params: {}
- name: services
  endpoint:
    path: /services/data/vXX.X/sobjects/Service
    method: POST
    data_selector: service_records
    params: {}
- name: transactions
  endpoint:
    path: /services/data/vXX.X/sobjects/Transaction
    method: POST
    data_selector: transaction_records
    params: {}
- name: printed_invoice_batch
  endpoint:
    path: /printed_invoice_batches
    method: POST
    data_selector: batch
    params:
      date: past
      exclude_paid: 'true'
- name: printed_invoice_fee
  endpoint:
    path: /printed_invoice_fee
    method: POST
    data_selector: fee
    params:
      enabled: 'true'
      service_name: Printed Invoice Fee
      application: Debit
      amount: amount_in_dollars
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: records
- name: billing
  endpoint:
    path: /api/v1/billing
    method: GET
    data_selector: records
- name: services
  endpoint:
    path: /services
    method: GET
    data_selector: services
    params: {}
- name: payment_method
  endpoint:
    path: /billing/payment-methods
    method: POST
    data_selector: paymentMethods
    params: {}
- name: transactions
  endpoint:
    path: /billing/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: adjustment_service
  endpoint:
    path: /billing/adjustment_service
    method: GET
    data_selector: records
- name: one_time_transaction
  endpoint:
    path: /billing/one_time_transaction
    method: GET
    data_selector: records
- name: manual_payment
  endpoint:
    path: /billing/manual_payment
    method: GET
    data_selector: records
- name: invoice
  endpoint:
    path: /billing/invoice
    method: GET
    data_selector: records
- name: Multi-Month Billing
  endpoint:
    path: /billing/multi-month-billing-multi-month-services
    method: GET
    data_selector: records
- name: Bank Account Processors
  endpoint:
    path: /settings/billing/bank_account_processors
    method: GET
    data_selector: processors
    params: {}
- name: Credit Card Processors
  endpoint:
    path: /settings/billing/credit_card_processors
    method: GET
    data_selector: processors
    params: {}
- name: Print to Mail Settings
  endpoint:
    path: /settings/sonar_billing/print_to_mail
    method: GET
    data_selector: settings
- name: Notifications
  endpoint:
    path: /settings/notification_preferences/print_to_mail
    method: GET
    data_selector: notifications
- name: Sonar Billing
  endpoint:
    path: /billing/sonar_billing
    method: GET
    data_selector: billing
- name: Print to Mail Batches
  endpoint:
    path: /billing/print_to_mail_batches
    method: GET
    data_selector: batches
- name: tax_creation
  endpoint:
    path: /settings/billing/taxes/create
    method: POST
    data_selector: tax
    params: {}
- name: geo_tax_zone_configuration
  endpoint:
    path: /settings/billing/taxes/geo-zones
    method: POST
    data_selector: geo_tax_zone
    params: {}
- name: tax_application
  endpoint:
    path: /settings/billing/services/taxes
    method: POST
    data_selector: service_tax
    params: {}
- name: tax_override
  endpoint:
    path: /accounts/tax/override
    method: POST
    data_selector: tax_override
    params: {}
- name: usage_based_billing_policy
  endpoint:
    path: /billing/usage-based-billing-policies
    method: GET
    data_selector: policies
    params: {}
- name: Free Period
  endpoint:
    path: /settings/billing/usage_based_billing_policy_free_periods
    method: GET
    data_selector: free_periods
    params: {}
- name: services
  endpoint:
    path: /services/data/vXX.X/sobjects/Service
    method: GET
    data_selector: records
    params: {}
- name: payments
  endpoint:
    path: /api/payments
    method: GET
    data_selector: records
    params: {}
- name: call_logs
  endpoint:
    path: /api/call_logs
    method: GET
    data_selector: logs
    params: {}
- name: payment_method
  endpoint:
    path: /billing/payment_methods
    method: POST
    data_selector: paymentMethods
    params: {}
- name: transaction
  endpoint:
    path: /billing/transactions
    method: POST
    data_selector: transactions
    params: {}
- name: messages
  endpoint:
    path: /communication/communications-messages-overview
    method: GET
    data_selector: messages
    params: {}
- name: messages
  endpoint:
    path: /api/v1/messages
    method: GET
    data_selector: records
    params: {}
- name: Bank Account Processors
  endpoint:
    path: /settings/billing/bank-account-processors
    method: GET
- name: Credit Card Processors
  endpoint:
    path: /settings/billing/credit-card-processors
    method: GET
- name: mass_message
  endpoint:
    path: /communications/mass_message
    method: POST
    data_selector: message
    params: {}
- name: triggered_message
  endpoint:
    path: /communications/triggered_message
    method: POST
    data_selector: message
    params: {}
- name: account_address
  endpoint:
    path: /article/5m48r31ock
    method: GET
- name: account_name
  endpoint:
    path: /article/hi0mo7l0n9
    method: GET
- name: account_number
  endpoint:
    path: /article/hi0mo7l0n9
    method: GET
- name: amount
  endpoint:
    path: /article/wlzdw1kavv
    method: GET
- name: amount_due
  endpoint:
    path: /article/hi0mo7l0n9
    method: GET
- name: amount_due_on_invoice
  endpoint:
    path: /article/wlzdw1kavv
    method: GET
- name: auto_pay_date
  endpoint:
    path: /article/wlzdw1kavv
    method: GET
- name: bad_items
  endpoint:
    path: /article/wlzdw1kavv
    method: GET
- name: company_name
  endpoint:
    path: /article/wlzdw1kavv
    method: GET
- name: contact_email_address
  endpoint:
    path: /article/wlzdw1kavv
    method: GET
- name: contact_name
  endpoint:
    path: /article/wlzdw1kavv
    method: GET
- name: invoice_due_date
  endpoint:
    path: /article/wlzdw1kavv
    method: GET
- name: job_scheduled_datetime
  endpoint:
    path: /article/wlzdw1kavv
    method: GET
- name: next_bill_date
  endpoint:
    path: /article/wlzdw1kavv
    method: GET
- name: tax_creation
  endpoint:
    path: /taxes/create
    method: POST
    data_selector: tax
    params: {}
- name: geo_tax_zone_configuration
  endpoint:
    path: /geo_tax_zones/configure
    method: POST
    data_selector: geo_tax_zone
    params: {}
- name: apply_taxes
  endpoint:
    path: /services/apply_taxes
    method: POST
    data_selector: service_tax_application
    params: {}
- name: tax_overrides
  endpoint:
    path: /accounts/tax_overrides
    method: POST
    data_selector: tax_override
    params: {}
- name: Messaging Categories
  endpoint:
    path: /communication/messaging_categories
    method: POST
    data_selector: categories
    params: {}
- name: Triggered Messages
  endpoint:
    path: /communication/triggered_messages
    method: POST
    data_selector: messages
    params: {}
- name: Account Contacts
  endpoint:
    path: /accounts/contacts
    method: POST
    data_selector: contacts
    params: {}
- name: Usage Based Billing Policy
  endpoint:
    path: /billing/usage-based-billing-policies
    method: GET
    data_selector: policies
- name: Free Period
  endpoint:
    path: /settings/billing/usage_based_billing_policy_free_periods
    method: POST
- name: tax_exemptions
  endpoint:
    path: /tax_exemptions
    method: GET
    data_selector: tax_exemptions
- name: call_logs
  endpoint:
    path: /communications/call_logs
    method: GET
    data_selector: call_logs
- name: mass_messages
  endpoint:
    path: /mass_messages
    method: GET
    data_selector: records
- name: triggered_messages
  endpoint:
    path: /triggered_messages
    method: GET
    data_selector: records
- name: messaging_categories
  endpoint:
    path: /messaging_categories
    method: GET
    data_selector: records
- name: saved_messages
  endpoint:
    path: /saved_messages
    method: GET
    data_selector: records
- name: saved_message_categories
  endpoint:
    path: /saved_message_categories
    method: GET
    data_selector: records
- name: Triggered Email Messages
  endpoint:
    path: /communication/triggered-email-messages
    method: GET
    data_selector: messages
    params: {}
- name: Triggered SMS Messages
  endpoint:
    path: /communication/triggered-sms-messages
    method: GET
    data_selector: messages
    params: {}
- name: mass_message
  endpoint:
    path: /mass_message
    method: POST
    data_selector: messages
- name: triggered_message
  endpoint:
    path: /triggered_message
    method: POST
    data_selector: messages
- name: SMS Messages
  endpoint:
    path: /communications/messages/sms
    method: GET
    data_selector: messages
    params: {}
- name: message_category
  endpoint:
    path: /create_message_category
    method: POST
    data_selector: category_details
- name: triggered_message
  endpoint:
    path: /create_triggered_message
    method: POST
    data_selector: triggered_message_details
- name: account_contact
  endpoint:
    path: /create_account_contact
    method: POST
    data_selector: contact_details
- name: mass_message
  endpoint:
    path: /api/mass_message
    method: POST
    data_selector: message
    params: {}
- name: Phone Number Type
  endpoint:
    path: /communication/phone_number_types
    method: POST
- name: Add Phone Number to Account
  endpoint:
    path: /accounts/{account_id}/phone_numbers
    method: POST
- name: Edit Phone Number in Existing Account
  endpoint:
    path: /contacts/{contact_id}/edit
    method: PUT
- name: company
  endpoint:
    path: /settings/companies
    method: POST
    data_selector: company_info
- name: contract_template
  endpoint:
    path: /api/contract_template
    method: POST
    data_selector: template
    params: {}
- name: contract
  endpoint:
    path: /api/contract
    method: POST
    data_selector: contract_details
    params: {}
- name: invoice_message
  endpoint:
    path: /financial/invoice_messages
    method: POST
    data_selector: invoice_message
- name: triggered_email_messages
  endpoint:
    path: /communication/triggered_email_messages
    method: GET
    data_selector: messages
- name: triggered_sms_messages
  endpoint:
    path: /communication/triggered_sms_messages
    method: GET
    data_selector: messages
- name: invoice
  endpoint:
    path: /invoices
    method: GET
    data_selector: records
- name: company
  endpoint:
    path: /companies
    method: GET
    data_selector: records
- name: bilingual_invoices
  endpoint:
    path: /settings/bilingual_invoices
    method: POST
    data_selector: response
    params: {}
- name: past_due_stamps
  endpoint:
    path: /settings/past_due_stamps
    method: POST
    data_selector: response
    params: {}
- name: sms_messages
  endpoint:
    path: /communications/messages/sms
    method: GET
    data_selector: messages
- name: signatures
  endpoint:
    path: /communications/messages/configure/signatures
    method: GET
    data_selector: signatures
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: company
  endpoint:
    path: /settings/companies
    method: POST
    data_selector: companyInfo
    params:
      incremental: created_at
- name: companies
  endpoint:
    path: /companies
    method: GET
    data_selector: records
- name: billing
  endpoint:
    path: /billing
    method: GET
    data_selector: records
- name: external_marketing_provider
  endpoint:
    path: /api/v1/external_marketing_provider
    method: POST
    data_selector: provider_data
    params: {}
- name: contract_template
  endpoint:
    path: /api/v1/contract_templates
    method: GET
    data_selector: templates
    params: {}
- name: contract
  endpoint:
    path: /api/v1/contracts
    method: POST
    data_selector: contract
    params: {}
- name: invoice_message
  endpoint:
    path: /financial/invoice-messages
    method: POST
    data_selector: invoice_messages
    params: {}
- name: invoices
  endpoint:
    path: /invoices
    method: GET
    data_selector: invoices
    params: {}
- name: billing_defaults
  endpoint:
    path: /billing/defaults
    method: GET
    data_selector: billing_defaults
    params: {}
- name: bilingual_invoices
  endpoint:
    path: /settings/bilingual_invoices
    method: POST
    data_selector: invoices
    params: {}
- name: past_due_stamps
  endpoint:
    path: /settings/past_due_stamps
    method: POST
    data_selector: stamps
    params: {}
- name: account
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /contacts
    method: GET
    data_selector: records
- name: service_location
  endpoint:
    path: /service_locations
    method: GET
    data_selector: records
- name: global_service_definition
  endpoint:
    path: /global_service_definitions
    method: GET
    data_selector: records
- name: account
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: external_marketing_provider
  endpoint:
    path: /create_external_marketing_provider
    method: POST
    data_selector: provider
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: gps_tracking_provider
  endpoint:
    path: /settings/integrations/gps_tracking_providers
    method: GET
- name: vehicles
  endpoint:
    path: /settings/inventory/vehicles
    method: GET
- name: webhook
  endpoint:
    path: /api/webhooks/gocardless/events
    method: POST
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: submissions
  endpoint:
    path: /api/v1/submissions
    method: POST
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: service_locations
  endpoint:
    path: /service/locations
    method: GET
    data_selector: records
- name: customer_records
  endpoint:
    path: /customer/records
    method: GET
    data_selector: records
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
    params: {}
- name: webhooks
  endpoint:
    path: /integrations/webhooks
    method: POST
    data_selector: webhook_data
    params: {}
- name: webhook
  endpoint:
    path: /webhooks
    method: POST
    data_selector: event
    params: {}
- name: FiberMap Plans
  endpoint:
    path: /services/data/vXX.X/sobjects/FiberMapPlans
    method: GET
    data_selector: records
- name: FiberMap Service Locations
  endpoint:
    path: /services/data/vXX.X/sobjects/FiberMapServiceLocations
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Calendar Sync Settings
  endpoint:
    path: /settings/integrations/calendar_sync_settings
    method: GET
    data_selector: sync_settings
    params: {}
- name: User Calendar Integrations
  endpoint:
    path: /user/calendar_integrations
    method: GET
    data_selector: calendar_integrations
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: inventory_items
  endpoint:
    path: /inventory/items
    method: GET
    data_selector: items
- name: generic_inventory_items
  endpoint:
    path: /inventory/generic-items
    method: GET
    data_selector: generic_items
- name: Segmentable Inventory
  endpoint:
    path: /inventory/segmentable-inventory
    method: GET
    data_selector: items
    params: {}
- name: tower_coverage_submissions
  endpoint:
    path: /api/tower-coverage/submissions
    method: POST
    data_selector: submissions
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: inventory
  endpoint:
    path: /inventory
    method: GET
    data_selector: items
- name: inventory_model
  endpoint:
    path: /inventory/models
    method: POST
    data_selector: model
    params: {}
- name: inventory_items
  endpoint:
    path: /inventory/items
    method: POST
    data_selector: item
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: service_locations
  endpoint:
    path: /service_locations
    method: GET
    data_selector: data_records
- name: customer_records
  endpoint:
    path: /customer_records
    method: GET
    data_selector: data_records
- name: FiberMap Plans
  endpoint:
    path: /api/v1/fibermap/plans
    method: GET
    data_selector: data
    params: {}
- name: FiberMap Service Locations
  endpoint:
    path: /api/v1/fibermap/service-locations
    method: GET
    data_selector: data
    params: {}
- name: business_installation
  endpoint:
    path: /jobs/business_installation
    method: POST
    data_selector: job
    params: {}
- name: business_service_call
  endpoint:
    path: /jobs/business_service_call
    method: POST
    data_selector: job
    params: {}
- name: equipment_drop_off
  endpoint:
    path: /jobs/equipment_drop_off
    method: POST
    data_selector: job
    params: {}
- name: equipment_pickup
  endpoint:
    path: /jobs/equipment_pickup
    method: POST
    data_selector: job
    params: {}
- name: infrastructure_service_call
  endpoint:
    path: /jobs/infrastructure_service_call
    method: POST
    data_selector: job
    params: {}
- name: residential_installation
  endpoint:
    path: /jobs/residential_installation
    method: POST
    data_selector: job
    params: {}
- name: residential_service_call
  endpoint:
    path: /jobs/residential_service_call
    method: POST
    data_selector: job
    params: {}
- name: webhooks
  endpoint:
    path: /webhooks
    method: POST
    data_selector: data
    params: {}
- name: geofences
  endpoint:
    path: /geofences
    method: GET
    data_selector: geofences
- name: schedule_availabilities
  endpoint:
    path: /schedule_availabilities
    method: GET
    data_selector: schedule_availabilities
- name: jobs
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /api/accounts
    method: GET
    data_selector: records
- name: job_type
  endpoint:
    path: /api/job-types
    method: GET
    data_selector: jobTypes
    params: {}
- name: Calendar Sync Settings
  endpoint:
    path: /settings/integrations/calendar_sync_settings
    method: GET
    data_selector: sync_settings
    params: {}
- name: Create iCalendar Feed
  endpoint:
    path: /calendar/integrations/create_feed
    method: POST
    data_selector: feed_link
    params: {}
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
    params: {}
- name: inventory_items
  endpoint:
    path: /inventory/items
    method: GET
    data_selector: items
- name: generic_inventory_items
  endpoint:
    path: /inventory/generic-items
    method: GET
    data_selector: items
- name: network_inventory
  endpoint:
    path: /inventory/network-inventory-how-to-usage-guide
    method: GET
- name: segmentable_inventory
  endpoint:
    path: /inventory/segmentable-inventory-how-to-usage-guide
    method: GET
- name: consumable_inventory
  endpoint:
    path: /inventory/tracking-and-using-consumable-inventory
    method: GET
- name: inventory_reorder_report
  endpoint:
    path: /article/0mxec8kr7i#inventory_reorder
    method: GET
- name: Scheduled Address
  endpoint:
    path: /settings/scheduling/schedule_addresses
    method: GET
- name: Schedule Availability
  endpoint:
    path: /settings/scheduling/schedule_availabilities
    method: GET
- name: Schedule Blocker
  endpoint:
    path: /settings/scheduling/schedule_blockers
    method: GET
- name: Schedule Time Off
  endpoint:
    path: /settings/scheduling/schedule_time_off
    method: GET
- name: Geofences
  endpoint:
    path: /settings/scheduling/geofences
    method: GET
- name: Serviceable Addresses
  endpoint:
    path: /serviceable_addresses
    method: GET
    data_selector: elevation_profiles
- name: New Account Creation
  endpoint:
    path: /accounts/create
    method: POST
    data_selector: elevation_profiles
- name: Account Management View
  endpoint:
    path: /accounts/{account_id}/elevation_profile
    method: GET
    data_selector: elevation_profile
- name: Inventory Model
  endpoint:
    path: /inventory/models
    method: POST
    data_selector: model
    params: {}
- name: Items
  endpoint:
    path: /inventory/items
    method: POST
    data_selector: items
    params: {}
- name: Segments
  endpoint:
    path: /inventory/segments
    method: POST
    data_selector: segments
    params: {}
- name: inventory
  endpoint:
    path: /inventory
    method: GET
    data_selector: items
- name: Accounts Filter
  endpoint:
    path: /accounts/filter
    method: GET
    data_selector: accounts
    params: {}
- name: Network Sites Filter
  endpoint:
    path: /network_sites/filter
    method: GET
    data_selector: network_sites
    params: {}
- name: Inventory Locations Filter
  endpoint:
    path: /inventory_locations/filter
    method: GET
    data_selector: inventory_locations
    params: {}
- name: Vehicles Filter
  endpoint:
    path: /vehicles/filter
    method: GET
    data_selector: vehicles
    params: {}
- name: Custom Overlay Filter
  endpoint:
    path: /custom_overlay/filter
    method: GET
    data_selector: custom_overlays
    params: {}
- name: Consumable Items
  endpoint:
    path: /inventory/consumable-items
    method: GET
    data_selector: items
- name: custom_field
  endpoint:
    path: /settings/custom_fields
    method: GET
    data_selector: custom_fields
    params: {}
- name: Business Installation
  endpoint:
    path: /jobs/business-installation
    method: POST
- name: Business Service Call
  endpoint:
    path: /jobs/business-service-call
    method: POST
- name: Equipment Drop-off
  endpoint:
    path: /jobs/equipment-drop-off
    method: POST
- name: Equipment Pickup
  endpoint:
    path: /jobs/equipment-pickup
    method: POST
- name: Infrastructure Service Call
  endpoint:
    path: /jobs/infrastructure-service-call
    method: POST
- name: Residential Installation
  endpoint:
    path: /jobs/residential-installation
    method: POST
- name: Residential Service Call
  endpoint:
    path: /jobs/residential-service-call
    method: POST
- name: task_template
  endpoint:
    path: /api/task_template
    method: GET
    data_selector: templates
    params: {}
- name: geofence
  endpoint:
    path: /geofences
    method: GET
    data_selector: geofences
    params: {}
- name: schedule_availability
  endpoint:
    path: /schedule_availabilities
    method: GET
    data_selector: schedule_availabilities
    params: {}
- name: alerting_rotation
  endpoint:
    path: /alerting/rotation
    method: POST
    data_selector: rotation_details
- name: alerting_rotation_day
  endpoint:
    path: /alerting/rotation/day
    method: POST
    data_selector: rotation_day_details
- name: job_type
  endpoint:
    path: /job-types
    method: POST
    data_selector: job_types
    params: {}
- name: monitoring_template
  endpoint:
    path: /create_network_monitoring_template
    method: POST
    data_selector: template
    params: {}
- name: jobs
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: technician_requirements
  endpoint:
    path: /api/technician_requirements
    method: GET
    data_selector: requirements
    params: {}
- name: job_requirements
  endpoint:
    path: /api/job_requirements
    method: GET
    data_selector: requirements
    params: {}
- name: job_types
  endpoint:
    path: /api/job_types
    method: GET
    data_selector: types
    params: {}
- name: tasks
  endpoint:
    path: /api/tasks
    method: GET
    data_selector: tasks
    params: {}
- name: weekly_summary
  endpoint:
    path: /scheduling/week_view/summary
    method: GET
    data_selector: summary
    params: {}
- name: technicians
  endpoint:
    path: /scheduling/week_view/technicians
    method: GET
    data_selector: technicians
    params: {}
- name: jobs
  endpoint:
    path: /scheduling/week_view/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: scheduled_address
  endpoint:
    path: /settings/scheduling/schedule_addresses
    method: GET
    data_selector: addresses
- name: schedule_availabilities
  endpoint:
    path: /settings/scheduling/schedule_availabilities
    method: GET
    data_selector: availabilities
- name: schedule_blockers
  endpoint:
    path: /settings/scheduling/schedule_blockers
    method: GET
    data_selector: blockers
- name: schedule_time_off
  endpoint:
    path: /settings/scheduling/schedule_time_off
    method: GET
    data_selector: time_off
- name: geofences
  endpoint:
    path: /settings/scheduling/geofences
    method: GET
    data_selector: geofences
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: RADIUS Addresses
  endpoint:
    path: /networking/radius-framed-addresses
    method: GET
- name: RADIUS Addresses
  endpoint:
    path: /networking/radius-framed-addresses
    method: GET
- name: custom_field_creation
  endpoint:
    path: /custom_fields/create
    method: POST
    data_selector: fields
    params: {}
- name: ip_assignment
  endpoint:
    path: /api/v1/ip_assignment
    method: POST
    data_selector: data
    params: {}
- name: Supernets
  endpoint:
    path: /networking/ipam/supernets
    method: POST
    data_selector: supernet
    params: {}
- name: Subnets
  endpoint:
    path: /networking/ipam/subnets
    method: POST
    data_selector: subnet
    params: {}
- name: IP Pools
  endpoint:
    path: /networking/ipam/ip-pools
    method: POST
    data_selector: ip_pool
    params: {}
- name: IP Assignments
  endpoint:
    path: /networking/ipam/ip-assignments
    method: POST
    data_selector: ip_assignment
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: Custom Links
  endpoint:
    path: /custom_links
    method: GET
    data_selector: records
- name: ip_assignment
  endpoint:
    path: /networking/assigning-an-ip-address-using-sonar-s-ipam-how-to
    method: GET
    data_selector: data
    params: {}
- name: data_usage
  endpoint:
    path: /networking/dhcp-delivery
    method: GET
    data_selector: data
    params: {}
- name: task_template
  endpoint:
    path: /settings/misc/task_templates
    method: GET
    data_selector: templates
- name: address_list
  endpoint:
    path: /api/v1/address_lists
    method: GET
    data_selector: address_lists
- name: alerting_rotation
  endpoint:
    path: /alerting_rotations
    method: POST
    data_selector: rotation
    params:
      enabled: true
      name: Descriptive name
      start: '2020-11-02'
      users:
      - Jerry
      - George
      - Jackie
      repetitions: infinite
      weeks_between_repetitions: 3
      warning_minutes_before_first_alert: 0
      warning_minutes_between_successive_alerts: 999999
      down_minutes_before_first_alert: 0
      down_minutes_between_successive_alerts: 999999
      accounts: All Accounts
      network_sites: All Network Sites
      inventory_models: All Inventory Models
- name: alerting_rotation_day
  endpoint:
    path: /alerting_rotation_days
    method: POST
    data_selector: rotation_day
    params:
      alerting_rotation: rotation_id
      day: Monday
      start_time: 00:00
      end_time: 08:00
- name: alerting_rotation_day
  endpoint:
    path: /alerting_rotation_days
    method: POST
    data_selector: rotation_day
    params:
      alerting_rotation: rotation_id
      day: Monday
      start_time: '17:00'
      end_time: '23:59'
- name: RADIUS group
  endpoint:
    path: /networking/radius-groups
    method: POST
    data_selector: groups
    params: {}
- name: device_mapper
  endpoint:
    path: /networking/building-a-device-mapper
    method: GET
    data_selector: records
    params: {}
- name: Device Mappers
  endpoint:
    path: /devices.json
    method: GET
    data_selector: devices
    params: {}
- name: MPSService
  endpoint:
    path: /MPSService
    method: SOAP
    data_selector: searchRecords
    params: {}
- name: DHCPService
  endpoint:
    path: /DHCPService
    method: SOAP
    data_selector: searchRecords
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dhcp
  endpoint:
    path: /api/dhcp
    method: GET
    data_selector: ''
    params: {}
- name: dhcp
  endpoint:
    path: /api/dhcp
    method: GET
    data_selector: ''
    params: {}
- name: RADIUS Addresses
  endpoint:
    path: /networking/radius-framed-addresses
    method: GET
    data_selector: records
    params: {}
- name: dhcp_delivery
  endpoint:
    path: /networking/dhcp-delivery
    method: GET
    data_selector: records
    params: {}
- name: dhcp
  endpoint:
    path: /api/dhcp
    method: GET
    data_selector: response
    params: {}
- name: MIBs
  endpoint:
    path: /download/
    method: GET
- name: IP_Assignment
  endpoint:
    path: /networking/assigning-an-ip-address-using-sonar-s-ipam-how-to
    method: GET
- name: Data_Usage
  endpoint:
    path: /networking/data-usage
    method: GET
- name: ip_assignments
  endpoint:
    path: /api/ip_assignments
    method: GET
    data_selector: records
- name: Delinquent
  endpoint:
    path: /address_lists/delinquent
    method: POST
    data_selector: address_list
    params:
      Account_Status: All account statuses
      Delinquency: Delinquent
- name: Active
  endpoint:
    path: /address_lists/active
    method: POST
    data_selector: address_list
    params:
      Account_Status: Only account statuses that activate an account
- name: Inactive
  endpoint:
    path: /address_lists/inactive
    method: POST
    data_selector: address_list
    params:
      Account_Status: Only account statuses that do not activate an account
- name: DataService
  endpoint:
    path: /address_lists/data_service
    method: POST
    data_selector: address_list
    params:
      Account_Status: All account statuses
      Delinquency: all
- name: Legacy Equipment
  endpoint:
    path: /address_lists/legacy_equipment
    method: POST
    data_selector: address_list
    params:
      Account_Group: Legacy Equipment
- name: supernet
  endpoint:
    path: /create/supernet
    method: POST
    data_selector: supernet_data
    params: {}
- name: subnet
  endpoint:
    path: /create/subnet
    method: POST
    data_selector: subnet_data
    params: {}
- name: ip_pool
  endpoint:
    path: /create/ip_pool
    method: POST
    data_selector: ip_pool_data
    params: {}
- name: DeviceMappers
  endpoint:
    path: /devices.json
    method: GET
    data_selector: devices
- name: supernet
  endpoint:
    path: /supernet
    method: GET
    data_selector: supernets
    params: {}
- name: subnet
  endpoint:
    path: /subnet
    method: GET
    data_selector: subnets
    params: {}
- name: ip_pool
  endpoint:
    path: /ip_pool
    method: GET
    data_selector: ip_pools
    params: {}
- name: ip_assignment
  endpoint:
    path: /ip_assignment
    method: GET
    data_selector: ip_assignments
    params: {}
- name: MPS
  endpoint:
    path: /MPSService
    method: POST
    data_selector: searchRecords
    params: {}
- name: DHCP
  endpoint:
    path: /DHCPService
    method: POST
    data_selector: searchRecords
    params: {}
- name: lte_provider
  endpoint:
    path: /settings/networking/lte_provider
    method: POST
- name: lte_epc
  endpoint:
    path: /settings/network/lte_epcs
    method: POST
- name: Inline Device
  endpoint:
    path: /networking/inline-devices
    method: POST
    data_selector: devices
    params: {}
- name: Address Lists
  endpoint:
    path: /networking/address-lists
    method: POST
    data_selector: lists
    params: {}
- name: RADIUS Server
  endpoint:
    path: /networking/radius-servers
    method: POST
    data_selector: servers
    params: {}
- name: RADIUS Groups
  endpoint:
    path: /networking/radius-groups
    method: POST
    data_selector: groups
    params: {}
- name: LTE Providers
  endpoint:
    path: /networking/lte-providers
    method: POST
    data_selector: providers
    params: {}
- name: Cable Modem Provisioning
  endpoint:
    path: /networking/cable-modem-provisioning
    method: POST
    data_selector: provisioning
    params: {}
- name: API & Webhooks
  endpoint:
    path: /networking/api-webhooks
    method: POST
    data_selector: webhooks
    params: {}
- name: dhcp_assignment
  endpoint:
    path: /api/dhcp
    method: POST
    data_selector: ''
    params: {}
- name: filter_rule
  endpoint:
    path: /ip/firewall/filter
    method: POST
    data_selector: rules
    params: {}
- name: web_proxy
  endpoint:
    path: /ip/web-proxy
    method: POST
    data_selector: proxies
    params: {}
- name: nat_rule
  endpoint:
    path: /ip/firewall/nat
    method: POST
    data_selector: nat_rules
    params: {}
- name: dhcp
  endpoint:
    path: /api/dhcp
    method: GET
    data_selector: ''
    params: {}
- name: controlling_speeds
  endpoint:
    path: /networking/mikro-tik-controlling-speeds
    method: GET
- name: dhcp
  endpoint:
    path: /api/dhcp
    method: GET
    data_selector: response
    params: {}
- name: connection_marks
  endpoint:
    path: /api/connection_marks
    method: POST
    data_selector: records
    params: {}
- name: packet_marks
  endpoint:
    path: /api/packet_marks
    method: POST
    data_selector: records
    params: {}
- name: pcq
  endpoint:
    path: /api/pcq
    method: POST
    data_selector: records
    params: {}
- name: RADIUS Accounting
  endpoint:
    path: /radius/accounting
    method: GET
- name: Netflow Endpoints
  endpoint:
    path: /netflow/endpoints
    method: GET
- name: Preseem
  endpoint:
    path: /preseem
    method: GET
- name: PacketLogic
  endpoint:
    path: /packetlogic
    method: GET
- name: SaiSei
  endpoint:
    path: /saisei
    method: GET
- name: API
  endpoint:
    path: /api
    method: GET
- name: MIBs
  endpoint:
    path: /download/snmps
    method: GET
- name: Netflow On-Premises
  endpoint:
    path: /api/netflow/onprem
    method: POST
    data_selector: data
    params: {}
- name: Network Sites
  endpoint:
    path: /network/sites
    method: GET
    data_selector: network_sites
    params: {}
- name: Setup IPAM
  endpoint:
    path: /article/zbi7n08dkr-ipam-policy-best-practices
- name: MikroTik DHCP Server Integration
  endpoint:
    path: /networking/setting-up-a-sonar-controlled-mikro-tik-dhcp-server
- name: RADIUS Integration
  endpoint:
    path: /article/bb2o8yz9rs-radius-integration-with-sonar
- name: DHCP Batcher Setup
  endpoint:
    path: /networking/setting-up-a-dhcp-batcher
- name: Sonar IP Addressing
  endpoint:
    path: /networking/sonar-ip-addressing
- name: Assigning an IP Address Using Sonar's IPAM
  endpoint:
    path: /networking/assigning-an-ip-address-using-sonar-s-ipam-how-to
- name: DHCP Delivery
  endpoint:
    path: /networking/dhcp-delivery
- name: network
  endpoint:
    path: /api/network
    method: GET
    data_selector: records
- name: Network Site
  endpoint:
    path: /network/sites
    method: GET
    data_selector: networkSites
- name: Supernet
  endpoint:
    path: /create_supernet
    method: POST
    data_selector: supernet
    params: {}
- name: Subnet
  endpoint:
    path: /create_subnet
    method: POST
    data_selector: subnet
    params: {}
- name: IP Pool
  endpoint:
    path: /create_ip_pool
    method: POST
    data_selector: ip_pool
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: supernet
  endpoint:
    path: /supernet
    method: GET
    data_selector: supernets
- name: subnet
  endpoint:
    path: /subnet
    method: GET
    data_selector: subnets
- name: ip_pool
  endpoint:
    path: /ip_pool
    method: GET
    data_selector: ip_pools
- name: ip_assignment
  endpoint:
    path: /ip_assignment
    method: GET
    data_selector: ip_assignments
- name: inline_device
  endpoint:
    path: /settings/networking/inline_devices
    method: POST
    data_selector: device
    params: {}
- name: lte_provider
  endpoint:
    path: /api/lte_provider
    method: POST
    data_selector: data
- name: lte_epc
  endpoint:
    path: /api/lte_epc
    method: POST
    data_selector: data
- name: ICMP Metrics
  endpoint:
    path: /icmp/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: SNMP Metrics
  endpoint:
    path: /snmp/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: radius_server
  endpoint:
    path: /services/data/vXX.X/sobjects/RADIUS
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: Gold Internet Rate Limit
  endpoint:
    path: /networking/radius-groups
    method: POST
    data_selector: response
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: drop_traffic
  endpoint:
    path: /IP/Firewall/FilterRules
    method: POST
    data_selector: rules
    params:
      Src.Address.List: Delinquent
      Action: Drop
      Comment: Drop all Delinquent Traffic
- name: redirect_traffic
  endpoint:
    path: /IP/WebProxy
    method: POST
    data_selector: web_proxy_rules
    params:
      Enabled: true
      Port: 16099
      Dst.Host: customer_portal_url
      Action: allow
- name: allow_web_proxy
  endpoint:
    path: /IP/Firewall
    method: POST
    data_selector: firewall_rules
    params:
      Chain: input
      Protocol: 6 (tcp)
      Dst.Port: 16099
      Action: accept
      Comment: Allow to Web Proxy
- name: delinquent_forward
  endpoint:
    path: /IP/Firewall
    method: POST
    data_selector: firewall_rules
    params:
      Src.Address.List: Delinquent
      Action: jump
      Jump.Target: delinquent
      Comment: Delinquent Forward to Web Proxy
- name: allow_dns
  endpoint:
    path: /IP/Firewall
    method: POST
    data_selector: firewall_rules
    params:
      Chain: delinquent
      Protocol: udp
      Dst.Port: '53'
      Src.Address.List: Delinquent
      Action: accept
      Comment: Allow DNS to Delinquent
- name: allow_https
  endpoint:
    path: /IP/Firewall
    method: POST
    data_selector: firewall_rules
    params:
      Chain: delinquent
      Protocol: 6 (tcp)
      Dst.Port: 443
      Src.Address.List: Delinquent
      Action: accept
      Comment: Allow HTTPS to Delinquent
- name: nat_redirect
  endpoint:
    path: /IP/NAT
    method: POST
    data_selector: nat_rules
    params:
      Chain: dstnat
      Protocol: 6 (tcp)
      Dst.Port: 80
      Src.Address.List: Delinquent
      Action: Redirect
      To.Ports: 16099
- name: example_resource
  endpoint:
    path: /api/v1/example
    method: GET
    data_selector: data
    params: {}
- name: connection_marks
  endpoint:
    path: /article/wrg17quilg-building-address-lists
    method: POST
    data_selector: rules
    params: {}
- name: packet_marks
  endpoint:
    path: /article/wrg17quilg-building-address-lists
    method: POST
    data_selector: marks
    params: {}
- name: pcq_queue_types
  endpoint:
    path: /article/wrg17quilg-building-address-lists
    method: POST
    data_selector: queue_types
    params: {}
- name: Purchase Orders
  endpoint:
    path: /purchase_orders
    method: GET
    data_selector: orders
    params: {}
- name: Vendors
  endpoint:
    path: /vendors
    method: GET
    data_selector: vendors
    params: {}
- name: Non-Inventory Items
  endpoint:
    path: /non_inventory_items
    method: GET
    data_selector: non_inventory_items
    params: {}
- name: purchase_order
  endpoint:
    path: /purchase_orders
    method: POST
    data_selector: purchaseOrders
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: billing
  endpoint:
    path: /api/v1/billing
    method: GET
    data_selector: data
    params: {}
- name: release_notes_2025
  endpoint:
    path: /archive-release-notes/2025
    method: GET
    data_selector: release_notes
    params: {}
- name: release_notes_2024
  endpoint:
    path: /archive-release-notes/2024
    method: GET
    data_selector: release_notes
    params: {}
- name: release_notes_2023
  endpoint:
    path: /archive-release-notes/2023
    method: GET
    data_selector: release_notes
    params: {}
- name: release_notes_2022
  endpoint:
    path: /archive-release-notes/2022
    method: GET
    data_selector: release_notes
    params: {}
- name: release_notes_2021
  endpoint:
    path: /archive-release-notes/2021
    method: GET
    data_selector: release_notes
    params: {}
- name: release_notes_2020
  endpoint:
    path: /archive-release-notes/2020
    method: GET
    data_selector: release_notes
    params: {}
- name: network_site
  endpoint:
    path: /api/network_sites
    method: GET
    data_selector: records
- name: connected_devices
  endpoint:
    path: /api/network_sites/connected_devices
    method: GET
    data_selector: records
- name: tickets
  endpoint:
    path: /api/network_sites/tickets
    method: GET
    data_selector: records
- name: jobs
  endpoint:
    path: /api/network_sites/jobs
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /api/network_sites/contacts
    method: GET
    data_selector: records
- name: custom_fields
  endpoint:
    path: /api/network_sites/custom_fields
    method: GET
    data_selector: records
- name: inline_device
  endpoint:
    path: /settings/networking/inline_devices
    method: POST
    data_selector: device
- name: CustomFieldData
  endpoint:
    path: /customFieldData
    method: GET
    data_selector: records
    params: {}
- name: CustomFields
  endpoint:
    path: /customFieldData/CustomFields
    method: GET
    data_selector: records
    params: {}
- name: CustomFieldData1
  endpoint:
    path: /customFieldData1
    method: GET
    data_selector: records
    params: {}
- name: CustomFieldData2
  endpoint:
    path: /customFieldData2
    method: GET
    data_selector: records
    params: {}
- name: CustomFieldData3
  endpoint:
    path: /customFieldData3
    method: GET
    data_selector: records
    params: {}
- name: CustomFieldData4
  endpoint:
    path: /customFieldData4
    method: GET
    data_selector: records
    params: {}
- name: CustomFieldData5
  endpoint:
    path: /customFieldData5
    method: GET
    data_selector: records
    params: {}
- name: report_licenses
  endpoint:
    path: /report/licenses
    method: GET
    data_selector: licenses
    params: {}
- name: icmp_metrics
  endpoint:
    path: /icmp/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: snmp_metrics
  endpoint:
    path: /snmp/metrics
    method: GET
    data_selector: metrics
    params: {}
- name: nas_configuration
  endpoint:
    path: /api/nas/configuration
    method: POST
    data_selector: nas_entries
    params: {}
- name: remote_access
  endpoint:
    path: /api/mysql/remote_access
    method: POST
    data_selector: remote_users
    params: {}
- name: account_churn
  endpoint:
    path: /api/v1/accounts/churn
    method: GET
    data_selector: data
    params: {}
- name: account_detail
  endpoint:
    path: /api/v1/accounts/detail
    method: GET
    data_selector: data
    params: {}
- name: account_issues
  endpoint:
    path: /api/v1/accounts/issues
    method: GET
    data_selector: data
    params: {}
- name: activations_disconnections
  endpoint:
    path: /api/v1/accounts/activations_disconnections
    method: GET
    data_selector: data
    params: {}
- name: billing_defaults_parameters
  endpoint:
    path: /api/v1/billing/defaults_parameters
    method: GET
    data_selector: data
    params: {}
- name: call_logs
  endpoint:
    path: /api/v1/calls/logs
    method: GET
    data_selector: data
    params: {}
- name: data_usage_services
  endpoint:
    path: /api/v1/data/usage_services
    method: GET
    data_selector: data
    params: {}
- name: email
  endpoint:
    path: /api/v1/emails
    method: GET
    data_selector: data
    params: {}
- name: inventory
  endpoint:
    path: /api/v1/inventory
    method: GET
    data_selector: data
    params: {}
- name: inventory_movement
  endpoint:
    path: /api/v1/inventory/movement
    method: GET
    data_selector: data
    params: {}
- name: inventory_purchasing
  endpoint:
    path: /api/v1/inventory/purchasing
    method: GET
    data_selector: data
    params: {}
- name: inventory_reorder
  endpoint:
    path: /api/v1/inventory/reorder
    method: GET
    data_selector: data
    params: {}
- name: ip_assignments
  endpoint:
    path: /api/v1/ip/assignments
    method: GET
    data_selector: data
    params: {}
- name: RADIUS Group
  endpoint:
    path: /networking/radius-groups
    method: POST
    data_selector: group
    params: {}
- name: RADIUS Group Reply Attribute
  endpoint:
    path: /networking/radius-group-reply-attributes
    method: POST
    data_selector: replyAttribute
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: TENANT_DATA_SNOWPIPE
  endpoint:
    path: /services/data/vXX.X/sobjects/TENANT_DATA_SNOWPIPE
    method: GET
- name: PUBLIC
  endpoint:
    path: /services/data/vXX.X/sobjects/PUBLIC
    method: GET
- name: purchase_orders
  endpoint:
    path: /purchase-orders/purchase-orders-overview-and-usage
    method: GET
    data_selector: records
- name: Purchase Orders
  endpoint:
    path: /purchase-orders
    method: GET
    data_selector: purchase_orders
    params: {}
- name: Vendors
  endpoint:
    path: /vendors
    method: GET
    data_selector: vendors
    params: {}
- name: Non-Inventory Items
  endpoint:
    path: /non-inventory-items
    method: GET
    data_selector: non_inventory_items
    params: {}
- name: purchase_order
  endpoint:
    path: /api/purchase_orders
    method: POST
    data_selector: purchase_order
    params: {}
- name: role_creation
  endpoint:
    path: /security/role-creation-using-graphi-ql
    method: POST
- name: release_notes_2025
  endpoint:
    path: /archive-release-notes/2025
    method: GET
    data_selector: release_notes
    params: {}
- name: release_notes_2024
  endpoint:
    path: /archive-release-notes/2024
    method: GET
    data_selector: release_notes
    params: {}
- name: release_notes_2023
  endpoint:
    path: /archive-release-notes/2023
    method: GET
    data_selector: release_notes
    params: {}
- name: release_notes_2022
  endpoint:
    path: /archive-release-notes/2022
    method: GET
    data_selector: release_notes
    params: {}
- name: release_notes_2021
  endpoint:
    path: /archive-release-notes/2021
    method: GET
    data_selector: release_notes
    params: {}
- name: release_notes_2020
  endpoint:
    path: /archive-release-notes/2020
    method: GET
    data_selector: release_notes
    params: {}
- name: CustomFieldData
  endpoint:
    path: /customFieldData
    method: GET
    data_selector: records
- name: CustomFields
  endpoint:
    path: /customFieldData/CustomFields
    method: GET
    data_selector: records
- name: CustomFieldData1
  endpoint:
    path: /customFieldData1
    method: GET
    data_selector: records
- name: CustomFieldData2
  endpoint:
    path: /customFieldData2
    method: GET
    data_selector: records
- name: CustomFieldData3
  endpoint:
    path: /customFieldData3
    method: GET
    data_selector: records
- name: CustomFieldData4
  endpoint:
    path: /customFieldData4
    method: GET
    data_selector: records
- name: CustomFieldData5
  endpoint:
    path: /customFieldData5
    method: GET
    data_selector: records
- name: Account Churn Status Changes
  endpoint:
    path: /reports/account_churn_status_changes
    method: GET
    data_selector: data
    params: {}
- name: Account Detail
  endpoint:
    path: /reports/account_detail
    method: GET
    data_selector: data
    params: {}
- name: Account Issues
  endpoint:
    path: /reports/account_issues
    method: GET
    data_selector: data
    params: {}
- name: Activations & Disconnections
  endpoint:
    path: /reports/activations_disconnections
    method: GET
    data_selector: data
    params: {}
- name: Billing Defaults & Parameters
  endpoint:
    path: /reports/billing_defaults_parameters
    method: GET
    data_selector: data
    params: {}
- name: Call Logs
  endpoint:
    path: /reports/call_logs
    method: GET
    data_selector: data
    params: {}
- name: Data Usage and Services
  endpoint:
    path: /reports/data_usage_services
    method: GET
    data_selector: data
    params: {}
- name: Email
  endpoint:
    path: /reports/email
    method: GET
    data_selector: data
    params: {}
- name: Inventory
  endpoint:
    path: /reports/inventory
    method: GET
    data_selector: data
    params: {}
- name: Inventory Movement
  endpoint:
    path: /reports/inventory_movement
    method: GET
    data_selector: data
    params: {}
- name: Inventory Purchasing
  endpoint:
    path: /reports/inventory_purchasing
    method: GET
    data_selector: data
    params: {}
- name: Inventory Reorder
  endpoint:
    path: /reports/inventory_reorder
    method: GET
    data_selector: data
    params: {}
- name: IP Assignments
  endpoint:
    path: /reports/ip_assignments
    method: GET
    data_selector: data
    params: {}
- name: TENANT_DATA_SNOWPIPE
  endpoint:
    path: /TENANT_DATA_SNOWPIPE
    method: GET
    data_selector: records
    params: {}
- name: PUBLIC
  endpoint:
    path: /PUBLIC
    method: GET
    data_selector: records
    params: {}
- name: support_agent
  endpoint:
    path: /createRole
    method: mutation
    data_selector: createRole
    params:
      supportAgent:
        name: Support Agent
        applied_permissions:
        - READ_ALL_INVENTORY
        - ASSIGN_ACCOUNT_INVENTORY
        - MODIFY_ACCOUNT_SERVICES
        - UPDATE_ACCOUNT_SERVICE_PARAMETERS
        - UPDATE_ACCOUNT_BILLING_PARAMETERS
        - CREATE_ACCOUNT_TRANSACTIONS
        - READ_ACCOUNT_TRANSACTIONS
        - UPDATE_ACCOUNT_TRANSACTIONS
        - REVERSE_ACCOUNT_TRANSACTIONS
        - CREATE_ACCOUNT
        - READ_ACCOUNT
        - UPDATE_ACCOUNT
        - READ_ACCOUNT_GROUP
        - READ_ACCOUNT_STATUS
        - READ_ACCOUNT_TYPE
        - CREATE_SERVICEABLE_ADDRESS
        - READ_ADDRESS_LIST
        - READ_SERVICEABLE_ADDRESS
        - UPDATE_SERVICEABLE_ADDRESS
        - READ_BILLING_DEFAULT
        - READ_CALL_LOG
        - READ_CANNED_REPLY
        - CREATE_CALL_LOG
        - UPDATE_CALL_LOG
        - UPDATE_CANNED_REPLY
        - CREATE_CANNED_REPLY
        - CREATE_CONTACT
        - UPDATE_CONTACT
        - DELETE_CONTACT
        - READ_CONTRACT
        - CREATE_CUSTOM_FIELD
        - READ_CUSTOM_FIELD
        - UPDATE_CUSTOM_FIELD
        - DELETE_CUSTOM_FIELD
        - READ_DATA_USAGE_HISTORY
        - UPDATE_DATA_USAGE_HISTORY
        - CREATE_EMAIL_MESSAGE
        - READ_EMAIL_MESSAGE
        - UPDATE_EMAIL_MESSAGE
        - CREATE_INVENTORY_ITEM
        - UPDATE_INVENTORY_ITEM
        - DELETE_INVENTORY_ITEM
        - READ_JOB
        - UPDATE_JOB
        - CREATE_JOB
        - DELETE_JOB
        - READ_JOB_TYPE
        - READ_MASS_EMAIL
        - READ_NETWORK_SITE
        - CREATE_NOTE
        - UPDATE_NOTE
        - DELETE_NOTE
        - READ_PACKAGE
        - UPDATE_PACKAGE
        - CREATE_PACKAGE
        - READ_PAYMENT_PROCESSOR
        - CREATE_PAYMENT_METHOD
        - READ_PAYMENT_METHOD
        - UPDATE_PAYMENT_METHOD
        - DELETE_PAYMENT_METHOD
        - CREATE_PAYMENT
        - READ_RADIUS_ACCOUNT
        - CREATE_RADIUS_ACCOUNT
        - UPDATE_RADIUS_ACCOUNT
        - READ_SCHEDULED_EVENT
        - UPDATE_SCHEDULED_EVENT
        - CREATE_SCHEDULED_EVENT
        - READ_SERVICE
        - READ_TICKET
        - CREATE_TICKET
        - UPDATE_TICKET
        - READ_TICKET_CATEGORY
        - CREATE_FILE
        - UPDATE_FILE
        - DELETE_FILE
        - READ_FILE
        - REFUND_PAYMENTS
        - CREATE_DATA_USAGE_TOP_OFF
        - READ_INBOUND_MAILBOX
        - UPDATE_ACCOUNT_LINK
        - READ_NETWORK_SITE_SERVICEABLE_ADDRESS_LIST
- name: sales_agent
  endpoint:
    path: /createRole
    method: mutation
    data_selector: createRole
    params:
      salesAgent:
        name: Sales Agent
        applied_permissions:
        - ASSIGN_ACCOUNT_INVENTORY
        - READ_ALL_INVENTORY
        - MODIFY_ACCOUNT_SERVICES
        - UPDATE_ACCOUNT_SERVICE_PARAMETERS
        - UPDATE_ACCOUNT_BILLING_PARAMETERS
        - CREATE_ACCOUNT_TRANSACTIONS
        - READ_ACCOUNT_TRANSACTIONS
        - UPDATE_ACCOUNT_TRANSACTIONS
        - REVERSE_ACCOUNT_TRANSACTIONS
        - CREATE_ACCOUNT
        - READ_ACCOUNT
        - UPDATE_ACCOUNT
        - READ_ACCOUNT_GROUP
        - READ_ACCOUNT_STATUS
        - READ_ACCOUNT_TYPE
        - CREATE_SERVICEABLE_ADDRESS
        - READ_SERVICEABLE_ADDRESS
        - UPDATE_SERVICEABLE_ADDRESS
        - DELETE_SERVICEABLE_ADDRESS
        - READ_CALL_LOG
        - CREATE_CALL_LOG
        - UPDATE_CALL_LOG
        - READ_CANNED_REPLY
        - CREATE_CONTACT
        - UPDATE_CONTACT
        - DELETE_CONTACT
        - READ_CONTRACT
        - UPDATE_CONTRACT
        - CREATE_CONTRACT
        - DELETE_CONTRACT
        - READ_CONTRACT_TEMPLATE
        - READ_CUSTOM_FIELD
        - CREATE_FILE
        - UPDATE_FILE
        - READ_FILE
        - READ_JOB
        - UPDATE_JOB
        - CREATE_JOB
        - DELETE_JOB
        - READ_JOB_TYPE
        - CREATE_NOTE
        - UPDATE_NOTE
        - DELETE_NOTE
        - READ_PACKAGE
        - READ_PAYMENT_PROCESSOR
        - CREATE_PAYMENT_METHOD
        - READ_PAYMENT_METHOD
        - UPDATE_PAYMENT_METHOD
        - DELETE_PAYMENT_METHOD
        - CREATE_PAYMENT
        - READ_RADIUS_ACCOUNT
        - CREATE_RADIUS_ACCOUNT
        - UPDATE_RADIUS_ACCOUNT
        - READ_SCHEDULED_EVENT
        - UPDATE_SCHEDULED_EVENT
        - CREATE_SCHEDULED_EVENT
        - READ_SERVICE
        - READ_TICKET
        - CREATE_TICKET
        - UPDATE_TICKET
        - READ_TICKET_CATEGORY
        - UPDATE_ACCOUNT_LINK
        - REFUND_PAYMENTS
        - UPDATE_SERVICEABLE_ADDRESS
        - READ_NETWORK_SITE_SERVICEABLE_ADDRESS_LIST
- name: field_technician
  endpoint:
    path: /createRole
    method: mutation
    data_selector: createRole
    params:
      fieldTech:
        name: Field Technician
        applied_permissions:
        - UPDATE_TASK
        - CREATE_NOTE
        - UPDATE_NOTE
        - DELETE_NOTE
        - READ_FILE
        - CREATE_FILE
        - UPDATE_FILE
        - DELETE_FILE
        - CHECK_IN_OWN_JOB
        - COMPLETE_OWN_JOB
        - MODIFY_ACCOUNT_SERVICES
        - CREATE_PAYMENT_METHOD
        - CREATE_ACCOUNT_TRANSACTIONS
        - CREATE_PAYMENT
        - ASSIGN_ACCOUNT_INVENTORY
        - CREATE_IP_ASSIGNMENT
        - CREATE_RADIUS_ACCOUNT
        - READ_ACCOUNT
        - READ_PAYMENT_METHOD
        - READ_ACCOUNT_TRANSACTIONS
        - READ_ALL_INVENTORY
        - READ_IP_ASSIGNMENT
        - READ_RADIUS_ACCOUNT
        - READ_SCHEDULED_EVENT
        - READ_CONTRACT
        - UPDATE_ACCOUNT
        - UPDATE_PAYMENT_METHOD
        - UPDATE_IP_ASSIGNMENT
        - UPDATE_RADIUS_ACCOUNT
        - DELETE_IP_ASSIGNMENT
        - DELETE_RADIUS_ACCOUNT
        - CREATE_INVENTORY_ITEM
        - UPDATE_INVENTORY_ITEM
        - READ_NETWORK_SITE
        - READ_NETWORK_MONITORING_TEMPLATE
        - READ_ALERTING_ROTATION
        - READ_JOB
        - UPDATE_JOB
        - CREATE_TICKET
        - READ_TICKET
        - UPDATE_TICKET
        - READ_SERVICE
        - READ_SERVICEABLE_ADDRESS
        - READ_INLINE_DEVICE
        - READ_PACKAGE
        - READ_PHONE_NUMBER_TYPE
        - READ_DHCP_SERVER
        - REVERSE_ACCOUNT_TRANSACTIONS
        - DELETE_ACCOUNT_TRANSACTIONS
        - UPDATE_DRIVERS
        - READ_CALENDAR
        - CREATE_CALENDAR
        - UPDATE_CALENDAR
        - DELETE_CALENDAR
- name: customer_portal_user
  endpoint:
    path: /createRole
    method: mutation
    data_selector: createRole
    params:
      customer_portal:
        name: Customer Portal
        applied_permissions:
        - READ_DATA_USAGE_HISTORY
        - CREATE_TICKET
        - READ_TICKET
        - UPDATE_TICKET
        - CREATE_PAYMENT_METHOD
        - CREATE_PAYMENT
        - READ_ACCOUNT
        - READ_PAYMENT_METHOD
        - READ_ACCOUNT_TRANSACTIONS
        - READ_CONTRACT
        - UPDATE_PAYMENT_METHOD
        - UPDATE_ACCOUNT_TRANSACTIONS
        - CREATE_CONTACT
        - UPDATE_CONTACT
        - DELETE_CONTACT
        - UPDATE_CONTRACT
        - DELETE_PAYMENT_METHOD
        - CREATE_ACCOUNT_TRANSACTIONS
        - READ_INVOICE_ATTACHMENT
        - READ_INVOICE_MESSAGE
        - READ_SERVICE
        - CREATE_DATA_USAGE_TOP_OFF
        - READ_PACKAGE
        - MODIFY_ACCOUNT_SERVICES
        - READ_PAYMENT_PROCESSOR
        - UPDATE_ACCOUNT
        - READ_INBOUND_MAILBOX
        note:
          message: Customer Portal
          priority: NORMAL
- name: read_only_user
  endpoint:
    path: /createRole
    method: mutation
    data_selector: createRole
    params:
      read_only:
        name: Read-only
        applied_permissions:
        - READ_ACCESS_LOG
        - READ_ACCOUNT
        - READ_ACCOUNT_GROUP
        - READ_ACCOUNT_REPORTS
        - READ_ACCOUNT_STATUS
        - READ_ACCOUNT_TRANSACTIONS
        - READ_ACCOUNT_TYPE
        - READ_ACH_BATCH
        - READ_ADDRESS_LIST
        - READ_ALERTING_ROTATION
        - READ_ALL_INVENTORY
        - READ_ALL_LOGS
        - READ_APPLICATION_FIREWALL_RULE
        - READ_BILLING_DEFAULT
        - READ_CABLE_MODEM_PROVISIONER
        - READ_CALL_DETAIL_RECORD
        - READ_CALL_DETAIL_RECORD_IMPORT
        - READ_CALL_LOG
        - READ_CANNED_REPLY
        - READ_CONTRACT
        - READ_CONTRACT_TEMPLATE
        - READ_CUSTOM_FIELD
        - READ_DAILY_AGGREGATE_VALUES
        - READ_DATA_USAGE_HISTORY
        - READ_DELINQUENCY_EXCLUSION
        - READ_DEPOSIT_SLIP
        - READ_DHCP_SERVER
        - READ_DID
        - READ_DID_ASSIGNMENT
        - READ_MESSAGE_CATEGORY
        - READ_EMAIL_DOMAIN
        - READ_EMAIL_MESSAGE
        - READ_EXTERNAL_MARKETING
        - READ_FCC_FORM_477_REPORT
        - READ_FILE
        - READ_FINANCIAL_REPORTS
        - READ_GENERAL_LEDGER_CODE
        - READ_GEOFENCE
        - READ_GPS_TRACKING_PROVIDER
        - READ_INBOUND_MAILBOX
        - READ_INLINE_DEVICE
        - READ_INVOICE_ATTACHMENT
        - READ_INVOICE_MESSAGE
        - READ_IP_ASSIGNMENT
        - READ_JOB
        - READ_JOB_TYPE
        - READ_LIMITED_INVENTORY
        - READ_LTE_PROVIDER
        - READ_MASS_EMAIL
        - READ_NETFLOW_ENDPOINT
        - READ_NETWORK_MONITORING_TEMPLATE
        - READ_NETWORK_SITE
        - READ_NON_INVENTORY_ITEM
        - READ_PACKAGE
        - READ_PAYMENT_METHOD
        - READ_PAYMENT_PROCESSOR
        - READ_PHONE_NUMBER_TYPE
        - READ_POLLER
        - READ_PRINTED_INVOICE_BATCH
        - READ_RADIUS_ACCOUNT
        - READ_RADIUS_GROUP
        - READ_RADIUS_SERVER
        - READ_SCHEDULED_EVENT
        - READ_SCHEDULE_ADDRESS
        - READ_SCHEDULE_AVAILABILITY
        - READ_SCHEDULE_BLOCKER
        - READ_SCHEDULE_TIME_OFF
        - READ_SEARCH_FILTER
        - READ_SERVICE
        - READ_SERVICEABLE_ADDRESS
        - READ_SNMP_OVERRIDE
        - READ_TASK_TEMPLATE
        - READ_TAX
        - READ_TAX_EXEMPTION
        - READ_TAX_PROVIDER
        - READ_TICKET
        - READ_TICKET_CATEGORY
        - READ_TICKET_GROUP
        - READ_TIMESERIES_DATA
        - READ_TOWERCOVERAGE_CONFIGURATION
        - READ_TOWERCOVERAGE_SUBMISSION
        - READ_TRIGGERED_EMAIL
        - READ_UNINVENTORIED_MAC_ADDRESS
        - READ_VENDOR
        - READ_VENDOR_ITEM
        - READ_VOICE_PROVIDER
        - READ_VOICE_PROVIDER_RATE
        - READ_VOICE_PROVIDER_RATE_IMPORT
        - READ_WEBHOOK_ENDPOINT
        - READ_WEBHOOK_ENDPOINT_EVENT
        note:
          message: Read Only
          priority: NORMAL
- name: user_roles
  endpoint:
    path: /api/user_roles
    method: GET
    data_selector: roles
    params: {}
- name: roles
  endpoint:
    path: /security/roles
    method: GET
    data_selector: roles
    params: {}
- name: user
  endpoint:
    path: /api/v1/users
    method: GET
    data_selector: users
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: POST
    data_selector: data
    params: {}
- name: Payment Details
  endpoint:
    path: /billing/payment-details
    method: GET
    data_selector: details
    params: {}
- name: Invoices
  endpoint:
    path: /billing/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: Transactions
  endpoint:
    path: /billing/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: disbursement_history
  endpoint:
    path: /sonarPay/disbursement_history
    method: GET
    data_selector: disbursement_records
- name: disbursement_details
  endpoint:
    path: /sonarPay/disbursement_details
    method: GET
    data_selector: disbursement_detail_records
- name: chargebacks_and_disputes
  endpoint:
    path: /sonar-pay/chargebacks-and-disputes
    method: GET
- name: Disbursement History
  endpoint:
    path: /sonarPay/disbursement-history
    method: GET
    data_selector: disbursements
    params: {}
- name: Disbursement Report
  endpoint:
    path: /reports/sonarPay-disbursements
    method: GET
    data_selector: reports
    params: {}
- name: support_agent
  endpoint:
    path: /createRole
    method: POST
    data_selector: createRole
    params:
      input:
        name: Support Agent
        applied_permissions:
        - READ_ALL_INVENTORY
        - ASSIGN_ACCOUNT_INVENTORY
        - MODIFY_ACCOUNT_SERVICES
        - UPDATE_ACCOUNT_SERVICE_PARAMETERS
        - UPDATE_ACCOUNT_BILLING_PARAMETERS
        - CREATE_ACCOUNT_TRANSACTIONS
        - READ_ACCOUNT_TRANSACTIONS
        - UPDATE_ACCOUNT_TRANSACTIONS
        - REVERSE_ACCOUNT_TRANSACTIONS
        - CREATE_ACCOUNT
        - READ_ACCOUNT
        - UPDATE_ACCOUNT
        - READ_ACCOUNT_GROUP
        - READ_ACCOUNT_STATUS
        - READ_ACCOUNT_TYPE
        - CREATE_SERVICEABLE_ADDRESS
        - READ_ADDRESS_LIST
        - READ_SERVICEABLE_ADDRESS
        - UPDATE_SERVICEABLE_ADDRESS
        - READ_BILLING_DEFAULT
        - READ_CALL_LOG
        - READ_CANNED_REPLY
        - CREATE_CALL_LOG
        - UPDATE_CALL_LOG
        - UPDATE_CANNED_REPLY
        - CREATE_CANNED_REPLY
        - CREATE_CONTACT
        - UPDATE_CONTACT
        - DELETE_CONTACT
        - READ_CONTRACT
        - CREATE_CUSTOM_FIELD
        - READ_CUSTOM_FIELD
        - UPDATE_CUSTOM_FIELD
        - DELETE_CUSTOM_FIELD
        - READ_DATA_USAGE_HISTORY
        - UPDATE_DATA_USAGE_HISTORY
        - CREATE_EMAIL_MESSAGE
        - READ_EMAIL_MESSAGE
        - UPDATE_EMAIL_MESSAGE
        - CREATE_INVENTORY_ITEM
        - UPDATE_INVENTORY_ITEM
        - DELETE_INVENTORY_ITEM
        - READ_JOB
        - UPDATE_JOB
        - CREATE_JOB
        - DELETE_JOB
        - READ_JOB_TYPE
        - READ_MASS_EMAIL
        - READ_NETWORK_SITE
        - CREATE_NOTE
        - UPDATE_NOTE
        - DELETE_NOTE
        - READ_PACKAGE
        - UPDATE_PACKAGE
        - CREATE_PACKAGE
        - READ_PAYMENT_PROCESSOR
        - CREATE_PAYMENT_METHOD
        - READ_PAYMENT_METHOD
        - UPDATE_PAYMENT_METHOD
        - DELETE_PAYMENT_METHOD
        - CREATE_PAYMENT
        - READ_RADIUS_ACCOUNT
        - CREATE_RADIUS_ACCOUNT
        - UPDATE_RADIUS_ACCOUNT
        - READ_SCHEDULED_EVENT
        - UPDATE_SCHEDULED_EVENT
        - CREATE_SCHEDULED_EVENT
        - READ_SERVICE
        - READ_TICKET
        - CREATE_TICKET
        - UPDATE_TICKET
        - READ_TICKET_CATEGORY
        - CREATE_FILE
        - UPDATE_FILE
        - DELETE_FILE
        - READ_FILE
        - REFUND_PAYMENTS
        - CREATE_DATA_USAGE_TOP_OFF
        - READ_INBOUND_MAILBOX
        - UPDATE_ACCOUNT_LINK
        - READ_NETWORK_SITE_SERVICEABLE_ADDRESS_LIST
- name: sales_agent
  endpoint:
    path: /createRole
    method: POST
    data_selector: createRole
    params:
      input:
        name: Sales Agent
        applied_permissions:
        - ASSIGN_ACCOUNT_INVENTORY
        - READ_ALL_INVENTORY
        - MODIFY_ACCOUNT_SERVICES
        - UPDATE_ACCOUNT_SERVICE_PARAMETERS
        - UPDATE_ACCOUNT_BILLING_PARAMETERS
        - CREATE_ACCOUNT_TRANSACTIONS
        - READ_ACCOUNT_TRANSACTIONS
        - UPDATE_ACCOUNT_TRANSACTIONS
        - REVERSE_ACCOUNT_TRANSACTIONS
        - CREATE_ACCOUNT
        - READ_ACCOUNT
        - UPDATE_ACCOUNT
        - READ_ACCOUNT_GROUP
        - READ_ACCOUNT_STATUS
        - READ_ACCOUNT_TYPE
        - CREATE_SERVICEABLE_ADDRESS
        - READ_SERVICEABLE_ADDRESS
        - UPDATE_SERVICEABLE_ADDRESS
        - DELETE_SERVICEABLE_ADDRESS
        - READ_CALL_LOG
        - CREATE_CALL_LOG
        - UPDATE_CALL_LOG
        - READ_CANNED_REPLY
        - CREATE_CONTACT
        - UPDATE_CONTACT
        - DELETE_CONTACT
        - READ_CONTRACT
        - UPDATE_CONTRACT
        - CREATE_CONTRACT
        - DELETE_CONTRACT
        - READ_CONTRACT_TEMPLATE
        - READ_CUSTOM_FIELD
        - CREATE_FILE
        - UPDATE_FILE
        - READ_FILE
        - READ_JOB
        - UPDATE_JOB
        - CREATE_JOB
        - DELETE_JOB
        - READ_JOB_TYPE
        - CREATE_NOTE
        - UPDATE_NOTE
        - DELETE_NOTE
        - READ_PACKAGE
        - READ_PAYMENT_PROCESSOR
        - CREATE_PAYMENT_METHOD
        - READ_PAYMENT_METHOD
        - UPDATE_PAYMENT_METHOD
        - DELETE_PAYMENT_METHOD
        - CREATE_PAYMENT
        - READ_RADIUS_ACCOUNT
        - CREATE_RADIUS_ACCOUNT
        - UPDATE_RADIUS_ACCOUNT
        - READ_SCHEDULED_EVENT
        - UPDATE_SCHEDULED_EVENT
        - CREATE_SCHEDULED_EVENT
        - READ_SERVICE
        - READ_TICKET
        - CREATE_TICKET
        - UPDATE_TICKET
        - READ_TICKET_CATEGORY
        - UPDATE_ACCOUNT_LINK
        - REFUND_PAYMENTS
        - UPDATE_SERVICEABLE_ADDRESS
        - READ_NETWORK_SITE_SERVICEABLE_ADDRESS_LIST
- name: field_technician
  endpoint:
    path: /createRole
    method: POST
    data_selector: createRole
    params:
      input:
        name: Field Technician
        applied_permissions:
        - UPDATE_TASK
        - CREATE_NOTE
        - UPDATE_NOTE
        - DELETE_NOTE
        - READ_FILE
        - CREATE_FILE
        - UPDATE_FILE
        - DELETE_FILE
        - CHECK_IN_OWN_JOB
        - COMPLETE_OWN_JOB
        - MODIFY_ACCOUNT_SERVICES
        - CREATE_PAYMENT_METHOD
        - CREATE_ACCOUNT_TRANSACTIONS
        - CREATE_PAYMENT
        - ASSIGN_ACCOUNT_INVENTORY
        - CREATE_IP_ASSIGNMENT
        - CREATE_RADIUS_ACCOUNT
        - READ_ACCOUNT
        - READ_PAYMENT_METHOD
        - READ_ACCOUNT_TRANSACTIONS
        - READ_ALL_INVENTORY
        - READ_IP_ASSIGNMENT
        - READ_RADIUS_ACCOUNT
        - READ_SCHEDULED_EVENT
        - READ_CONTRACT
        - UPDATE_ACCOUNT
        - UPDATE_PAYMENT_METHOD
        - UPDATE_IP_ASSIGNMENT
        - UPDATE_RADIUS_ACCOUNT
        - DELETE_IP_ASSIGNMENT
        - DELETE_RADIUS_ACCOUNT
        - CREATE_INVENTORY_ITEM
        - UPDATE_INVENTORY_ITEM
        - READ_NETWORK_SITE
        - READ_NETWORK_MONITORING_TEMPLATE
        - READ_ALERTING_ROTATION
        - READ_JOB
        - UPDATE_JOB
        - CREATE_TICKET
        - READ_TICKET
        - UPDATE_TICKET
        - READ_SERVICE
        - READ_SERVICEABLE_ADDRESS
        - READ_INLINE_DEVICE
        - READ_PACKAGE
        - READ_PHONE_NUMBER_TYPE
        - READ_DHCP_SERVER
        - REVERSE_ACCOUNT_TRANSACTIONS
        - DELETE_ACCOUNT_TRANSACTIONS
        - UPDATE_DRIVERS
        - READ_CALENDAR
        - CREATE_CALENDAR
        - UPDATE_CALENDAR
        - DELETE_CALENDAR
- name: customer_portal_user
  endpoint:
    path: /createRole
    method: POST
    data_selector: createRole
    params:
      input:
        name: Customer Portal
        applied_permissions:
        - READ_DATA_USAGE_HISTORY
        - CREATE_TICKET
        - READ_TICKET
        - UPDATE_TICKET
        - CREATE_PAYMENT_METHOD
        - CREATE_PAYMENT
        - READ_ACCOUNT
        - READ_PAYMENT_METHOD
        - READ_ACCOUNT_TRANSACTIONS
        - READ_CONTRACT
        - UPDATE_PAYMENT_METHOD
        - UPDATE_ACCOUNT_TRANSACTIONS
        - CREATE_CONTACT
        - UPDATE_CONTACT
        - DELETE_CONTACT
        - UPDATE_CONTRACT
        - DELETE_PAYMENT_METHOD
        - CREATE_ACCOUNT_TRANSACTIONS
        - READ_INVOICE_ATTACHMENT
        - READ_INVOICE_MESSAGE
        - READ_SERVICE
        - CREATE_DATA_USAGE_TOP_OFF
        - READ_PACKAGE
        - MODIFY_ACCOUNT_SERVICES
        - READ_PAYMENT_PROCESSOR
        - UPDATE_ACCOUNT
        - READ_INBOUND_MAILBOX
- name: read_only_user
  endpoint:
    path: /createRole
    method: POST
    data_selector: createRole
    params:
      input:
        name: Read-only
        applied_permissions:
        - READ_ACCESS_LOG
        - READ_ACCOUNT
        - READ_ACCOUNT_GROUP
        - READ_ACCOUNT_REPORTS
        - READ_ACCOUNT_STATUS
        - READ_ACCOUNT_TRANSACTIONS
        - READ_ACCOUNT_TYPE
        - READ_ACH_BATCH
        - READ_ADDRESS_LIST
        - READ_ALERTING_ROTATION
        - READ_ALL_INVENTORY
        - READ_ALL_LOGS
        - READ_APPLICATION_FIREWALL_RULE
        - READ_BILLING_DEFAULT
        - READ_CABLE_MODEM_PROVISIONER
        - READ_CALL_DETAIL_RECORD
        - READ_CALL_DETAIL_RECORD_IMPORT
        - READ_CALL_LOG
        - READ_CANNED_REPLY
        - READ_CONTRACT
        - READ_CONTRACT_TEMPLATE
        - READ_CUSTOM_FIELD
        - READ_DAILY_AGGREGATE_VALUES
        - READ_DATA_USAGE_HISTORY
        - READ_DELINQUENCY_EXCLUSION
        - READ_DEPOSIT_SLIP
        - READ_DHCP_SERVER
        - READ_DID
        - READ_DID_ASSIGNMENT
        - READ_MESSAGE_CATEGORY
        - READ_EMAIL_DOMAIN
        - READ_EMAIL_MESSAGE
        - READ_EXTERNAL_MARKETING
        - READ_FCC_FORM_477_REPORT
        - READ_FILE
        - READ_FINANCIAL_REPORTS
        - READ_GENERAL_LEDGER_CODE
        - READ_GEOFENCE
        - READ_GPS_TRACKING_PROVIDER
        - READ_INBOUND_MAILBOX
        - READ_INLINE_DEVICE
        - READ_INVOICE_ATTACHMENT
        - READ_INVOICE_MESSAGE
        - READ_IP_ASSIGNMENT
        - READ_JOB
        - READ_JOB_TYPE
        - READ_LIMITED_INVENTORY
        - READ_LTE_PROVIDER
        - READ_MASS_EMAIL
        - READ_NETFLOW_ENDPOINT
        - READ_NETWORK_MONITORING_TEMPLATE
        - READ_NETWORK_SITE
        - READ_NON_INVENTORY_ITEM
        - READ_PACKAGE
        - READ_PAYMENT_METHOD
        - READ_PAYMENT_PROCESSOR
        - READ_PHONE_NUMBER_TYPE
        - READ_POLLER
        - READ_PRINTED_INVOICE_BATCH
        - READ_RADIUS_ACCOUNT
        - READ_RADIUS_GROUP
        - READ_RADIUS_SERVER
        - READ_SCHEDULED_EVENT
        - READ_SCHEDULE_ADDRESS
        - READ_SCHEDULE_AVAILABILITY
        - READ_SCHEDULE_BLOCKER
        - READ_SCHEDULE_TIME_OFF
        - READ_SEARCH_FILTER
        - READ_SERVICE
        - READ_SERVICEABLE_ADDRESS
        - READ_SNMP_OVERRIDE
        - READ_TASK_TEMPLATE
        - READ_TAX
        - READ_TAX_EXEMPTION
        - READ_TAX_PROVIDER
        - READ_TICKET
        - READ_TICKET_CATEGORY
        - READ_TICKET_GROUP
        - READ_TIMESERIES_DATA
        - READ_TOWERCOVERAGE_CONFIGURATION
        - READ_TOWERCOVERAGE_SUBMISSION
        - READ_TRIGGERED_EMAIL
        - READ_UNINVENTORIED_MAC_ADDRESS
        - READ_VENDOR
        - READ_VENDOR_ITEM
        - READ_VOICE_PROVIDER
        - READ_VOICE_PROVIDER_RATE
        - READ_VOICE_PROVIDER_RATE_IMPORT
        - READ_WEBHOOK_ENDPOINT
        - READ_WEBHOOK_ENDPOINT_EVENT
- name: Payments
  endpoint:
    path: /payments
    method: GET
    data_selector: transactions
- name: Refunds
  endpoint:
    path: /refunds
    method: GET
    data_selector: transactions
- name: Disputes
  endpoint:
    path: /disputes
    method: GET
    data_selector: transactions
- name: user_roles
  endpoint:
    path: /api/user_roles
    method: GET
    data_selector: roles
    params: {}
- name: roles
  endpoint:
    path: /security/roles
    method: GET
    data_selector: roles
    params: {}
- name: users
  endpoint:
    path: /settings/security/users
    method: GET
    data_selector: users
    params: {}
- name: transactions
  endpoint:
    path: /sonar-billing/transactions
    method: GET
- name: invoices
  endpoint:
    path: /sonar-billing/invoices
    method: GET
- name: payment_details
  endpoint:
    path: /sonar-billing/payment_details
    method: GET
- name: Payment Details
  endpoint:
    path: /billing/payment-details
    method: GET
    data_selector: paymentDetails
    params: {}
- name: Invoices
  endpoint:
    path: /billing/invoices
    method: GET
    data_selector: invoices
    params: {}
- name: Transactions
  endpoint:
    path: /billing/transactions
    method: GET
    data_selector: transactions
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: records
- name: EFT Payments
  endpoint:
    path: /sonar-pay/eft-payments
    method: GET
- name: Disbursement History
  endpoint:
    path: /sonarPay/disbursement-history
    method: GET
    data_selector: disbursement_history
- name: Reports
  endpoint:
    path: /sonarPay/reports
    method: GET
    data_selector: reports
- name: Chargebacks & Disputes
  endpoint:
    path: /sonar-pay/chargebacks-disputes
    method: GET
- name: personal_preferences
  endpoint:
    path: /system/personal-preferences
    method: GET
    data_selector: preferences
    params: {}
- name: default_pages
  endpoint:
    path: /system/default-pages
    method: GET
    data_selector: pages
    params: {}
- name: disbursement_history
  endpoint:
    path: /sonarPay/disbursement/history
    method: GET
    data_selector: disbursementHistory
- name: disbursement_report
  endpoint:
    path: /sonarPay/disbursement/report
    method: GET
    data_selector: disbursementReport
- name: monthly_statement
  endpoint:
    path: /sonarpay/monthly_statement
    method: GET
    data_selector: transactions
- name: reconciliation
  endpoint:
    path: /sonarpay/reconciliation
    method: GET
    data_selector: disbursements
- name: payments_refunds_disputes
  endpoint:
    path: /sonarpay/payments_refunds_disputes
    method: GET
    data_selector: records
- name: disbursement_detail
  endpoint:
    path: /sonarpay/disbursement_detail
    method: GET
    data_selector: details
- name: Authorize.net
  endpoint:
    path: /token/extraction/authorize.net
    method: POST
    data_selector: tokenExtraction
    params: {}
- name: Stripe
  endpoint:
    path: /token/extraction/stripe
    method: POST
    data_selector: tokenExtraction
    params: {}
- name: CardConnect
  endpoint:
    path: /token/extraction/cardconnect
    method: POST
    data_selector: tokenExtraction
    params: {}
- name: ProPay
  endpoint:
    path: /token/extraction/propay
    method: POST
    data_selector: tokenExtraction
    params: {}
- name: Moneris
  endpoint:
    path: /token/extraction/moneris
    method: POST
    data_selector: tokenExtraction
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: data
- name: billing
  endpoint:
    path: /api/v1/billing
    method: GET
    data_selector: data
- name: Data Import
  endpoint:
    path: /data-imports
    method: GET
- name: Customer Portal
  endpoint:
    path: /baseline-config/customer-portal-configuration-checklist
    method: GET
- name: Sonar Field Tech App
  endpoint:
    path: /integrations/the-sonar-field-tech-app
    method: GET
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: records
- name: billing
  endpoint:
    path: /api/v1/billing
    method: GET
    data_selector: records
- name: global_search
  endpoint:
    path: /global_search
    method: GET
    data_selector: results
    params: {}
- name: User Profile
  endpoint:
    path: /system/your-personal-user-settings
    method: GET
- name: Accounts
  endpoint:
    path: /accounts/account-list-view-overview
    method: GET
- name: Billing Tools
  endpoint:
    path: /billing-tools
    method: GET
- name: Communication Tools
  endpoint:
    path: /communication/communication-tools-overview
    method: GET
- name: Ticketing
  endpoint:
    path: /ticketing/ticketing-general-overview
    method: GET
- name: Scheduling / All Jobs
  endpoint:
    path: /article/xvh4p71tud#table-view
    method: GET
- name: Scheduling / Dispatcher View
  endpoint:
    path: /article/xvh4p71tud#dispatcher-view
    method: GET
- name: Scheduling / Week View
  endpoint:
    path: /article/2sa4qsrz97
    method: GET
- name: Network
  endpoint:
    path: /networking/network-dashboard-overview
    method: GET
- name: IP Address Management (IPAM)
  endpoint:
    path: /networking/ipam-overview
    method: GET
- name: Inventory
  endpoint:
    path: /inventory/inventory-overview
    method: GET
- name: Purchase Orders
  endpoint:
    path: /purchase-orders/purchase-orders-overview-and-usage
    method: GET
- name: Map (Beta)
  endpoint:
    path: /mapping/the-map-interface-overview
    method: GET
- name: Reports
  endpoint:
    path: /reporting/understanding-sonar-reports
    method: GET
- name: Sonar Billing
  endpoint:
    path: /sonar-billing/sonar-billing-overview
    method: GET
- name: Settings
  endpoint:
    path: /settings
    method: GET
- name: files
  endpoint:
    path: /api/files
    method: POST
    data_selector: files
    params: {}
- name: customer_portal
  endpoint:
    path: /services/data/v1/customers
    method: GET
    data_selector: records
- name: Accounts
  endpoint:
    path: /accounts
    method: GET
- name: Billing Tools
  endpoint:
    path: /billing
    method: GET
- name: Communications
  endpoint:
    path: /communication
    method: GET
- name: Ticketing
  endpoint:
    path: /ticketing
    method: GET
- name: Scheduling
  endpoint:
    path: /jobs
    method: GET
- name: Network & IPAM
  endpoint:
    path: /networking
    method: GET
- name: Inventory
  endpoint:
    path: /inventory
    method: GET
- name: Purchase Orders
  endpoint:
    path: /purchase-orders
    method: GET
- name: Location Tools
  endpoint:
    path: /mapping
    method: GET
- name: Reports
  endpoint:
    path: /reporting
    method: GET
- name: Sonar Billing
  endpoint:
    path: /sonar-billing
    method: GET
- name: Settings
  endpoint:
    path: /settings
    method: GET
- name: notification_preferences
  endpoint:
    path: /system/notification-preferences
    method: GET
    data_selector: notifications
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: Data Imports
  endpoint:
    path: /data/imports
    method: GET
    data_selector: imports
    params: {}
- name: Data Exports
  endpoint:
    path: /settings/data_exports
    method: GET
    data_selector: exports
    params: {}
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: entities
- name: global_search
  endpoint:
    path: /global_search
    method: GET
    data_selector: results
    params: {}
- name: files
  endpoint:
    path: /api/v1/files
    method: GET
    data_selector: data
    params: {}
- name: files
  endpoint:
    path: /api/files
    method: POST
    data_selector: files
    params: {}
- name: download_file
  endpoint:
    path: /api/files/{FILE_ID}
    method: GET
    data_selector: data.files.entities
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: ticket
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: tickets
    params: {}
- name: Accounts
  endpoint:
    path: /accounts
    method: GET
- name: Billing Tools
  endpoint:
    path: /billing
    method: GET
- name: Communications
  endpoint:
    path: /communication
    method: GET
- name: Ticketing
  endpoint:
    path: /ticketing
    method: GET
- name: Scheduling
  endpoint:
    path: /jobs
    method: GET
- name: Network & IPAM
  endpoint:
    path: /networking
    method: GET
- name: Inventory
  endpoint:
    path: /inventory
    method: GET
- name: Purchase Orders
  endpoint:
    path: /purchase-orders
    method: GET
- name: Location Tools
  endpoint:
    path: /mapping
    method: GET
- name: Reports
  endpoint:
    path: /reporting
    method: GET
- name: Sonar Billing
  endpoint:
    path: /sonar-billing
    method: GET
- name: Settings
  endpoint:
    path: /settings
    method: GET
- name: canned_reply
  endpoint:
    path: /ticketing/canned-replies
    method: GET
    data_selector: canned_replies
    params: {}
- name: canned_reply_categories
  endpoint:
    path: /ticketing/canned-reply-categories
    method: GET
    data_selector: categories
    params: {}
- name: ticket_group
  endpoint:
    path: /ticketing/ticket_groups
    method: GET
    data_selector: ticket_groups
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: system_services
  endpoint:
    path: /system/services
    method: GET
- name: spam_ticket
  endpoint:
    path: /tickets/spam
    method: GET
    data_selector: tickets
- name: inbound_mailbox
  endpoint:
    path: /services/data/v1/inbound_mailboxes
    method: GET
    data_selector: records
    params: {}
- name: SMS Settings
  endpoint:
    path: /settings/sonar_billing/sms
    method: GET
- name: SMS Notifications
  endpoint:
    path: /settings/sonar_billing/sms/notifications
    method: GET
- name: inbound_mailboxes
  endpoint:
    path: /ticketing/inbound-mailboxes
    method: GET
- name: inbound_mailbox
  endpoint:
    path: /settings/ticketing/inbound_mailboxes
    method: POST
- name: inbound_mailboxes
  endpoint:
    path: /ticketing/inbound-mailboxes-example-build
    method: GET
- name: inbound_mailboxes
  endpoint:
    path: /inbound/mailboxes
    method: GET
    data_selector: records
    params: {}
- name: inbound_mailbox
  endpoint:
    path: /inbound_mailbox
    method: POST
    data_selector: mailbox
    params:
      enabled: true
      name: Inbound Support Tickets
      from_name: Sonar
      from_mailbox: support
      email_domain: isp-portal.net
      priority: Low
      ticket_group: Support
      send_auto_reply: true
      append_signature: true
- name: tickets
  endpoint:
    path: /api/v1/tickets
    method: GET
    data_selector: data
- name: voice_service
  endpoint:
    path: /voice/services
    method: GET
    data_selector: records
- name: voice_billing
  endpoint:
    path: /voice/voice-billing-api-changes
    method: GET
    data_selector: records
- name: canned_replies
  endpoint:
    path: /ticketing/canned_replies
    method: GET
    data_selector: canned_replies
    params: {}
- name: rate_centers
  endpoint:
    path: /rate_centers
    method: GET
    data_selector: data
    params: {}
- name: scheduled_event_account_voice_service_details
  endpoint:
    path: /scheduled_event_account_voice_service_details
    method: GET
    data_selector: data
    params: {}
- name: voice_service_generic_parameter_taxes
  endpoint:
    path: /voice_service_generic_parameter_taxes
    method: GET
    data_selector: data
    params: {}
- name: createRateCenter
  endpoint:
    path: /createRateCenter
    method: POST
    data_selector: data
    params: {}
- name: updateRateCenter
  endpoint:
    path: /updateRateCenter
    method: POST
    data_selector: data
    params: {}
- name: deleteRateCenter
  endpoint:
    path: /deleteRateCenter
    method: POST
    data_selector: data
    params: {}
- name: createVoiceProviderRate
  endpoint:
    path: /createVoiceProviderRate
    method: POST
    data_selector: data
    params: {}
- name: updateVoiceProviderRate
  endpoint:
    path: /updateVoiceProviderRate
    method: POST
    data_selector: data
    params: {}
- name: deleteVoiceProviderRate
  endpoint:
    path: /deleteVoiceProviderRate
    method: POST
    data_selector: data
    params: {}
- name: createCallDetailRecord
  endpoint:
    path: /createCallDetailRecord
    method: POST
    data_selector: data
    params: {}
- name: updateCallDetailRecord
  endpoint:
    path: /updateCallDetailRecord
    method: POST
    data_selector: data
    params: {}
- name: deleteCallDetailRecord
  endpoint:
    path: /deleteCallDetailRecord
    method: POST
    data_selector: data
    params: {}
- name: createScheduledEvent
  endpoint:
    path: /createScheduledEvent
    method: POST
    data_selector: data
    params: {}
- name: updateScheduledEvent
  endpoint:
    path: /updateScheduledEvent
    method: POST
    data_selector: data
    params: {}
- name: createVoiceServiceGenericParameter
  endpoint:
    path: /createVoiceServiceGenericParameter
    method: POST
    data_selector: data
    params: {}
- name: updateVoiceServiceGenericParameter
  endpoint:
    path: /updateVoiceServiceGenericParameter
    method: POST
    data_selector: data
    params: {}
- name: ticket_groups
  endpoint:
    path: /api/ticket_groups
    method: GET
    data_selector: data
    params: {}
- name: ticket_group
  endpoint:
    path: /ticketing/ticket-groups
    method: GET
    data_selector: ticketGroups
- name: CDR
  endpoint:
    path: /api/v1/cdrs
    method: GET
    data_selector: records
- name: spam_tickets
  endpoint:
    path: /spam_tickets
    method: GET
    data_selector: tickets
- name: Spam Tickets
  endpoint:
    path: /tickets/spam
    method: GET
    data_selector: spam_tickets
- name: voice_service
  endpoint:
    path: /services/voice
    method: POST
    data_selector: service
    params: {}
- name: did
  endpoint:
    path: /services/dids
    method: POST
    data_selector: did
    params: {}
- name: voice_provider
  endpoint:
    path: /services/voice_providers
    method: POST
    data_selector: provider
    params: {}
- name: ImportDID
  endpoint:
    path: ImportDID
    method: mutation
    data_selector: success
    params:
      voice_provider_id: 1
- name: inbound_mailboxes
  endpoint:
    path: /api/inbound-mailboxes
    method: GET
    data_selector: records
    params: {}
- name: Generic Parameters
  endpoint:
    path: /services/data/vXX.X/genericParameters
    method: GET
- name: Voice Providers
  endpoint:
    path: /services/data/vXX.X/voiceProviders
    method: GET
- name: DIDs
  endpoint:
    path: /services/data/vXX.X/dids
    method: GET
- name: inbound_mailboxes
  endpoint:
    path: /api/inbound_mailboxes
    method: GET
    data_selector: records
- name: inbound_mailbox
  endpoint:
    path: /inbound_mailboxes
    method: POST
    data_selector: inbound_mailbox
    params:
      enabled: true
      name: Inbound Support Tickets
      from_name: Sonar
      from_mailbox: support
      email_domain: isp-portal.net
      priority: Low
      ticket_group: Support
      send_auto_reply: true
      append_signature: true
- name: ticket_category
  endpoint:
    path: /ticketing/ticket_categories
    method: GET
    data_selector: categories
    params: {}
- name: tickets
  endpoint:
    path: /api/tickets
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /services/data/v1/accounts
    method: GET
    data_selector: records
- name: billing
  endpoint:
    path: /services/data/v1/billing
    method: GET
    data_selector: records
- name: parent_ticket
  endpoint:
    path: /api/tickets/parent
    method: GET
    data_selector: records
- name: parent_ticket
  endpoint:
    path: /tickets/parent
    method: POST
    data_selector: data
- name: child_ticket
  endpoint:
    path: /tickets/child
    method: POST
    data_selector: data
- name: voice_billing
  endpoint:
    path: /voice/voice-billing-api-changes
    method: GET
    data_selector: records
- name: rate_centers
  endpoint:
    path: /rate_centers
    method: GET
    data_selector: data
- name: scheduled_event_account_voice_service_details
  endpoint:
    path: /scheduled_event_account_voice_service_details
    method: GET
    data_selector: data
- name: voice_service_generic_parameter_taxes
  endpoint:
    path: /voice_service_generic_parameter_taxes
    method: GET
    data_selector: data
- name: voice_transactions
  endpoint:
    path: /voice/transactions
    method: GET
    data_selector: transactions
- name: cdr
  endpoint:
    path: /voice/cdr
    method: GET
    data_selector: cdrs
- name: voice_services
  endpoint:
    path: /api/voice
    method: GET
    data_selector: records
- name: voice_service
  endpoint:
    path: /services/voice
    method: POST
    data_selector: service
    params: {}
- name: did
  endpoint:
    path: /services/dids
    method: POST
    data_selector: did
    params: {}
- name: import_did
  endpoint:
    path: /importDID
    method: POST
    data_selector: success
    params: {}
- name: voice_services
  endpoint:
    path: /voice/services
    method: GET
    data_selector: records
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: billing
  endpoint:
    path: /api/v1/billing
    method: GET
    data_selector: data
    params: {}
- name: cdr
  endpoint:
    path: /settings/voice/cdrs
    method: POST
    data_selector: cdr_records
- name: voice_provider_rates
  endpoint:
    path: /settings/voice/voice_provider_rates
    method: POST
    data_selector: voice_provider_rate_records
- name: rate_centers
  endpoint:
    path: /settings/voice/rate_centers
    method: POST
    data_selector: rate_center_records
- name: current_status
  endpoint:
    path: /status
    method: GET
    data_selector: status
    params: {}
- name: active_incidents
  endpoint:
    path: /status/incidents
    method: GET
    data_selector: incidents
    params: {}
- name: uptime
  endpoint:
    path: /status/uptime
    method: GET
    data_selector: uptime
    params: {}
- name: past_incidents
  endpoint:
    path: /status/past_incidents
    method: GET
    data_selector: past_incidents
    params: {}
- name: network_usage
  endpoint:
    path: /services/network/usage
    method: GET
    data_selector: records
- name: purchase_orders
  endpoint:
    path: /purchase-orders/purchase-orders-overview-and-usage
    method: GET
- name: purchase_orders
  endpoint:
    path: /purchase-orders
    method: GET
- name: accounts
  endpoint:
    path: /services/data/vXX.X/sobjects/Account
    method: GET
    data_selector: records
    params: {}
- name: billing
  endpoint:
    path: /services/data/vXX.X/sobjects/Billing
    method: GET
    data_selector: records
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: data
    params: {}
- name: billing
  endpoint:
    path: /api/v1/billing
    method: GET
    data_selector: data
    params: {}
- name: accounts
  endpoint:
    path: /api/v1/accounts
    method: GET
    data_selector: records
- name: billing
  endpoint:
    path: /api/v1/billing
    method: GET
    data_selector: records
- name: purchase_orders
  endpoint:
    path: /purchase-orders/purchase-orders-overview-and-usage
    method: GET
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in Sonar
- GraphQL is served over HTTPS, and the only HTTP verb you need to use is POST.
- Using the Sonar GraphQL API in an external application is pretty simple.
- It's served over HTTPS, and the only HTTP verb you need to use is POST.
- Access token must be generated inside Sonar under Personal Access Tokens.
- Access token must be generated inside Sonar and is required for API requests.
- Some objects like Contact may return nulls in deeply nested fields
- Resolved an issue where invoices could be missing or duplicated in Printed Invoice
  Batches.
- Some objects may return nulls in deeply nested fields
- V2 requires setup of connected app in Sonar
- Dynamic Time Zones functionality available in different areas including Accounts,
  Network Sites, and Scheduling pages.
- V2 supports custom field types for various entities.
- As of March 6th, 2025, Digital Ocean has begun blocking access to SMTP ports 25,
  265, and 587.
- It is recommended to NOT use a Gmail account (or other free, similar email service).
- 'Password must be at least 16 characters long and include special characters: !
  and #.'
- Customer portal will not work on Ubuntu 19.x.
- The customer portal will not work on Ubuntu 19.xx.
- Setup of connected app in Sonar is required for OAuth2.
- Invoices can be frozen and locked.
- Child accounts automatically linked to parent for billing.
- Users can customize their Account Overview page.
- Informational cards can be hidden or rearranged.
- Wholesale Billing can be applied to Anchor and Linked addresses.
- A maximum of 50 Linked addresses can be created at one time.
- Default Account Statuses include Lead, Active, and Inactive.
- Pending Install, Collections, Failed Install, Termination Specific Statuses, and
  Vacation Status are common created account statuses.
- All users have READ access to Archived Accounts.
- By default, standard dashboards and reports exclude Archived Accounts through pre-applied
  filters.
- Child Accounts do not receive Triggered Messages.
- Manual linking and unlinking of invoices is possible but should be done with caution.
- Enabling Wholesale Billing flips the script somewhat, defining Billing Defaults
  at the address level.
- When archiving an Account, if you have yet to complete the above criteria for Archiving
  an Account, then you will get error messages informing you of the tasks you have
  yet to complete.
- Custom report available for all clients who need to report for CPUC
- Before submission, you must replace the CPE column with the appropriate technology
  designation.
- Requires setup of connected app in Sonar
- Requires setup of connected app in the API
- Only contacts with valid email addresses will be available for selection
- The Entity Information CSV file contains a list of information about the submitting
  company.
- Sonar will never submit the report on your FCC portal for you.
- Ensure users have the relevant permissions to access Future Serviceable Addresses
  feature.
- The data contained in this data export will be reflective of the day the report
  was generated on.
- A mailing address does not require GPS coordinates, whereas a serviceable address
  does.
- Creating a serviceable address is a separate mutation, which then must be referred
  to in the mutation above.
- When you are ready to convert the account from a Lead status to Active status, use
  the Sonar GUI to create a proper serviceable address.
- Best Practices & Use Cases - Sonar Knowledge Base
- 'Normal: A normal note is not given a higher priority than the other types of notes.'
- 'Sticky: Sticky notes are similar to normal notes, except that sticky notes will
  always be given a higher priority.'
- 'Sticky With Confirmation: A sticky with confirmation note functions the same as
  a sticky note, except there will be a pop-up window displayed anytime that particular
  page for the entity is loaded.'
- When scheduling an event that adds or removes a service, the selection will always
  be tied to the specific ID of the service.
- Normal notes are great for making sure that all users have any necessary or helpful
  information when dealing with a particular entity.
- Sticky notes will always be given a higher priority and therefore maintained as
  the first note in the list.
- Sticky with confirmation notes require user interaction before the screen will be
  viewable.
- Considerations when changing the account status may cause unexpected results in
  case of prorating when the account is reactivated.
- Ensure to keep the header row, as the label generator software uses it to check
  file integrity.
- Do not rename any of the SVG files- the naming syntax is used to determine which
  label is displayed per portal customer when they log in.
- The Sonar API requires authentication via OAuth2.
- Serviceable Addresses are unique and must always remain unique.
- ACH transactions lose some flexibility as they can not automatically handle refunds,
  reversals, and rectify payments.
- Deleting an ACH batch should only be performed if you are attempting to modify a
  batch that has not yet been submitted to your bank.
- Activates Account must be checked if you plan to provide a small data service to
  the customer premises, and unchecked if it will be a placeholder status only.
- The speed of the data service can be variable; however, we recommend a symmetrical
  1 megabit connection.
- ACH payments must be submitted to your bank manually.
- Payments can only be entered for the current date/time, or a date in the past.
- If PAYPAL is selected as the payment type, the reference field will disappear and
  be replaced by 'Payment Transaction ID'.
- If PAYPAL is selected as the payment type, the description field will disappear.
- Activates Account must be checked if you plan to provide a small data service to
  the customer premises.
- Recommended symmetrical 1 megabit connection for data service.
- This tool is designed to be used to calculate Fixed Day Billing or Account Billing
  Settings.
- The "Delinquent on" and "Status change on" dates calculated above may not be true
  every month, because in **Billing Settings** in an instance, you can set the *Days
  to Check Delinquency*.
- For Avalara to process line related fees successfully (such as E911), the Lines
  Generic Parameter must have, at least, a quantity set.
- Requires setup of OAuth2 with refresh token for API access.
- Uses OAuth2 with refresh token — requires setup of connected app in sonar
- If an account is activated on the 29th, 30th, or 31st of a month, the customer's
  initial transaction will be significantly different from that of an account activated
  between the 1st and the 28th.
- If the deposit slip is deleted, all of the payments that were included in it will
  then become available to be selected when creating a new deposit slip.
- The 'Delinquent on' and 'Status change on' dates may not be true every month due
  to the 'Days to Check Delinquency' setting.
- Bill Day must be a numerical value between 1 and 28.
- Invoice Day must be a numerical value between 1 and 28.
- If using an Anchor subsidy, Months to Bill must be set to '1'.
- Days of Delinquency For Status Switch determines the number of days until account
  status changes.
- Due Days, Auto Pay Days, and Grace Days are more free-form.
- The format must be entered as 0YYYXXXXX
- Considerations When Using Avalara with Voice Services
- Discounts can be applied as one-time transactions or as recurring/expiring services.
- The routing number must be entered as 0YYYXXXXX.
- Excel will remove the leading zeros unless you first select the column and format
  the cells as Text.
- Uses Billing Defaults for managing delinquency
- Delinquency processes involve Grace Days and Days of Delinquency for Status Switch
- Before increasing prices, ensure that you refer to your State or Country guidelines
  for minimum notice periods before issuing the notice.
- The Dual Data Services feature provides the capability to associate two distinct
  data services with a single customer account, clearly identifying primary and additional
  services.
- Before using this feature, you must first enable the Dual Data Services feature
  in your Sonar instance.
- Additional services cannot be enabled while Calix SMx integrations are active.
- The Dual Data Services feature is currently not supported with Calix SMx.
- Account status changes that are determined by billing configurations will occur
  at 12AM UTC.
- API requires proper OAuth2 setup.
- API responses may vary based on user permissions.
- The simplest method of issuing a partial refund and voiding an invoice is to do
  neither of those things.
- If the deposit is for a returnable deposit on equipment, the one-time transaction
  debit for the deposit should have a GL code, and so should the one-time transaction
  credit.
- Proration options available for adding, removing, or changing services.
- Every invoice sent to the customer shares the same subject line, as defined in the
  email message associated with the 'Billing runs successfully for an account' triggered
  email.
- You must generate the batch file from within Sonar for ACH.
- Once configured, switching eCheck providers requires intervention by Sonar staff.
- Wire payments need to be manually recorded in Sonar.
- Any individual account can only have a single Data service on it, but can have multiple
  recurring services.
- Services added in this way are billed and invoiced on a monthly basis, in line with
  the configuration of the account's billing settings.
- This particular scenario has a variety of ways to approach it, depending on how
  your organization operates.
- If you're allowing your technicians to directly receive cash or check payments,
  ensure enough time is left between their appointments for them to deposit the payments
  back at the dispatch office.
- At this time, the Invoice Templates feature is incompatible with our Print to Mail
  feature.
- Enabling this feature will switch all invoices to the new default template.
- If Print to Mail is enabled on your instance, you cannot enable Invoice Templates.
- Only one enabled default template at a time.
- Invoices remain tied to the template version that was used when they are first rendered.
- Proration is possible on adding/removing services, changing service quantity, and
  adjusting billing days.
- When PayPal is configured in Sonar, you're unable to charge customers directly using
  it as a payment method through your instance interface.
- Implementing PayPal in Sonar does allow you to receive payments and perform refunds
  through the integration, the integration only allows one-time transactions.
- When manually reconciling payments in Sonar, there's no way for the integration
  to verify or validate PayPal Transaction IDs to confirm whether the entered ID is
  accurate.
- To fully utilize the PayPal integration, the Client ID and Client Secret need to
  be entered on both the Customer Portal, and within the Sonar instance.
- Since Sonar assumes the ACH transaction is valid, if it is not (i.e. a customer
  had insufficient funds), you will need to manually reconcile this within Sonar.
- Once you have configured eCheck and added at least one payment method to an account,
  it is not possible to switch to a different eCheck provider or to ACH without intervention
  by Sonar staff.
- If an eCheck payment initially succeeds, but fails a day or so later as a result
  of insufficient funds, a reversal would need to be performed for that customer within
  Sonar.
- API calls using third party applications require Personal Access Tokens.
- Multi-Month accounts and Multi-Month services aren't limited to being yearly.
- The bill frequency can be any number of months.
- Sonar will automate the billing and next bill date calculations based on the Billing
  Frequency defined on the account or on the service.
- Multi-Month Services and Multi-Month accounts shouldn't be combined, as they serve
  distinct purposes.
- Print to Mail is not currently available for customers in the Canadian Data Center.
- Print to Mail is limited to businesses operating out of the USA and Canada only.
- Invoice batches are typically processed the day following the invoice date.
- Batches are not mailed out over weekends or holidays.
- Enabling this feature will switch all invoices to the new default template, which
  will disable the view of the old rendered template within your instance.
- The Sonar Default Template cannot be customized or deleted from your instance.
- You can only have one enabled default template at a time.
- Printed Invoice Batches can only generate invoices for dates in the past, not current
  or future dates.
- Only accounts that have the preference for printed invoices enabled will be charged
  the printed invoice fee.
- Uses OAuth2 with refresh token
- Uses a specific service for adjustments and one-time transactions.
- Manual payments can be made using various methods including cash, check, and credit
  card.
- It's important to remember that Multi-Month accounts and Multi-Month services aren't
  limited to being yearly.
- The bill frequency can be any number of months, and Sonar will automate the billing
  and next bill date calculations for you based on the Billing Frequency defined on
  the account or on the service.
- Uses tokenization with Sonar
- Print to Mail feature requires enabling permissions in roles.
- Minimum amount that can be added to account is $10.
- Creating a new Tax requires Name, Application, Rate, and Type fields.
- Invoices will only be included if the account they are associated with has the preference
  for printed invoices enabled.
- Manual Printed Invoice Batches can be created to address discrepancies in invoice
  generation.
- Implementing a free period has the potential of reducing user load on your network
  during peak hours.
- Call Logs allow users to record and collect data while on the phone with a customer.
- Users can also convert call logs into tickets to track issues and follow up effectively.
- Ensure OAuth scopes are correctly set for accessing messages.
- Uses OAuth2 with refresh token — requires setup of connected app in API
- Some endpoints may require specific permissions.
- Some e-Check/Bank Account Processors have been deprecated for users within the United
  States.
- Using Sonar to process your customer refunds directly is not available for all payment
  processors.
- As taxes are created, they must be applied to services before they'll generate any
  charges.
- Tax Exemptions, Geographical Tax Application, and Tax Overrides can all complicate
  the application of taxes with Sonar.
- 'Geographical taxes require mandatory fields: Name and Rate.'
- Default Tax Rates should be set to 0% when servicing multiple zones.
- Categories need to be applied to triggered messages and account contacts for effective
  communication.
- Data Usage rolls over at midnight UTC, regardless of your instance's time zone.
- Changes made to a Phone Number Type will not affect phone numbers currently added
  to customer contacts.
- SMS Opt In is only available with one phone number per contact on the account.
- There is currently an issue with the formatting of variables not being preserved
  when copying/pasting variables into the text editor, causing them to not trigger
  properly.
- Beginning March 2024, Mailchimp will begin enforcing new sending domain authentication
  requirements.
- If you choose not to set up an outbound domain, Sonar will use its default domain
  isp-portal.net.
- A DMARC policy is an authentication protocol that can be added to your domain to
  help protect against fraud and increase deliverability.
- Beginning in 2024, Mandrill requires a minimum DMARC policy of “v=DMARC1; p=none”
  to be added to any sending domain.
- Please allow up to 48 hours for all changes to take full effect.
- Users must have appropriate permissions to access and manage Call Logs.
- System default Triggered Messages such as 'New user created' and 'User forgot password'
  cannot be edited.
- Child Accounts cannot set up auto-pay.
- Outbound SMS is not currently available for customers in the Canadian Data Center.
- Two-way communication through the Outbound SMS feature isn't possible.
- SMS messages can only be sent as Triggered Messages or as Mass Messages.
- Ensure account contacts opt-in to receiving SMS messages.
- Ensure each company has a unique domain for message settings.
- Mass Messages are limited to 3,000 email addresses.
- File attachments are limited to 500 MB.
- Companies cannot be deleted, only disabled.
- Enabling the 'Show Remittance Slip' option will add a section to invoices.
- Users added to your Sonar instance can't currently be assigned to specific companies,
  which means users with the appropriate permissions could affect changes or access
  all accounts, regardless of which company the account belongs to.
- Tickets or the ticketing system cannot be restricted to specific companies, as all
  users with the relevant permissions will be able to view and respond to all emails
  coming in from customers, regardless of the inbound email address selected by the
  customer or the company that the sender's account belongs to.
- Sonar's automated billing system doesn't allow you to create different billing defaults
  on a per-company basis.
- Beginning March 2024, Mailchimp will begin enforcing new sending domain authentication
  requirements that you'll need to take action on.
- If you choose not to set up an outbound domain, Sonar will use its default domain
  isp-portal.net. We recommend setting up a custom domain for better brand recognition
  and spam filter avoidance.
- A DMARC policy is an authentication protocol that can be added to your domain to
  help protect against fraud and increase deliverability. Beginning in 2024, Mandrill
  requires a minimum DMARC policy of 'v=DMARC1; p=none' to be added to any sending
  domain.
- If you update your company and modify the Business Name and Tax Identification Number
  at the same time, your Payment Processing will be impacted.
- Re-tokenization with sonarPay will be required, so reach out to Sonar before making
  this change to ensure you're familiar with all requirements.
- The system should accept any image under 2MB for logos, optimized for an image that
  is 230 x 100 pixels.
- Once a contract has been added to the account, it cannot be edited.
- Triggers are available for various account and payment events.
- Files that can be uploaded as an invoice attachment must not exceed 500 MB.
- Only application and PDF file formats are acceptable to upload as invoice attachments.
- Enabled checkbox determines if message is active or disabled.
- Child accounts do not receive triggered messages unless specified.
- The SMS feature is part of the Sonar Billing feature-set.
- SMS messages can only be sent as Triggered Messages or Mass Messages.
- Monitor your API Rate Usage
- Enable ONT Synchronization is required for automatic provisioning.
- Companies cannot be deleted from an instance, only disabled.
- Uses a single active SMx integration per account
- Users added to your Sonar instance can't currently be assigned to specific companies.
- All users with the relevant permissions will be able to view and respond to all
  emails coming in from customers, regardless of the inbound email address.
- Once your user is created, you will need to generate a personal access token within
  Sonar, which will be used on the CrowdFiber side to configure the integration.
- The system should accept any image under 2MB, the invoices where this logo will
  upload are optimized for an image that is 230 x 100 pixels.
- The minimum mailing amount is 250 postcards every 2 weeks.
- By default, a contract template is set to be enabled upon creation.
- You cannot delete a contract template once that template has been used to add a
  contract to a customer's account - you must disable it instead.
- This integration is only compatible with the Verizon Networkfleet brand.
- Direct Debit is not an instant payment method, and both the mandates and payments
  have a multi-day processing time.
- Payments typically take at least 3 working days to clear and require that notice
  be given to the customer before the payment process can be initiated.
- Requires setup of user and API key in Sonar
- Invoices can be created manually or automatically through billing.
- Invoices in statement mode include prior balance information.
- The Cambium QoE system is a read-only integration.
- Creating a dedicated user for API integrations is recommended for data security
  and deployment purposes.
- The 'Past Due' stamp will only appear in English, regardless of whether bilingual
  invoices are enabled.
- Providing a Read-Only User requires creating the Read-Only role and user.
- Webhook performance is on a best-effort basis. Webhooks may take time to trigger,
  and their performance in a workload cannot be guaranteed.
- The web server receiving the webhook MUST support both the HTTP HEAD and POST methods.
- Sonar will retry webhooks over a 4-hour period.
- With SMx version 24.3, a new API Rate Limit is being put into effect.
- Sonar cannot modify or control the Rate Limitations.
- Enable ONT Synchronization must be enabled before beginning a Full Synchronization.
- If your Organization ID is different, duplicate entries may appear in SMx for any
  ONTs synchronized under the new ID.
- Automatically create Provisioning Details Record must be checked for automatic provisioning.
- An Inventory Item mapped to the Calix SMx integration is required to complete service
  delivery.
- A MyCalix account requires manual approval from Calix, and this process may take
  time.
- For the integration to inform the 'Flow Endpoint Matching Options' record in Calix
  Cloud, your associated Inventory Models must have a Model Category of either 'RG'
  or 'ONT' configured.
- The Sonar Field Tech Mobile App requires an active V2 Sonar instance.
- In terms of data security, only the Android or iOS device user can access customer
  data folders, and this can only be done through the Sonar field tech application
  itself.
- Default payment status is marked as successful until declined by the customer's
  bank.
- Technicians must have a corresponding user created with necessary permissions.
- If your connection is lost, all changes performed while offline will be stored in
  the offline queue.
- Currently, there are a few actions that the mobile app does not support in offline
  mode.
- The API Key acts as a sort of password for communication between Tower Coverage
  and your Sonar instance.
- This is a read-only integration.
- Provide Sonar with your Preseem API Key, and enable the integration
- Provide Preseem with a Read-Only user account from your Sonar instance
- Webhooks are triggered based on specific events in the Sonar system.
- Uses OAuth2 with refresh token — requires setup of connected app in VETRO.
- 'Best practice: use a placeholder status (e.g., “VETRO Lead”) and update statuses
  manually as needed.'
- Check documentation for webhook payload formats
- Ensure proper endpoint configuration for receiving webhooks
- If the endpoint does not return an "HTTP 200" response code, Sonar will continue
  to POST to the endpoint once per minute for 4 hours.
- The integration has been designed with the methodology that a 'project' represents
  a town and an associated 'plan' is representative of the neighborhoods within it.
- There is a limit to how many service locations can successfully sync under a single
  plan.
- The integration requires an API user to exist in your Calix account.
- A MyCalix account requires manual approval from Calix.
- By default, only 1 month will sync for your calendar history, unless a different
  option is selected.
- The iCalendar URL is not controlled by the Sonar firewall.
- Sonar does not have control over the sync settings for external calendars. The events
  could take up to 24 hours to sync with some external calendars.
- Export results can be obtained in JSON or CSV format.
- Most generic barcode scanners are compatible with the inventory scanning feature.
- Only the Android or iOS device user can access customer data folders through the
  Sonar field tech application.
- Ensure valid Sites and Coverages configured within your Tower Coverage account.
- If you have the applicable user notification enabled, you'll be alerted to the new
  additions via your notifications.
- The ability to alter the name of the overlay can be found by navigating to Settings
  → Map (Beta) → Custom Overlay.
- If changes are made to your Service Locations or Customer Records after you set
  up the integration, it may cause duplicate entries within Sonar.
- When enabled, a change in the Serviceable Addresses in Sonar will also modify the
  Service Location in VETRO, creating a two-way address synchronization process.
- If this feature is not enabled, no additional options will be displayed in the modal.
- Service locations must be linked to serviceable addresses prior to sync.
- Ensure to set up the connected app for OAuth2 authentication.
- The web server receiving the webhook MUST support both the http HEAD and POST methods.
- Some endpoints require specific access permissions.
- Uses Task Templates for instructing technicians
- Enabling 'Allow Completion with Incomplete Tasks' adds versatility
- This permission is needed to enable Calendar Sync Settings access to a role.
- If you regenerate the iCalendar Token, you will need to complete the setup process
  within your external calendar again.
- Drive time calculations are estimated and separate from jobs themselves.
- Segmentable Inventory is defined by a unit of measure
- Segmentable Inventory does not support networking equipment concepts such as MAC
  Addresses, or ICMP/SNMP monitoring
- Requires API access configuration.
- The maximum file size for custom overlays is 10MB.
- Only .kml file types can be uploaded.
- In order to make changes to jobs within your instance, the corresponding role permissions
  must be enabled first.
- If you're a Super-Admin of your Sonar instance, no permission changes are required
  for your account.
- This checkbox overrides any errors that may be prompted when changing the job type.
- A custom field being used as a variable in a custom link cannot represent an entire
  file path.
- Only 'Text' Custom Fields will be presented as variables when creating a Custom
  Link.
- Geofences are defined using a freehand polygon tool and a map.
- Multiple vertexes can be added to a single Geofence.
- Alerting rotations can be set up for specific users and defined to repeat infinitely.
- Each technician's schedule can be staggered by a set number of weeks.
- Technician availability must be realistic when setting job length.
- It is recommended to only monitor one manufacturer per template, as mixing manufacturers
  will make selecting the OIDs more difficult.
- Technician requirements include role permissions and scheduling setups.
- Job requirements include job types and task templates.
- In the Poller GUI, check the API key and the link to the Sonar instance to make
  sure both are correct.
- Your Poller may be polling too many devices simultaneously or polling your devices
  too frequently. You can uncheck some of the subnets on the Monitoring Template to
  see if it makes a difference, and if so, deploy additional pollers.
- You may also need to increase the 'Account Polling' setting within your instance,
  under Settings > Monitoring > Poller Settings.
- Your Poller hardware may be running out of disk space.
- Ensure that the Poller you have configured is set to monitor the subnet that you
  expect it to.
- If no Poller details are shown, it's because your Poller has never contacted your
  Sonar instance.
- The Week View is designed for quick availability checks and not for in-depth scheduling.
- The poller will not return any data or results if the instance is in test mode.
- It is recommended to have 2 or 3 pollers if your network consists of 3000 devices
  or more.
- The virtual machine should have 4 GB of RAM, at least 2 cores, and 20 GB of hard
  drive space.
- Account Polling should not be set to anything lower than 5 minutes unless you have
  a very small network.
- Generally, Infrastructure Polling should occur every 2 to 5 minutes.
- Start and end points interact with scheduling availabilities for travel time.
- Schedule Blockers can be used for predictable interruptions like lunches.
- The integration does not support VoIP services or static IP/DHCP assignment. These
  must be managed outside of Sonar/MCP.
- The maximum file size you can upload is 10MB.
- The maximum number of items that can display in the 'points near your click' pop-out
  is 50.
- Provisioning defaults and overrides do not include IP assignment. Any static IPs
  or DHCP configuration must be performed outside of Sonar/MCP.
- Refer to Sonar's Security Practices & Certifications for detailed info
- Task Templates can be applied to Jobs, or directly to a task list on an Account
  or Network Site.
- Custom Fields can be tied to Task Templates to gather mandatory information.
- Supernets act as a container for Subnets.
- Subnets contain the IP addresses assigned to your customers.
- Assigning IP addresses can be done manually or through automation.
- Changes to an address list modify the address lists on inline devices in real time
  unless the inline device is disabled.
- Alerting rotations can be set up for specific users and are configured to repeat
  infinitely with specified intervals between repetitions.
- Notifications for alerting rotations can be configured for email and in-app alerts.
- All changes you make to a RADIUS group will modify the RADIUS users on your RADIUS
  server as sessions are expired and renew.
- Deleting a RADIUS group will also remove it from the RADIUS server.
- Devices are instantiated with a Device object during SNMP polling.
- Your Poller may be polling too many devices simultaneously or polling your devices
  too frequently.
- 'When a device is being monitored and it has multiple IPs assigned, the poller will
  use the subnet with the lowest priority # when deciding which IP to use for SNMP
  and ICMP queries.'
- Using API and Webhooks is an alternative means to control customer speeds if Sonar
  doesn't natively support your network hardware or architecture.
- Integration facilitates bidirectional communication between Sonar and Mosaic Cloud
  Platform.
- Synchronization now runs using 20 concurrent threads, supporting approximately 1,000
  devices per minute.
- When the DHCP script sends messages to Sonar, the RouterOS should receive a 200
  HTTP response from Sonar.
- Each https request has a 30 second retry
- Responses are processed at the top of each minute
- Supernets act as a container for your Subnets.
- Data Usage Available Methods
- It is strongly recommended to review the list and configure communication with all
  listed IP addresses.
- if this method is used as the only way customer devices get IP addresses, IP assignment
  itself can easily be used as an authentication method
- very easy to manage IPs directly within Sonar
- can be setup to take advantage of option 82 capable devices to auto populate customer
  owned routers into Sonar
- integration is possible with almost any device as long as it is capable of firing
  a script when a lease is given or expired
- simplest to set up
- can still use pools to quickly understand the next available IP
- full IP history is still maintained
- All changes you make to an address list will modify the address lists on your inline
  devices in real time, unless the inline device is disabled.
- Defining RADIUS groups will automatically create RADIUS user groups on your RADIUS
  server.
- The response doesn’t need to be exact; it can be a prefix.
- Sonar utilizes SOAP API endpoints via Incognito.
- User information entered into Sonar will need access to MPS and DHCP functions.
- Only IPv4 is supported at this time
- The Synchronize command will add all IP assignments from Sonar to the Mikrotik,
  but not any of the static IP assignments in the Mikrotik back to Sonar.
- Redirecting traffic will only work on HTTP traffic, not HTTPS
- Order of new rules created from top to bottom should be Allow to Web Proxy, Delinquent
  Forward to Web Proxy, Allow DNS to Delinquent, Allow HTTPS to Delinquent, Drop all
  Delinquent Traffic
- 'The HTTP GET request should contain the following information: ip_address, mac_address,
  expired, api_key, and optionally remote_id.'
- Documentation available on controlling speeds
- The DHCP script should send messages to Sonar with a 200 HTTP response to indicate
  success.
- Requires setup of address lists in Sonar
- Use of VLANs is supported
- API-SSL services need to be enabled on your MikroTik server.
- If the generated certificate does not have `T` flag, then you need to set it as
  trusted before using it.
- It is strongly recommended to review the list of Egress IPs and configure communication
  with all listed IP addresses.
- Netflow traffic should be prioritized to avoid drops.
- Ensure NTP is set up on delivery devices.
- Dashboard allows switching between views and filtering options.
- Files that can be uploaded to a Network Site must not exceed 100 MB.
- The maximum file size you can upload is 10 MB.
- PacketLogic devices communicate and update noticeably slower than a MikroTik.
- Uses OAuth2 — requires setup of connected app in Sonar
- The FreeRADIUS Genie is designed to use FreeRadius 2 & Ubuntu 16 which are both
  now end of life.
- Instead of using this outgoing approach, it is suggested to pursue a solution using
  FreeRADIUS 3.
- Ensure the FreeRADIUS server uses UTC for accurate session reporting.
- Most attributes are in the units of bits/sec.
- Generally speaking, we will always want fall-through enabled so that more than one
  RADIUS group can affect the same RADIUS user.
- Redirecting traffic will only work on HTTP traffic, not HTTPS.
- CoA Proxy in this manner will only work with FreeRADIUS 2.x, not any of the 3.x
  versions.
- Each NAS you have listed in clients.conf needs to be placed into the same coa_server
  group.
- Ensure Address Lists are synchronized with the MikroTik device.
- Ensure to use the correct IP address for Sonar instance when creating user.
- API-SSL services must be enabled on MikroTik server.
- Ingress and Egress IP addresses will need to be added to your network management
  devices and your firewall in the event DHCP and RADIUS is being used.
- Netflow On-Premises solution requires a dedicated User for integration.
- Ensure your Netflow delivery device is set up for NTP.
- Purchase Orders cannot be deleted once they're created in your instance.
- Unhandled or unsubmitted POs will persist indefinitely.
- Some endpoints may return paginated data
- Use of OAuth2 with refresh token
- Credential validation can be re-verified using the 'Validate Credentials' button.
- Custom Fields of the 'Boolean' type will be reported as 1 (for 'Yes') or 0 (for
  'No').
- Using the numbered CustomFieldData data tables allows for extracting information
  stored in Custom Fields on other entities.
- Report Licenses manage access to reports and control over the BI system.
- Poller collects data using ICMP and SNMP protocols
- Polling performance may be affected by Linux kernel settings
- Sonar uses OAuth2 for authentication.
- This article details an outdated approach to connecting FreeRADIUS to Sonar.
- Ensure FreeRADIUS server is configured to use UTC for accurate session reporting.
- Some reports may return nulls in deeply nested fields
- You must disable the use of the nas table in the SQL database when using CoA proxying,
  as there is no way to define the coa_server property in SQL.
- The Warehouse is currently the same for all connections, ETL_WAREHOUSE
- The Warehouse is case-sensitive, and must be capitalized.
- Make sure not to activate the Firewall until you've entered and described the IP
  addresses needed to continue accessing your instance
- Users must be associated with an existing user in their Sonar instance to use Auth0.
- If a user is disabled, their Sonar user will be automatically disabled during the
  next authentication check.
- Multi-Factor Authentication is supported.
- Sonar provides you with the ability to use Multi-Factor Authentication for logging
  into your instance.
- Rate limits for Authenticator app login attempts are 5 per minute, 15 per hour,
  and 30 per day.
- Rate limits for Email verification login attempts are 3 per minute, 10 per hour,
  and 30 per day.
- Rate limits for SMS login attempts are 2 per minute, 5 per hour, and 15 per day.
- When configuring multiple DHCP servers in your Sonar instance, you can also create
  identical servers if desired.
- Multiple enabled RADIUS servers will result in duplicate sessions across accounts.
- Uses OAuth2 for authentication
- 'More secure: policies often fail both ways, allowing weak passwords (P@ssword1)
  and disallowing strong passwords.'
- 'More flexible: zxcvbn allows many password styles to flourish so long as it detects
  sufficient complexity — passphrases are rated highly given enough uncommon words,
  keyboard patterns are ranked based on length and number of turns, and capitalization
  adds more complexity when it''s unpredictable.'
- Ensure the correct permissions are enabled for user roles to access Purchase Orders.
- The Purchase Orders feature requires configuration before use.
- Removing a Terminated Employee In Sonar
- Role Creation using GraphiQL documentation available.
- Custom Fields of the 'Boolean' type will not be reported as containing a 'Yes' or
  'No'. Instead, the values in these custom fields will be reported as 1 (for 'Yes')
  or 0 (for 'No').
- While the numbered CustomFieldData data tables do generally provide an advantage
  over the standard one, there are still some limitations of this report.
- Different providers have different requirements for setting up SAML.
- If a user is ever 'disabled' and they attempt to use SSO, they'll be met with a
  401 error.
- Sonar allows you to implement a 'Minimum Password strength' using the zxcvbn algorithm.
- 'More secure: policies often fail both ways, allowing weak passwords and disallowing
  strong passwords.'
- 'More flexible: zxcvbn allows many password styles to flourish so long as it detects
  sufficient complexity.'
- When disabling an instance user, they will not be automatically removed from areas
  such as, but not limited to, ticket groups, schedule availabilities, alerting rotations,
  vehicle groups, etc.
- GraphiQL interface available in your instance by accessing [your instance url]/graphiql
- Disbursement process runs once daily around 6 PM EST.
- To view sonarPay chargeback and disputes, corresponding role permission must be
  enabled.
- Deposits may include card and ACH activity.
- sonarPay is automatically set up for disbursements to be released on a daily frequency.
- User Role Creation & Best Practices
- Requires setup of connected app in api
- API responses may vary based on user permissions
- Users must complete setup within 48 hours to activate their account.
- Authorize.net charges a $250 fee for token extraction, which will be credited to
  your Sonar account.
- The extraction process takes 2-4 weeks and is processed on a first-come, first-served
  basis twice a month.
- Users can add a credit card for autopay in the Payment Details section
- Minimum amount for adding funds is $10
- Transactions submitted after the cutoff time of 9:00 PM ET are included in the next
  day's batch.
- Personal Access Token is used as a Bearer Token for authentication
- This is a sonarPay exclusive feature and will not be accessible without enrolling
  with sonarPay.
- The default filtering for the Chargeback & Disputes table is by the 'Reply by' column.
- Google Chrome may have issues with certain extensions.
- Mozilla Firefox may have issues with optional extensions and script blockers.
- Chromium Browsers may have issues due to customizations.
- Safari has known issues with the reporting feature unless cross-site tracking is
  enabled.
- Disbursements are released on a daily frequency, providing there is a balance eligible
  to transfer.
- sonarPay meets all PCI compliance requirements, ensuring the security of your information.
- Refer to the respective sections for permissions and workflows.
- Sonar provides a pre-built customer portal that can be tied to your instance and
  used to provide more control to your customers
- You can only void a payment during a 'Pending' or 'Approved' status.
- If you choose to void the payment, it will void the full payment. You cannot void
  a partial payment.
- Authorize.net charges a $250 fee for this service, credited to your Sonar account
  upon receipt of the file.
- The extraction process takes 2-4 weeks, processed on a first-come, first-served
  basis twice a month.
- Searching is powerful, allowing for complex queries.
- Aggregation results are always run across the entire data set.
- You need to ensure the correct permissions have been added to your user.
- GraphQL Rate Limiting Overview
- Uses Personal Access Tokens for authentication
- Rate limit of 400 requests per minute per user.
- 'API Calls Using Third Party Applications: Personal Access Tokens'
- Results from a query will default to 100 results.
- Up to 10000 records per page can be displayed.
- Sonar does not support recoverable backups of your instance data.
- Data exports include your customer data, notes made on accounts, settings, user
  data, etc.
- There is no way to import prior data into Sonar.
- Interacting with Files via the API
- May have a learning curve as users adjust to navigation improvements
- Sonar provides a pre-built customer portal that can be tied to your instance and
  used to provide more control to your customers.
- Don't modify the files inside the existing Docker Container without redirecting
  the GitHub link, as updates will overwrite all changes during an update.
- Sonar provides a pre-built customer portal, however, we understand that you may
  have a desire to alter or customize it to suit your business needs.
- Be sure to document the steps taken and the changes made so that you can have a
  plan in place to remove the customizations before contacting Sonar Support.
- Dynamic Time Zones in Sonar
- Uses dynamic time zones for scheduling and job displays.
- Currently, Data Imports are limited to DIDs, Voice Providers, and CDRs.
- Additional features will be added in the future.
- This feature is only available in the United States, with a few exceptions for specific
  Canadian customers.
- Data imports are accessible through instance settings.
- Receiving SMS notifications is possible for all users, regardless of permissions.
- Each user is limited to 400 requests per minute (RPM).
- Throttling is enforced on a per-user basis.
- Through pagination, up to 10000 records per page can be displayed.
- Only Super Admins and users with the Update system settings permission are able
  to view and make changes to this page.
- Automatic Exports can be configured to back up data every night at midnight UTC.
- The installation completed successfully, but 401 errors pop up trying to access
  the portal
- The search results window is limited to displaying the first 25 results.
- Troubleshooting the Customer Portal
- Requires proper bearer token with necessary permissions to upload files.
- Upgrade from 18.04 LTS to 22.04 LTS is recommended as 18.04 LTS went End of Life
  in April 2023.
- If asked, keep locally installed versions of configuration files, except for the
  menu.lst option — install the package maintainers' version, if asked.
- The personal user settings page houses information specific to your individual user
  within the Sonar instance.
- Uses Personal Access Tokens for authentication — requires generation of tokens in
  user settings.
- Some endpoints may require specific permissions to access.
- Notifications will only be received if another user triggers the event.
- Tickets can be assigned to groups within the ticketing interface.
- Private groups are only viewable by users within that group.
- Sonar V2 uses GraphQL as its primary API language
- Many APIs that were available in Sonar V1 have been ported to V2 for backwards-compatibility
  purposes
- Spam Tickets will only be visible within the Spam section of Tickets.
- If you do not have permission to 'Delete a Ticket', you will not see 'Delete' as
  an option while viewing the Spam section.
- Both 'Update the SMS settings' and 'View an SMS outbound message' must be enabled
  to view SMS settings.
- How to Integrate Inbound Mailboxes with Slack
- 'Once checked off, there will be a field to enter your webhook URL that was generated
  in step #4 - paste your URL into the Slack webhook url field.'
- Make sure you add the generated 'sonarticketing.rocks' email address listed under
  the 'inbound mailbox' column as a forward address in your domain settings in order
  to correctly receive emails to your Sonar instance.
- The API uses GraphQL for querying data.
- The API supports OAuth2 authentication.
- Ensure that your API client has the necessary permissions.
- If the Let's Encrypt verification process is failing, this is likely due to the
  DNS settings, or firewall rules.
- The installation completed successfully, but 401 errors pop up trying to access
  the portal.
- Emails aren't sending from the portal's 'Register' or 'Reset' pages.
- The Customer Portal certificate isn't renewing automatically.
- The Customer Portal installation is having trouble performing updates.
- It's recommended to repeat this process to upgrade from 18.04 LTS to 22.04 LTS,
  as 18.04 LTS went End of Life in April 2023.
- Internal tickets can also be used for the parent ticket.
- You can push any comments and/or replies out to all child tickets under that parent.
- Not all options will be available to all users. Some options require specific permissions
  to view and select.
- Best Practices to Remain CPNI Compliant
- Ensure the customer's data is protected by a PIN that must be confirmed before any
  information is divulged or changed.
- Notify the customer any time a change is made to their data, as described in the
  CPNI definition.
- Invoices containing voice service charges are divided between service charges and
  CDR charges.
- How Sonar Manages Spam Tickets
- Sonar's Security Strategies
- Technical Security Overview
- 'Once checked off, there will be a field to enter your webhook URL that was generated
  in step #4'
- Ensure proper authentication setup before accessing API endpoints.
- Ensure to add the generated 'sonarticketing.rocks' email address as a forward address
  in your domain settings.
- Support can be reached via the US at 702-447-1247 or via the Canadian at 780-900-1180.
- Emergency Support 24/7 at a rate of $250 per an hour with a minimum of 1 hour.
- Every ticket must be assigned to either a user or a group.
- API requires setup of connected app in Sonar
- The Feedback Portal is not intended for reporting bugs, or seeking technical assistance
  with existing features/functionality.
- Some resources within the Resource Center require a V2 Sonar instance.
- Defaults to false when not specified for displaying CDRs on invoices.
- You must have an active Sonar V2 instance in order to access the Sonar Community
  Forum.
- While Sonar staff may be present within the forum, they may not be able to respond
  in a timely fashion.
- Subscribing to updates can be done via email, text message, Slack, or webhooks.
- Generic Parameters are an essential part of Voice Services and Voice Billing in
  Sonar
- To modify Generic Parameters, navigate to the Services screen (Settings > Billing
  > Services)
- Deletion of accounts is not supported within Sonar, however you can disconnect an
  account.
- Some resources may require a V2 Sonar instance.
- Uses OAuth2 authentication
- Access to the Sonar Community Forum is restricted to active subscribers of Sonar
  Software.
- Some notification methods might update you at different stages.
- Archived release notes provide a table of all historic release notes for V2.
- Some endpoints may require additional headers or parameters based on the request.
- This document provides insight on Sonar and General Data Protection Regulation (GDPR).
- This document provides an overview of Sonar Software's security strategies.
- This document provides an overview of Sonar Software’s security-related technologies,
  policies, and best practices by addressing many of the most common questions and
  areas of importance to our valued business partners.
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check the request parameters.'
- '404 Not Found: The requested resource does not exist.'
- '500 Internal Server Error: Try again later.'
- You cannot have any Open tickets associated with the Account.
- If you contact support for assistance, please provide the entire email from the
  FCC for the most appropriate assistance.
- '401 Unauthorized: Check your OAuth2 token and permissions.'
- '403 Forbidden: Check user permissions.'
- '404 Not Found: Verify the endpoint and parameters.'
- '500 Internal Server Error: Retry after some time.'
- 'FAILED: Address cannot be validated.'
- 'Insufficient funds: Add additional funds before outstanding batches can be sent.'
- 'INVALID_PAYMENT_METHOD: Ensure the payment method is configured correctly.'
- 'TRANSACTION_LIMIT_EXCEEDED: Reduce the number of transactions being processed.'
- 'Invalid processor configuration: Check required fields'
- '401 Unauthorized: Check OAuth token validity.'
- '404 Not Found: Verify endpoint path.'
- '401 Unauthorized: Invalid credentials'
- '404 Not Found: Check the endpoint URL'
- 'Insufficient permissions: Ensure required permissions for tax creation and application.'
- 'Invalid tax rate: Ensure the rate is entered correctly.'
- 'Insufficient funds: Ensure account has a positive balance.'
- If this verification fails, try waiting a bit longer for the changes to propagate
  or review your DNS records.
- Cannot delete a contract template once it has been used to add a contract.
- 'MESSAGE_LIMIT_EXCEEDED: Reduce the number of messages sent in a short time frame.'
- 'INVALID_PHONE_NUMBER: Ensure the phone number is correctly formatted.'
- 'Insufficient funds: GoCardless will decline the transaction.'
- 'Chargeback initiated: Payment flag will be updated to cancelled.'
- Deleting the Provisioning Details record will result in service being removed in
  SMx.
- 'Insufficient funds: Payment will be declined by GoCardless.'
- 'Chargeback initiated: Payment will be marked as cancelled.'
- '400 Bad Request: Check the payload structure.'
- '404 Not Found: Ensure the endpoint is correct.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- 'HTTP 200: Expected response code for successful webhook delivery.'
- 'Plan Unlinked: Indicates that a FiberMap Plan exists in your instance but has not
  yet been associated with a network site.'
- 'Location Unlinked: Indicates that the FiberMap service location has address data
  that could not be imported into Sonar.'
- 'No Address: Indicates that the FiberMap service location has bad address data.'
- 'PLAN_UNLINKED: Indicates a FiberMap Plan exists but is not linked to a network
  site.'
- 'LOCATION_UNLINKED: FiberMap service location has address data that could not be
  imported.'
- 'NO_ADDRESS: FiberMap service location has bad address data.'
- There is no availability for this job.
- This job is blocked by the schedule blocker 'XYZ'.
- Broken link due to a Custom Field being deleted.
- Invalid OID applied to your network monitoring template will break all graphing
  for items that return a 'no such name' response.
- Make sure SNMP is enabled on the device and the community string / credentials match
  what is defined on the Monitoring Template.
- Common issues and their possible solution can be found in the Poller Troubleshooting
  article.
- '200: Indicates request is received but not guaranteed to be processed'
- 'Invalid name: The name of the address list must be unique and contain only letters
  and numbers.'
- '400 Bad Request: Check request parameters'
- '401 Unauthorized: Verify authentication credentials'
- '404 Not Found: Check the endpoint path'
- 'PACKET_LOSS: Monitor network connection and reduce packet frequency'
- 'LATENCY_TIMEOUT: Adjust polling interval or check device status'
- '401 Unauthorized: Check MySQL root password or remote access settings.'
- '403 Forbidden: Insufficient permissions for the requested resource'
- Requests submitted via their support team are handled more efficiently than those
  routed through sales representatives.
- Unmatched information – Generally, this only occurs for CDR imports.
- Duplicate information – This can occur across all import types.
- Invalid – If the data is, for some reason, completely invalid.
- 'REQUEST_LIMIT_EXCEEDED: Request limit of 400/min reached.'
- 'Unmatched information: CDR imports may fail if DIDs are not mapped.'
- 'Duplicate information: Caused by importing a record that already exists.'
- 'Invalid: The data is completely invalid.'
- The minimum amount that can be added at a time is $10.
- Request limit of 400/min reached.
- '401 Unauthorized: Check your credentials and permissions.'
- '401 Unauthorized: Check if your access token is valid.'
- '404 Not Found: Verify the endpoint URL.'
- too many failed authorizations recently
- '401 Unauthorized: Check authentication credentials.'
- For technical assistance, bug reporting, or feature requests please contact support@sonar.software.
- '401 Unauthorized: Check the provided credentials and token expiration.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - MYSQL_PASSWORD
  - OAuthToken
client:
  base_url: https://sonar.software
  auth:
    type: oauth2
    flow: refresh_token
source_metadata: null
