resources:
- name: contact_history
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/id/{id}/activity
    method: GET
- name: create_new_account_user
  endpoint:
    path: /user
    method: POST
- name: user
  endpoint:
    path: /api/1/user
    method: POST
- name: create_new_account_user
  endpoint:
    path: /api/1/user
    method: POST
- name: delete_account_users
  endpoint:
    path: /api/1/user/delete
    method: POST
- name: user_delete
  endpoint:
    path: /user/delete
    method: POST
- name: delete_account_users
  endpoint:
    path: /user/delete
    method: POST
- name: defined_email_senders
  endpoint:
    path: /api/1/account/senders
    method: GET
    data_selector: senders
- name: defined_email_senders
  endpoint:
    path: /api/1/account/senders
    method: GET
- name: senders
  endpoint:
    path: /api/1/account/senders
    method: GET
- name: account_senders
  endpoint:
    path: /api/1/account/senders
    method: GET
    data_selector: object
- name: upload_custom_events
  endpoint:
    path: /api/1/customevents
    method: POST
- name: upload_custom_events
  endpoint:
    path: /api/1/customevents
    method: POST
- name: upload_custom_event_status
  endpoint:
    path: /api/1/customevents/{id}/status
    method: GET
- name: custom_event_status
  endpoint:
    path: /api/1/customevents/{id}/status
    method: GET
- name: custom_events_status
  endpoint:
    path: /customevents/id/status
    method: GET
    data_selector: object
- name: custom_events_status
  endpoint:
    path: /api/1/customevents/id/status
    method: GET
    data_selector: object
- name: logo
  endpoint:
    path: /logo
    method: GET
- name: logo
  endpoint:
    path: /api/1/logo
    method: GET
- name: logo
  endpoint:
    path: /logo
    method: GET
    data_selector: result
- name: logo
  endpoint:
    path: /logo
    method: GET
- name: add_logo
  endpoint:
    path: /api/1/logo
    method: POST
- name: logo
  endpoint:
    path: /logo
    method: POST
- name: logo
  endpoint:
    path: /logo/{id}
    method: GET
- name: logo
  endpoint:
    path: /api/1/logo/{id}
    method: GET
- name: logo
  endpoint:
    path: /logo/id
    method: GET
    data_selector: object
- name: logo
  endpoint:
    path: /logo/id
    method: GET
    data_selector: object
- name: update_logo
  endpoint:
    path: /api/1/logo/{id}
    method: PUT
- name: update_logo
  endpoint:
    path: /api/1/logo/{id}
    method: PUT
- name: delete_logo
  endpoint:
    path: /api/1/logo/{id}
    method: DELETE
- name: delete_logo
  endpoint:
    path: /logo/{id}
    method: DELETE
    data_selector: object
- name: header
  endpoint:
    path: /api/1/header
    method: GET
- name: header
  endpoint:
    path: /header
    method: GET
    data_selector: object
- name: header
  endpoint:
    path: /api/1/header
    method: GET
- name: header
  endpoint:
    path: /api/1/header/{id}
    method: GET
- name: header
  endpoint:
    path: /header
    method: GET
    data_selector: object
- name: header
  endpoint:
    path: /header/id
    method: GET
    data_selector: object
- name: header
  endpoint:
    path: /api/1/header/{id}
    method: GET
- name: update_header
  endpoint:
    path: /api/1/header/{id}
    method: PUT
- name: header
  endpoint:
    path: /header/{id}
    method: PUT
- name: header
  endpoint:
    path: /header/{id}
    method: DELETE
    params: {}
- name: header
  endpoint:
    path: /header/id
    method: PUT
- name: header
  endpoint:
    path: /api/1/header/{id}
    method: DELETE
- name: header
  endpoint:
    path: /api/1/header/
    method: POST
- name: footer
  endpoint:
    path: /api/1/footer
    method: GET
- name: header
  endpoint:
    path: /header
    method: POST
- name: footer
  endpoint:
    path: /api/1/footer
    method: GET
- name: header
  endpoint:
    path: /api/1/header
    method: GET
- name: footer
  endpoint:
    path: /api/1/footer/{id}
    method: GET
- name: footer
  endpoint:
    path: /footer
    method: GET
- name: footer
  endpoint:
    path: /footer/id
    method: GET
    data_selector: object
- name: footer_list
  endpoint:
    path: /footer/list
    method: GET
    data_selector: object
- name: footer
  endpoint:
    path: /api/1/footer
    method: GET
    data_selector: object
- name: header
  endpoint:
    path: /api/1/header
    method: GET
    data_selector: object
- name: footer
  endpoint:
    path: /api/1/footer/{id}
    method: DELETE
- name: footer
  endpoint:
    path: /footer/{id}
    method: GET
- name: footer
  endpoint:
    path: /api/1/footer/{id}
    method: PUT
- name: footer
  endpoint:
    path: /footer
    method: GET
    data_selector: object
- name: footer
  endpoint:
    path: /footer/id
    method: PUT
- name: footer
  endpoint:
    path: /api/1/footer/{id}
    method: DELETE
- name: footer
  endpoint:
    path: /footer/
    method: POST
- name: footer
  endpoint:
    path: /api/1/footer/
    method: POST
- name: image_list
  endpoint:
    path: /api/1/image-list
    method: GET
- name: footer
  endpoint:
    path: /api/1/footer/{id}
    method: PUT
- name: footer
  endpoint:
    path: /footer/id
    method: PUT
- name: image
  endpoint:
    path: /api/1/image
    method: GET
- name: footer
  endpoint:
    path: /footer
    method: POST
- name: image
  endpoint:
    path: /image
    method: GET
    data_selector: entries
- name: image_list
  endpoint:
    path: /api/1/image
    method: GET
- name: image
  endpoint:
    path: /api/1/image
    method: POST
    data_selector: json
- name: image
  endpoint:
    path: /api/1/image
    method: GET
- name: image
  endpoint:
    path: /image
    method: POST
    data_selector: object
    params: {}
- name: image_list
  endpoint:
    path: /image/list
    method: GET
    data_selector: object
    params: {}
- name: image
  endpoint:
    path: /image
    method: POST
- name: image
  endpoint:
    path: /api/1/image/{id}
    method: GET
- name: image
  endpoint:
    path: /api/1/image
    method: POST
- name: image_list
  endpoint:
    path: /api/1/image/list
    method: GET
- name: image
  endpoint:
    path: /image/id
    method: GET
    data_selector: object
- name: image
  endpoint:
    path: /image/{id}
    method: GET
- name: update_image
  endpoint:
    path: /image/{id}
    method: PUT
- name: image
  endpoint:
    path: /image/id
    method: GET
    data_selector: object
- name: update_image
  endpoint:
    path: /api/1/image/{id}
    method: PUT
- name: delete_image
  endpoint:
    path: /image/{id}
    method: DELETE
- name: media
  endpoint:
    path: /api/1/media
    method: GET
- name: delete_image
  endpoint:
    path: /api/1/image/{id}
    method: DELETE
- name: media
  endpoint:
    path: /media/
    method: GET
    data_selector: entries
- name: media
  endpoint:
    path: /api/1/media/
    method: GET
- name: media_file
  endpoint:
    path: /media/{id}
    method: GET
    data_selector: ''
- name: media_file
  endpoint:
    path: /api/1/media/{id}
    method: GET
- name: media
  endpoint:
    path: /media/id
    method: GET
    data_selector: object
- name: media
  endpoint:
    path: /media/id
    method: GET
    data_selector: object
- name: Update Media File
  endpoint:
    path: /media/{id}
    method: PUT
- name: update_media_file
  endpoint:
    path: /media/{id}
    method: PUT
- name: delete_media_object
  endpoint:
    path: /api/1/media/{id}
    method: DELETE
- name: delete_media_object
  endpoint:
    path: /api/1/media/{id}
    method: DELETE
- name: add_media_file
  endpoint:
    path: /api/1/media
    method: POST
- name: add_media_file
  endpoint:
    path: /api/1/media
    method: POST
- name: media_link
  endpoint:
    path: /api/1/medialink
    method: POST
    data_selector: json
- name: add_media_link
  endpoint:
    path: /api/1/medialink
    method: POST
- name: form_list
  endpoint:
    path: /form
    method: GET
- name: form
  endpoint:
    path: /api/1/form
    method: GET
- name: form
  endpoint:
    path: /api/1/form
    method: GET
    data_selector: entries
- name: classic_form_urls
  endpoint:
    path: /api/1/form/{id}/urls
    method: GET
- name: form
  endpoint:
    path: /form
    method: GET
    data_selector: entries
- name: form_urls
  endpoint:
    path: /form/id/urls
    method: GET
- name: landing_page_urls
  endpoint:
    path: /landing-page/urls
    method: GET
- name: classic_form_urls
  endpoint:
    path: /form/{id}/urls
    method: GET
- name: landing_page
  endpoint:
    path: /page
    method: GET
- name: form
  endpoint:
    path: /api/1/form/id/urls
    method: GET
    data_selector: result
- name: landing_page
  endpoint:
    path: /api/1/landing-page-list
    method: GET
    data_selector: result
- name: page
  endpoint:
    path: /page
    method: GET
    data_selector: entries
- name: landing_page
  endpoint:
    path: /api/1/page
    method: GET
- name: landing_page
  endpoint:
    path: /page/{id}
    method: GET
    data_selector: ''
- name: page
  endpoint:
    path: /page
    method: GET
- name: landing_page
  endpoint:
    path: /page/id
    method: GET
- name: landing_page_list
  endpoint:
    path: /landing-page-list
    method: GET
- name: landing_page
  endpoint:
    path: /api/1/page/id
    method: GET
- name: delete_landing_page
  endpoint:
    path: /api/1/page/{id}
    method: DELETE
    data_selector: ''
- name: delete_landing_page
  endpoint:
    path: /api/1/page/{id}
    method: DELETE
    data_selector: ''
- name: landing_page_urls
  endpoint:
    path: /api/1/page/{id}/urls
    method: GET
- name: landing_page_urls
  endpoint:
    path: /api/1/page/{id}/urls
    method: GET
- name: landing_page_urls
  endpoint:
    path: /page/id/urls
    method: GET
    data_selector: results
- name: programs
  endpoint:
    path: /program
    method: GET
- name: programs
  endpoint:
    path: /api/1/program
    method: GET
    data_selector: ''
- name: program
  endpoint:
    path: /program
    method: GET
- name: program
  endpoint:
    path: /program
    method: GET
- name: message_report
  endpoint:
    path: /message/{id}/report
    method: GET
    data_selector: object
    params:
      id: string
- name: message_report
  endpoint:
    path: /message/{id}/report
    method: GET
    data_selector: object
    params:
      id: string
- name: message_report
  endpoint:
    path: /message/id/report
    method: GET
    data_selector: object
    params: {}
- name: message_report_drilldown
  endpoint:
    path: /api/1/message/{id}/report/{drilldown}
    method: GET
    data_selector: result
    params:
      count: '1000'
      offset: '0'
      responseformat: JSON
- name: message_report_drilldown
  endpoint:
    path: /message/{id}/report/{drilldown}
    method: GET
    data_selector: result
    params:
      count: '1000'
      offset: '0'
      responseformat: JSON
- name: message_report
  endpoint:
    path: /message/id/report/drilldown
    method: GET
- name: message_report
  endpoint:
    path: /message/id/report/drilldown
    method: GET
- name: message_report
  endpoint:
    path: /api/1/message/report
    method: GET
    data_selector: json
    params:
      period: string
- name: message_report
  endpoint:
    path: /message/report
    method: GET
    data_selector: json
    params:
      period: YYMM
- name: message_report
  endpoint:
    path: /message/report
    method: GET
    data_selector: object
    params: {}
- name: message_report
  endpoint:
    path: /message/report
    method: GET
- name: media_report
  endpoint:
    path: /media/{id}/report
    method: GET
    data_selector: object
    params:
      id: string
- name: media_report
  endpoint:
    path: /media/{id}/report/
    method: GET
- name: media_message_report
  endpoint:
    path: /media/id/report/
    method: GET
    data_selector: object
- name: message_report_by_time_period
  endpoint:
    path: /get-message-report-by-time-period
    method: GET
- name: media_message_report
  endpoint:
    path: /api/1/media/{id}/report/messages
    method: GET
- name: media_message_report
  endpoint:
    path: /api/1/media/{id}/report/messages
    method: GET
- name: media_report
  endpoint:
    path: /api/1/media/id/report/messages
    method: GET
    data_selector: messages
- name: media_report
  endpoint:
    path: /api/1/media/id/report/messages
    method: GET
    data_selector: object
- name: media_view_report
  endpoint:
    path: /api/1/media/view/report
    method: GET
    data_selector: object
- name: media_view_report
  endpoint:
    path: /api/1/media/{id}/report/views
    method: GET
    data_selector: array of objects
- name: media_view_report
  endpoint:
    path: /api/1/media/{id}/report/views
    method: GET
    data_selector: array of objects
    params:
      id: string
- name: media_message_report
  endpoint:
    path: /media/id/report/views
    method: GET
- name: media_timeline_report
  endpoint:
    path: /media/timeline/report
    method: GET
- name: media_message_report
  endpoint:
    path: /media/id/report/views
    method: GET
- name: media_timeline_report
  endpoint:
    path: /api/1/media/{id}/report/timeline
    method: GET
    data_selector: array of objects
- name: media_timeline_report
  endpoint:
    path: /api/1/media/{id}/report/timeline
    method: GET
    data_selector: array of objects
- name: media_view_report
  endpoint:
    path: /api/1/media/id/report/timeline
    method: GET
- name: media_view_report
  endpoint:
    path: /media/id/report/timeline
    method: GET
- name: form_report
  endpoint:
    path: /form/report
    method: GET
- name: form_report
  endpoint:
    path: /api/1/form/{id}/report
    method: GET
    data_selector: result
    params: {}
- name: form_report
  endpoint:
    path: /api/1/form/{id}/report
    method: GET
    data_selector: result
- name: media_timeline_report
  endpoint:
    path: /api/1/form/id/report
    method: GET
- name: landing_page_report
  endpoint:
    path: /api/1/landing-page/report
    method: GET
- name: media_timeline_report
  endpoint:
    path: /api/1/form/id/report
    method: GET
- name: landing_page_report
  endpoint:
    path: /reference/get-landing-page-report
    method: GET
- name: landing_page_report
  endpoint:
    path: /api/1/page/{id}/report
    method: GET
    data_selector: object
- name: landing_page_report
  endpoint:
    path: /page/{id}/report
    method: GET
- name: form_report
  endpoint:
    path: /page/id/report
    method: GET
- name: message_list
  endpoint:
    path: /message
    method: GET
    params:
      type: ''
      count: '1000'
      offset: '0'
- name: message
  endpoint:
    path: /message
    method: GET
    params:
      type: ''
      count: '1000'
      offset: '0'
- name: message
  endpoint:
    path: /message
    method: GET
    data_selector: msgresult
- name: add_new_template_or_draft_message
  endpoint:
    path: /api/1/message
    method: POST
- name: add_new_template_or_draft_message
  endpoint:
    path: /api/1/message
    method: POST
- name: campaign
  endpoint:
    path: /api/1/campaigns/{id}
    method: GET
- name: campaign
  endpoint:
    path: /campaigns/{id}
    method: GET
- name: campaigns
  endpoint:
    path: /api/1/campaigns/id
    method: GET
    data_selector: object
    params: {}
- name: campaign
  endpoint:
    path: /campaigns/id
    method: GET
- name: campaigns
  endpoint:
    path: /api/1/campaigns
    method: GET
    data_selector: ''
- name: campaigns
  endpoint:
    path: /api/1/campaigns
    method: GET
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: records
- name: campaigns
  endpoint:
    path: /campaigns
    method: GET
    data_selector: object
- name: send_message
  endpoint:
    path: /api/1/message/{msgid}/send
    method: POST
- name: send_message
  endpoint:
    path: /message/{msgid}/send
    method: POST
- name: resend_message
  endpoint:
    path: /api/1/message/{msgid}/send
    method: PUT
- name: resend_message
  endpoint:
    path: /api/1/message/{msgid}/send
    method: PUT
- name: send_message
  endpoint:
    path: /api/1/message/msgid/send
    method: PUT
- name: message
  endpoint:
    path: /api/1/message/msgid/send
    method: PUT
- name: update_template_or_draft_message
  endpoint:
    path: /api/1/message/{id}
    method: PUT
- name: message
  endpoint:
    path: /api/1/message/id
    method: PUT
- name: update_template_or_draft_message
  endpoint:
    path: /message/{id}
    method: PUT
- name: delete_message
  endpoint:
    path: /api/1/message/{id}
    method: DELETE
- name: delete_message
  endpoint:
    path: /api/1/message/{id}
    method: DELETE
- name: message_html_contents
  endpoint:
    path: /message/{id}/{recid}
    method: GET
- name: message
  endpoint:
    path: /api/1/message
    method: DELETE
    data_selector: object
- name: message_html_contents
  endpoint:
    path: /api/1/message/{id}/{recid}
    method: GET
- name: message
  endpoint:
    path: /message/id/recid
    method: GET
- name: message
  endpoint:
    path: /message/id/recid
    method: GET
    data_selector: object
- name: ETE Request
  endpoint:
    path: /ete/v1/email/{accountid}/{templateid}
    method: POST
- name: ETE Request
  endpoint:
    path: /email/{accountid}/{templateid}
    method: POST
- name: email
  endpoint:
    path: /email/accountid/templateid
    method: POST
- name: email_template
  endpoint:
    path: /ete/v1/email/accountid/templateid
    method: POST
- name: seo_report
  endpoint:
    path: /api/1/seoreport
    method: GET
    params:
      keyword: string
      url: string
- name: seo_report
  endpoint:
    path: /api/1/seoreport
    method: GET
    params: {}
- name: seoreport
  endpoint:
    path: /api/1/seoreport
    method: GET
- name: seoreport
  endpoint:
    path: /api/1/seoreport
    method: GET
    data_selector: object
- name: seo_keywords
  endpoint:
    path: /api/1/seokeywords
    method: GET
    data_selector: response
- name: seo_keywords
  endpoint:
    path: /api/1/seokeywords
    method: GET
- name: seo_keywords
  endpoint:
    path: /seokeywords
    method: GET
    data_selector: object
- name: seo_keywords
  endpoint:
    path: /seokeywords
    method: GET
    data_selector: object
- name: add_contact
  endpoint:
    path: /list/{listid}/record
    method: POST
- name: add_contact
  endpoint:
    path: /list/{listid}/record
    method: POST
- name: list_record
  endpoint:
    path: /list/listid/record
    method: POST
- name: upsert_contact
  endpoint:
    path: /api/1/list/{listid}/record
    method: PUT
    data_selector: response
    params: {}
- name: upsert_contact
  endpoint:
    path: /api/1/list/{listid}/record
    method: PUT
    data_selector: response
    params: {}
- name: contact
  endpoint:
    path: /api/1/list/listid/record
    method: PUT
    data_selector: records
- name: contact_history_and_score
  endpoint:
    path: /list/{listid}/record/{recordid}/facts
    method: GET
    data_selector: records
    params:
      listid: string
      recordid: string
- name: contact_history_score
  endpoint:
    path: /list/{listid}/record/{recordid}/facts
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /api/1/list/listid/record/recordid/facts
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /list/listid/record/recordid/facts
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /api/1/list/{listid}/record/{recordid}
    method: GET
    data_selector: array of strings
    params:
      listid: string
      recordid: string
- name: contact_record
  endpoint:
    path: /list/{listid}/record/{recordid}
    method: GET
    data_selector: response
- name: update_contact
  endpoint:
    path: /api/1/list/{listid}/record/{recordid}
    method: PUT
    data_selector: object
    params:
      returncontact: Y
- name: update_contact
  endpoint:
    path: /api/1/list/{listid}/record/{recordid}
    method: PUT
    params:
      returncontact: Y
- name: delete_contact
  endpoint:
    path: /list/{listid}/record/{recordid}
    method: DELETE
- name: delete_contact
  endpoint:
    path: /api/1/list/{listid}/record/{recordid}
    method: DELETE
- name: delete_multiple_contacts
  endpoint:
    path: /api/1/list/{listid}/record
    method: DELETE
    params: {}
- name: delete_multiple_contacts
  endpoint:
    path: /list/{listid}/record
    method: DELETE
    params:
      contactids: string
- name: contact
  endpoint:
    path: /list/listid/record
    method: DELETE
- name: get_contact_record_id
  endpoint:
    path: /api/1/list/lookup
    method: GET
    params:
      cookie: string
- name: get_contact_record_id_based_on_cookie_value
  endpoint:
    path: /api/1/list/lookup
    method: GET
    params:
      cookie: string
- name: contact
  endpoint:
    path: /api/1/list/lookup
    method: GET
    data_selector: records
- name: contact_lookup
  endpoint:
    path: /api/1/list/lookup
    method: GET
    data_selector: object
- name: contact
  endpoint:
    path: /list/lookup/{listid}
    method: GET
    data_selector: object
    params: {}
- name: get_contact_from_list
  endpoint:
    path: /list/lookup/{listid}
    method: GET
    params: {}
- name: contact
  endpoint:
    path: /api/1/list/lookup/listid
    method: GET
    data_selector: records
- name: list_lookup
  endpoint:
    path: /list/lookup/listid
    method: GET
    data_selector: object
- name: set_multiple_subscriptions
  endpoint:
    path: /api/1/subscription/setcategories
    method: PUT
    data_selector: response
- name: set_multiple_subscriptions
  endpoint:
    path: /api/1/subscription/setcategories
    method: PUT
    data_selector: response
    params: {}
- name: subscription
  endpoint:
    path: /subscription/setcategories
    method: PUT
- name: subscription
  endpoint:
    path: /subscription/setcategories
    method: PUT
- name: contact
  endpoint:
    path: /contacts
    method: GET
- name: update_subscription_by_email
  endpoint:
    path: /api/1/subscription/optout
    method: PUT
    data_selector: null
    params: {}
- name: update_subscription_by_email
  endpoint:
    path: /api/1/subscription/optout
    method: PUT
    data_selector: response
    params: {}
- name: subscription_optout
  endpoint:
    path: /api/1/subscription/optout
    method: PUT
    data_selector: object
- name: subscription
  endpoint:
    path: /api/1/subscription/optout
    method: PUT
- name: UploadSpecs
  endpoint:
    path: /reference/uploadspecs-overview
    method: GET
- name: Update or Merge a list
  endpoint:
    path: /reference/update-or-merge-a-list
    method: POST
- name: delete_records_from_list
  endpoint:
    path: /api/1/list/{listid}/record
    method: DELETE
    params:
      contactids: Up to 100 record ids in the format of l-0001:1,l-0001:2,l-0001:a
- name: delete_records_from_list
  endpoint:
    path: /api/1/list/{listid}/record
    method: DELETE
    data_selector: null
    params:
      contactids: Up to 100 record ids in the format of l-0001:1,l-0001:2,l-0001:a
- name: act_on_assets
  endpoint:
    path: /api/1/list
    method: GET
    data_selector: assets
    params:
      listingtype: string
      count: int32
      offset: int32
- name: list
  endpoint:
    path: /api/1/list
    method: GET
    data_selector: records
    params: {}
- name: list_of_act_on_assets
  endpoint:
    path: /list
    method: GET
    data_selector: response
    params:
      listingtype: contact_list
      count: 1000
      offset: 0
- name: create_list
  endpoint:
    path: /list
    method: POST
- name: list
  endpoint:
    path: /list
    method: GET
    data_selector: records
- name: create_a_new_list
  endpoint:
    path: /api/1/list
    method: POST
- name: Download List
  endpoint:
    path: /list/{listid}
    method: GET
    data_selector: response
    params:
      count: '1000'
      offset: '0'
- name: list
  endpoint:
    path: /list/listid
    method: GET
- name: download_list
  endpoint:
    path: /list/{listid}
    method: GET
    data_selector: response
    params:
      count: 1000
      offset: 0
- name: update_or_merge_a_list
  endpoint:
    path: /api/1/list/{listid}
    method: PUT
- name: list
  endpoint:
    path: /list/listid
    method: GET
    data_selector: data
    params: {}
- name: update_or_merge_a_list
  endpoint:
    path: /api/1/list/{listid}
    method: PUT
- name: delete_list
  endpoint:
    path: /api/1/list/{listid}
    method: DELETE
- name: delete_a_list
  endpoint:
    path: /api/1/list/{listid}
    method: DELETE
- name: list_upload_status
  endpoint:
    path: /api/1/list/{jobid}/status
    method: GET
- name: list_upload_status
  endpoint:
    path: /api/1/list/{jobid}/status
    method: GET
    data_selector: status
- name: list_job_status
  endpoint:
    path: /list/jobid/status
    method: GET
- name: rejected_upload_records
  endpoint:
    path: /api/1/list/rejectedUploadRecords
    method: GET
    data_selector: object
- name: rejected_upload_records
  endpoint:
    path: /list/rejectedUploadRecords
    method: GET
    data_selector: records
    params: {}
- name: subscription_categories
  endpoint:
    path: /reference/get-subscription-categories
    method: GET
- name: subscription_category
  endpoint:
    path: /subscription/category
    method: GET
- name: rejected_upload_records
  endpoint:
    path: /list/rejectedUploadRecords
    method: GET
    data_selector: object
- name: subscription_categories
  endpoint:
    path: /reference/get-subscription-categories
    method: GET
- name: subscription_opt_outs
  endpoint:
    path: /api/1/subscription/optout
    method: GET
    data_selector: records
    params:
      count: '1000'
      offset: '0'
- name: subscription_category
  endpoint:
    path: /api/1/subscription/category
    method: GET
- name: subscription_optout
  endpoint:
    path: /api/1/subscription/optout
    method: GET
- name: hard_bounce_list
  endpoint:
    path: /reference/get-hard-bounce-list
    method: GET
- name: subscription_opt_outs
  endpoint:
    path: /api/1/subscription/optout
    method: GET
    data_selector: records
    params: {}
- name: hard_bounce_list
  endpoint:
    path: /list/hardbounce
    method: GET
    data_selector: records
    params:
      offset: '0'
- name: optout
  endpoint:
    path: /subscription/optout
    method: GET
- name: hardbounce
  endpoint:
    path: /list/hardbounce
    method: GET
- name: hard_bounce_list
  endpoint:
    path: /api/1/list/hardbounce
    method: GET
    params:
      count: '1000'
      offset: '0'
- name: spam_complaint
  endpoint:
    path: /api/1/list/spamcomplaint
    method: GET
    params:
      count: '1000'
      offset: '0'
- name: hardbounce
  endpoint:
    path: /api/1/list/hardbounce
    method: GET
    data_selector: object
- name: spam_complaint
  endpoint:
    path: /api/1/list/spamcomplaint
    method: GET
    params:
      count: 1000
      offset: 0
- name: spam_complaint_list
  endpoint:
    path: /list/spamcomplaint
    method: GET
- name: opt_out_list
  endpoint:
    path: /list/optout
    method: GET
- name: spam_complaint
  endpoint:
    path: /list/spamcomplaint
    method: GET
- name: opt_out
  endpoint:
    path: /list/optout
    method: GET
- name: opt_out_list
  endpoint:
    path: /api/1/list/optout
    method: GET
    data_selector: records
    params:
      offset: 0
- name: opt_out_list
  endpoint:
    path: /api/1/list/optout
    method: GET
    params:
      count: '1000'
      offset: '0'
- name: optout_list
  endpoint:
    path: /list/optout
    method: GET
- name: spam_complaint_list
  endpoint:
    path: /spam-complaint-list
    method: GET
- name: update_optout_list
  endpoint:
    path: /api/1/list/optout
    method: PUT
- name: optout_list
  endpoint:
    path: /list/optout
    method: GET
- name: spam_complaint_list
  endpoint:
    path: /spam-complaint-list
    method: GET
- name: opt_out_list
  endpoint:
    path: /list/optout
    method: GET
- name: update_optout_list
  endpoint:
    path: /api/1/list/optout
    method: PUT
- name: remove_opt_outs
  endpoint:
    path: /api/1/list/optin
    method: PUT
- name: opt_out_list
  endpoint:
    path: /api/1/list/optout
    method: PUT
- name: remove_opt_outs
  endpoint:
    path: /api/1/list/optin
    method: PUT
- name: optout_list
  endpoint:
    path: /list/optin
    method: PUT
- name: opt_out_list
  endpoint:
    path: /list/optin
    method: PUT
- name: contact
  endpoint:
    path: /reference/get-contacts-from-the-act-on-contacts-list
    method: GET
- name: contact
  endpoint:
    path: /reference/get-contacts-from-the-act-on-contacts-list
    method: GET
    data_selector: records
    params: {}
- name: contacts
  endpoint:
    path: /reference/get-contacts-from-the-act-on-contacts-list
    method: GET
    data_selector: records
    params: {}
- name: import_contacts
  endpoint:
    path: /{accountId}/import/contacts/{importDefinitionId}
    method: POST
- name: import_contacts
  endpoint:
    path: /ucl/v2/{accountId}/import/contacts/{importDefinitionId}
    method: POST
- name: import_definition
  endpoint:
    path: /ucl/v2/{accountId}/import/definition
    method: GET
- name: import_definition
  endpoint:
    path: /accountId/import/definition
    method: GET
- name: import_definition
  endpoint:
    path: /ucl/v2/{accountId}/import/definition
    method: GET
- name: import_definition
  endpoint:
    path: /{accountId}/import/definition
    method: POST
    params:
      accountId: string
- name: Import Definition
  endpoint:
    path: /accountId/import/definition
    method: GET
    data_selector: records
- name: import_definition
  endpoint:
    path: /{accountId}/import/definition
    method: POST
    params:
      accountId: string
- name: import_definition
  endpoint:
    path: /ucl/v2/{accountId}/import/definition/{importDefinitionId}
    method: GET
- name: Import Definition
  endpoint:
    path: /accountId/import/definition/importDefinitionId
    method: GET
    data_selector: records
    params: {}
- name: import_definition
  endpoint:
    path: /{accountId}/import/definition/{importDefinitionId}
    method: GET
- name: Import Definition
  endpoint:
    path: /ucl/v2/{accountId}/import/definition/{importDefinitionId}
    method: PUT
    params:
      accountId: string
      importDefinitionId: int32
      delimiter: string
      importDefinitionName: string
      importSegmentIds: array of strings
      mappings: array
      mergeStrategy: string
      objectType: string
      quote: string
- name: import_definition
  endpoint:
    path: /accountId/import/definition/importDefinitionId
    method: GET
    data_selector: result
    params: {}
- name: import_definition
  endpoint:
    path: /ucl/v2/{accountId}/import/definition/{importDefinitionId}
    method: PUT
- name: delete_import_definition
  endpoint:
    path: /{accountId}/import/definition/{importDefinitionId}
    method: DELETE
- name: delete_import_definition
  endpoint:
    path: /ucl/v2/{accountId}/import/definition/{importDefinitionId}
    method: DELETE
- name: import_status
  endpoint:
    path: /ucl/v2/{accountId}/import/status/{importId}
    method: GET
    data_selector: data
    params: {}
- name: Import Definition
  endpoint:
    path: /accountId/import/definition/importDefinitionId
    method: DELETE
- name: import_status
  endpoint:
    path: /accountId/import/status/importId
    method: GET
    data_selector: results
- name: import_status
  endpoint:
    path: /ucl/v2/{accountId}/import/status/{importId}
    method: GET
    data_selector: data
    params: {}
- name: contact
  endpoint:
    path: /{accountId}/contact/
    method: GET
    params:
      page: 0
- name: import_status
  endpoint:
    path: /accountId/import/status/importId
    method: GET
- name: contact
  endpoint:
    path: /accountId/contact/
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /{accountId}/contact/
    method: GET
    params:
      page: 0
- name: contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/
    method: POST
- name: contacts
  endpoint:
    path: /ucl/v2/accountId/contact/
    method: POST
    data_selector: Result
    params:
      createContactMethod: EMAIL
- name: contact
  endpoint:
    path: /accountId/contact/
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /{accountId}/contact/byFields
    method: POST
    params:
      page: 0
      pageSize: 50
- name: contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/
    method: POST
- name: contact
  endpoint:
    path: /accountId/contact/byFields
    method: POST
    data_selector: records
- name: contact
  endpoint:
    path: /accountId/contact/
    method: POST
    data_selector: results
    params:
      createContactMethod: EMAIL
- name: contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/cookieId/{cookieId}
    method: GET
- name: contacts
  endpoint:
    path: /{accountId}/contact/byFields
    method: POST
    data_selector: object
    params:
      page: 0
      pageSize: 50
- name: contact
  endpoint:
    path: /accountId/contact/cookieId/cookieId
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /{accountId}/contact/email/{emailAddress}
    method: GET
    params:
      page: 0
- name: contact
  endpoint:
    path: /accountId/contact/byFields
    method: POST
    data_selector: result
- name: contact
  endpoint:
    path: /accountId/contact/email/emailAddress
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/cookieId/{cookieId}
    method: GET
    data_selector: object
- name: contact
  endpoint:
    path: /accountId/contact/cookieId/cookieId
    method: GET
- name: update_contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/email/{emailAddress}
    method: PUT
    params:
      upsertContactPolicy: OLDEST_CONTACT
- name: contact
  endpoint:
    path: /{accountId}/contact/email/{emailAddress}
    method: GET
    params:
      page: 0
- name: contact
  endpoint:
    path: /accountId/contact/email/emailAddress
    method: PUT
- name: contact
  endpoint:
    path: /accountId/contact/email/emailAddress
    method: GET
    data_selector: Result
    params: {}
- name: delete_contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/email/{emailAddress}
    method: DELETE
    params:
      deleteContactPolicy: OLDEST_CONTACT
- name: update_contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/email/{emailAddress}
    method: PUT
    params:
      upsertContactPolicy: OLDEST_CONTACT
- name: contact
  endpoint:
    path: /accountId/contact/email/emailAddress
    method: DELETE
- name: contact
  endpoint:
    path: /accountId/contact/email/emailAddress
    method: PUT
- name: delete_contacts
  endpoint:
    path: /{accountId}/contact/emails
    method: DELETE
    params:
      deleteContactPolicy: OLDEST_CONTACT
- name: contact
  endpoint:
    path: /accountId/contact/emails
    method: DELETE
- name: delete_contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/email/{emailAddress}
    method: DELETE
    params:
      deleteContactPolicy: OLDEST_CONTACT
- name: contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/externalId/{objectType}/{externalId}
    method: GET
- name: contact
  endpoint:
    path: /accountId/contact/email/emailAddress
    method: DELETE
- name: contact
  endpoint:
    path: /accountId/contact/externalId/objectType/externalId
    method: GET
    data_selector: records
- name: delete_contacts
  endpoint:
    path: /ucl/v2/{accountId}/contact/emails
    method: DELETE
    params:
      deleteContactPolicy: OLDEST_CONTACT
- name: contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/externalId/{objectType}/{externalId}
    method: PUT
- name: contact
  endpoint:
    path: /accountId/contact/emails
    method: DELETE
    data_selector: null
    params: {}
- name: contact
  endpoint:
    path: /accountId/contact/externalId/objectType/externalId
    method: PUT
    data_selector: Result
    params: {}
- name: contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/externalId/{objectType}/{externalId}
    method: GET
    data_selector: object
- name: delete_contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/externalId/{objectType}/{externalId}
    method: DELETE
    data_selector: boolean
    params: {}
- name: contact
  endpoint:
    path: /accountId/contact/externalId/objectType/externalId
    method: GET
    data_selector: records
    params: {}
- name: contact
  endpoint:
    path: /accountId/contact/externalId/objectType/externalId
    method: DELETE
- name: update_contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/externalId/{objectType}/{externalId}
    method: PUT
- name: contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/id/{id}
    method: GET
    data_selector: object
- name: contact
  endpoint:
    path: /accountId/contact/id/id
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /accountId/contact/externalId/objectType/externalId
    method: DELETE
    data_selector: Result
    params: {}
- name: contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/id/{id}
    method: GET
- name: update_contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/id/{id}
    method: PUT
- name: contact
  endpoint:
    path: /accountId/contact/id/id
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /accountId/contact/id/id
    method: PUT
- name: delete_contacts
  endpoint:
    path: /ucl/v2/{accountId}/contact/ids
    method: DELETE
- name: update_contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/id/{id}
    method: PUT
- name: contact
  endpoint:
    path: /accountId/contact/id/id
    method: PUT
- name: contact
  endpoint:
    path: /accountId/contact/ids
    method: DELETE
- name: delete_contacts
  endpoint:
    path: /{accountId}/contact/ids
    method: DELETE
- name: contact_history
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/email/{emailAddress}/activity
    method: GET
    params:
      monthsOfPastData: string
- name: contact_report
  endpoint:
    path: /accountId/contactReport/email/emailAddress/activity
    method: GET
    data_selector: json
- name: contact_history
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/email/{emailAddress}/activity
    method: GET
    params:
      monthsOfPastData: ''
- name: get_all_scores_for_contact_by_email
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/email/{emailAddress}/scores
    method: GET
    data_selector: object
- name: contact_report
  endpoint:
    path: /accountId/contactReport/email/emailAddress/activity
    method: GET
    data_selector: records
    params: {}
- name: contact_report
  endpoint:
    path: /accountId/contactReport/email/emailAddress/scores
    method: GET
    data_selector: results
- name: contact_scores
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/email/{emailAddress}/scores
    method: GET
- name: segments_by_email
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/email/{emailAddress}/segments
    method: GET
- name: contact_history
  endpoint:
    path: /accountId/contactReport/email/emailAddress/scores
    method: GET
    data_selector: scores
- name: contact_report
  endpoint:
    path: /accountId/contactReport/email/emailAddress/segments
    method: GET
    data_selector: results
- name: contact_segments
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/email/{emailAddress}/segments
    method: GET
- name: contact_history
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/externalId/{objectType}/{externalId}/activity
    method: GET
    data_selector: object
- name: contact_report
  endpoint:
    path: /accountId/contactReport/email/emailAddress/segments
    method: GET
- name: contact_report
  endpoint:
    path: /accountId/contactReport/externalId/objectType/externalId/activity
    method: GET
- name: contact_history
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/externalId/{objectType}/{externalId}/activity
    method: GET
    data_selector: object
- name: get_all_scores
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/externalId/{objectType}/{externalId}/scores
    method: GET
- name: contact_report
  endpoint:
    path: /accountId/contactReport/externalId/objectType/externalId/activity
    method: GET
- name: contact_report
  endpoint:
    path: /accountId/contactReport/externalId/objectType/externalId/scores
    method: GET
    data_selector: results
- name: get_all_scores
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/externalId/{objectType}/{externalId}/scores
    method: GET
- name: contact_report
  endpoint:
    path: /accountId/contactReport/externalId/objectType/externalId/scores
    method: GET
    data_selector: records
- name: get_all_segments
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/externalId/{objectType}/{externalId}/segments
    method: GET
- name: contact_segments
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/externalId/{objectType}/{externalId}/segments
    method: GET
- name: contact_report
  endpoint:
    path: /accountId/contactReport/externalId/objectType/externalId/segments
    method: GET
- name: contact_report
  endpoint:
    path: /accountId/contactReport/externalId/objectType/externalId/segments
    method: GET
- name: contact_scores
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/id/{id}/scores
    method: GET
- name: contact_scores
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/id/{id}/scores
    method: GET
- name: contact_report
  endpoint:
    path: /accountId/contactReport/id/id/scores
    method: GET
    data_selector: results
- name: contact_history
  endpoint:
    path: /accountId/contactReport/id/id/scores
    method: GET
- name: segments_by_contact_id
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/id/{id}/segments
    method: GET
- name: get_all_segments_by_contact_id
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/id/{id}/segments
    method: GET
- name: contact_report
  endpoint:
    path: /accountId/contactReport/id/id/segments
    method: GET
- name: contact_report
  endpoint:
    path: /accountId/contactReport/id/id/segments
    method: GET
- name: schema
  endpoint:
    path: /ucl/v2/{accountId}/schema/
    method: GET
- name: schema
  endpoint:
    path: /ucl/v2/{accountId}/schema/
    method: GET
- name: schema
  endpoint:
    path: /accountId/schema/
    method: GET
    data_selector: records
    params: {}
- name: schema
  endpoint:
    path: /ucl/v2/accountId/schema/
    method: GET
    data_selector: results
- name: add_field
  endpoint:
    path: /ucl/v2/{accountId}/schema/field/
    method: POST
- name: schema_field
  endpoint:
    path: /accountId/schema/field/
    method: POST
    data_selector: null
    params: {}
- name: field
  endpoint:
    path: /ucl/v2/{accountId}/schema/field/
    method: POST
- name: update_field_definition
  endpoint:
    path: /ucl/v2/{accountId}/schema/field/{fieldId}
    method: PUT
- name: Update FieldDefinition
  endpoint:
    path: /ucl/v2/{accountId}/schema/field/{fieldId}
    method: PUT
- name: Add Field
  endpoint:
    path: /accountId/schema/field/fieldId
    method: PUT
    data_selector: Result
    params: {}
- name: field
  endpoint:
    path: /accountId/schema/field/fieldId
    method: PUT
    data_selector: Result
    params: {}
- name: delete_field
  endpoint:
    path: /ucl/v2/{accountId}/schema/field/{fieldId}
    method: DELETE
- name: delete_field
  endpoint:
    path: /ucl/v2/{accountId}/schema/field/{fieldId}
    method: DELETE
- name: field_definition
  endpoint:
    path: /accountId/schema/field/fieldId
    method: DELETE
- name: segments
  endpoint:
    path: /ucl/v2/{accountId}/segment/
    method: GET
    params:
      page: 0
- name: segment
  endpoint:
    path: /ucl/v2/accountId/segment/
    method: GET
- name: segments
  endpoint:
    path: /{accountId}/segment/
    method: GET
    params:
      page: 0
- name: segment
  endpoint:
    path: /accountId/segment/
    method: GET
- name: segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/
    method: POST
- name: segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/
    method: POST
- name: segment
  endpoint:
    path: /accountId/segment/
    method: POST
    data_selector: null
    params: {}
- name: get_segment_by_id
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}
    method: GET
- name: segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}
    method: GET
    data_selector: object
    params: {}
- name: segment
  endpoint:
    path: /accountId/segment/segmentId
    method: GET
- name: segment
  endpoint:
    path: /accountId/segment/segmentId
    method: GET
    data_selector: Result
    params: {}
- name: segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}
    method: PUT
- name: update_segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}
    method: PUT
- name: segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}
    method: DELETE
- name: contacts
  endpoint:
    path: /get-contacts-from-a-segment
    method: GET
- name: segment
  endpoint:
    path: /segment/segmentId
    method: DELETE
- name: delete_segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}
    method: DELETE
- name: get_contacts_from_segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}/contacts
    method: GET
    data_selector: object
    params:
      page: 0
- name: contacts_from_segment
  endpoint:
    path: /get-contacts-from-a-segment
    method: GET
    data_selector: records
- name: delete_contact
  endpoint:
    path: /delete-a-contact
    method: DELETE
- name: contacts
  endpoint:
    path: /accountId/segment/segmentId/contacts
    method: GET
    data_selector: records
- name: contacts_from_segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}/contacts
    method: GET
    params:
      page: 0
- name: contacts
  endpoint:
    path: /accountId/segment/segmentId/contacts
    method: GET
    data_selector: records
- name: Add Contacts to a Direct Select Segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}/contacts
    method: PUT
- name: contacts
  endpoint:
    path: /accountId/segment/segmentId/contacts
    method: PUT
    data_selector: records
- name: add_contacts_to_segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}/contacts
    method: PUT
- name: remove_contacts_from_direct_select_segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}/contacts
    method: DELETE
- name: Get Contacts from a Segment
  endpoint:
    path: /ucl/v2/accountId/segment/segmentId/contacts
    method: PUT
- name: contacts
  endpoint:
    path: /accountId/segment/segmentId/contacts
    method: DELETE
- name: remove_contacts_from_direct_select_segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}/contacts
    method: DELETE
- name: remove_contacts_from_segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}/email/contact
    method: DELETE
    params:
      email: string
      policy: string
- name: contacts
  endpoint:
    path: /contacts
    method: GET
- name: remove_contacts_from_direct_select_segment
  endpoint:
    path: /accountId/segment/segmentId/email/contact
    method: DELETE
    params:
      policy: OLDEST_CONTACT
- name: remove_contacts_from_segment_by_email
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}/email/contact
    method: DELETE
    params:
      email: string
      policy: string
- name: Add Contacts to a Direct Select Segment By External id
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}/externalId/contacts
    method: PUT
- name: segment_contact
  endpoint:
    path: /accountId/segment/segmentId/email/contact
    method: DELETE
    data_selector: null
    params:
      policy: OLDEST_CONTACT
- name: Remove Contacts from Direct Select Segment by email
  endpoint:
    path: /accountId/segment/segmentId/externalId/contacts
    method: PUT
- name: Remove Contacts from Direct Select Segment by external id
  endpoint:
    path: /accountId/segment/segmentId/externalId/contacts
    method: PUT
- name: Add Contacts to a Direct Select Segment By External id
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}/externalId/contacts
    method: PUT
- name: remove_contacts_from_segment
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}/externalId/contacts
    method: DELETE
- name: contact
  endpoint:
    path: /accountId/segment/segmentId/externalId/contacts
    method: DELETE
    data_selector: null
    params: {}
- name: Remove Contacts from Direct Select Segment by external id
  endpoint:
    path: /ucl/v2/{accountId}/segment/{segmentId}/externalId/contacts
    method: DELETE
- name: contacts
  endpoint:
    path: /accountId/segment/segmentId/externalId/contacts
    method: DELETE
    data_selector: result
- name: Remove Contacts from Direct Select Segment by external id
  endpoint:
    path: /reference/remove-contacts-from-direct-select-segment-by-external-id
    method: POST
- name: Custom Objects Query API
  endpoint:
    path: /reference/custom-objects-query-api
    method: POST
- name: Custom Data dataset
  endpoint:
    path: /custom-objects/v1/{accountId}/query/{objectId}/{datasetId}/joinWithOther
    method: POST
- name: Remove Contacts from Direct Select Segment by external id
  endpoint:
    path: /reference/remove-contacts-from-direct-select-segment-by-external-id
    method: POST
- name: Custom Objects Query API
  endpoint:
    path: /reference/custom-objects-query-api
    method: POST
- name: custom_data_query
  endpoint:
    path: /custom-objects/v1/{accountId}/query/{objectId}/{datasetId}/joinWithOther
    method: POST
- name: custom_dataset
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}
    method: POST
- name: create_dataset
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}
    method: POST
- name: dataset_details
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}/{identifier}
    method: GET
- name: update_dataset
  endpoint:
    path: /{accountId}/data/{objectId}/{identifier}
    method: POST
- name: dataset_details
  endpoint:
    path: /{accountId}/data/{objectId}/{identifier}
    method: GET
    data_selector: object
- name: delete_dataset
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}/{identifier}
    method: DELETE
- name: update_dataset
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}/{identifier}
    method: POST
- name: Ingest JSON stream
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}/{identifier}/json
    method: POST
- name: delete_dataset
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}/{identifier}
    method: DELETE
- name: ingest_file
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}/{identifier}/file
    method: POST
- name: ingest_json_stream
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}/{identifier}/json
    method: POST
- name: validate_file
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}/validate
    method: POST
- name: ingest_file
  endpoint:
    path: /{accountId}/data/{objectId}/{identifier}/file
    method: POST
    params: {}
- name: validate_file
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}/validate
    method: POST
- name: datasets
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}/all
    method: GET
- name: datasets
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}/all
    method: GET
- name: job_status
  endpoint:
    path: /custom-objects/v1/{accountId}/data/status/{jobId}
    method: GET
- name: download_report
  endpoint:
    path: /custom-objects/v1/{accountId}/data/report/{jobId}
    method: GET
- name: job_status
  endpoint:
    path: /custom-objects/v1/{accountId}/data/status/{jobId}
    method: GET
- name: datasets
  endpoint:
    path: /custom-objects/v1/{accountId}/data/all
    method: GET
- name: download_report
  endpoint:
    path: /custom-objects/v1/{accountId}/data/report/{jobId}
    method: GET
- name: delete_records
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}/{identifier}/ids
    method: DELETE
- name: datasets
  endpoint:
    path: /{accountId}/data/all
    method: GET
- name: delete_records
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}/{identifier}/ids
    method: DELETE
    data_selector: response
    params: {}
- name: Custom Data Schema
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/{objectId}
    method: PUT
- name: Custom Data schema
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/{objectId}
    method: GET
- name: Delete Custom Data Schema
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/{objectId}
    method: DELETE
- name: Custom Data Schema
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/{objectId}
    method: PUT
- name: update_custom_data_schema_field_properties
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/{objectId}/field
    method: PUT
- name: delete_custom_data_schema
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/{objectId}
    method: DELETE
- name: Update Custom Data schema field properties
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/{objectId}/field
    method: PUT
- name: Add Fields to Custom Data Schemas
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/{objectId}/field
    method: POST
- name: Custom Data schemas
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/{objectId}/field
    method: POST
- name: delete_field
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/{objectId}/field
    method: DELETE
- name: delete_field
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/{objectId}/field
    method: DELETE
    data_selector: object
- name: create_custom_data_schema
  endpoint:
    path: /custom-objects/v1/{accountId}/schema
    method: POST
- name: custom_data_schemas
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/all
    method: GET
- name: Custom Data schemas
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/all
    method: GET
- name: delete_all_custom_data_schemas
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/all
    method: DELETE
- name: custom_objects_query
  endpoint:
    path: /custom-objects/v1/{accountId}/query/{objectId}/{datasetId}/joinWithOtherInternal
    method: POST
- name: custom_object_query
  endpoint:
    path: /custom-objects/v1/{accountId}/query/{objectId}/{datasetId}/joinWithOtherInternal
    method: POST
- name: cache_hydration_preflight
  endpoint:
    path: /custom-objects/v1/{accountId}/query/joinWithOtherPreflight
    method: POST
- name: cache_hydration_preflight
  endpoint:
    path: /custom-objects/v1/{accountId}/query/joinWithOtherPreflight
    method: POST
- name: custom_events
  endpoint:
    path: /api/1/customevents
    method: POST
- name: logo
  endpoint:
    path: /logo
    method: GET
- name: upload_custom_events
  endpoint:
    path: /api/1/customevents
    method: POST
- name: logo
  endpoint:
    path: /logo
    method: GET
    data_selector: result
- name: message_report
  endpoint:
    path: /message/{id}/report
    method: GET
    data_selector: object
    params:
      id: string
- name: logo
  endpoint:
    path: /api/1/logo
    method: GET
- name: message_report
  endpoint:
    path: /message/id/report
    method: GET
- name: logo
  endpoint:
    path: /logo
    method: GET
    data_selector: result
- name: message
  endpoint:
    path: /api/1/message
    method: GET
    params: {}
- name: message_report
  endpoint:
    path: /message/{id}/report
    method: GET
    data_selector: object
- name: message
  endpoint:
    path: /message
    method: GET
    data_selector: msgresult
- name: seo_report
  endpoint:
    path: /seoreport
    method: GET
    params: {}
- name: seoreport
  endpoint:
    path: /api/1/seoreport
    method: GET
    data_selector: response
- name: message_list
  endpoint:
    path: /message
    method: GET
    params:
      count: '1000'
      offset: '0'
- name: add_contact
  endpoint:
    path: /api/1/list/{listid}/record
    method: POST
- name: message
  endpoint:
    path: /message
    method: GET
    data_selector: msgresult
- name: list_record
  endpoint:
    path: /list/listid/record
    method: POST
- name: seo_report
  endpoint:
    path: /api/1/seoreport
    method: GET
    data_selector: response
- name: seo_report
  endpoint:
    path: /api/1/seoreport
    method: GET
    data_selector: object
- name: add_contact
  endpoint:
    path: /list/{listid}/record
    method: POST
- name: contact
  endpoint:
    path: /api/1/list/listid/record
    method: POST
- name: subscription_categories
  endpoint:
    path: /reference/get-subscription-categories
    method: GET
- name: subscription_category
  endpoint:
    path: /api/1/subscription/category
    method: GET
    data_selector: records
- name: UploadSpecs
  endpoint:
    path: /reference/uploadspecs-overview
    method: GET
- name: import_contacts
  endpoint:
    path: /{accountId}/import/contacts/{importDefinitionId}
    method: POST
- name: subscription_categories
  endpoint:
    path: /reference/get-subscription-categories
    method: GET
- name: subscription_category
  endpoint:
    path: /subscription/category
    method: GET
- name: contact
  endpoint:
    path: /{accountId}/contact/
    method: GET
    params:
      page: 0
- name: import_contacts
  endpoint:
    path: /{accountId}/import/contacts/{importDefinitionId}
    method: POST
- name: contact
  endpoint:
    path: /accountId/contact/
    method: GET
    data_selector: records
- name: contacts
  endpoint:
    path: /accountId/import/contacts/importDefinitionId
    method: POST
- name: contact_history
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/email/{emailAddress}/activity
    method: GET
- name: contact
  endpoint:
    path: /ucl/v2/{accountId}/contact/
    method: GET
    params:
      page: 0
- name: contact_report
  endpoint:
    path: /accountId/contactReport/email/emailAddress/activity
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /accountId/contact/
    method: GET
    data_selector: records
- name: schema
  endpoint:
    path: /ucl/v2/{accountId}/schema/
    method: GET
    data_selector: object
- name: contact_history
  endpoint:
    path: /ucl/v2/{accountId}/contactReport/email/{emailAddress}/activity
    method: GET
    params:
      monthsOfPastData: ''
- name: schema
  endpoint:
    path: /ucl/v2/accountId/schema/
    method: GET
    data_selector: records
- name: contact_report
  endpoint:
    path: /accountId/contactReport/email/emailAddress/activity
    method: GET
    data_selector: json
- name: segments
  endpoint:
    path: /ucl/v2/{accountId}/segment/
    method: GET
    params:
      page: 0
- name: get_schema
  endpoint:
    path: /ucl/v2/{accountId}/schema/
    method: GET
- name: segment
  endpoint:
    path: /accountId/segment/
    method: GET
- name: account_schema
  endpoint:
    path: /accountId/schema/
    method: GET
- name: Custom Data dataset
  endpoint:
    path: /custom-objects/v1/{accountId}/query/{objectId}/{datasetId}/joinWithOther
    method: POST
- name: segments
  endpoint:
    path: /ucl/v2/{accountId}/segment/
    method: GET
    data_selector: object
    params:
      page: 0
- name: create_dataset
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}
    method: POST
- name: segment
  endpoint:
    path: /accountId/segment/
    method: GET
- name: Custom Data dataset
  endpoint:
    path: /custom-objects/v1/{accountId}/query/{objectId}/{datasetId}/joinWithOther
    method: POST
- name: get_custom_data_schema
  endpoint:
    path: /custom-objects/v1/{accountId}/schema/{objectId}
    method: GET
- name: custom_dataset
  endpoint:
    path: /custom-objects/v1/{accountId}/data/{objectId}
    method: POST
- name: internal_query_data
  endpoint:
    path: /custom-objects/v1/{accountId}/query/{objectId}/{datasetId}/joinWithOtherInternal
    method: POST
- name: custom_object_query
  endpoint:
    path: /custom-objects/v1/{accountId}/query/{objectId}/{datasetId}/joinWithOtherInternal
    method: POST
notes:
- If you are in Europe, you will want to update your base url to api-eu.actonsoftware.com
- Uses OAuth2
- Uses OAuth2 with refresh token — requires setup of connected app in api
- The URL for this request expired after 30 days.
- Updated 4 months ago
- Add a new header to your account.
- Log in to see full request history
- The request must be URL form encoded.
- This is a multipart/form-data post.
- This is a "multipart/form-data" post.
- Defaults to 0 for size, last_modified, creation_time, version
- Defaults to 0 for creation_time and last_modified
- 'Valid media types: zip, doc, docx, xls, xlsx, ppt, pptx, pps, ppsx, txt, vcs, ics,
  dwg, rfa.'
- API may have rate limiting.
- Requires setup of connected app in api
- URL for this request expired after 30 days.
- Use to retrieve a listing of emails by type.
- This can only send to a list or record which exists in Act-On.
- Get the HTML content of a Sent, Draft or Message Template
- Some objects may return nulls in deeply nested fields
- Some objects like Contact may return nulls in deeply nested fields
- If you do not have the contact's recordid, you can retrieve it using the Get contact
  from list based on cookie ID or email endpoint.
- This only updates the identified record in the list that you specify.
- This only updates the identified record in list that you specify.
- Add/remove individual records from a subscription category by email address.
- There must be a verbatim match between columns in the source and destination list
  when merging.
- You must specify the EMAIL system usage column for an upload or merge to succeed.
- The columnType parameter will only accept the system fields listed below. Empty
  or misspelled values will return an error stating 'Upload specs contain an invalid
  column type value.'
- mergespecs direct Act-On to handle specifics when using the Update or Merge a list
  endpoint.
- mergespecs is required when appending or updating an existing list.
- The query parameter 'datequalifiers' cannot be used in conjunction with the 'fields'
  option.
- Maximum number of elements to fetch is 1000.
- Download list of records specifically opted out of a specific category
- Requires setup of connected app in API
- This endpoint is hidden behind a controlled feature. Accounts must have a specific
  use case to be given access to this endpoint.
- Uses oauth for authentication
- Uses refresh_token to get a new access_token and refresh_token.
- Limited to 5 authentication attempts per hour
- Grant Type Code requests are disabled by default for new developer accounts.
- Defaults to COMMA for delimiter
- Defaults to EMAIL for mergeStrategy
- Defaults to QUOTE for quote
- overwriteExistingValue defaults to true
- Requires setup of connected app in Act-On API
- URL for requests expire after 30 days.
- Uses OAuth2 for authentication.
- Each account has a maximum number of users that can be created.
- Mapping of columns with differing header names is planned as part of a V2 revision
  of this endpoint.
- Requires setup of connected app in Act-On
- Performs a query on Custom Data dataset with a simple join with Account Object Context
errors:
- 'Rate Limit: 5 API calls per second'
- 'Usage Limit: 30,000 total requests per day'
- 'Auth Requests: 5 authentication calls per hour'
- 'File Upload: 400MB per file'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 400 - Invalid File Type
- 422 - Missing Parameters
- '400: Defaults to 0'
- 400 - Invalid ID
- 404 - Result
- 400 - Invalid file Type
- 400 - Invalid file type
- 404 - Invalid ID
- '403: Result'
- 403 - Result
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 200 - Successful Response
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 400 - Invalid or Deleted Messages
- '400: Bad Request'
- '400: errorCode Defaults to 0'
- 400 - Invalid drill-down verb
- 400 - Invalid Date Period
- 400 - Invalid page ID
- 400 - Invalid Template
- 400 - Suppressed
- 400 - Invalid Column Specified
- 400 - Invalid List ID
- 'URL Expired: The URL for this request expired after 30 days.'
- 400 - Invalid List
- 400 - Invalid Contact
- Upload specs contain an invalid column type value.
- 400 - Invalid List in Parameter
- 400 - Invalid list in mergespec
- 400 - Missing Column
- 400 - Input file missing
- 400 - Bad Request
- 401 Invalid client_id or client_secret
- 403 Invalid username or password
- 401 - Invalid client id or client secret
- 403 - Invalid refresh token
- '401: Unauthorized'
- '403: Forbidden'
- '413: Payload Too Large'
- '415: Unsupported Media Type'
- 400 Bad Request
- 401 Unauthorized
- 415 Unsupported Media Type
- '400'
- '401'
- '415'
- '400 Bad Request: Check request body parameters'
- '401 Unauthorized: Check authentication credentials'
- '415 Unsupported Media Type: Check content type of the request'
- 404 Not Found
- '404: Not Found'
- 400 - Result
- 200 - Result
- 406 Not Acceptable
- 409 Conflict
- '406: Not Acceptable'
- '400 Bad Request: Invalid parameters in request.'
- '415 Unsupported Media Type: The server refuses to accept the request because the
  payload format is in an unsupported format.'
- '400 Bad Request: Check required parameters and field types'
- '415 Unsupported Media Type: Ensure correct content type for the request'
- '409: Conflict'
- 403 Forbidden
- '400 Bad Request: Check your request parameters'
- '403 Forbidden: Ensure you have the right permissions'
- '404 Not Found: Verify the segment ID'
- '415 Unsupported Media Type: Check content type'
- '400 Bad Request: Check your body parameters'
- '415 Unsupported Media Type: Ensure content type is correct'
- 400 BAD_REQUEST
- 401 UNAUTHORIZED
- 403 FORBIDDEN
- 404 Dataset or object not found
- 500 Internal server error
- '400 BAD_REQUEST: invalid query parameters'
- 500 INTERNAL_SERVER_ERROR
- '400 BAD_REQUEST: Check your request parameters'
- '401 UNAUTHORIZED: Ensure your token is valid and not expired'
- '403 FORBIDDEN: Verify your permissions for the requested resource'
- 404 Dataset not found
- 409 Dataset name already exists
- 409 JSON Validation failed
- 415 Unsupported Media Type.
- 409 CSV Validation failed
- 415 UNSUPPORTED_MEDIA_TYPE
- 100 CONTINUE
- 200 OK
- 404 Object schema not found.
- '400 BAD_REQUEST: Check request parameters'
- '401 UNAUTHORIZED: Recheck credentials'
- '403 FORBIDDEN: Ensure permissions are set correctly'
- 404 Schema not found
- '401 UNAUTHORIZED: Recheck OAuth scopes or token expiration'
- 404 Object Schema not found.
- '401 UNAUTHORIZED: Check authorization credentials'
- '404 SCHEMA_NOT_FOUND: Verify the schema ID'
- 404 Schema or fields not found
- '400 BAD_REQUEST: Received a bad request'
- '401 UNAUTHORIZED: Unauthorized access'
- '404 NOT_FOUND: Schema not found'
- '415 UNSUPPORTED_MEDIA_TYPE: Unsupported Media Type'
- 404 NOT_FOUND
- 409 Schema already exists
- '400 BAD_REQUEST: Received a bad request.'
- '401 UNAUTHORIZED: Check OAuth token or credentials.'
- '415 UNSUPPORTED_MEDIA_TYPE: Check the content type of the request.'
- '401 UNAUTHORIZED: Unauthorized access.'
- '404 NOT_FOUND: Object schema not found.'
auth_info:
  mentioned_objects:
  - oauth
  - OauthToken
  - Grant-Type Password
  - Grant-Type Refresh
  - Grant-Type Code
client:
  base_url: https://api.actonsoftware.com
  auth:
    type: oauth2
source_metadata: null
