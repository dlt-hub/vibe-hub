resources:
- name: Task
  endpoint:
    path: /class/apscheduler.Task
    method: GET
    data_selector: parameters
- name: TaskDefaults
  endpoint:
    path: /class/apscheduler.TaskDefaults
    method: GET
    data_selector: parameters
- name: Schedule
  endpoint:
    path: /class/apscheduler.Schedule
    method: GET
    data_selector: parameters
- name: Job
  endpoint:
    path: /class/apscheduler.Job
    method: GET
    data_selector: parameters
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: list
- name: schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: list
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: list
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: records
- name: schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: records
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: records
- name: TaskAdded
  endpoint:
    path: /apscheduler/task_added
    method: GET
    data_selector: task_id
    params: {}
- name: TaskUpdated
  endpoint:
    path: /apscheduler/task_updated
    method: GET
    data_selector: task_id
    params: {}
- name: TaskRemoved
  endpoint:
    path: /apscheduler/task_removed
    method: GET
    data_selector: task_id
    params: {}
- name: ScheduleAdded
  endpoint:
    path: /apscheduler/schedule_added
    method: GET
    data_selector: schedule_id
    params: {}
- name: ScheduleUpdated
  endpoint:
    path: /apscheduler/schedule_updated
    method: GET
    data_selector: schedule_id
    params: {}
- name: ScheduleRemoved
  endpoint:
    path: /apscheduler/schedule_removed
    method: GET
    data_selector: schedule_id
    params: {}
- name: JobAdded
  endpoint:
    path: /apscheduler/job_added
    method: GET
    data_selector: job_id
    params: {}
- name: JobRemoved
  endpoint:
    path: /apscheduler/job_removed
    method: GET
    data_selector: job_id
    params: {}
- name: ScheduleDeserializationFailed
  endpoint:
    path: /apscheduler/schedule_deserialization_failed
    method: GET
    data_selector: schedule_id
    params: {}
- name: JobDeserializationFailed
  endpoint:
    path: /apscheduler/job_deserialization_failed
    method: GET
    data_selector: job_id
    params: {}
- name: SchedulerStarted
  endpoint:
    path: /apscheduler/scheduler_started
    method: GET
    data_selector: timestamp
    params: {}
- name: SchedulerStopped
  endpoint:
    path: /apscheduler/scheduler_stopped
    method: GET
    data_selector: exception
    params: {}
- name: JobAcquired
  endpoint:
    path: /apscheduler/job_acquired
    method: GET
    data_selector: job_id
    params: {}
- name: JobReleased
  endpoint:
    path: /apscheduler/job_released
    method: GET
    data_selector: job_id
    params: {}
- name: jobs
  endpoint:
    path: /jobs
    method: GET
    data_selector: list
    params: {}
- name: schedules
  endpoint:
    path: /schedules
    method: GET
    data_selector: list
    params: {}
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: list
    params: {}
- name: trigger
  endpoint:
    path: /triggers
    method: GET
    data_selector: triggers
    params: {}
- name: scheduler
  endpoint:
    path: /schedulers
    method: GET
    data_selector: schedulers
    params: {}
- name: TaskAdded
  endpoint:
    path: /TaskAdded
    method: GET
    data_selector: task_id
- name: TaskUpdated
  endpoint:
    path: /TaskUpdated
    method: GET
    data_selector: task_id
- name: TaskRemoved
  endpoint:
    path: /TaskRemoved
    method: GET
    data_selector: task_id
- name: ScheduleAdded
  endpoint:
    path: /ScheduleAdded
    method: GET
    data_selector: schedule_id
- name: ScheduleUpdated
  endpoint:
    path: /ScheduleUpdated
    method: GET
    data_selector: schedule_id
- name: ScheduleRemoved
  endpoint:
    path: /ScheduleRemoved
    method: GET
    data_selector: schedule_id
- name: JobAdded
  endpoint:
    path: /JobAdded
    method: GET
    data_selector: job_id
- name: JobRemoved
  endpoint:
    path: /JobRemoved
    method: GET
    data_selector: job_id
- name: ScheduleDeserializationFailed
  endpoint:
    path: /ScheduleDeserializationFailed
    method: GET
    data_selector: schedule_id
- name: JobDeserializationFailed
  endpoint:
    path: /JobDeserializationFailed
    method: GET
    data_selector: job_id
- name: Task
  endpoint:
    path: /api.html#apscheduler.Task
    method: GET
- name: Schedule
  endpoint:
    path: /api.html#apscheduler.Schedule
    method: GET
- name: Job
  endpoint:
    path: /api.html#apscheduler.Job
    method: GET
- name: AndTrigger
  endpoint:
    path: /api.html#apscheduler.triggers.combining.AndTrigger
    method: GET
- name: OrTrigger
  endpoint:
    path: /api.html#apscheduler.triggers.combining.OrTrigger
    method: GET
- name: CronTrigger
  endpoint:
    path: /api.html#apscheduler.triggers.cron.CronTrigger
    method: GET
- name: IntervalTrigger
  endpoint:
    path: /api.html#apscheduler.triggers.interval.IntervalTrigger
    method: GET
- name: AsyncScheduler
  endpoint:
    path: /api.html#apscheduler.AsyncScheduler
    method: GET
- name: BlockingScheduler
  endpoint:
    path: /api.html#apscheduler.Scheduler
    method: GET
- name: BackgroundScheduler
  endpoint:
    path: /api.html#apscheduler.Scheduler
    method: GET
- name: CustomTriggers
  endpoint:
    path: /custom-triggers
    method: GET
- name: CustomJobExecutors
  endpoint:
    path: /custom-job-executors
    method: GET
- name: CustomDataStores
  endpoint:
    path: /custom-data-stores
    method: GET
notes:
- Uses a data store for tasks, schedules, and jobs
- The preferred installation method is by using pip.
- Uses multiple triggers for complex scheduling needs
- Can remove or pause schedules without canceling jobs already created from them
- Be wary of setting a start date near the end of the month (29. – 31.) if you have
  `months` specified in your interval, as this will skip the months when those days
  do not exist.
- Users are also discouraged from using a time inside the target timezone’s DST switching
  period (typically around 2 am) since a date could either be skipped or repeated
  due to the specified wall clock time either occurring twice or not at all.
- The behavior of cron scheduling with regards to default values for omitted fields
  has been made more intuitive – omitted fields lower than the least significant explicitly
  defined field will default to their minimum values except for the week number and
  weekday fields
- SchedulerShutdownError has been removed – jobs are now added tentatively and scheduled
  for real when/if the scheduler is restarted
- Scheduler.is_job_active() has been removed – use job in scheduler.get_jobs() instead
- dump_jobs() is now print_jobs() and prints directly to the given file or sys.stdout
  if none is given
- The repeat parameter was removed from Scheduler.add_interval_job() and @Scheduler.interval_schedule
  in favor of the universal max_runs option
- Scheduler.unschedule_func() now raises a KeyError if the given function is not scheduled
- The semantics of Scheduler.shutdown() have changed – the method no longer accepts
  a numeric argument, but two booleans
- The scheduler can no longer be reconfigured while it’s running
- It is strongly recommended that you make an effort to ensure that the implementation
  can tolerate the loss of connectivity to the backing store.
- Use the Tenacity library to retry operations in case of a disconnection.
- Occasionally, you may find yourself in a situation where your scheduling needs are
  too complex to be handled with any of the built-in triggers directly.
- On the first run, OrTrigger generates the next run times from both cron triggers
  and saves them internally.
- 'If this trigger is created on 2022-06-07 at 09:00:00, its first run times would
  be: 2022-06-07 10:00:00, 2022-10-07 10:00:00, 2022-12-07 10:00:00'
- The `--enable-threads` (or `-T`) option is necessary because uWSGI disables threads
  by default which then prevents the scheduler from working.
- The v4.0 series is provided as a pre-release and may change in a backwards incompatible
  fashion without any migration pathway, so do NOT use this release in production!
- The concept of a job has been split into Task, Schedule and Job.
- Data stores have been redesigned to work with multiple running schedulers and workers.
- Event brokers are a new component in v4.0.
- If you plan to make your data store implementation public, it is strongly recommended
  that you make an effort to ensure that the implementation can tolerate the loss
  of connectivity to the backing store.
errors:
- 'MaxIterationsReached: if the trigger’s internal logic has exceeded a set maximum
  of iterations (used to detect potentially infinite loops)'
- 'TaskLookupError: Raised by a data store when it cannot find the requested task.'
- 'ScheduleLookupError: Raised by a scheduler when it cannot find the requested schedule.'
- 'JobLookupError: Raised when the job store cannot find a job for update or removal.'
- 'CallableLookupError: Raised when the target callable for a job could not be found.'
- 'JobResultNotReady: Raised if the job result is not ready.'
- 'JobCancelled: Raised if the job was cancelled.'
- 'JobDeadlineMissed: Raised if the job failed to start within the allotted time.'
- 'ConflictingIdError: Raised when trying to add a schedule to a store that already
  contains a schedule by that ID.'
- 'SerializationError: Raised when a serializer fails to serialize the given object.'
- 'DeserializationError: Raised when a serializer fails to deserialize the given object.'
- 'MaxIterationsReached: Raised when a trigger has reached its maximum number of allowed
  computation iterations.'
- If something isn’t working as expected, it will be helpful to increase the logging
  level of the apscheduler logger to the DEBUG level.
- SchedulerShutdownError has been removed – jobs are now added tentatively.
- KeyError if the given function is not scheduled.
auth_info:
  mentioned_objects: []
client:
  base_url: http://pypi.python.org/pypi/pip/
  headers:
    Accept: application/json
source_metadata: null
