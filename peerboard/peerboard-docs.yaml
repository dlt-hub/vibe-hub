resources:
- name: projects
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: labels
  endpoint:
    path: /labels
    method: GET
    data_selector: labels
- name: tasks
  endpoint:
    path: /tasks
    method: GET
    data_selector: tasks
- name: comments
  endpoint:
    path: /comments
    method: GET
    data_selector: comments
- name: users
  endpoint:
    path: /users/@me
    method: GET
- name: list teams
  endpoint:
    path: /v1.0/teams
    method: GET
- name: create team
  endpoint:
    path: /v1.0/teams
    method: POST
- name: delete team
  endpoint:
    path: /v1.0/teams/{team-id}
    method: DELETE
- name: list channels
  endpoint:
    path: /v1.0/teams/{team-id}/channels
    method: GET
- name: employees
  endpoint:
    path: /v1/employees
    method: GET
- name: time_offs
  endpoint:
    path: /v1/time_offs
    method: GET
- name: time_off_requests
  endpoint:
    path: /v1/time_off_requests
    method: GET
- name: job_summaries
  endpoint:
    path: /v1/job_summaries
    method: GET
- name: items
  endpoint:
    path: /beta/sites/{site id}/lists/
    method: GET
    data_selector: value
- name: create_item
  endpoint:
    path: /beta/sites/{site id}/lists/{list id}/items
    method: POST
    data_selector: value
- name: update_item
  endpoint:
    path: /beta/sites/{site id}/lists/{list id}/items/{item id}
    method: PATCH
    data_selector: value
- name: delete_item
  endpoint:
    path: /beta/sites/{site id}/lists/{list id}/items/{item id}
    method: DELETE
    data_selector: value
- name: list_items
  endpoint:
    path: /beta/sites/{site id}/lists/{list id}/items
    method: GET
    data_selector: value
- name: get_item
  endpoint:
    path: /beta/sites/{site id}/lists/{list id}/items/{item id}
    method: GET
    data_selector: value
- name: watch_items
  endpoint:
    path: /beta/sites/{site id}/lists/{list id}/items/watch
    method: GET
    data_selector: value
- name: contacts
  endpoint:
    path: /2012 02 01/auth/resources/contacts
    method: GET
- name: contacts
  endpoint:
    path: /v1/contacts
    method: GET
- name: histories
  endpoint:
    path: /v1/histories
    method: GET
- name: forms
  endpoint:
    path: /v1/forms
    method: GET
- name: newsletter
  endpoint:
    path: /v3/newsletters
    method: GET
- name: contacts
  endpoint:
    path: /v3/contacts
    method: GET
- name: campaigns
  endpoint:
    path: /v3/campaigns
    method: GET
- name: tags
  endpoint:
    path: /v3/tags
    method: GET
- name: watch_records
  endpoint:
    path: /v0/{base_id}/{table_name}
    method: GET
- name: search_records
  endpoint:
    path: /v0/{base_id}/{table_name}
    method: GET
- name: get_record
  endpoint:
    path: /v0/{base_id}/{table_name}/{record_id}
    method: GET
- name: create_record
  endpoint:
    path: /v0/{base_id}/{table_name}
    method: POST
- name: update_record
  endpoint:
    path: /v0/{base_id}/{table_name}/{record_id}
    method: PATCH
- name: delete_record
  endpoint:
    path: /v0/{base_id}/{table_name}/{record_id}
    method: DELETE
- name: users
  endpoint:
    path: /admin/directory/v1/users
    method: GET
- name: roles
  endpoint:
    path: /admin/directory/v1/roles
    method: GET
- name: organizational_units
  endpoint:
    path: /admin/directory/v1/organizationalUnits
    method: GET
- name: presentations
  endpoint:
    path: /v1/presentations
    method: GET
- name: slides
  endpoint:
    path: /v1/presentations/{presentationId}/pages
    method: GET
- name: contact
  endpoint:
    path: /v1.0/me/contacts
    method: GET
- name: contact_folder
  endpoint:
    path: /v1.0/me/contactfolders
    method: GET
- name: playlists
  endpoint:
    path: /v1/me/playlists
    method: GET
- name: tracks
  endpoint:
    path: /v1/tracks
    method: GET
- name: episodes
  endpoint:
    path: /v1/episodes
    method: GET
- name: shows
  endpoint:
    path: /v1/shows
    method: GET
- name: artists
  endpoint:
    path: /v1/artists
    method: GET
- name: devices
  endpoint:
    path: /v1/me/player/devices
    method: GET
- name: accounts
  endpoint:
    path: /1.0/accounts
    method: GET
- name: custom_fields
  endpoint:
    path: /1.0/accounts/{account_id}/lists/{list_id}/custom_fields
    method: GET
- name: lists
  endpoint:
    path: /1.0/accounts/{account_id}/lists
    method: GET
- name: subscribers
  endpoint:
    path: /1.0/accounts/{account_id}/lists/{list_id}/subscribers
    method: GET
- name: list_images
  endpoint:
    path: /v1/images
    method: GET
- name: document
  endpoint:
    path: /documents
    method: POST
- name: contact
  endpoint:
    path: /contacts
    method: GET
- name: voucher
  endpoint:
    path: /vouchers
    method: GET
- name: invoice
  endpoint:
    path: /invoices
    method: GET
- name: tasks
  endpoint:
    path: /v2/tasks
    method: GET
- name: jobs
  endpoint:
    path: /v2/jobs
    method: GET
- name: create_job
  endpoint:
    path: /v2/jobs
    method: POST
- name: get_job
  endpoint:
    path: /v2/jobs/{id}
    method: GET
- name: delete_job
  endpoint:
    path: /v2/jobs/{id}
    method: DELETE
- name: get_task
  endpoint:
    path: /v2/tasks/{id}
    method: GET
- name: download_file
  endpoint:
    path: /v2/tasks/{id}/download
    method: GET
- name: trackings
  endpoint:
    path: /v4/trackings
    method: GET
- name: get_tracking
  endpoint:
    path: /v4/trackings/{tracking_number}
    method: GET
- name: create_tracking
  endpoint:
    path: /v4/trackings
    method: POST
- name: update_tracking
  endpoint:
    path: /v4/trackings/{tracking_number}
    method: PUT
- name: delete_tracking
  endpoint:
    path: /v4/trackings/{tracking_number}
    method: DELETE
- name: notifications
  endpoint:
    path: /v4/notifications
    method: GET
- name: add_notification
  endpoint:
    path: /v4/notifications
    method: POST
- name: remove_notification
  endpoint:
    path: /v4/notifications/{notification_id}
    method: DELETE
- name: other_api_call
  endpoint:
    path: /v4/other
    method: POST
- name: add_a_row
  endpoint:
    path: /add_a_row
    method: POST
- name: update_a_row
  endpoint:
    path: /update_a_row
    method: PUT
- name: delete_a_row
  endpoint:
    path: /delete_a_row
    method: DELETE
- name: get_range_values
  endpoint:
    path: /get_range_values
    method: GET
- name: list_sheets
  endpoint:
    path: /list_sheets
    method: GET
- name: conferences
  endpoint:
    path: /v1/conferences/
    method: GET
- name: attendees
  endpoint:
    path: /v1/conferences/{conference_id}/attendees
    method: GET
- name: channels
  endpoint:
    path: /v1/channels/
    method: GET
- name: presenters
  endpoint:
    path: /v1/presenters/
    method: GET
- name: document_watch
  endpoint:
    path: /documents/watch
    method: POST
- name: list_documents
  endpoint:
    path: /documents/list
    method: GET
- name: get_content
  endpoint:
    path: /documents/content
    method: GET
- name: create_document
  endpoint:
    path: /documents/create
    method: POST
- name: create_document_from_template
  endpoint:
    path: /documents/template/create
    method: POST
- name: insert_paragraph
  endpoint:
    path: /documents/paragraph/insert
    method: POST
- name: insert_image
  endpoint:
    path: /documents/image/insert
    method: POST
- name: replace_image
  endpoint:
    path: /documents/image/replace
    method: POST
- name: replace_text
  endpoint:
    path: /documents/text/replace
    method: POST
- name: download_document
  endpoint:
    path: /documents/download
    method: GET
- name: delete_document
  endpoint:
    path: /documents/delete
    method: DELETE
- name: make_api_call
  endpoint:
    path: /api/call
    method: POST
- name: make_links_clickable
  endpoint:
    path: /documents/links/clickable
    method: POST
- name: posts
  endpoint:
    path: /v0/posts
    method: GET
- name: docs
  endpoint:
    path: /v1/docs
    method: GET
    data_selector: items
- name: users_search
  endpoint:
    path: /users/search
    method: GET
- name: create_user
  endpoint:
    path: /users
    method: POST
- name: get_user
  endpoint:
    path: /users/{user_id}
    method: GET
- name: get_user_membership
  endpoint:
    path: /users/{user_id}/membership
    method: GET
- name: update_user
  endpoint:
    path: /users/{user_id}
    method: PATCH
- name: delete_user
  endpoint:
    path: /users/{user_id}
    method: DELETE
- name: groups_search
  endpoint:
    path: /groups/search
    method: GET
- name: get_group
  endpoint:
    path: /groups/{group_id}
    method: GET
- name: add_members_to_group
  endpoint:
    path: /groups/{group_id}/members
    method: POST
- name: remove_member_from_group
  endpoint:
    path: /groups/{group_id}/members/{member_id}
    method: DELETE
- name: make_api_call
  endpoint:
    path: /api/call
    method: POST
- name: get_current_user
  endpoint:
    path: /me
    method: GET
- name: image
  endpoint:
    path: /images
    method: GET
- name: design
  endpoint:
    path: /designs
    method: POST
- name: folder
  endpoint:
    path: /folders
    method: GET
- name: comment
  endpoint:
    path: /comments
    method: POST
- name: contact_list
  endpoint:
    path: /v3/contact/lists
    method: GET
- name: supplier_invoices
  endpoint:
    path: /resource_management/v35.2
    method: POST
- name: currencies
  endpoint:
    path: /resource_management/v35.2
    method: GET
- name: raas_report
  endpoint:
    path: /resource_management/v35.2
    method: GET
notes:
- You must have a Microsoft business account and be an admin of the account.
- Microsoft Office 365 premium must be activated for your admin business account.
- APIs under the beta version in Microsoft Graph are subject to change.
- The use of these APIs in production applications is not supported.
- Ensure the location input in the module's country fields matches the location selected
  when creating the candidate's package.
- When sending messages inside a particular chat, avoid sending more than one message
  per second.
- The API will not allow more than 30 messages per second or so. Consider spreading
  out notifications over large intervals of 8—12 hours for best results.
- The bot will not be able to send more than 20 messages per minute to the same group.
- You do not have to add the webhooks in the activedemand as it is automatically done
  for you once you add and save an instant trigger module to your make.
- Make was formerly called Integromat, which means you can trust the URL as much as
  any Make URL.
- To connect SupportBee app, you need to obtain the domain and api key values from
  your SupportBee account.
- Requires setup of connected app in Microsoft 365.
- Permissions for various operations include offline access, user read, contacts read,
  and contacts readwrite.
- Requires an AWeber account to use.
- Make sure to establish a connection to your AWeber account.
- 'Users should choose at least the following most frequently required scopes: data
  records\ read, data records\ write, and schema bases\ read.'
- Currently connecting to unverified apps works in {{product name}}, but we cannot
  guarantee that Google will allow connections to unverified apps for an indefinite
  period.
- Requires setup of Google Sheets add-on.
- If you keep your project in the testing status, you will be required to reauthorize
  your connection in make every week to avoid weekly reauthorization.
- Currently connecting to unverified apps works in make, but we cannot guarantee that
  Google will allow connections to unverified apps for an indefinite period.
- Each connection should have its own refresh token as sharing tokens may result in
  connections being broken.
- A new refresh token must be manually created and entered into Make after each expiration
  if non-expiring refresh tokens are not selected.
- You must have a docusign account
- If your connection requires reauthorization at any point, follow the connection
  renewal steps
errors:
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '400: The authorization type is not supported or configured incorrectly'
- 'error: The output file size exceeds the limit allowed for your scenario'
- 'error: You have exceeded the maximum conversion time'
auth_info:
  mentioned_objects:
  - google auth platform
  - oauth client
  - api_client
  - api_credentials
  - refresh_tokens
client:
  base_url: https://go.docusign.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
    flow: refresh_token
    token_url: https://www.integromat.com/oauth/cb/checkr
source_metadata: null
