resources:
- name: SumUDF
  endpoint:
    path: /libertem/udf/sum
    method: GET
- name: LogsumUDF
  endpoint:
    path: /libertem/udf/logsum
    method: GET
- name: StdDevUDF
  endpoint:
    path: /libertem/udf/stddev
    method: GET
- name: SumSigUDF
  endpoint:
    path: /libertem/udf/sumsigudf
    method: GET
- name: ApplyMasksUDF
  endpoint:
    path: /libertem/udf/masks/ApplyMasksUDF
    method: GET
    data_selector: intensity
- name: PickUDF
  endpoint:
    path: /libertem/udf/raw/PickUDF
    method: GET
    data_selector: intensity
- name: AutoUDF
  endpoint:
    path: /libertem/udf/auto/AutoUDF
    method: GET
    data_selector: result
- name: RecordUDF
  endpoint:
    path: /libertem/udf/record/RecordUDF
    method: GET
    data_selector: raw_data
- name: NoOpUDF
  endpoint:
    path: /libertem/udf/base/NoOpUDF
    method: GET
    data_selector: 'null'
- name: dataset
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: records
- name: Context
  endpoint:
    path: /api/context
    method: GET
- name: DataSet
  endpoint:
    path: /reference/dataset.html
    method: GET
    data_selector: DataSets
    params: {}
- name: BasePartition
  endpoint:
    path: /reference/dataset.html#libertem.io.dataset.base.BasePartition
    method: GET
    data_selector: BasePartitions
    params: {}
- name: Decoder
  endpoint:
    path: /reference/dataset.html#libertem.io.dataset.base.Decoder
    method: GET
    data_selector: Decoders
    params: {}
- name: InlineJobExecutor
  endpoint:
    path: /libertem/executor/inline
    method: GET
    data_selector: details
    params: {}
- name: InlineWorkerContext
  endpoint:
    path: /libertem/executor/inline/worker
    method: GET
    data_selector: context
    params: {}
- name: AsyncConcurrentJobExecutor
  endpoint:
    path: /libertem/executor/concurrent/AsyncConcurrentJobExecutor
    method: GET
    data_selector: records
    params: {}
- name: ConcurrentJobExecutor
  endpoint:
    path: /libertem/executor/concurrent/ConcurrentJobExecutor
    method: GET
    data_selector: records
    params: {}
- name: available_workers
  endpoint:
    path: get_available_workers
    method: GET
- name: resource_details
  endpoint:
    path: get_resource_details
    method: GET
- name: InlineJobExecutor
  endpoint:
    path: /libertem/executor/inline
    method: GET
    data_selector: records
- name: data
  endpoint:
    path: /services/data/vXX.X/sobjects/Data
    method: GET
    data_selector: records
    params: {}
- name: AsyncConcurrentJobExecutor
  endpoint:
    path: /libertem/executor/concurrent/AsyncConcurrentJobExecutor
    method: GET
    data_selector: records
- name: ConcurrentJobExecutor
  endpoint:
    path: /libertem/executor/concurrent/ConcurrentJobExecutor
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /libertem/api/dataset
    method: GET
    data_selector: data
    params: {}
- name: dataset
  endpoint:
    path: /api/v1/dataset
    method: GET
    data_selector: data
    params: {}
- name: frms6
  endpoint:
    path: /frms6
    method: GET
    data_selector: data
    params: {}
- name: blo
  endpoint:
    path: /blo
    method: GET
    data_selector: data
    params: {}
- name: ser
  endpoint:
    path: /ser
    method: GET
    data_selector: data
    params: {}
- name: hdf5
  endpoint:
    path: /hdf5
    method: GET
    data_selector: data
    params: {}
- name: seq
  endpoint:
    path: /seq
    method: GET
    data_selector: data
    params: {}
- name: mrc
  endpoint:
    path: /mrc
    method: GET
    data_selector: data
    params: {}
- name: dataset
  endpoint:
    path: /libertem/api/dataset
    method: GET
    data_selector: records
    params: {}
- name: tvips
  endpoint:
    path: /libertem/io/dataset/tvips
    method: GET
    data_selector: ''
    params: {}
- name: memory
  endpoint:
    path: /libertem/io/dataset/memory
    method: GET
    data_selector: ''
    params: {}
- name: dask
  endpoint:
    path: /libertem/io/dataset/dask
    method: GET
    data_selector: ''
    params: {}
- name: run
  endpoint:
    path: /run
    method: POST
    data_selector: result
    params: {}
- name: run_udf
  endpoint:
    path: /run_udf
    method: POST
    data_selector: result
    params: {}
- name: run_udf_iter
  endpoint:
    path: /run_udf_iter
    method: POST
    data_selector: result
    params: {}
- name: FileTree
  endpoint:
    path: /libertem/io/dataset/base/FileTree
    method: GET
    data_selector: records
- name: IOBackend
  endpoint:
    path: /libertem/io/dataset/base/IOBackend
    method: GET
    data_selector: records
- name: MMapBackend
  endpoint:
    path: /libertem/io/dataset/base/MMapBackend
    method: GET
    data_selector: records
- name: Negotiator
  endpoint:
    path: /libertem/io/dataset/base/Negotiator
    method: GET
    data_selector: records
- name: Partition
  endpoint:
    path: /libertem/io/dataset/base/Partition
    method: GET
    data_selector: records
- name: MaskContainer
  endpoint:
    path: /internal_api/maskcontainer
    method: GET
- name: npy
  endpoint:
    path: /libertem.io.dataset.npy.NPYDataSet
    method: GET
    data_selector: records
    params: {}
- name: dm_single
  endpoint:
    path: /libertem.io.dataset.dm_single.SingleDMDataSet
    method: GET
    data_selector: records
    params: {}
- name: dm_stacked
  endpoint:
    path: /libertem.io.dataset.dm.StackedDMDataSet
    method: GET
    data_selector: records
    params: {}
- name: empad
  endpoint:
    path: /libertem.io.dataset.empad.EMPADDataSet
    method: GET
    data_selector: records
    params: {}
- name: k2is
  endpoint:
    path: /libertem.io.dataset.k2is.K2ISDataSet
    method: GET
    data_selector: records
    params: {}
- name: FRMS6DataSet
  endpoint:
    path: /frms6
    method: GET
- name: BloDataSet
  endpoint:
    path: /blo
    method: GET
- name: SERDataSet
  endpoint:
    path: /ser
    method: GET
- name: H5DataSet
  endpoint:
    path: /hdf5
    method: GET
- name: SEQDataSet
  endpoint:
    path: /seq
    method: GET
- name: MRCDataSet
  endpoint:
    path: /mrc
    method: GET
- name: MPLLive2DPlot
  endpoint:
    path: /libertem/viz/mpl
    method: GET
    data_selector: records
- name: BQLive2DPlot
  endpoint:
    path: /libertem/viz/bqp
    method: GET
    data_selector: records
- name: GMSLive2DPlot
  endpoint:
    path: /libertem/viz/gms
    method: GET
    data_selector: records
- name: tvips
  endpoint:
    path: /path/to/file_000.tvips
    method: GET
    data_selector: data
    params: {}
- name: Dummy2DPlot
  endpoint:
    path: /libertem/viz/base/Dummy2DPlot
    method: GET
- name: Live2DPlot
  endpoint:
    path: /libertem/viz/base/Live2DPlot
    method: GET
- name: BasePartition
  endpoint:
    path: /libertem/io/dataset/base/partition
    method: GET
    data_selector: records
    params: {}
- name: BufferedBackend
  endpoint:
    path: /libertem/io/dataset/base/backend_buffered
    method: GET
    data_selector: records
    params: {}
- name: DataSet
  endpoint:
    path: /libertem/io/dataset/base/dataset
    method: GET
    data_selector: records
    params: {}
- name: MaskContainer
  endpoint:
    path: /internal/api/maskcontainer
    method: GET
    data_selector: records
- name: get_device_class
  endpoint:
    path: libertem.common.backend.get_device_class
    method: GET
- name: get_use_cpu
  endpoint:
    path: libertem.common.backend.get_use_cpu
    method: GET
- name: get_use_cuda
  endpoint:
    path: libertem.common.backend.get_use_cuda
    method: GET
- name: set_file_limit
  endpoint:
    path: libertem.common.backend.set_file_limit
    method: POST
- name: set_use_cpu
  endpoint:
    path: libertem.common.backend.set_use_cpu
    method: POST
- name: set_use_cuda
  endpoint:
    path: libertem.common.backend.set_use_cuda
    method: POST
- name: detect
  endpoint:
    path: libertem.utils.devices.detect
    method: GET
- name: has_cupy
  endpoint:
    path: libertem.utils.devices.has_cupy
    method: GET
- name: MPLLive2DPlot
  endpoint:
    path: /libertem/viz/mpl
    method: POST
    data_selector: dataset
    params: {}
- name: BQLive2DPlot
  endpoint:
    path: /libertem/viz/bqp
    method: POST
    data_selector: dataset
    params: {}
- name: GMSLive2DPlot
  endpoint:
    path: /libertem/viz/gms
    method: POST
    data_selector: dataset
    params: {}
- name: Dummy2DPlot
  endpoint:
    path: /libertem/viz/base/Dummy2DPlot
    method: GET
    data_selector: records
- name: Live2DPlot
  endpoint:
    path: /libertem/viz/base/Live2DPlot
    method: GET
    data_selector: records
notes:
- By default, this method returns based on the process method precedence of tile >
  frame > partition.
- The implementation of the results ‘divergence’ and ‘curl’ differ slightly from `COMAnalysis`
  in that here results for pixels outside of an ROI will always be NaN. The `COMAnalysis`
  implementation could provide non-NaN values even in `ROI == False` pixels due to
  the behaviour of `np.gradient`.
- Using a regression correction calculated on the data itself may distort valid results,
  such as the effect of long-range fields. Furthermore, it may yield erronerous results
  due to aliasing on periodic structures or boundary effects. Subtracting a reference
  measurement or regression on a reference measurement instead of a regression on
  the data may give more reliable results.
- Deployment for offline data processing on a single-node system for a local user
  is thoroughly tested and can be considered stable.
- Deployment on a cluster is experimental and still requires some additional work.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects may return nulls in deeply nested fields
- The default executor is DaskJobExecutor that uses the dask.distributed scheduler.
- Uses Dask-based Context with 4 CPU workers and 2 GPU workers
- The features described below are experimental and under development.
- The 0.14.0 release adds a system for UDFs to be aware of which parts of a dataset
  have already been processed during merging and post-processing, and to mark parts
  of results as invalid when the processing would otherwise be incorrect.
- This release also increases the minimum supported Python version to 3.9 in line
  with a range of other projects.
- Token-based authentication is usable via integrations like Jupyter.
- The 0.13.1 point-release fixes an issue with loading assets when connecting to the
  libertem-server web interface via a proxy.
- LiberTEM works with Python 3.8 for experimental use.
- The default local Dask.Distributed context works.
- For a transition period, importing from the previous locations is supported but
  will trigger a FutureWarning.
- The 0.14.0 release adds a system for UDFs to be aware of which parts of a dataset
  have already been processed during merging and post-processing.
- This release also increases the minimum supported Python version to 3.9.
- Token-based authentication is only usable via integrations like Jupyter.
- Debugging the API server can show detailed exceptions in the output of `libertem-server`.
- The `--pdb` command line switch of pytest can be used to drop into a pdb prompt
  on test case failures.
- Direct I/O is no longer supported
- Users can access the coordinates of a tile/partition slice through `coordinates`.
- Processing is done in an asynchronous fashion; if you start an analysis using the
  HTTP API, the request immediately returns, but you get notifications about status
  changes and results on the websocket channel, or you can explicitly query the API
  server about a specific analysis.
- API calls in the Python API are synchronous for keeping it easy to use.
- Algorithms benefit from Tiled processing where the same slice of the signal dimension
  is processed for several frames in a row.
- Some formats require decoding or corrections by the CPU, where tiles that fit the
  L3 cache can speed up subsequent processing steps.
- LiberTEM should not listen on a network port where untrusted parties have access.
- Documentation building requires manual installation of pandoc on the build system.
- New in version 0.9.0.
- Debugging the API server can return a server error (500), detailed exception should
  be logged in the output of `libertem-server`.
- Use the `--pdb` command line switch of pytest to drop into a `pdb` prompt in the
  failing test case.
- Processing is done in an asynchronous fashion
- API calls in the Python API are synchronous for keeping it easy to use
- This executor is not thread-safe - concurrent calls into run_tasks() or run_function()
  are not supported.
- Many algorithms benefit from Tiled processing where the same slice of the signal
  dimension is processed for several frames in a row.
- The LiberTEM I/O back-end negotiates a tiling scheme between UDF and dataset that
  fulfills requirements from both UDF and dataset side as far as possible.
- LiberTEM can currently be used on Python >=3.9.3, 3.10, 3.11, 3.12 and 3.13.
- It is good practice to use a dedicated virtual environment for LiberTEM and its
  dependencies to avoid affecting other environments on your system.
- Highly experimental at this
- All workers used by the Context must have access to the same file path, over a network
  file system if necessary, in order to correctly save data to the file.
- If you are having trouble with the installation, please let us know by either filing
  an issue or by asking on our Gitter channel.
- Fortran-ordered .npy files are not supported
- Single-file DM data can be stored on disk using either normal C-ordering or an alternative
  F/C-hybrid ordering
- The reading of F/C-hybrid files is currently not supported for performance reasons
- This DataSet is not supported in the GUI yet, as the file dialog needs to be updated
  to properly handle opening series
- 'Changed in version 0.7.0: Removed deprecated methods `create_mask_job`, `create_pick_job`.'
- New in version 0.7.0.
- At this time can only convert to numpy *.npy* format
- 'Changed in version 0.5.0: Added the `progress` parameter'
- 'Changed in version 0.6.0: Added the `corrections` parameter'
- 'Changed in version 0.7.0: Removed deprecated Job support, now only UDF-based analyses
  are supported'
- Removed deprecated methods `get_results` and `get_job`
- Computation of masks is delayed until as late as possible, but is done automatically
  when necessary.
- Dark and gain reference are loaded from MRC files with the same root as the SEQ
  file and the extensions .dark.mrc and .gain.mrc, i.e. /path/to/file.dark.mrc and
  /path/to/file.gain.mrc if they are present.
- New in version 0.8.0.
- Dead pixels are read from an XML file with the same root as the SEQ file and the
  extension .Config.Metadata.xml, i.e. /path/to/file.Config.Metadata.xml in the above
  example if both this file and /path/to/file.metadata are present.
- The DataSet may reuse the internal buffer of a tile, so you should directly process
  the tile and not accumulate a number of tiles and then work on them.
- Base plotting class for interactive use.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- JobCancelledError – Either the job was cancelled using AsyncJobExecutor.cancel(),
  or the underlying data source was interrupted.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://github.com/LiberTEM/LiberTEM
  headers:
    Accept: application/json
source_metadata: null
