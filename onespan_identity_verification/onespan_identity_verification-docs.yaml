resources:
- name: create_transaction
  endpoint:
    path: /api/transaction/
    method: PUT
    data_selector: ''
    params: {}
- name: get_transaction_status
  endpoint:
    path: /api/transaction/uuid:transaction_id
    method: GET
    data_selector: ''
    params: {}
- name: get_transaction_verification
  endpoint:
    path: /api/transaction/uuid:transaction_id/verification
    method: GET
    data_selector: ''
    params: {}
- name: get_evidence
  endpoint:
    path: /api/transaction/uuid:transaction_id/document/AuditTrailDocument/pdf
    method: GET
    data_selector: ''
    params: {}
- name: get_document
  endpoint:
    path: /api/transaction/uuid:transaction_id/document/document_id/pdf
    method: GET
    data_selector: ''
    params: {}
- name: cancel_transaction
  endpoint:
    path: /api/transaction/uuid:transaction_id/event
    method: PUT
    data_selector: ''
    params: {}
- name: mark_transaction_for_erasure
  endpoint:
    path: /api/transactions/mark-for-erasure
    method: POST
    data_selector: ''
    params: {}
- name: unmark_transaction_for_erasure
  endpoint:
    path: /api/transactions/unmark-for-erasure
    method: POST
    data_selector: ''
    params: {}
- name: create_session_creation_token
  endpoint:
    path: /api/transaction/uuid:transaction_id/token
    method: POST
    data_selector: ''
    params: {}
- name: generate_audit_trail
  endpoint:
    path: /api/transactions/uuid:transaction_id/generate-audit-trail
    method: POST
    data_selector: ''
    params: {}
- name: download_audit_trail_document
  endpoint:
    path: /api/transactions/uuid:transaction_id/data
    method: GET
    data_selector: ''
    params: {}
- name: get_verification_images
  endpoint:
    path: /api/transactions/transaction_id/verifications/verification_id/verification-images
    method: GET
    data_selector: ''
    params: {}
- name: download_image_binary_data
  endpoint:
    path: /api/transactions/transaction_id/data?url=sfs_url
    method: GET
    data_selector: ''
    params: {}
- name: detailed_verification_report
  endpoint:
    path: /api/transactions/id/detailed-verification-report
    method: GET
    data_selector: ''
    params: {}
- name: digital_agreements
  endpoint:
    path: /api/v1/digitalagreements
    method: GET
    data_selector: records
- name: transaction
  endpoint:
    path: /api/transaction
    method: GET
    data_selector: records
    params: {}
- name: transaction
  endpoint:
    path: /api/transaction/
    method: PUT
    data_selector: id
    params: {}
- name: transaction_status
  endpoint:
    path: /api/transaction/uuid:transaction_id
    method: GET
    data_selector: records
    params:
      withVerifications: true/false
- name: transaction_verification
  endpoint:
    path: /api/transaction/uuid:transaction_id/verification
    method: GET
- name: Get Evidence
  endpoint:
    path: /api/transaction/{transaction_id}/document/AuditTrailDocument/pdf
    method: GET
- name: get_document
  endpoint:
    path: /api/transaction/{transaction_id}/document/{document_id}/pdf
    method: GET
- name: cancel_transaction
  endpoint:
    path: /api/transaction/uuid:transaction_id/event
    method: PUT
    data_selector: transaction
    params: {}
- name: session_creation_token
  endpoint:
    path: /api/transaction/transaction_id/token
    method: POST
    data_selector: token
    params: {}
- name: generate_audit_trail
  endpoint:
    path: /api/transactions/uuid:transaction_id/data
    method: GET
    data_selector: ''
    params:
      url: sfs://shared_storage_id/tenant_id/transactions/uuid:transaction_id/docs/AuditTrailDocument_transaction_version_number_events/1
- name: download_audit_trail_document
  endpoint:
    path: /api/transactions/uuid:transaction_id/data
    method: GET
    data_selector: ''
    params:
      url: sfs://shared_storage_id/tenant_id/transactions/uuid:transaction_id/docs/AuditTrailDocument_transaction_version_number_events/1
- name: verification_images
  endpoint:
    path: /api/transactions/{transaction_id}/data
    method: GET
    data_selector: verified_images
    params: {}
- name: detailed_verification_report
  endpoint:
    path: /api/transactions/id/detailed-verification-report
    method: GET
    data_selector: results
    params:
      id: required
- name: CreateVerification
  endpoint:
    path: /CreateVerification
    method: GET
    data_selector: result
    params: {}
- name: AddProviderData
  endpoint:
    path: /AddProviderData
    method: GET
    data_selector: result
    params: {}
- name: AttemptVerification
  endpoint:
    path: /AttemptVerification
    method: GET
    data_selector: result
    params: {}
- name: verification_images
  endpoint:
    path: /api/transactions/transaction_id/data
    method: GET
    data_selector: verified_images
- name: transaction
  endpoint:
    path: /properties/transaction
    method: GET
    data_selector: metadata
- name: transaction
  endpoint:
    path: /api/v1/transactions
    method: POST
    data_selector: transaction
    params: {}
- name: user
  endpoint:
    path: /properties/transaction/properties/users/items
    method: GET
    data_selector: records
- name: session
  endpoint:
    path: /properties/transaction/properties/session
    method: GET
    data_selector: session
- name: mark_for_erasure_request
  endpoint:
    path: /properties/transaction/properties/mark_for_erasure_request
    method: POST
    data_selector: grace_period, transaction_ids
- name: transaction_mark_for_erasure_response
  endpoint:
    path: /properties/transaction/properties/transaction_mark_for_erasure_response
    method: GET
    data_selector: message, transactions
- name: session
  endpoint:
    path: /properties/transaction/properties/session
    method: GET
    data_selector: properties
- name: transaction
  endpoint:
    path: /api/transaction/
    method: PUT
    data_selector: id
- name: transaction_status
  endpoint:
    path: /api/transaction/uuid:transaction_id
    method: GET
    data_selector: records
    params:
      withVerifications: 'true'
- name: transaction_verification
  endpoint:
    path: /api/transaction/uuid:transaction_id/verification
    method: GET
    data_selector: ''
- name: cancel_transaction
  endpoint:
    path: /api/transaction/{transaction_id}/event
    method: PUT
    data_selector: response
    params: {}
- name: mark_transaction_for_erasure
  endpoint:
    path: /transactions/mark-for-erasure
    method: POST
    data_selector: transactions
    params: {}
- name: session_creation_token
  endpoint:
    path: /api/transaction/transaction_id/token
    method: POST
    data_selector: token
    params: {}
- name: generate_audit_trail
  endpoint:
    path: /api/transactions/uuid:transaction_id/data
    method: GET
    data_selector: data
    params:
      url: sfs://shared_storage_id/tenant_id/transactions/uuid:transaction_id/docs/AuditTrailDocument_transaction_version_number_events/1
- name: download_audit_trail_document
  endpoint:
    path: /api/transactions/uuid:transaction_id/data
    method: GET
    data_selector: data
    params:
      url: sfs://shared_storage_id/tenant_id/transactions/uuid:transaction_id/docs/AuditTrailDocument_transaction_version_number_events/1
- name: detailed_verification_report
  endpoint:
    path: /api/transactions/id/detailed-verification-report
    method: GET
    data_selector: results
    params:
      id: unique identifier of the verification of a single person
- name: CreateVerification
  endpoint:
    path: /CreateVerification
    method: GET
    data_selector: stages
    params: {}
- name: AddProviderData
  endpoint:
    path: /AddProviderData
    method: GET
    data_selector: details
    params: {}
- name: AttemptVerification
  endpoint:
    path: /AttemptVerification
    method: GET
    data_selector: matchers
    params: {}
- name: digital_agreements
  endpoint:
    path: /api/v1/digital_agreements
    method: GET
    data_selector: records
    params: {}
- name: mark_transaction_for_erasure
  endpoint:
    path: /transactions/mark-for-erasure
    method: POST
    data_selector: transactions
- name: unmark_transaction_for_erasure
  endpoint:
    path: /transactions/unmark-for-erasure
    method: POST
    data_selector: transactions
    params: {}
- name: download_audit_trail_document
  endpoint:
    path: /api/transactions/transaction_id/data
    method: GET
    data_selector: data
    params:
      url: sfs://shared_storage_id/tenant_id/transactions/transaction_id/docs/AuditTrailDocument_transaction_version_number_events/1
- name: document_properties
  endpoint:
    path: /properties/transaction/properties/documents/items
    method: GET
    data_selector: documents
- name: signature_properties
  endpoint:
    path: /transaction.3.0.signature.json
    method: GET
    data_selector: signatures
- name: watermark_properties
  endpoint:
    path: /transaction.3.0.watermark.json
    method: GET
    data_selector: watermarks
- name: token
  endpoint:
    path: /properties/transaction/properties/tokens/items
    method: GET
    data_selector: tokens
- name: token
  endpoint:
    path: /properties/transaction/properties/tokens/items
    method: GET
    data_selector: token
    params: {}
- name: user_properties
  endpoint:
    path: /properties/transaction/properties/users/items
    method: GET
    data_selector: records
- name: evidence
  endpoint:
    path: /api/transaction/{transaction_id}/document/AuditTrailDocument/pdf
    method: GET
    data_selector: evidence
    params: {}
notes:
- Ensure to handle token expiration correctly.
- As of February 1, 2025, this connector is no longer available for purchase & installation
  and will be considered as End of Life on March 1st, 2026.
- System-to-system integration is done via the OneSpan Identity Verification REST
  API.
- Some endpoints require specific transaction IDs.
- Ensure proper scope is set for the API key.
- Generating the audit trail document is a time-consuming operation.
- Some data was not supplied, the comparison cannot be executed.
- The transaction model contains metadata necessary for executing an e-agreement workflow
  and collecting electronic evidence.
- The transaction model facilitates the execution of an e-agreement workflow.
- Country names are abbreviated with two-letter codes as specified in the ISO 3166-1
  alpha-2 standard.
- Watermark will be added to all document pages if the watermark operation is found
  in the list of pre-processing operations.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Authentication for access to the OneSpan Identity Verification REST API happens
  via two-legged OAuth2 with a JSON Web Token (JWT).
- OneSpan support provides a JWT to OneSpan Identity Verification customers.
- Watermarks can be added to all pages of the document if the watermark operation
  is included in the pre-processing operations.
- The version of the token record is read-only with a default value of 0.
errors:
- '401 Unauthorized: Check your API key and permissions.'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Recheck OAuth credentials.'
- '404 Not Found: Verify endpoint path.'
- '400 Bad Request: The transaction data is invalid.'
- '401 Unauthorized: Invalid token.'
- '403 Forbidden: The token does not grant transaction creation rights.'
- '500 Internal Server Error: Server or application error.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404 Not Found: The requested resource was not found.'
- '400 Bad Request: The client has provided invalid input.'
- '401 Unauthorized: The client has not provided a valid access token, or has provided
  an access token which misses a number of claims.'
- '500 Internal Server Error: The server encountered an unexpected condition which
  prevented it from completing the request.'
- 'AnalysedDataInsufficient: Some data was not supplied'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify the authentication token.'
- '404 Not Found: Ensure the endpoint URL is correct.'
- '202 Accepted: All transactions were marked for deletion and will be deleted when
  the timestamp has been reached.'
- '207: Some transactions were marked for deletion, others were not.'
- '400 Bad Request: Validation error. Empty list of transaction_ids.'
- '404 Not Found: Wrong URL.'
- '400: Bad Request: The client has provided invalid input.'
- '401: Unauthorized: The client has not provided a valid access token, or has provided
  an access token which misses a number of claims.'
- '404: Not Found: The requested resource was not found.'
- '500: Internal Server Error: The server encountered an unexpected condition which
  prevented it from completing the request.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://onespan.com
  auth:
    type: oauth2
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
