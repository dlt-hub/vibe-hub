resources:
- name: song
  endpoint:
    path: /api/song
    method: GET
- name: score
  endpoint:
    path: /api/score
    method: GET
- name: maestro
  endpoint:
    path: /api/maestro
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: song
  endpoint:
    path: /song
    method: GET
- name: score
  endpoint:
    path: /score
    method: GET
- name: maestro
  endpoint:
    path: /maestro
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: data_download
  endpoint:
    path: /download
    method: POST
    data_selector: data
    params: {}
- name: song_client
  endpoint:
    path: /song-client
    method: POST
- name: score_client
  endpoint:
    path: /score-client
    method: POST
- name: metadata_submission
  endpoint:
    path: /submit/metadata
    method: POST
    data_selector: payload
    params: {}
- name: workflow
  endpoint:
    path: /workflow
    method: GET
    data_selector: workflow
- name: donor
  endpoint:
    path: /donor
    method: GET
    data_selector: donor
- name: specimen
  endpoint:
    path: /specimen
    method: GET
    data_selector: specimen
- name: publication
  endpoint:
    path: /publication
    method: GET
    data_selector: publication
- name: collaborator
  endpoint:
    path: /collaborator
    method: GET
    data_selector: collaborator
- name: schemas
  endpoint:
    path: /schemas
    method: GET
    data_selector: quickStartSchema
    params: {}
- name: manifest
  endpoint:
    path: /generate-manifest
    method: POST
    data_selector: manifest
    params: {}
- name: upload
  endpoint:
    path: /upload
    method: POST
    data_selector: upload
    params: {}
- name: publish
  endpoint:
    path: /publish
    method: POST
    data_selector: publish
    params: {}
notes:
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Under Development
- Prelude is not intended for production environments.
- It serves as a preparatory tool to ensure successful production deployments.
- API Keys are brokered by Keycloak and accessible when logged in to the Stage UI.
- Ensure enough resources get allocated to Docker
- Run commands from the root directory of the quickstart folder
- An analysis ID is a randomly generated UUID created by Song; as such, yours will
  differ.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'SONG_SERVER_ERROR[schema.violation @ 1719691299284]: [SubmitService::schema.violation]
  - ##/collaborator/0: required key [name] not found,##/donor/primarySite: Windpipe
  is not a valid enum value'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: http://localhost:3000
source_metadata: null
