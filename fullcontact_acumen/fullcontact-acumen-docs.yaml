resources:
- name: person_enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: details
    params: {}
- name: person_enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: details
    params: {}
- name: webtag_installation
  endpoint:
    path: /docs/configure-fullcontact-webtag
    method: GET
    data_selector: webtag
- name: customer_recognition
  endpoint:
    path: /customer/recognition
    method: POST
    data_selector: data
    params: {}
- name: enrichment_data
  endpoint:
    path: /enrich
    method: POST
    data_selector: data
    params: {}
- name: Person.Enrich
  endpoint:
    path: /enrich
    method: POST
    data_selector: data
    params: {}
- name: webtag_installation
  endpoint:
    path: /docs/wordpress-installation
    method: GET
    data_selector: content
    params: {}
- name: verify_installation
  endpoint:
    path: /platform.fullcontact.com/developers/recognition/configuration
    method: GET
    data_selector: verification
    params: {}
- name: metrics
  endpoint:
    path: /FC_NATIVE_APP/METRICS/FC_RESOLVE_METRICS
    method: SELECT
    data_selector: '*'
- name: mapresolve
  endpoint:
    path: /v3/identity.mapresolve
    method: POST
    data_selector: SRC
- name: enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: SRC
- name: resolve
  endpoint:
    path: /FC_NATIVE_APP.APP_SCHEMA.RESOLVE_WITH_API_KEY
    method: CALL
    data_selector: resolved_records
- name: metrics
  endpoint:
    path: /FC_NATIVE_APP.METRICS.FC_RESOLVE_METRICS
    method: SELECT
    data_selector: '*'
- name: map_resolve
  endpoint:
    path: /v3/identity.mapresolve
    method: POST
- name: enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
- name: person_enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: details
- name: acumen
  endpoint:
    path: /api/v3/acumen
    method: GET
    data_selector: data
- name: person_enrich
  endpoint:
    path: /person.enrich
    method: POST
    data_selector: records
- name: person_enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: details
- name: person_enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: data
    params: {}
- name: person_enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: details
- name: person_enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: record
    params: {}
- name: person_enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: results
- name: person_enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: response
    params: {}
- name: company_enrich
  endpoint:
    path: /v3/company.enrich
    method: POST
    data_selector: records
    params: {}
- name: person_enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: data
- name: company_enrich
  endpoint:
    path: /v3/company.enrich
    method: POST
    data_selector: response
    params: {}
- name: company_enrich
  endpoint:
    path: /v3/company.enrich
    method: POST
    data_selector: response
    params: {}
- name: person_enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: null
    params: {}
- name: company_enrich
  endpoint:
    path: /v3/company.enrich
    method: POST
    data_selector: response
    params: {}
- name: company_enrich
  endpoint:
    path: /v3/company.enrich
    method: POST
    data_selector: response
    params: {}
- name: company_enrich
  endpoint:
    path: /v3/company.enrich
    method: POST
    data_selector: response
    params: {}
- name: company_search
  endpoint:
    path: /v3/company.search
    method: POST
    data_selector: records
- name: company_enrich
  endpoint:
    path: /v3/company.enrich
    method: POST
    data_selector: records
- name: company_search
  endpoint:
    path: /v3/company.search
    method: POST
    data_selector: response
    params: {}
- name: company_enrich
  endpoint:
    path: /v3/company.enrich
    method: POST
    data_selector: response
    params: {}
- name: identity.resolve
  endpoint:
    path: /identity/resolve
    method: POST
- name: identity.map
  endpoint:
    path: /identity/map
    method: POST
- name: identity.delete
  endpoint:
    path: /identity/delete
    method: DELETE
- name: identity.resolve
  endpoint:
    path: /identity/resolve
    method: POST
- name: identity.map
  endpoint:
    path: /identity/map
    method: POST
- name: identity.delete
  endpoint:
    path: /identity/delete
    method: DELETE
- name: identity.resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: personIds
- name: identity.map
  endpoint:
    path: /v3/identity.map
    method: POST
    data_selector: recordIds
- name: person.enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: fullName
- name: identity.resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: personIds
- name: identity.map
  endpoint:
    path: /v3/identity.map
    method: POST
    data_selector: recordIds
- name: person.enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: fullName
- name: identity.resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: records
- name: identity.resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: ''
    params: {}
- name: identity.resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: personIds
    params:
      generatePid: 'false'
- name: identity_resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: personIds
    params:
      generatePid: 'false'
- name: identity.resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: recordIds
    params: {}
- name: identity.map
  endpoint:
    path: /v3/identity.map
    method: POST
    data_selector: recordIds
    params: {}
- name: identity.mapResolve
  endpoint:
    path: /v3/identity.mapResolve
    method: POST
    data_selector: recordIds
    params: {}
- name: identity.delete
  endpoint:
    path: /v3/identity.delete
    method: POST
    data_selector: recordIds
    params: {}
- name: identity.resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: recordIds
    params: {}
- name: identity.map
  endpoint:
    path: /v3/identity.map
    method: POST
    data_selector: recordIds
    params: {}
- name: identity.mapResolve
  endpoint:
    path: /v3/identity.mapResolve
    method: POST
    data_selector: recordIds
    params: {}
- name: identity.delete
  endpoint:
    path: /v3/identity.delete
    method: POST
    data_selector: recordIds
    params: {}
- name: fetch_tags
  endpoint:
    path: /v3/tags.get
    method: POST
    data_selector: tags
    params: {}
- name: create_tags
  endpoint:
    path: /v3/tags.create
    method: POST
    data_selector: null
    params: {}
- name: delete_tags
  endpoint:
    path: /v3/tags.delete
    method: POST
    data_selector: null
    params: {}
- name: identity_resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: recordIds
    params: {}
- name: tags_create
  endpoint:
    path: /v3/tags.create
    method: POST
    data_selector: null
    params: {}
- name: tags_get
  endpoint:
    path: /v3/tags.get
    method: POST
    data_selector: null
    params: {}
- name: tags_delete
  endpoint:
    path: /v3/tags.delete
    method: POST
    data_selector: null
    params: {}
- name: identity_resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: null
    params:
      tags: 'true'
- name: identity_resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: recordIds
    params: {}
- name: identity.resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: personIds
- name: person.enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: identifiers
- name: identity.resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: null
    params: {}
- name: person.enrich
  endpoint:
    path: /v3/person.enrich
    method: POST
    data_selector: null
    params: {}
- name: identity.resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: recordIds
    params: {}
- name: identity.resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: personIds
    params:
      generatePid: 'false'
- name: identity.resolve
  endpoint:
    path: /identity.resolve
    method: POST
    data_selector: null
    params: {}
- name: identity.resolve
  endpoint:
    path: /v3/identity.resolve
    method: POST
    data_selector: personIds
    params:
      generatePid: 'false'
notes:
- dataFilter line is only necessary if you have other Person.Enrich bundles enabled
- The 'dataFilter' line is only necessary if you have other Person.Enrich bundles
  enabled.
- FullContact can help improve the customer experience by tying together disparate
  datasets.
- As a personâ€™s data changes, our graph dynamically updates.
- Your audience file should be in .CSV format.
- We recommend that you provide as many acceptable customer inputs as possible, in
  the correct formatting.
- A FullContact Solution team member will perform the API enrichment on your behalf,
  and deliver the files to your Platform account.
- This is a manual process.
- Batch File Tests often come with a fee. Make sure you ask your FullContact representative
  about this.
- Company Enrichment Data is only available via real-time API
- Company Enrichment Data is NOT available via Batch Export
- Verify installation may require manual check if ad blockers are active.
- Requires setup of FullContact platform account with access to Customer Recognition
  or Acumen products
- Webtag installation may be affected by active ad blockers or existing consent banners
  on the website
- The FullContact webtag can be installed on many different web based platforms.
- MFA is required when logging in using username/password.
- SFTP protocol does not support a prompt for an MFA code.
- MFA will be required in order to login using your username/password to both the
  FullContact Platform web application and cftp.fullcontact.com (using the SFTP protocol
  on port 22)
- There is a limit on the rate of email settings change requests.
- MFA will be required in order to login using your username/password to both the
  FullContact Platform web application and cftp.fullcontact.com.
- Your FullContact account must be enabled for Organization access.
- If you do not have the Organization menu option, contact support.
- FullContact API requires an API key for access.
- Make sure to modify the above code by adding your Simon Data provided Authorization
  Key.
- If you donâ€™t yet have your FullContact key, please visit the Set Up Customer Recognition
  Tag documentation to understand how to get that key.
- If your Segment tag integration has been customized or modified from the standard
  implementation, names and variables may be different.
- Make sure you modify the above code if you have changed either the cookie name or
  storage location from the default 'Cookie storage' and 'fc_pid' names provided in
  the FullContact Platform.
- Make sure you modify the above code by adding your Simon Data provided Authorization
  Key.
- Requires API key for authorization
- Job creation is necessary to trigger the integration
- You may need to reach out to a Sales Representative to enable the Customer Recognition
  feature in the Platform UI
- Make sure you talk with your FullContact representative first - you will need a
  FullContact API key as part of this process.
- You must have generated a webtag in the FullContact platform and copied the code
  for that webtag.
- It's typically best practice to install the webtag in the footer for page load /
  performance considerations.
- Be sure to copy this key and save it. This will be used when configuring the FullContact
  Customer Recognition Extension in Adobe Experience Platform
- You will start to see analytics populate within the FullContact platform over the
  next 12-24 hours.
- Customers have the option to create more than one webtag if you are looking to track
  multiple websites.
- The Acumen product will indicate which lead has visited within the Lead Report download.
- You can find your FullContact webtag from within the Configuration section, or access
  or create a new webtag from within the Settings section of platform.
- GoDaddy's Website Builder product is not a supported platform for the FullContact
  webtag.
- While GoDaddy's Website Builder product provides their customers with the option
  to insert a custom HTML code block, this section of HTML is embedded in the page
  in an iframe in the body of the page, isolated away from the rest of the page.
- The FullContact webtag must be installed in the source of all of the pages that
  you want to recognize visitors. It is currently not possible with GoDaddy's Website
  Builder product to install javascript in the page source - a limitation imposed
  by GoDaddy.
- In older versions of GoDaddy's Website Builder product (ver. 6 + earlier), there
  were fields in Settings that would allow users to embed custom code in both the
  header and footer of a website. GoDaddy removed that ability when they transitioned
  customers to the newest version of the Website Builder product.
- If you have another GoDaddy product that allows you to edit the source code of your
  website, you may be able to use the FullContact webtag.
- Webflow will allow you to install the FullContact webtag on specific individual
  pages, or sitewide.
- 'To get the best value out of the FullContact product, these are our recommendations
  for your installation: Install the webtag for your entire website, Install the webtag
  in the head of your website.'
- To use this application, you will need a FullContact API Key.
- It is currently not possible with GoDaddy's Website Builder product to install javascript
  in the page source - a limitation imposed by GoDaddy.
- RECORD_ID is required and expects a column populated with unique ids for each customer
  record.
- Multiple name values or addresses are not supported by Native Resolve.
- You will need a FullContact API Key.
- After you install the FullContact Snowflake application you will need to decide
  which internal users and roles in your account should be allowed to access it.
- Access for your organization to this dataset will need to be provisioned for Snowflake.
- The application will expect to see a column in your table called `PIDS` that is
  appended after data is resolved.
- You will need a FullContact API Key in order to use this integration.
- Calling GET_SQL_GRANT_INPUT_TABLE is necessary to grant application privileges to
  your input table.
- FullContact requires customers to adhere to privacy regulations.
- None of your customer data leaves the Snowflake environment.
- Consent Management feature requires setup in the Customer Recognition or Acumen
  products.
- To use this application, you will need a FullContact Webtag Key.
- It is best practice to Map and Resolve your entire CRM file to your Identity Streme
  prior to putting the tag on your website.
- Acumen is a B2B lead generation product for sales and marketing teams looking for
  ways turn the 98% of unknown website visitors into tangible leads.
- FullContact requires its customers to adhere to and uphold modern privacy regulations.
- Whitelisting fullcontact.com counts as one domain.
- Parameter based functionality is not yet available.
- Enrich is built upon Identity Resolution capabilities.
- API key is required to interact with the APIs.
- To use MD5 emails, be sure to first lowercase and ensure any extraneous characters
  (e.g. extra spaces or surrounding quotation marks) are stripped off.
- There is a maximum of 25 identifiers by type that you may use in your multi field
  request.
- Keep Your API Keys Secret
- API Key required to interact with the APIs
- Uses API Key for authentication â€” requires setup of API key.
- Keep Your API Keys Secret. Your API keys are essentially like passwords to access
  the FullContact API, and should be kept secret.
- Webhooks are defined in the request body using the webhookUrl field.
- Our default rate limit is 6,000 QPM but should you need a higher rate limit contact
  our Sales team to get you setup.
- Uses API Key for authentication â€” replace {Your API Key} with actual key
- This endpoint supports the use of webhooks.
- Authorization header requires 'Bearer ' followed by API Key
- All requests should use POST method
- API keys are sent within the Authorization header with 'Bearer ' prefix.
- All requests to the new APIs will be done using the POST method.
- Authorization Header requires Bearer token including a space after 'Bearer'
- All requests must use the POST method
- API keys must be sent in the Authorization header with 'Bearer ' prefix
- Responses are returned only in JSON format
- Authentication has changed to allow for added levels of security â€” new API keys
  are required.
- All requests will be done using the POST method instead of GET.
- Authentication changed to use Authorization header with Bearer token.
- API endpoint will need to be updated from v3/company.search to v3/company.enrich.
- Lookup parameters are sent across as keys inside of a post body object with domain
  instead of companyName being used as the lookup parameter.
- The guide below will walk you through the common steps required to upgrade.
- API endpoint has been updated for company profile lookups
- Copy your API key and store it somewhere secure.
- Keep API key secure and only share through secure channels
- Generated keys cannot be viewed again
- Keep Your API Keys Secret.
- By default Person IDs are only generated and returned if the request data is found
  in the FullContact identity graph.
- If generatePid is set to true, a person ID will be returned for all API responses.
- The default rate limit for the resolve and map endpoints is 100 queries per second.
- The default rate limit for the resolve endpoint is 100 queries per second.
- The default rate limit for the map endpoint is 100 queries per second.
- In order to obtain an overall higher match rate and quality output from FullContact,
  we recommend leveraging our multi field input capability.
- Average match rate for Resolve is 93%.
- Deduplication or overlapping records rate is dependent on the customer records.
- Merge Instances occur when PIDs are found to be connected inside the Identity Graph.
- Split Instances occur when one PID connects two or more individuals together inside
  the Identity Graph.
- Copy your API key and store it somewhere secure. You will not be able to see the
  whole key again.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck API Key'
- '200: Successful response'
- '401: Unauthorized access'
- '404: Not found'
- If you receive an error message after clicking 'Invite', contact support.
- '400 Bad Request: Check your request parameters and payload.'
- '401 Unauthorized: Ensure your API key is valid.'
- '429 Too Many Requests: Rate limit exceeded, try again later.'
- While a PersonID is not given for every website visitor, you should start to see
  around 30%+ of traffic identified.
- 'Success! Resolved records were saved to: FC_NATIVE_APP_IO.RESOLVE_OUT.RESOLVE_RESULTS.'
- '401 Unauthorized: Recheck API key or token expiration'
- '400 Bad Request: Check the request parameters.'
- '403 Forbidden: Ensure proper API key is used.'
- '404 Not Found: Verify the endpoint URL.'
- '400: Bad Request - More than 25 identifiers for any given identifier type.'
- '400: Bad Request - More than 25 identifiers for any given identifier type'
- '401 Unauthorized: Recheck API key'
- '429 Too Many Requests: A request would exceed the rate limit.'
- '401 Unauthorized: Recheck API key or permissions'
- '200 - OK: The request was successful.'
- '202 - Accepted: Your request is currently being processed. You can check again
  later to see the request has been processed.'
- '400 - Bad Request: Your request was malformed.'
- '403 - Forbidden: Your API key is invalid, missing, or has exceeded its quota.'
- '404 - Not Found: The request query was searched in the past 24 hours and nothing
  was found.'
- '405 - Method Not Allowed: You have queried the API with an unsupported HTTPS method.
  Retry your query with either GET or POST.'
- '410 - Gone: This resource cannot be found.'
- '422 - Invalid: Invalid or missing API query parameter.'
- '500 - Server Error: Something is broken on FullContact''s side.'
- '503 - Service Unavailable: There is a transient downstream error condition.'
- '429 Too Many Requests: The request was delayed by the maximum possible rate limiting
  latency.'
- '401 Unauthorized: Check your API key.'
- '400 Bad Request: Verify the request body format.'
- '401 Unauthorized: Recheck API Key or permissions'
- '401 Unauthorized: Recheck API Key.'
- '429 Too Many Requests: Throttle API calls.'
- '401 Unauthorized: Check API key and ensure it''s sent in the Authorization header'
- '401 Unauthorized: Recheck API key or access permissions.'
- '401 Unauthorized: Check API key validity'
- '429 Too Many Requests: Reduce frequency of requests'
- '400: Maximum of 25 identifiers for any given identifier type exceeded.'
- '400: Bad Request'
- '401: Unauthorized'
- '404: No person/record IDs mapped to the provided Multi-Field'
- '204: Successful deletion'
- 'Rate limit exceeded: Throttle API calls or reduce frequency'
- '401: Unauthorized â€” Check API key'
- '400: Returned if there are more than 25 identifiers for any given identifier type.'
- '400: Bad Request if more than 25 identifiers for any given identifier type'
- '401 Unauthorized: Invalid API key'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.fullcontact.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
