resources:
- name: checkout_session
  endpoint:
    path: /v1/checkouts
    method: POST
    data_selector: id
    params: {}
- name: activate_license
  endpoint:
    path: /v1/licenses/activate
    method: POST
- name: cancel_subscription
  endpoint:
    path: /v1/subscriptions/{id}/cancel
    method: POST
- name: create_checkout
  endpoint:
    path: /v1/checkouts
    method: POST
- name: create_discount_code
  endpoint:
    path: /v1/discounts
    method: POST
- name: create_product
  endpoint:
    path: /v1/products
    method: POST
- name: deactivate_license
  endpoint:
    path: /v1/licenses/deactivate
    method: POST
- name: delete_discount_code
  endpoint:
    path: /v1/discounts/{id}/delete
    method: DELETE
- name: get_checkout
  endpoint:
    path: /v1/checkouts
    method: GET
- name: get_customer
  endpoint:
    path: /v1/customers
    method: GET
- name: get_discount_code
  endpoint:
    path: /v1/discounts
    method: GET
- name: get_product
  endpoint:
    path: /v1/products
    method: GET
- name: get_subscription
  endpoint:
    path: /v1/subscriptions
    method: GET
- name: list_transactions
  endpoint:
    path: /v1/transactions/search
    method: GET
- name: list_customers
  endpoint:
    path: /v1/customers/list
    method: GET
- name: list_products
  endpoint:
    path: /v1/products/search
    method: GET
- name: update_subscription
  endpoint:
    path: /v1/subscriptions/{id}
    method: POST
- name: upgrade_subscription
  endpoint:
    path: /v1/subscriptions/{id}/upgrade
    method: POST
- name: validate_license
  endpoint:
    path: /v1/licenses/validate
    method: POST
- name: activate_license
  endpoint:
    path: /v1/licenses/activate
    method: POST
- name: cancel_subscription
  endpoint:
    path: /v1/subscriptions/{id}/cancel
    method: POST
- name: create_checkout
  endpoint:
    path: /v1/checkouts
    method: POST
- name: create_discount_code
  endpoint:
    path: /v1/discounts
    method: POST
- name: create_product
  endpoint:
    path: /v1/products
    method: POST
- name: deactivate_license
  endpoint:
    path: /v1/licenses/deactivate
    method: POST
- name: delete_discount_code
  endpoint:
    path: /v1/discounts/{id}/delete
    method: DELETE
- name: get_checkout
  endpoint:
    path: /v1/checkouts
    method: GET
- name: get_customer
  endpoint:
    path: /v1/customers
    method: GET
- name: get_discount_code
  endpoint:
    path: /v1/discounts
    method: GET
- name: get_product
  endpoint:
    path: /v1/products
    method: GET
- name: get_subscription
  endpoint:
    path: /v1/subscriptions
    method: GET
- name: list_transactions
  endpoint:
    path: /v1/transactions/search
    method: GET
- name: list_customers
  endpoint:
    path: /v1/customers/list
    method: GET
- name: list_products
  endpoint:
    path: /v1/products/search
    method: GET
- name: update_subscription
  endpoint:
    path: /v1/subscriptions/{id}
    method: POST
- name: upgrade_subscription
  endpoint:
    path: /v1/subscriptions/{id}/upgrade
    method: POST
- name: validate_license
  endpoint:
    path: /v1/licenses/validate
    method: POST
- name: activate_license
  endpoint:
    path: /v1/licenses/activate
    method: POST
- name: cancel_subscription
  endpoint:
    path: /v1/subscriptions/{id}/cancel
    method: POST
- name: create_checkout
  endpoint:
    path: /v1/checkouts
    method: POST
- name: create_discount_code
  endpoint:
    path: /v1/discounts
    method: POST
- name: create_product
  endpoint:
    path: /v1/products
    method: POST
- name: deactivate_license
  endpoint:
    path: /v1/licenses/deactivate
    method: POST
- name: delete_discount_code
  endpoint:
    path: /v1/discounts/{id}/delete
    method: DELETE
- name: get_checkout
  endpoint:
    path: /v1/checkouts
    method: GET
- name: get_customer
  endpoint:
    path: /v1/customers
    method: GET
- name: get_discount_code
  endpoint:
    path: /v1/discounts
    method: GET
- name: get_product
  endpoint:
    path: /v1/products
    method: GET
- name: get_subscription
  endpoint:
    path: /v1/subscriptions
    method: GET
- name: list_transactions
  endpoint:
    path: /v1/transactions/search
    method: GET
- name: list_customers
  endpoint:
    path: /v1/customers/list
    method: GET
- name: list_products
  endpoint:
    path: /v1/products/search
    method: GET
- name: update_subscription
  endpoint:
    path: /v1/subscriptions/{id}
    method: POST
- name: upgrade_subscription
  endpoint:
    path: /v1/subscriptions/{id}/upgrade
    method: POST
- name: validate_license
  endpoint:
    path: /v1/licenses/validate
    method: POST
- name: activate_license
  endpoint:
    path: /v1/licenses/activate
    method: POST
    data_selector: id
    params: {}
- name: validate_license
  endpoint:
    path: /v1/licenses/validate
    method: POST
    data_selector: instance
    params: {}
- name: deactivate_license
  endpoint:
    path: /v1/licenses/deactivate
    method: POST
    data_selector: instance
    params: {}
- name: activate_license
  endpoint:
    path: /v1/licenses/activate
    method: POST
    data_selector: instance
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
    data_selector: records
    params: {}
- name: payouts
  endpoint:
    path: /payouts
    method: GET
    data_selector: records
    params: {}
- name: refunds
  endpoint:
    path: /refunds
    method: GET
    data_selector: records
    params: {}
- name: activate_license
  endpoint:
    path: /v1/licenses/activate
    method: POST
- name: cancel_subscription
  endpoint:
    path: /v1/subscriptions/{id}/cancel
    method: POST
- name: create_checkout
  endpoint:
    path: /v1/checkouts
    method: POST
- name: create_discount_code
  endpoint:
    path: /v1/discounts
    method: POST
- name: create_product
  endpoint:
    path: /v1/products
    method: POST
- name: deactivate_license
  endpoint:
    path: /v1/licenses/deactivate
    method: POST
- name: delete_discount_code
  endpoint:
    path: /v1/discounts/{id}/delete
    method: DELETE
- name: get_checkout
  endpoint:
    path: /v1/checkouts
    method: GET
- name: get_customer
  endpoint:
    path: /v1/customers
    method: GET
- name: get_discount_code
  endpoint:
    path: /v1/discounts
    method: GET
- name: get_product
  endpoint:
    path: /v1/products
    method: GET
- name: get_subscription
  endpoint:
    path: /v1/subscriptions
    method: GET
- name: list_transactions
  endpoint:
    path: /v1/transactions/search
    method: GET
- name: list_customers
  endpoint:
    path: /v1/customers/list
    method: GET
- name: list_products
  endpoint:
    path: /v1/products/search
    method: GET
- name: update_subscription
  endpoint:
    path: /v1/subscriptions/{id}
    method: POST
- name: upgrade_subscription
  endpoint:
    path: /v1/subscriptions/{id}/upgrade
    method: POST
- name: validate_license
  endpoint:
    path: /v1/licenses/validate
    method: POST
- name: activate_license
  endpoint:
    path: /v1/licenses/activate
    method: POST
    data_selector: response
    params: {}
- name: deactivate_license
  endpoint:
    path: /v1/licenses/deactivate
    method: POST
    data_selector: response
    params: {}
- name: activate_license
  endpoint:
    path: /v1/licenses/activate
    method: POST
    data_selector: response
- name: validate_license
  endpoint:
    path: /v1/licenses/validate
    method: POST
    data_selector: response
- name: deactivate_license
  endpoint:
    path: /v1/licenses/deactivate
    method: POST
    data_selector: response
- name: checkout
  endpoint:
    path: /v1/checkouts
    method: POST
    data_selector: paymentCheckout
- name: subscription
  endpoint:
    path: /v1/subscriptions/{subscriptionId}/upgrade
    method: POST
    data_selector: subscriptionUpgrade
- name: checkout_session
  endpoint:
    path: /v1/checkouts
    method: POST
    data_selector: checkout_url
    params: {}
- name: customer
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: id
    params: {}
- name: checkout
  endpoint:
    path: /v1/checkouts
    method: POST
    data_selector: checkout
    params: {}
- name: negotiation_session
  endpoint:
    path: /v1/sessions/creem
    method: POST
    data_selector: session
    params: {}
- name: payments
  endpoint:
    path: /payments
    method: GET
- name: subscriptions
  endpoint:
    path: /my-orders
    method: GET
- name: refunds
  endpoint:
    path: /contact
    method: GET
- name: supported_countries
  endpoint:
    path: /faq/supported-countries
    method: GET
    data_selector: countries
    params: {}
- name: unsupported_countries
  endpoint:
    path: /faq/prohibited-products
    method: GET
    data_selector: countries
    params: {}
- name: prohibited_products
  endpoint:
    path: /faq/prohibited-products
    method: GET
    data_selector: prohibited_products
    params: {}
- name: restricted_products
  endpoint:
    path: /faq/restricted-products
    method: GET
    data_selector: restricted_products
    params: {}
- name: webhook
  endpoint:
    path: /api/webhooks
    method: POST
    data_selector: payload
- name: checkout_session
  endpoint:
    path: /v1/checkouts
    method: GET
    data_selector: checkout_session
    params:
      checkout_id: string
- name: product
  endpoint:
    path: /v1/products
    method: POST
    data_selector: null
    params: {}
- name: product
  endpoint:
    path: /v1/products
    method: GET
    data_selector: records
    params:
      product_id: string
- name: products
  endpoint:
    path: /v1/products/search
    method: GET
    data_selector: items
    params:
      page_number: number
      page_size: number
- name: customer
  endpoint:
    path: /v1/customers
    method: GET
    data_selector: records
    params: {}
- name: customers
  endpoint:
    path: /v1/customers/list
    method: GET
    data_selector: items
    params:
      page_number: '1'
      page_size: '10'
- name: transactions
  endpoint:
    path: /v1/transactions/search
    method: GET
    data_selector: items
    params: {}
- name: validate_license
  endpoint:
    path: /v1/licenses/validate
    method: POST
    data_selector: response
    params: {}
- name: activate_license
  endpoint:
    path: /v1/licenses/activate
    method: POST
    data_selector: id
    params: {}
- name: deactivate_license
  endpoint:
    path: /v1/licenses/deactivate
    method: POST
    data_selector: id
- name: discount
  endpoint:
    path: /v1/discounts
    method: POST
    data_selector: discount
    params: {}
- name: delete_discount_code
  endpoint:
    path: /v1/discounts/{id}/delete
    method: DELETE
    data_selector: id
    params: {}
- name: discount_code
  endpoint:
    path: /v1/discounts
    method: GET
    data_selector: discount
    params: {}
- name: subscription
  endpoint:
    path: /v1/subscriptions
    method: GET
    data_selector: subscription
    params:
      subscription_id: <string>
- name: subscription
  endpoint:
    path: /v1/subscriptions/{id}
    method: POST
    data_selector: subscription
- name: subscriptions
  endpoint:
    path: /v1/subscriptions/{id}/upgrade
    method: POST
    data_selector: id
    params: {}
- name: cancel_subscription
  endpoint:
    path: /v1/subscriptions/{id}/cancel
    method: POST
notes:
- Requires setup of API key.
- All requests must be made over HTTPS.
- Ensure your API key is kept confidential.
- Creem supports a wide range of payment methods including Credit Cards, Apple Pay,
  Google Pay, etc.
- Payouts are executed twice per month on the 1st and 15th.
- Requires API key in headers for authentication.
- License key activation is tracked against the license limit.
- Minimal auth setup with BetterAuth.
- Webhook endpoint needs to be tested for proper functionality.
- Payment links allow for customizable metadata and themes via URL parameters.
- Creem uses webhooks to push real-time notifications about payments and subscriptions.
- Webhooks and API keys that you will see on the Developer tab will also be exclusively
  for the test environment.
- You can optionally add a request_id parameter to track the payment.
- API Keys are secret tokens used to authenticate your requests. They are unique to
  your account and should be kept confidential.
- Always implement both test and live environment configurations
- Store API keys securely and never expose them in client-side code
- Set appropriate minimum prices to ensure profitable negotiations
- Test the complete flow in the test environment before going live
- Always test the integration in a development environment first
- Implement proper error handling for affiliate tracking
- Monitor webhook deliveries and set up retry mechanisms
- Regularly verify commission calculations
- Payouts are always executed twice per month on the 1st and 15th.
- Creem empowers sellers with the flexibility to establish their own refund policies
  while maintaining the right to process refunds within 60 days to prevent chargebacks.
- Customers retain the ability to initiate chargebacks against their purchases at
  any time.
- If you violate our terms of service or attempt to sell prohibited products, you
  risk getting your store placed in review or suspended.
- Uses webhooks to notify about payment events
- Creem automatically retries to send the request with a progressive backoff period
  of 30 seconds, 1 minute, 5 minutes and 1 hour
- Requires x-api-key for authentication
- Activates a license key.
- Requires setup of API key for authentication.
- The update behavior for the subscription defaults to proration-charge.
- Update behavior for subscription defaults to proration-charge-immediately
- Cancel a subscription.
errors:
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify API key.'
- '404 Not Found: The requested resource does not exist.'
- '400: Check that the parameters were correct.'
- '401: The API key used was missing.'
- '403: The API key used was invalid.'
- '404: The resource was not found.'
- '429: The rate limit was exceeded.'
- '500: Indicates an error with Creem servers.'
- '400 Bad Request: Invalid or missing parameters'
- '401 Unauthorized: Invalid API key'
- '404 Not Found: Invalid license key or instance ID'
- '410 Gone: License has been revoked or expired'
- '400 Bad Request: Check your request parameters.'
- '401 Unauthorized: Check your OAuth token.'
- '404 Not Found: Verify the endpoint path.'
- '403 Forbidden: License key has reached activation limit'
- '404 Not Found: Invalid license key'
- '401 Unauthorized: Check your API key.'
- '400 Bad Request: Ensure the data payload is correctly structured.'
- '401 Unauthorized: Recheck API key or permissions'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '400 Bad Request: Check required parameters'
- '401 Unauthorized: Provide a valid x-api-key'
- '404 Not Found: The requested resource does not exist'
- '400 Bad Request: Check the request body for required fields.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '200: Successfully deactivated a license key instance'
- 200 - Successfully update a subscription
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.creem.io
  auth:
    type: apikey
    location: header
    header_name: x-api-key
  headers:
    Content-Type: application/json
source_metadata: null
