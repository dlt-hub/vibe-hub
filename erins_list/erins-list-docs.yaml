resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: incidents
  endpoint:
    path: /api/incidents
    method: GET
    data_selector: records
    params:
      address: some address
      lat: optional
      lng: optional
      radius: '1000'
- name: single_incident
  endpoint:
    path: /api/incidents/:id
    method: GET
    data_selector: record
    params: {}
- name: incidents
  endpoint:
    path: /api/incidents
    method: GET
    data_selector: records
    params:
      address: required
      radius: '1000'
      sort: created
      direction: desc
      since: timestamp
- name: single_incident
  endpoint:
    path: /api/incidents/:id
    method: GET
    data_selector: record
    params:
      id: required
- name: report_incident
  endpoint:
    path: /api/incidents
    method: POST
    data_selector: record
    params:
      address: required
      notes: required
      verified: boolean
      lat: float
      lng: float
      reporter: string
      reporter_email: string
- name: evaluate_address
  endpoint:
    path: /api/evaluate
    method: POST
    data_selector: evaluation
    params:
      address: required
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: incidents
  endpoint:
    path: /api/incidents
    method: GET
    data_selector: records
    params: {}
- name: single_incident
  endpoint:
    path: /api/incidents/:id
    method: GET
    data_selector: record
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: incidents
  endpoint:
    path: /api/incidents
    method: GET
    data_selector: records
    params:
      address: some address
      radius: '1000'
      sort: created
      direction: desc
- name: single_incident
  endpoint:
    path: /api/incidents/:id
    method: GET
    data_selector: record
    params:
      id: required
- name: report_incident
  endpoint:
    path: /api/incidents
    method: POST
    data_selector: record
- name: evaluate_address
  endpoint:
    path: /api/evaluate
    method: POST
    data_selector: evaluation
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: incidents
  endpoint:
    path: /api/incidents
    method: GET
    data_selector: records
    params:
      address: some address
      radius: '1000'
- name: single_incident
  endpoint:
    path: /api/incidents/:id
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: incidents
  endpoint:
    path: /api/incidents
    method: GET
    data_selector: records
    params:
      address: some address
      radius: '1000'
      sort: created
      direction: desc
- name: single_incident
  endpoint:
    path: /api/incidents/:id
    method: GET
    data_selector: records
    params:
      id: required
- name: report_incident
  endpoint:
    path: /api/incidents
    method: POST
    data_selector: records
    params:
      address: required
      notes: required
      verified: optional
      lat: optional
      lng: optional
      reporter: required
      reporter_email: required
- name: evaluate_address
  endpoint:
    path: /api/evaluate
    method: POST
    data_selector: records
    params:
      address: required
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: incidents
  endpoint:
    path: /api/incidents
    method: GET
    data_selector: records
    params:
      address: some address
      radius: '1000'
- name: single_incident
  endpoint:
    path: /api/incidents/:id
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: incidents
  endpoint:
    path: /api/incidents
    method: GET
    data_selector: records
    params:
      address: some address
      radius: '1000'
      sort: created
      direction: desc
- name: single_incident
  endpoint:
    path: /api/incidents/:id
    method: GET
    data_selector: records
    params:
      id: required
- name: report_incident
  endpoint:
    path: /api/incidents
    method: POST
    data_selector: records
    params:
      address: required
      notes: required
      verified: boolean
      lat: float
      lng: float
      reporter: string
      reporter_email: string
- name: evaluate_address
  endpoint:
    path: /api/evaluate
    method: POST
    data_selector: records
    params:
      address: required
notes:
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- API expects an Authorization header with base64 encoded api_key:secret_key.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '400: Bad Request -- Your request is invalid.'
- '401: Unauthorized -- Your API key is wrong.'
- '403: Forbidden -- The kitten requested is hidden for administrators only.'
- '404: Not Found -- The specified kitten could not be found.'
- '405: Method Not Allowed -- You tried to access a kitten with an invalid method.'
- '406: Not Acceptable -- You requested a format that isn''t json.'
- '410: Gone -- The kitten requested has been removed from our servers.'
- '418: I''m a teapot.'
- '429: Too Many Requests -- You''re requesting too many kittens! Slow down!'
- '500: Internal Server Error -- We had a problem with our server. Try again later.'
- '503: Service Unavailable -- We''re temporarily offline for maintenance. Please
  try again later.'
- '401 Unauthorized: Recheck API key or secret key'
- '400 Bad Request: Check required parameters'
- '401 Unauthorized: Recheck API key and secret key.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
client:
  base_url: https://www.erinslist.us
  auth:
    type: apikey
    location: header
    header_name: Authorization
source_metadata: null
