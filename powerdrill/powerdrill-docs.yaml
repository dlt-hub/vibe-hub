resources:
- name: data_report
  endpoint:
    path: /generate/report
    method: POST
    data_selector: report
    params: {}
- name: dataset_upload
  endpoint:
    path: /upload/dataset
    method: POST
    data_selector: uploadStatus
    params: {}
- name: dataset_sharing
  endpoint:
    path: /features/dataset-sharing
    method: GET
    data_selector: datasets
    params: {}
- name: chat_sharing
  endpoint:
    path: /chat/sharing
    method: POST
    data_selector: shared_link
    params: {}
- name: job
  endpoint:
    path: /v1/jobs
    method: POST
    data_selector: data
    params: {}
- name: job
  endpoint:
    path: /v1/jobs
    method: POST
    data_selector: data
    params: {}
- name: trend_data
  endpoint:
    path: /tmp_datasource_cache/code_result/cm37bchx106e301l1v9yf67yc/e24b6a5f-fdb8-48ca-ae35-dc91ac8e8ef7.csv
    method: GET
    data_selector: content
    params: {}
- name: trend_data
  endpoint:
    path: /tmp_datasource_cache/code_result/cm37bchx106e301l1v9yf67yc/e24b6a5f-fdb8-48ca-ae35-dc91ac8e8ef7.csv
    method: GET
    data_selector: data
    params: {}
- name: datasets
  endpoint:
    path: /v1/team/datasets
    method: POST
    data_selector: data
    params: {}
- name: datasources
  endpoint:
    path: /v1/team/datasets/{datasetId}/datasources
    method: POST
    data_selector: data
    params: {}
- name: sessions
  endpoint:
    path: /v1/team/sessions
    method: POST
    data_selector: data
    params: {}
- name: jobs
  endpoint:
    path: /v1/team/jobs
    method: POST
    data_selector: data
    params: {}
- name: datasets
  endpoint:
    path: /v1/team/datasets
    method: POST
    data_selector: data
    params: {}
- name: datasources
  endpoint:
    path: /v1/team/datasets/{datasetId}/datasources
    method: POST
    data_selector: data
    params: {}
- name: sessions
  endpoint:
    path: /v1/team/sessions
    method: POST
    data_selector: data
    params: {}
- name: jobs
  endpoint:
    path: /v1/team/jobs
    method: POST
    data_selector: data
    params: {}
- name: upload_file
  endpoint:
    path: /v1/file/upload_datasource
    method: POST
    data_selector: data.fileKey
- name: create_data_source
  endpoint:
    path: /v1/datasources
    method: POST
    data_selector: data.id
- name: check_data_source_status
  endpoint:
    path: /v1/datasets/{datasetId}/datasources/{datasourceId}
    method: GET
    data_selector: data.status
- name: upload_file
  endpoint:
    path: /v1/file/upload_datasource
    method: POST
    data_selector: data.fileKey
    params: {}
- name: create_data_source
  endpoint:
    path: /v1/datasources
    method: POST
    data_selector: data.id
    params: {}
- name: check_data_source_status
  endpoint:
    path: /v1/datasets/{datasetId}/datasources/{datasourceId}
    method: GET
    data_selector: data.status
    params: {}
- name: dataset
  endpoint:
    path: /api/v1/team/datasets
    method: POST
    data_selector: data
    params: {}
- name: create_dataset
  endpoint:
    path: /team/datasets
    method: POST
    data_selector: data
    params: {}
- name: get_dataset_status
  endpoint:
    path: /api/v1/team/datasets/{datasetId}/status
    method: GET
    data_selector: data
    params: {}
- name: dataset_overview
  endpoint:
    path: /v1/team/datasets/{datasetId}/overview
    method: GET
    data_selector: data
    params:
      datasetId: string
- name: dataset_status
  endpoint:
    path: /api/v1/team/datasets/{datasetId}/status
    method: GET
    data_selector: data
    params:
      datasetId: required
- name: dataset_overview
  endpoint:
    path: /v1/team/datasets/{datasetId}/overview
    method: GET
    data_selector: data
    params: {}
- name: modify_dataset
  endpoint:
    path: /v1/team/datasets/{datasetId}
    method: POST
    data_selector: data
    params: {}
- name: modify_dataset
  endpoint:
    path: /v1/team/datasets/{datasetId}
    method: POST
    data_selector: data
    params:
      userId: required
- name: delete_dataset
  endpoint:
    path: /api/v1/team/datasets/{datasetId}
    method: DELETE
    data_selector: data
    params:
      userId: required
- name: delete_dataset
  endpoint:
    path: /v1/team/datasets/{datasetId}
    method: DELETE
    params:
      userId: required
- name: data_source
  endpoint:
    path: /team/datasets/{datasetId}/datasources
    method: POST
    data_selector: data
    params:
      userId: tmm-cm5m7khoz52zh07n4m7x1ut60
- name: data_source
  endpoint:
    path: /v1/team/datasets/{datasetId}/datasources
    method: POST
    data_selector: data
    params:
      userId: tmm-cm5m7khoz52zh07n4m7x1ut60
- name: data_source
  endpoint:
    path: /v1/team/datasources
    method: POST
    data_selector: data
    params:
      userId: string
- name: data_source
  endpoint:
    path: /v1/team/datasets/{datasetId}/datasources/{datasourceId}
    method: GET
    data_selector: data
    params: {}
- name: data_source
  endpoint:
    path: /team/datasources
    method: POST
    data_selector: data
    params:
      userId: tmm-cm5m7khoz52zh07n4m7x1ut60
- name: data_sources
  endpoint:
    path: /team/datasets/{datasetId}/datasources
    method: GET
    data_selector: records
    params:
      pageNumber: 1
- name: data_source
  endpoint:
    path: /team/datasets/{datasetId}/datasources/{datasourceId}
    method: GET
    data_selector: data
    params: {}
- name: delete_data_source
  endpoint:
    path: /v1/team/datasets/{datasetId}/datasources/{datasourceId}
    method: DELETE
- name: datasources
  endpoint:
    path: /v1/team/datasets/{datasetId}/datasources
    method: GET
    data_selector: records
    params:
      pageNumber: 1
      pageSize: 10
- name: delete_data_source
  endpoint:
    path: /v1/team/datasets/{datasetId}/datasources/{datasourceId}
    method: DELETE
    data_selector: data
    params:
      userId: required
- name: presign_data_source
  endpoint:
    path: /v1/team/datasets/{datasetId}/datasources/{datasourceId}/presign
    method: POST
    data_selector: data
    params:
      expireIn: 600
- name: presign_data_source
  endpoint:
    path: /api/v1/team/datasets/{datasetId}/datasources/{datasourceId}/presign
    method: POST
    data_selector: data
    params:
      expireIn: 600
- name: upload_file
  endpoint:
    path: /api/v1/file/upload_datasource
    method: POST
    data_selector: data.fileKey
    params: {}
- name: upload_file
  endpoint:
    path: /api/v1/file/upload_datasource
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /team/sessions
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /team/sessions
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /v1/team/sessions/{sessionId}
    method: GET
    data_selector: data
    params:
      userId: user_id
- name: session
  endpoint:
    path: /v1/team/sessions/{sessionId}
    method: GET
    data_selector: data
    params:
      userId: your_user_id
- name: job_history
  endpoint:
    path: /api/v1/team/sessions/{sessionId}/history
    method: GET
    data_selector: data.records
    params: {}
- name: job_history
  endpoint:
    path: /api/v1/team/sessions/{sessionId}/history
    method: GET
    data_selector: data.records
- name: job_history
  endpoint:
    path: /team/sessions/{sessionId}/history
    method: GET
    data_selector: data.records
    params:
      pageNumber: 1
      pageSize: 10
      userId: required
- name: job_history
  endpoint:
    path: /v1/team/sessions/{sessionId}/history
    method: GET
    data_selector: data.records
    params:
      pageNumber: 1
      pageSize: 10
      userId: string
- name: sessions
  endpoint:
    path: /team/sessions
    method: GET
    data_selector: data.records
    params:
      pageNumber: 1
      pageSize: 10
- name: sessions
  endpoint:
    path: /v1/team/sessions
    method: GET
    data_selector: data.records
    params:
      pageNumber: 1
      pageSize: 10
- name: modify_session
  endpoint:
    path: /api/v1/team/sessions/{sessionId}
    method: POST
    data_selector: data
    params: {}
- name: modify_session
  endpoint:
    path: /api/v1/team/sessions/{sessionId}
    method: POST
    data_selector: data
    params: {}
- name: delete_session
  endpoint:
    path: /v1/team/sessions/{sessionId}
    method: DELETE
    data_selector: data
- name: delete_session
  endpoint:
    path: /team/sessions/{sessionId}
    method: DELETE
    data_selector: data
    params:
      userId: required
- name: create_job
  endpoint:
    path: /api/v1/team/jobs
    method: POST
    data_selector: data
    params: {}
- name: create_job
  endpoint:
    path: /api/v1/team/jobs
    method: POST
    data_selector: data
    params: {}
- name: job
  endpoint:
    path: /v1/team/jobs
    method: POST
    data_selector: data
    params: {}
- name: jobs
  endpoint:
    path: /team/jobs
    method: POST
    data_selector: data
    params: {}
- name: average_price_per_agency
  endpoint:
    path: /v2/jobs
    method: POST
    data_selector: data
    params: {}
- name: job
  endpoint:
    path: /v2/jobs
    method: POST
    data_selector: data
    params: {}
- name: jobs
  endpoint:
    path: /team/jobs
    method: POST
    data_selector: data
    params:
      session_id: cxxdgegeegeg3433fff
      user_id: tmm-dafasdfasdfasdf
      stream: false
      question: Which travel agency has the highest average booking price?
      dataset_id: cm1gjmg8e0057r3x22v1fdu8m
      datasource_ids:
      - cm1gjmmoo0001h0x24uk1xgu9
      output_language: EN
      job_mode: AUTO
- name: jobs
  endpoint:
    path: /team/jobs
    method: POST
    data_selector: response
    params: {}
- name: average_price_per_agency
  endpoint:
    path: https://static.powerdrill.ai/tmp_datasource_cache/code_result/tmm-cm5ao3yoe00zm01l1u1e7p3pj/f47e6d58-b0f1-405d-a367-d4055aab1188.csv
    method: GET
    data_selector: content
    params: {}
- name: visualization
  endpoint:
    path: https://static.powerdrill.ai/tmp_datasource_cache/code_result/tmm-cm5ao3yoe00zm01l1u1e7p3pj/b185c0f3-a021-4ceb-b317-b391c0e7df28.png
    method: GET
    data_selector: content
    params: {}
- name: average_price_per_agency
  endpoint:
    path: https://static.powerdrill.ai/tmp_datasource_cache/code_result/tmm-cm5ao3yoe00zm01l1u1e7p3pj/f47e6d58-b0f1-405d-a367-d4055aab1188.csv
    method: GET
    data_selector: content
    params: {}
- name: visualization
  endpoint:
    path: https://static.powerdrill.ai/tmp_datasource_cache/code_result/tmm-cm5ao3yoe00zm01l1u1e7p3pj/b185c0f3-a021-4ceb-b317-b391c0e7df28.png
    method: GET
    data_selector: content
    params: {}
- name: datasets
  endpoint:
    path: /v2/team/datasets
    method: POST
    data_selector: data
    params: {}
- name: datasources
  endpoint:
    path: /v2/team/datasets/{id}/datasources
    method: POST
    data_selector: data
    params: {}
- name: sessions
  endpoint:
    path: /v2/team/sessions
    method: POST
    data_selector: data
    params: {}
- name: dataset
  endpoint:
    path: /v2/team/datasets
    method: POST
    data_selector: data
    params: {}
- name: datasource
  endpoint:
    path: /v2/team/datasets/{id}/datasources
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /v2/team/sessions
    method: POST
    data_selector: data
    params: {}
- name: jobs
  endpoint:
    path: /api/v2/team/jobs
    method: POST
    data_selector: ''
    params: {}
- name: job
  endpoint:
    path: /v2/team/jobs
    method: POST
    data_selector: data
    params: {}
- name: summary
  endpoint:
    path: /services/data/vXX.X/sobjects/Summary
    method: GET
    data_selector: records
    params: {}
- name: summary
  endpoint:
    path: /services/data/vXX.X/sobjects/Summary
    method: GET
    data_selector: content
    params: {}
- name: dataset_status
  endpoint:
    path: /api/v2/team/datasets/{id}/status
    method: GET
    data_selector: data
    params: {}
- name: dataset_status
  endpoint:
    path: /v2/team/datasets/{id}/status
    method: GET
    data_selector: data
    params: {}
- name: dataset
  endpoint:
    path: /v2/team/datasets
    method: POST
    data_selector: data
    params: {}
- name: create_dataset
  endpoint:
    path: /api/v2/team/datasets
    method: POST
    data_selector: data
    params: {}
- name: status_summary
  endpoint:
    path: /api/v2/team/datasets/{id}/status
    method: GET
    data_selector: data
    params:
      user_id: tmm-dafasdfasdfasdf
- name: status_summary
  endpoint:
    path: /v2/team/datasets/{id}/status
    method: GET
    data_selector: data
    params:
      user_id: tmm-dafasdfasdfasdf
- name: dataset_overview
  endpoint:
    path: /v2/team/datasets/{id}/overview
    method: GET
    data_selector: data
    params:
      user_id: ''
- name: get_dataset_overview
  endpoint:
    path: /v2/team/datasets/{id}/overview
    method: GET
- name: datasets
  endpoint:
    path: /v2/team/datasets
    method: GET
    data_selector: records
    params:
      incremental: user_id
- name: datasets
  endpoint:
    path: /api/v2/team/datasets
    method: GET
    data_selector: records
    params:
      page_number: 1
      page_size: 10
- name: modify_dataset
  endpoint:
    path: /api/v2/team/datasets/{id}
    method: POST
    data_selector: data
    params: {}
- name: modify_dataset
  endpoint:
    path: /v2/team/datasets/{id}
    method: POST
- name: delete_dataset
  endpoint:
    path: /v2/team/datasets/{id}
    method: DELETE
    data_selector: data
    params:
      user_id: tmm-dafasdfasdfasdf
- name: delete_dataset
  endpoint:
    path: /api/v2/team/datasets/{id}
    method: DELETE
    data_selector: data
    params:
      user_id: tmm-dafasdfasdfasdf
- name: data_source
  endpoint:
    path: /team/datasets/{id}/datasources
    method: POST
    data_selector: data
    params: {}
- name: data_source
  endpoint:
    path: /v2/team/datasets/{id}/datasources
    method: POST
    data_selector: data
    params: {}
- name: data_source
  endpoint:
    path: /team/datasources
    method: POST
    data_selector: data
    params: {}
- name: data_source
  endpoint:
    path: /team/datasources
    method: POST
    data_selector: data
    params: {}
- name: data_source
  endpoint:
    path: /v2/team/datasets/{dataset_id}/datasources/{datasource_id}
    method: GET
    data_selector: data
    params: {}
- name: data_source
  endpoint:
    path: /v2/team/datasets/{dataset_id}/datasources/{datasource_id}
    method: GET
    data_selector: data
    params:
      user_id: user_id
- name: data_sources
  endpoint:
    path: /v2/team/datasets/{id}/datasources
    method: GET
    data_selector: data.records
    params:
      page_number: 1
      page_size: 10
- name: data_sources
  endpoint:
    path: /v2/team/datasets/{id}/datasources
    method: GET
    data_selector: records
    params:
      page_number: 1
- name: delete_data_source
  endpoint:
    path: /v2/team/datasets/{dataset_id}/datasources/{datasource_id}
    method: DELETE
    data_selector: data
    params:
      user_id: tmm-dafasdfasdfasdf
- name: delete_data_source
  endpoint:
    path: /team/datasets/{dataset_id}/datasources/{datasource_id}
    method: DELETE
    data_selector: data
    params:
      user_id: tmm-dafasdfasdfasdf
- name: presign_data_source
  endpoint:
    path: /team/datasets/{dataset_id}/datasources/{datasource_id}/presign
    method: POST
    data_selector: data
    params:
      expires_in: 600
      user_id: string
- name: presign_data_source
  endpoint:
    path: /v2/team/datasets/{dataset_id}/datasources/{datasource_id}/presign
    method: POST
    data_selector: data
    params:
      expires_in: 600
      user_id: string
- name: upload_local_file
  endpoint:
    path: /team/file/upload-datasource
    method: POST
    data_selector: data
    params: {}
- name: upload_local_file
  endpoint:
    path: /api/v2/team/file/upload-datasource
    method: POST
    data_selector: data
    params: {}
- name: initiate_multipart_upload
  endpoint:
    path: /team/file/init-multipart-upload
    method: POST
    data_selector: data
    params: {}
- name: initiate_multipart_upload
  endpoint:
    path: /api/v2/team/file/init-multipart-upload
    method: POST
    data_selector: data
    params: {}
- name: complete_multipart_upload
  endpoint:
    path: /api/v2/team/file/complete-multipart-upload
    method: POST
    data_selector: data
    params: {}
- name: complete_multipart_upload
  endpoint:
    path: /api/v2/team/file/complete-multipart-upload
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /team/sessions
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /v2/team/sessions
    method: POST
    data_selector: data
    params: {}
- name: session
  endpoint:
    path: /v2/team/sessions/{id}
    method: GET
    data_selector: data
    params:
      user_id: tmm-dafasdfasdfasdf
- name: session
  endpoint:
    path: /v2/team/sessions/{id}
    method: GET
    data_selector: data
    params:
      user_id: ''
- name: job_history
  endpoint:
    path: /api-reference/v2/get-job-history
    method: GET
- name: job_history
  endpoint:
    path: /api-reference/v2/get-job-history
    method: GET
- name: job_history
  endpoint:
    path: /team/sessions/{id}/history
    method: GET
    data_selector: data.records
    params: {}
- name: job_history
  endpoint:
    path: /team/sessions/{id}/history
    method: GET
    data_selector: data.records
- name: sessions
  endpoint:
    path: /v2/team/sessions
    method: GET
    data_selector: data.records
    params:
      page_number: 1
      page_size: 10
- name: sessions
  endpoint:
    path: /v2/team/sessions
    method: GET
    data_selector: data.records
    params:
      page_number: 1
      page_size: 10
      user_id: string
- name: sessions
  endpoint:
    path: /v2/team/sessions
    method: GET
    data_selector: records
    params:
      page_number: 1
      page_size: 10
- name: sessions
  endpoint:
    path: /api/v2/team/sessions
    method: GET
    data_selector: records
    params:
      page_number: 1
      page_size: 10
- name: modify_session
  endpoint:
    path: /team/sessions/{id}
    method: POST
    data_selector: data
    params: {}
- name: modify_session
  endpoint:
    path: /api/v2/team/sessions/{id}
    method: POST
    data_selector: data
    params: {}
- name: delete_session
  endpoint:
    path: /api/v2/team/sessions/{id}
    method: DELETE
    data_selector: data
    params:
      user_id: tmm-dafasdfasdfasdf
- name: delete_session
  endpoint:
    path: /api/v2/team/sessions/{id}
    method: DELETE
    data_selector: data
    params: {}
- name: jobs
  endpoint:
    path: /api/v2/team/jobs
    method: POST
    data_selector: data
    params: {}
- name: job
  endpoint:
    path: /api/v2/team/jobs
    method: POST
    data_selector: data
    params: {}
- name: jobs
  endpoint:
    path: /v2/team/jobs
    method: POST
    data_selector: data
    params: {}
- name: jobs
  endpoint:
    path: /v2/team/jobs
    method: POST
    data_selector: data
    params: {}
notes:
- 'Powerdrill supports two types of SQL databases: MySQL and PostgreSQL.'
- The platform prioritizes the security of your data and privacy above all else.
- The AI Report Generator supports CSV, TSV, and Excel file formats.
- Invitees can only use the shared dataset in Powerdrill Apps for specific tasks.
- Once a dataset is deleted, it becomes unavailable to all invitees.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- The Company does not guarantee permanent accessibility of the Service or the Website.
- Agreeing to these Regulations confirms that Users acknowledge that the Service may
  not be permanently reliable.
- Users acknowledge that the Service may not be permanently reliable.
- Your API key is a secret. Do not share it with others or expose it in browsers,
  apps, or other client-side code.
- Powerdrill Enterprise Open API supports streaming responses to clients, enabling
  partial results for specific requests.
- If streaming is disabled, Powerdrill returns the response only after the entire
  response is ready.
- Streaming is disabled, response is only returned after the entire response is ready.
- Data source contains historical data on natural disasters and their fatalities.
- Data is aggregated by decade.
- Files expire at 2024-11-21T09:56:34.290544Z.
- Replace $PD_API_KEY with the API key you’ve obtained in Step 1.
- Set the x-pd-api-agent-id header to GENERAL.
- Replace the sessionId value with the ID of the session you’ve created in Step 3.
- Set the datasetId to the ID of the dataset obtained in Step 2.
- Set stream to true or false in the request to control streaming responses.
- All requests must include an x-pd-api-key header with your API key.
- Obtains the basic information about the dataset, including the keywords, description,
  and pre-generated questions.
- You can have up to 150 sessions simultaneously.
- Your team can have up to 150 sessions simultaneously.
- The sales difference is 0.0, indicating no impact on overall sales trends.
- API key required in header for authentication.
- Currently, only general jobs are available, so make sure the x-pd-api-agent-id header
  is set to GENERAL.
- The content of each response block varies with the block content type.
- The value of `content` in each response block varies with the block content type.
- 'Visual Confirmation: The bar chart confirms that Triprobotics Inc. leads with the
  highest average booking price compared to other agencies.'
- All subscription-related operations are managed in your Admin console.
- Ensure that the number of subscriptions matches the number of users in your team.
- Make sure data sources are fully synchronized before executing data jobs.
- The dataset name can be up to 128 characters in length.
- The dataset description can be up to 128 characters in length.
- Only datasets created within the same project as your API key will be listed.
- name and description cannot be both blank
- x-pd-api-key is required in the header for authorization.
- You can only delete the dataset that you created.
- 'A data source can be in one of the following formats: .csv, .tsv, .md, .mdx, .json,
  .txt, .pdf, .pptx, .docx, .xls, or .xlsx.'
- Creates a data source without specifying a dataset.
- Once deleted, the data source cannot be recovered.
- You can only delete data sources from datasets you have created.
- Presigned URLs have an expiration period.
- 'Only files in the following formats are supported: .csv, .tsv, .md, .mdx, .json,
  .txt, .pdf, .pptx, .docx, .xls, or .xlsx.'
- Only files in .csv, .tsv, .md, .mdx, .json, .txt, .pdf, .pptx, .docx, .xls, or .xlsx
  formats are supported.
- When calling this endpoint, you must provide a full list of uploaded parts, including
  their sequential numbers and corresponding ETag values.
- Must provide a full list of uploaded parts, including their sequential numbers and
  corresponding ETag values.
- Each user can have up to 150 active sessions simultaneously.
- The session name can be up to 128 characters in length.
- The maximum number of recent jobs retained as context for the next job is between
  0 to 10.
- Session name can be up to 128 characters in length.
- User ID uniquely identifies you within your team.
errors:
- '400 Bad Request: Invalid parameters provided.'
- '401 Unauthorized: Invalid API key.'
- '402 Request Failed: The parameters were valid, but the request couldn’t be completed.'
- '403 Forbidden: The API key lacks the necessary permissions to perform this action.'
- '404 Not Found: The requested resource doesn’t exist.'
- '409 Conflict: The request conflicts with another.'
- '429 Too Many Requests: Too many requests sent in a short time. We recommend implementing
  exponential backoff.'
- '500, 502, 503, 504 Server Errors: Something went wrong on Powerdrill’s end.'
- '409 Conflict: The request conflicts with another (for example, using the same idempotent
  key).'
- '500, 502, 503, 504 Server Errors: Something went wrong on Powerdrill’s end (rare).'
- 'authentication_error: An authentication error indicates your API key is invalid,
  expired, or revoked.'
- 'invalid_request_error: Invalid request errors arise when your request has invalid
  parameters.'
- 'internal_server_error: An internal server error indicates something went wrong
  on our end while processing your request.'
- 'idempotency_error: Idempotency errors occur when the same Idempotency-Key is used
  for a request with a different API endpoint or set of parameters than the original
  request.'
- 'rate_limit_error: A rate limit error indicates that your team has reached the assigned
  limit of 20 API requests per second.'
- 'permission_error: You are not authorized to do this operation.'
- '100: Bad request'
- '201: Request frequency limit'
- '9999: Internal error'
- '100001: Invalid operation'
- '100: Bad request.'
- '201: Request frequency limit.'
- '9999: Internal error.'
- '100001: Invalid operation.'
- '200: Success'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key validity'
- 400 Bad Request
- 403 Forbidden
- 500 Internal Server Error
- '1003: Authentication failed. Please check if the API key is correct.'
- '210020: An error occurred during job execution. Please try again.'
- '210021: Job quota exceeded. Please review your usage limits.'
- '210022: The question is too long. Please shorten it and try again.'
- '210023: The selected data sources are not yet ready. Only data sources in the Synched
  state are available for use.'
- '210025: Too many data sources selected. You can select up to 1,000 data sources.'
- 'Invalid API key: Check your API key and try again'
- '0: indicates that the operation is successful.'
- '0: Operation is successful'
- 'Non-zero: Operation fails. Refer to Error Codes for troubleshooting.'
- '0: indicates that the operation is successful. Otherwise, the operation fails.'
- '0: Status code indicates that the operation is successful. Otherwise, the operation
  fails.'
- '0: Operation successful'
- 'Error Codes: Refer to Error Codes documentation'
- '0: Operation successful, otherwise operation fails'
- '0: Indicates that the operation is successful. Otherwise, the operation fails.'
- 0 indicates that the operation is successful. Otherwise, the operation fails.
- '0: Indicates success, other codes indicate failure.'
- '200: Status code indicates that the operation is successful. Otherwise, the operation
  fails.'
- Other codes indicate that the operation fails
- '0: Operation is successful. Otherwise, the operation fails.'
- '0: Operation is successful.'
- Other codes indicate that the operation fails.
- 'Other: Operation fails'
- '0: Indicates that the operation is successful.'
- Non-zero code indicates that the operation fails.
- '200: Status code. 0 indicates that the operation is successful.'
- 'Non-zero: Operation fails'
- '0: Operation successful.'
- 'Non-zero code: Operation failed. Refer to Error Codes for troubleshooting.'
- 'Error Codes: Refer to Error Codes documentation for troubleshooting'
- '0: Operation successful, otherwise the operation fails.'
- '0: Operation successful, otherwise operation fails.'
- 'Non-zero code: Operation failed'
- '1: Operation failed'
- 'Non-zero status code: Operation failed'
- '200: Successful operation.'
- '0: Operation failed.'
- '404 Not Found: Check the session ID provided'
- '401 Unauthorized: Recheck API key'
- '200'
- '400'
- '403'
- '500'
- '400: Bad Request'
- '403: Forbidden'
- '500: Internal Server Error'
- '400 Bad Request: Check request parameters and body.'
- '403 Forbidden: Ensure the API key is valid and has the necessary permissions.'
- '500 Internal Server Error: Try again later or contact support.'
auth_info:
  mentioned_objects:
  - x-pd-api-key
client:
  base_url: https://ai.data.cloud
  auth:
    type: apikey
    location: header
    header_name: x-pd-api-key
source_metadata: null
