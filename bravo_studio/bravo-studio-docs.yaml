resources:
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: Resorts-list
  endpoint:
    path: /v0/appFJI5Q2hVrN3D28/shro8btCyXld3G15C
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: app_projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /users
    method: GET
- name: login
  endpoint:
    path: /login
    method: POST
- name: app
  endpoint:
    path: /services/data/vXX.X/sobjects/App
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: invitees
  endpoint:
    path: /api-bridge/invitees
    method: GET
    data_selector: invitee_list
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: slider_default
  endpoint:
    path: '[container:slider:default]'
    method: GET
- name: slider_crossfade
  endpoint:
    path: '[container:slider:crossfade]'
    method: GET
- name: slider_cube
  endpoint:
    path: '[container:slider:cube]'
    method: GET
- name: slider_pager
  endpoint:
    path: '[container:slider:pager]'
    method: GET
- name: slider_parallax
  endpoint:
    path: '[container:slider:parallax]'
    method: GET
- name: slider_rotate
  endpoint:
    path: '[container:slider:rotate]'
    method: GET
- name: slider_zoom
  endpoint:
    path: '[container:slider:zoom]'
    method: GET
- name: slider_horizontal
  endpoint:
    path: '[container:slider:horizontal]'
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tag
  endpoint:
    path: /layer
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: intro
  endpoint:
    path: /intro
    method: GET
    data_selector: intro_data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: custom_loading
  endpoint:
    path: /bravo-tags/loading-experience/state-custom-loading-page
    method: GET
    data_selector: tags
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: form_input
  endpoint:
    path: /bravo-tags/form-and-input-fields
    method: GET
- name: toggle_password
  endpoint:
    path: '[action:toggle-password]'
    method: GET
    data_selector: action
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: tag
  endpoint:
    path: /bravo-tags/form-and-input-fields/input-time
    method: GET
    data_selector: components
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: input-select
  endpoint:
    path: /connect-api/set-up-api-requests/creating-an-api-collection/airtable/data-library-connect-to-any-api-post-request
    method: POST
- name: slider_control
  endpoint:
    path: /component/input-slider
    method: POST
    data_selector: slider
    params: {}
- name: single
  endpoint:
    path: '[component:input-calendar:single]'
    method: GET
- name: multiple
  endpoint:
    path: '[component:input-calendar:multiple]'
    method: GET
- name: range
  endpoint:
    path: '[component:input-calendar:range]'
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: video
  endpoint:
    path: /bravo-tags/mobile-actions/how-to-use-video-components-in-your-apps
    method: GET
    data_selector: tag
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: web_view
  endpoint:
    path: /api/webview
    method: GET
    data_selector: data
    params: {}
- name: lottie_animated_component
  endpoint:
    path: /v1/lottie-animated
    method: GET
    data_selector: data
- name: zoomable_image
  endpoint:
    path: /bravo-tags/components/component-imagezoom
    method: POST
    data_selector: zoomable_property
    params: {}
- name: toggle_component
  endpoint:
    path: /data-binding/data-binding-types/data-binding-add-remote-actions-to-your-ui
    method: GET
    data_selector: components
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: haptic_feedback
  endpoint:
    path: /haptic/feedback
    method: POST
    data_selector: tags
    params: {}
- name: progress_bar
  endpoint:
    path: /connect-api/set-up-api-requests/creating-an-api-collection/airtable/set-up-an-api-get-request-for-list-page-airtable
    method: GET
- name: status_bar_dark
  endpoint:
    path: /statusbar/dark
    method: GET
    data_selector: status
    params: {}
- name: status_bar_light
  endpoint:
    path: /statusbar/light
    method: GET
    data_selector: status
    params: {}
- name: mobile_actions
  endpoint:
    path: /bravo-tags/mobile-actions
    method: GET
    data_selector: actions
- name: share_url
  endpoint:
    path: /action/share
    method: GET
    data_selector: url
- name: open_url
  endpoint:
    path: /action/openurl
    method: GET
    data_selector: url
- name: open_email
  endpoint:
    path: /action/email
    method: GET
    data_selector: email
- name: open_phone
  endpoint:
    path: /action/phone
    method: GET
    data_selector: phone
- name: open_pdf
  endpoint:
    path: /action/openpdf
    method: GET
    data_selector: pdf_link
- name: record_audio
  endpoint:
    path: /record/audio
    method: POST
    data_selector: recording
    params: {}
- name: play_audio
  endpoint:
    path: /play/audio
    method: GET
    data_selector: playback
    params: {}
- name: delete_audio
  endpoint:
    path: /delete/audio
    method: DELETE
    data_selector: deletion
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: quote
  endpoint:
    path: /quote
    method: GET
    data_selector: data
    params:
      symbol: TSLA
      token: brhpek7rh5re1lpb2gl0
- name: httpbin_location
  endpoint:
    path: /get
    method: GET
    params:
      lat: ${device.latitude}
      long: ${device.longitude}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: users
  endpoint:
    path: /data/users
    method: GET
    data_selector: data
    params: {}
- name: posts
  endpoint:
    path: /data/posts
    method: GET
    data_selector: data
    params: {}
- name: signup
  endpoint:
    path: /signup
    method: POST
    data_selector: null
    params:
      email: noone@none.com
      password: noone
- name: login
  endpoint:
    path: /login
    method: POST
    data_selector: null
    params:
      email: noone@none.com
      password: noone
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: assistant_get_url
  endpoint:
    path: /assistant/get_url
    method: GET
    data_selector: data
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: api_endpoint_name
  endpoint:
    path: /api/endpoint/path
    method: GET
    data_selector: data
    params: {}
- name: deep_links
  endpoint:
    path: /integrations/deep-links
    method: POST
    data_selector: deep_link
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: notifications
  endpoint:
    path: /api/v1/notifications
    method: POST
    data_selector: response
    params: {}
- name: Firebase Config for iOS Bravo Vision
  endpoint:
    path: /upload/firebase/config/ios/vision
    method: POST
    data_selector: config
    params: {}
- name: Firebase Config for Android Bravo Vision
  endpoint:
    path: /upload/firebase/config/android/vision
    method: POST
    data_selector: config
    params: {}
- name: Firebase Config for iOS Published App
  endpoint:
    path: /upload/firebase/config/ios/published
    method: POST
    data_selector: config
    params: {}
- name: Firebase Config for Android Published App
  endpoint:
    path: /upload/firebase/config/android/published
    method: POST
    data_selector: config
    params: {}
- name: auth_me
  endpoint:
    path: /auth/me
    method: GET
- name: login
  endpoint:
    path: /login
    method: POST
    data_selector: user_token
- name: signup
  endpoint:
    path: /signup
    method: POST
    data_selector: user_token
- name: user_info
  endpoint:
    path: /user_info
    method: GET
    data_selector: user_id
- name: login
  endpoint:
    path: /login
    method: POST
    data_selector: accessToken
    params: {}
- name: signup
  endpoint:
    path: /signup
    method: POST
    data_selector: accessToken
    params: {}
- name: user_info
  endpoint:
    path: /user/info
    method: GET
    data_selector: user
    params:
      _authorization: accessToken
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: dynamic_text
  endpoint:
    path: /v0/base_id/Places-${device.lang}/
    method: GET
- name: dynamic_text_journal
  endpoint:
    path: /v0/base_id/Journal-${device.lang}/
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: sites
  endpoint:
    path: /sites
    method: GET
    data_selector: sites
    params: {}
- name: site
  endpoint:
    path: /sites/{siteId}
    method: GET
    data_selector: site
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: nfc_action
  endpoint:
    path: /nfc/action
    method: POST
    data_selector: nfcResult
    params: {}
- name: ad_banner
  endpoint:
    path: /admob/ad_banner
    method: GET
    data_selector: ads
    params: {}
- name: interstitial_ad
  endpoint:
    path: /admob/interstitial_ad
    method: GET
    data_selector: ads
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: app
  endpoint:
    path: /v1/apps
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: app
  endpoint:
    path: /v1/apps
    method: GET
    data_selector: data
    params:
      incremental: updated_at
- name: app
  endpoint:
    path: /v1/apps
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: subscription_plans
  endpoint:
    path: /pricing
    method: GET
    data_selector: plans
- name: app_addons
  endpoint:
    path: /add-ons
    method: GET
    data_selector: addons
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: app_allowance
  endpoint:
    path: /good-to-know/billing/app-allowance
    method: GET
    data_selector: allowances
    params: {}
- name: invoices
  endpoint:
    path: /services/data/vXX.X/sobjects/Invoices
    method: GET
    data_selector: records
    params: {}
- name: payment_method
  endpoint:
    path: /services/data/vXX.X/sobjects/PaymentMethod
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
notes:
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Uses OAuth2 for authentication as configured in the application settings.
- Bravo is great for creating an app when you already have a website.
- Create a Personal access token in Airtable with data.records:read and data.records:write
  scopes.
- Some objects like Contact may return nulls in deeply nested fields
- Setup requires creating an app in the Bravo Studio dashboard.
- Deleting a project is permanent! There's no turning back!
- This is a premium feature available in Solo or Team plan
- Uses OAuth2 with refresh token — requires setup of connected app in Bravo Studio
- Every app screen in your design file should be organized into the 3 levels described
  below.
- If you don't have this hierarchy, certain elements may look different or not show
  up in your app project.
- Uses OAuth2 for authentication
- Remember not to place the starting flow of the prototyping in the tab menu frame.
- The refresh:pull tag is currently not supported within a Tabs Container on Android
  devices.
- The empty state page shows a special page when no data is available.
- Create a special page that will be displayed when an API error happens in a specific
  app page.
- Error state and Empty pages can be only applied to Content binding.
- Only the [container:slider:horizontal] allows for slides that are smaller than the
  width of the screen.
- You cannot use the [flexo] tag in a slider, as all slides need to have the same
  fixed size.
- Requires setup of connected app in api
- The [preload] tag is designed to improve asset loading by including them in the
  App bundle, reducing the occurrence of loading spinners and provides a smoother
  user experience.
- This feature is supported only in final apps and cannot be tested on Bravo Vision.
- Use it specifically for assets that stay permanent in the app and don't change too
  often, like menu icons and the search icon.
- Keep in mind that including these assets in the app bundle will increase its size,
  so it's advisable to use this feature occasionally.
- All the form inputs need to be in the same app screen, together with the submit
  button.
- Uses OAuth2
- The [component:input-select] component does not support the [:required] attribute
  and requires an option selection by default.
- Some objects may return nulls in deeply nested fields
- Minimum height of 32px recommended for the slider control.
- A GIF will replace the content of the rectangle layer where the tag is placed. Supports
  URL ending in .gif.
- The [component:svg] tag functions by treating all elements under it as a single
  and unique element, hence it cannot be bounded.
- This approach aligns Bravo more closely with Figma.
- Additionally, it results in performance optimization, particularly on mobile platforms,
  as only a single element requires rendering rather than multiple entities.
- The [component:svg] SVGs/vectors are 'fit' to container by default, as they are
  normally used for icons.
- Add the [shape:fill] tag and the SVG will be 'fill' to container, which is useful
  for backgrounds.
- Requires setup of connected app in Bravo Studio
- WebView allows a web view embedded in a mobile app to interact with the app by exchanging
  variables and triggering actions.
- Ensure correct setup of OAuth for authentication
- API usage subject to rate limits
- Features like favorites/like buttons aren't supported with Lottie animations at
  the moment.
- This feature is supported only on Figma design files.
- It will be supported on Adobe XD in the future.
- 'Create two components: active and default.'
- Use Figma variants or Bravo tags for design.
- Allows getting your phone to vibrate with haptic feedback
- 'There are 3 vibration levels: light, medium, and heavy'
- 'Formats supported by Bravo: ''code128'', ''code39'', ''code93'', ''dataMatrix'',
  ''ean13'', ''ean8'', ''itf14'', ''pdf417'', ''qr'', ''upce''.'
- The search won't happen over the items that haven't been loaded yet in the app screen.
- Implement a backend search so the search happens over the whole database.
- Allowing location access is necessary to populate the ${device.latitude} and ${device.longitude}
  with user location data.
- Make sure you only create one app icon in your design file.
- Make sure you only create one splash screen in your design file.
- Requires setup of connected app in Xano
- Ensure to set up your API key in the Backendless console
- Pagination is handled through page parameters
- The login and signup APIs are now ready to be used for your Bubble app.
- Check the spelling of the request URL and make sure it's correct.
- Only information returned by the remote action can be used in a conditional action.
- Data with a wildcard in the path (e.g. .data[]) will not be usable by the conditional
  action.
- Firebase Dynamic Links are now deprecated. We have implemented an alternative using
  https://dynalinks.app/ which works in a very similar way.
- Make sure to set up before generating the app bundles (IPA / AAB) and making your
  app public.
- Ensure to follow OneSignal API documentation for specific endpoint usage.
- Disabling notifications cannot be done directly from the app. This action needs
  to be handled by users through their device settings.
- In order to unlock the most advanced notifications features OneSignal offers (such
  as scheduling and API access), you'll need to create a OneSignal account.
- However, this is optional - you can also use the default Bravo account for OneSignal.
- You need to create new Firebase configuration files with the final bundle ID and
  package name before publishing.
- Both Firebase and OAuth 2.0 support token refresh, which will allow the app users
  to stay logged in for a longer time. Therefore, those two methods are recommended
  when possible.
- Ensure to include a valid token in the headers for all authenticated requests.
- Stripe payments are not available on Android if your app is targeted for children.
- This feature is available for the Advanced and Business App plans.
- Analytics can't be tested on Bravo Vision.
- Ensure that texts in different languages are already stored in your database.
- In case a device language is not defined on your backend, the request will throw
  an API error like 400 or 404.
- Webflow generates one API per site, consider authenticating each integration with
  separate access tokens if you want multiple integrations.
- NFC works on final apps.
- To test in the final app, you will need to ask for a build and install it.
- Only supports banner or interstitial ads at the moment.
- Ensure proper authentication setup for integration.
- Some endpoints may return nulls in deeply nested fields
- Bravo cannot guarantee your app will be accepted by the app stores if they detect
  anything that goes against their guidelines.
- We recommend that you look over the app guidelines before submitting your app (or
  after you have been rejected).
- In case your app is rejected due to 'Guideline 5.1.1 - Legal - Privacy - Data Collection
  and Storage', ensure that you provide account-specific functionality when you require
  user login before using the app.
- Apple does not allow selling digital goods without using its in-app purchase platform.
- You cannot change the functionality of the app after it has been reviewed. This
  will also be a cause for rejection.
- In case Apple asks to enable 'Sign in with Apple', you will need to add it to your
  design, generate a new build and submit again to the Apple store.
- Ensure OAuth2 credentials are set up correctly.
- You can't change this primary login.
- You can only connect one Figma account, as this will be the one used by Bravo to
  get the Figma design files.
- Uses OAuth2 with refresh token — requires setup of connected app in Bravo
- Some plans may have specific features and limitations
- The add-ons are currently not supported if you have subscribed to Bravo Solo with
  Apple subscription on your iOS device.
- API requires setup of connected app in Bravo Studio
- We are not able to amend an invoice that has already been issued.
- You can edit your payment details on the Billing page of your Bravo account.
- Currently, the limit per request is 100 items.
- We have a timeout for GET requests at 3 seconds and for non-GET requests of 10 seconds.
- Most of the changes won’t require the users to update to a new version of the app.
errors:
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '400 Bad Request: Check parameters and request format'
- '401 Unauthorized: Validate authentication credentials'
- '429 Too Many Requests: Throttle API calls to comply with rate limits'
- Error code will depend on the API you're using if location access is denied.
- 'INVALID_APP_ID: Check your application ID'
- 'UNAUTHORIZED: Verify your API key and authentication'
- '200 - OK: Successful response'
- '4XX: Check the HTTP response body for useful information'
- '500: Check the spelling of the request URL'
- 422 Could not send the push notification. Please reload the page and try again.
- '403 error: Check the _authorization value for a valid token.'
- '400 Bad Request: Device language not defined on the backend.'
- '404 Not Found: Requested language table does not exist.'
- '401 Unauthorized: Verify your credentials.'
- '429 Too Many Requests: Slow down your requests.'
- '401 Unauthorized: Check client_id and client_secret.'
- '403 Forbidden: Ensure you have permission to access this resource.'
- 'Expired token: You may be using an expired login code. Request a new one from the
  login page and make sure you are using the most recent one if your email client
  creates a thread of them.'
- 'Invalid token, expiration time claim error in the ID token: Check if you had manually
  adjusted your computer''s clock for a timezone offset. If this is the case, you
  need to set it to the correct timezone.'
- '400: Bad Request'
- '401: Authentication Required'
- '403: Forbidden'
- '404: Not Found'
- '408: Request timeout'
- '409: Conflict'
- '422: Unprocessable Entity'
- '429: Too Many Requests'
- '500: Internal Error'
- '502: Bad Gateway'
- '503: Service Unreachable'
- '400: Bad Request: The API didn''t accept the request as valid. This is usually
  because data is missing or not formatted correctly.'
- '401: Authentication Required: APIs often require an API key along with the request
  in order for you access to the data.'
- '403: Forbidden: It''s forbidden to access the resources in that request URL.'
- '404: Not Found: The requested API couldn''t find anything at that request URL.'
- '408: Request timeout: The request wasn''t processed by the server within a established
  time period.'
- '409: Conflict: The API you''ve requested has encountered a conflict with that request
  message.'
- '422: Unprocessable Entity: The API doesn''t accept the data you''ve provided in
  the request as valid.'
- '429: Too Many Requests: This error indicates that the client has surpassed the
  server''s rate limits.'
- '500: Internal Error: The API you''ve requested has encountered some kind of internal
  error.'
- '502: Bad Gateway: This error is similar to 500, and due to an internal error in
  the API server.'
- '503: Service Unreachable: This error is similar to 500 and 502, and due to an internal
  error in the API server.'
- 'Invalid mobile provision file: missing com.apple.developer.associated-domains properties'
- Contact billing@bravostudio.app for more information.
- If your credit card was declined, it’s normally done with your bank’s automated
  fraud systems.
- You will receive a notification email if your card payment has failed.
auth_info:
  mentioned_objects:
  - Personal access token
  - OauthToken
  - AuthProvider
  - NamedCredential
  - User
  - Role
  - user.access_token
  - OAuthToken
client:
  base_url: https://docs.bravostudio.app
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.bravostudio.app/token
    client_id: '{{ dlt.secrets[''bravo_client_id''] }}'
    client_secret: '{{ dlt.secrets[''bravo_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''bravo_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
