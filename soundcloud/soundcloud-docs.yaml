resources:
- name: tracks
  endpoint:
    path: /tracks
    method: POST
    data_selector: tracks
    params: {}
- name: playlists
  endpoint:
    path: /playlists
    method: POST
    data_selector: playlists
    params: {}
- name: comments
  endpoint:
    path: /tracks/:track_id/comments
    method: POST
    data_selector: comments
    params: {}
- name: tracks
  endpoint:
    path: /tracks
    method: POST
    data_selector: null
    params: {}
- name: user_profile
  endpoint:
    path: /me
    method: GET
    data_selector: null
    params: {}
- name: user
  endpoint:
    path: /me
    method: GET
    data_selector: user
    params: {}
- name: tracks
  endpoint:
    path: /tracks
    method: GET
    data_selector: tracks
    params: {}
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: playlists
    params: {}
- name: playlists
  endpoint:
    path: /me/playlists
    method: GET
    data_selector: playlists
    params:
      show_tracks: 'false'
      limit: 25
- name: resolve
  endpoint:
    path: /resolve
    method: GET
    data_selector: resource
    params:
      url: https://soundcloud.com/PERMALINK
- name: user
  endpoint:
    path: /users/INVALID_ID
    method: GET
    data_selector: user
    params: {}
- name: tracks
  endpoint:
    path: /tracks
    method: POST
    data_selector: null
    params: {}
- name: authenticated_user
  endpoint:
    path: /me
    method: GET
    data_selector: null
    params: {}
- name: user_playlists
  endpoint:
    path: /me/playlists
    method: GET
    data_selector: playlists
    params:
      linked_partitioning: 'true'
      limit: 25
- name: resolve
  endpoint:
    path: /resolve
    method: GET
    data_selector: resource
    params: {}
- name: me
  endpoint:
    path: /me
    method: GET
    data_selector: null
    params: {}
- name: tracks
  endpoint:
    path: /tracks
    method: GET
    data_selector: null
    params: {}
- name: playlists
  endpoint:
    path: /playlists
    method: GET
    data_selector: null
    params: {}
- name: tracks
  endpoint:
    path: /tracks
    method: POST
    data_selector: null
    params: {}
- name: playlists
  endpoint:
    path: /playlists
    method: POST
    data_selector: null
    params: {}
- name: comments
  endpoint:
    path: /tracks/:track_id/comments
    method: POST
    data_selector: null
    params: {}
- name: user
  endpoint:
    path: /me
    method: GET
    data_selector: null
    params: {}
- name: oembed
  endpoint:
    path: ''
    method: GET
    data_selector: ''
    params:
      url: ''
      format: json
      maxwidth: 100%
      maxheight: '166'
      auto_play: false
      show_comments: true
- name: widget_methods
  endpoint:
    path: /api/widget/methods
    method: GET
- name: widget_events
  endpoint:
    path: /api/widget/events
    method: GET
notes:
- PKCE is required for OAuth 2.1 integration.
- Rate limiting applies to token requests via Client Credentials Flow.
- PKCE is now required in order to securely exchange the auth code.
- Currently, all clients are treated as confidential rather than public, meaning that
  a secret is required to obtain a token.
- PKCE is required for secure code exchange.
- Requests without Authorization header will be rejected with a 401 Unauthorized error.
- OAuth 2.1 is used for authentication with PKCE required.
- Access tokens expire after 1 hour.
- All requests that result in access to a playable stream are subject to a limit of
  15,000 requests per any 24-hour time window.
- The majority of SoundCloud API rate limits are in the form of 24-hour time windows.
- PKCE is required to securely exchange the auth code.
- All clients are treated as confidential rather than public.
- Each refresh token can only be used once.
- Uses OAuth2 with authorization code flow for user authentication.
- PKCE is required for OAuth 2.1 authorization.
- Access to the SoundCloud API is currently provided free of charge, but SoundCloud
  reserves the right to charge at some point in the future.
- 'Effective Date: 30 March 2024'
- If you choose to use the Website without blocking or disabling cookies or opting
  out of other technologies, you will indicate your consent to our use of these cookies
  and other technologies and to our use (in accordance with this policy) of any personal
  information that we collect using these technologies.
- If you do not consent to the use of these technologies, please be sure to block
  or disable them using your browser settings, the opt-out links identified in this
  policy, or the settings within our mobile apps.
- We will not share your personal information with any third party, except as described
  in this Privacy Policy.
errors:
- 'bad_request: body is missing access token'
- 'unauthorized: this token is associated with a session that is already invalid'
- 'Rate limiting on the amount of tokens you can request through the Client Credentials
  Flow: 50 tokens in 12h per app, and 30 tokens in 1h per IP address.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '404: Not Found'
- '400: Bad Request'
- '401: Unauthorized'
- '404 Not Found: The requested resource does not exist'
- '400 Bad Request: Check the requirements of the endpoint you''re calling in the
  API Explorer.'
- '401 Unauthorized: Make sure you''re sending an Authorization header.'
- '403 Forbidden: You don''t have access to whatever it is you''re asking for.'
- '404 Not Found: Check the URL that you''re requesting.'
- '406 Not Accessible: Check the Accept header that you''re sending.'
- '422 Unprocessable Entity: One or more of the parameters looks a little screwy.'
- '429 Too Many Requests: Read the Rate Limits page to find out more.'
- '500 Internal Server Error: Something went wrong on our side.'
- '503 Service Unavailable: Our servers are too busy to handle your request.'
- '504 Gateway Timeout: The request is taking too long.'
- 'HTTP 429: Too Many Requests'
- '404 Not Found: Resource does not exist'
- '401 Unauthorized: Invalid access token'
- 50 tokens in 12h per app
- 30 tokens in 1h per IP address
- '400: bad_request - body is missing access token'
- '401: unauthorized - this token is associated with a session that is already invalid'
- '404: Not Found - when a non-existing user is fetched'
auth_info:
  mentioned_objects:
  - OauthToken
  - access_token
  - refresh_token
client:
  base_url: https://soundcloud.com/oembed
  auth:
    type: oauth2
    flow: authorization_code
    token_url: https://secure.soundcloud.com/oauth/token
    client_id: '{{ dlt.secrets[''client_id''] }}'
    client_secret: '{{ dlt.secrets[''client_secret''] }}'
    location: header
    header_name: Authorization
    redirect_uri: '{{ dlt.secrets[''soundcloud_redirect_uri''] }}'
  headers:
    Accept: application/json
    accept: application/json; charset=utf-8
  paginator:
    type: linked_partitioning
    cursor_param: cursor
    page_size_param: limit
    default_page_size: 50
    cursor_path: next_href
source_metadata: null
