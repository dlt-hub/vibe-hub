resources:
- name: people
  endpoint:
    path: /v0/people
    method: POST
    data_selector: people
    params: {}
- name: person
  endpoint:
    path: /v0/people/:id
    method: GET
    data_selector: id
    params: {}
- name: agent_state_bulk
  endpoint:
    path: /v0/agents/state/bulk
    method: POST
    data_selector: agent_states
    params: {}
- name: agent_state_single
  endpoint:
    path: /v0/agents/state
    method: GET
    data_selector: agent_states
    params:
      start_time: required
      end_time: required
      agent_id: optional
      platforms: optional
      channel: optional
      queue: optional
      site: optional
      team: optional
      skill: optional
      limit: optional
      offset: optional
- name: agents_state_edit_history
  endpoint:
    path: /v0/agents/state/edit/history
    method: GET
    data_selector: records
    params:
      start_time: ''
      end_time: ''
- name: activities
  endpoint:
    path: /v0/activities
    method: POST
    data_selector: ''
    params:
      agent_id: ''
      type_id: ''
      start_time: ''
      end_time: ''
- name: activities_bulk
  endpoint:
    path: /v0/activities/bulk
    method: POST
    data_selector: ''
    params:
      activities: []
- name: event_changes
  endpoint:
    path: /v0/event_changes
    method: GET
    data_selector: event_changes
    params:
      start_time: ''
      end_time: ''
- name: conversations_bulk
  endpoint:
    path: /v0/conversations/bulk
    method: POST
    data_selector: conversations
    params: {}
- name: time_off_requests
  endpoint:
    path: /v0/time_off/requests
    method: GET
    data_selector: time_off_requests
- name: time_off_create
  endpoint:
    path: /v0/time_off
    method: POST
    data_selector: id
- name: time_off_cancel
  endpoint:
    path: /v0/time_off/:id/cancel
    method: POST
    data_selector: status
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: people
    params: {}
- name: people
  endpoint:
    path: /v0/people/:id
    method: PATCH
    data_selector: people
    params: {}
- name: roles
  endpoint:
    path: /v0/roles
    method: GET
    data_selector: roles
    params: {}
- name: agent_states
  endpoint:
    path: /v0/agents/state
    method: POST
    data_selector: agent_states
    params: {}
- name: agent_state_condensed_timeline
  endpoint:
    path: /v0/agents/state
    method: GET
    data_selector: agent_states
    params:
      priority_order: zendesk_clock_in,zendesk
      start_time: ''
      end_time: ''
- name: agent_associations
  endpoint:
    path: /v0/agents/associations
    method: POST
    data_selector: ''
    params: {}
- name: agent_state_edit
  endpoint:
    path: /v0/agents/state/edit
    method: POST
    data_selector: ''
    params: {}
- name: activities
  endpoint:
    path: /v0/activities
    method: GET
    data_selector: activities
    params: {}
- name: activity_types
  endpoint:
    path: /v0/activity_types
    method: GET
    data_selector: activity_types
    params: {}
- name: queues
  endpoint:
    path: /v0/queues
    method: GET
    data_selector: queues
- name: sites
  endpoint:
    path: /v0/sites
    method: GET
    data_selector: sites
- name: teams
  endpoint:
    path: /v0/teams
    method: GET
    data_selector: teams
- name: skills
  endpoint:
    path: /v0/skills
    method: GET
    data_selector: skills
- name: forecasted_vs_actuals
  endpoint:
    path: /v0/forecasted_vs_actuals
    method: GET
    data_selector: forecasts_vs_actuals
    params:
      start_time: ''
      end_time: ''
      channel: ''
      interval: ''
- name: qa_scores_bulk
  endpoint:
    path: /v0/qa_scores/bulk
    method: POST
    data_selector: scores
    params: {}
- name: adherence
  endpoint:
    path: /v0/reports/adherence
    method: POST
    data_selector: report_id
- name: agent_ticket_stats
  endpoint:
    path: /v0/reports/agent_ticket_stats
    method: POST
    data_selector: report_id
- name: agent_state_handle_times
  endpoint:
    path: /v0/reports/agent_state_handle_times
    method: POST
    data_selector: report_id
- name: report_status
  endpoint:
    path: /v0/reports/:reportID
    method: GET
    data_selector: status
- name: assist_chat_response
  endpoint:
    path: /assist/chat/response
    method: POST
    data_selector: response
- name: assist_conversation
  endpoint:
    path: /assist/conversations
    method: GET
    data_selector: conversations
    params: {}
- name: forecasts
  endpoint:
    path: /v0/forecasts
    method: GET
    data_selector: forecasts
    params:
      start_time: <unix_timestamp>
      end_time: <unix_timestamp>
      channel: <string>
      queue: <uuid>
- name: forecast_totals
  endpoint:
    path: /v0/forecasts/totals
    method: GET
    data_selector: forecasts
    params:
      start_time: <unix_timestamp>
      end_time: <unix_timestamp>
      channel: <string>
      queue: <uuid>
      value_type: <string>
- name: people
  endpoint:
    path: /people
    method: GET
    data_selector: people
    params: {}
- name: roles
  endpoint:
    path: /roles
    method: GET
    data_selector: roles
    params: {}
- name: activities
  endpoint:
    path: /activities
    method: GET
    data_selector: activities
    params: {}
- name: activity_types
  endpoint:
    path: /activity_types
    method: GET
    data_selector: activity_types
    params: {}
- name: forecasts
  endpoint:
    path: /forecasts
    method: GET
    data_selector: forecasts
    params: {}
- name: qa_scores
  endpoint:
    path: /qa_scores/bulk
    method: POST
    data_selector: scores
    params: {}
- name: requirements
  endpoint:
    path: /v0/requirements
    method: POST
    data_selector: requirements
    params: {}
- name: requirement_types
  endpoint:
    path: /v0/requirement_types
    method: GET
    data_selector: requirement_types
    params: {}
- name: time_off_updates
  endpoint:
    path: /v0/time_off/updates
    method: GET
    data_selector: time_off_updates
    params:
      updated_since: Unix timestamp, in seconds
- name: shift_patterns
  endpoint:
    path: /v0/shift_patterns
    method: GET
    data_selector: ''
- name: shift_pattern_by_id
  endpoint:
    path: /v0/shift_patterns/:id
    method: GET
    data_selector: ''
- name: create_shift_pattern
  endpoint:
    path: /v0/shift_patterns
    method: POST
    data_selector: ''
- name: update_shift_pattern
  endpoint:
    path: /v0/shift_patterns/:id
    method: PUT
    data_selector: ''
- name: delete_shift_pattern
  endpoint:
    path: /v0/shift_patterns/:id
    method: DELETE
    data_selector: ''
- name: assign_agents
  endpoint:
    path: /v0/shift_patterns/assign
    method: POST
    data_selector: ''
- name: unassign_agents
  endpoint:
    path: /v0/shift_patterns/unassign
    method: POST
    data_selector: ''
- name: assist_responses
  endpoint:
    path: /v0/assist/responses
    method: POST
    data_selector: responses
- name: assist_handoff
  endpoint:
    path: /v0/assist/responses/handoff
    method: GET
    data_selector: handoff
- name: conversations
  endpoint:
    path: /v0/assist/conversations
    method: GET
    data_selector: conversations
    params:
      limit: 20
      offset: 0
      include_messages: true
      include_sources: true
      include_evaluation_metrics: true
- name: conversation_handoff
  endpoint:
    path: /v0/assist/conversations/:id/handoff
    method: GET
    data_selector: transcript
    params:
      language: en-US
- name: knowledge_articles
  endpoint:
    path: /v0/assist/articles
    method: POST
    data_selector: id
    params:
      id: article_123456
      source_url: https://support.example.com/articles/refund-policy
      title: Refund Policy for Premium Customers
      internal: false
      tags:
      - refunds
      - policy
      - premium
      updated_at: 1770000400
- name: assist_articles
  endpoint:
    path: /v0/assist/articles/{id}
    method: PUT
- name: assist_replies
  endpoint:
    path: /v0/assist/replies
    method: POST
notes:
- We allow creating People in bulk, as well as individually.
- Batch limit of 1000 conversations per request.
- The shift pattern API is currently invite-only, please contact your customer success
  manager to find out how to access it.
- All API requests must be made over HTTPS.
- API requests without authentication will also fail.
- Valid IDs for site, teams, and queues can be retrieved from endpoints for filters.
- This endpoint will return 400 if invalid filter IDs are provided.
- Forecasts represent predicted volume within a given time window.
errors:
- '400: Invalid IDs for site, teams, or queues provided.'
- '429: Too Many Requests - Rate limit exceeded'
- '401: Unauthorized - Authentication required'
- '400: Invalid filter IDs provided.'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
auth_info:
  mentioned_objects: []
client:
  base_url: https://api.assembledhq.com
  auth:
    type: apikey
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
    API-Version: '2019-06-20'
source_metadata: null
