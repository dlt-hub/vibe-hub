resources:
- name: transaction_status
  endpoint:
    path: /v1/verify/{reference_id}
    method: GET
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
- name: create_verification_process
  endpoint:
    path: /verification
    method: POST
    data_selector: object
    params: {}
- name: get_verification_process
  endpoint:
    path: /verification
    method: GET
    data_selector: object
    params: {}
- name: sms
  endpoint:
    path: /sms
    method: POST
    data_selector: sms
    params: {}
- name: inline_hook_request
  endpoint:
    path: /enterprise/docs/okta-telephony-telesign-no-code-inline-hook
    method: POST
    data_selector: commands
    params: {}
- name: Okta telephony inline hook
  endpoint:
    path: /integration/okta-hook
    method: POST
- name: verify_call
  endpoint:
    path: /v1/verify/call
    method: POST
- name: verify_status
  endpoint:
    path: /v1/verify/{reference_id}
    method: GET
- name: verify_completion
  endpoint:
    path: /v1/verify/completion/{referenceid}
    method: PUT
- name: initiate_verification
  endpoint:
    path: /silent/initiate
    method: POST
    data_selector: response
    params: {}
- name: finalize_verification
  endpoint:
    path: /silent/finalize
    method: POST
    data_selector: response
    params: {}
- name: send_sms
  endpoint:
    path: /v1/messaging
    method: POST
- name: get_sms_status
  endpoint:
    path: /v1/messaging/{reference_id}
    method: GET
- name: report_sms_completion
  endpoint:
    path: /v1/verify/completion/{reference_id}
    method: PUT
- name: send_bulk_sms
  endpoint:
    path: /v1/verify/bulk_sms
    method: POST
- name: sms
  endpoint:
    path: /sms
    method: POST
    data_selector: messages
    params: {}
- name: verify
  endpoint:
    path: /verify
    method: POST
    data_selector: verification
    params: {}
- name: files
  endpoint:
    path: /files
    method: GET
    data_selector: files
    params: {}
- name: download_file
  endpoint:
    path: /download/{file_name}
    method: GET
    data_selector: content
    params: {}
- name: deactivated_numbers
  endpoint:
    path: /deactivated_numbers
    method: GET
- name: inbound_sms
  endpoint:
    path: /inbound-sms
    method: GET
- name: sms
  endpoint:
    path: /sms
    method: POST
- name: sms_verify
  endpoint:
    path: /sms/verify
    method: POST
- name: create_masked_sms_session
  endpoint:
    path: /v1/anonymous/session/sms
    method: POST
- name: create_masked_voice_sms_session
  endpoint:
    path: /v1/anonymous/session/sms_voice
    method: POST
- name: create_masked_session_sms
  endpoint:
    path: /enterprise/docs/number-masking-create-masked-session-for-sms
    method: POST
    data_selector: session
- name: create_masked_session_sms_or_voice
  endpoint:
    path: /enterprise/docs/number-masking-create-masked-session-for-sms-or-voice
    method: POST
    data_selector: session
- name: number_masking_callback_service
  endpoint:
    path: /enterprise/docs/number-masking-callback-service
    method: POST
    data_selector: callback
- name: submit_phone_number
  endpoint:
    path: /enterprise/reference/submitphonenumberforintelligence
    method: POST
    data_selector: transactionRiskRecommendation
    params: {}
- name: Phone ID Overview
  endpoint:
    path: /enterprise/docs/phone-id-overview
    method: GET
- name: phone_id
  endpoint:
    path: /v1/phoneid/{complete_phone_number}
    method: POST
    data_selector: response
    params: {}
- name: phone_id_alt
  endpoint:
    path: /v1/phoneid
    method: POST
    data_selector: response
    params: {}
- name: Phone ID Live Status
  endpoint:
    path: /v1/phoneid/live/{complete_phone_number}
    method: GET
- name: verify
  endpoint:
    path: /v1/verify/sms
    method: POST
- name: verify_code
  endpoint:
    path: /v1/verify/AEBC93B5898342F790E4E19FED41A7DA
    method: GET
- name: send_sms
  endpoint:
    path: /sms/send
    method: POST
    data_selector: results
    params: {}
- name: verify_sms
  endpoint:
    path: /sms/verify
    method: POST
    data_selector: results
    params: {}
- name: verification_process
  endpoint:
    path: /verification
    method: POST
    data_selector: object
    params: {}
- name: create_verification_process
  endpoint:
    path: /verification
    method: POST
    data_selector: object
- name: verification
  endpoint:
    path: /verification/reference_id
    method: GET
- name: verification_process
  endpoint:
    path: /verification/{reference_id}
    method: GET
    data_selector: object
- name: update_verification_process
  endpoint:
    path: /verification/{reference_id}/state
    method: PATCH
    data_selector: RESPONSE
- name: Verify API Delivery Reports
  endpoint:
    path: /unifiedverifycallbacks
    method: POST
- name: send_sms_verification_code
  endpoint:
    path: /v1/verify/sms
    method: POST
    data_selector: null
    params: {}
- name: transaction_status
  endpoint:
    path: /v1/verify/completion/reference_id
    method: PUT
    data_selector: status
    params: {}
- name: report_completion
  endpoint:
    path: /v1/verify/completion/{reference_id}
    method: PUT
    data_selector: object
    params: {}
- name: Delivery Reports
  endpoint:
    path: /sms_verify_dlr_endpoint
    method: POST
    data_selector: ''
    params: {}
- name: voice_verification
  endpoint:
    path: /v1/verify/call
    method: POST
- name: transaction_status
  endpoint:
    path: /v1/verify/completion/reference_id
    method: PUT
- name: report_completion
  endpoint:
    path: /v1/verify/completion/{reference_id}
    method: PUT
    data_selector: object
- name: transaction_status
  endpoint:
    path: /v1/verify/{reference_id}
    method: GET
- name: transaction_status
  endpoint:
    path: /silent/finalize
    method: POST
- name: final_verification_status
  endpoint:
    path: /silent/finalize
    method: POST
    data_selector: object
    params: {}
- name: create_verification_request
  endpoint:
    path: /silent/initiate
    method: POST
    data_selector: verification
    params: {}
- name: bulk_sms
  endpoint:
    path: /v1/verify/bulk_sms
    method: POST
    data_selector: object
- name: bulk_sms
  endpoint:
    path: /v1/verify/bulk_sms
    method: POST
    data_selector: reference_id
    params: {}
- name: send_message
  endpoint:
    path: /omnichannel
    method: POST
- name: check_channel_capability
  endpoint:
    path: /capability/{channel}/{phone_number}
    method: GET
- name: check_capability
  endpoint:
    path: /capability/rcs/phone_number
    method: GET
    data_selector: object
    params: {}
- name: check_phonenumber_rbm_capability
  endpoint:
    path: /capability/rcs/{phone_number}/{agent_id}
    method: GET
    data_selector: object
    params: {}
- name: check_channel_capability
  endpoint:
    path: /capability/rcs/phone_number/agent_id
    method: GET
    data_selector: object
    params: {}
- name: transaction_status
  endpoint:
    path: /v1/omnichannel/{reference_id}
    method: GET
    data_selector: object
- name: messaging
  endpoint:
    path: /messaging
    method: POST
    data_selector: object
- name: get_transaction_status
  endpoint:
    path: /transaction-status
    method: GET
    data_selector: object
- name: send_sms
  endpoint:
    path: /v1/messaging
    method: POST
    data_selector: response
    params: {}
- name: transaction_status
  endpoint:
    path: /v1/messaging/reference_id
    method: GET
    data_selector: object
    params: {}
- name: transaction_status
  endpoint:
    path: /v1/messaging/{reference_id}
    method: GET
    data_selector: status
    params: {}
- name: report_completion
  endpoint:
    path: /v1/verify/completion/{reference_id}
    method: PUT
- name: templates
  endpoint:
    path: /v1/omnichannel/templates
    method: GET
- name: messaging_templates
  endpoint:
    path: /v1/omnichannel/templates
    method: GET
    data_selector: array of objects
    params: {}
- name: create_messaging_template
  endpoint:
    path: /omnichannel/templates
    method: POST
    data_selector: status
    params: {}
- name: messaging_template
  endpoint:
    path: /v1/omnichannel/templates/whatsapp/name
    method: GET
    data_selector: object
- name: get_messaging_template
  endpoint:
    path: /v1/omnichannel/templates/{channel}/{name}
    method: GET
    data_selector: object
    params: {}
- name: templates
  endpoint:
    path: /v1/omnichannel/templates/{channel}/{name}
    method: DELETE
- name: sms_delivery_reports
  endpoint:
    path: /sms_delivery_reports_endpoint
    method: POST
- name: email_callbacks
  endpoint:
    path: /emailcallbacks
    method: POST
- name: Receive MMS callbacks
  endpoint:
    path: /mms_callback_endpoint
    method: POST
- name: Receive RCS callbacks
  endpoint:
    path: /rcs_callback_endpoint
    method: POST
- name: sms_callback
  endpoint:
    path: /messaging_sms_callback_endpoint
    method: POST
    data_selector: user_response
    params: {}
- name: whatsapp_callbacks
  endpoint:
    path: /whatsapp_callback_endpoint
    method: POST
    data_selector: content
    params: {}
- name: template_management_callbacks
  endpoint:
    path: /msg_templates_endpoint
    method: POST
- name: bulk_sms_callbacks
  endpoint:
    path: /bulk_sms_callback_endpoint
    method: POST
- name: bulk_sms_callback
  endpoint:
    path: /bulk_sms_callback_endpoint
    method: POST
    data_selector: status
    params: {}
- name: anonymous_session_sms
  endpoint:
    path: /v1/anonymous/session/sms
    method: POST
- name: create_masked_sms_session
  endpoint:
    path: /v1/anonymous/session/sms
    method: POST
    data_selector: response
    params: {}
- name: create_masked_sms_session
  endpoint:
    path: /v1/anonymous/session/sms_voice
    method: POST
- name: masked_voice_sms_session
  endpoint:
    path: /v1/anonymous/session/sms_voice
    method: POST
- name: call_recording
  endpoint:
    path: /v2/call_recording
    method: GET
    data_selector: call_recordings
    params:
      start_date_time: string
      end_date_time: string
      pagesize: string
- name: recordings
  endpoint:
    path: /v2/call_recording/{reference_id}
    method: GET
    data_selector: array of objects
- name: delete_recordings
  endpoint:
    path: /v2/call_recording/{reference_id}
    method: DELETE
    data_selector: null
    params: {}
- name: send_action
  endpoint:
    path: /voice
    method: POST
- name: clone_account
  endpoint:
    path: /accounts/{source_account_id}
    method: POST
    data_selector: data
    params: {}
- name: list_rest_api_keys
  endpoint:
    path: /keys
    method: GET
    data_selector: keys
- name: create_api_key
  endpoint:
    path: /keys
    method: POST
    data_selector: data
    params:
      expiration_date: string
- name: get_one_rest_api_key
  endpoint:
    path: /keys/{key_id}
    method: GET
    data_selector: object
- name: update_rest_api_key
  endpoint:
    path: /keys/{key_id}
    method: PATCH
    data_selector: object
    params:
      expiration_date: string
- name: Accounts API
  endpoint:
    path: /accounts
    method: GET
- name: Deactivated Numbers API
  endpoint:
    path: /deactivated-numbers
    method: GET
- name: Detect API
  endpoint:
    path: /detect
    method: POST
- name: App Verify API
  endpoint:
    path: /app-verify
    method: POST
- name: Smart Verify API
  endpoint:
    path: /smart-verify
    method: POST
- name: Protect Platform API
  endpoint:
    path: /protect
    method: POST
- name: FlowBuilder API
  endpoint:
    path: /flow-builder
    method: POST
- name: Legacy Phone ID API
  endpoint:
    path: /phone-id
    method: GET
- name: deactivated_numbers
  endpoint:
    path: /files
    method: GET
    data_selector: files
- name: get_file
  endpoint:
    path: /download/{file_name}
    method: GET
    data_selector: ''
    params: {}
- name: get_file_list
  endpoint:
    path: /getdeactnumfilelist
    method: GET
    data_selector: ''
    params: {}
- name: submit_phone_number
  endpoint:
    path: /score/{complete_phone_number}
    method: POST
    data_selector: object
- name: phone_id
  endpoint:
    path: /v1/phoneid/{complete_phone_number}
    method: POST
    data_selector: response
- name: live_status
  endpoint:
    path: /v1/phoneid/live/{complete_phone_number}
    method: GET
    data_selector: object
- name: phone_id
  endpoint:
    path: /v1/phoneid
    method: POST
    data_selector: response
- name: end_call
  endpoint:
    path: /verify/auto/voice/finalize
    method: POST
- name: report_unknown_caller_id
  endpoint:
    path: /v1/verify/auto/voice/finalize/callerid
    method: POST
- name: report_timeout
  endpoint:
    path: /v1/verify/auto/voice/finalize/timeout
    method: POST
    data_selector: reference_id
    params: {}
- name: send_call_verification_code
  endpoint:
    path: /v1/verify/auto/voice/initiate
    method: POST
    data_selector: response
    params: {}
- name: transaction_status
  endpoint:
    path: /v1/verify/auto/voice/{reference_id}
    method: GET
    data_selector: object
- name: smart_verify
  endpoint:
    path: /verify/smart
    method: POST
    data_selector: response
    params: {}
- name: generate_access_token
  endpoint:
    path: /authenticationmanager/v1/authenticate/api
    method: POST
    data_selector: ''
- name: initialize_transactional_flow
  endpoint:
    path: /hubv2/model/flow/init-flow
    method: POST
- name: contact_details
  endpoint:
    path: /phoneid/contact/{complete_phone_number}
    method: GET
    data_selector: contact
    params: {}
- name: contact
  endpoint:
    path: /v1/phoneid/contact/complete_phone_number
    method: GET
    data_selector: object
    params: {}
- name: number_deactivation
  endpoint:
    path: /number_deactivation/complete_phone_number
    method: GET
    data_selector: object
    params: {}
- name: deactivation_status
  endpoint:
    path: /v1/phoneid/number_deactivation/{complete_phone_number}
    method: GET
    data_selector: number_deactivation
- name: verification_process
  endpoint:
    path: /verification
    method: POST
    data_selector: object
    params: {}
- name: verification_process
  endpoint:
    path: /verification
    method: POST
    data_selector: object
- name: Verify API Delivery Reports
  endpoint:
    path: /verify_dlr_endpoint
    method: POST
- name: send_sms_verification_code
  endpoint:
    path: /verify/sms
    method: POST
    data_selector: reference_id
    params: {}
- name: report_completion
  endpoint:
    path: /v1/verify/completion/{reference_id}
    method: PUT
- name: transaction_status
  endpoint:
    path: /verify/{reference_id}
    method: GET
    data_selector: RESPONSE
- name: Delivery Reports
  endpoint:
    path: /sms_verify_dlr_endpoint
    method: POST
- name: send_voice_verification_code
  endpoint:
    path: /v1/verify/call
    method: POST
    data_selector: response
    params: {}
- name: transaction_status
  endpoint:
    path: /v1/verify/completion/reference_id
    method: PUT
- name: report_completion
  endpoint:
    path: /v1/verify/completion/{reference_id}
    method: PUT
- name: transaction_status
  endpoint:
    path: /v1/verify/{reference_id}
    method: GET
    data_selector: response
    params: {}
- name: final_verification_status
  endpoint:
    path: /silent/finalize
    method: POST
    data_selector: object
- name: Get transaction status
  endpoint:
    path: /silent/finalize
    method: POST
    data_selector: object
    params: {}
- name: create_verification_request
  endpoint:
    path: /silent/initiate
    method: POST
    data_selector: verification
    params: {}
- name: bulk_sms
  endpoint:
    path: /v1/verify/bulk_sms
    method: POST
    data_selector: reference_id
    params: {}
- name: send_message
  endpoint:
    path: /omnichannel
    method: POST
    data_selector: reference_id
- name: transaction_status
  endpoint:
    path: /v1/messaging
    method: POST
    data_selector: object
    params: {}
- name: send_sms
  endpoint:
    path: /v1/messaging
    method: POST
    data_selector: response
    params: {}
- name: messaging_templates
  endpoint:
    path: /v1/omnichannel/templates
    method: GET
    data_selector: array of objects
- name: templates
  endpoint:
    path: /v1/omnichannel/templates
    method: GET
- name: sms_delivery_reports
  endpoint:
    path: /sms_delivery_reports_endpoint
    method: POST
- name: email_callbacks
  endpoint:
    path: /email_callbacks
    method: POST
- name: template_management_callbacks
  endpoint:
    path: /msg_templates_endpoint
    method: POST
    data_selector: ''
    params: {}
- name: bulk_sms_callbacks
  endpoint:
    path: /bulk_sms_callback_endpoint
    method: POST
- name: create_masked_session
  endpoint:
    path: /v1/anonymous/session/sms
    method: POST
- name: masked_sms_session
  endpoint:
    path: /v1/anonymous/session/sms
    method: POST
    data_selector: session_data
    params: {}
- name: call_recording
  endpoint:
    path: /v2/call_recording
    method: GET
    data_selector: call_recordings
    params:
      start_date_time: ''
      end_date_time: ''
      pagesize: ''
- name: send_action
  endpoint:
    path: /voice
    method: POST
- name: clone_account
  endpoint:
    path: /accounts/{source_account_id}
    method: POST
    data_selector: response
    params: {}
- name: api_keys
  endpoint:
    path: /keys
    method: GET
    data_selector: null
    params: {}
- name: get_file_list
  endpoint:
    path: /files
    method: GET
    data_selector: list_of_files
- name: submit_phone_number
  endpoint:
    path: /v1/score/{complete_phone_number}
    method: POST
    data_selector: response
    params: {}
- name: phone_id
  endpoint:
    path: /v1/phoneid/{complete_phone_number}
    method: POST
    data_selector: ''
- name: end_call
  endpoint:
    path: /v1/verify/auto/voice/finalize
    method: POST
- name: send_call_with_verification_code
  endpoint:
    path: /v1/verify/auto/voice/initiate
    method: POST
    data_selector: reference_id
- name: app_verify_transaction_status
  endpoint:
    path: /v1/verify/auto/voice/{reference_id}
    method: GET
    data_selector: response
    params: {}
- name: smart_verify
  endpoint:
    path: /v1/verify/smart
    method: POST
    data_selector: sub_resource
    params: {}
- name: generate_access_token
  endpoint:
    path: /authenticationmanager/v1/authenticate/api
    method: POST
    data_selector: accessToken
- name: initialize_transactional_flow
  endpoint:
    path: /init-flow
    method: POST
- name: contact
  endpoint:
    path: /phoneid/contact/complete_phone_number
    method: GET
- name: contact
  endpoint:
    path: /phoneid/contact/{complete_phone_number}
    method: GET
    data_selector: contact
- name: number_deactivation
  endpoint:
    path: /number_deactivation/complete_phone_number
    method: GET
- name: number_deactivation
  endpoint:
    path: /phoneid/number_deactivation/{complete_phone_number}
    method: GET
    data_selector: number_deactivation
- name: sms
  endpoint:
    path: /sms
    method: POST
    data_selector: records
    params: {}
- name: Standard Time Zones
  endpoint:
    path: /timezones/standard
    method: GET
    data_selector: zones
    params: {}
- name: clone_account
  endpoint:
    path: /enterprise/reference/cloneaccount
    method: POST
- name: list_rest_api_keys
  endpoint:
    path: /enterprise/reference/listrestapikeys
    method: GET
- name: create_rest_api_key
  endpoint:
    path: /enterprise/reference/post-accounts-account_id-keys-rest
    method: POST
- name: get_rest_api_key
  endpoint:
    path: /enterprise/reference/get-accounts-account_id-keys-rest-key_id
    method: GET
- name: update_rest_api_key
  endpoint:
    path: /enterprise/reference/patch-accounts-account_id-keys-rest-key_id
    method: PATCH
- name: remove_rest_api_key
  endpoint:
    path: /enterprise/reference/delete-accounts-account_id-keys-rest-key_id
    method: DELETE
- name: send_call_with_verification_code
  endpoint:
    path: /enterprise/reference/sendappverifycode
    method: POST
- name: end_call
  endpoint:
    path: /enterprise/reference/endappverifycall
    method: POST
- name: report_unknown_caller_id
  endpoint:
    path: /enterprise/reference/reportappverifycallerid
    method: POST
- name: report_timeout
  endpoint:
    path: /enterprise/reference/reportappverifytimeout
    method: POST
- name: get_transaction_status
  endpoint:
    path: /enterprise/reference/getappverifystatus
    method: GET
- name: send_call_with_verification_code
  endpoint:
    path: /v1/verify/auto/voice/initiate
    method: POST
    data_selector: resource_uri
    params: {}
- name: end_call
  endpoint:
    path: /v1/verify/auto/voice/finalize
    method: POST
    data_selector: resource_uri
    params: {}
- name: report_unknown_caller_id
  endpoint:
    path: /v1/verify/auto/voice/finalize/callerid
    method: POST
    data_selector: resource_uri
    params: {}
- name: report_timeout
  endpoint:
    path: /v1/verify/auto/voice/finalize/timeout
    method: POST
    data_selector: resource_uri
    params: {}
- name: get_transaction_status
  endpoint:
    path: /v1/verify/auto/voice/{transaction_id}
    method: GET
    data_selector: reference_id
    params: {}
- name: initiate
  endpoint:
    path: /enterprise/reference/sendappverifycode
    method: POST
- name: finalize
  endpoint:
    path: /enterprise/reference/endappverifycall
    method: POST
- name: get_status
  endpoint:
    path: /enterprise/reference/getappverifystatus
    method: GET
- name: report_unknown_caller_id
  endpoint:
    path: /enterprise/reference/reportappverifycallerid
    method: POST
- name: report_timeout
  endpoint:
    path: /enterprise/reference/reportappverifytimeout
    method: POST
- name: app_verify
  endpoint:
    path: /app-verify
    method: POST
    data_selector: data
    params: {}
- name: deactivated_numbers
  endpoint:
    path: /deactivated-numbers
    method: GET
    data_selector: records
- name: carrier_details
  endpoint:
    path: /enterprise/docs/deactivated-numbers-api-details-by-carrier
    method: GET
    data_selector: carrier_details
    params: {}
- name: sms
  endpoint:
    path: /sms
    method: POST
    data_selector: results
    params: {}
- name: inbound_sms
  endpoint:
    path: /inbound_sms
    method: POST
    data_selector: sub_resource
    params: {}
- name: inbound_sms
  endpoint:
    path: /inbound/sms
    method: GET
- name: inbound_sms
  endpoint:
    path: /enterprise/docs/inbound-sms-action-to-keyword-mapping
    method: GET
    data_selector: keywords
    params: {}
- name: transaction_risk_recommendation
  endpoint:
    path: /v1/score
    method: POST
    data_selector: ''
    params: {}
- name: Submit a phone number to evaluate
  endpoint:
    path: /enterprise/reference/submitphonenumberforintelligence
    method: POST
    data_selector: transaction
- name: accounts
  endpoint:
    path: /accounts
    method: GET
    data_selector: records
- name: app_verify
  endpoint:
    path: /app/verify
    method: POST
    data_selector: result
- name: number_type
  endpoint:
    path: /number_type
    method: GET
    data_selector: records
    params: {}
- name: ip
  endpoint:
    path: /ip
    method: GET
    data_selector: records
    params: {}
- name: email
  endpoint:
    path: /email
    method: GET
    data_selector: records
    params: {}
- name: submit_fraud_event
  endpoint:
    path: /fraud_event
    method: POST
    data_selector: event_data
- name: submit_fraud_event
  endpoint:
    path: /v1/telebureau/event
    method: POST
    data_selector: response
    params: {}
- name: view_fraud_event
  endpoint:
    path: /v1/telebureau/event/[reference_id]
    method: GET
    data_selector: status
    params: {}
- name: cancel_fraud_event
  endpoint:
    path: /v1/telebureau/event/[reference_id]
    method: DELETE
    data_selector: status
    params: {}
- name: single_submission
  endpoint:
    path: /submit/labeled_data
    method: POST
    data_selector: records
    params: {}
- name: submit_labeled_data
  endpoint:
    path: /intelligence/submit_labeled_data
    method: POST
    data_selector: data
    params: {}
- name: location
  endpoint:
    path: /location
    method: POST
    data_selector: message.{channel_name}.parameters
    params: {}
- name: otp_verify
  endpoint:
    path: /otp_verify
    method: POST
    data_selector: message.{channel_name}.parameters
    params: {}
- name: sms
  endpoint:
    path: /sms
    method: POST
    data_selector: messages
    params: {}
- name: verify
  endpoint:
    path: /verify
    method: POST
    data_selector: verification
    params: {}
- name: Delivery Status notifications
  endpoint:
    path: /enterprise/docs/verify-api-overview
    method: GET
    data_selector: parameters
- name: Read Notifications
  endpoint:
    path: /enterprise/docs/verify-api-verification-policy-and-fallback-time
    method: GET
    data_selector: parameters
- name: get_transaction_status
  endpoint:
    path: /v1/omnichannel/{reference_id}
    method: GET
    data_selector: status
    params:
      verify_code: ''
- name: transaction_status
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: response
    params: {}
- name: keyword_handling
  endpoint:
    path: /keyword_handling
    method: GET
    data_selector: keywords
    params: {}
- name: inbound_messages
  endpoint:
    path: /messaging/inbound
    method: POST
    data_selector: messages
    params: {}
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params: {}
- name: send_text_message
  endpoint:
    path: /messaging/send-text-only-message-with-rcs
    method: POST
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: channels
    params: {}
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params:
      channels:
      - channel: rcs
        fallback_time: 600
      - channel: sms
      message:
        rcs:
          template: media
          parameters:
            url: https://s3.amazonaws.com/vero-finto/bogo_coupon_52359.jpg
        sms:
          template: text
          parameters:
            text: Buy one get one free! Use code 'BOGO' at checkout on vero-finto.com.
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params: {}
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params: {}
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: channels
    params: {}
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: ''
    params: {}
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: null
    params: {}
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params:
      channels:
      - channel: rcs
        fallback_time: 600
      - channel: sms
      message.rcs.template: rc_dial_action_vertical
      message.rcs.parameters.dial_payload: dialid2
      message.rcs.parameters.dial_text: Call to join
      message.rcs.parameters.media_url: https://s3.amazonaws.com/vero-finto/gold_promo_30.jpg
      message.rcs.parameters.phone_number_to_dial: '18007779999'
      message.sms.template: text
      message.sms.parameters.text: Get 10% off on all orders! Join Vero-Finto Gold
        by calling 1.800.777.9999.
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: null
    params: {}
- name: Set up WhatsApp
  endpoint:
    path: /messaging/set-up-whatsapp
    method: POST
- name: Send text-only message with WhatsApp
  endpoint:
    path: /messaging/send-text-only-message-with-whatsapp
    method: POST
- name: Send media with WhatsApp
  endpoint:
    path: /messaging/send-media-with-whatsapp
    method: POST
- name: whatsapp_template
  endpoint:
    path: /enterprise/docs/messaging-create-whatsapp-template
    method: POST
- name: create_template
  endpoint:
    path: /v1/omnichannel/templates
    method: POST
    data_selector: status
    params: {}
- name: send_text_only_message_with_whatsapp
  endpoint:
    path: /enterprise/docs/messaging/send-text-only-message-with-whatsapp
    method: POST
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: channels
    params:
      channels:
      - channel: whatsapp
        fallback_time: 600
      - channel: sms
      message.default.template: text
      message.default.parameters.text: Buy one get one free! Use code 'BOGO' at checkout
        on vero-finto.com
      message_type: ARN
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params: {}
- name: send_file_attachment_whatsapp
  endpoint:
    path: /messaging/send-file-attachment-with-whatsapp
    method: POST
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params: {}
- name: send_location_with_whatsapp
  endpoint:
    path: /enterprise/messaging/send-location-with-whatsapp
    method: POST
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: channels
    params: {}
- name: templates
  endpoint:
    path: /v1/omnichannel/templates
    method: POST
    data_selector: templates
    params: {}
- name: get_templates
  endpoint:
    path: /v1/omnichannel/templates
    method: GET
    data_selector: templates
    params: {}
- name: get_template_by_channel_and_name
  endpoint:
    path: /v1/omnichannel/templates/{channel}/{name}
    method: GET
    data_selector: template
    params: {}
- name: send_viber_message
  endpoint:
    path: /v1/viber/send
    method: POST
- name: send_text_only_message_viber
  endpoint:
    path: /messaging/send-text-only-message-with-viber
    method: POST
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params: {}
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params: {}
- name: viber_verification
  endpoint:
    path: /viber/verification
    method: POST
    data_selector: data
- name: send_image
  endpoint:
    path: /messaging/send/image
    method: POST
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params: {}
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params: {}
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params:
      channels:
      - channel: viber
      - channel: sms
      recipient:
        phone_number: '11234567890'
      message:
        viber:
          template: video
          parameters:
            reply_id: nxjs634!
            url: https://example.com/viber/video_placeholder_name.mp4
        sms:
          template: video
          parameters:
            url: https://example.com/viber/video_placeholder_name.mp4
      message_type: MKT
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params:
      channels: '[{"channel":"viber"}]'
      recipient: '{"phone_number":"11234567890"}'
      message.viber.template: text_video
      message.viber.parameters.reply_id: nxjs634!
      message.viber.parameters.url_thumbnail: https://test.org
      message.viber.parameters.text: Hello
      message.viber.parameters.url: https://example.com/viber/video_placeholder_name.mp4
      message_type: MKT
- name: send_video_and_text
  endpoint:
    path: /messaging/send-video-and-text
    method: POST
- name: send_video_text_button
  endpoint:
    path: /messaging/send/video_text_button
    method: POST
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params: {}
- name: send_message_via_email
  endpoint:
    path: /messaging/send/message/via/email
    method: POST
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: ''
    params: {}
- name: omnichannel
  endpoint:
    path: /v1/omnichannel
    method: POST
    data_selector: status
    params:
      message_type: OTP
- name: get_status
  endpoint:
    path: /v1/omnichannel/{reference_id}
    method: GET
    data_selector: status
    params: {}
- name: sms_template
  endpoint:
    path: /messaging/create_sms_template
    method: POST
- name: create_template
  endpoint:
    path: /v1/omnichannel/templates
    method: POST
    data_selector: status
    params: {}
- name: create_masked_session_for_sms
  endpoint:
    path: /enterprise/docs/number-masking-create-masked-session-for-sms
    method: POST
- name: create_masked_session_for_sms_or_voice
  endpoint:
    path: /enterprise/docs/number-masking-create-masked-session-for-sms-or-voice
    method: POST
- name: create_masked_sms_session
  endpoint:
    path: /sms
    method: POST
    data_selector: session_data
    params: {}
- name: create_masked_voice_sms_session
  endpoint:
    path: /sms_voice
    method: POST
    data_selector: session_data
    params: {}
- name: anonymous_session_sms
  endpoint:
    path: /v1/anonymous/session/sms
    method: POST
- name: anonymous_session_sms
  endpoint:
    path: /v1/anonymous/session/sms
    method: POST
    data_selector: session_data
    params: {}
- name: create_masked_session
  endpoint:
    path: /v1/anonymous/session/sms_voice
    method: POST
    data_selector: session_data
    params:
      validity_period: 500
- name: transaction_callback
  endpoint:
    path: /enterprise/docs/number-masking-api-create-masked-session-for-sms
    method: POST
    data_selector: notification
    params: {}
- name: messaging
  endpoint:
    path: /messaging
    method: POST
    data_selector: results
- name: sms
  endpoint:
    path: /sms
    method: POST
    data_selector: results
- name: voice
  endpoint:
    path: /voice
    method: POST
    data_selector: results
- name: generate_preview
  endpoint:
    path: /api/internal/v1/inlineHooks/com.okta.telephony.provider/generatePreview
    method: POST
    data_selector: data
    params: {}
- name: SMS Verify API
  endpoint:
    path: /enterprise/docs/sms-verify-api-overview
    method: GET
- name: Verify API
  endpoint:
    path: /enterprise/docs/verify-api-overview
    method: GET
- name: Voice Verify API
  endpoint:
    path: /enterprise/docs/voice-verify-api-overview
    method: GET
- name: send_sms
  endpoint:
    path: /omnichannel
    method: POST
    data_selector: recipient
    params: {}
- name: send_voice
  endpoint:
    path: /omnichannel
    method: POST
    data_selector: recipient
    params: {}
- name: supported_languages
  endpoint:
    path: /enterprise/docs/okta-telephony-supported-languages-for-voice-text-to-speech
    method: GET
- name: status_codes
  endpoint:
    path: /enterprise/docs/okta-telephony-status-codes
    method: GET
    data_selector: status_codes
- name: telesign_status_codes
  endpoint:
    path: /enterprise/docs/telesign-messaging-status-codes
    method: GET
    data_selector: telesign_status_codes
- name: sms_callback_status_codes
  endpoint:
    path: /enterprise/docs/sms-callback-status-codes
    method: GET
    data_selector: sms_callback_status_codes
- name: voice_callback_status_codes
  endpoint:
    path: /enterprise/docs/voice-callback-status-codes
    method: GET
    data_selector: voice_callback_status_codes
- name: voice_otp
  endpoint:
    path: /v1/verify/call
    method: POST
    data_selector: ''
    params: {}
- name: sms_verify
  endpoint:
    path: /v1/verify/sms
    method: POST
    data_selector: response
    params: {}
- name: send_sms
  endpoint:
    path: /v1/messaging
    method: POST
    data_selector: message
    params: {}
- name: supported_languages
  endpoint:
    path: /enterprise/docs/ping-telephony-supported-languages
    method: GET
- name: supported_languages_voice_verify
  endpoint:
    path: /enterprise/docs/voice-verify-api-supported-languages-for-text-to-speech
    method: GET
    data_selector: languages
- name: supported_languages_sms_verify
  endpoint:
    path: /enterprise/docs/sms-verify-api-supported-languages
    method: GET
    data_selector: languages
- name: phone_id
  endpoint:
    path: /v1/phoneid/{complete_phone_number}
    method: POST
    data_selector: numbering
    params: {}
- name: phone_id_alt
  endpoint:
    path: /v1/phoneid
    method: POST
    data_selector: numbering
    params: {}
- name: phone_id
  endpoint:
    path: /v1/phoneid/{complete_phone_number}
    method: POST
- name: phone_id
  endpoint:
    path: /phoneid
    method: GET
    data_selector: records
    params: {}
- name: active_call_status
  endpoint:
    path: /active_call_status
    method: POST
    data_selector: active_call_status
    params:
      addons: active_call_status
- name: Age Verify
  endpoint:
    path: /phone-id/age-verify
    method: GET
- name: phone_id
  endpoint:
    path: /v1/phoneid/{phone_number}
    method: POST
    data_selector: addons.age_verify
- name: breached_number_check
  endpoint:
    path: /breached_number_check
    method: POST
    data_selector: breached_number_check
    params: {}
- name: breached_data
  endpoint:
    path: /phoneid/breached_data
    method: GET
    data_selector: records
    params: {}
- name: Call Forwarding
  endpoint:
    path: /enterprise/docs/phone-id-identity-attributes-call-forwarding
    method: GET
- name: call_forward_detection
  endpoint:
    path: /identity/attributes/call_forwarding
    method: POST
    data_selector: call_forward_detection
    params:
      addons: {}
      consent: {}
- name: Contact
  endpoint:
    path: /phone-id/identity/attributes/contact
    method: GET
- name: contact_identity_attribute
  endpoint:
    path: /v1/phoneid/{phone_number}
    method: POST
    data_selector: contact
    params:
      addons: contact
- name: contact_match
  endpoint:
    path: /v1/phoneid/{phone_number}
    method: POST
    data_selector: contact_match
    params: {}
- name: Contact Match
  endpoint:
    path: /phoneid/contactmatch
    method: GET
    data_selector: records
    params: {}
- name: deactivated_numbers
  endpoint:
    path: /enterprise/docs/deactivated-numbers-api-overview
    method: GET
    data_selector: records
    params: {}
- name: number_deactivation
  endpoint:
    path: /v1/phoneid/{phone_number}
    method: POST
    data_selector: number_deactivation
    params: {}
- name: porting_history
  endpoint:
    path: /phoneid/porting_history
    method: GET
    data_selector: data
- name: porting_history
  endpoint:
    path: /v1/phoneid/{phone_number}
    method: POST
    data_selector: porting_history
    params:
      addons: porting_history
- name: Porting Status
  endpoint:
    path: /enterprise/docs/phone-id-identity-attributes-porting-status
    method: GET
    data_selector: records
- name: Porting Status
  endpoint:
    path: /v1/phoneid/{phone_number}
    method: POST
    data_selector: porting_status
    params:
      addons:
        porting_status: {}
- name: sim_swap
  endpoint:
    path: /v1/phoneid/{phone_number}
    method: POST
    data_selector: sim_swap
    params:
      addons: sim_swap
- name: Subscriber Status
  endpoint:
    path: /enterprise/docs/phone-id-identity-attributes-subscriber-status
    method: GET
- name: subscriber_status
  endpoint:
    path: /v1/phoneid/{phone_number}
    method: POST
    data_selector: subscriber_status
    params:
      addons: subscriber_status
- name: phone_id
  endpoint:
    path: /v1/phoneid/<complete_phone_number>
    method: POST
    data_selector: contact
    params: {}
- name: Contact Match
  endpoint:
    path: /phoneid
    method: GET
    data_selector: response
    params:
      addons: contact_match
- name: phone_id
  endpoint:
    path: /phoneid
    method: GET
    data_selector: records
    params: {}
- name: sms
  endpoint:
    path: /sms
    method: POST
    data_selector: records
    params: {}
- name: contact_match
  endpoint:
    path: /enterprise/docs/phone-id-identity-attributes-contact-match
    method: POST
    data_selector: contact_match
- name: contact_match
  endpoint:
    path: /phoneid/contact_match
    method: POST
    data_selector: response
    params: {}
- name: contact_match
  endpoint:
    path: /phoneid/contact_match
    method: POST
    data_selector: response
    params: {}
- name: contact_match
  endpoint:
    path: /phoneid/contact_match
    method: GET
    data_selector: response
- name: number_deactivation
  endpoint:
    path: /phoneid/deactivation
    method: GET
    data_selector: number_deactivation
- name: number_deactivation
  endpoint:
    path: /phoneid/number_deactivation
    method: GET
    data_selector: number_deactivation
    params: {}
- name: phone_id
  endpoint:
    path: /phoneid
    method: GET
    data_selector: records
    params: {}
- name: number_deactivation
  endpoint:
    path: /phoneid/deactivation
    method: GET
    data_selector: response
    params: {}
- name: number_deactivation_check
  endpoint:
    path: /phoneid/deactivation
    method: GET
    data_selector: data
    params: {}
- name: number_deactivation
  endpoint:
    path: /enterprise/docs/phone-id-identity-attributes-number-deactivation
    method: POST
    data_selector: number_deactivation
    params: {}
- name: number_deactivation
  endpoint:
    path: /phoneid/deactivation
    method: GET
    data_selector: records
- name: number_deactivation
  endpoint:
    path: /phoneid/numberDeactivation
    method: POST
    data_selector: number_deactivation
- name: phone_id
  endpoint:
    path: /phoneid
    method: GET
    data_selector: records
    params: {}
- name: number_deactivation
  endpoint:
    path: /phoneid/deactivation
    method: GET
    data_selector: number_deactivation
    params: {}
- name: phone_id
  endpoint:
    path: /phoneid
    method: GET
    data_selector: cleansing
    params: {}
- name: Phone ID
  endpoint:
    path: /enterprise/docs/phone-id-overview
    method: GET
    data_selector: identity attributes
- name: phone_id
  endpoint:
    path: /phoneid
    method: GET
    data_selector: cleansing
    params: {}
- name: phone_id
  endpoint:
    path: /phoneid
    method: GET
- name: phone_id
  endpoint:
    path: /phoneid
    method: POST
    data_selector: response
- name: phone_id
  endpoint:
    path: /phoneid
    method: POST
    data_selector: response
    params: {}
- name: phone_id
  endpoint:
    path: /phoneid
    method: GET
    data_selector: response
    params: {}
- name: phone_id
  endpoint:
    path: /phoneid
    method: GET
    data_selector: phone_type
    params: {}
- name: phone_id
  endpoint:
    path: /phoneid
    method: GET
    data_selector: phone_type
    params: {}
- name: phone_id
  endpoint:
    path: /phoneid
    method: GET
    data_selector: responseBody
    params: {}
- name: phone_id
  endpoint:
    path: /phoneid
    method: GET
    data_selector: response
    params: {}
- name: Phone ID
  endpoint:
    path: /enterprise/docs/phone-id-overview
    method: GET
    data_selector: records
- name: phone_id
  endpoint:
    path: /phoneid
    method: GET
    data_selector: phone_type
    params: {}
- name: phone_id
  endpoint:
    path: /phoneid
    method: GET
    data_selector: response
- name: phone_id_live_status
  endpoint:
    path: /v1/phoneid/live/{complete_phone_number}
    method: GET
    data_selector: status
    params: {}
- name: phone_id_live_status
  endpoint:
    path: /phoneid/livestatus
    method: GET
- name: phone_id_live_status
  endpoint:
    path: /v1/phoneid/live/{complete_phone_number}
    method: GET
    params: {}
- name: send_sms
  endpoint:
    path: /v1/messaging
    method: POST
    data_selector: reference_id
    params: {}
- name: messaging
  endpoint:
    path: /v1/messaging
    method: POST
    data_selector: response
    params: {}
- name: send_sms
  endpoint:
    path: /v1/messaging
    method: POST
    data_selector: response
    params: {}
- name: SMS
  endpoint:
    path: /sms
    method: POST
- name: sms
  endpoint:
    path: /sms/message
    method: POST
- name: send_sms
  endpoint:
    path: /sms/send
    method: POST
    data_selector: response
- name: send_sms
  endpoint:
    path: /sms/send
    method: POST
    data_selector: response
    params: {}
- name: send_sms
  endpoint:
    path: /v1/messaging
    method: POST
- name: sendSMS
  endpoint:
    path: /sms/send
    method: POST
    data_selector: response
- name: SMS
  endpoint:
    path: /sms
    method: POST
- name: send_sms
  endpoint:
    path: /v1/messaging
    method: POST
    data_selector: response
    params: {}
- name: success_callback
  endpoint:
    path: /callback_endpoint
    method: POST
    data_selector: status
    params: {}
- name: failure_callback
  endpoint:
    path: /callback_endpoint
    method: POST
    data_selector: status
    params: {}
- name: bulk_sms
  endpoint:
    path: /v1/verify/bulk_sms
    method: POST
    data_selector: status
    params: {}
- name: bulk_sms
  endpoint:
    path: /sms/send-bulk-sms
    method: POST
- name: bulk_delivery_status
  endpoint:
    path: /sms/track-bulk-delivery-status
    method: GET
- name: bulk_sms_callback
  endpoint:
    path: /callback_endpoint
    method: POST
    data_selector: status
    params: {}
- name: bulk_delivery_status
  endpoint:
    path: /sms/track_bulk_delivery_status
    method: GET
- name: verify_sms
  endpoint:
    path: /v1/verify/sms
    method: POST
    data_selector: reference_id
- name: transaction_status
  endpoint:
    path: /v1/verify/status
    method: GET
    data_selector: status
- name: completions
  endpoint:
    path: /v1/verify/completion
    method: POST
    data_selector: completion_status
- name: send_sms_verify_code
  endpoint:
    path: /v1/verify/sms
    method: POST
- name: sms_verify
  endpoint:
    path: /sms/verify
    method: POST
    data_selector: response
    params: {}
- name: sms_verify
  endpoint:
    path: /verify/sms
    method: POST
    data_selector: response
    params: {}
- name: sms_verify
  endpoint:
    path: /sms
    method: POST
    data_selector: response
    params: {}
- name: send_otp
  endpoint:
    path: /sms/verify
    method: POST
    data_selector: response
    params: {}
- name: sms_verify
  endpoint:
    path: /sms/verify
    method: POST
    data_selector: response
    params: {}
- name: verify_sms
  endpoint:
    path: /v1/verify/sms
    method: POST
    data_selector: response
    params: {}
- name: send_otp
  endpoint:
    path: /sms/verify
    method: POST
    data_selector: response
    params: {}
- name: sms_verify
  endpoint:
    path: /sms/verify
    method: POST
    data_selector: response
    params: {}
- name: send_sms
  endpoint:
    path: /v1/verify/sms
    method: POST
    data_selector: reference_id
    params:
      phone_number: required
      verify_code: required
      template: optional
- name: complete_verification
  endpoint:
    path: /v1/verify/completion/{reference_id}
    method: PUT
    data_selector: reference_id
- name: send_sms_verify
  endpoint:
    path: /v1/verify/sms
    method: POST
    data_selector: reference_id
    params:
      phone_number: required
      template: optional
- name: get_verification_status
  endpoint:
    path: /v1/verify/{reference_id}
    method: GET
    data_selector: status
    params:
      verify_code: required
- name: send_sms
  endpoint:
    path: /v1/verify/sms
    method: POST
    data_selector: reference_id
    params:
      phone_number: required
      transaction_amount: required
      transaction_payee: required
      template: optional
- name: get_sms_status
  endpoint:
    path: /v1/verify/{reference_id}
    method: GET
    data_selector: verify
    params: {}
- name: verify
  endpoint:
    path: /v1/verify/{reference_id}
    method: GET
    data_selector: status
    params:
      verify_code: verify_code
- name: send_sms_verify
  endpoint:
    path: /v1/verify/sms
    method: POST
    data_selector: reference_id
    params:
      phone_number: required
      template: optional
- name: get_sms_verify_status
  endpoint:
    path: /v1/verify/{reference_id}
    method: GET
    data_selector: status
- name: send_sms
  endpoint:
    path: /v1/verify/sms
    method: POST
    data_selector: reference_id
    params:
      phone_number: '5552345678'
      template: Your code is $$CODE$$
      sim_swap_check: 'true'
- name: callback
  endpoint:
    path: /callback_endpoint
    method: POST
    data_selector: status
    params: {}
- name: get_sms_verify_status
  endpoint:
    path: /v1/verify/{reference_id}
    method: GET
    data_selector: status.code
    params: {}
- name: SMPP TLVs
  endpoint:
    path: /sms/smpp/tlvs
    method: GET
- name: verification_process
  endpoint:
    path: /enterprise/docs/verify-api-get-started
    method: GET
    data_selector: verification_methods
    params: {}
- name: code_validity
  endpoint:
    path: /verify/api/code_validity
    method: GET
    data_selector: code_validity_data
    params: {}
- name: sms
  endpoint:
    path: /sms
    method: POST
    data_selector: data
    params: {}
- name: verification_process
  endpoint:
    path: /verification
    method: POST
    data_selector: reference_id
    params:
      recipient.phone_number: ''
      verification_policy[0].method: ''
      verification_policy[0].fallback_time: ''
      verification_policy[1].method: ''
      security_factor: ''
      message_template.name: ''
- name: update_verification_process
  endpoint:
    path: /verification/{reference_id}/state
    method: PATCH
    data_selector: status
    params:
      action: finalize
      security_factor: ''
- name: verification_process
  endpoint:
    path: /verification
    method: POST
    data_selector: status
    params: {}
- name: update_verification_process
  endpoint:
    path: /verification/{reference_id}/state
    method: PATCH
    data_selector: status
    params: {}
- name: verification_process
  endpoint:
    path: /verification
    method: POST
    data_selector: recipient
    params: {}
- name: create_verification_process
  endpoint:
    path: /verification
    method: POST
    data_selector: reference_id
    params:
      recipient.phone_number: Digits without spaces or special characters, beginning
        with the country dialing code.
      verification_policy[0].method: sms
      security_factor: A numeric code, formatted as a string.
- name: update_verification_process
  endpoint:
    path: /verification/{reference_id}/state
    method: PATCH
    data_selector: status
    params:
      action: finalize
      security_factor: A string consisting of a series of numeric digits.
- name: verification
  endpoint:
    path: /verification
    method: POST
    data_selector: verification_policy
    params:
      recipient.phone_number: Digits without spaces or special characters, beginning
        with the country dialing code.
      verification_policy[0].method: whatsapp
      verification_policy[0].fallback_time: A time in seconds.
      verification_policy[1].method: sms
      security_factor: A numeric code, formatted as a string.
      message_template.name: A string consisting only of lowercase alpha characters
        and underscores.
- name: update_verification
  endpoint:
    path: /verification/{reference_id}/state
    method: PATCH
    data_selector: status
    params:
      action: finalize
      security_factor: A string consisting of a series of numeric digits.
- name: verification
  endpoint:
    path: /verification
    method: POST
    data_selector: ''
    params:
      recipient.phone_number: Digits without spaces or special characters, beginning
        with the country dialing code.
      verification_policy[0].method: viber
      verification_policy[0].fallback_time: A time in seconds.
      verification_policy[1].method: sms
      security_factor: A numeric code, formatted as a string.
      message_template.name: A string consisting only of lowercase alpha characters
        and underscores.
- name: update_verification
  endpoint:
    path: /verification/{reference_id}/state
    method: PATCH
    data_selector: ''
    params:
      action: finalize
      security_factor: A string consisting of a series of numeric digits.
- name: verification
  endpoint:
    path: /verification
    method: POST
    data_selector: state
    params: {}
- name: update_verification
  endpoint:
    path: /verification/{reference_id}/state
    method: PATCH
    data_selector: status
    params: {}
- name: update_verification_process
  endpoint:
    path: /verification/{verification_id}/state
    method: PATCH
    data_selector: status
    params:
      action: finalize
      security_factor: string
- name: verification
  endpoint:
    path: /verification
    method: POST
    data_selector: reference_id
    params: {}
- name: verification
  endpoint:
    path: /verification
    method: POST
    data_selector: ''
    params:
      recipient.phone_number: Digits without spaces or special characters, beginning
        with the country dialing code.
      verification_policy[0].method: voice
      verification_policy[1].method: sms
      voice_lang: en-US
- name: update_verification
  endpoint:
    path: /verification/{reference_id}/state
    method: PATCH
    data_selector: ''
    params:
      action: finalize
      security_factor: A string consisting of a series of numeric digits.
- name: create_verification_process
  endpoint:
    path: /enterprise/reference/createverificationprocess
    method: POST
    data_selector: reference ID, mobile app token
    params: {}
- name: retrieve_verification_process
  endpoint:
    path: /enterprise/reference/getverificationprocess
    method: GET
    data_selector: verification state
    params: {}
- name: verification
  endpoint:
    path: /enterprise/reference/createverificationprocess
    method: POST
    data_selector: verification_process
    params: {}
- name: get_verification
  endpoint:
    path: /enterprise/reference/getverificationprocess
    method: GET
    data_selector: verification_status
    params: {}
- name: QR Verify
  endpoint:
    path: /enterprise/docs/verify-api-get-started-with-qr-verify
    method: GET
    data_selector: instructions
    params: {}
- name: voice_action
  endpoint:
    path: /v2/voice
    method: POST
    data_selector: params
- name: dial
  endpoint:
    path: /voice/actions/dial
    method: POST
    data_selector: params
- name: dial_session
  endpoint:
    path: /voice/actions/dial_session
    method: POST
    data_selector: params
- name: hangup
  endpoint:
    path: /voice/actions/hangup
    method: POST
    data_selector: params
- name: play
  endpoint:
    path: /voice/actions/play
    method: POST
    data_selector: params
- name: play_multiple
  endpoint:
    path: /voice/actions/play_multiple
    method: POST
    data_selector: params
- name: record_pause
  endpoint:
    path: /record_pause
    method: POST
    data_selector: params
    params:
      reference_id: BC96D7B0D1800164898350B4E71B005C
- name: record_resume
  endpoint:
    path: /record_resume
    method: POST
    data_selector: params
    params:
      reference_id: BC96D7B0D1800164898350B4E71B005C
- name: record_start
  endpoint:
    path: /record_start
    method: POST
    data_selector: params
    params:
      reference_id: BC96D7B0D1800164898350B4E71B005C
- name: record_stop
  endpoint:
    path: /record_stop
    method: POST
    data_selector: params
    params:
      reference_id: BC96D7B0D1800164898350B4E71B005C
- name: speak
  endpoint:
    path: /speak
    method: POST
    data_selector: params
    params:
      tts:
        message: <speak>Press <prosody volume='loud'>1</prosody> for your account
          balance. Press <prosody volume='loud'>2</prosody> to speak with a customer
          service representative.</speak>
        language: en-US
        type: ssml
      collect_digits:
        max: 1
        timeout: 10000
        inter_digit_timeout: 3000
        terminators: '*'
- name: send_dtmf
  endpoint:
    path: /send_dtmf
    method: POST
    data_selector: params
    params:
      dtmf: 1ww23w4567890ABCD*#
- name: call_completed
  endpoint:
    path: /call/completed
    method: POST
    data_selector: data
    params: {}
- name: call_leg_completed
  endpoint:
    path: /call/leg/completed
    method: POST
    data_selector: data
    params: {}
- name: send_dtmf_completed
  endpoint:
    path: /send/dtmf/completed
    method: POST
    data_selector: data
    params: {}
- name: incoming_call
  endpoint:
    path: /events/incoming_call
    method: POST
    data_selector: ''
    params: {}
- name: dial_completed
  endpoint:
    path: /events/dial_completed
    method: POST
    data_selector: ''
    params: {}
- name: dial_session_completed
  endpoint:
    path: /events/dial_session_completed
    method: POST
    data_selector: ''
    params: {}
- name: play_completed
  endpoint:
    path: /events/play_completed
    method: POST
    data_selector: ''
    params: {}
- name: play_multiple_completed
  endpoint:
    path: /events/play_multiple_completed
    method: POST
    data_selector: ''
    params: {}
- name: speak_completed
  endpoint:
    path: /events/speak_completed
    method: POST
    data_selector: ''
    params: {}
notes:
- Uses OAuth2 for authentication.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- Some objects like Contact may return nulls in deeply nested fields
- Updating a verification process is a mandatory step when using Verify API.
- If you use a Telesign SDK to make your request, authentication is handled behind-the-scenes
  for you.
- All you need to provide is your Customer ID and API Key.
- Uses OAuth2 with refresh token — requires setup of connected app in telesign
- Using your account credentials in the API Explorer to make a request results in
  your account being charged for the transaction.
- An OTP is not generated if the telephony provider fails during the test.
- Okta enforces a rate limit to protect against brute-force attacks on the phone authenticator.
- Okta only allows one active telephony inline hook.
- OTP verification is currently available to all Full-service customers using our
  REST API.
- Accepts only UTF-8 unicode characters as inputs.
- Responds with application/json.
- Some objects may return nulls in deeply nested fields
- To add this product to your account, contact a Telesign expert. This product is
  available for full-service accounts only.
- If connection to a mobile network cannot be established, a fallback verification
  method is recommended.
- If you want to send OTP messages, Telesign recommends using Telesign SMS Verify
  API.
- Although the SMS channel is technically usable with any template, we recommend only
  using it for a fallback message, not as the primary channel.
- Ensure to check the API rate limits.
- Be sure to use the Deactivated Numbers API with your Telesign SMS and/or SMS Verify
  API integration.
- To use this product, you must buy a phone number or short-code from Telesign.
- This product is available for full-service accounts only.
- Uses HTTPS protocol for every request
- TLS is required for both Basic and Digest authentication methods
- Telesign's phone cleansing system auto-corrects improperly formatted phone numbers.
- Some operations may be rate limited.
- Updating a verification process using the procedure explained in each channel's
  Complete verification and get delivery status section is a mandatory step when using
  Verify API.
- Accepts only UTF-8 encoded unicode characters as inputs
- Confirm with Customer Support Team that the channels you want to use for receiving
  inbound messages from end-users have been enabled.
- MO keyword handling feature is available for RCS, WhatsApp, and SMS channels.
- This is a web service created by you, to receive notifications from Telesign.
- This web service created by you, to receive notifications from Telesign.
- Accounts API is currently available on a limited basis.
- Rate limit applies as per product.
- Sending too many request to the API for the same phone number within a short period
  of time may result in an error.
- The URL for this request expired after 30 days.
- This feature is currently available for customers with end users in select countries.
- The FlowBuilder API requires an external authentication service that issues an access
  token.
- This endpoint starts a transactional flow inside the Flow Builder.
- Contact our sales team for availability of supported verification methods in your
  region.
- Uses OAuth2 for authentication
- Rate limit applies.
- Response format is application/json.
- Accounts API is currently available on a limited basis. Contact our Customer Support
  Team if you’d like to explore using this API.
- The request must contain a valid flowId and a dataToReplace object whose keys match
  the parameters defined when the flow was created.
- Before you begin testing, ensure you have Telesign authentication credentials (API
  Key and Customer ID).
- Uses OAuth2 with refresh token — requires setup of connected app in Telesign
- China and India each use a single time zone for the entire country, despite their
  large size.
- Authentication is optional, but recommended.
- Automated failover is enabled by default for all products except for Voice.
- Some behaviors, features, and default settings can vary depending on factors such
  as the carrier, country, language, and other variables.
- The verification code length is set up by our Customer Support Team. Please contact
  them to configure this code.
- Only one Finalize request is allowed for any given transaction.
- Ensure that end user devices communicate to your server securely when initiating
  the App Verify API flash call.
- Do not store your API key on the application for communication with Telesign.
- Review required permissions for API access
- To implement frictionless app verification, your app must have permission from Google
  to access call logs.
- It's important to change how you parse the data depending on the specific carrier's
  requirements.
- The age of data provided in these reports is 'previous day', across all carriers.
- The deactivation period is 2 days, for all carriers except for Boost, Sprint, and
  Verizon Wireless.
- Requires setup of connected app in Telesign
- SMPP integration is available for full-service accounts only.
- If your Telesign integration uses SMPP, you can only receive MO message notifications
  via SMPP.
- Allows you to send a response notifying the end user that their phone number was
  removed from a list controlled and managed by you.
- Sends a custom response that you created to end users that are seeking assistance
  or information.
- This procedure only applies to an HTTP setup.
- 'Responds With: application/json'
- Ensure to handle the response for success and failure cases.
- If using rest.telesign.com endpoints, upgrade to rest-ww.telesign.com for better
  performance.
- File must be in CSV format
- Required fields include phone_number and label
- Telesign Reference ID must be in UUID format
- Ensure correct permissions are configured for API access
- The `verify` object is only returned in the get transaction status response when
  an OTP code is auto-generated by Telesign.
- You can use get transaction status to retrieve the status of a transaction for up
  to 12 hours after you send your request.
- To receive callbacks, a Telesign Messaging request must be made.
- You can only send MMS messages from US sender IDs and only with short codes.
- Currently RCS is not supported by iOS devices.
- Currently RCS is not supported by iOS devices. We recommend either ensuring your
  end users have supported devices or including a fallback channel for iOS users.
- If the request is processed successfully, you should see a response with a `3001`
  status code.
- This API requires authentication.
- One-tap autofill buttons are only supported on Android.
- Zero-tap authentication templates are only supported on Android.
- To add this product to your account, contact a Telesign expert.
- The Transaction Callback Service is also where you would receive inbound replies
  from the recipient of your Messaging message.
- If an end user does not have WhatsApp, the WhatsApp send will fail.
- Requires setup of Transaction Callback Service to receive delivery status updates.
- If an end user does not have WhatsApp, the WhatsApp send will fail. We recommend
  either ensuring your end users have WhatsApp on their devices or including a fallback
  channel for users without WhatsApp.
- This API supports sending text-only messages with Viber.
- Transaction Callback Service is required for delivery status updates.
- If an end user does not have Viber, the Viber send will fail.
- The Transaction Callback Service is where you get delivery status updates from the
  recipient of your message.
- Ensure API keys are set up correctly in your Telesign account
- The Transaction Callback Service is also where you would receive inbound replies
  from the recipient of your message.
- In addition to the reference ID for the Messaging transaction itself, the delivery
  status payload also includes a reference ID for the message-send on each channel.
  These can be useful for troubleshooting purposes.
- Requires setup of Viber for your account
- Requires setup of Viber integration in Telesign.
- The Transaction Callback Service is where you would receive inbound replies from
  the recipient of your message.
- This API requires setup of connected app in Telesign
- Make sure Telesign Messaging is enabled for your account.
- Accepts only UTF-8 unicode characters as inputs
- Accepts application/json
- This website utilizes technologies such as cookies to enable essential site functionality,
  as well as for analytics, personalization, and targeted advertising purposes.
- You must use only SMS capable numbers from Telesign as masking IDs when using this
  action.
- You are billed for two text messages for each anonymous session.
- Telesign calls have a maximum call duration of four hours.
- This API requires specific authentication setup.
- A dedicated phone number purchased from Telesign is required for SMS.
- Customers interested in using voice will need to purchase a dedicated phone number
  from Telesign to use as a Voice Caller ID.
- Request for OTP includes phone number and message template.
- You may customize the SMS message sent to the end user using Okta procedure.
- The 3001 status code ('Message in progress') is used by Telesign when a request
  is processed successfully.
- If the request is NOT processed successfully, a response other than '3001' is sent.
- English (US) is the default language for any Okta-supported language that Telesign
  does not support.
- Supports sending OTP-only SMS and voice messages.
- Use '1111' instead of '${otp}' during testing.
- You will need to purchase a dedicated phone number from Telesign to use as a Sender
  ID for SMS messages and/or a Voice Caller ID for voice messages for production use.
- Uses OAuth2 authentication.
- You will need to purchase a dedicated phone number from Telesign to use as a Sender
  ID for SMS messages.
- You are limited to 160 characters for the message.
- Default language for Voice Verify API text-to-speech is English (en-US).
- Default language for SMS Verify API text-to-speech is English (en-US).
- To add this feature to your account, contact a Telesign expert. This feature is
  available for full-service accounts only.
- Confirm with Customer Support Team which countries you expect to be performing checks
  for before using this feature.
- Ensure to handle API rate limits.
- Email ID feature is available for Full-service accounts only.
- The Email ID feature of Contact is available for Full-service accounts only. It
  is only available in limited markets.
- Authentication setup required for API access
- To add this feature to your account, contact a Telesign expert.
- Requires setup of connected app in api
- To add Subscriber Status feature, contact a Telesign expert.
- Requires Telesign Customer ID and API Key for authentication
- To use Contact Match, ensure the identity attribute is enabled by Telesign.
- Authentication credentials include Customer ID and API Key.
- Contact Match identity attribute must be enabled by Telesign.
- Make sure the Number Deactivation identity attribute is enabled by Telesign.
- This tutorial applies only to self-service accounts, not full-service accounts.
- This API utilizes various endpoints for messaging, number verification, and account
  management.
- Check phone type to block VoIP with Telesign PHP SDK
- Requires Customer ID and API Key for authentication.
- Ensure proper authentication setup as per Telesign documentation.
- Uses OAuth2 with refresh token.
- In your production integration, have phone_number pull from your recipient database
  instead of hardcoding it.
- You will only receive these callbacks if you've made a Telesign SMS request.
- This page assumes you can receive Telesign notifications at a callback service you
  control.
- API Key and Customer ID are necessary for authentication.
- You will only receive these callbacks if you've made a Bulk SMS request.
- We strongly recommend generating IDs so you can track the status of each send.
- Ensure to check the API rate limits to avoid throttling.
- To enable SMPP for your account, contact a Telesign expert.
- The SDKs apply Digest authentication whenever they make a request to a Telesign
  service where it is supported.
- When Digest authentication is not supported, the SDKs apply Basic authentication.
- Use sms_verify as the project name.
- The method used to generate a code is actually pseudo-random.
- Use the Full-service SDK for SMS Verify API even if you have a Self-service account.
- Uses Basic authentication — requires Customer ID and API Key
- Verify Plus and SIM Swap aren't required for verification, but provide an extra
  layer of security.
- You must buy a 'from' phone number from Telesign before sending OTPs to any number
  other than the one you registered your account with.
- Sending completion data helps identify and fix issues with delivery.
- The status.code property gives you status of delivery to the destination carrier,
  not necessarily all the way to the end-user.
- If the verify.code_state property is EXPIRED or MAX_ATTEMPTS_EXCEEDED, the verification
  code is no longer matchable.
- This guide assumes that Telesign is generating the verification code for you.
- Once Verify Plus is activated for your account, all requests to phone numbers of
  your configured countries are evaluated by Verify Plus.
- If the verification message is not sent due to a high risk recommendation, the property
  status.code in the response has a value of 233.
- Set up Transaction Callback Service to receive notifications about the status of
  your transactions.
- To set up this feature for your account, contact our Customer Support Team.
- Some endpoints require specific permissions.
- Updating a verification process is mandatory to avoid extra costs.
- You can generate your own OTP or let Telesign generate it for you.
- You must use the same template name for each of your active channels if you are
  utilizing a fallback channel.
- Make sure Telesign Verify is enabled for your account. Contact our Customer Support
  Team to enable this product.
- The template name is specified only once in the POST request.
- Updating the verification process is mandatory to ensure proper functionality.
- Contact our sales team for availability of Silent Verify in your region. This product
  is available for full-service accounts only.
- Silent verification fails over to SMS verification.
- Push Verify set as the primary verification method
- SMS one-time passcode (OTP) set as the fallback verification method
- Push Verify callback service unlocks additional valuable information about what
  happens after the push notification arrives.
- 'LIMITED RELEASE: For customers who opt in to our early access program, QR Verify
  is now available for use with Verify API.'
- Implement Verify API and Verify Mobile SDK to your website as well as to your mobile
  app. This is required in order for QR Verify to work successfully.
- Do not poll any more frequently than once every 5 seconds.
- Use only codecs and standards for audio files supported by Voice.
errors:
- System Unavailable, please try again later.
- '200: Delivered to handset'
- '203: Delivered to gateway'
- '207: Error delivering SMS to handset (reason unknown)'
- '210: Temporary phone error'
- '211: Permanent phone error'
- '220: Gateway/network cannot route message'
- '221: Message expired before delivery'
- '222: SMS not supported'
- '229: Message blocked by customer request'
- '230: Message blocked by Telesign'
- '231: Invalid/unsupported'
- '233: Message blocked due to high risk score.'
- '237: Message blocked in requested country'
- '250: Final status unknown'
- '251: Message successfully sent out for delivery, however final confirmation of
  delivery to handset was not received.'
- '290: Message in progress'
- '292: Queued by gateway'
- '295: Status delayed'
- '500: Transaction not attempted'
- '501: Not authorized'
- '502: Campaign error'
- '503: Carrier rejected - temporary problem'
- '504: Carrier rejected - permanent error'
- '505: Error on gateway - temporary error'
- '506: Error on gateway - permanent error'
- '507: Invalid destination address'
- '508: Invalid source address'
- '509: Parameters problem'
- '510: Message blocked by subscriber action or request'
- '511: Subscriber low on credit'
- '512: Roaming error'
- '513: Mobile number portability error'
- '514: Subscriber absent'
- '515: Suspected spam'
- '517: Selected DLT details for India not supported'
- '518: Message blocked due to high risk SIM SWAP indicator'
- '519: Message not sent - requested SIM SWAP check could not be performed'
- '520: Content sent is not allowed'
- '521: Requested Sender ID is not allowed for destination'
- '599: Status not available'
- '-10001: Invalid Request: ReferenceID Parameter: <reference_id>'
- '-10001: Invalid Request: CustomerID Parameter: <customer_id>'
- '-10001: Invalid Request: AuthenticationID'
- '-10001: Invalid Request: CustomerID/AuthenticationID Parameter: <customer_id>/<authentication_id>'
- '-10001: Invalid Request: customer_id Parameter: <customer_id>'
- '-10001: Not Allowed Host: Hostname Parameter: <parameter>'
- '-10001: Not Allowed Host: IP Parameter: <parameter>'
- '-10009: Invalid source IP address.'
- '-20001: Invalid Request: CustomerID Parameter: <customer_id>'
- '-20002: This product is not enabled for this Customer ID.'
- '-30000: Invalid Customer ID.'
- '-30001: Customer ID Account Suspended.'
- '-30002: Customer ID Account Not Activated.'
- '-30003: Customer ID new account limit reached.'
- '-30004: Missing required ''Authorization'' header'
- '-30005: Required ''Authorization'' header is not in the correct format'
- '-30006: Invalid Signature'
- '-30007: Missing required ''Date'' or ''x-ts-date'' header'
- '-30008: Invalid ''x-ts-auth-method'' header.'
- '-30009: ''Date'' or ''x-ts-date'' header is not RFC822 compliant'
- '-30010: ''Date'' or ''x-ts-date'' header is not within tolerable range'
- '-30011: ''x-ts-nonce'' header value is either too long or too short'
- '-30012: ''x-ts-nonce'' header value has been used recently'
- '-30015: Invalid API Key.'
- '-10001: CustomerID/ReferenceID not found'
- '-10001: CustomerID/ReferenceID not found: CustomerID/ReferenceID Parameter: <parameter>'
- '-10004: Reference ID expired.'
- '-40007: Rate Limit Exceeded'
- '-40008: <product> exceeded transaction hard cap. Request denied.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- '3500: System Unavailable - The system is currently unavailable. You should resubmit
  this request.'
- '3101: Invalid value for parameter phone_number'
- '3204: Rate Limit Exceeded'
- '3110: Invalid request'
- '400 Bad Request: Check request parameters.'
- '401 Unauthorized: Verify API credentials.'
- '500 Internal Server Error: Retry the request.'
- 'INVALID_PHONE_NUMBER: Ensure the phone number is properly formatted'
- '400: Bad Request: Invalid parameter passed'
- '401: Unauthorized: CustomerID does not exist/Account suspended'
- '403: Invalid Token: Parameter doesn''t match'
- '404: Not Found: Invalid URI'
- '429: Too Many Requests: Rate limit exceeded'
- '500: Invalid Transaction: Transaction not attempted'
- '503: Service Unavailable: System unavailable; try again later'
- '3500: System Unavailable'
- '400 Bad request: The request could not be understood by the server due to malformed
  syntax.'
- '401 Unauthorized: You are not permitted to perform this action.'
- '429 Too Many Requests: Your account has sent too many requests in a given amount
  of time.'
- '3101: Invalid value for parameter phone_number: {phone_number}'
- '3103: Unsupported value for parameter external_id'
- '3302: Missing parameter phone_number'
- '3203: Callback URL parameter not enabled for Customer ID'
- '3400: Not authorized'
- '3906: Unified Verification Product not enabled for Customer ID'
- '400: Bad request. The request could not be understood by the server due to malformed
  syntax.'
- '500: Transaction not attempted.'
- '500: Transaction not attempted: -10009: Invalid source IP address'
- '500: Transaction not attempted: -10033: {phone_number} has not been verified for
  this trial account.'
- '501: Not authorized: -20002: This product is not enabled for this Customer ID.'
- '501: Not authorized: -30000: Invalid Customer ID.'
- '501: Not authorized: -30001: Customer ID Account Suspended.'
- '501: Not authorized: -30004: Missing required ''Authorization'' header'
- '501: Not authorized: -30005: Required ''Authorization'' header is not in the correct
  format'
- '501: Not authorized: -30006: Invalid Signature'
- '501: Not authorized: -30007: Missing required ''Date'' or ''x-ts-date'' header'
- '500: Transaction not attempted: -30008: Invalid ''x-ts-auth-method'' header.'
- '501: Not authorized: -30009: ''Date'' or ''x-ts-date'' header is not RFC822 compliant'
- '501: Not authorized: -30010: ''Date'' or ''x-ts-date'' header is not within tolerable
  range'
- '501: Not authorized: -30011: ''x-ts-nonce'' header value is either too long or
  too short'
- '501: Not authorized: -30012: ''x-ts-nonce'' header value has been used recently'
- '501: Not authorized: -30015: Invalid API Key.'
- 503 - System Unavailable
- '400 Bad request: The request could not be understood by the server due to malformed
  syntax. Code against the Telesign status or error codes from the status.code and
  errors.code properties in the response payload, rather than the HTTP status code
  of the response.'
- '401 Unauthorized: The request requires user authentication. Code against the Telesign
  status or error codes from the status.code and errors.code properties in the response
  payload, rather than the HTTP status code of the response.'
- '404 Not found: The server has not found anything matching the request URI. Code
  against the Telesign status or error codes from the status.code and errors.code
  properties in the response payload, rather than the HTTP status code of the response.'
- '-10030: Insufficient funds in prepaid wallet. A top-up of prepaid wallet is needed.'
- '503: System Unavailable, Please try again later.'
- '518: Message blocked due to high risk SIM swap indicator.'
- '519: Message not sent - requested SIM swap check could not be performed.'
- 503 Service unavailable. The system is unavailable, try again.
- '400: Bad request due to malformed syntax. Code against the Telesign status or error
  codes from the status.code and errors.code properties in the response payload, rather
  than the HTTP status code of the response.'
- '401: Unauthorized. The request requires user authentication. Code against the Telesign
  status or error codes from the status.code and errors.code properties in the response
  payload, rather than the HTTP status code of the response.'
- '404: Not found. The server has not found anything matching the request URI. Code
  against the Telesign status or error codes from the status.code and errors.code
  properties in the response payload, rather than the HTTP status code of the response.'
- '-10001: Not Allowed Host'
- '-30011: x-ts-nonce'' header value is either too long or too short'
- '-10004: Reference ID expired'
- '-40008: {product} exceeded transaction hard cap. Request denied.'
- '-90001: System Unavailable, please try again later.'
- 503 Service Unavailable
- 10000 System unavailable, please try again later
- 45005 Error on gateway - temporary error
- 45006 Error on gateway - permanent error
- '4501: Successfully verified'
- '4502: The phone number does not match'
- '10004: Bad request'
- '40003: No end client data found on records'
- '40004: The required parameter ‘verification’ is missing from the request'
- '40010: Not in coverage. The phone number being verified is not within the provider''s
  network.'
- '40002: Not authorized'
- '10011: Invalid value for parameter reference_id'
- '40001: Request timeout'
- '10019: Rate limit exceeded'
- '10039: Internal Server Error'
- '503 Service Unavailable: System unavailable, please try again later'
- 400 response
- 401 response
- 408 response
- 429 response
- 500 response
- '11000: Invalid value for parameter phone_number'
- '45010: Provider not found to route the request. This is a permanent error probably
  due to configuration issues.'
- '500: System Unavailable, please try again later.'
- '401: Unauthorized. The request requires user authentication.'
- '429: Too Many Requests. The user sent too many requests in a given amount of time.'
- '503 Service unavailable: The system is currently unavailable. The request should
  be resubmitted.'
- '3500 System Unavailable: The system is currently unavailable. The request should
  be resubmitted.'
- '401 Unauthorized: The request requires user authentication.'
- '429 Too many requests: The user sent too many requests in a given amount of time.'
- '429 Too many requests: Too many requests sent to this API in a given amount of
  time.'
- '3041: Carrier rejected - temporary problem'
- '503 Service unavailable: The system is unavailable, try again.'
- '3041 Carrier rejected - temporary problem: The channel provider failed to respond.
  The request should be resubmitted.'
- 400 - Invalid value for reference id
- 401 - Invalid API Key
- 404 - Reference ID expired
- 429 - Rate limit exceeded
- 503 - System unavailable
- '404 Not Found: The server has not found anything matching the Request-URI.'
- '429 Too Many Requests: The user sent too many requests in a given amount of time.'
- '10000: System Unavailable, Please try again later.'
- '11000: Invalid value for parameter phone_number.'
- '11001: Invalid country code for parameter phone_number.'
- '11003: Invalid value for parameter account_lifecycle_event.'
- '11004: Invalid value for parameter callback_url.'
- '11009: Invalid value for parameter message.'
- '11010: Invalid value for parameter originating_ip.'
- '11013: Invalid value for parameter sender_id.'
- '11016: Invalid value for parameter external_id.'
- '11017: Invalid value for parameter message_type.'
- '12000: Missing Required Parameter phone_number.'
- '12009: Missing Required Parameter message.'
- '12017: Missing Required Parameter message_type.'
- '400 Bad request: the request could not be understood by the server due to malformed
  syntax.'
- '401 Unauthorized: the request requires user authentication.'
- '404 Not Found: the server has not found anything matching the Request-URI.'
- '429 Too Many Requests: the user sent too many requests in a given amount of time.'
- '404 Not found: The server has not found anything matching the request URI.'
- 400 Bad Request
- 401 Unauthorized
- 404 Not Found
- '401 Unauthorized: Insufficient permissions to access this resource or authorization
  failed.'
- '429 Too many requests: Allowed number of requests per second for this product or
  feature has been exceeded.'
- '3500: System Unavailable: The system is currently unavailable. The request should
  be resubmitted.'
- '3301: Missing parameter channel'
- '3802: Missing parameter name'
- '3803: Missing parameter type'
- '3815: Missing parameter content'
- '3816: Invalid value for parameter category'
- '3817: Invalid value for parameter language'
- '3819: Invalid value for parameter sample_text'
- '3856: Invalid value for parameter name'
- '3818: Template Management Product not enabled for Customer ID'
- '3204: Rate limit exceeded'
- '429 Too many requests: Too many requests sent to this service in a given amount
  of time.'
- '1500: Delivered'
- '3850: Template successfully created'
- '3851: Template approved by provider'
- '3852: Template rejected by provider'
- '3853: Template successfully removed'
- '3854: Template flagged by provider'
- '3855: Template disabled by provider'
- '3857: Removal unsuccessful - provider temporary problem'
- '238: Destination blocked by prefix'
- '286: Transaction not attempted'
- 503 Service unavailable.
- 2704 Request for creating session failed, internal error
- '2700: Session successfully created'
- '2701: Session successfully created, the country codes of the phone number and assigned
  masked_id differs'
- '2702: Request for creating session failed, there isn''t available masked_id'
- '2703: Request for creating session failed, invalid session type'
- '2705: Request for creating session failed, validity_period must be integer greater
  than zero'
- '2706: Request for creating session failed, phone number {phone_number} blocked
  by Telesign'
- '2707: Request for creating session failed, phone number {phone_number} blocked
  by customer'
- '2708: Request for creating session failed, phone_number_1 and phone_number_2 parameters
  cannot be the same value'
- '2704: Request for creating session failed, internal error'
- '503: Service unavailable. The system is unavailable, try again.'
- '400: Bad Request'
- '401: Unauthorized'
- '404: Not Found'
- '400: Bad Request. Your request contains invalid parameters or is missing required
  parameters.'
- '401: Unauthorized. Customer ID and/or API Key were not provided or were not valid.'
- '404: Not Found. No records were found matching the details of your request.'
- 'rate_limit_exceeded: Account has exceeded rate limit for either outbound or inbound
  requests. Action rejected.'
- '400: caller_id_number_not_owned'
- '400: caller_id_number_not_provided'
- '400: invalid_phone_number'
- '400: to_number_not_provided'
- '400: unsupported_call_state'
- '401: credentials_not_provided'
- '401: not_authorized'
- 400 - Invalid value for path parameter
- 401 - Authentication failed
- 403 - Resource forbidden
- 429 - Rate limit error
- '400 Bad Request: Invalid value for body parameter {param name}.'
- '401 Unauthorized: Authentication failed.'
- '403 Forbidden: No permissions for this resource.'
- '429 Rate limit exceeded: Rate limit exceeded.'
- 200 - Success
- 400 - Invalid body param
- 400 - Invalid path parameter
- '400 Bad Request: Invalid value for path parameter {param name}'
- '401 Unauthorized: The request requires user authentication. Customer ID and/or
  API Key were not provided or were not valid.'
- '403 Forbidden: This user does not have access to this resource.'
- '404 File not found: The file was not available to retrieve.'
- '500 Internal server error: There was a problem on our side. Try again later.'
- 400 Bad request, the request could not be understood by the server due to malformed
  syntax.
- 401 Unauthorized, the request requires user authentication.
- 402 Payment Required.
- 404 Not Found, the server has not found anything matching the Request-URI.
- 429 Too Many Requests, the user sent too many requests in a given amount of time.
- 500 Invalid Transaction, transaction not attempted.
- 503 Service Unavailable, system unavailable, try again.
- '402 Payment Required: If you want to code against a response, you should retrieve
  the status or error code and use that rather than the HTTP status response.'
- '500 Invalid Transaction: Transaction not attempted.'
- '503 Service Unavailable: System unavailable, try again.'
- '40001: Status unavailable'
- '40004: Resource not found'
- '40005: Method not allowed'
- '40008: [Product method] exceed transaction hard cap; Request denied'
- '90001: System unavailable; please try again later'
- '-60001: PhoneID Live Data Not Found'
- '-40007: Rate limit exceeded'
- -10001 | Not Allowed Host (indicates that the IP address you are connecting from
  is not authorized to access the service) -or- Unsupported product name
- -30002 | Account not activated
- -30003 | Account limit reached
- -40006 | Bad Request
- -40007 | Rate limit exceeded
- -40022 | App Verify API not supported
- '-90001: System unavailable; please try again later'
- 400 Bad request
- 429 Too Many Requests
- '405 Method not allowed: The request method is known by the server but has been
  disabled and cannot be used.'
- '-10001: Not Allowed Host (indicates that the IP address you are connecting from
  is not authorized to access the service) -or- Unsupported product name'
- '-30002: Account not activated'
- '-30003: Account limit reached'
- '-40006: Bad Request'
- '-40022: App Verify API not supported'
- 429 Too Many Requests, the user sent too many requests in a given amount of time.
  Code against the status or error code and use that rather than the HTTP status response.
- 503 Service Unavailable, system unavailable, try again. Code against the status
  or error code and use that rather than the HTTP status response.
- 405 Responses are based on the subresource used.
- code: -40005
  description: Method not allowed
- code: 429
  description: Too Many Requests, the user sent too many requests in a given amount
    of time.
- code: 500
  description: Transaction not attempted.
- code: -40007
  description: Rate limit exceeded
- code: -40008
  description: '[Product method] exceed transaction hard cap; Request denied'
- '300: Transaction successfully completed'
- '301: Transaction partially completed'
- '-60001: Phone ID Contact data not found'
- 400 Bad request, the request could not be understood by the server due to malformed
  syntax. If you want to code against a response, you should retrieve the status or
  error code and use that rather than the HTTP status response. Error codes are listed
  in the `error` parameter in the response.
- 401 Unauthorized, the request requires user authentication. If you want to code
  against a response, you should retrieve the status or error code and use that rather
  than the HTTP status response. Error codes are listed in the `error` parameter in
  the response.
- '-10009: Invalid source IP address'
- '-20002: This product is not enabled for this customer ID'
- '-20003: This feature is not enabled for this CustomerID'
- '-30002: CustomerID Account Not Activated'
- '-30003: CustomerID New Account Limit Reached'
- '-40002: Not Authorized'
- 402 Payment Required. If you want to code against a response, you should retrieve
  the status or error code and use that rather than the HTTP status response. Error
  codes are listed in the `error` parameter in the response.
- 404 Not Found, the server has not found anything matching the Request-URI. If you
  want to code against a response, you should retrieve the status or error code and
  use that rather than the HTTP status response. Error codes are listed in the `error`
  parameter in the response.
- '-40001: Status unavailable'
- '-40004: Resource not found'
- code: -90001
  description: System unavailable; please try again later.
- code: -10009
  description: Invalid source IP address
- code: -20002
  description: This product is not enabled for this customer ID
- code: -20003
  description: This feature is not enabled for this CustomerID
- code: -30002
  description: CustomerID Account Not Activated
- code: -30003
  description: CustomerID New Account Limit Reached
- code: -40002
  description: Not Authorized
- code: -40001
  description: Status unavailable
- code: -40004
  description: Resource not found
- code: -10001
  description: Not Allowed Host (indicates that the IP address you are connecting
    from is not authorized to access the service) -or- Unsupported product name
- '3116: Payload limit size exceeded'
- '500 Service unavailable: The system is unavailable, try again.'
- code: 400
  description: Bad request. The request could not be understood by the server due
    to malformed syntax.
- code: 500
  description: Transaction not attempted
- '-10030: Insufficient funds in prepaid wallet.'
- 401 Unauthorized. The request requires user authentication.
- 404 Not Found. The server has not found anything matching the Request-URI.
- 405 Method not allowed. The request method is known by the server but has been disabled
  and cannot be used.
- 429 Too Many Requests.
- 503 Service Unavailable. The system is unavailable, try again.
- '100: Call answered'
- '101: Not answered'
- '106: Call failed'
- '404: Not found. The server has not found anything matching the request URI.'
- '-10001 Invalid Request: ReferenceID Parameter: <reference_id>'
- '400 Bad Request: No end client data found on records'
- '401 Unauthorized: Not authorized'
- '404 Not Found: Invalid value for parameter reference_id'
- '408 Request Timeout: Request timeout'
- '429 Too Many Requests: Rate limit exceeded'
- '500 Internal Server Error: Internal Server Error'
- '45005: Error on gateway - temporary error'
- '45006: Error on gateway - permanent error'
- '10000: System unavailable, please try again later'
- '401: Invalid signature string'
- '401 Unauthorized: No permissions for this resource or authorization failed.'
- '429 Too many requests: Allowed number of requests per second has been exceeded.'
- '500: System unavailable'
- '401 Unauthorized: The request requires user authentication. Code against the value
  of the Telesign status.code property in the response payload, rather than the HTTP
  status code.'
- '429 Too many requests: Too many requests sent to this service in a given amount
  of time. Code against the value of the Telesign status.code property in the response
  payload, rather than the HTTP status code.'
- '400 Bad Request: Your request contains invalid parameters, contains mutually exclusive
  parameters, or is missing required parameters.'
- '401 Unauthorized: Customer ID and/or API Key were not provided or were not valid.'
- '404 Not Found: No records were found matching the details of your request.'
- '2200: Request successfully completed'
- '2201: Unauthorized access.'
- '2203: Request forbidden'
- '2250: Internal Server Error'
- 405 Method not allowed
- '400: Bad request, the request could not be understood by the server due to malformed
  syntax.'
- '401: Unauthorized, the request requires user authentication.'
- '404: Not Found, the server has not found anything matching the Request-URI.'
- '500 Internal Server Error: Unexpected exception on the server side.'
- '400 – Missing Required Parameters: Missing required parameters or invalid body
  fields.'
- '401 – Authentication issues: No authorization header provided or token expired.'
- '404 – Flow ID not found: The flowId provided does not exist or does not belong
  to the authenticated account.'
- '429: Too Many Requests, the user sent too many requests in a given amount of time.'
- '-40008: Product method exceed transaction hard cap; Request denied'
- '3205: Rate Limit Exceeded: Allowed number of SMS transactions per second has been
  exceeded.'
- '3206: Omnichannel Product not enabled for Customer ID: Omnichannel product is not
  enabled for this customer.'
- '3207: Product exceeded transaction hard cap. Request denied: Product exceeded transaction
  hard cap limit. Request denied.'
- '3208: Provider Account ID not found: The Provider Account ID could not be found
  in the system.'
- '3209: End-user not registered for testing: The end user''s phone number has not
  been registered for use in testing requests.'
- '3300: Missing parameter channels: The API request does not contain mandatory parameter
  `channels`.'
- '3301: Missing parameter channel: The value of the parameter `channels` does not
  contain any instances of the mandatory sub-property `channel`.'
- '3302: Missing parameter phone_number: The API request does not contain the mandatory
  parameter `phone_number`.'
- '3303: Missing parameter message: The API request does not contain the mandatory
  parameter `message`.'
- '3304: Missing parameter message_type: The API request does not contain the mandatory
  parameter `message_type`.'
- '3305: Missing template specific parameters: The request is missing one or more
  required parameters specific to the selected template.'
- '3306: Missing message parameters for specified channel: Message object doesn''t
  contain required info for sending message through selected channel.'
- '3400: Not authorized: No permissions for this resource or authorization failed.'
- '3405: Missing required `Authorization` header: The request is missing the required
  `Authorization` header for authentication.'
- '3406: CustomerID Account Suspended: The account associated with the provided Customer
  ID has been suspended.'
- '3408: CustomerID Account Not Found: The account associated with the provided Customer
  ID could not be found in the system.'
- '3409: Invalid source IP address: The source IP address provided is not recognized
  or is invalid.'
- '3410: Invalid Customer ID: The provided Customer ID is invalid or does not exist
  in the system.'
- '3411: Invalid API Key: The API key provided is invalid or does not match the expected
  format.'
- '3412: Required ''Authorization'' header is not in the correct format: The `Authorization`
  header is not in the correct format and cannot be processed.'
- '3413: Not Allowed Host: The host is not authorized to access the system.'
- '3601: Missing providers tracking data: The required tracking data from the provider
  is missing.'
- '5400: Authentication failed: Authentication failed due to invalid credentials or
  missing required authentication details.'
- '5401: No permissions for this resource: The account does not have the necessary
  permissions to access the requested resource.'
- '5500: System unavailable. Please try again later: The system is currently unavailable.
  The request should be resubmitted.'
- '10000: System Unavailable, Please try again later: The system is currently unavailable.
  The request should be resubmitted.'
- '10002: ''x-ts-nonce'' header value has been used recently: The `x-ts-nonce` header
  value cannot be reused in this request because it was used recently.'
- '10003: ''x-ts-nonce'' header value is either too long or too short: The `x-ts-nonce`
  header value is either too long or too short. Ensure that `x-ts-nonce` is within
  the acceptable length.'
- '10004: ''Date'' or ''x-ts-date'' header is not within tolerable range: The `Date`
  or `x-ts-date` header value is outside the acceptable range. Ensure that it is within
  the acceptable range.'
- '10005: ''Date'' or ''x-ts-date'' header is not RFC822 compliant: The `Date` or
  `x-ts-date` header value is not RFC822 compliant and cannot be processed.'
- '10006: Invalid ''x-ts-auth-method'' header: The `x-ts-auth-method` header value
  is invalid and cannot be processed.'
- '10007: Missing required ''Date'' or ''x-ts-date'' header: The required `Date` or
  `x-ts-date` header is missing and must be included in the request.'
- '10009: Missing required `Authorization` header: The request is missing the required
  `Authorization` header for authentication.'
- '10010: CustomerID Account Suspended: The account associated with the provided Customer
  ID has been suspended.'
- '10011: This product is not enabled for this CustomerID: SMS product is not enabled
  for this customer.'
- '10014: Invalid source IP address: The source IP address provided is not recognized
  or is invalid.'
- '10015: Invalid Customer ID: The provided Customer ID is invalid or does not exist
  in the system.'
- '10019: Rate Limit Exceeded: Allowed number of requests per second on SMS has been
  exceeded.'
- '10020: Generic messaging exceeded transaction hard cap. Request denied: The transaction
  limit for generic messaging has been exceeded, and the request was denied.'
- '10022: Invalid API Key: The API key provided is invalid or does not match the expected
  format.'
- '10028: Required ''Authorization'' header is not in the correct format: The `Authorization`
  header is not in the correct format and cannot be processed.'
- '10030: Insufficient funds in prepaid wallet: The prepaid wallet balance is insufficient
  to complete the requested transaction.'
- '10031: Not Allowed Host: The host is not authorized to access the system.'
- '10031: Message blocked by customer request: This code can happen because you requested
  a block or because Telesign blocked on your behalf. The block is custom, meaning
  it applies to you and not others.'
- '10032: Message blocked by TeleSign: Telesign blocks a message if it is being sent
  to a phone number that is on a global blocklist.'
- '10033: {phone_number} has not been verified for this trial account: The phone number
  must be verified before it can be used in requests on a trial account.'
- '10035: The requested API host is not allowed for this CustomerID: The requested
  API host is not allowed for the account associated with this customer ID.'
- '10036: Reference ID expired: The provided reference ID has expired and is no longer
  valid.'
- '11000: Invalid value for parameter phone_number: Phone number is too long, too
  short, or contains non-digit values.'
- '11001: Invalid country code for parameter phone_number: The provided country code
  is either in an incorrect format or not one of the expected values.'
- '11003: Invalid value for parameter account_lifecycle_event: The value of parameter
  `account_lifecycle_event` is not one of the supported values: `create`, `sign-in`,
  `transact`, `update`, `delete`.'
- '11004: Invalid value for parameter callback_url: The value of parameter `callback_url`
  is empty.'
- '11009: Invalid value for parameter message: The message parameter has an invalid
  format or contains unexpected content.'
- '11010: Invalid value for parameter originating_ip: Parameter `originating_ip` is
  improperly formatted.'
- '11011: Invalid value for parameter reference_id: The provided value for the `reference_id`
  parameter is invalid or does not match the expected format.'
- '11013: Invalid value for parameter sender_id: The specified sender ID does not
  match the expected value or is in an incorrect format. Ensure the provided sender
  ID has been created and is valid for your account.'
- '11016: Invalid value for parameter external_id: The value of parameter `external_id`
  is longer than 100 or contains non-ASCII characters.'
- '11017: Invalid value for parameter message_type: The value of parameter message_type
  is not one of the supported values: ARN, MKT, OTP.'
- '11027: Invalid value for parameter integration_name: The provided value for the
  `integration_name` parameter is invalid or does not match the expected format.'
- '11034: Invalid value for parameter dlt_template_id: The provided value for the
  `dlt_template_id` parameter is invalid or does not match the expected format.'
- '11035: Invalid value for parameter dlt_entity_id: The provided value for the `dlt_entity_id`
  parameter is invalid or does not match the expected format.'
- '12000: Missing Required Parameter phone_number: The required parameter `phone_number`
  is missing from the request and must be provided.'
- '12009: Missing Required Parameter message: The required parameter `message` is
  missing from the request and must be provided.'
- '12017: Missing Required Parameter message_type: The required parameter `message_type`
  is missing from the request and must be provided.'
- '-10001: CustomerID/ReferenceID not found Parameter: CustomerID/ReferenceID: <customer_id>/<reference_id>'
- '-10001: Invalid parameter passed'
- '-10001: Invalid Request: Missing parameter Parameter: Template'
- '-10002: Empty recipients list'
- '-10003: Max number of recipients exceeded'
- '-10033: {phone_number} has not been verified for this trial account.'
- '-20001: Invalid request'
- '-20002: This product is not enabled for this CustomerID'
- '-20003: This feature is not enabled for this Customer ID.'
- '-20004: This product is not enabled for this country.'
- '-30000: Invalid CustomerID'
- '-30000: Invalid Customer ID'
- '-30001: Account suspended'
- '-30005: Required Authorization header is not in the correct format'
- '-30006: Invalid signature'
- '-30008: Invalid X-TS-Auth-Method header'
- '-30009: Date or X-TS-Date header is not RFC822 compliant'
- '-30011: X-TS-Nonce header value is either too long or too short'
- '-30013: Invalid ReferenceID for Verify Completion'
- '-30015: Invalid API Key'
- '-40002: Not authorized'
- '-40005: Method not allowed'
- '-40008: [Product method] exceed transaction hard cap; Request denied'
- '-40009: Phone number not supported'
- '-40024: Message blocked by customer request'
- '-40025: Message blocked by Telesign'
- '-50001: Max retries limit reached'
- '-50002: Mobile 2FA registration error'
- '-50003: Mobile device stamp drift too large'
- '-50051: Invalid hashcash submitted'
- '-50052: Unmatched registration initiate request'
- '-50054: Invalid API key'
- '-50055: Inactive API key'
- '-50056: Inactive application'
- '-50057: Invalid verification code'
- '-50058: Application is not registered for push notification'
- '-60002: Mobile 2FA registration warning'
- '10000: System unavailable, please try again later.'
- '10008: Invalid signature'
- '10009: Invalid value for parameter message'
- '10010: CustomerID Account Suspended'
- '10012: This feature is not enabled for this CustomerID'
- '10013: Invalid Request. CustomerID Account Not Found'
- '10014: Invalid source IP address'
- '10015: Invalid Customer ID'
- '10017: Customer ID / Reference ID not found'
- '10019: Rate Limit Exceeded'
- '10020: Messaging exceeded transaction hard cap. Request denied.'
- '10032: Request blocked due to this number appearing on a Telesign blocklist.'
- '10033: Unverified phone_number requested for trial account.'
- '10039: Internal server error'
- '11001: Invalid country code for parameter phone_number'
- '11002: Invalid value for parameter account_id'
- '11003: Invalid value for parameter account_lifecycle_event'
- '11005: Invalid value for parameter customer_id'
- '11006: Invalid value for parameter device_id'
- '11007: Invalid value for email_address'
- '11010: Invalid value for parameter originating_ip'
- '11011: Invalid value for parameter reference_id'
- '11024: Invalid value for parameter phone_number_1'
- '11025: Invalid value for parameter phone_number_2'
- '12000: Missing required parameter phone_number'
- '12003: Missing required parameter account_lifecycle_event'
- '40004: The required parameter ''verification'' is missing from the request'
- '45005: Error on gateway - temporary error.'
- '45006: Error on gateway - permanent error.'
- '45010: Provider not available to route the request.'
- '400'
- '401'
- '404'
- '500'
- 'INVALID_REQUEST: Check the request parameters.'
- 'UNAUTHORIZED: Verify the authentication credentials.'
- '400 Bad Request: Check your request parameters.'
- '404 Not Found: Verify the reference ID in the request.'
- '500 Internal Server Error: Try again later.'
- '400 Bad Request: Check for required fields and formatting'
- '401 Unauthorized: Check authentication credentials'
- '422 Unprocessable Entity: Verify data types and values'
- '400 Bad Request: Check the request format and parameters'
- '401 Unauthorized: Verify credentials and permissions'
- '429 Too Many Requests: Throttle API calls to comply with rate limits'
- '3000: Delivered'
- '3001: Message in progress'
- '3002: Delivered to Gateway'
- '3003: Delivery error'
- '3004: Message successfully sent out for delivery, however final confirmation of
  delivery to handset was not received.'
- '3005: Message is read'
- '3006: None of the channels is enabled for the customer'
- '3011: Provider Account registration error'
- '3012: Provider Account migration error'
- '3030: Temporary phone error'
- '3031: Permanent phone error'
- '3032: Gateway/network cannot route message'
- '3033: Message expired before delivery'
- '3034: SMS not supported'
- '3035: Invalid/unsupported'
- '3036: Price threshold exceeded'
- '3037: Message blocked in requested country'
- '3038: Destination blocked by prefix'
- '3039: Final status unknown'
- '3040: Queued by gateway'
- '3042: Carrier rejected - permanent error'
- '3043: Error on gateway - temporary error'
- '3044: Error on gateway - permanent error'
- '3045: Parameters problem'
- '3046: Message blocked by subscriber action or request'
- '3047: Subscriber low on credit'
- '3048: Roaming error'
- '3049: Mobile number portability error'
- '3050: Subscriber absent'
- '3051: Suspected spam'
- '3052: Message blocked by your request'
- '3053: Message blocked by TeleSign'
- '3054: Message cannot be sent to RBM provider - parsing error'
- '3055: Delivery channel not supported by the end user''s device'
- '3056: Message failed to deliver in specified fallback time'
- '3057: Invalid source address'
- '3058: The requested API host is not allowed for this customer_id'
- '3059: Exceeded number of elements for rich card'
- '3061: Media size exceeds the limit'
- '3062: MMS not supported'
- '3071: Unverified phone_number requested for trial account.'
- '3073: Insufficient funds in prepaid wallet'
- '3100: Unknown channel specified: {channel}'
- '3102: Invalid value for parameter message_type: {message_type}'
- '3103: Unsupported value for parameter external_id: {external_id}'
- '3104: Invalid value for parameter account_lifecycle_event: {account_lifecycle_event}'
- '3105: Invalid value for parameter originating_ip: {originating_ip}'
- '3106: Invalid value for parameter callback_url: {callback_url}'
- '3107: Invalid country code for parameter phone_number'
- '3108: Invalid value for parameter message'
- '3109: Invalid value for parameter sender_id'
- '3112: Specified template does not exist for selected channel'
- '3113: Invalid value for parameter channel: {channels}'
- '3114: Specified message type not allowed outside of conversation window'
- '3115: Destination phone number not in coverage'
- '3117: Invalid value for parameter fbmessager_id: { fbmessager_id}'
- '3118: Invalid value for parameter instagram_id: { instagram_id}'
- '3200: {channel} channel is not enabled for customer'
- '3202: Fallback is not enabled for Customer ID'
- '3205: Rate Limit Exceeded'
- '3207: Product exceeded transaction hard cap. Request denied.'
- '3208: Provider Account ID not found'
- '3209: Phone number not registered for testing'
- '3303: Missing parameter message'
- '3304: Missing parameter message_type'
- '3305: Missing template specific parameters'
- '3306: Missing message parameters for specified channel'
- '3405: Missing required Authorization header'
- '3406: CustomerID Account Suspended'
- '3408: CustomerID Account Not Found'
- '3409: Invalid source IP address'
- '3410: Invalid Customer ID'
- '3411: Invalid API Key'
- '3412: Required Authorization header is not in the correct format'
- '3413: Not Allowed IP Address'
- '3601: CustomerID Account Not Found'
- '401 Unauthorized: Check authorization credentials'
- '3800: Request successful'
- '3817 Invalid value for parameter language: {language}'
- 3110 Invalid request
- '401 Unauthorized: Check your API credentials'
- '400 Bad Request: Ensure all required parameters are provided'
- 'Fail to send: The service is only able to send to a fallback channel that supports
  both video and text.'
- 'HTTP/1.1 200 OK: Request successful'
- '3300: Missing parameter channels'
- '3500: System Unavailable.'
- 'Invalid phone number: Ensure phone number is formatted correctly'
- '401 Unauthorized: Check Customer ID and API Key'
- '2800: Request successfully completed'
- '2801: Invalid request add-ons parameter: {parameter_name}.'
- '2802: name of add-on add-on temporarily unavailable.'
- '2803: Phone number out of name of add-on add-on coverage.'
- '2804: Phone number not applicable in name of add-on add-on.'
- '2805: No name of add-on add-on information for phone number.'
- '2806: Name of add-on add-on is not enabled.'
- '2807: Some parameters submitted in the request are not valid.'
- '2808: Invalid Request: {parameter_name} parameter is missing or empty.'
- '2809: Billing Postal Code does not match contact_plus add-on information for phone
  number.'
- '2810: Request process failed during data collection.'
- '2811: Request processing timeout.'
- '2812: name of add-on exceeded transaction hard cap. Request denied.'
- '2804: Phone number not applicable in active_call_status add-on.'
- '2805: No active_call_status add-on information for phone_number.'
- '2803: Phone number out of Age Verify identity attribute coverage.'
- '2802: Unexpected error'
- '2804: Phone number not applicable in breached_number_check add-on'
- '2805: No breached_number_check add-on information for phone number'
- '2806: Contact Customer Support Team to enable Breached Data'
- '2811: Request processing timeout'
- '400 Bad Request: Invalid input parameters.'
- '401 Unauthorized: Check your authentication credentials.'
- '2800: Request successfully completed.'
- '2806: Contact Match identity attribute is not enabled.'
- '2805: No Contact Match identity attribute information for phone number.'
- '2803: Phone number out of Contact Match identity attribute coverage.'
- '401 Unauthorized: Verify your credentials'
- '404 Not Found: Check the endpoint URL'
- '2603: Phone number out of number_deactivation identity signal coverage.'
- '2805: No porting_history add-on information for phone number.'
- '2806: porting_history add-on is not enabled.'
- '2803: Phone number out of porting_status identity attribute coverage.'
- '2805: No sim_swap identity attribute information for phone number.'
- '2803: Phone number out of sim_swap identity attribute coverage.'
- '200: Request successfully completed'
- '401 Unauthorized: Check Customer ID and API Key.'
- 'Exception: Display any type of exception and associated error code.'
- Invalid phone number format
- 'PHONE_NUMBER_INVALID: The phone number provided is invalid.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Check your Customer ID and API Key'
- '503 SERVICE UNAVAILABLE: System Unavailable, Please try again later.'
- '230: Message blocked by TeleSign'
- '-40025: Message blocked by TeleSign'
- '0x000000C3: Expected TLV missing'
- '0x000000C4: Invalid TLV Value'
- '401: Unauthorized - Invalid authentication credentials'
- 'Invalid verify_code: Ensure the code is between 000 and 9999999.'
- '201: Message is read'
- 'EXPIRED: Verification code is no longer matchable'
- 'MAX_ATTEMPTS_EXCEEDED: Maximum attempts to verify exceeded'
- '233: Message blocked due to high risk score'
- '3935: Code validity expired'
- '3904: Verification failed'
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Ensure valid authentication credentials.'
- 'Invalid phone number format: Ensure the phone number is digits only.'
- 'Invalid security_factor: Check the length and format.'
- '3901: Request in progress'
- '3900: Verified'
- status.code indicates the delivery status of the SMS.
- 'Request in progress: 3901'
- 'Verified: 3900'
- 'status.code: Indicates the preliminary delivery status.'
- silent verification failed
- verification state not VERIFIED
- 'Invalid/Unsupported message content: Trigger event when a push arrives in Telesign’s
  Firebase service, and doesn’t have the complete information, or is in an unknown
  structure.'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - OAuthToken
  - Customer ID
  - API Key
client:
  base_url: https://rest-ww.telesign.com
  headers:
    accept: application/json
source_metadata: null
