resources:
- name: SChunk
  endpoint:
    path: /schunk
    method: GET
    data_selector: records
- name: NDArray
  endpoint:
    path: /ndarray
    method: GET
    data_selector: records
- name: NDArray
  endpoint:
    path: /ndarray
    method: GET
    data_selector: records
- name: var_along_axis
  endpoint:
    path: /ndarray/var_along_axis
    method: GET
    data_selector: variance
- name: where
  endpoint:
    path: /ndarray/where
    method: GET
    data_selector: out
- name: arange
  endpoint:
    path: /ndarray/arange
    method: GET
    data_selector: out
    params: {}
- name: asarray
  endpoint:
    path: /ndarray/asarray
    method: GET
    data_selector: out
    params: {}
- name: concat
  endpoint:
    path: /ndarray/concat
    method: GET
    data_selector: out
    params: {}
- name: copy
  endpoint:
    path: /ndarray/copy
    method: GET
    data_selector: out
    params: {}
- name: empty
  endpoint:
    path: /ndarray/empty
    method: GET
    data_selector: out
    params: {}
- name: full
  endpoint:
    path: /ndarray/full
    method: GET
    data_selector: out
    params: {}
- name: zeros
  endpoint:
    path: /ndarray/zeros
    method: GET
    data_selector: out
    params: {}
- name: arange
  endpoint:
    path: /blosc2/arange
    method: GET
    data_selector: out
    params: {}
- name: asarray
  endpoint:
    path: /blosc2/asarray
    method: GET
    data_selector: out
    params: {}
- name: concat
  endpoint:
    path: /blosc2/concat
    method: GET
    data_selector: out
    params: {}
- name: copy
  endpoint:
    path: /blosc2/copy
    method: GET
    data_selector: out
    params: {}
- name: empty
  endpoint:
    path: /blosc2/empty
    method: GET
    data_selector: out
    params: {}
- name: empty_like
  endpoint:
    path: /blosc2/empty_like
    method: GET
    data_selector: out
    params: {}
- name: expand_dims
  endpoint:
    path: /blosc2/expand_dims
    method: GET
    data_selector: out
    params: {}
- name: eye
  endpoint:
    path: /blosc2/eye
    method: GET
    data_selector: out
    params: {}
- name: frombuffer
  endpoint:
    path: /blosc2/frombuffer
    method: GET
    data_selector: out
    params: {}
- name: fromiter
  endpoint:
    path: /blosc2/fromiter
    method: GET
    data_selector: out
    params: {}
- name: NDArray
  endpoint:
    path: /NDArray
    method: GET
    data_selector: attributes
    params: {}
- name: LazyUDF
  endpoint:
    path: /lazyudf
    method: GET
    data_selector: records
    params: {}
- name: C2Array
  endpoint:
    path: '@public/examples/dir1/ds-3d.b2nd'
    method: GET
- name: C2Array
  endpoint:
    path: '@public/examples/dir1/ds-3d.b2nd'
- name: SChunk
  endpoint:
    path: /blosc2/SChunk
    method: GET
    data_selector: records
- name: SChunk
  endpoint:
    path: /schunks
    method: GET
    data_selector: records
- name: SChunk
  endpoint:
    path: /blosc2/SChunk
    method: GET
    data_selector: records
- name: DictStore
  endpoint:
    path: /
    method: GET
    data_selector: records
    params: {}
- name: NDArray
  endpoint:
    path: /dir/node
    method: None
    data_selector: None
    params: {}
- name: SChunk
  endpoint:
    path: /dir1/schunk1
    method: None
    data_selector: None
    params: {}
- name: C2Array
  endpoint:
    path: /dir1/node3
    method: None
    data_selector: None
    params: {}
- name: get_chunk
  endpoint:
    path: /src/blosc2/schunk.py/get_chunk
    method: GET
    data_selector: out
    params: {}
- name: get_slice
  endpoint:
    path: /src/blosc2/schunk.py/get_slice
    method: GET
    data_selector: out
    params: {}
- name: insert_chunk
  endpoint:
    path: /src/blosc2/schunk.py/insert_chunk
    method: POST
    data_selector: out
    params: {}
- name: insert_data
  endpoint:
    path: /src/blosc2/schunk.py/insert_data
    method: POST
    data_selector: out
    params: {}
- name: iterchunks
  endpoint:
    path: /src/blosc2/schunk.py/iterchunks
    method: GET
    data_selector: chunk
    params: {}
- name: iterchunks_info
  endpoint:
    path: /src/blosc2/schunk.py/iterchunks_info
    method: GET
    data_selector: info
    params: {}
- name: postfilter
  endpoint:
    path: /src/blosc2/schunk.py/postfilter
    method: POST
    data_selector: out
    params: {}
- name: prefilter
  endpoint:
    path: /src/blosc2/schunk.py/prefilter
    method: POST
    data_selector: out
    params: {}
- name: schunk
  endpoint:
    path: /blosc2/schunk
    method: GET
    data_selector: records
- name: TreeStore
  endpoint:
    path: /TreeStore
    method: GET
    data_selector: records
- name: dictstore
  endpoint:
    path: /dictstore
    method: GET
    data_selector: records
- name: TreeStore
  endpoint:
    path: /tree/store
    method: GET
    data_selector: records
- name: NDArray
  endpoint:
    path: /dir/node
    method: GET
    data_selector: records
- name: SChunk
  endpoint:
    path: /dir/schunk
    method: GET
    data_selector: records
- name: C2Array
  endpoint:
    path: /dir/c2array
    method: GET
    data_selector: records
- name: DictStore
  endpoint:
    path: /blosc2/dict_store
    method: GET
    data_selector: items
- name: TreeStore
  endpoint:
    path: /TreeStore
    method: GET
    data_selector: records
- name: __getitem__
  endpoint:
    path: /getitem
    method: GET
    data_selector: out
    params: {}
- name: __setitem__
  endpoint:
    path: /setitem
    method: POST
    data_selector: none
    params: {}
- name: __delitem__
  endpoint:
    path: /delitem
    method: DELETE
    data_selector: none
    params: {}
- name: __contains__
  endpoint:
    path: /contains
    method: GET
    data_selector: exists
    params: {}
- name: __len__
  endpoint:
    path: /len
    method: GET
    data_selector: count
    params: {}
- name: get_children
  endpoint:
    path: /get_children
    method: GET
    data_selector: children
    params: {}
- name: get_descendants
  endpoint:
    path: /get_descendants
    method: GET
    data_selector: descendants
    params: {}
- name: walk
  endpoint:
    path: /walk
    method: GET
    data_selector: walk_info
    params: {}
- name: TreeStore
  endpoint:
    path: /blosc2/TreeStore
    method: GET
    data_selector: records
    params: {}
- name: node1
  endpoint:
    path: example_estore.b2e
    method: PUT
    data_selector: embedded NumPy array
    params: {}
- name: node2
  endpoint:
    path: example_estore.b2e
    method: PUT
    data_selector: embedded NDArray
    params: {}
- name: node3
  endpoint:
    path: external_node3.b2nd
    method: PUT
    data_selector: embedded NDArray
    params: {}
- name: node4
  endpoint:
    path: '@public/examples/ds-1d.b2nd'
    method: GET
    data_selector: remote C2Array
    params: {}
- name: node1
  endpoint:
    path: /node1
    method: GET
    data_selector: records
- name: node2
  endpoint:
    path: /node2
    method: GET
    data_selector: records
- name: node3
  endpoint:
    path: /node3
    method: GET
    data_selector: records
- name: node4
  endpoint:
    path: /node4
    method: GET
    data_selector: records
- name: node
  endpoint:
    path: /node
    method: GET
    data_selector: records
- name: __getitem__
  endpoint:
    path: /getitem
    method: GET
    data_selector: out
- name: __setitem__
  endpoint:
    path: /setitem
    method: SET
    data_selector: none
- name: __delitem__
  endpoint:
    path: /delitem
    method: DELETE
    data_selector: none
- name: __contains__
  endpoint:
    path: /contains
    method: GET
    data_selector: exists
- name: __len__
  endpoint:
    path: /len
    method: GET
    data_selector: len
- name: __iter__
  endpoint:
    path: /iter
    method: GET
    data_selector: iterator
- name: get_children
  endpoint:
    path: /get_children
    method: GET
    data_selector: children
- name: get_descendants
  endpoint:
    path: /get_descendants
    method: GET
    data_selector: descendants
- name: walk
  endpoint:
    path: /walk
    method: GET
    data_selector: iterator
- name: get_subtree
  endpoint:
    path: /get_subtree
    method: GET
    data_selector: subtree
- name: EmbedStore
  endpoint:
    path: example_estore.b2e
    method: w
    data_selector: keys
    params: {}
- name: ProxySource
  endpoint:
    path: ProxySource
    method: GET
- name: node1
  endpoint:
    path: /node1
    method: GET
    data_selector: records
- name: node2
  endpoint:
    path: /node2
    method: GET
    data_selector: records
- name: node3
  endpoint:
    path: /node3
    method: GET
    data_selector: records
- name: node4
  endpoint:
    path: /node4
    method: GET
    data_selector: records
- name: node
  endpoint:
    path: /node
    method: GET
- name: fetch
  endpoint:
    path: fetch
    method: GET
- name: afetch
  endpoint:
    path: afetch
    method: GET
- name: save
  endpoint:
    path: /blosc2.save
    method: POST
    data_selector: array
    params: {}
- name: open
  endpoint:
    path: /blosc2.open
    method: GET
    data_selector: urlpath
    params: {}
- name: save_array
  endpoint:
    path: /blosc2.save_array
    method: POST
    data_selector: arr
    params: {}
- name: load_array
  endpoint:
    path: /blosc2.load_array
    method: GET
    data_selector: urlpath
    params: {}
- name: save_tensor
  endpoint:
    path: /blosc2.save_tensor
    method: POST
    data_selector: tensor
    params: {}
- name: load_tensor
  endpoint:
    path: /blosc2.load_tensor
    method: GET
    data_selector: urlpath
    params: {}
- name: from_cframe
  endpoint:
    path: /blosc2.from_cframe
    method: POST
    data_selector: cframe
    params: {}
- name: chunksize
  endpoint:
    path: /chunksize
    method: GET
    data_selector: chunksize
    params: {}
- name: cparams
  endpoint:
    path: /cparams
    method: GET
    data_selector: cparams
    params: {}
- name: nbytes
  endpoint:
    path: /nbytes
    method: GET
    data_selector: nbytes
    params: {}
- name: typesize
  endpoint:
    path: /typesize
    method: GET
    data_selector: typesize
    params: {}
- name: blosc2.Storage
  endpoint:
    path: /blosc2/storage
    method: GET
    data_selector: parameters
    params: {}
- name: blocks
  endpoint:
    path: /blosc2.ProxyNDSource.blocks
    method: GET
- name: chunks
  endpoint:
    path: /blosc2.ProxyNDSource.chunks
    method: GET
- name: cparams
  endpoint:
    path: /blosc2.ProxyNDSource.cparams
    method: GET
- name: dtype
  endpoint:
    path: /blosc2.ProxyNDSource.dtype
    method: GET
- name: shape
  endpoint:
    path: /blosc2.ProxyNDSource.shape
    method: GET
- name: SimpleProxy
  endpoint:
    path: /
    method: GET
    data_selector: src
    params: {}
- name: abs
  endpoint:
    path: /blosc2/abs
    method: GET
    data_selector: out
    params: {}
- name: acos
  endpoint:
    path: /blosc2/acos
    method: GET
    data_selector: out
    params: {}
- name: acosh
  endpoint:
    path: /blosc2/acosh
    method: GET
    data_selector: out
    params: {}
- name: save
  endpoint:
    path: /blosc2/save
    method: POST
- name: open
  endpoint:
    path: /blosc2/open
    method: GET
- name: save_array
  endpoint:
    path: /blosc2/save_array
    method: POST
- name: load_array
  endpoint:
    path: /blosc2/load_array
    method: GET
- name: save_tensor
  endpoint:
    path: /blosc2/save_tensor
    method: POST
- name: load_tensor
  endpoint:
    path: /blosc2/load_tensor
    method: GET
- name: from_cframe
  endpoint:
    path: /blosc2/from_cframe
    method: POST
- name: add
  endpoint:
    path: /blosc2/add
    method: GET
    data_selector: out
- name: arccos
  endpoint:
    path: /blosc2/arccos
    method: GET
    data_selector: out
- name: arccosh
  endpoint:
    path: /blosc2/arccosh
    method: GET
    data_selector: out
- name: arcsin
  endpoint:
    path: /blosc2/arcsin
    method: GET
    data_selector: out
- name: arcsinh
  endpoint:
    path: /blosc2/arcsinh
    method: GET
    data_selector: out
- name: arctan
  endpoint:
    path: /blosc2/arctan
    method: GET
    data_selector: out
- name: arctan2
  endpoint:
    path: /blosc2/arctan2
    method: GET
    data_selector: out
- name: arctanh
  endpoint:
    path: /blosc2/arctanh
    method: GET
    data_selector: out
- name: CParams
  endpoint:
    path: /blosc2.CParams
    method: GET
- name: DParams
  endpoint:
    path: /blosc2.DParams
    method: GET
- name: Storage
  endpoint:
    path: /blosc2.Storage
    method: GET
- name: abs
  endpoint:
    path: /blosc2/abs
    method: GET
    data_selector: LazyExpr
- name: acos
  endpoint:
    path: /blosc2/acos
    method: GET
    data_selector: LazyExpr
- name: acosh
  endpoint:
    path: /blosc2/acosh
    method: GET
    data_selector: LazyExpr
- name: atanh
  endpoint:
    path: /blosc2/atanh
    method: GET
    data_selector: out
- name: bitwise_and
  endpoint:
    path: /blosc2/bitwise_and
    method: GET
    data_selector: out
- name: bitwise_invert
  endpoint:
    path: /blosc2/bitwise_invert
    method: GET
    data_selector: out
- name: bitwise_left_shift
  endpoint:
    path: /blosc2/bitwise_left_shift
    method: GET
    data_selector: out
- name: bitwise_or
  endpoint:
    path: /blosc2/bitwise_or
    method: GET
    data_selector: out
- name: bitwise_right_shift
  endpoint:
    path: /blosc2/bitwise_right_shift
    method: GET
    data_selector: out
- name: bitwise_xor
  endpoint:
    path: /blosc2/bitwise_xor
    method: GET
    data_selector: out
- name: ceil
  endpoint:
    path: /blosc2/ceil
    method: GET
    data_selector: out
- name: conj
  endpoint:
    path: /blosc2/conj
    method: GET
    data_selector: out
- name: copysign
  endpoint:
    path: /blosc2/copysign
    method: GET
    data_selector: out
- name: cos
  endpoint:
    path: /blosc2/cos
    method: GET
    data_selector: out
- name: cosh
  endpoint:
    path: /blosc2/cosh
    method: GET
    data_selector: out
- name: divide
  endpoint:
    path: /blosc2/divide
    method: GET
    data_selector: out
- name: equal
  endpoint:
    path: /blosc2/equal
    method: GET
    data_selector: out
- name: exp
  endpoint:
    path: /blosc2/exp
    method: GET
    data_selector: out
- name: add
  endpoint:
    path: /blosc2/add
    method: POST
    data_selector: LazyExpr
    params: {}
- name: arccos
  endpoint:
    path: /blosc2/arccos
    method: POST
    data_selector: LazyExpr
    params: {}
- name: arccosh
  endpoint:
    path: /blosc2/arccosh
    method: POST
    data_selector: LazyExpr
    params: {}
- name: arcsin
  endpoint:
    path: /blosc2/arcsin
    method: POST
    data_selector: LazyExpr
    params: {}
- name: arcsinh
  endpoint:
    path: /blosc2/arcsinh
    method: POST
    data_selector: LazyExpr
    params: {}
- name: arctan
  endpoint:
    path: /blosc2/arctan
    method: POST
    data_selector: LazyExpr
    params: {}
- name: arctan2
  endpoint:
    path: /blosc2/arctan2
    method: POST
    data_selector: LazyExpr
    params: {}
- name: arctanh
  endpoint:
    path: /blosc2/arctanh
    method: POST
    data_selector: LazyExpr
    params: {}
- name: asin
  endpoint:
    path: /blosc2/asin
    method: POST
    data_selector: LazyExpr
    params: {}
- name: asinh
  endpoint:
    path: /blosc2/asinh
    method: POST
    data_selector: LazyExpr
    params: {}
- name: all
  endpoint:
    path: /blosc2/all
    method: GET
    data_selector: result
    params: {}
- name: any
  endpoint:
    path: /blosc2/any
    method: GET
    data_selector: result
    params: {}
- name: sum
  endpoint:
    path: /blosc2/sum
    method: GET
    data_selector: result
    params: {}
- name: prod
  endpoint:
    path: /blosc2/prod
    method: GET
    data_selector: result
    params: {}
- name: mean
  endpoint:
    path: /blosc2/mean
    method: GET
    data_selector: result
    params: {}
- name: std
  endpoint:
    path: /blosc2/std
    method: GET
    data_selector: result
    params: {}
- name: var
  endpoint:
    path: /blosc2/var
    method: GET
    data_selector: result
    params: {}
- name: min
  endpoint:
    path: /blosc2/min
    method: GET
    data_selector: result
    params: {}
- name: max
  endpoint:
    path: /blosc2/max
    method: GET
    data_selector: result
    params: {}
- name: ndarray
  endpoint:
    path: /blosc2/asarray
    method: GET
    data_selector: data
    params: {}
- name: max
  endpoint:
    path: /blosc2/max
    method: GET
    data_selector: max_value
    params:
      axis: '0'
- name: expm1
  endpoint:
    path: blosc2.expm1
    method: POST
    data_selector: out
- name: floor
  endpoint:
    path: blosc2.floor
    method: POST
    data_selector: out
- name: floor_divide
  endpoint:
    path: blosc2.floor_divide
    method: POST
    data_selector: out
- name: greater
  endpoint:
    path: blosc2.greater
    method: POST
    data_selector: out
- name: greater_equal
  endpoint:
    path: blosc2.greater_equal
    method: POST
    data_selector: out
- name: hypot
  endpoint:
    path: blosc2.hypot
    method: POST
    data_selector: out
- name: isfinite
  endpoint:
    path: blosc2.isfinite
    method: POST
    data_selector: out
- name: isinf
  endpoint:
    path: blosc2.isinf
    method: POST
    data_selector: out
- name: isnan
  endpoint:
    path: blosc2.isnan
    method: POST
    data_selector: out
- name: less
  endpoint:
    path: blosc2.less
    method: POST
    data_selector: out
- name: less_equal
  endpoint:
    path: blosc2.less_equal
    method: POST
    data_selector: out
- name: log
  endpoint:
    path: blosc2.log
    method: POST
    data_selector: out
- name: log1p
  endpoint:
    path: blosc2.log1p
    method: POST
    data_selector: out
- name: log2
  endpoint:
    path: blosc2.log2
    method: POST
    data_selector: out
- name: log10
  endpoint:
    path: blosc2.log10
    method: POST
    data_selector: out
- name: matmul
  endpoint:
    path: /blosc2/linalg/matmul
    method: GET
    data_selector: out
- name: tensordot
  endpoint:
    path: /blosc2/linalg/tensordot
    method: GET
    data_selector: out
- name: vecdot
  endpoint:
    path: /blosc2/linalg/vecdot
    method: GET
    data_selector: out
- name: permute_dims
  endpoint:
    path: /blosc2/linalg/permute_dims
    method: GET
    data_selector: out
- name: transpose
  endpoint:
    path: /blosc2/linalg/transpose
    method: GET
    data_selector: out
- name: matrix_transpose
  endpoint:
    path: /blosc2/linalg/matrix_transpose
    method: GET
    data_selector: out
- name: diagonal
  endpoint:
    path: /blosc2/linalg/diagonal
    method: GET
    data_selector: out
- name: outer
  endpoint:
    path: /blosc2/linalg/outer
    method: GET
    data_selector: out
- name: remainder
  endpoint:
    path: remainder
    method: GET
    data_selector: out
- name: sign
  endpoint:
    path: sign
    method: GET
    data_selector: out
- name: signbit
  endpoint:
    path: signbit
    method: GET
    data_selector: out
- name: sin
  endpoint:
    path: sin
    method: GET
    data_selector: out
- name: sinh
  endpoint:
    path: sinh
    method: GET
    data_selector: out
- name: sqrt
  endpoint:
    path: sqrt
    method: GET
    data_selector: out
- name: square
  endpoint:
    path: square
    method: GET
    data_selector: out
- name: subtract
  endpoint:
    path: subtract
    method: GET
    data_selector: out
- name: tan
  endpoint:
    path: tan
    method: GET
    data_selector: out
- name: tanh
  endpoint:
    path: tanh
    method: GET
    data_selector: out
- name: trunc
  endpoint:
    path: trunc
    method: GET
    data_selector: out
- name: vecdot
  endpoint:
    path: vecdot
    method: GET
    data_selector: out
- name: compress
  endpoint:
    path: /autofiles/low_level/blosc2.compress.html
    method: GET
- name: compress2
  endpoint:
    path: /autofiles/low_level/blosc2.compress2.html
    method: GET
- name: decompress
  endpoint:
    path: /autofiles/low_level/blosc2.decompress.html
    method: GET
- name: decompress2
  endpoint:
    path: /autofiles/low_level/blosc2.decompress2.html
    method: GET
- name: pack
  endpoint:
    path: /autofiles/low_level/blosc2.pack.html
    method: GET
- name: pack_array
  endpoint:
    path: /autofiles/low_level/blosc2.pack_array.html
    method: GET
- name: pack_array2
  endpoint:
    path: /autofiles/low_level/blosc2.pack_array2.html
    method: GET
- name: pack_tensor
  endpoint:
    path: /autofiles/low_level/blosc2.pack_tensor.html
    method: GET
- name: unpack
  endpoint:
    path: /autofiles/low_level/blosc2.unpack.html
    method: GET
- name: unpack_array
  endpoint:
    path: /autofiles/low_level/blosc2.unpack_array.html
    method: GET
- name: unpack_array2
  endpoint:
    path: /autofiles/low_level/blosc2.unpack_array2.html
    method: GET
- name: unpack_tensor
  endpoint:
    path: /autofiles/low_level/blosc2.unpack_tensor.html
    method: GET
- name: all
  endpoint:
    path: /blosc2/all
    method: GET
    data_selector: all_along_axis
- name: any
  endpoint:
    path: /blosc2/any
    method: GET
    data_selector: any_along_axis
- name: sum
  endpoint:
    path: /blosc2/sum
    method: GET
    data_selector: sum_along_axis
- name: prod
  endpoint:
    path: /blosc2/prod
    method: GET
    data_selector: product_along_axis
- name: mean
  endpoint:
    path: /blosc2/mean
    method: GET
    data_selector: mean_along_axis
- name: std
  endpoint:
    path: /blosc2/std
    method: GET
    data_selector: std_along_axis
- name: var
  endpoint:
    path: /blosc2/var
    method: GET
    data_selector: var_along_axis
- name: min
  endpoint:
    path: /blosc2/min
    method: GET
    data_selector: min_along_axis
- name: max
  endpoint:
    path: /blosc2/max
    method: GET
    data_selector: max_along_axis
- name: matmul
  endpoint:
    path: /blosc2/linalg/matmul
    method: GET
    data_selector: out
    params: {}
- name: tensordot
  endpoint:
    path: /blosc2/linalg/tensordot
    method: GET
    data_selector: out
    params: {}
- name: vecdot
  endpoint:
    path: /blosc2/linalg/vecdot
    method: GET
    data_selector: out
    params: {}
- name: permute_dims
  endpoint:
    path: /blosc2/linalg/permute_dims
    method: GET
    data_selector: out
    params: {}
- name: transpose
  endpoint:
    path: /blosc2/linalg/transpose
    method: GET
    data_selector: out
    params: {}
- name: matrix_transpose
  endpoint:
    path: /blosc2/linalg/matrix_transpose
    method: GET
    data_selector: out
    params: {}
- name: diagonal
  endpoint:
    path: /blosc2/linalg/diagonal
    method: GET
    data_selector: out
    params: {}
- name: outer
  endpoint:
    path: /blosc2/linalg/outer
    method: GET
    data_selector: out
    params: {}
- name: TreeStore
  endpoint:
    path: /blosc2/TreeStore
    method: POST
    data_selector: datasets
    params: {}
- name: stack
  endpoint:
    path: /stack
    method: POST
    data_selector: result
    params: {}
- name: concatenate
  endpoint:
    path: /concatenate
    method: POST
    data_selector: result
    params: {}
- name: evaluate
  endpoint:
    path: /evaluate
    method: POST
    data_selector: result
    params: {}
- name: get_expr_operands
  endpoint:
    path: /get_expr_operands
    method: POST
    data_selector: operands
    params: {}
- name: validate_expr
  endpoint:
    path: /validate_expr
    method: POST
    data_selector: validation_result
    params: {}
- name: TreeStore
  endpoint:
    path: /tree-store
    method: GET
    data_selector: data
    params: {}
- name: compress
  endpoint:
    path: /blosc2.compress
    method: POST
    data_selector: result
- name: decompress
  endpoint:
    path: /blosc2.decompress
    method: POST
    data_selector: result
- name: pack
  endpoint:
    path: /blosc2.pack
    method: POST
    data_selector: result
- name: unpack
  endpoint:
    path: /blosc2.unpack
    method: POST
    data_selector: result
- name: matrix_multiplication
  endpoint:
    path: /matmul
    method: POST
    data_selector: result
    params: {}
- name: lazy_expressions
  endpoint:
    path: /lazyexpr
    method: POST
    data_selector: result
    params: {}
- name: persistent_reductions
  endpoint:
    path: /persistent_reductions
    method: POST
    data_selector: result
    params: {}
- name: grok_codec
  endpoint:
    path: /blosc2-grok
    method: GET
    data_selector: records
    params: {}
- name: user_plugins
  endpoint:
    path: /register/user_plugins
    method: POST
    data_selector: plugins
    params: {}
- name: global_plugins
  endpoint:
    path: /register/global_plugins
    method: POST
    data_selector: plugins
    params: {}
- name: measurements
  endpoint:
    path: /era5-pds/measurements
    method: GET
    data_selector: records
- name: measurements
  endpoint:
    path: /era5-pds/measurements-i10k.parquet
    method: GET
    data_selector: records
- name: measurements
  endpoint:
    path: /era5-pds/measurements-i13k.parquet
    method: GET
    data_selector: records
- name: measurements
  endpoint:
    path: era5-pds/measurements-always-split-clang.parquet
    method: GET
    data_selector: data
    params:
      query: clevel > 0
- name: measurements
  endpoint:
    path: /era5-pds/measurements-never-split-clang.parquet
    method: GET
    data_selector: records
    params:
      incremental: clevel
- name: stack
  endpoint:
    path: /stack
    method: POST
    data_selector: result
    params: {}
- name: concat
  endpoint:
    path: /concat
    method: POST
    data_selector: result
    params: {}
- name: TreeStore
  endpoint:
    path: /blosc2/treeStore
    method: GET
    data_selector: records
    params: {}
- name: ZFP Codec
  endpoint:
    path: /blosc2/plugins/codecs/zfp
    method: GET
    data_selector: codec_modes
    params: {}
- name: array_concatenation
  endpoint:
    path: /posts/blosc2-new-concatenate/
    method: GET
    data_selector: data
    params: {}
- name: matrix_transposition
  endpoint:
    path: /posts/optimizing-chunks-transpose/
    method: GET
    data_selector: data
    params: {}
- name: matrix_multiplication
  endpoint:
    path: /posts/optimizing-chunks-blosc2/
    method: GET
    data_selector: data
    params: {}
- name: compression_parameters
  endpoint:
    path: /compression_parameters
    method: POST
    data_selector: params
    params: {}
- name: grok_codec
  endpoint:
    path: /blosc2-grok
    method: POST
    data_selector: response
    params: {}
- name: TreeStore
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params: {}
- name: NDArray
  endpoint:
    path: /python-blosc2/reference/ndarray.html
    method: GET
    data_selector: records
- name: TreeStore
  endpoint:
    path: /python-blosc2/reference/tree_store.html
    method: GET
    data_selector: records
- name: user_registered_plugins
  endpoint:
    path: /plugins/register/user
    method: POST
    data_selector: response
    params: {}
- name: global_registered_plugins
  endpoint:
    path: /plugins/register/global
    method: POST
    data_selector: response
    params: {}
- name: measurements
  endpoint:
    path: /era5-pds/measurements
    method: GET
    data_selector: records
- name: measurements
  endpoint:
    path: era5-pds/measurements-i10k.parquet
    method: GET
    data_selector: records
- name: measurements
  endpoint:
    path: /era5-pds/measurements-i13k.parquet
    method: GET
    data_selector: records
- name: measurements
  endpoint:
    path: /era5-pds/measurements-always-split-clang.parquet
    method: GET
    data_selector: data
    params:
      query: clevel > 0
- name: measurements
  endpoint:
    path: era5-pds/measurements-never-split-clang.parquet
    method: GET
    data_selector: data
    params:
      query: clevel > 0
- name: compression_parameters
  endpoint:
    path: /set_params_defaults
    method: POST
    data_selector: params
    params:
      codec: blosc2.Codec.GROK
      filters: []
      splitmode: blosc2.SplitMode.NEVER_SPLIT
- name: grok_codec
  endpoint:
    path: /blosc2-grok
    method: POST
    data_selector: params
    params: {}
- name: TreeStore
  endpoint:
    path: /treestore
    method: GET
    data_selector: datasets
    params: {}
notes:
- 'Access data from anywhere: read/write in memory or disk, stream from the network,
  or use memory-mapped files for high-performance I/O.'
- Blosc2’s format is simple and accessible, with specifications under 4000 words that
  make it easy to read and integrate.
- The basic compressed data container (aka super-chunk).
- Allows to create compressed data, decompress it, and manage the data.
- The DictStore is still experimental and subject to change.
- 'External persistence uses the following file extensions: .b2nd for NDArray and
  .b2f for SChunk.'
- Uses numpy for data handling
- TreeStore builds on top of DictStore by enforcing a strict hierarchical key structure.
- Data is stored only at leaf nodes; intermediate path segments are considered structural
  nodes.
- The TreeStore is still experimental and subject to change.
- Only remote C2Array objects are stored as lightweight references (URL base and path).
- Embedded arrays increase the size of the .b2e container.
- Embedded arrays (NumPy, NDArray, and SChunk) increase the size of the .b2e container.
- Remote C2Array nodes only store lightweight references; reading them requires access
  to the remote source.
- This is currently a beta feature (especially for write operations) and we recommend
  trying it out and reporting any issues you may encounter.
- Bytedelta can achieve higher compression ratios in most datasets, specially in combination
  with capable codecs like ZSTD, with a maximum gain of 37% (pressure) over other
  codecs; only in one case (precip) compression ratio decreases.
- While bytedelta excels at achieving high compression ratios, this requires more
  computing power.
- TreeStore is currently in beta
- 'Params for Blosc2: number of threads, compression levels, codecs, and chunk sizes.'
- A series of utilities are provided to work with expressions in a more convenient
  way.
- TreeStore is currently in beta, feedback welcomed.
- Blosc2's chunk-based approach offers a new path to efficiency in matrix multiplication.
- Supports lazy expressions and persistent reductions for efficient data processing.
- Optimized for handling large datasets with chunked operations.
- In the realm of data compression, efficiency is key.
- Lossy compression techniques are commonly employed in scenarios where minor degradation
  in quality is acceptable.
- The grok codec has been registered as a global plugin for Blosc2.
- It is important to disable any filter or splitmode when using grok.
- C-Blosc2 API and format have been frozen, and that means that there is guarantee
  that your programs will continue to work with future versions of the library.
- The plugin register functionality allows the use of new codecs and filters.
- A centralized plugin repository has been implemented for community contributions.
- TreeStore is currently in beta.
- Use the new global plugin ID for the grok codec in the examples.
- Data is filtered to remove no compression results.
- Blosc2 offers efficient array concatenation without needing to load everything into
  memory at once.
- Data types are now supported as first class citizens in the b2nd metalayer.
- The Blosc Development Team is happy to announce that the first public release (0.2.0)
  of blosc2-grok is available for testing.
- C-Blosc2's ability to support dynamically loaded plugins allows the library to grow
  in features without increasing the size and complexity of the library itself.
- ZFP is a lossy codec that allows for better compression ratios at the expense of
  precision in floating point data.
- 'Different compression modes available: FIXED-ACCURACY, FIXED-PRECISION, FIXED-RATE.'
- Blosc2's new concatenate and stack features are efficient for large data sets.
- Chunk size impacts performance significantly in Blosc2.
- The grok codec has been already registered as a global plugin for Blosc2
- It is important to disable any filter or splitmode, since we don't want the data
  to be modified before proceeding to the compression using grok
- Supports lazy expressions and persistent reductions for efficient data processing
- Optimized for handling large datasets with chunked operations
- Uses lossy compression techniques in data processing.
- It is important to disable any filter or splitmode before compression using grok.
- Direct chunking allows customization of compression with parameters not allowed
  by the PyTables Filters class.
- Blosc2 is an open and fully documented format, ensuring you are not locked into
  a proprietary solution.
- The format specs are defined in less than 1000 lines of text, so they should be
  easy to read and understand.
- The plugin register functionality lets use new codecs and filters within Blosc in
  an easy and quick way.
- A centralized plugin repository has been implemented for users to propose their
  own plugins.
- Supports multidimensional datasets with two-level partitioning
- New support for arbitrary data types
- Integration of ZFP as a codec plugin will greatly enhance the capabilities of lossy
  compression inside C-Blosc2.
- If users want to specify data loss during compression, it is recommended to use
  the FIXED-ACCURACY or FIXED-PRECISION modes.
- Disable any filter or splitmode, since we don't want the data to be modified before
  proceeding to the compression using grok.
- The grok codec has been already registered as a global plugin for Blosc2.
- It is important to disable any filter or splitmode, since we don't want the data
  to be modified before proceeding to the compression using grok.
- The direct chunking API allows for considerable performance improvements when using
  compression.
errors:
- 'RunTimeError: If a problem is detected'
- 'ValueError: If the size to get is negative'
- 'ERROR: Unsupported indexing method for mixed indices.'
auth_info:
  mentioned_objects: []
client:
  base_url: https://cat2.cloud/demo
  auth:
    auth_token: optional token to authorize requests via HTTP
source_metadata: null
