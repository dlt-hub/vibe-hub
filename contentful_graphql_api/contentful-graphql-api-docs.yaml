resources:
- name: Friendly User
  endpoint:
    path: /friendly-user
    method: GET
    data_selector: items
    params: {}
- name: Asset
  endpoint:
    path: /asset
    method: GET
    data_selector: items
    params: {}
- name: friendlyUserCollection
  endpoint:
    path: /friendlyUserCollection
    method: GET
    data_selector: items
    params: {}
- name: entryCollection
  endpoint:
    path: /entryCollection
    method: GET
    data_selector: items
    params:
      skip: Int
      limit: Int
- name: asset
  endpoint:
    path: /asset
    method: GET
    data_selector: items
    params: {}
- name: Friendly User
  endpoint:
    path: /friendly-user
    method: GET
    data_selector: records
- name: Asset
  endpoint:
    path: /asset
    method: GET
    data_selector: records
- name: articleCollection
  endpoint:
    path: /articleCollection
    method: POST
    data_selector: items
    params: {}
- name: Friendly User
  endpoint:
    path: /friendly-user
    method: GET
    data_selector: fields
- name: Asset
  endpoint:
    path: /asset
    method: GET
    data_selector: fields
- name: friendlyUser
  endpoint:
    path: /friendlyUserCollection
    method: GET
    data_selector: items
    params:
      limit: 100
- name: friendly_user
  endpoint:
    path: /friendly_user
    method: POST
    data_selector: data
    params: {}
- name: asset
  endpoint:
    path: /asset
    method: POST
    data_selector: data
    params: {}
notes:
- This is a read-only API
- For EU data residency customers, the Base URL is https://graphql.eu.contentful.com
- To access non-published content, a preview access token is required
- GraphQL API serves asset URLs with a protocol, defaulting to HTTPS.
- The Embargoed assets feature is only available on specific plans.
- You cannot create an Asset Key via the GraphAPI, you will need to do that via the
  CMA, CDA, or CPA based off of your access needs.
- Accessing non-published content requires a preview access token
- GraphQL API always serves asset URLs with a protocol, defaulting to HTTPS.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- The API is read-only
- Schema generation fails when two or more content type IDs would be transformed to
  the same type name.
- Asset keys are used when signing embargoed asset URLs.
- GraphQL API supports querying assets, entries, and collections.
- Transformation options are available for image assets.
- The GraphQL API gives you the control to choose whether you want to access published
  or non-published content in a very granular fashion.
- Any query that accesses non published content requires a preview access token.
- Unlike the CDA, the GraphQL Content API always serves asset URLs with a protocol,
  defaulting to HTTPS.
- You cannot create an Asset Key via the GraphAPI.
- You can order any collection if it contains a many reference field with a validation
  rule that accepts only entries from a single content type.
- Every filter input type has a sys property.
- API is read-only
- GraphQL API allows for complex querying and relationships.
- Images must be transformed via query parameters for optimal delivery.
- The GraphQL API gives you the control to choose whether you want to access published
  or non-published content.
- Default locale is used if not specified in the query.
- When you filter a reference field which accepts more than one content type, the
  complexity of your query increases by the number of content types the field can
  accept.
- GraphQL Content API is available on all spaces for customers on current pricing
  plans.
- You cannot order the entryCollection field.
- Using the x-contentful-resource-resolution header will also consume the Rate Limiting
  from the space IDs present in it when the request is uncached.
errors:
- '429 Too Many Requests: Wait before making more requests'
- 'ACCESS_TOKEN_INVALID: Ensure a valid preview access token is provided'
- 'UNKNOWN_LOCALE: Returned if the requested locale does not exist'
- 'TOO_COMPLEX_QUERY: The query exceeds the complexity limit'
- 'QUERY_TOO_BIG: The query size exceeds the limit'
- 'UNKNOWN_SPACE: Check if the space id in the URL is correct.'
- '429 Too Many Requests: Wait for the specified time before making more requests'
- '429 Too Many Requests: Wait for the reset time before making more requests'
- 'TOO_COMPLEX_QUERY: The query exceeds complexity limits'
- 'QUERY_TOO_BIG: The query exceeds size limits'
- 'ACCESS_TOKEN_INVALID: The provided access token is not valid'
- 'UNKNOWN_LOCALE: The requested locale does not exist'
- '429 Too Many Requests: Wait for reset time before making more requests'
- 'TOO_COMPLEX_QUERY: Query exceeds complexity limit'
- 'QUERY_TOO_BIG: Query exceeds size limit'
- 'ACCESS_TOKEN_INVALID: Invalid preview access token'
- 'UNKNOWN_LOCALE: Requested locale does not exist'
- '429 Too Many Requests: Wait before making more requests.'
- 'TOO_COMPLEX_QUERY: The query exceeds the complexity limit.'
- 'QUERY_TOO_BIG: The query size exceeds the limit.'
- '429 Too Many Requests: Wait for the reset time specified in the X-Contentful-RateLimit-Reset
  header'
- 'QUERY_TOO_BIG: The query size exceeds the 8kb limit'
- 'ACCESS_TOKEN_INVALID: A valid preview access token is required for non-published
  content'
- 'UNKNOWN_LOCALE: Requested locale does not exist.'
- 'UNKNOWN_LOCALE: The requested locale does not exist.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- 'TOO_COMPLEX_QUERY: The query exceeds complexity limits.'
- '429 Too Many Requests: Wait for the reset time before making more requests.'
- 'PersistedQueryMismatch: If you sent a wrong hash.'
- 'PersistedQueryNotFound: If you sent a hash without caching the query first.'
- ACCESS_TOKEN_MISSING
- ACCESS_TOKEN_INVALID
- COLLIDING_TYPE_NAMES
- COLLIDING_FIELD_NAMES
- RESERVED_FIELD_NAME
- UNKNOWN_ENVIRONMENT
- UNKNOWN_SPACE
- MISSING_QUERY
- QUERY_TOO_BIG
- INVALID_QUERY_FORMAT
- INVALID_VARIABLES_FORMAT
- PersistedQueryNotFound
- PersistedQueryMismatch
- TOO_COMPLEX_QUERY
- 'QUERY_OPERATION_NAME_MISMATCH: Could not determine what operation to execute, received
  ''blogPostCollectionQuery3'' but found ''blogPostCollectionQuery1, blogPostCollectionQuery2'''
- 'UNKNOWN_LOCALE: Query execution error. Requested locale ''de-DE'' does not exist
  in the space'
- 'UNRESOLVABLE_LINK: Query execution error. Link to entry ''my-dog'' on field ''pet''
  within type ''Blog'' cannot be resolved'
- 'UNEXPECTED_LINKED_CONTENT_TYPE: Query execution error. Link from entry ''blog-1''
  to entry ''Tom'' on field ''externalAuthor'' within type ''Blog'' returned an unexpected
  content type'
- 'RESOURCES_EXHAUSTED: Query execution error. Query too complex to be executed in
  allocated resources'
- 'UNRESOLVABLE_RESOURCE_LINK: Query execution error. ''vendorId'' link cannot be
  resolved'
auth_info:
  mentioned_objects: []
client:
  base_url: https://graphql.contentful.com
  auth:
    type: Bearer
    location: header
    header_name: Authorization
  headers:
    Content-Type: application/json
source_metadata: null
