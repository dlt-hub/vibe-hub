resources:
- name: agents_list
  endpoint:
    path: /agents/list
    method: GET
    data_selector: data
    params: {}
- name: agents_info
  endpoint:
    path: /agents/info
    method: GET
    data_selector: data
    params: {}
- name: agents_update
  endpoint:
    path: /agents/update
    method: POST
    data_selector: null
    params: {}
- name: agents_connect
  endpoint:
    path: /agents/connect
    method: POST
    data_selector: data
    params: {}
- name: agents_reboot
  endpoint:
    path: /agents/reboot
    method: POST
    data_selector: null
    params: {}
- name: wake_agent
  endpoint:
    path: /agents/wake
    method: POST
    data_selector: status
    params:
      apikey: <string>
      id: <number>
- name: logout_agent
  endpoint:
    path: /agents/logout
    method: POST
    data_selector: status
    params:
      apikey: <string>
      id: <number>
- name: support_list
  endpoint:
    path: /support/list
    method: GET
    data_selector: data
    params: {}
- name: support_create
  endpoint:
    path: /support/create
    method: POST
    data_selector: data
    params: {}
- name: support_info
  endpoint:
    path: /support/info
    method: GET
    data_selector: data
    params: {}
- name: support_close
  endpoint:
    path: /support/close
    method: POST
    data_selector: ''
    params: {}
- name: history_list
  endpoint:
    path: /history/list
    method: GET
    data_selector: data
    params: {}
- name: hardware_resources
  endpoint:
    path: /system/requirements/hardware
    method: GET
    data_selector: resources
    params: {}
- name: network_resources
  endpoint:
    path: /system/requirements/network
    method: GET
    data_selector: resources
    params: {}
- name: additional_proxy_servers
  endpoint:
    path: /system/requirements/proxy
    method: GET
    data_selector: resources
    params: {}
- name: agent_installation
  endpoint:
    path: /agent/installation
    method: GET
- name: mass_deployment
  endpoint:
    path: /mass/deployment
    method: GET
- name: Group Policy Management
  endpoint:
    path: /gpmc.msc
    method: GET
    data_selector: instructions
    params: {}
- name: branding_settings
  endpoint:
    path: /panel/settings/branding
    method: GET
    data_selector: branding
- name: access_rights
  endpoint:
    path: /access/rights
    method: GET
    data_selector: access_levels
    params: {}
- name: technician_management
  endpoint:
    path: /technicians/manage
    method: GET
    data_selector: technician_list
    params: {}
- name: technician
  endpoint:
    path: /api/v1/technicians
    method: POST
    data_selector: technicians
    params: {}
- name: access_rights
  endpoint:
    path: /api/v1/access_rights
    method: GET
    data_selector: access_rights
    params: {}
- name: agents_list
  endpoint:
    path: /v1/agents/list
    method: GET
    data_selector: data
- name: agents_connect
  endpoint:
    path: /v1/agents/connect
    method: POST
    data_selector: data
- name: agents
  endpoint:
    path: /v1/agents/list
    method: GET
    data_selector: data
    params:
      search: '1001:1'
- name: connect
  endpoint:
    path: /v1/agents/connect
    method: POST
    data_selector: data.url
    params: {}
- name: device
  endpoint:
    path: /devices
    method: GET
    data_selector: devices
- name: connect_desktop
  endpoint:
    path: /api/connect
    method: POST
    data_selector: connection_details
- name: download_file
  endpoint:
    path: /api/download
    method: POST
    data_selector: file_details
- name: invite_support
  endpoint:
    path: /api/invite
    method: POST
    data_selector: invite_details
- name: session_management
  endpoint:
    path: /api/session
    method: GET
    data_selector: sessions
- name: communication
  endpoint:
    path: /api/communication
    method: GET
    data_selector: messages
- name: data_exchange
  endpoint:
    path: /api/data-exchange
    method: GET
    data_selector: data
- name: device_management
  endpoint:
    path: /api/device
    method: GET
    data_selector: devices
notes:
- API key is required for all requests.
- Uses OAuth2 with refresh token â€” requires setup of connected app in api
- Be sure to change the password for the administrator account!
- Ensure continuous access to the remote desktop.
- The agent program must be granted screen recording and computer control rights.
- Orca.exe component is required for installation.
- Parameters can be assigned through group settings in the console.
- To set up remote access to a computer, select a connection for any devices.
- If you need to set up permanent access on a phone, select the instruction for mobile
  devices.
- Requests are manually moderated by the Getscreen.me team within 2 business days.
- After approval of your settings, the status of the request will change from 'Draft'
  to 'Published'.
- Branding settings do not apply to previously downloaded and installed agent programs.
- Do not use the links from the permanent_url and onetime_url fields in the agent's
  data.
- Supports Windows, macOS, Linux, and Android operating systems.
- Not all versions support automatic binding.
- The maximum file size is 50 MB due to the limitations imposed by Telegram.
- Maximum file size is 50 MB due to limitations imposed by Telegram.
- Available only for devices running Windows Server
- Not available for unauthorized users
- Unauthorized sessions are considered insecure.
- Some features may not be available if the agent is not installed or not running
  with the required permissions.
- The File Manager page will open in any browser, and the functions for working with
  files on the remote device will be available.
- 'Simultaneous Work: File Manager and Screen Control modes can work simultaneously
  for the same device.'
- To access the local file system, support for the File System Access API in the browser
  is required.
errors:
- '400 Bad Request: Request denied, invalid parameters, error'
- '402 Payment Required: Request rejected, request limit for the service plan exceeded'
- '403 Forbidden: Request denied, no access to data'
- '404 Not Found: Request denied, unknown request URL'
- '401 Unauthorized: Recheck API key validity'
- '400 Bad Request: Check request parameters'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'Possible Issues: If the installation button is locked, restart the agent with administrator
  rights.'
- '401 Unauthorized: Recheck API key'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- '401 Unauthorized: Recheck API key or token expiration'
- 'UNAUTHORIZED: Ensure valid credentials are used.'
- 'SESSION_TIMEOUT: Reconnect to continue the session.'
- 'DEVICE_NOT_FOUND: Verify the remote device is online.'
- The browser prohibits selecting directories from the disk where the operating system
  is installed.
- Errors may occur when renaming current files and writing new files to the disk.
- Errors may occur due to browser security policy restrictions.
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
client:
  base_url: https://getscreen.me
  auth:
    type: oauth2
    flow: refresh_token
    location: header
    header_name: Authorization
source_metadata: null
