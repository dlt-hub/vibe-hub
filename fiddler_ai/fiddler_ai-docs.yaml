resources:
- name: alert_rule
  endpoint:
    path: /alert_rule
    method: GET
    data_selector: records
    params: {}
- name: alert_record
  endpoint:
    path: /alert_record
    method: GET
    data_selector: records
    params: {}
- name: baseline
  endpoint:
    path: /technical-reference/api-methods-30#baseline
    method: GET
    data_selector: Baseline
    params: {}
- name: AlertRule
  endpoint:
    path: /alert/rules
    method: GET
    data_selector: alert_rules
- name: AlertRecord
  endpoint:
    path: /alert/records
    method: GET
    data_selector: alert_records
- name: Baseline
  endpoint:
    path: /baselines
    method: GET
    data_selector: baselines
- name: model
  endpoint:
    path: /model
    method: GET
    data_selector: models
- name: model_compact
  endpoint:
    path: /model_compact
    method: GET
    data_selector: models_compact
- name: alert_rule
  endpoint:
    path: /alert/rules
    method: POST
    data_selector: alert_rule
    params: {}
- name: alert_record
  endpoint:
    path: /alert/records
    method: GET
    data_selector: alert_records
    params: {}
- name: baseline
  endpoint:
    path: /baselines
    method: POST
    data_selector: baseline
    params: {}
- name: baseline
  endpoint:
    path: /api/baseline
    method: GET
    data_selector: baseline
    params: {}
- name: custom_metric
  endpoint:
    path: /api/custom_metric
    method: GET
    data_selector: custom_metric
    params: {}
- name: dataset
  endpoint:
    path: /api/dataset
    method: GET
    data_selector: dataset
    params: {}
- name: job
  endpoint:
    path: /api/job
    method: GET
    data_selector: job
    params: {}
- name: model
  endpoint:
    path: /api/model
    method: GET
    data_selector: model
    params: {}
- name: alert_rule
  endpoint:
    path: /api/alert_rules
    method: GET
    data_selector: alert_rules
- name: alert_record
  endpoint:
    path: /api/alert_records
    method: GET
    data_selector: alert_records
- name: baseline
  endpoint:
    path: /api/baselines
    method: GET
    data_selector: baselines
- name: baseline
  endpoint:
    path: /baselines
    method: GET
    data_selector: baselines
- name: custom_metric
  endpoint:
    path: /custom_metrics
    method: GET
    data_selector: custom_metrics
- name: dataset
  endpoint:
    path: /datasets
    method: GET
    data_selector: datasets
- name: job
  endpoint:
    path: /jobs
    method: GET
    data_selector: jobs
- name: model
  endpoint:
    path: /models
    method: GET
    data_selector: models
- name: AlertRule
  endpoint:
    path: /alert/rules
    method: GET
    data_selector: rules
- name: AlertRecord
  endpoint:
    path: /alert/records
    method: GET
    data_selector: records
- name: Baseline
  endpoint:
    path: /baseline
    method: GET
    data_selector: baselines
- name: alert_rule
  endpoint:
    path: /api/alert_rules
    method: GET
    data_selector: data
    params: {}
- name: AlertRule
  endpoint:
    path: /technical-reference/api-methods-30#alertrule
    method: GET
- name: AlertRule
  endpoint:
    path: /alert/rules
    method: GET
    data_selector: alert_rules
    params: {}
- name: AlertRecord
  endpoint:
    path: /alert/records
    method: GET
    data_selector: alert_records
    params: {}
- name: Baseline
  endpoint:
    path: /baseline
    method: GET
    data_selector: baselines
    params: {}
- name: baseline
  endpoint:
    path: /api/baselines
    method: GET
    data_selector: baselines
    params: {}
- name: custom_metric
  endpoint:
    path: /api/custom_metrics
    method: GET
    data_selector: custom_metrics
    params: {}
- name: dataset
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: job
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: model
  endpoint:
    path: /api/models
    method: GET
    data_selector: models
    params: {}
- name: precompute_predictions
  endpoint:
    path: /precompute_predictions
    method: POST
    data_selector: Job
    params:
      dataset_id: UUID
      update: false
- name: explain
  endpoint:
    path: /explain
    method: POST
    data_selector: explain_result
    params:
      input_data_source: RowDataSource
      ref_data_source: DatasetDataSource
- name: baseline
  endpoint:
    path: /api/baseline
    method: GET
    data_selector: records
- name: custom_metric
  endpoint:
    path: /api/custom_metric
    method: GET
    data_selector: records
- name: dataset
  endpoint:
    path: /api/dataset
    method: GET
    data_selector: records
- name: job
  endpoint:
    path: /api/job
    method: GET
    data_selector: records
- name: model
  endpoint:
    path: /api/model
    method: GET
    data_selector: records
- name: review_sentiment_clusters
  endpoint:
    path: /text_embedding
    method: POST
    data_selector: features
    params:
      n_clusters: 8
      n_tags: 20
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: projects
    params: {}
- name: webhooks
  endpoint:
    path: /api/webhooks
    method: GET
    data_selector: webhooks
    params: {}
- name: document_topic_clusters
  endpoint:
    path: /document_topic_clusters
    method: POST
    data_selector: feature
    params: {}
- name: TokenCount
  endpoint:
    path: /token_count
    method: POST
    data_selector: fiddler_custom_features
    params: {}
- name: SQLValidation
  endpoint:
    path: /sql_validation
    method: POST
    data_selector: sql_validation
    params: {}
- name: AlertRule
  endpoint:
    path: /api/alert_rule
    method: POST
    data_selector: alert_rules
- name: AlertRecord
  endpoint:
    path: /api/alert_record
    method: GET
    data_selector: alert_records
- name: Baseline
  endpoint:
    path: /api/baseline
    method: POST
    data_selector: baselines
- name: alert_rule
  endpoint:
    path: /api/alert_rules
    method: GET
    data_selector: records
- name: baseline
  endpoint:
    path: /api/baselines
    method: GET
    data_selector: records
- name: project
  endpoint:
    path: /projects
    method: GET
    data_selector: projects
- name: segment
  endpoint:
    path: /segments
    method: GET
    data_selector: segments
- name: webhook
  endpoint:
    path: /webhooks
    method: GET
    data_selector: webhooks
- name: baseline
  endpoint:
    path: /api/baselines
    method: GET
    data_selector: baselines
    params: {}
- name: custom_metric
  endpoint:
    path: /api/custom_metrics
    method: GET
    data_selector: custom_metrics
    params: {}
- name: dataset
  endpoint:
    path: /api/datasets
    method: GET
    data_selector: datasets
    params: {}
- name: job
  endpoint:
    path: /api/jobs
    method: GET
    data_selector: jobs
    params: {}
- name: model
  endpoint:
    path: /api/models
    method: GET
    data_selector: models
    params: {}
- name: Text Statistics
  endpoint:
    path: /textstat/statistics
    method: GET
    data_selector: statistics
    params: {}
- name: Question Sentiment
  endpoint:
    path: /sentiment/question
    method: GET
    data_selector: sentiment
    params: {}
- name: Profanity
  endpoint:
    path: /profanity/check
    method: GET
    data_selector: contains_profanity
    params: {}
- name: Answer Relevance
  endpoint:
    path: /answer/relevance
    method: GET
    data_selector: relevance
    params: {}
- name: Faithfulness
  endpoint:
    path: /faithfulness/check
    method: GET
    data_selector: faithfulness
    params: {}
- name: Coherence
  endpoint:
    path: /coherence/check
    method: GET
    data_selector: coherence
    params: {}
- name: Conciseness
  endpoint:
    path: /conciseness/check
    method: GET
    data_selector: conciseness
    params: {}
- name: Toxicity
  endpoint:
    path: /toxicity/check
    method: GET
    data_selector: toxicity
    params: {}
- name: Regex Match
  endpoint:
    path: /regex/match
    method: GET
    data_selector: regex_match
    params: {}
- name: Topics
  endpoint:
    path: /topics/analyze
    method: GET
    data_selector: topics
    params: {}
- name: Banned Keyword Detector
  endpoint:
    path: /banned_keywords/check
    method: GET
    data_selector: contains_banned_kw
    params: {}
- name: Language Detector
  endpoint:
    path: /language/detect
    method: GET
    data_selector: language
    params: {}
- name: Fast Safety
  endpoint:
    path: /safety/check
    method: GET
    data_selector: safety
    params: {}
- name: Fast Faithfulness
  endpoint:
    path: /faithfulness/fast_check
    method: GET
    data_selector: fast_faithfulness
    params: {}
- name: Token Count
  endpoint:
    path: /token/count
    method: GET
    data_selector: token_count
    params: {}
- name: SQL Validation
  endpoint:
    path: /sql/validate
    method: GET
    data_selector: sql_validation
    params:
      dialect: mysql
- name: JSON Validation
  endpoint:
    path: /json/validate
    method: GET
    data_selector: json_validation
    params:
      strict: 'true'
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: data
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: data
    params: {}
- name: test_result
  endpoint:
    path: /get_prediction
    method: POST
    data_selector: result
    params: {}
- name: prompt_spec_validation
  endpoint:
    path: /v3/llm-as-a-judge/prompt-spec/validate
    method: POST
    data_selector: prediction
- name: prompt_spec_prediction
  endpoint:
    path: /v3/llm-as-a-judge/prompt-spec/predict
    method: POST
    data_selector: prediction
- name: prompt_spec
  endpoint:
    path: /v3/llm-as-a-judge/prompt-spec
    method: POST
    data_selector: prompt_spec
- name: predict
  endpoint:
    path: /v3/llm-as-a-judge/prompt-spec/predict
    method: POST
    data_selector: prediction
- name: validate
  endpoint:
    path: /v3/llm-as-a-judge/prompt-spec/validate
    method: POST
    data_selector: validation_result
- name: prompt_spec_validate
  endpoint:
    path: /v3/llm-as-a-judge/prompt-spec/validate
    method: POST
    data_selector: prediction
    params: {}
- name: prompt_spec_predict
  endpoint:
    path: /v3/llm-as-a-judge/prompt-spec/predict
    method: POST
    data_selector: prediction
    params: {}
- name: predict
  endpoint:
    path: /v3/llm-as-a-judge/prompt-spec/predict
    method: POST
    data_selector: prediction
- name: validate
  endpoint:
    path: /v3/llm-as-a-judge/prompt-spec/validate
    method: POST
    data_selector: status
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: records
    params: {}
- name: model_monitoring
  endpoint:
    path: /api/v1/models/monitoring
    method: GET
    data_selector: data
    params: {}
- name: class_imbalance
  endpoint:
    path: /api/v1/class_imbalance
    method: GET
    data_selector: records
- name: model_versions
  endpoint:
    path: /api/model-versions
    method: GET
    data_selector: records
    params: {}
- name: ranking_model
  endpoint:
    path: /api/ranking_model
    method: GET
    data_selector: results
    params: {}
- name: model_performance
  endpoint:
    path: /api/v1/model/performance
    method: GET
    data_selector: data
    params: {}
- name: feature_impact
  endpoint:
    path: /api/v1/feature_impact
    method: POST
    data_selector: impact_values
    params: {}
- name: enrichments
  endpoint:
    path: /api/enrichments
    method: GET
    data_selector: records
    params: {}
- name: ModelSpec
  endpoint:
    path: /technical-reference/api-methods-30#modelspec
    method: POST
    data_selector: model_spec
    params: {}
- name: Enrichment
  endpoint:
    path: /technical-reference/api-methods-30#enrichment-private-preview
    method: GET
    data_selector: enrichments
    params: {}
- name: TextEmbedding
  endpoint:
    path: /technical-reference/api-methods-30#textembedding
    method: POST
    data_selector: text_embedding
    params: {}
- name: OpenAI-based metrics
  endpoint:
    path: /api/openai-metrics
    method: GET
- name: Fiddler Fast Trust metrics
  endpoint:
    path: /api/fast-trust-metrics
    method: GET
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: data
    params: {}
- name: custom_llm_classifier
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#custom-llm-classifier-private-preview
    method: GET
    data_selector: enrichments
- name: faithfulness
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#faithfulness-private-preview
    method: GET
    data_selector: enrichments
- name: ftl_response_faithfulness
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#fast-faithfulness-private-preview
    method: GET
    data_selector: enrichments
- name: answer_relevance
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#answer-relevance-private-preview
    method: GET
    data_selector: enrichments
- name: conciseness
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#conciseness-private-preview
    method: GET
    data_selector: enrichments
- name: coherence
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#coherence-private-preview
    method: GET
    data_selector: enrichments
- name: toxicity
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#toxicity-private-preview
    method: GET
    data_selector: enrichments
- name: ftl_prompt_safety
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#fast-safety-private-preview
    method: GET
    data_selector: enrichments
- name: pii
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#personally-identifiable-information-private-preview
    method: GET
    data_selector: enrichments
- name: regex_match
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#regex-match-private-preview
    method: GET
    data_selector: enrichments
- name: topic_model
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#topic-private-preview
    method: GET
    data_selector: enrichments
- name: banned_keywords
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#banned-keyword-detector-private-preview
    method: GET
    data_selector: enrichments
- name: profanity
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#profanity-private-preview
    method: GET
    data_selector: enrichments
- name: language_detection
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#language-detector-private-preview
    method: GET
    data_selector: enrichments
- name: evaluate
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#evaluate-private-preview
    method: GET
    data_selector: enrichments
- name: sentiment
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#sentiment-private-preview
    method: GET
    data_selector: enrichments
- name: textstat
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#textstat-private-preview
    method: GET
    data_selector: enrichments
- name: token_count
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#token-count-private-preview
    method: GET
    data_selector: enrichments
- name: sql_validation
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#sql-validation-private-preview
    method: GET
    data_selector: enrichments
- name: json_validation
  endpoint:
    path: /product-guide/llm-monitoring/enrichments-private-preview#json-validation-private-preview
    method: GET
    data_selector: enrichments
- name: TextEmbedding
  endpoint:
    path: /technical-reference/api-methods-30#textembedding
    method: POST
    data_selector: embedding_data
    params: {}
- name: Custom LLM Classifier
  endpoint:
    path: /technical-reference/api-methods-30#custom-llm-classifier-private-preview
    method: POST
    data_selector: classification_data
    params: {}
- name: Centroid Distance
  endpoint:
    path: /technical-reference/api-methods-30#centroid-distance-private-preview
    method: GET
    data_selector: centroid_distance_data
    params: {}
- name: Personally Identifiable Information
  endpoint:
    path: /technical-reference/api-methods-30#personally-identifiable-information-private-preview
    method: GET
    data_selector: pii_data
    params: {}
- name: Evaluate
  endpoint:
    path: /technical-reference/api-methods-30#evaluate-private-preview
    method: POST
    data_selector: evaluation_data
    params: {}
- name: Textstat
  endpoint:
    path: /technical-reference/api-methods-30#textstat-private-preview
    method: GET
    data_selector: textstat_data
    params: {}
- name: Sentiment
  endpoint:
    path: /technical-reference/api-methods-30#sentiment-private-preview
    method: POST
    data_selector: sentiment_data
    params: {}
- name: Profanity
  endpoint:
    path: /technical-reference/api-methods-30#profanity-private-preview
    method: GET
    data_selector: profanity_data
    params: {}
- name: Toxicity
  endpoint:
    path: /technical-reference/api-methods-30#toxicity-private-preview
    method: GET
    data_selector: toxicity_data
    params: {}
- name: Regex Match
  endpoint:
    path: /technical-reference/api-methods-30#regex-match-private-preview
    method: POST
    data_selector: regex_match_data
    params: {}
- name: Topic
  endpoint:
    path: /technical-reference/api-methods-30#topic-private-preview
    method: POST
    data_selector: topic_data
    params: {}
- name: Banned Keyword Detector
  endpoint:
    path: /technical-reference/api-methods-30#banned-keyword-detector-private-preview
    method: GET
    data_selector: banned_keyword_data
    params: {}
- name: Language Detector
  endpoint:
    path: /technical-reference/api-methods-30#language-detector-private-preview
    method: GET
    data_selector: language_detection_data
    params: {}
- name: Answer Relevance
  endpoint:
    path: /technical-reference/api-methods-30#answer-relevance-private-preview
    method: POST
    data_selector: answer_relevance_data
    params: {}
- name: Faithfulness
  endpoint:
    path: /technical-reference/api-methods-30#faithfulness-private-preview
    method: GET
    data_selector: faithfulness_data
    params: {}
- name: Coherence
  endpoint:
    path: /technical-reference/api-methods-30#coherence-private-preview
    method: GET
    data_selector: coherence_data
    params: {}
- name: Conciseness
  endpoint:
    path: /technical-reference/api-methods-30#conciseness-private-preview
    method: GET
    data_selector: conciseness_data
    params: {}
- name: Fast Safety
  endpoint:
    path: /technical-reference/api-methods-30#fast-safety-private-preview
    method: GET
    data_selector: fast_safety_data
    params: {}
- name: Fast Faithfulness
  endpoint:
    path: /technical-reference/api-methods-30#fast-faithfulness-private-preview
    method: GET
    data_selector: fast_faithfulness_data
    params: {}
- name: Token Count
  endpoint:
    path: /technical-reference/api-methods-30#token-count-private-preview
    method: GET
    data_selector: token_count_data
    params: {}
- name: SQL Validation
  endpoint:
    path: /technical-reference/api-methods-30#sql-validation-private-preview
    method: POST
    data_selector: sql_validation_data
    params: {}
- name: JSON Validation
  endpoint:
    path: /technical-reference/api-methods-30#json-validation-private-preview
    method: POST
    data_selector: json_validation_data
    params: {}
- name: fast_safety_guardrails
  endpoint:
    path: /v3/guardrails/ftl-safety
    method: POST
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: records
    params: {}
- name: fast_faithfulness_guardrails
  endpoint:
    path: /v3/guardrails/ftl-response-faithfulness
    method: POST
    data_selector: data
    params: {}
- name: fast_pii_guardrails
  endpoint:
    path: /v3/guardrails/sensitive-information
    method: POST
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: records
- name: alerts
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: records
- name: AlertRecipes
  endpoint:
    path: /path/to/AlertRecipes
    method: GET
    data_selector: records
    params: {}
- name: RecipeParameters
  endpoint:
    path: /path/to/RecipeParameters
    method: GET
    data_selector: records
    params: {}
- name: NotificationPacks
  endpoint:
    path: /path/to/NotificationPacks
    method: GET
    data_selector: records
    params: {}
- name: custom_metrics
  endpoint:
    path: /api/custom_metrics
    method: GET
    data_selector: metrics
    params: {}
- name: custom_metric
  endpoint:
    path: /api/custom_metrics
    method: POST
    data_selector: data
    params: {}
- name: model_performance
  endpoint:
    path: /api/model/performance
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: projects
    params: {}
- name: models
  endpoint:
    path: /api/v1/models
    method: GET
    data_selector: models
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: model_versions
  endpoint:
    path: /model/versions
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
- name: models
  endpoint:
    path: /api/v1/models
    method: GET
    data_selector: data
- name: chart_data
  endpoint:
    path: /product-guide/monitoring-platform/monitoring-charts
    method: GET
    data_selector: charts
    params: {}
- name: segment
  endpoint:
    path: /technical-reference/api-methods-30#create-5
    method: POST
    data_selector: segment
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: records
    params: {}
- name: model_traffic
  endpoint:
    path: /api/v1/model/traffic
    method: GET
    data_selector: traffic_data
    params: {}
- name: events
  endpoint:
    path: /events
    method: GET
    data_selector: events
    params: {}
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: data
    params: {}
- name: Feature Analytics
  endpoint:
    path: /api/feature_analytics
    method: POST
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/v1/models
    method: GET
    data_selector: data
    params: {}
- name: performance_chart
  endpoint:
    path: /api/v1/performance_chart
    method: GET
    data_selector: charts
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/v1/models
    method: GET
    data_selector: data
    params: {}
- name: monitoring_charts
  endpoint:
    path: /api/v1/monitoring/charts
    method: GET
    data_selector: charts
    params: {}
- name: explainability
  endpoint:
    path: /api/v1/explainability
    method: GET
    data_selector: data
    params: {}
- name: model
  endpoint:
    path: /api/v1/models
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: feature_impact
  endpoint:
    path: /api/feature_impact
    method: POST
    data_selector: feature_impacts
- name: model_artifact
  endpoint:
    path: /add_artifact
    method: POST
    data_selector: deployment_params
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: data
    params: {}
- name: partner_app_permissions
  endpoint:
    path: /sagemaker/partner-app
    method: POST
    data_selector: Statement
    params: {}
- name: license_manager_permissions
  endpoint:
    path: /license-manager
    method: POST
    data_selector: Statement
    params: {}
- name: s3_permissions
  endpoint:
    path: /s3
    method: POST
    data_selector: Statement
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: records
    params: {}
- name: Partner AI Apps admin permissions
  endpoint:
    path: /services/data/vXX.X/sobjects/PartnerAIAppsAdminPermissions
    method: POST
    data_selector: records
    params: {}
- name: Partner AI App execution role
  endpoint:
    path: /services/data/vXX.X/sobjects/PartnerAppExecutionRole
    method: POST
    data_selector: records
    params: {}
- name: User execution role
  endpoint:
    path: /services/data/vXX.X/sobjects/UserExecutionRole
    method: POST
    data_selector: records
    params: {}
- name: User access role
  endpoint:
    path: /services/data/vXX.X/sobjects/UserAccessRole
    method: POST
    data_selector: records
    params: {}
- name: SageMaker domain
  endpoint:
    path: /services/data/vXX.X/sobjects/SageMakerDomain
    method: POST
    data_selector: records
    params: {}
- name: Shared user profile
  endpoint:
    path: /services/data/vXX.X/sobjects/SharedUserProfile
    method: POST
    data_selector: records
    params: {}
- name: Shared space
  endpoint:
    path: /services/data/vXX.X/sobjects/SharedSpace
    method: POST
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /api/v1/models
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: data
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: events
  endpoint:
    path: /events
    method: POST
    data_selector: data
    params: {}
- name: alert_rule
  endpoint:
    path: /alert/rules
    method: POST
    data_selector: alert_rules
    params: {}
- name: alert_rules
  endpoint:
    path: /api/alert_rules
    method: POST
    data_selector: alert_rule
    params: {}
- name: alert_rule
  endpoint:
    path: /alerts/rules
    method: POST
    data_selector: alert_rules
    params: {}
- name: alert_rule_list
  endpoint:
    path: /alerts/rules
    method: GET
    data_selector: alert_rules
    params: {}
- name: alert_rule_delete
  endpoint:
    path: /alerts/rules/{id}
    method: DELETE
    data_selector: result
    params: {}
- name: triggered_alerts
  endpoint:
    path: /alert-records
    method: GET
    data_selector: records
    params:
      alert_rule_id: ALERT_RULE_ID
      start_time: datetime(2024, 9, 1)
      end_time: datetime(2024, 9, 24)
      ordering: '[''alert_time_bucket'']'
- name: alert_rule
  endpoint:
    path: /alert_rule
    method: POST
    data_selector: alert_rule
    params: {}
- name: alert_rule_list
  endpoint:
    path: /alert_rule/list
    method: GET
    data_selector: alert_rules
    params: {}
- name: alert_rule_delete
  endpoint:
    path: /alert_rule/delete
    method: DELETE
    data_selector: alert_rule
    params: {}
- name: alert_rules
  endpoint:
    path: /api/alert-rules
    method: GET
    data_selector: alert_rules
    params: {}
- name: alert_rule
  endpoint:
    path: /alert_rule
    method: POST
    data_selector: alert_rules
    params: {}
- name: triggered_alerts
  endpoint:
    path: /alert_record
    method: GET
    data_selector: triggered_alerts
    params:
      alert_rule_id: ALERT_RULE_ID
      start_time: datetime(2024, 9, 1)
      end_time: datetime(2024, 9, 24)
      ordering: alert_time_bucket
- name: alert_rule
  endpoint:
    path: /alert/rule
    method: GET
    data_selector: alerts
    params:
      alert_rule_id: 72e8835b-cde2-4dd2-a435-a35d4b51196b
- name: triggered_alerts
  endpoint:
    path: /alert/record
    method: GET
    data_selector: alerts
    params:
      alert_rule_id: 72e8835b-cde2-4dd2-a435-a35d4b51196b
      start_time: '2024-09-01'
      end_time: '2024-09-24'
      ordering:
      - alert_time_bucket
- name: baseline
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      minimum_length: 3
      maximum_length: 256
- name: model
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      minimum_length: 2
      maximum_length: 30
- name: project
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      minimum_length: 2
      maximum_length: 32
- name: webhook
  endpoint:
    path: ''
    method: ''
    data_selector: ''
    params:
      minimum_length: 2
      maximum_length: 127
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: records
- name: events
  endpoint:
    path: /api/events
    method: GET
    data_selector: records
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/v1/models
    method: GET
    data_selector: data
    params: {}
- name: PagerDuty
  endpoint:
    path: /technical-reference/integrations/alerting-integrations/pagerduty
    method: GET
- name: Slack
  endpoint:
    path: /configuration-guide/settings#configure-a-new-slack-webhook
    method: GET
- name: Custom Webhook
  endpoint:
    path: /configuration-guide/settings#configure-a-new-custom-webhook
    method: GET
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/v1/models
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /v3/projects
    method: GET
    data_selector: records
- name: project
  endpoint:
    path: /v3/projects/{project_id}
    method: GET
    data_selector: data
    params:
      project_id: string
- name: projects
  endpoint:
    path: /v3/projects
    method: GET
    data_selector: data.items
    params:
      limit: Optional
      offset: Optional
      filter: Optional
      search: Optional
      ordering: Optional
- name: create_project
  endpoint:
    path: /v3/projects
    method: POST
    data_selector: data
    params:
      name: Required
      asset_type: Required
- name: model
  endpoint:
    path: /v3/models
    method: GET
    data_selector: records
- name: models
  endpoint:
    path: /v3/models
    method: GET
    data_selector: data.items
    params:
      latest_only: 'false'
      project_id: ''
      filter: ''
      search: ''
      ordering: ''
      limit: ''
      offset: ''
- name: add_model
  endpoint:
    path: /v3/models
    method: POST
    data_selector: data
    params: {}
- name: model_details
  endpoint:
    path: /v3/models/{model_id}
    method: GET
    data_selector: data
    params: {}
- name: delete_model
  endpoint:
    path: /v3/models/{model_id}
    method: DELETE
    data_selector: data.job
    params: {}
- name: model
  endpoint:
    path: /v3/models
    method: GET
    data_selector: models
    params: {}
- name: models
  endpoint:
    path: /models/{model_id}
    method: PATCH
    data_selector: data
    params: {}
- name: model-factory
  endpoint:
    path: /model-factory
    method: POST
    data_selector: data
    params: {}
- name: deploy-artifact
  endpoint:
    path: /models/{model_id}/deploy-artifact
    method: POST
    data_selector: data
    params: {}
- name: deploy-surrogate
  endpoint:
    path: /models/{model_id}/deploy-surrogate
    method: POST
    data_selector: data
    params: {}
- name: columns
  endpoint:
    path: /models/{model_id}/columns
    method: GET
    data_selector: data
    params: {}
- name: column
  endpoint:
    path: /models/{model_id}/columns/{column_id}
    method: GET
    data_selector: data
    params: {}
- name: file_upload
  endpoint:
    path: /v3/files/upload
    method: POST
    data_selector: data
    params: {}
- name: multipart_init
  endpoint:
    path: /v3/files/multipart-init
    method: POST
    data_selector: data
    params: {}
- name: multipart_upload
  endpoint:
    path: /v3/files/multipart-upload
    method: POST
    data_selector: data
    params: {}
- name: multipart_complete
  endpoint:
    path: /v3/files/multipart-complete
    method: POST
    data_selector: data
    params: {}
- name: file_upload
  endpoint:
    path: /v3/files/upload
    method: POST
    data_selector: file
    params: {}
- name: multi_part_upload
  endpoint:
    path: /v3/files/multipart/initiate
    method: POST
    data_selector: uploadId
    params: {}
- name: custom_metrics
  endpoint:
    path: /v3/custom-metrics
    method: GET
    data_selector: data.items
    params: {}
- name: custom_metrics
  endpoint:
    path: /v3/custom-metrics
    method: GET
    data_selector: records
    params: {}
- name: custom_metric
  endpoint:
    path: /v3/custom-metrics
    method: POST
    data_selector: object
    params: {}
- name: custom_metric_detail
  endpoint:
    path: /v3/custom-metrics/{uuid}
    method: GET
    data_selector: object
    params: {}
- name: custom_metric_delete
  endpoint:
    path: /v3/custom-metrics/{uuid}
    method: DELETE
    data_selector: object
    params: {}
- name: custom_metrics_by_model
  endpoint:
    path: /v3/models/{model_id}/custom-metrics
    method: GET
    data_selector: items
    params: {}
- name: segments
  endpoint:
    path: /v3/segments
    method: GET
    data_selector: data.items
    params: {}
- name: segments
  endpoint:
    path: /v3/segments
    method: GET
    data_selector: records
    params: {}
- name: create_segment
  endpoint:
    path: /v3/segments
    method: POST
    data_selector: object
- name: detail_segment
  endpoint:
    path: /v3/segments/{uuid}
    method: GET
    data_selector: object
- name: delete_segment
  endpoint:
    path: /v3/segments/{uuid}
    method: DELETE
    data_selector: object
- name: list_segments
  endpoint:
    path: /v3/models/{model_id}/segments
    method: GET
    data_selector: items
- name: baselines
  endpoint:
    path: /v3/baselines
    method: GET
    data_selector: data.items
    params: {}
- name: baseline
  endpoint:
    path: /v3/baselines
    method: POST
    data_selector: data
    params: {}
- name: baseline_details
  endpoint:
    path: /v3/baselines/{baseline_id}
    method: GET
    data_selector: data
    params: {}
- name: delete_baseline
  endpoint:
    path: /v3/baselines/{baseline_id}
    method: DELETE
    data_selector: data
    params: {}
- name: list_baselines
  endpoint:
    path: /v3/models/{model_id}/baselines
    method: GET
    data_selector: data.items
    params: {}
- name: baseline
  endpoint:
    path: /v3/baselines
    method: GET
    data_selector: records
    params: {}
- name: jobs
  endpoint:
    path: /v3/jobs
    method: GET
    data_selector: records
- name: async_job_details
  endpoint:
    path: /v3/jobs/{job_id}
    method: GET
    data_selector: data
    params: {}
- name: all_background_jobs
  endpoint:
    path: /v3/jobs
    method: GET
    data_selector: data.items
    params: {}
- name: alert_records
  endpoint:
    path: /v3/alert-rules/{alert_id}/records
    method: GET
- name: alert_rule_summary
  endpoint:
    path: /v3/alert-rules/summary
    method: GET
- name: alert_rules
  endpoint:
    path: /v3/alert-rules
    method: GET
- name: create_alert_rule
  endpoint:
    path: /v3/alert-rules
    method: POST
- name: alert_rule_notification
  endpoint:
    path: /v3/alert-rules/{alert_id}/notification
    method: GET
- name: update_alert_rule
  endpoint:
    path: /v3/alert-rules/{alert_id}
    method: PATCH
- name: delete_alert_rule
  endpoint:
    path: /v3/alert-rules/{alert_id}
    method: DELETE
- name: alert_rules
  endpoint:
    path: /v3/alert-rules
    method: GET
    data_selector: records
    params: {}
- name: alert_rule_records
  endpoint:
    path: /v3/alert-rules/{alert_id}/records
    method: GET
    data_selector: records
    params: {}
- name: alert_records
  endpoint:
    path: /v3/alert-rules/{alert_id}/records
    method: GET
    data_selector: items
    params:
      start_time: required
      end_time: required
- name: alert_record_history
  endpoint:
    path: /v3/alert-rules/{alert_id}/record-history
    method: GET
    data_selector: items
    params:
      start_time: required
      end_time: required
- name: alert_rule_summary
  endpoint:
    path: /v3/alert-rules/summary
    method: GET
    data_selector: items
    params:
      start_time: required
      end_time: required
- name: alert_rules
  endpoint:
    path: /v3/alert-rules
    method: GET
    data_selector: items
    params: {}
- name: create_alert_rule
  endpoint:
    path: /v3/alert-rules
    method: POST
    data_selector: data
    params: {}
- name: alert_rule_notification
  endpoint:
    path: /v3/alert-rules/{alert_id}/notification
    method: GET
    data_selector: data
    params: {}
- name: create_alert_rule_notification
  endpoint:
    path: /v3/alert-rules/{alert_id}/notification
    method: POST
    data_selector: data
    params: {}
- name: update_notification
  endpoint:
    path: /v3/alert-rules/{alert_id}/notification
    method: PATCH
    data_selector: Response
    params: {}
- name: alert_rule_details
  endpoint:
    path: /v3/alert-rules/{alert_id}
    method: GET
    data_selector: Response
    params: {}
- name: delete_alert_rule
  endpoint:
    path: /v3/alert-rules/{alert_id}
    method: DELETE
    data_selector: Response
    params: {}
- name: update_alert_rule
  endpoint:
    path: /v3/alert-rules/{alert_id}
    method: PATCH
    data_selector: Response
    params: {}
- name: environment
  endpoint:
    path: /v3/environments/{env_id}
    method: GET
    data_selector: data
    params: {}
- name: model_environments
  endpoint:
    path: /v3/models/{model_id}/environments
    method: GET
    data_selector: data.items
    params: {}
- name: environments
  endpoint:
    path: /v3/environments
    method: GET
    data_selector: data.items
    params:
      type: PRE_PRODUCTION
- name: slice_query_parse
  endpoint:
    path: /v3/slice-query/parse
    method: POST
    data_selector: data
    params: {}
- name: precompute_feature_importance
  endpoint:
    path: /v3/analytics/precompute-feature-importance
    method: POST
    data_selector: object
    params: {}
- name: get_precomputed_feature_importance
  endpoint:
    path: /v3/analytics/feature-importance/precomputed
    method: POST
    data_selector: object
    params: {}
- name: get_predictions
  endpoint:
    path: /v3/predict
    method: POST
    data_selector: object
    params: {}
- name: feature_impact
  endpoint:
    path: /v3/analytics/feature-impact
    method: POST
    data_selector: data
    params: {}
- name: feature_importance
  endpoint:
    path: /v3/analytics/feature-importance
    method: POST
    data_selector: data
    params: {}
- name: model_scores
  endpoint:
    path: /v3/analytics/scores
    method: POST
    data_selector: data
    params: {}
- name: precompute_feature_impact
  endpoint:
    path: /v3/analytics/precompute-feature-impact
    method: POST
    data_selector: data
    params: {}
- name: get_precomputed_feature_impact
  endpoint:
    path: /v3/analytics/feature-impact/precomputed
    method: POST
    data_selector: data
    params: {}
- name: update_precomputed_feature_importance
  endpoint:
    path: /v3/analytics/precompute-feature-importance
    method: PUT
    data_selector: data
    params: {}
- name: server_info
  endpoint:
    path: /v3/server-info
    method: GET
    data_selector: data
- name: events
  endpoint:
    path: /v3/events
    method: PATCH
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /v3/events
    method: POST
    data_selector: data
    params: {}
- name: delete_events
  endpoint:
    path: /v3/events
    method: DELETE
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /v3/events
    method: POST
    data_selector: records
- name: evaluate_faithfulness
  endpoint:
    path: /v3/guardrails/ftl-response-faithfulness
    method: POST
    data_selector: data
    params: {}
- name: assess_safety
  endpoint:
    path: /v3/guardrails/ftl-safety
    method: POST
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: records
    params: {}
- name: ftl-safety
  endpoint:
    path: /v3/guardrails/ftl-safety
    method: POST
    data_selector: '200'
    params: {}
- name: ftl-response-faithfulness
  endpoint:
    path: /v3/guardrails/ftl-response-faithfulness
    method: POST
    data_selector: '200'
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: campaign_member
  endpoint:
    path: /services/data/vXX.X/sobjects/CampaignMember
    method: GET
    data_selector: records
    params:
      incremental: updated_at
- name: contact
  endpoint:
    path: /services/data/vXX.X/sobjects/Contact
    method: GET
    data_selector: records
    params: {}
- name: organization
  endpoint:
    path: /api/organization
    method: GET
    data_selector: data
    params: {}
- name: settings
  endpoint:
    path: /api/settings
    method: GET
    data_selector: data
    params: {}
- name: users
  endpoint:
    path: /api/users
    method: GET
    data_selector: data
    params: {}
- name: teams
  endpoint:
    path: /api/teams
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: data
    params: {}
- name: alerts
  endpoint:
    path: /api/alerts
    method: GET
    data_selector: data
    params: {}
- name: charts_dashboards
  endpoint:
    path: /api/charts_dashboards
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/v1/models
    method: GET
    data_selector: data
    params: {}
- name: sso-azuread-identity-metadata
  endpoint:
    path: /<TENANT_ID>/v2.0/.well-known/openid-configuration
    method: GET
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: data
    params: {}
- name: VPC Endpoint
  endpoint:
    path: /services/data/vXX.X/sobjects/VPCEndpoint
    method: POST
    data_selector: records
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: records
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: records
    params: {}
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: data
    params: {}
- name: projects
  endpoint:
    path: /api/v1/projects
    method: GET
    data_selector: data
    params: {}
- name: events
  endpoint:
    path: /api/v1/events
    method: GET
    data_selector: data
    params: {}
- name: FiddlerClient
  endpoint:
    path: /fiddler-langgraph
    method: POST
    data_selector: records
- name: application
  endpoint:
    path: /api/v1/application
    method: GET
    data_selector: records
- name: projects
  endpoint:
    path: /api/projects
    method: GET
    data_selector: data
    params: {}
- name: models
  endpoint:
    path: /api/models
    method: GET
    data_selector: data
    params: {}
- name: FiddlerClient
  endpoint:
    path: /fiddler-client
    method: POST
    data_selector: records
- name: tracer
  endpoint:
    path: /get_tracer
    method: GET
    data_selector: tracer
    params: {}
notes:
- AlertRule object contains various parameters to configure alerts.
- Threshold type defaults to AlertThresholdAlgo.MANUAL for user-defined thresholds.
- Uses OAuth2 with refresh token — requires setup of connected app in api
- When the version is not passed, then the model created without any version will
  be fetched. Fiddler internally assigns version=v1 when not passed.
- Threshold type defaults to manual.
- If synchronous behavior is desired.
- Since `Model` contains a lot of information, list operations does not return all
  the fields of a model.
- Instead this method returns `ModelCompact` objects on which `.fetch()` can be called
  to get the complete `Model` instance.
- For most of the use-cases, `ModelCompact` objects are sufficient.
- Requires setup of connected app in api
- Uses OAuth2 with refresh token — requires setup of connected app in Fiddler
- Uses OAuth2 with refresh token for authentication.
- Since Model contains a lot of information, list operations does not return all the
  fields of a model.
- Instead this method returns ModelCompact objects on which .fetch() can be called
  to get the complete Model instance.
- For most of the use-cases, ModelCompact objects are sufficient.
- Model deletion is an async process, hence a job object is returned on delete() call.
- Call job.wait() to wait for the job to complete. If you are planning to create a
  model with the same name, please wait for the job to complete, otherwise backend
  will not allow new model with same name.
- Requires setup of OAuth2 for API access
- Models are created without uploading actual artifacts
- Enrichments are disabled by default. To enable them, contact your administrator.
  Failing to do so will result in an error during the add_model call.
- The Model.event_id_col is required.
- Threshold types can be either manual or automatic.
- Alerts can be configured based on various conditions.
- Requires user authentication to access data.
- All endpoints return paginated results.
- Enrichments are disabled by default. To enable them, contact your administrator.
- Token Count enrichment counts the number of tokens in a string.
- SQL Validation enrichment evaluates different query dialects for syntax correctness.
- Thresholds can be defined as manual or automatic.
- Evaluation delay can be set up to 8760 hours.
- Some objects may return nulls in deeply nested fields
- Monitor, Analyze, and Protect your ML Models and Gen AI Applications
- 'Comprehensive PII Detection: Automatically detects and flags PII leakage across
  25+ categories including personal identifiers, financial data, government IDs, and
  digital identifiers'
- 'Detailed Output: Returns detected PII spans with labels, confidence scores, and
  character offsets for precise identification and redaction'
- 'Enterprise Ready: Optimized for low latency and high-scale deployment with consistent
  sub-second response times'
- 'Compliance Support: Helps meet privacy regulations like GDPR, CCPA, and HIPAA by
  preventing PII exposure'
- Requires setup of connected app in Fiddler.
- Some objects may return nulls in deeply nested fields.
- Detect problematic responses before they impact users
- Identify patterns of failure across your applications
- Track performance trends over time
- Analyze root causes when issues occur
- Fiddler is a comprehensive AI observability platform that helps data science teams
  monitor, explain, and improve their machine learning models and LLM applications
  in production.
- The Fiddler Partner AI App has been deployed and is in 'Deployed' status
- Applications run entirely within your AWS account, maintaining your existing security
  boundaries and compliance requirements
- Access partner tools directly from SageMaker Studio alongside your notebooks, models,
  and datasets
- Subscribe through AWS Marketplace with consolidated billing on your AWS invoice
- AWS handles the underlying infrastructure while you focus on using the application
- OAuth2 authentication is required, ensure proper setup.
- API may have rate limiting.
- API interfaces may change before general availability
- Some features are still under active development
- Uses API key for authentication.
- Uses API key for authentication
- Uses sample data provided by Fiddler
- Get your API key from the sign-up page.
- Free Guardrails include 200 requests per day limit
- Free Guardrails include 70 requests per hour limit
- Free Guardrails include 2 requests per second
- This API helps to monitor class imbalance in ML models.
- Uses OAuth2 with refresh token — requires setup of connected app in api.
- Public dataset from Expedia used for monitoring ranking models
- Detects and alerts issues with data drift and performance metrics
- This notebook uses the same example model leveraged in the ML Monitoring - Simple
  quick start.
- Baselines serve as a point of reference for calculating data drift.
- Baselines are crucial for monitoring and maintaining the performance of machine
  learning models.
- Custom Metrics transform standard observability into a tailored monitoring solution
  by enabling teams to implement domain-specific KPIs that complement built-in metrics
  like data drift and data integrity.
- 'Dimensionality Reduction Trade-offs: Techniques like UMAP inherently lose some
  information when reducing high-dimensional spaces to 2D or 3D.'
- 'Parameter Sensitivity: UMAP and similar algorithms require careful parameter tuning.'
- 'Computational Overhead: Generating high-quality embedding visualizations can be
  computationally intensive.'
- 'Interpretation Complexity: Users may misinterpret patterns in embedding visualizations.'
- 'Temporal Consistency: Maintaining consistent visualizations over time can be challenging.'
- 'Scalability Limitations: Visualizing very large numbers of embeddings can lead
  to overcrowded displays.'
- 'Contextual Information Loss: The original context that produced those embeddings
  may be lost in visualization.'
- 'Enrichments address a fundamental gap in AI monitoring: the ability to automatically
  assess qualitative aspects of model behavior at scale.'
- Manual evaluation of AI outputs doesn't scale to production volumes. Enrichments
  automate quality assessment.
- Enrichments automatically analyze inference data to generate metrics.
- Fiddler Guardrails is a real-time content safety solution that evaluates and filters
  potentially harmful outputs from large language models (LLMs) before they reach
  end users.
- Fiddler Guardrails integrates with the broader Fiddler platform to provide comprehensive
  protection and visibility for LLM and GenAI applications.
- Fiddler Guardrails provides real-time protection against potentially harmful, toxic,
  or inappropriate content generation.
- Guardrails helps organizations meet regulatory requirements and internal governance
  standards for responsible AI use.
- Processes evaluations within Fiddler's managed infrastructure, ensuring customer
  data never leaves the secure environment.
- LLM Observability addresses unique challenges like hallucinations, prompt effectiveness,
  safety concerns, and nuanced quality metrics.
- Effective LLM Observability enables teams to detect issues early, continuously improve
  model performance, ensure responsible AI deployment, and maintain compliance with
  evolving regulatory requirements.
- Metrics enable continuous evaluation of model accuracy, precision, recall, and other
  performance indicators to ensure models are delivering expected results.
- Statistical metrics like JSD (Jensen-Shannon Divergence) and PSI (Population Stability
  Index) help identify when input data distributions shift away from training data,
  potentially impacting model performance.
- Monitoring model drift is essential for maintaining reliable and trustworthy AI
  systems in production environments.
- Fiddler's platform allows for flexible monitoring schedules tailored to your specific
  needs and can automate this process through continuous monitoring and alerts.
- Model performance assessment is a critical component of the machine learning lifecycle.
- Effective performance monitoring helps detect degradation early.
- Fiddler acts as a unified management platform with centralized controls and actionable
  insights.
- Trust Scores provide standardized measurements for content quality assessments.
- Trust Scores serve as the critical link between automated evaluation and actionable
  insights, transforming the output of sophisticated evaluation models into interpretable
  metrics.
- Monitoring of Large Language Model (LLM) applications with Fiddler requires publication
  of the LLM application inputs and outputs.
- OpenAI API access token MUST BE provided by the user, which will be configured during
  onboarding.
- These metrics can be generated in air-gapped environments.
- Embedding visualization is a powerful technique for understanding and interpreting
  complex relationships in high-dimensional data.
- LLM enrichments are currently available in Private Preview.
- Prompt Specs are currently in private preview. This means API interfaces may change
  before general availability.
- Guardrails can be invoked directly via cURL or any HTTP client.
- We recommend setting a threshold value > .1 for detection (any value greater than
  .1 is unsafe).
- Requires a valid token to be included in the Authorization header.
- Fiddler Monitoring helps you detect performance issues in your production ML models
  and LLM applications.
- This feature allows users to temporarily pause and resume notifications for specific
  alerts without affecting their evaluation and triggering mechanisms.
- Users can set up alerts using the Fiddler API Client and the Fiddler UI.
- Manual configuration required (not enabled by default)
- Alert modifications may need team assistance
- Auto-thresholding logic continues refinement based on customer feedback
- The script only considers the first row of the RecipeParameters sheet. Any additional
  rows will be ignored.
- The webhook user ID must be the actual UUID of the webhook, not its service name.
- Fiddler monitoring provides a way for events to be weighted based on the class distribution.
- Custom metrics empower you to tailor measurements to your specific needs.
- FQL enables you to leverage your model's features, metadata, predictions, and outcomes
  for new data fields.
- Custom metrics cannot be modified once they are created.
- Requires setup of authentication via the Fiddler platform.
- Ensure to handle rate limiting appropriately.
- Monitoring chart with missing values, type violations, and range violations is available
- Requires setup of connected app in Fiddler
- Some endpoints may have rate limits
- Model versions provide a structured approach to managing related models.
- Users can create versions of existing models without disrupting existing deployments.
- 'Monitor three critical data integrity issues: missing values, incorrect data types,
  and out-of-range values that violate model input requirements.'
- You can easily download the raw chart data to CSV or parquet files.
- Saved segments cannot be modified once they are created.
- Some API endpoints may require additional permissions.
- Traffic is tracked as a basic high-level metric that informs about the model's output
  activity.
- Embedding columns you pass in must be included with the metadata columns.
- Users can define custom features by grouping dataset columns together in baseline
  and inference data.
- Fiddler provides vector monitoring capabilities that enable you to define custom
  features.
- Feature analytics is supported for any model task type, but does not support time
  stamps or columns of type string or vector.
- Ensure OAuth2 is properly configured in the Fiddler dashboard.
- Metric card is supported for any model task type and for both production and pre-production
  data.
- Clickhouse is configured using multiple shards, which means slightly different results
  can be observed if data is only selected on a specific shard.
- Ensure API tokens are managed securely
- Uses OAuth2 with refresh token
- Ensure proper permissions are granted for API access
- 'File size limits: CSV uploads are limited to 2 GB in Public Preview'
- All fundamental schema mismatches must be corrected before publication
- While you can visualize sample data in drafts, some features like saving charts
  have limitations
- Disparate impact is the only legal metric available. The other metrics are not yet
  codified in US law.
- 'Explainability can be enabled in two forms: User-Provided Model Artifacts and Fiddler
  Generated Surrogate Model'
- Some objects like Contact may return nulls in deeply nested fields
- 'Error handling: API returns detailed error messages to help resolve issues.'
- Update existing feature impact data by uploading new data for the same model.
- Model version features are supported with the image versions listed above.
- Your model might require more memory than the default setting.
- Requires a valid API key for access
- Rate limits may apply for requests
- Partner AI Apps require identity propagation to be correctly configured
- The execution role name cannot be changed after Fiddler deployment
- Admin usernames entered during deployment cannot be modified later
- Free trial deployments cannot be upgraded to paid subscriptions (requires redeployment)
- Fiddler processes model predictions and monitoring data within your existing security
  boundaries, typically avoiding the need for additional security reviews
- AWS Marketplace Access requires attaching AWSMarketplaceManageSubscriptions policy
  to IAM role
- License Manager service-linked roles are typically created automatically when first
  using License Manager features
- License Manager service-linked role will be created automatically when first used
- Non-admin users require specific permissions to use the Fiddler Partner AI App
- Enable STS identity propagation during Fiddler configuration (this is mandatory)
- Requires appropriate AWS permissions to access SageMaker resources.
- Ensure to set up execution roles for the Partner AI App.
- The application will automatically authenticate using your SageMaker credentials
- Store the Partner App environment variables at the beginning of your notebooks for
  consistent access
- The script creates roles with specific permissions following AWS's principle of
  least privilege
- All credentials are handled securely and cleaned up after use
- External IDs are used for role assumption to prevent confused deputy attacks
- Get API key from Fiddler Partner AI App UI
- Set FIDDLER_API_KEY environment variable
- This call will also validate the client vs server version compatibility.
- Some endpoints may have rate limits.
- Pre-production datasets are immutable after publication. You can't update them or
  delete individual rows.
- The Fiddler API client provides programmatic control for alert management.
- The Fiddler API client provides programmatic control for alert management alongside
  the Fiddler UI.
- PagerDuty, Slack webhooks, and custom webhooks must be pre-configured by your Fiddler
  administrator.
- Names must start with a lowercase letter (a-z)
- Names cannot contain uppercase letters, spaces, hyphens, or special characters
- API responses are paginated and include relevant pagination data.
- Uses OAuth2 for authentication
- Supports file uploads in single and multi-part formats.
- Requires OAuth2 authentication
- Requires alert_id as a path parameter for some endpoints.
- Ensure proper OAuth setup to access the API
- Rate limits may apply to API calls
- Invitations require Org Admin role to invite users.
- Password must be at least 14 characters long
- Password must contain a lowercase character
- Password must contain an uppercase character
- Password must contain only printable ASCII characters (character codes 32-127)
- Password must contain a number and a special character
- New password must be different from current one
- There is no password expiration policy
- 'Login delay of 2-4 seconds enacted when, within a 15 minute window: More than 10
  failed login attempts for the same email address, More than 15 failed login attempts
  from the same IP address'
- Users must register with Fiddler using an invitation link from their Fiddler Org
  Admin before using SSO (unless auto-provisioning is configured).
- Fiddler stores only the user's first name, last name, email address, and OIDC token.
- For API access, you need to create an access token from the 'Credentials' tab in
  Fiddler's Settings page (direct Okta authentication isn't supported for APIs).
- If users are suddenly unable to log in to Fiddler, check whether the client secret
  has expired.
- All values must be base64 encoded.
- We do not support group sync from Google Workspace.
- 'All groups must adhere to the regex pattern: fiddler_<identifier>'
- Ensure to configure OAuth2 with the connected app in Fiddler.
- Ensure you have completed initial coordination with the Fiddler team before running
  this script.
- The service_name and stack_name must be obtained from the Fiddler team.
- 'The private DNS name will be in the format: <customer-subdomain>.cloud.fiddler.ai'
- Improved log message for timeout failure on how timeout can be increased.
- 'Features evolve through defined stages: GA, Public Preview, and Private Preview.'
- No SLA for Private Preview features.
- Churn prediction is a common task for machine learning models.
- The Fiddler AI Observability platform provides various tools for monitoring, explaining,
  analyzing, and improving the performance of your ML model.
- OAuth2 with refresh token — requires setup of connected app in Fiddler
- Optimized for low latency and high-scale deployment with consistent sub-second response
  times
- Helps meet privacy regulations like GDPR, CCPA, and HIPAA by preventing PII exposure
- Uses OAuth2 with refresh token — requires setup of connected app in Fiddler.
- Client version 3.3+ is required for the updates and features mentioned in this release.
- Client version 3.1.2+ is required for the updates and features mentioned in this
  release.
- Client version 3.1.0+ is required for the updates and features mentioned in this
  release.
- Client version 3.0+ is required for the updates and features mentioned in this release.
- Currently supports LangGraph only; other frameworks require direct Client API usage
- Uses HTTP-based OTLP; gRPC support planned for future releases
- Default limits prevent oversized spans; configurable for high-volume use cases
- As an alpha release, future versions may include breaking changes
- Must provide valid UUID4 for application_id
- 'Validate Python version: python --version (should show 3.10+)'
- 'Network access: Can you reach your Fiddler instance URL? ping https://your-instance.fiddler.ai'
- Your access token is required for authentication.
- Application ID must be a valid UUID4 format.
- Uses API Key for authentication
- For security and flexibility, set environment variables for API key and application
  ID.
- Consider using environment variables for production deployments to avoid hardcoding
  credentials.
- Ensure your application ID is a valid UUID4 format.
- Ensure proper OAuth setup and permissions for user access
- Fiddler account with API credentials required
- OpenAI API key for example interactions
- API key for authenticating with Fiddler (Bearer token)
- UUID4 identifier for your application
- Must be valid UUID4
- Enable console output to debug trace generation
- Must provide a valid UUID4 application ID.
errors:
- 'Conflict: Baseline with same name may exist in project.'
- 'NotFound: Baseline with given identifier not found.'
- 'Forbidden: Current user may not have permission to view details of baseline.'
- 'NotFound: Model not found in the given project name.'
- 'Forbidden: Current user may not have permission to view details of model.'
- 'Forbidden: Current user may not have permission to the given project.'
- 'BadRequest: If field is not updatable.'
- 'KeyError: If column is not present and missing_ok is False.'
- 'NotFound: Model with given identifier not found.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency'
- 'NotFound: Resource not found'
- 'Forbidden: Current user may not have permission to view details'
- 'NotFound: AlertRule with given identifier not found.'
- 'Forbidden: Current user may not have permission to view details of AlertRule.'
- 'NOT_FOUND: Resource not found'
- 'FORBIDDEN: Permission denied for the operation'
- 'CONFLICT: Resource already exists'
- '401 Unauthorized: Recheck OAuth scopes or token expiration'
- 'NotFound: Model not found for the given identifier'
- '400 Bad Request: Validation failures or incorrect parameters.'
- '401 Unauthorized: Invalid credentials or access denied.'
- '404 Not Found: Resource not found.'
- '404 Not Found: Resource not found'
- 'Conflict: Project with same name may exist.'
- 'NotFound: Project with given identifier not found.'
- 'Forbidden: Current user may not have permission to view details.'
- 'QUERY_TIMEOUT: Break down filters or add selectivity'
- 'CONFLICT: Baseline with same name may exist in project'
- 'NOT_FOUND: Given dataset may not exist for the input model'
- 'VALUE_ERROR: Validation failures like wrong window size, start_time, end_time etc'
- '429 Too Many Requests: Throttle API calls or reduce frequency'
- '400 Bad Request: Check request format and parameters.'
- '401 Unauthorized: Verify authentication credentials.'
- '404 Not Found: Ensure endpoint exists.'
- '401 Unauthorized: Recheck API token.'
- '401 Unauthorized: Recheck API key or token expiration'
- Higher latencies may occur due to temporary usage surges
- '400 Bad Request: Check the request parameters.'
- '401 Unauthorized: Verify your authentication credentials.'
- '404 Not Found: The requested resource does not exist.'
- 'REQUEST_LIMIT_EXCEEDED: Throttle API calls or reduce frequency.'
- '401 Unauthorized: Check OAuth token or scopes'
- '404 Not Found: Ensure the endpoint is correct'
- 'INVALID_CREDENTIALS: Verify client ID and secret'
- 'RESOURCE_NOT_FOUND: Check the endpoint path or resource ID'
- '401 Unauthorized: Check your API key or OAuth token.'
- '401 Unauthorized: Check your API key or token.'
- '400 Bad Request: Check input parameters.'
- '404 Not Found: Model version not found.'
- '500 Internal Server Error: An error occurred on the server.'
- '404 Not Found: Ensure the endpoint is correct.'
- '401 Unauthorized: Check your access token and permissions.'
- '403 Forbidden: You do not have permission to access this resource.'
- '401 Unauthorized: Recheck OAuth scopes or token expiration.'
- '401 Unauthorized: Check your API key and token'
- '404 Not Found: Verify the endpoint URL'
- '500 Internal Server Error: Try again later'
- '401 Unauthorized: Check your API token and permissions'
- '404 Not Found: Verify the endpoint and resource identifiers'
- 'INVALID_API_KEY: Verify your API key'
- 'RESOURCE_NOT_FOUND: Check the endpoint or resource'
- '429 Too Many Requests: Slow down your request rate'
- '401 Unauthorized: Check your OAuth token'
- '404 Not Found: Verify the endpoint path'
- '403 Forbidden: Check AWS permissions for the role.'
- '404 Not Found: Verify the API endpoint path.'
- '401 Unauthorized: Check OAuth token.'
- '403 Forbidden: Insufficient permissions.'
- '404 Not Found: Resource does not exist.'
- '400: Bad Request - Check the request parameters.'
- '401: Unauthorized - Ensure valid authentication credentials.'
- '404: Not Found - The requested resource could not be found.'
- '400: Bad Request'
- '404: Resource not found'
- '500: Internal Server Error'
- 400 Bad Request
- 500 Internal Server Error
- 404 Resource not found
- '401: Unauthorized'
- '403: Forbidden'
- 401 Unauthorized
- 403 Forbidden
- '401 Unauthorized: Check authentication credentials'
- '404 Not Found: Check the alert rule ID'
- '400 Bad Request: Verify request parameters'
- '401 Unauthorized: Check OAuth token validity'
- 503 Upstream connect error or disconnect/reset before headers
- 501 Server does not support this action
- 400 Bad request (invalid payload or missing parameters)
- 401 Unauthorized (missing or invalid Bearer token)
- '403 Forbidden: You do not have permission to access this resource'
- '400: Invalid Input'
- '401: Invalid Auth Token'
- '404: Invalid guardrail endpoint called'
- '413: Input token length exceeds API token size limits'
- '429: Rate Limits exceeded'
- '500/503/504: Internal Server Error'
- '401 Unauthorized: Check your OAuth2 credentials.'
- '404 Not Found: Verify the endpoint path.'
- '429 Too Many Requests: Rate limit exceeded.'
- '400 Bad Request: Check request parameters.'
- 'ValueError: application_id must be a valid UUID4 string'
- 'Connection error: {e}'
- '401 Unauthorized: Check API key'
- 'Connection error: If the Fiddler instance URL is unreachable'
- 'ValueError: application_id must be a valid UUID4'
- '401 Unauthorized: Check your credentials and permissions'
- '401 Unauthorized: Check your API key and permissions.'
- 'Connection error: Exception message'
- 'Connection error: Handle gracefully - your application continues without tracing'
auth_info:
  mentioned_objects:
  - OauthToken
  - AuthProvider
  - NamedCredential
  - User
  - Organization
  - WebhookProvider
  - Org Admin
  - FiddlerClient
  - LangGraphInstrumentor
  - FIDDLER_API_KEY
  - FIDDLER_APPLICATION_ID
  - APPLICATION_ID
  - ACCESS_TOKEN
client:
  base_url: https://api.fiddler.ai
  auth:
    type: oauth2
    flow: refresh_token
    token_url: https://login.fiddler.ai/oauth2/token
    client_id: '{{ dlt.secrets[''api_client_id''] }}'
    client_secret: '{{ dlt.secrets[''api_client_secret''] }}'
    refresh_token: '{{ dlt.secrets[''api_refresh_token''] }}'
    location: header
    header_name: Authorization
  headers:
    Accept: application/json
source_metadata: null
